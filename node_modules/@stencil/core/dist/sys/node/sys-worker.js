(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 177);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

module.exports = require("typescript");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

module.exports = require("../../utils");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

var Prefixer = __webpack_require__(29);

var Browsers = __webpack_require__(21);

var utils = __webpack_require__(10);

var Declaration =
/*#__PURE__*/
function (_Prefixer) {
  _inheritsLoose(Declaration, _Prefixer);

  function Declaration() {
    return _Prefixer.apply(this, arguments) || this;
  }

  var _proto = Declaration.prototype;

  /**
     * Always true, because we already get prefixer by property name
     */
  _proto.check = function check()
  /* decl */
  {
    return true;
  }
  /**
     * Return prefixed version of property
     */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + prop;
  }
  /**
     * Return unprefixed version of property
     */
  ;

  _proto.normalize = function normalize(prop) {
    return prop;
  }
  /**
     * Check `value`, that it contain other prefixes, rather than `prefix`
     */
  ;

  _proto.otherPrefixes = function otherPrefixes(value, prefix) {
    for (var _iterator = Browsers.prefixes(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var other = _ref;

      if (other === prefix) {
        continue;
      }

      if (value.indexOf(other) !== -1) {
        return true;
      }
    }

    return false;
  }
  /**
     * Set prefix to declaration
     */
  ;

  _proto.set = function set(decl, prefix) {
    decl.prop = this.prefixed(decl.prop, prefix);
    return decl;
  }
  /**
     * Should we use visual cascade for prefixes
     */
  ;

  _proto.needCascade = function needCascade(decl) {
    if (!decl._autoprefixerCascade) {
      decl._autoprefixerCascade = this.all.options.cascade !== false && decl.raw('before').indexOf('\n') !== -1;
    }

    return decl._autoprefixerCascade;
  }
  /**
     * Return maximum length of possible prefixed property
     */
  ;

  _proto.maxPrefixed = function maxPrefixed(prefixes, decl) {
    if (decl._autoprefixerMax) {
      return decl._autoprefixerMax;
    }

    var max = 0;

    for (var _iterator2 = prefixes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var prefix = _ref2;
      prefix = utils.removeNote(prefix);

      if (prefix.length > max) {
        max = prefix.length;
      }
    }

    decl._autoprefixerMax = max;
    return decl._autoprefixerMax;
  }
  /**
     * Calculate indentation to create visual cascade
     */
  ;

  _proto.calcBefore = function calcBefore(prefixes, decl, prefix) {
    if (prefix === void 0) {
      prefix = '';
    }

    var max = this.maxPrefixed(prefixes, decl);
    var diff = max - utils.removeNote(prefix).length;
    var before = decl.raw('before');

    if (diff > 0) {
      before += Array(diff).fill(' ').join('');
    }

    return before;
  }
  /**
     * Remove visual cascade
     */
  ;

  _proto.restoreBefore = function restoreBefore(decl) {
    var lines = decl.raw('before').split('\n');
    var min = lines[lines.length - 1];
    this.all.group(decl).up(function (prefixed) {
      var array = prefixed.raw('before').split('\n');
      var last = array[array.length - 1];

      if (last.length < min.length) {
        min = last;
      }
    });
    lines[lines.length - 1] = min;
    decl.raws.before = lines.join('\n');
  }
  /**
     * Clone and insert new declaration
     */
  ;

  _proto.insert = function insert(decl, prefix, prefixes) {
    var cloned = this.set(this.clone(decl), prefix);
    if (!cloned) return undefined;
    var already = decl.parent.some(function (i) {
      return i.prop === cloned.prop && i.value === cloned.value;
    });

    if (already) {
      return undefined;
    }

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    return decl.parent.insertBefore(decl, cloned);
  }
  /**
     * Did this declaration has this prefix above
     */
  ;

  _proto.isAlready = function isAlready(decl, prefixed) {
    var already = this.all.group(decl).up(function (i) {
      return i.prop === prefixed;
    });

    if (!already) {
      already = this.all.group(decl).down(function (i) {
        return i.prop === prefixed;
      });
    }

    return already;
  }
  /**
     * Clone and add prefixes for declaration
     */
  ;

  _proto.add = function add(decl, prefix, prefixes, result) {
    var prefixed = this.prefixed(decl.prop, prefix);

    if (this.isAlready(decl, prefixed) || this.otherPrefixes(decl.value, prefix)) {
      return undefined;
    }

    return this.insert(decl, prefix, prefixes, result);
  }
  /**
     * Add spaces for visual cascade
     */
  ;

  _proto.process = function process(decl, result) {
    if (!this.needCascade(decl)) {
      _Prefixer.prototype.process.call(this, decl, result);

      return;
    }

    var prefixes = _Prefixer.prototype.process.call(this, decl, result);

    if (!prefixes || !prefixes.length) {
      return;
    }

    this.restoreBefore(decl);
    decl.raws.before = this.calcBefore(prefixes, decl);
  }
  /**
     * Return list of prefixed properties to clean old prefixes
     */
  ;

  _proto.old = function old(prop, prefix) {
    return [this.prefixed(prop, prefix)];
  };

  return Declaration;
}(Prefixer);

module.exports = Declaration;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _declaration = _interopRequireDefault(__webpack_require__(35));

var _processor = _interopRequireDefault(__webpack_require__(64));

var _stringify = _interopRequireDefault(__webpack_require__(39));

var _comment = _interopRequireDefault(__webpack_require__(41));

var _atRule = _interopRequireDefault(__webpack_require__(42));

var _vendor = _interopRequireDefault(__webpack_require__(199));

var _parse = _interopRequireDefault(__webpack_require__(40));

var _list = _interopRequireDefault(__webpack_require__(66));

var _rule = _interopRequireDefault(__webpack_require__(44));

var _root = _interopRequireDefault(__webpack_require__(67));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Create a new {@link Processor} instance that will apply `plugins`
 * as CSS processors.
 *
 * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.
 *        See {@link Processor#use} for plugin format.
 *
 * @return {Processor} Processor to process multiple CSS.
 *
 * @example
 * import postcss from 'postcss'
 *
 * postcss(plugins).process(css, { from, to }).then(result => {
 *   console.log(result.css)
 * })
 *
 * @namespace postcss
 */
function postcss() {
  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {
    plugins[_key] = arguments[_key];
  }

  if (plugins.length === 1 && Array.isArray(plugins[0])) {
    plugins = plugins[0];
  }

  return new _processor.default(plugins);
}
/**
 * Creates a PostCSS plugin with a standard API.
 *
 * The newly-wrapped function will provide both the name and PostCSS
 * version of the plugin.
 *
 * ```js
 * const processor = postcss([replace])
 * processor.plugins[0].postcssPlugin  //=> 'postcss-replace'
 * processor.plugins[0].postcssVersion //=> '6.0.0'
 * ```
 *
 * The plugin function receives 2 arguments: {@link Root}
 * and {@link Result} instance. The function should mutate the provided
 * `Root` node. Alternatively, you can create a new `Root` node
 * and override the `result.root` property.
 *
 * ```js
 * const cleaner = postcss.plugin('postcss-cleaner', () => {
 *   return (root, result) => {
 *     result.root = postcss.root()
 *   }
 * })
 * ```
 *
 * As a convenience, plugins also expose a `process` method so that you can use
 * them as standalone tools.
 *
 * ```js
 * cleaner.process(css, processOpts, pluginOpts)
 * // This is equivalent to:
 * postcss([ cleaner(pluginOpts) ]).process(css, processOpts)
 * ```
 *
 * Asynchronous plugins should return a `Promise` instance.
 *
 * ```js
 * postcss.plugin('postcss-import', () => {
 *   return (root, result) => {
 *     return new Promise( (resolve, reject) => {
 *       fs.readFile('base.css', (base) => {
 *         root.prepend(base)
 *         resolve()
 *       })
 *     })
 *   }
 * })
 * ```
 *
 * Add warnings using the {@link Node#warn} method.
 * Send data to other plugins using the {@link Result#messages} array.
 *
 * ```js
 * postcss.plugin('postcss-caniuse-test', () => {
 *   return (root, result) => {
 *     root.walkDecls(decl => {
 *       if (!caniuse.support(decl.prop)) {
 *         decl.warn(result, 'Some browsers do not support ' + decl.prop)
 *       }
 *     })
 *   }
 * })
 * ```
 *
 * @param {string} name          PostCSS plugin name. Same as in `name`
 *                               property in `package.json`. It will be saved
 *                               in `plugin.postcssPlugin` property.
 * @param {function} initializer Will receive plugin options
 *                               and should return {@link pluginFunction}
 *
 * @return {Plugin} PostCSS plugin.
 */


postcss.plugin = function plugin(name, initializer) {
  function creator() {
    var transformer = initializer.apply(void 0, arguments);
    transformer.postcssPlugin = name;
    transformer.postcssVersion = new _processor.default().version;
    return transformer;
  }

  var cache;
  Object.defineProperty(creator, 'postcss', {
    get: function get() {
      if (!cache) cache = creator();
      return cache;
    }
  });

  creator.process = function (css, processOpts, pluginOpts) {
    return postcss([creator(pluginOpts)]).process(css, processOpts);
  };

  return creator;
};
/**
 * Default function to convert a node tree into a CSS string.
 *
 * @param {Node} node       Start node for stringifing. Usually {@link Root}.
 * @param {builder} builder Function to concatenate CSS from node’s parts
 *                          or generate string and source map.
 *
 * @return {void}
 *
 * @function
 */


postcss.stringify = _stringify.default;
/**
 * Parses source css and returns a new {@link Root} node,
 * which contains the source CSS nodes.
 *
 * @param {string|toString} css   String with input CSS or any object
 *                                with toString() method, like a Buffer
 * @param {processOptions} [opts] Options with only `from` and `map` keys.
 *
 * @return {Root} PostCSS AST.
 *
 * @example
 * // Simple CSS concatenation with source map support
 * const root1 = postcss.parse(css1, { from: file1 })
 * const root2 = postcss.parse(css2, { from: file2 })
 * root1.append(root2).toResult().css
 *
 * @function
 */

postcss.parse = _parse.default;
/**
 * Contains the {@link vendor} module.
 *
 * @type {vendor}
 *
 * @example
 * postcss.vendor.unprefixed('-moz-tab') //=> ['tab']
 */

postcss.vendor = _vendor.default;
/**
 * Contains the {@link list} module.
 *
 * @member {list}
 *
 * @example
 * postcss.list.space('5px calc(10% + 5px)') //=> ['5px', 'calc(10% + 5px)']
 */

postcss.list = _list.default;
/**
 * Creates a new {@link Comment} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {Comment} New comment node
 *
 * @example
 * postcss.comment({ text: 'test' })
 */

postcss.comment = function (defaults) {
  return new _comment.default(defaults);
};
/**
 * Creates a new {@link AtRule} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {AtRule} new at-rule node
 *
 * @example
 * postcss.atRule({ name: 'charset' }).toString() //=> "@charset"
 */


postcss.atRule = function (defaults) {
  return new _atRule.default(defaults);
};
/**
 * Creates a new {@link Declaration} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {Declaration} new declaration node
 *
 * @example
 * postcss.decl({ prop: 'color', value: 'red' }).toString() //=> "color: red"
 */


postcss.decl = function (defaults) {
  return new _declaration.default(defaults);
};
/**
 * Creates a new {@link Rule} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {Rule} new rule node
 *
 * @example
 * postcss.rule({ selector: 'a' }).toString() //=> "a {\n}"
 */


postcss.rule = function (defaults) {
  return new _rule.default(defaults);
};
/**
 * Creates a new {@link Root} node.
 *
 * @param {object} [defaults] Properties for the new node.
 *
 * @return {Root} new root node.
 *
 * @example
 * postcss.root({ after: '\n' }).toString() //=> "\n"
 */


postcss.root = function (defaults) {
  return new _root.default(defaults);
};

var _default = postcss;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var parse = __webpack_require__(963);
var walk = __webpack_require__(964);
var stringify = __webpack_require__(965);

function ValueParser(value) {
  if (this instanceof ValueParser) {
    this.nodes = parse(value);
    return this;
  }
  return new ValueParser(value);
}

ValueParser.prototype.toString = function() {
  return Array.isArray(this.nodes) ? stringify(this.nodes) : "";
};

ValueParser.prototype.walk = function(cb, bubble) {
  walk(this.nodes, cb, bubble);
  return this;
};

ValueParser.unit = __webpack_require__(966);

ValueParser.walk = walk;

ValueParser.stringify = stringify;

module.exports = ValueParser;


/***/ }),
/* 5 */
/***/ (function(module, exports) {

module.exports = require("path");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

var fs = __webpack_require__(13)
var polyfills = __webpack_require__(178)
var legacy = __webpack_require__(180)
var clone = __webpack_require__(182)

var queue = []

var util = __webpack_require__(34)

function noop () {}

var debug = noop
if (util.debuglog)
  debug = util.debuglog('gfs4')
else if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || ''))
  debug = function() {
    var m = util.format.apply(util, arguments)
    m = 'GFS4: ' + m.split(/\n/).join('\nGFS4: ')
    console.error(m)
  }

if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || '')) {
  process.on('exit', function() {
    debug(queue)
    __webpack_require__(183).equal(queue.length, 0)
  })
}

module.exports = patch(clone(fs))
if (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {
    module.exports = patch(fs)
    fs.__patched = true;
}

// Always patch fs.close/closeSync, because we want to
// retry() whenever a close happens *anywhere* in the program.
// This is essential when multiple graceful-fs instances are
// in play at the same time.
module.exports.close = (function (fs$close) { return function (fd, cb) {
  return fs$close.call(fs, fd, function (err) {
    if (!err)
      retry()

    if (typeof cb === 'function')
      cb.apply(this, arguments)
  })
}})(fs.close)

module.exports.closeSync = (function (fs$closeSync) { return function (fd) {
  // Note that graceful-fs also retries when fs.closeSync() fails.
  // Looks like a bug to me, although it's probably a harmless one.
  var rval = fs$closeSync.apply(fs, arguments)
  retry()
  return rval
}})(fs.closeSync)

// Only patch fs once, otherwise we'll run into a memory leak if
// graceful-fs is loaded multiple times, such as in test environments that
// reset the loaded modules between tests.
// We look for the string `graceful-fs` from the comment above. This
// way we are not adding any extra properties and it will detect if older
// versions of graceful-fs are installed.
if (!/\bgraceful-fs\b/.test(fs.closeSync.toString())) {
  fs.closeSync = module.exports.closeSync;
  fs.close = module.exports.close;
}

function patch (fs) {
  // Everything that references the open() function needs to be in here
  polyfills(fs)
  fs.gracefulify = patch
  fs.FileReadStream = ReadStream;  // Legacy name.
  fs.FileWriteStream = WriteStream;  // Legacy name.
  fs.createReadStream = createReadStream
  fs.createWriteStream = createWriteStream
  var fs$readFile = fs.readFile
  fs.readFile = readFile
  function readFile (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$readFile(path, options, cb)

    function go$readFile (path, options, cb) {
      return fs$readFile(path, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$readFile, [path, options, cb]])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
          retry()
        }
      })
    }
  }

  var fs$writeFile = fs.writeFile
  fs.writeFile = writeFile
  function writeFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$writeFile(path, data, options, cb)

    function go$writeFile (path, data, options, cb) {
      return fs$writeFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$writeFile, [path, data, options, cb]])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
          retry()
        }
      })
    }
  }

  var fs$appendFile = fs.appendFile
  if (fs$appendFile)
    fs.appendFile = appendFile
  function appendFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$appendFile(path, data, options, cb)

    function go$appendFile (path, data, options, cb) {
      return fs$appendFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$appendFile, [path, data, options, cb]])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
          retry()
        }
      })
    }
  }

  var fs$readdir = fs.readdir
  fs.readdir = readdir
  function readdir (path, options, cb) {
    var args = [path]
    if (typeof options !== 'function') {
      args.push(options)
    } else {
      cb = options
    }
    args.push(go$readdir$cb)

    return go$readdir(args)

    function go$readdir$cb (err, files) {
      if (files && files.sort)
        files.sort()

      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
        enqueue([go$readdir, [args]])

      else {
        if (typeof cb === 'function')
          cb.apply(this, arguments)
        retry()
      }
    }
  }

  function go$readdir (args) {
    return fs$readdir.apply(fs, args)
  }

  if (process.version.substr(0, 4) === 'v0.8') {
    var legStreams = legacy(fs)
    ReadStream = legStreams.ReadStream
    WriteStream = legStreams.WriteStream
  }

  var fs$ReadStream = fs.ReadStream
  if (fs$ReadStream) {
    ReadStream.prototype = Object.create(fs$ReadStream.prototype)
    ReadStream.prototype.open = ReadStream$open
  }

  var fs$WriteStream = fs.WriteStream
  if (fs$WriteStream) {
    WriteStream.prototype = Object.create(fs$WriteStream.prototype)
    WriteStream.prototype.open = WriteStream$open
  }

  fs.ReadStream = ReadStream
  fs.WriteStream = WriteStream

  function ReadStream (path, options) {
    if (this instanceof ReadStream)
      return fs$ReadStream.apply(this, arguments), this
    else
      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)
  }

  function ReadStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        if (that.autoClose)
          that.destroy()

        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
        that.read()
      }
    })
  }

  function WriteStream (path, options) {
    if (this instanceof WriteStream)
      return fs$WriteStream.apply(this, arguments), this
    else
      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)
  }

  function WriteStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        that.destroy()
        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
      }
    })
  }

  function createReadStream (path, options) {
    return new ReadStream(path, options)
  }

  function createWriteStream (path, options) {
    return new WriteStream(path, options)
  }

  var fs$open = fs.open
  fs.open = open
  function open (path, flags, mode, cb) {
    if (typeof mode === 'function')
      cb = mode, mode = null

    return go$open(path, flags, mode, cb)

    function go$open (path, flags, mode, cb) {
      return fs$open(path, flags, mode, function (err, fd) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$open, [path, flags, mode, cb]])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
          retry()
        }
      })
    }
  }

  return fs
}

function enqueue (elem) {
  debug('ENQUEUE', elem[0].name, elem[1])
  queue.push(elem)
}

function retry () {
  var elem = queue.shift()
  if (elem) {
    debug('RETRY', elem[0].name, elem[1])
    elem[0].apply(null, elem[1])
  }
}


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var YAMLException = __webpack_require__(23);

var TYPE_CONSTRUCTOR_OPTIONS = [
  'kind',
  'resolve',
  'construct',
  'instanceOf',
  'predicate',
  'represent',
  'defaultStyle',
  'styleAliases'
];

var YAML_NODE_KINDS = [
  'scalar',
  'sequence',
  'mapping'
];

function compileStyleAliases(map) {
  var result = {};

  if (map !== null) {
    Object.keys(map).forEach(function (style) {
      map[style].forEach(function (alias) {
        result[String(alias)] = style;
      });
    });
  }

  return result;
}

function Type(tag, options) {
  options = options || {};

  Object.keys(options).forEach(function (name) {
    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {
      throw new YAMLException('Unknown option "' + name + '" is met in definition of "' + tag + '" YAML type.');
    }
  });

  // TODO: Add tag format check.
  this.tag          = tag;
  this.kind         = options['kind']         || null;
  this.resolve      = options['resolve']      || function () { return true; };
  this.construct    = options['construct']    || function (data) { return data; };
  this.instanceOf   = options['instanceOf']   || null;
  this.predicate    = options['predicate']    || null;
  this.represent    = options['represent']    || null;
  this.defaultStyle = options['defaultStyle'] || null;
  this.styleAliases = compileStyleAliases(options['styleAliases'] || null);

  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {
    throw new YAMLException('Unknown kind "' + this.kind + '" is specified for "' + tag + '" YAML type.');
  }
}

module.exports = Type;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var TAG = exports.TAG = 'tag';
var STRING = exports.STRING = 'string';
var SELECTOR = exports.SELECTOR = 'selector';
var ROOT = exports.ROOT = 'root';
var PSEUDO = exports.PSEUDO = 'pseudo';
var NESTING = exports.NESTING = 'nesting';
var ID = exports.ID = 'id';
var COMMENT = exports.COMMENT = 'comment';
var COMBINATOR = exports.COMBINATOR = 'combinator';
var CLASS = exports.CLASS = 'class';
var ATTRIBUTE = exports.ATTRIBUTE = 'attribute';
var UNIVERSAL = exports.UNIVERSAL = 'universal';

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var TAG = exports.TAG = 'tag';
var STRING = exports.STRING = 'string';
var SELECTOR = exports.SELECTOR = 'selector';
var ROOT = exports.ROOT = 'root';
var PSEUDO = exports.PSEUDO = 'pseudo';
var NESTING = exports.NESTING = 'nesting';
var ID = exports.ID = 'id';
var COMMENT = exports.COMMENT = 'comment';
var COMBINATOR = exports.COMBINATOR = 'combinator';
var CLASS = exports.CLASS = 'class';
var ATTRIBUTE = exports.ATTRIBUTE = 'attribute';
var UNIVERSAL = exports.UNIVERSAL = 'universal';

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var list = __webpack_require__(3).list;

module.exports = {
  /**
     * Throw special error, to tell beniary,
     * that this error is from Autoprefixer.
     */
  error: function error(text) {
    var err = new Error(text);
    err.autoprefixer = true;
    throw err;
  },

  /**
     * Return array, that doesn’t contain duplicates.
     */
  uniq: function uniq(array) {
    var filtered = [];

    for (var _iterator = array, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var i = _ref;

      if (filtered.indexOf(i) === -1) {
        filtered.push(i);
      }
    }

    return filtered;
  },

  /**
     * Return "-webkit-" on "-webkit- old"
     */
  removeNote: function removeNote(string) {
    if (string.indexOf(' ') === -1) {
      return string;
    }

    return string.split(' ')[0];
  },

  /**
     * Escape RegExp symbols
     */
  escapeRegexp: function escapeRegexp(string) {
    return string.replace(/[.?*+^$[\]\\(){}|-]/g, '\\$&');
  },

  /**
     * Return regexp to check, that CSS string contain word
     */
  regexp: function regexp(word, escape) {
    if (escape === void 0) {
      escape = true;
    }

    if (escape) {
      word = this.escapeRegexp(word);
    }

    return new RegExp("(^|[\\s,(])(" + word + "($|[\\s(,]))", 'gi');
  },

  /**
     * Change comma list
     */
  editList: function editList(value, callback) {
    var origin = list.comma(value);
    var changed = callback(origin, []);

    if (origin === changed) {
      return value;
    }

    var join = value.match(/,\s*/);
    join = join ? join[0] : ', ';
    return changed.join(join);
  },

  /**
     * Split the selector into parts.
     * It returns 3 level deep array because selectors can be comma
     * separated (1), space separated (2), and combined (3)
     * @param {String} selector selector string
     * @return {Array<Array<Array>>} 3 level deep array of split selector
     * @see utils.test.js for examples
     */
  splitSelector: function splitSelector(selector) {
    return list.comma(selector).map(function (i) {
      return list.space(i).map(function (k) {
        return k.split(/(?=\.|#)/g);
      });
    });
  }
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Return flexbox spec versions by prefix
 */
module.exports = function (prefix) {
  var spec;

  if (prefix === '-webkit- 2009' || prefix === '-moz-') {
    spec = 2009;
  } else if (prefix === '-ms-') {
    spec = 2012;
  } else if (prefix === '-webkit-') {
    spec = 'final';
  }

  if (prefix === '-webkit- 2009') {
    prefix = '-webkit-';
  }

  return [spec, prefix];
};

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

var vendor = __webpack_require__(3).vendor;

var Prefixer = __webpack_require__(29);

var OldValue = __webpack_require__(30);

var utils = __webpack_require__(10);

var Value =
/*#__PURE__*/
function (_Prefixer) {
  _inheritsLoose(Value, _Prefixer);

  function Value() {
    return _Prefixer.apply(this, arguments) || this;
  }

  /**
     * Clone decl for each prefixed values
     */
  Value.save = function save(prefixes, decl) {
    var _this = this;

    var prop = decl.prop;
    var result = [];

    var _loop = function _loop(prefix) {
      var value = decl._autoprefixerValues[prefix];

      if (value === decl.value) {
        return "continue";
      }

      var item = void 0;
      var propPrefix = vendor.prefix(prop);

      if (propPrefix === '-pie-') {
        return "continue";
      }

      if (propPrefix === prefix) {
        item = decl.value = value;
        result.push(item);
        return "continue";
      }

      var prefixed = prefixes.prefixed(prop, prefix);
      var rule = decl.parent;

      if (!rule.every(function (i) {
        return i.prop !== prefixed;
      })) {
        result.push(item);
        return "continue";
      }

      var trimmed = value.replace(/\s+/, ' ');
      var already = rule.some(function (i) {
        return i.prop === decl.prop && i.value.replace(/\s+/, ' ') === trimmed;
      });

      if (already) {
        result.push(item);
        return "continue";
      }

      var cloned = _this.clone(decl, {
        value: value
      });

      item = decl.parent.insertBefore(decl, cloned);
      result.push(item);
    };

    for (var prefix in decl._autoprefixerValues) {
      var _ret = _loop(prefix);

      if (_ret === "continue") continue;
    }

    return result;
  }
  /**
     * Is declaration need to be prefixed
     */
  ;

  var _proto = Value.prototype;

  _proto.check = function check(decl) {
    var value = decl.value;

    if (value.indexOf(this.name) === -1) {
      return false;
    }

    return !!value.match(this.regexp());
  }
  /**
     * Lazy regexp loading
     */
  ;

  _proto.regexp = function regexp() {
    return this.regexpCache || (this.regexpCache = utils.regexp(this.name));
  }
  /**
     * Add prefix to values in string
     */
  ;

  _proto.replace = function replace(string, prefix) {
    return string.replace(this.regexp(), "$1" + prefix + "$2");
  }
  /**
     * Get value with comments if it was not changed
     */
  ;

  _proto.value = function value(decl) {
    if (decl.raws.value && decl.raws.value.value === decl.value) {
      return decl.raws.value.raw;
    } else {
      return decl.value;
    }
  }
  /**
     * Save values with next prefixed token
     */
  ;

  _proto.add = function add(decl, prefix) {
    if (!decl._autoprefixerValues) {
      decl._autoprefixerValues = {};
    }

    var value = decl._autoprefixerValues[prefix] || this.value(decl);
    var before;

    do {
      before = value;
      value = this.replace(value, prefix);
      if (value === false) return;
    } while (value !== before);

    decl._autoprefixerValues[prefix] = value;
  }
  /**
     * Return function to fast find prefixed value
     */
  ;

  _proto.old = function old(prefix) {
    return new OldValue(this.name, prefix + this.name);
  };

  return Value;
}(Prefixer);

module.exports = Value;

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = require("fs");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

var jsReleases = __webpack_require__(250)
var agents = __webpack_require__(71).agents
var jsEOL = __webpack_require__(254)
var path = __webpack_require__(5)
var e2c = __webpack_require__(255)

var BrowserslistError = __webpack_require__(73)
var env = __webpack_require__(256) // Will load browser.js in webpack

var FLOAT_RANGE = /^\d+(\.\d+)?(-\d+(\.\d+)?)*$/
var YEAR = 365.259641 * 24 * 60 * 60 * 1000

// Enum values MUST be powers of 2, so combination are safe
/** @constant {number} */
var QUERY_OR = 1
/** @constant {number} */
var QUERY_AND = 2

function isVersionsMatch (versionA, versionB) {
  return (versionA + '.').indexOf(versionB + '.') === 0
}

function isEolReleased (name) {
  var version = name.slice(1)
  return jsReleases.some(function (i) {
    return isVersionsMatch(i.version, version)
  })
}

function normalize (versions) {
  return versions.filter(function (version) {
    return typeof version === 'string'
  })
}

function normalizeElectron (version) {
  var versionToUse = version
  if (version.split('.').length === 3) {
    versionToUse = version
      .split('.')
      .slice(0, -1)
      .join('.')
  }
  return versionToUse
}

function nameMapper (name) {
  return function mapName (version) {
    return name + ' ' + version
  }
}

function getMajor (version) {
  return parseInt(version.split('.')[0])
}

function getMajorVersions (released, number) {
  if (released.length === 0) return []
  var minimum = getMajor(released[released.length - 1]) - parseInt(number) + 1
  var selected = []
  for (var i = released.length - 1; i >= 0; i--) {
    if (minimum > getMajor(released[i])) break
    selected.unshift(released[i])
  }
  return selected
}

function uniq (array) {
  var filtered = []
  for (var i = 0; i < array.length; i++) {
    if (filtered.indexOf(array[i]) === -1) filtered.push(array[i])
  }
  return filtered
}

// Helpers

function fillUsage (result, name, data) {
  for (var i in data) {
    result[name + ' ' + i] = data[i]
  }
}

function generateFilter (sign, version) {
  version = parseFloat(version)
  if (sign === '>') {
    return function (v) {
      return parseFloat(v) > version
    }
  } else if (sign === '>=') {
    return function (v) {
      return parseFloat(v) >= version
    }
  } else if (sign === '<') {
    return function (v) {
      return parseFloat(v) < version
    }
  } else {
    return function (v) {
      return parseFloat(v) <= version
    }
  }
}

function generateSemverFilter (sign, version) {
  version = version.split('.').map(parseSimpleInt)
  version[1] = version[1] || 0
  version[2] = version[2] || 0
  if (sign === '>') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(v, version) > 0
    }
  } else if (sign === '>=') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(v, version) >= 0
    }
  } else if (sign === '<') {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(version, v) > 0
    }
  } else {
    return function (v) {
      v = v.split('.').map(parseSimpleInt)
      return compareSemver(version, v) >= 0
    }
  }
}

function parseSimpleInt (x) {
  return parseInt(x)
}

function compare (a, b) {
  if (a < b) return -1
  if (a > b) return +1
  return 0
}

function compareSemver (a, b) {
  return (
    compare(a[0], b[0]) ||
    compare(a[1], b[1]) ||
    compare(a[2], b[2])
  )
}

function resolveVersion (data, version) {
  if (data.versions.indexOf(version) !== -1) {
    return version
  } else if (browserslist.versionAliases[data.name][version]) {
    return browserslist.versionAliases[data.name][version]
  } else {
    return false
  }
}

function normalizeVersion (data, version, context) {
  var resolved = resolveVersion(data, version)
  if (
    !resolved &&
    context.mobileToDesktop &&
    browserslist.desktopNames[data.name]
  ) {
    var alias = checkName(browserslist.desktopNames[data.name])
    resolved = resolveVersion(alias, version)
  }
  if (resolved) {
    return resolved
  } else if (data.versions.length === 1) {
    return data.versions[0]
  } else {
    return false
  }
}

function filterByYear (since) {
  since = since / 1000
  return Object.keys(agents).reduce(function (selected, name) {
    var data = byName(name)
    if (!data) return selected
    var versions = Object.keys(data.releaseDate).filter(function (v) {
      return data.releaseDate[v] >= since
    })
    return selected.concat(versions.map(nameMapper(data.name)))
  }, [])
}

function byName (name) {
  name = name.toLowerCase()
  name = browserslist.aliases[name] || name
  return browserslist.data[name]
}

function checkName (name) {
  var data = byName(name)
  if (!data) throw new BrowserslistError('Unknown browser ' + name)
  return data
}

function unknownQuery (query) {
  return new BrowserslistError(
    'Unknown browser query `' + query + '`. ' +
    'Maybe you are using old Browserslist or made typo in query.'
  )
}

function filterAndroid (list, versions) {
  var released = browserslist.data.android.released
  var firstEvergreen = 37
  var last = released[released.length - 1]
  var diff = last - firstEvergreen - versions // First Android Evergreen
  if (diff > 0) {
    return list.slice(-1)
  } else {
    return list.slice(diff - 1)
  }
}

/**
 * Resolves queries into a browser list.
 * @param {string|string[]} queries Queries to combine.
 * Either an array of queries or a long string of queries.
 * @param {object} [context] Optional arguments to
 * the select function in `queries`.
 * @returns {string[]} A list of browsers
 */
function resolve (queries, context) {
  if (Array.isArray(queries)) {
    queries = flatten(queries.map(parse))
  } else {
    queries = parse(queries)
  }

  return queries.reduce(function (result, query, index) {
    var selection = query.queryString

    var isExclude = selection.indexOf('not ') === 0
    if (isExclude) {
      if (index === 0) {
        throw new BrowserslistError(
          'Write any browsers query (for instance, `defaults`) ' +
          'before `' + selection + '`')
      }
      selection = selection.slice(4)
    }

    for (var i = 0; i < QUERIES.length; i++) {
      var type = QUERIES[i]
      var match = selection.match(type.regexp)
      if (match) {
        var args = [context].concat(match.slice(1))
        var array = type.select.apply(browserslist, args).map(function (j) {
          var parts = j.split(' ')
          if (parts[1] === '0') {
            return parts[0] + ' ' + byName(parts[0]).versions[0]
          } else {
            return j
          }
        })

        switch (query.type) {
          case QUERY_AND:
            if (isExclude) {
              return result.filter(function (j) {
                // remove result items that are in array
                // (the relative complement of array in result)
                return array.indexOf(j) === -1
              })
            } else {
              return result.filter(function (j) {
                // remove result items not in array
                // (intersect of result and array)
                return array.indexOf(j) !== -1
              })
            }
          case QUERY_OR:
          default:
            if (isExclude) {
              var filter = { }
              array.forEach(function (j) {
                filter[j] = true
              })
              return result.filter(function (j) {
                return !filter[j]
              })
            }
            // union of result and array
            return result.concat(array)
        }
      }
    }

    throw unknownQuery(selection)
  }, [])
}

/**
 * Return array of browsers by selection queries.
 *
 * @param {(string|string[])} [queries=browserslist.defaults] Browser queries.
 * @param {object} [opts] Options.
 * @param {string} [opts.path="."] Path to processed file.
 *                                 It will be used to find config files.
 * @param {string} [opts.env="production"] Processing environment.
 *                                         It will be used to take right
 *                                         queries from config file.
 * @param {string} [opts.config] Path to config file with queries.
 * @param {object} [opts.stats] Custom browser usage statistics
 *                              for "> 1% in my stats" query.
 * @param {boolean} [opts.ignoreUnknownVersions=false] Do not throw on unknown
 *                                                     version in direct query.
 * @param {boolean} [opts.dangerousExtend] Disable security checks
 *                                         for extend query.
 * @param {boolean} [opts.mobileToDesktop] Alias mobile browsers to the desktop
 *                                         version when Can I Use doesn't have
 *                                         data about the specified version.
 * @returns {string[]} Array with browser names in Can I Use.
 *
 * @example
 * browserslist('IE >= 10, IE 8') //=> ['ie 11', 'ie 10', 'ie 8']
 */
function browserslist (queries, opts) {
  if (typeof opts === 'undefined') opts = { }

  if (typeof opts.path === 'undefined') {
    opts.path = path.resolve ? path.resolve('.') : '.'
  }

  if (typeof queries === 'undefined' || queries === null) {
    var config = browserslist.loadConfig(opts)
    if (config) {
      queries = config
    } else {
      queries = browserslist.defaults
    }
  }

  if (!(typeof queries === 'string' || Array.isArray(queries))) {
    throw new BrowserslistError(
      'Browser queries must be an array or string. Got ' + typeof queries + '.')
  }

  var context = {
    ignoreUnknownVersions: opts.ignoreUnknownVersions,
    dangerousExtend: opts.dangerousExtend,
    mobileToDesktop: opts.mobileToDesktop
  }

  env.oldDataWarning(browserslist.data)
  var stats = env.getStat(opts, browserslist.data)
  if (stats) {
    context.customUsage = { }
    for (var browser in stats) {
      fillUsage(context.customUsage, browser, stats[browser])
    }
  }

  var result = resolve(queries, context).sort(function (name1, name2) {
    name1 = name1.split(' ')
    name2 = name2.split(' ')
    if (name1[0] === name2[0]) {
      if (FLOAT_RANGE.test(name1[1]) && FLOAT_RANGE.test(name2[1])) {
        return parseFloat(name2[1]) - parseFloat(name1[1])
      } else {
        return compare(name2[1], name1[1])
      }
    } else {
      return compare(name1[0], name2[0])
    }
  })

  return uniq(result)
}

/**
 * @typedef {object} BrowserslistQuery
 * @property {number} type A type constant like QUERY_OR @see QUERY_OR.
 * @property {string} queryString A query like "not ie < 11".
 */

/**
 * Parse a browserslist string query
 * @param {string} queries One or more queries as a string
 * @returns {BrowserslistQuery[]} An array of BrowserslistQuery
 */
function parse (queries) {
  var qs = []

  do {
    queries = doMatch(queries, qs)
  } while (queries)

  return qs
}

/**
 * Find query matches in a string. This function is meant to be called
 * repeatedly with the returned query string until there is no more matches.
 * @param {string} string A string with one or more queries.
 * @param {BrowserslistQuery[]} qs Out parameter,
 * will be filled with `BrowserslistQuery`.
 * @returns {string} The rest of the query string minus the matched part.
 */
function doMatch (string, qs) {
  var or = /^(?:,\s*|\s+OR\s+)(.*)/i
  var and = /^\s+AND\s+(.*)/i

  return find(string, function (parsed, n, max) {
    if (and.test(parsed)) {
      qs.unshift({ type: QUERY_AND, queryString: parsed.match(and)[1] })
      return true
    } else if (or.test(parsed)) {
      qs.unshift({ type: QUERY_OR, queryString: parsed.match(or)[1] })
      return true
    } else if (n === max) {
      qs.unshift({ type: QUERY_OR, queryString: parsed.trim() })
      return true
    }
    return false
  })
}

function find (string, predicate) {
  for (var n = 1, max = string.length; n <= max; n++) {
    var parsed = string.substr(-n, n)
    if (predicate(parsed, n, max)) {
      return string.slice(0, -n)
    }
  }
  return ''
}

function flatten (array) {
  if (!Array.isArray(array)) return [array]
  return array.reduce(function (a, b) {
    return a.concat(flatten(b))
  }, [])
}

// Will be filled by Can I Use data below
browserslist.data = { }
browserslist.usage = {
  global: { },
  custom: null
}

// Default browsers query
browserslist.defaults = [
  '> 0.5%',
  'last 2 versions',
  'Firefox ESR',
  'not dead'
]

// Browser names aliases
browserslist.aliases = {
  fx: 'firefox',
  ff: 'firefox',
  ios: 'ios_saf',
  explorer: 'ie',
  blackberry: 'bb',
  explorermobile: 'ie_mob',
  operamini: 'op_mini',
  operamobile: 'op_mob',
  chromeandroid: 'and_chr',
  firefoxandroid: 'and_ff',
  ucandroid: 'and_uc',
  qqandroid: 'and_qq'
}

// Can I Use only provides a few versions for some browsers (e.g. and_chr).
// Fallback to a similar browser for unknown versions
browserslist.desktopNames = {
  and_chr: 'chrome',
  and_ff: 'firefox',
  ie_mob: 'ie',
  op_mob: 'opera'
}

// Aliases to work with joined versions like `ios_saf 7.0-7.1`
browserslist.versionAliases = { }

browserslist.clearCaches = env.clearCaches
browserslist.parseConfig = env.parseConfig
browserslist.readConfig = env.readConfig
browserslist.findConfig = env.findConfig
browserslist.loadConfig = env.loadConfig

/**
 * Return browsers market coverage.
 *
 * @param {string[]} browsers Browsers names in Can I Use.
 * @param {string|object} [stats="global"] Which statistics should be used.
 *                                         Country code or custom statistics.
 *                                         Pass `"my stats"` to load statistics
 *                                         from Browserslist files.
 *
 * @return {number} Total market coverage for all selected browsers.
 *
 * @example
 * browserslist.coverage(browserslist('> 1% in US'), 'US') //=> 83.1
 */
browserslist.coverage = function (browsers, stats) {
  var data
  if (typeof stats === 'undefined') {
    data = browserslist.usage.global
  } else if (stats === 'my stats') {
    var opts = {}
    opts.path = path.resolve ? path.resolve('.') : '.'
    var customStats = env.getStat(opts)
    if (!customStats) {
      throw new BrowserslistError('Custom usage statistics was not provided')
    }
    data = {}
    for (var browser in customStats) {
      fillUsage(data, browser, customStats[browser])
    }
  } else if (typeof stats === 'string') {
    if (stats.length > 2) {
      stats = stats.toLowerCase()
    } else {
      stats = stats.toUpperCase()
    }
    env.loadCountry(browserslist.usage, stats)
    data = browserslist.usage[stats]
  } else {
    if ('dataByBrowser' in stats) {
      stats = stats.dataByBrowser
    }
    data = { }
    for (var name in stats) {
      for (var version in stats[name]) {
        data[name + ' ' + version] = stats[name][version]
      }
    }
  }

  return browsers.reduce(function (all, i) {
    var usage = data[i]
    if (usage === undefined) {
      usage = data[i.replace(/ \S+$/, ' 0')]
    }
    return all + (usage || 0)
  }, 0)
}

var QUERIES = [
  {
    regexp: /^last\s+(\d+)\s+major\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name)
        if (!data) return selected
        var list = getMajorVersions(data.released, versions)
        list = list.map(nameMapper(data.name))
        if (data.name === 'android') list = filterAndroid(list, versions)
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^last\s+(\d+)\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name)
        if (!data) return selected
        var list = data.released.slice(-versions)
        list = list.map(nameMapper(data.name))
        if (data.name === 'android') list = filterAndroid(list, versions)
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^last\s+(\d+)\s+electron\s+major\s+versions?$/i,
    select: function (context, versions) {
      var validVersions = getMajorVersions(Object.keys(e2c).reverse(), versions)
      return validVersions.map(function (i) {
        return 'chrome ' + e2c[i]
      })
    }
  },
  {
    regexp: /^last\s+(\d+)\s+(\w+)\s+major\s+versions?$/i,
    select: function (context, versions, name) {
      var data = checkName(name)
      var validVersions = getMajorVersions(data.released, versions)
      var list = validVersions.map(nameMapper(data.name))
      if (data.name === 'android') list = filterAndroid(list, versions)
      return list
    }
  },
  {
    regexp: /^last\s+(\d+)\s+electron\s+versions?$/i,
    select: function (context, versions) {
      return Object.keys(e2c).reverse().slice(-versions).map(function (i) {
        return 'chrome ' + e2c[i]
      })
    }
  },
  {
    regexp: /^last\s+(\d+)\s+(\w+)\s+versions?$/i,
    select: function (context, versions, name) {
      var data = checkName(name)
      var list = data.released.slice(-versions).map(nameMapper(data.name))
      if (data.name === 'android') list = filterAndroid(list, versions)
      return list
    }
  },
  {
    regexp: /^unreleased\s+versions$/i,
    select: function () {
      return Object.keys(agents).reduce(function (selected, name) {
        var data = byName(name)
        if (!data) return selected
        var list = data.versions.filter(function (v) {
          return data.released.indexOf(v) === -1
        })
        list = list.map(nameMapper(data.name))
        return selected.concat(list)
      }, [])
    }
  },
  {
    regexp: /^unreleased\s+electron\s+versions?$/i,
    select: function () {
      return []
    }
  },
  {
    regexp: /^unreleased\s+(\w+)\s+versions?$/i,
    select: function (context, name) {
      var data = checkName(name)
      return data.versions.filter(function (v) {
        return data.released.indexOf(v) === -1
      }).map(nameMapper(data.name))
    }
  },
  {
    regexp: /^last\s+(\d*.?\d+)\s+years?$/i,
    select: function (context, years) {
      return filterByYear(Date.now() - YEAR * years)
    }
  },
  {
    regexp: /^since (\d+)(?:-(\d+))?(?:-(\d+))?$/i,
    select: function (context, year, month, date) {
      year = parseInt(year)
      month = parseInt(month || '01') - 1
      date = parseInt(date || '01')
      return filterByYear(Date.UTC(year, month, date, 0, 0, 0))
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d*\.?\d+)%$/,
    select: function (context, sign, popularity) {
      popularity = parseFloat(popularity)
      var usage = browserslist.usage.global
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version)
          }
        } else if (usage[version] >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d*\.?\d+)%\s+in\s+my\s+stats$/,
    select: function (context, sign, popularity) {
      popularity = parseFloat(popularity)
      if (!context.customUsage) {
        throw new BrowserslistError('Custom usage statistics was not provided')
      }
      var usage = context.customUsage
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version)
          }
        } else if (usage[version] >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^(>=?|<=?)\s*(\d*\.?\d+)%\s+in\s+((alt-)?\w\w)$/,
    select: function (context, sign, popularity, place) {
      popularity = parseFloat(popularity)
      if (place.length === 2) {
        place = place.toUpperCase()
      } else {
        place = place.toLowerCase()
      }
      env.loadCountry(browserslist.usage, place)
      var usage = browserslist.usage[place]
      return Object.keys(usage).reduce(function (result, version) {
        if (sign === '>') {
          if (usage[version] > popularity) {
            result.push(version)
          }
        } else if (sign === '<') {
          if (usage[version] < popularity) {
            result.push(version)
          }
        } else if (sign === '<=') {
          if (usage[version] <= popularity) {
            result.push(version)
          }
        } else if (usage[version] >= popularity) {
          result.push(version)
        }
        return result
      }, [])
    }
  },
  {
    regexp: /^cover\s+(\d*\.?\d+)%(\s+in\s+(my\s+stats|(alt-)?\w\w))?$/,
    select: function (context, coverage, statMode) {
      coverage = parseFloat(coverage)
      var usage = browserslist.usage.global
      if (statMode) {
        if (statMode.match(/^\s+in\s+my\s+stats$/)) {
          if (!context.customUsage) {
            throw new BrowserslistError(
              'Custom usage statistics was not provided'
            )
          }
          usage = context.customUsage
        } else {
          var match = statMode.match(/\s+in\s+((alt-)?\w\w)/)
          var place = match[1]
          if (place.length === 2) {
            place = place.toUpperCase()
          } else {
            place = place.toLowerCase()
          }
          env.loadCountry(browserslist.usage, place)
          usage = browserslist.usage[place]
        }
      }
      var versions = Object.keys(usage).sort(function (a, b) {
        return usage[b] - usage[a]
      })
      var coveraged = 0
      var result = []
      var version
      for (var i = 0; i <= versions.length; i++) {
        version = versions[i]
        if (usage[version] === 0) break
        coveraged += usage[version]
        result.push(version)
        if (coveraged >= coverage) break
      }
      return result
    }
  },
  {
    regexp: /^electron\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, from, to) {
      var fromToUse = normalizeElectron(from)
      var toToUse = normalizeElectron(to)
      if (!e2c[fromToUse]) {
        throw new BrowserslistError('Unknown version ' + from + ' of electron')
      }
      if (!e2c[toToUse]) {
        throw new BrowserslistError('Unknown version ' + to + ' of electron')
      }
      from = parseFloat(from)
      to = parseFloat(to)
      return Object.keys(e2c).filter(function (i) {
        var parsed = parseFloat(i)
        return parsed >= from && parsed <= to
      }).map(function (i) {
        return 'chrome ' + e2c[i]
      })
    }
  },
  {
    regexp: /^(\w+)\s+([\d.]+)\s*-\s*([\d.]+)$/i,
    select: function (context, name, from, to) {
      var data = checkName(name)
      from = parseFloat(normalizeVersion(data, from, context) || from)
      to = parseFloat(normalizeVersion(data, to, context) || to)
      function filter (v) {
        var parsed = parseFloat(v)
        return parsed >= from && parsed <= to
      }
      return data.released.filter(filter).map(nameMapper(data.name))
    }
  },
  {
    regexp: /^electron\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, sign, version) {
      var versionToUse = normalizeElectron(version)
      return Object.keys(e2c)
        .filter(generateFilter(sign, versionToUse))
        .map(function (i) {
          return 'chrome ' + e2c[i]
        })
    }
  },
  {
    regexp: /^node\s*(>=?|<=?)\s*([\d.]+)$/i,
    select: function (context, sign, version) {
      var nodeVersions = jsReleases.filter(function (i) {
        return i.name === 'nodejs'
      }).map(function (i) {
        return i.version
      })
      return nodeVersions
        .filter(generateSemverFilter(sign, version))
        .map(function (v) {
          return 'node ' + v
        })
    }
  },
  {
    regexp: /^(\w+)\s*(>=?|<=?)\s*([\d.]+)$/,
    select: function (context, name, sign, version) {
      var data = checkName(name)
      var alias = browserslist.versionAliases[data.name][version]
      if (alias) {
        version = alias
      }
      return data.released
        .filter(generateFilter(sign, version))
        .map(function (v) {
          return data.name + ' ' + v
        })
    }
  },
  {
    regexp: /^(firefox|ff|fx)\s+esr$/i,
    select: function () {
      return ['firefox 60']
    }
  },
  {
    regexp: /(operamini|op_mini)\s+all/i,
    select: function () {
      return ['op_mini all']
    }
  },
  {
    regexp: /^electron\s+([\d.]+)$/i,
    select: function (context, version) {
      var versionToUse = normalizeElectron(version)
      var chrome = e2c[versionToUse]
      if (!chrome) {
        throw new BrowserslistError(
          'Unknown version ' + version + ' of electron')
      }
      return ['chrome ' + chrome]
    }
  },
  {
    regexp: /^node\s+(\d+(\.\d+)?(\.\d+)?)$/i,
    select: function (context, version) {
      var nodeReleases = jsReleases.filter(function (i) {
        return i.name === 'nodejs'
      })
      var matched = nodeReleases.filter(function (i) {
        return isVersionsMatch(i.version, version)
      })
      if (matched.length === 0) {
        if (context.ignoreUnknownVersions) {
          return []
        } else {
          throw new BrowserslistError(
            'Unknown version ' + version + ' of Node.js')
        }
      }
      return ['node ' + matched[matched.length - 1].version]
    }
  },
  {
    regexp: /^current\s+node$/i,
    select: function (context) {
      return [env.currentNode(resolve, context)]
    }
  },
  {
    regexp: /^maintained\s+node\s+versions$/i,
    select: function (context) {
      var now = Date.now()
      var queries = Object.keys(jsEOL).filter(function (key) {
        return now < Date.parse(jsEOL[key].end) &&
          now > Date.parse(jsEOL[key].start) &&
          isEolReleased(key)
      }).map(function (key) {
        return 'node ' + key.slice(1)
      })
      return resolve(queries, context)
    }
  },
  {
    regexp: /^(\w+)\s+(tp|[\d.]+)$/i,
    select: function (context, name, version) {
      if (/^tp$/i.test(version)) version = 'TP'
      var data = checkName(name)
      var alias = normalizeVersion(data, version, context)
      if (alias) {
        version = alias
      } else {
        if (version.indexOf('.') === -1) {
          alias = version + '.0'
        } else {
          alias = version.replace(/\.0$/, '')
        }
        alias = normalizeVersion(data, alias, context)
        if (alias) {
          version = alias
        } else if (context.ignoreUnknownVersions) {
          return []
        } else {
          throw new BrowserslistError(
            'Unknown version ' + version + ' of ' + name)
        }
      }
      return [data.name + ' ' + version]
    }
  },
  {
    regexp: /^extends (.+)$/i,
    select: function (context, name) {
      return resolve(env.loadQueries(context, name), context)
    }
  },
  {
    regexp: /^defaults$/i,
    select: function () {
      return browserslist(browserslist.defaults)
    }
  },
  {
    regexp: /^dead$/i,
    select: function (context) {
      var dead = ['ie <= 10', 'ie_mob <= 10', 'bb <= 10', 'op_mob <= 12.1']
      return resolve(dead, context)
    }
  },
  {
    regexp: /^(\w+)$/i,
    select: function (context, name) {
      if (byName(name)) {
        throw new BrowserslistError(
          'Specify versions in Browserslist query for browser ' + name)
      } else {
        throw unknownQuery(name)
      }
    }
  }
];

// Get and convert Can I Use data

(function () {
  for (var name in agents) {
    var browser = agents[name]
    browserslist.data[name] = {
      name: name,
      versions: normalize(agents[name].versions),
      released: normalize(agents[name].versions.slice(0, -3)),
      releaseDate: agents[name].release_date
    }
    fillUsage(browserslist.usage.global, name, browser.usage_global)

    browserslist.versionAliases[name] = { }
    for (var i = 0; i < browser.versions.length; i++) {
      var full = browser.versions[i]
      if (!full) continue

      if (full.indexOf('-') !== -1) {
        var interval = full.split('-')
        for (var j = 0; j < interval.length; j++) {
          browserslist.versionAliases[name][interval[j]] = full
        }
      }
    }
  }
}())

module.exports = browserslist


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = getArguments;
function getArguments(node) {
    return node.nodes.reduce((list, child) => {
        if (child.type !== 'div') {
            list[list.length - 1].push(child);
        } else {
            list.push([]);
        }
        return list;
    }, [[]]);
}
module.exports = exports['default'];

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parser = __webpack_require__(4);

var list = __webpack_require__(3).list;

var uniq = __webpack_require__(10).uniq;

var escapeRegexp = __webpack_require__(10).escapeRegexp;

var splitSelector = __webpack_require__(10).splitSelector;

function convert(value) {
  if (value && value.length === 2 && value[0] === 'span' && parseInt(value[1], 10) > 0) {
    return [false, parseInt(value[1], 10)];
  }

  if (value && value.length === 1 && parseInt(value[0], 10) > 0) {
    return [parseInt(value[0], 10), false];
  }

  return [false, false];
}

function translate(values, startIndex, endIndex) {
  var startValue = values[startIndex];
  var endValue = values[endIndex];

  if (!startValue) {
    return [false, false];
  }

  var _convert = convert(startValue),
      start = _convert[0],
      spanStart = _convert[1];

  var _convert2 = convert(endValue),
      end = _convert2[0],
      spanEnd = _convert2[1];

  if (start && !endValue) {
    return [start, false];
  }

  if (spanStart && end) {
    return [end - spanStart, spanStart];
  }

  if (start && spanEnd) {
    return [start, spanEnd];
  }

  if (start && end) {
    return [start, end - start];
  }

  return [false, false];
}

function parse(decl) {
  var node = parser(decl.value);
  var values = [];
  var current = 0;
  values[current] = [];

  for (var _iterator = node.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var i = _ref;

    if (i.type === 'div') {
      current += 1;
      values[current] = [];
    } else if (i.type === 'word') {
      values[current].push(i.value);
    }
  }

  return values;
}

function insertDecl(decl, prop, value) {
  if (value && !decl.parent.some(function (i) {
    return i.prop === "-ms-" + prop;
  })) {
    decl.cloneBefore({
      prop: "-ms-" + prop,
      value: value.toString()
    });
  }
} // Track transforms


function prefixTrackProp(_ref2) {
  var prop = _ref2.prop,
      prefix = _ref2.prefix;
  return prefix + prop.replace('template-', '');
}

function transformRepeat(_ref3, _ref4) {
  var nodes = _ref3.nodes;
  var gap = _ref4.gap;

  var _nodes$reduce = nodes.reduce(function (result, node) {
    if (node.type === 'div' && node.value === ',') {
      result.key = 'size';
    } else {
      result[result.key].push(parser.stringify(node));
    }

    return result;
  }, {
    key: 'count',
    size: [],
    count: []
  }),
      count = _nodes$reduce.count,
      size = _nodes$reduce.size; // insert gap values


  if (gap) {
    var _ret = function () {
      size = size.filter(function (i) {
        return i.trim();
      });
      var val = [];

      var _loop = function _loop(i) {
        size.forEach(function (item, index) {
          if (index > 0 || i > 1) {
            val.push(gap);
          }

          val.push(item);
        });
      };

      for (var i = 1; i <= count; i++) {
        _loop(i);
      }

      return {
        v: val.join(' ')
      };
    }();

    if (typeof _ret === "object") return _ret.v;
  }

  return "(" + size.join('') + ")[" + count.join('') + "]";
}

function prefixTrackValue(_ref5) {
  var value = _ref5.value,
      gap = _ref5.gap;
  var result = parser(value).nodes.reduce(function (nodes, node) {
    if (node.type === 'function' && node.value === 'repeat') {
      return nodes.concat({
        type: 'word',
        value: transformRepeat(node, {
          gap: gap
        })
      });
    }

    if (gap && node.type === 'space') {
      return nodes.concat({
        type: 'space',
        value: ' '
      }, {
        type: 'word',
        value: gap
      }, node);
    }

    return nodes.concat(node);
  }, []);
  return parser.stringify(result);
} // Parse grid-template-areas


var DOTS = /^\.+$/;

function track(start, end) {
  return {
    start: start,
    end: end,
    span: end - start
  };
}

function getColumns(line) {
  return line.trim().split(/\s+/g);
}

function parseGridAreas(_ref6) {
  var rows = _ref6.rows,
      gap = _ref6.gap;
  return rows.reduce(function (areas, line, rowIndex) {
    if (gap.row) rowIndex *= 2;
    if (line.trim() === '') return areas;
    getColumns(line).forEach(function (area, columnIndex) {
      if (DOTS.test(area)) return;
      if (gap.column) columnIndex *= 2;

      if (typeof areas[area] === 'undefined') {
        areas[area] = {
          column: track(columnIndex + 1, columnIndex + 2),
          row: track(rowIndex + 1, rowIndex + 2)
        };
      } else {
        var _areas$area = areas[area],
            column = _areas$area.column,
            row = _areas$area.row;
        column.start = Math.min(column.start, columnIndex + 1);
        column.end = Math.max(column.end, columnIndex + 2);
        column.span = column.end - column.start;
        row.start = Math.min(row.start, rowIndex + 1);
        row.end = Math.max(row.end, rowIndex + 2);
        row.span = row.end - row.start;
      }
    });
    return areas;
  }, {});
} // Parse grid-template


function testTrack(node) {
  return node.type === 'word' && /^\[.+\]$/.test(node.value);
}

function verifyRowSize(result) {
  if (result.areas.length > result.rows.length) {
    result.rows.push('auto');
  }

  return result;
}

function parseTemplate(_ref7) {
  var decl = _ref7.decl,
      gap = _ref7.gap;
  var gridTemplate = parser(decl.value).nodes.reduce(function (result, node) {
    var type = node.type,
        value = node.value;
    if (testTrack(node) || type === 'space') return result; // area

    if (type === 'string') {
      result = verifyRowSize(result);
      result.areas.push(value);
    } // values and function


    if (type === 'word' || type === 'function') {
      result[result.key].push(parser.stringify(node));
    } // divider(/)


    if (type === 'div' && value === '/') {
      result.key = 'columns';
      result = verifyRowSize(result);
    }

    return result;
  }, {
    key: 'rows',
    columns: [],
    rows: [],
    areas: []
  });
  return {
    areas: parseGridAreas({
      rows: gridTemplate.areas,
      gap: gap
    }),
    columns: prefixTrackValue({
      value: gridTemplate.columns.join(' '),
      gap: gap.column
    }),
    rows: prefixTrackValue({
      value: gridTemplate.rows.join(' '),
      gap: gap.row
    })
  };
} // Insert parsed grid areas

/**
 * Get an array of -ms- prefixed props and values
 * @param  {Object} [area] area object with column and row data
 * @param  {Boolean} [addRowSpan] should we add grid-column-row value?
 * @param  {Boolean} [addColumnSpan] should we add grid-column-span value?
 * @return {Array<Object>}
 */


function getMSDecls(area, addRowSpan, addColumnSpan) {
  if (addRowSpan === void 0) {
    addRowSpan = false;
  }

  if (addColumnSpan === void 0) {
    addColumnSpan = false;
  }

  return [].concat({
    prop: '-ms-grid-row',
    value: String(area.row.start)
  }, area.row.span > 1 || addRowSpan ? {
    prop: '-ms-grid-row-span',
    value: String(area.row.span)
  } : [], {
    prop: '-ms-grid-column',
    value: String(area.column.start)
  }, area.column.span > 1 || addColumnSpan ? {
    prop: '-ms-grid-column-span',
    value: String(area.column.span)
  } : []);
}

function getParentMedia(parent) {
  if (parent.type === 'atrule' && parent.name === 'media') {
    return parent;
  }

  if (!parent.parent) {
    return false;
  }

  return getParentMedia(parent.parent);
}
/**
 * change selectors for rules with duplicate grid-areas.
 * @param  {Array<Rule>} rules
 * @param  {Array<String>} templateSelectors
 * @return {Array<Rule>} rules with changed selectors
 */


function changeDuplicateAreaSelectors(ruleSelectors, templateSelectors) {
  ruleSelectors = ruleSelectors.map(function (selector) {
    var selectorBySpace = list.space(selector);
    var selectorByComma = list.comma(selector);

    if (selectorBySpace.length > selectorByComma.length) {
      selector = selectorBySpace.slice(-1).join('');
    }

    return selector;
  });
  return ruleSelectors.map(function (ruleSelector) {
    var newSelector = templateSelectors.map(function (tplSelector, index) {
      var space = index === 0 ? '' : ' ';
      return "" + space + tplSelector + " > " + ruleSelector;
    });
    return newSelector;
  });
}
/**
 * check if selector of rules are equal
 * @param  {Rule} ruleA
 * @param  {Rule} ruleB
 * @return {Boolean}
 */


function selectorsEqual(ruleA, ruleB) {
  return ruleA.selectors.some(function (sel) {
    return ruleB.selectors.some(function (s) {
      return s === sel;
    });
  });
}
/**
 * Parse data from all grid-template(-areas) declarations
 * @param  {Root} css css root
 * @return {Object} parsed data
 */


function parseGridTemplatesData(css) {
  var parsed = []; // we walk through every grid-template(-areas) declaration and store
  // data with the same area names inside the item

  css.walkDecls(/grid-template(-areas)?$/, function (d) {
    var rule = d.parent;
    var media = getParentMedia(rule);
    var gap = getGridGap(d);
    var inheritedGap = inheritGridGap(d, gap);

    var _parseTemplate = parseTemplate({
      decl: d,
      gap: inheritedGap || gap
    }),
        areas = _parseTemplate.areas;

    var areaNames = Object.keys(areas); // skip node if it doesn't have areas

    if (areaNames.length === 0) {
      return true;
    } // check parsed array for item that include the same area names
    // return index of that item


    var index = parsed.reduce(function (acc, _ref8, idx) {
      var allAreas = _ref8.allAreas;
      var hasAreas = allAreas && areaNames.some(function (area) {
        return allAreas.includes(area);
      });
      return hasAreas ? idx : acc;
    }, null);

    if (index !== null) {
      // index is found, add the grid-template data to that item
      var _parsed$index = parsed[index],
          allAreas = _parsed$index.allAreas,
          rules = _parsed$index.rules; // check if rule has no duplicate area names

      var hasNoDuplicates = rules.some(function (r) {
        return r.hasDuplicates === false && selectorsEqual(r, rule);
      });
      var duplicatesFound = false; // check need to gather all duplicate area names

      var duplicateAreaNames = rules.reduce(function (acc, r) {
        if (!r.params && selectorsEqual(r, rule)) {
          duplicatesFound = true;
          return r.duplicateAreaNames;
        }

        if (!duplicatesFound) {
          areaNames.forEach(function (name) {
            if (r.areas[name]) {
              acc.push(name);
            }
          });
        }

        return uniq(acc);
      }, []); // update grid-row/column-span values for areas with duplicate
      // area names. @see #1084 and #1146

      rules.forEach(function (r) {
        areaNames.forEach(function (name) {
          var area = r.areas[name];

          if (area && area.row.span !== areas[name].row.span) {
            areas[name].row.updateSpan = true;
          }

          if (area && area.column.span !== areas[name].column.span) {
            areas[name].column.updateSpan = true;
          }
        });
      });
      parsed[index].allAreas = uniq([].concat(allAreas, areaNames));
      parsed[index].rules.push({
        hasDuplicates: !hasNoDuplicates,
        params: media.params,
        selectors: rule.selectors,
        node: rule,
        duplicateAreaNames: duplicateAreaNames,
        areas: areas
      });
    } else {
      // index is NOT found, push the new item to the parsed array
      parsed.push({
        allAreas: areaNames,
        areasCount: 0,
        rules: [{
          hasDuplicates: false,
          duplicateRules: [],
          params: media.params,
          selectors: rule.selectors,
          node: rule,
          duplicateAreaNames: [],
          areas: areas
        }]
      });
    }

    return undefined;
  });
  return parsed;
}
/**
 * insert prefixed grid-area declarations
 * @param  {Root}  css css root
 * @param  {Function} isDisabled check if the rule is disabled
 * @return {void}
 */


function insertAreas(css, isDisabled) {
  // parse grid-template declarations
  var gridTemplatesData = parseGridTemplatesData(css); // return undefined if no declarations found

  if (gridTemplatesData.length === 0) {
    return undefined;
  } // we need to store the rules that we will insert later


  var rulesToInsert = {};
  css.walkDecls('grid-area', function (gridArea) {
    var gridAreaRule = gridArea.parent;
    var hasPrefixedRow = gridAreaRule.first.prop === '-ms-grid-row';
    var gridAreaMedia = getParentMedia(gridAreaRule);

    if (isDisabled(gridArea)) {
      return undefined;
    }

    var gridAreaRuleIndex = gridAreaMedia ? css.index(gridAreaMedia) : css.index(gridAreaRule);
    var value = gridArea.value; // found the data that matches grid-area identifier

    var data = gridTemplatesData.filter(function (d) {
      return d.allAreas.includes(value);
    })[0];

    if (!data) {
      return true;
    }

    var lastArea = data.allAreas[data.allAreas.length - 1];
    var selectorBySpace = list.space(gridAreaRule.selector);
    var selectorByComma = list.comma(gridAreaRule.selector);
    var selectorIsComplex = selectorBySpace.length > 1 && selectorBySpace.length > selectorByComma.length; // prevent doubling of prefixes

    if (hasPrefixedRow) {
      return false;
    } // create the empty object with the key as the last area name
    // e.g if we have templates with "a b c" values, "c" will be the last area


    if (!rulesToInsert[lastArea]) {
      rulesToInsert[lastArea] = {};
    }

    var lastRuleIsSet = false; // walk through every grid-template rule data

    for (var _iterator2 = data.rules, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref9;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref9 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref9 = _i2.value;
      }

      var rule = _ref9;
      var area = rule.areas[value];
      var hasDuplicateName = rule.duplicateAreaNames.includes(value); // if we can't find the area name, update lastRule and continue

      if (!area) {
        var lastRuleIndex = css.index(rulesToInsert[lastArea].lastRule);

        if (gridAreaRuleIndex > lastRuleIndex) {
          rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;
        }

        continue;
      } // for grid-templates inside media rule we need to create empty
      // array to push prefixed grid-area rules later


      if (rule.params && !rulesToInsert[lastArea][rule.params]) {
        rulesToInsert[lastArea][rule.params] = [];
      }

      if ((!rule.hasDuplicates || !hasDuplicateName) && !rule.params) {
        // grid-template has no duplicates and not inside media rule
        getMSDecls(area, false, false).reverse().forEach(function (i) {
          return gridAreaRule.prepend(Object.assign(i, {
            raws: {
              between: gridArea.raws.between
            }
          }));
        });
        rulesToInsert[lastArea].lastRule = gridAreaRule;
        lastRuleIsSet = true;
      } else if (rule.hasDuplicates && !rule.params && !selectorIsComplex) {
        (function () {
          // grid-template has duplicates and not inside media rule
          var cloned = gridAreaRule.clone();
          cloned.removeAll();
          getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(function (i) {
            return cloned.prepend(Object.assign(i, {
              raws: {
                between: gridArea.raws.between
              }
            }));
          });
          cloned.selectors = changeDuplicateAreaSelectors(cloned.selectors, rule.selectors);

          if (rulesToInsert[lastArea].lastRule) {
            rulesToInsert[lastArea].lastRule.after(cloned);
          }

          rulesToInsert[lastArea].lastRule = cloned;
          lastRuleIsSet = true;
        })();
      } else if (rule.hasDuplicates && !rule.params && selectorIsComplex && gridAreaRule.selector.includes(rule.selectors[0])) {
        // grid-template has duplicates and not inside media rule
        // and the selector is complex
        gridAreaRule.walkDecls(/-ms-grid-(row|column)/, function (d) {
          return d.remove();
        });
        getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(function (i) {
          return gridAreaRule.prepend(Object.assign(i, {
            raws: {
              between: gridArea.raws.between
            }
          }));
        });
      } else if (rule.params) {
        (function () {
          // grid-template is inside media rule
          // if we're inside media rule, we need to store prefixed rules
          // inside rulesToInsert object to be able to preserve the order of media
          // rules and merge them easily
          var cloned = gridAreaRule.clone();
          cloned.removeAll();
          getMSDecls(area, area.row.updateSpan, area.column.updateSpan).reverse().forEach(function (i) {
            return cloned.prepend(Object.assign(i, {
              raws: {
                between: gridArea.raws.between
              }
            }));
          });

          if (rule.hasDuplicates && hasDuplicateName) {
            cloned.selectors = changeDuplicateAreaSelectors(cloned.selectors, rule.selectors);
          }

          cloned.raws = rule.node.raws;

          if (css.index(rule.node.parent) > gridAreaRuleIndex) {
            // append the prefixed rules right inside media rule
            // with grid-template
            rule.node.parent.append(cloned);
          } else {
            // store the rule to insert later
            rulesToInsert[lastArea][rule.params].push(cloned);
          } // set new rule as last rule ONLY if we didn't set lastRule for
          // this grid-area before


          if (!lastRuleIsSet) {
            rulesToInsert[lastArea].lastRule = gridAreaMedia || gridAreaRule;
          }
        })();
      }
    }

    return undefined;
  }); // append stored rules inside the media rules

  Object.keys(rulesToInsert).forEach(function (area) {
    var data = rulesToInsert[area];
    var lastRule = data.lastRule;
    Object.keys(data).reverse().filter(function (p) {
      return p !== 'lastRule';
    }).forEach(function (params) {
      if (data[params].length > 0 && lastRule) {
        lastRule.after({
          name: 'media',
          params: params
        });
        lastRule.next().append(data[params]);
      }
    });
  });
  return undefined;
}
/**
 * Warn user if grid area identifiers are not found
 * @param  {Object} areas
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */


function warnMissedAreas(areas, decl, result) {
  var missed = Object.keys(areas);
  decl.root().walkDecls('grid-area', function (gridArea) {
    missed = missed.filter(function (e) {
      return e !== gridArea.value;
    });
  });

  if (missed.length > 0) {
    decl.warn(result, 'Can not find grid areas: ' + missed.join(', '));
  }

  return undefined;
}
/**
 * compare selectors with grid-area rule and grid-template rule
 * show warning if grid-template selector is not found
 * (this function used for grid-area rule)
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */


function warnTemplateSelectorNotFound(decl, result) {
  var rule = decl.parent;
  var root = decl.root();
  var duplicatesFound = false; // slice selector array. Remove the last part (for comparison)

  var slicedSelectorArr = list.space(rule.selector).filter(function (str) {
    return str !== '>';
  }).slice(0, -1); // we need to compare only if selector is complex.
  // e.g '.grid-cell' is simple, but '.parent > .grid-cell' is complex

  if (slicedSelectorArr.length > 0) {
    var gridTemplateFound = false;
    var foundAreaSelector = null;
    root.walkDecls(/grid-template(-areas)?$/, function (d) {
      var parent = d.parent;
      var templateSelectors = parent.selectors;

      var _parseTemplate2 = parseTemplate({
        decl: d,
        gap: getGridGap(d)
      }),
          areas = _parseTemplate2.areas;

      var hasArea = areas[decl.value]; // find the the matching selectors

      for (var _iterator3 = templateSelectors, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        var _ref10;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref10 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref10 = _i3.value;
        }

        var tplSelector = _ref10;

        if (gridTemplateFound) {
          break;
        }

        var tplSelectorArr = list.space(tplSelector).filter(function (str) {
          return str !== '>';
        });
        gridTemplateFound = tplSelectorArr.every(function (item, idx) {
          return item === slicedSelectorArr[idx];
        });
      }

      if (gridTemplateFound || !hasArea) {
        return true;
      }

      if (!foundAreaSelector) {
        foundAreaSelector = parent.selector;
      } // if we found the duplicate area with different selector


      if (foundAreaSelector && foundAreaSelector !== parent.selector) {
        duplicatesFound = true;
      }

      return undefined;
    }); // warn user if we didn't find template

    if (!gridTemplateFound && duplicatesFound) {
      decl.warn(result, "Autoprefixer cannot find a grid-template " + ("containing the duplicate grid-area \"" + decl.value + "\" ") + ("with full selector matching: " + slicedSelectorArr.join(' ')));
    }
  }
}
/**
 * warn user if both grid-area and grid-(row|column)
 * declarations are present in the same rule
 * @param  {Declaration} decl
 * @param  {Result} result
 * @return {void}
 */


function warnIfGridRowColumnExists(decl, result) {
  var rule = decl.parent;
  var decls = [];
  rule.walkDecls(/^grid-(row|column)/, function (d) {
    if (!/-end$/.test(d.prop) && !/^span/.test(d.value)) {
      decls.push(d);
    }
  });

  if (decls.length > 0) {
    decls.forEach(function (d) {
      d.warn(result, "You already have a grid-area declaration present in the rule. " + ("You should use either grid-area or " + d.prop + ", not both"));
    });
  }

  return undefined;
} // Gap utils


function getGridGap(decl) {
  var gap = {}; // try to find gap

  var testGap = /^(grid-)?((row|column)-)?gap$/;
  decl.parent.walkDecls(testGap, function (_ref11) {
    var prop = _ref11.prop,
        value = _ref11.value;

    if (/^(grid-)?gap$/.test(prop)) {
      var _parser$nodes = parser(value).nodes,
          row = _parser$nodes[0],
          column = _parser$nodes[2];
      gap.row = row && parser.stringify(row);
      gap.column = column ? parser.stringify(column) : gap.row;
    }

    if (/^(grid-)?row-gap$/.test(prop)) gap.row = value;
    if (/^(grid-)?column-gap$/.test(prop)) gap.column = value;
  });
  return gap;
}
/**
 * parse media parameters (for example 'min-width: 500px')
 * @param  {String} params parameter to parse
 * @return {}
 */


function parseMediaParams(params) {
  if (!params) {
    return false;
  }

  var parsed = parser(params);
  var prop;
  var value;
  parsed.walk(function (node) {
    if (node.type === 'word' && /min|max/g.test(node.value)) {
      prop = node.value;
    } else if (node.value.includes('px')) {
      value = parseInt(node.value.replace(/\D/g, ''));
    }
  });
  return [prop, value];
}
/**
 * Compare the selectors and decide if we
 * need to inherit gap from compared selector or not.
 * @type {String} selA
 * @type {String} selB
 * @return {Boolean}
 */


function shouldInheritGap(selA, selB) {
  var result; // get arrays of selector split in 3-deep array

  var splitSelectorArrA = splitSelector(selA);
  var splitSelectorArrB = splitSelector(selB);

  if (splitSelectorArrA[0].length < splitSelectorArrB[0].length) {
    // abort if selectorA has lower descendant specificity then selectorB
    // (e.g '.grid' and '.hello .world .grid')
    return false;
  } else if (splitSelectorArrA[0].length > splitSelectorArrB[0].length) {
    // if selectorA has higher descendant specificity then selectorB
    // (e.g '.foo .bar .grid' and '.grid')
    var idx = splitSelectorArrA[0].reduce(function (res, _ref12, index) {
      var item = _ref12[0];
      var firstSelectorPart = splitSelectorArrB[0][0][0];

      if (item === firstSelectorPart) {
        return index;
      }

      return false;
    }, false);

    if (idx) {
      result = splitSelectorArrB[0].every(function (arr, index) {
        return arr.every(function (part, innerIndex) {
          return (// because selectorA has more space elements, we need to slice
            // selectorA array by 'idx' number to compare them
            splitSelectorArrA[0].slice(idx)[index][innerIndex] === part
          );
        });
      });
    }
  } else {
    // if selectorA has the same descendant specificity as selectorB
    // this condition covers cases such as: '.grid.foo.bar' and '.grid'
    result = splitSelectorArrB.some(function (byCommaArr) {
      return byCommaArr.every(function (bySpaceArr, index) {
        return bySpaceArr.every(function (part, innerIndex) {
          return splitSelectorArrA[0][index][innerIndex] === part;
        });
      });
    });
  }

  return result;
}
/**
 * inherit grid gap values from the closest rule above
 * with the same selector
 * @param  {Declaration} decl
 * @param  {Object} gap gap values
 * @return {Object | Boolean} return gap values or false (if not found)
 */


function inheritGridGap(decl, gap) {
  var rule = decl.parent;
  var mediaRule = getParentMedia(rule);
  var root = rule.root(); // get an array of selector split in 3-deep array

  var splitSelectorArr = splitSelector(rule.selector); // abort if the rule already has gaps

  if (Object.keys(gap).length > 0) {
    return false;
  } // e.g ['min-width']


  var _parseMediaParams = parseMediaParams(mediaRule.params),
      prop = _parseMediaParams[0];

  var lastBySpace = splitSelectorArr[0]; // get escaped value from the selector
  // if we have '.grid-2.foo.bar' selector, will be '\.grid\-2'

  var escaped = escapeRegexp(lastBySpace[lastBySpace.length - 1][0]);
  var regexp = new RegExp("(" + escaped + "$)|(" + escaped + "[,.])"); // find the closest rule with the same selector

  var closestRuleGap;
  root.walkRules(regexp, function (r) {
    var gridGap; // abort if are checking the same rule

    if (rule.toString() === r.toString()) {
      return false;
    } // find grid-gap values


    r.walkDecls('grid-gap', function (d) {
      return gridGap = getGridGap(d);
    }); // skip rule without gaps

    if (!gridGap || Object.keys(gridGap).length === 0) {
      return true;
    } // skip rules that should not be inherited from


    if (!shouldInheritGap(rule.selector, r.selector)) {
      return true;
    }

    var media = getParentMedia(r);

    if (media) {
      // if we are inside media, we need to check that media props match
      // e.g ('min-width' === 'min-width')
      var propToCompare = parseMediaParams(media.params)[0];

      if (propToCompare === prop) {
        closestRuleGap = gridGap;
        return true;
      }
    } else {
      closestRuleGap = gridGap;
      return true;
    }

    return undefined;
  }); // if we find the closest gap object

  if (closestRuleGap && Object.keys(closestRuleGap).length > 0) {
    return closestRuleGap;
  }

  return false;
}

function warnGridGap(_ref13) {
  var gap = _ref13.gap,
      hasColumns = _ref13.hasColumns,
      decl = _ref13.decl,
      result = _ref13.result;
  var hasBothGaps = gap.row && gap.column;

  if (!hasColumns && (hasBothGaps || gap.column && !gap.row)) {
    delete gap.column;
    decl.warn(result, 'Can not implement grid-gap without grid-template-columns');
  }
}
/**
 * normalize the grid-template-rows/columns values
 * @param  {String} str grid-template-rows/columns value
 * @return {Array} normalized array with values
 * @example
 * let normalized = normalizeRowColumn('1fr repeat(2, 20px 50px) 1fr')
 * normalized // <= ['1fr', '20px', '50px', '20px', '50px', '1fr']
 */


function normalizeRowColumn(str) {
  var normalized = parser(str).nodes.reduce(function (result, node) {
    if (node.type === 'function' && node.value === 'repeat') {
      var key = 'count';

      var _node$nodes$reduce = node.nodes.reduce(function (acc, n) {
        if (n.type === 'word' && key === 'count') {
          acc[0] = Math.abs(parseInt(n.value));
          return acc;
        }

        if (n.type === 'div' && n.value === ',') {
          key = 'value';
          return acc;
        }

        if (key === 'value') {
          acc[1] += parser.stringify(n);
        }

        return acc;
      }, [0, '']),
          count = _node$nodes$reduce[0],
          value = _node$nodes$reduce[1];

      if (count) {
        for (var i = 0; i < count; i++) {
          result.push(value);
        }
      }

      return result;
    }

    if (node.type === 'space') {
      return result;
    }

    return result.concat(parser.stringify(node));
  }, []);
  return normalized;
}
/**
 * Autoplace grid items
 * @param {Declaration} decl
 * @param {Result} result
 * @param {Object} gap gap values
 * @param {String} autoflowValue grid-auto-flow value
 * @return {void}
 * @see https://github.com/postcss/autoprefixer/issues/1148
 */


function autoplaceGridItems(decl, result, gap, autoflowValue) {
  if (autoflowValue === void 0) {
    autoflowValue = 'row';
  }

  var parent = decl.parent;
  var rowDecl = parent.nodes.find(function (i) {
    return i.prop === 'grid-template-rows';
  });
  var rows = normalizeRowColumn(rowDecl.value);
  var columns = normalizeRowColumn(decl.value); // Build array of area names with dummy values. If we have 3 columns and
  // 2 rows, filledRows will be equal to ['1 2 3', '4 5 6']

  var filledRows = rows.map(function (_, rowIndex) {
    return Array.from({
      length: columns.length
    }, function (v, k) {
      return k + rowIndex * columns.length + 1;
    }).join(' ');
  });
  var areas = parseGridAreas({
    rows: filledRows,
    gap: gap
  });
  var keys = Object.keys(areas);
  var items = keys.map(function (i) {
    return areas[i];
  }); // Change the order of cells if grid-auto-flow value is 'column'

  if (autoflowValue.includes('column')) {
    items = items.sort(function (a, b) {
      return a.column.start - b.column.start;
    });
  } // Insert new rules


  items.reverse().forEach(function (item, index) {
    var column = item.column,
        row = item.row;
    var nodeSelector = parent.selectors.map(function (sel) {
      return sel + (" > *:nth-child(" + (keys.length - index) + ")");
    }).join(', '); // create new rule

    var node = parent.clone().removeAll(); // change rule selector

    node.selector = nodeSelector; // insert prefixed row/column values

    node.append({
      prop: '-ms-grid-row',
      value: row.start
    });
    node.append({
      prop: '-ms-grid-column',
      value: column.start
    }); // insert rule

    parent.after(node);
  });
  return undefined;
}

module.exports = {
  parse: parse,
  translate: translate,
  parseTemplate: parseTemplate,
  parseGridAreas: parseGridAreas,
  warnMissedAreas: warnMissedAreas,
  insertAreas: insertAreas,
  insertDecl: insertDecl,
  prefixTrackProp: prefixTrackProp,
  prefixTrackValue: prefixTrackValue,
  getGridGap: getGridGap,
  warnGridGap: warnGridGap,
  warnTemplateSelectorNotFound: warnTemplateSelectorNotFound,
  warnIfGridRowColumnExists: warnIfGridRowColumnExists,
  inheritGridGap: inheritGridGap,
  autoplaceGridItems: autoplaceGridItems
};

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



function isNothing(subject) {
  return (typeof subject === 'undefined') || (subject === null);
}


function isObject(subject) {
  return (typeof subject === 'object') && (subject !== null);
}


function toArray(sequence) {
  if (Array.isArray(sequence)) return sequence;
  else if (isNothing(sequence)) return [];

  return [ sequence ];
}


function extend(target, source) {
  var index, length, key, sourceKeys;

  if (source) {
    sourceKeys = Object.keys(source);

    for (index = 0, length = sourceKeys.length; index < length; index += 1) {
      key = sourceKeys[index];
      target[key] = source[key];
    }
  }

  return target;
}


function repeat(string, count) {
  var result = '', cycle;

  for (cycle = 0; cycle < count; cycle += 1) {
    result += string;
  }

  return result;
}


function isNegativeZero(number) {
  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);
}


module.exports.isNothing      = isNothing;
module.exports.isObject       = isObject;
module.exports.toArray        = toArray;
module.exports.repeat         = repeat;
module.exports.isNegativeZero = isNegativeZero;
module.exports.extend         = extend;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*eslint-disable max-len*/

var common        = __webpack_require__(17);
var YAMLException = __webpack_require__(23);
var Type          = __webpack_require__(7);


function compileList(schema, name, result) {
  var exclude = [];

  schema.include.forEach(function (includedSchema) {
    result = compileList(includedSchema, name, result);
  });

  schema[name].forEach(function (currentType) {
    result.forEach(function (previousType, previousIndex) {
      if (previousType.tag === currentType.tag && previousType.kind === currentType.kind) {
        exclude.push(previousIndex);
      }
    });

    result.push(currentType);
  });

  return result.filter(function (type, index) {
    return exclude.indexOf(index) === -1;
  });
}


function compileMap(/* lists... */) {
  var result = {
        scalar: {},
        sequence: {},
        mapping: {},
        fallback: {}
      }, index, length;

  function collectType(type) {
    result[type.kind][type.tag] = result['fallback'][type.tag] = type;
  }

  for (index = 0, length = arguments.length; index < length; index += 1) {
    arguments[index].forEach(collectType);
  }
  return result;
}


function Schema(definition) {
  this.include  = definition.include  || [];
  this.implicit = definition.implicit || [];
  this.explicit = definition.explicit || [];

  this.implicit.forEach(function (type) {
    if (type.loadKind && type.loadKind !== 'scalar') {
      throw new YAMLException('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');
    }
  });

  this.compiledImplicit = compileList(this, 'implicit', []);
  this.compiledExplicit = compileList(this, 'explicit', []);
  this.compiledTypeMap  = compileMap(this.compiledImplicit, this.compiledExplicit);
}


Schema.DEFAULT = null;


Schema.create = function createSchema() {
  var schemas, types;

  switch (arguments.length) {
    case 1:
      schemas = Schema.DEFAULT;
      types = arguments[0];
      break;

    case 2:
      schemas = arguments[0];
      types = arguments[1];
      break;

    default:
      throw new YAMLException('Wrong number of arguments for Schema.create function');
  }

  schemas = common.toArray(schemas);
  types = common.toArray(types);

  if (!schemas.every(function (schema) { return schema instanceof Schema; })) {
    throw new YAMLException('Specified list of super schemas (or a single Schema object) contains a non-Schema object.');
  }

  if (!types.every(function (type) { return type instanceof Type; })) {
    throw new YAMLException('Specified list of YAML types (or a single Type object) contains a non-Type object.');
  }

  return new Schema({
    include: schemas,
    explicit: types
  });
};


module.exports = Schema;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var cloneNode = function cloneNode(obj, parent) {
    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') {
        return obj;
    }

    var cloned = new obj.constructor();

    for (var i in obj) {
        if (!obj.hasOwnProperty(i)) {
            continue;
        }
        var value = obj[i];
        var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

        if (i === 'parent' && type === 'object') {
            if (parent) {
                cloned[i] = parent;
            }
        } else if (value instanceof Array) {
            cloned[i] = value.map(function (j) {
                return cloneNode(j, cloned);
            });
        } else {
            cloned[i] = cloneNode(value, cloned);
        }
    }

    return cloned;
};

var _class = function () {
    function _class() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, _class);

        Object.assign(this, opts);
        this.spaces = this.spaces || {};
        this.spaces.before = this.spaces.before || '';
        this.spaces.after = this.spaces.after || '';
    }

    _class.prototype.remove = function remove() {
        if (this.parent) {
            this.parent.removeChild(this);
        }
        this.parent = undefined;
        return this;
    };

    _class.prototype.replaceWith = function replaceWith() {
        if (this.parent) {
            for (var index in arguments) {
                this.parent.insertBefore(this, arguments[index]);
            }
            this.remove();
        }
        return this;
    };

    _class.prototype.next = function next() {
        return this.parent.at(this.parent.index(this) + 1);
    };

    _class.prototype.prev = function prev() {
        return this.parent.at(this.parent.index(this) - 1);
    };

    _class.prototype.clone = function clone() {
        var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var cloned = cloneNode(this);
        for (var name in overrides) {
            cloned[name] = overrides[name];
        }
        return cloned;
    };

    _class.prototype.toString = function toString() {
        return [this.spaces.before, String(this.value), this.spaces.after].join('');
    };

    return _class;
}();

exports.default = _class;
module.exports = exports['default'];

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var cloneNode = function cloneNode(obj, parent) {
    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') {
        return obj;
    }

    var cloned = new obj.constructor();

    for (var i in obj) {
        if (!obj.hasOwnProperty(i)) {
            continue;
        }
        var value = obj[i];
        var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);

        if (i === 'parent' && type === 'object') {
            if (parent) {
                cloned[i] = parent;
            }
        } else if (value instanceof Array) {
            cloned[i] = value.map(function (j) {
                return cloneNode(j, cloned);
            });
        } else {
            cloned[i] = cloneNode(value, cloned);
        }
    }

    return cloned;
};

var _class = function () {
    function _class() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, _class);

        Object.assign(this, opts);
        this.spaces = this.spaces || {};
        this.spaces.before = this.spaces.before || '';
        this.spaces.after = this.spaces.after || '';
    }

    _class.prototype.remove = function remove() {
        if (this.parent) {
            this.parent.removeChild(this);
        }
        this.parent = undefined;
        return this;
    };

    _class.prototype.replaceWith = function replaceWith() {
        if (this.parent) {
            for (var index in arguments) {
                this.parent.insertBefore(this, arguments[index]);
            }
            this.remove();
        }
        return this;
    };

    _class.prototype.next = function next() {
        return this.parent.at(this.parent.index(this) + 1);
    };

    _class.prototype.prev = function prev() {
        return this.parent.at(this.parent.index(this) - 1);
    };

    _class.prototype.clone = function clone() {
        var overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var cloned = cloneNode(this);
        for (var name in overrides) {
            cloned[name] = overrides[name];
        }
        return cloned;
    };

    _class.prototype.toString = function toString() {
        return [this.spaces.before, String(this.value), this.spaces.after].join('');
    };

    return _class;
}();

exports.default = _class;
module.exports = exports['default'];

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var browserslist = __webpack_require__(14);

var agents = __webpack_require__(26).agents;

var utils = __webpack_require__(10);

var Browsers =
/*#__PURE__*/
function () {
  /**
     * Return all prefixes for default browser data
     */
  Browsers.prefixes = function prefixes() {
    if (this.prefixesCache) {
      return this.prefixesCache;
    }

    this.prefixesCache = [];

    for (var name in agents) {
      this.prefixesCache.push("-" + agents[name].prefix + "-");
    }

    this.prefixesCache = utils.uniq(this.prefixesCache).sort(function (a, b) {
      return b.length - a.length;
    });
    return this.prefixesCache;
  }
  /**
     * Check is value contain any possible prefix
     */
  ;

  Browsers.withPrefix = function withPrefix(value) {
    if (!this.prefixesRegexp) {
      this.prefixesRegexp = new RegExp(this.prefixes().join('|'));
    }

    return this.prefixesRegexp.test(value);
  };

  function Browsers(data, requirements, options, browserslistOpts) {
    this.data = data;
    this.options = options || {};
    this.browserslistOpts = browserslistOpts || {};
    this.selected = this.parse(requirements);
  }
  /**
     * Return browsers selected by requirements
     */


  var _proto = Browsers.prototype;

  _proto.parse = function parse(requirements) {
    var opts = {};

    for (var i in this.browserslistOpts) {
      opts[i] = this.browserslistOpts[i];
    }

    opts.path = this.options.from;
    opts.env = this.options.env;
    return browserslist(requirements, opts);
  }
  /**
     * Return prefix for selected browser
     */
  ;

  _proto.prefix = function prefix(browser) {
    var _browser$split = browser.split(' '),
        name = _browser$split[0],
        version = _browser$split[1];

    var data = this.data[name];
    var prefix = data.prefix_exceptions && data.prefix_exceptions[version];

    if (!prefix) {
      prefix = data.prefix;
    }

    return "-" + prefix + "-";
  }
  /**
     * Is browser is selected by requirements
     */
  ;

  _proto.isSelected = function isSelected(browser) {
    return this.selected.indexOf(browser) !== -1;
  };

  return Browsers;
}();

module.exports = Browsers;

/***/ }),
/* 22 */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

/**
 * This is a helper function for getting values from parameter/options
 * objects.
 *
 * @param args The object we are extracting values from
 * @param name The name of the property we are getting.
 * @param defaultValue An optional value to return if the property is missing
 * from the object. If this is not specified and the property is missing, an
 * error will be thrown.
 */
function getArg(aArgs, aName, aDefaultValue) {
  if (aName in aArgs) {
    return aArgs[aName];
  } else if (arguments.length === 3) {
    return aDefaultValue;
  } else {
    throw new Error('"' + aName + '" is a required argument.');
  }
}
exports.getArg = getArg;

var urlRegexp = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/;
var dataUrlRegexp = /^data:.+\,.+$/;

function urlParse(aUrl) {
  var match = aUrl.match(urlRegexp);
  if (!match) {
    return null;
  }
  return {
    scheme: match[1],
    auth: match[2],
    host: match[3],
    port: match[4],
    path: match[5]
  };
}
exports.urlParse = urlParse;

function urlGenerate(aParsedUrl) {
  var url = '';
  if (aParsedUrl.scheme) {
    url += aParsedUrl.scheme + ':';
  }
  url += '//';
  if (aParsedUrl.auth) {
    url += aParsedUrl.auth + '@';
  }
  if (aParsedUrl.host) {
    url += aParsedUrl.host;
  }
  if (aParsedUrl.port) {
    url += ":" + aParsedUrl.port
  }
  if (aParsedUrl.path) {
    url += aParsedUrl.path;
  }
  return url;
}
exports.urlGenerate = urlGenerate;

/**
 * Normalizes a path, or the path portion of a URL:
 *
 * - Replaces consecutive slashes with one slash.
 * - Removes unnecessary '.' parts.
 * - Removes unnecessary '<dir>/..' parts.
 *
 * Based on code in the Node.js 'path' core module.
 *
 * @param aPath The path or url to normalize.
 */
function normalize(aPath) {
  var path = aPath;
  var url = urlParse(aPath);
  if (url) {
    if (!url.path) {
      return aPath;
    }
    path = url.path;
  }
  var isAbsolute = exports.isAbsolute(path);

  var parts = path.split(/\/+/);
  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {
    part = parts[i];
    if (part === '.') {
      parts.splice(i, 1);
    } else if (part === '..') {
      up++;
    } else if (up > 0) {
      if (part === '') {
        // The first part is blank if the path is absolute. Trying to go
        // above the root is a no-op. Therefore we can remove all '..' parts
        // directly after the root.
        parts.splice(i + 1, up);
        up = 0;
      } else {
        parts.splice(i, 2);
        up--;
      }
    }
  }
  path = parts.join('/');

  if (path === '') {
    path = isAbsolute ? '/' : '.';
  }

  if (url) {
    url.path = path;
    return urlGenerate(url);
  }
  return path;
}
exports.normalize = normalize;

/**
 * Joins two paths/URLs.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be joined with the root.
 *
 * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a
 *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended
 *   first.
 * - Otherwise aPath is a path. If aRoot is a URL, then its path portion
 *   is updated with the result and aRoot is returned. Otherwise the result
 *   is returned.
 *   - If aPath is absolute, the result is aPath.
 *   - Otherwise the two paths are joined with a slash.
 * - Joining for example 'http://' and 'www.example.com' is also supported.
 */
function join(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }
  if (aPath === "") {
    aPath = ".";
  }
  var aPathUrl = urlParse(aPath);
  var aRootUrl = urlParse(aRoot);
  if (aRootUrl) {
    aRoot = aRootUrl.path || '/';
  }

  // `join(foo, '//www.example.org')`
  if (aPathUrl && !aPathUrl.scheme) {
    if (aRootUrl) {
      aPathUrl.scheme = aRootUrl.scheme;
    }
    return urlGenerate(aPathUrl);
  }

  if (aPathUrl || aPath.match(dataUrlRegexp)) {
    return aPath;
  }

  // `join('http://', 'www.example.com')`
  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {
    aRootUrl.host = aPath;
    return urlGenerate(aRootUrl);
  }

  var joined = aPath.charAt(0) === '/'
    ? aPath
    : normalize(aRoot.replace(/\/+$/, '') + '/' + aPath);

  if (aRootUrl) {
    aRootUrl.path = joined;
    return urlGenerate(aRootUrl);
  }
  return joined;
}
exports.join = join;

exports.isAbsolute = function (aPath) {
  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);
};

/**
 * Make a path relative to a URL or another path.
 *
 * @param aRoot The root path or URL.
 * @param aPath The path or URL to be made relative to aRoot.
 */
function relative(aRoot, aPath) {
  if (aRoot === "") {
    aRoot = ".";
  }

  aRoot = aRoot.replace(/\/$/, '');

  // It is possible for the path to be above the root. In this case, simply
  // checking whether the root is a prefix of the path won't work. Instead, we
  // need to remove components from the root one by one, until either we find
  // a prefix that fits, or we run out of components to remove.
  var level = 0;
  while (aPath.indexOf(aRoot + '/') !== 0) {
    var index = aRoot.lastIndexOf("/");
    if (index < 0) {
      return aPath;
    }

    // If the only part of the root that is left is the scheme (i.e. http://,
    // file:///, etc.), one or more slashes (/), or simply nothing at all, we
    // have exhausted all components, so the path is not relative to the root.
    aRoot = aRoot.slice(0, index);
    if (aRoot.match(/^([^\/]+:\/)?\/*$/)) {
      return aPath;
    }

    ++level;
  }

  // Make sure we add a "../" for each component we removed from the root.
  return Array(level + 1).join("../") + aPath.substr(aRoot.length + 1);
}
exports.relative = relative;

var supportsNullProto = (function () {
  var obj = Object.create(null);
  return !('__proto__' in obj);
}());

function identity (s) {
  return s;
}

/**
 * Because behavior goes wacky when you set `__proto__` on objects, we
 * have to prefix all the strings in our set with an arbitrary character.
 *
 * See https://github.com/mozilla/source-map/pull/31 and
 * https://github.com/mozilla/source-map/issues/30
 *
 * @param String aStr
 */
function toSetString(aStr) {
  if (isProtoString(aStr)) {
    return '$' + aStr;
  }

  return aStr;
}
exports.toSetString = supportsNullProto ? identity : toSetString;

function fromSetString(aStr) {
  if (isProtoString(aStr)) {
    return aStr.slice(1);
  }

  return aStr;
}
exports.fromSetString = supportsNullProto ? identity : fromSetString;

function isProtoString(s) {
  if (!s) {
    return false;
  }

  var length = s.length;

  if (length < 9 /* "__proto__".length */) {
    return false;
  }

  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||
      s.charCodeAt(length - 2) !== 95  /* '_' */ ||
      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 4) !== 116 /* 't' */ ||
      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||
      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||
      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||
      s.charCodeAt(length - 8) !== 95  /* '_' */ ||
      s.charCodeAt(length - 9) !== 95  /* '_' */) {
    return false;
  }

  for (var i = length - 10; i >= 0; i--) {
    if (s.charCodeAt(i) !== 36 /* '$' */) {
      return false;
    }
  }

  return true;
}

/**
 * Comparator between two mappings where the original positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same original source/line/column, but different generated
 * line and column the same. Useful when searching for a mapping with a
 * stubbed out mapping.
 */
function compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {
  var cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0 || onlyCompareOriginal) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByOriginalPositions = compareByOriginalPositions;

/**
 * Comparator between two mappings with deflated source and name indices where
 * the generated positions are compared.
 *
 * Optionally pass in `true` as `onlyCompareGenerated` to consider two
 * mappings with the same generated line and column, but different
 * source/name/original line and column the same. Useful when searching for a
 * mapping with a stubbed out mapping.
 */
function compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0 || onlyCompareGenerated) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;

function strcmp(aStr1, aStr2) {
  if (aStr1 === aStr2) {
    return 0;
  }

  if (aStr1 === null) {
    return 1; // aStr2 !== null
  }

  if (aStr2 === null) {
    return -1; // aStr1 !== null
  }

  if (aStr1 > aStr2) {
    return 1;
  }

  return -1;
}

/**
 * Comparator between two mappings with inflated source and name strings where
 * the generated positions are compared.
 */
function compareByGeneratedPositionsInflated(mappingA, mappingB) {
  var cmp = mappingA.generatedLine - mappingB.generatedLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.generatedColumn - mappingB.generatedColumn;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = strcmp(mappingA.source, mappingB.source);
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalLine - mappingB.originalLine;
  if (cmp !== 0) {
    return cmp;
  }

  cmp = mappingA.originalColumn - mappingB.originalColumn;
  if (cmp !== 0) {
    return cmp;
  }

  return strcmp(mappingA.name, mappingB.name);
}
exports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;

/**
 * Strip any JSON XSSI avoidance prefix from the string (as documented
 * in the source maps specification), and then parse the string as
 * JSON.
 */
function parseSourceMapInput(str) {
  return JSON.parse(str.replace(/^\)]}'[^\n]*\n/, ''));
}
exports.parseSourceMapInput = parseSourceMapInput;

/**
 * Compute the URL of a source given the the source root, the source's
 * URL, and the source map's URL.
 */
function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {
  sourceURL = sourceURL || '';

  if (sourceRoot) {
    // This follows what Chrome does.
    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {
      sourceRoot += '/';
    }
    // The spec says:
    //   Line 4: An optional source root, useful for relocating source
    //   files on a server or removing repeated values in the
    //   “sources” entry.  This value is prepended to the individual
    //   entries in the “source” field.
    sourceURL = sourceRoot + sourceURL;
  }

  // Historically, SourceMapConsumer did not take the sourceMapURL as
  // a parameter.  This mode is still somewhat supported, which is why
  // this code block is conditional.  However, it's preferable to pass
  // the source map URL to SourceMapConsumer, so that this function
  // can implement the source URL resolution algorithm as outlined in
  // the spec.  This block is basically the equivalent of:
  //    new URL(sourceURL, sourceMapURL).toString()
  // ... except it avoids using URL, which wasn't available in the
  // older releases of node still supported by this library.
  //
  // The spec says:
  //   If the sources are not absolute URLs after prepending of the
  //   “sourceRoot”, the sources are resolved relative to the
  //   SourceMap (like resolving script src in a html document).
  if (sourceMapURL) {
    var parsed = urlParse(sourceMapURL);
    if (!parsed) {
      throw new Error("sourceMapURL could not be parsed");
    }
    if (parsed.path) {
      // Strip the last path component, but keep the "/".
      var index = parsed.path.lastIndexOf('/');
      if (index >= 0) {
        parsed.path = parsed.path.substring(0, index + 1);
      }
    }
    sourceURL = join(urlGenerate(parsed), sourceURL);
  }

  return normalize(sourceURL);
}
exports.computeSourceURL = computeSourceURL;


/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// YAML error class. http://stackoverflow.com/questions/8458984
//


function YAMLException(reason, mark) {
  // Super constructor
  Error.call(this);

  this.name = 'YAMLException';
  this.reason = reason;
  this.mark = mark;
  this.message = (this.reason || '(unknown reason)') + (this.mark ? ' ' + this.mark.toString() : '');

  // Include stack trace in error object
  if (Error.captureStackTrace) {
    // Chrome and NodeJS
    Error.captureStackTrace(this, this.constructor);
  } else {
    // FF, IE 10+ and Safari 6+. Fallback for others
    this.stack = (new Error()).stack || '';
  }
}


// Inherit from Error
YAMLException.prototype = Object.create(Error.prototype);
YAMLException.prototype.constructor = YAMLException;


YAMLException.prototype.toString = function toString(compact) {
  var result = this.name + ': ';

  result += this.reason || '(unknown reason)';

  if (!compact && this.mark) {
    result += ' ' + this.mark.toString();
  }

  return result;
};


module.exports = YAMLException;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// JS-YAML's default schema for `safeLoad` function.
// It is not described in the YAML specification.
//
// This schema is based on standard YAML's Core schema and includes most of
// extra types described at YAML tag repository. (http://yaml.org/type/)





var Schema = __webpack_require__(18);


module.exports = new Schema({
  include: [
    __webpack_require__(69)
  ],
  implicit: [
    __webpack_require__(217),
    __webpack_require__(218)
  ],
  explicit: [
    __webpack_require__(219),
    __webpack_require__(221),
    __webpack_require__(222),
    __webpack_require__(223)
  ]
});


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(248);

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _agents = __webpack_require__(71);

Object.defineProperty(exports, 'agents', {
  enumerable: true,
  get: function get() {
    return _agents.agents;
  }
});

var _feature = __webpack_require__(501);

Object.defineProperty(exports, 'feature', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_feature).default;
  }
});

var _features = __webpack_require__(504);

Object.defineProperty(exports, 'features', {
  enumerable: true,
  get: function get() {
    return _features.features;
  }
});

var _region = __webpack_require__(74);

Object.defineProperty(exports, 'region', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_region).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _node = __webpack_require__(19);

var _node2 = _interopRequireDefault(_node);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Namespace = function (_Node) {
    _inherits(Namespace, _Node);

    function Namespace() {
        _classCallCheck(this, Namespace);

        return _possibleConstructorReturn(this, _Node.apply(this, arguments));
    }

    Namespace.prototype.qualifiedName = function qualifiedName(value) {
        if (this.namespace) {
            return this.namespaceString + '|' + value;
        } else {
            return value;
        }
    };

    Namespace.prototype.toString = function toString() {
        return [this.spaces.before, this.qualifiedName(this.value), this.spaces.after].join('');
    };

    _createClass(Namespace, [{
        key: 'namespace',
        get: function get() {
            return this._namespace;
        },
        set: function set(namespace) {
            this._namespace = namespace;
            if (this.raws) {
                delete this.raws.namespace;
            }
        }
    }, {
        key: 'ns',
        get: function get() {
            return this._namespace;
        },
        set: function set(namespace) {
            this._namespace = namespace;
            if (this.raws) {
                delete this.raws.namespace;
            }
        }
    }, {
        key: 'namespaceString',
        get: function get() {
            if (this.namespace) {
                var ns = this.raws && this.raws.namespace || this.namespace;
                if (ns === true) {
                    return '';
                } else {
                    return ns;
                }
            } else {
                return '';
            }
        }
    }]);

    return Namespace;
}(_node2.default);

exports.default = Namespace;
;
module.exports = exports['default'];

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _node = __webpack_require__(20);

var _node2 = _interopRequireDefault(_node);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Namespace = function (_Node) {
    _inherits(Namespace, _Node);

    function Namespace() {
        _classCallCheck(this, Namespace);

        return _possibleConstructorReturn(this, _Node.apply(this, arguments));
    }

    Namespace.prototype.qualifiedName = function qualifiedName(value) {
        if (this.namespace) {
            return this.namespaceString + '|' + value;
        } else {
            return value;
        }
    };

    Namespace.prototype.toString = function toString() {
        return [this.spaces.before, this.qualifiedName(this.value), this.spaces.after].join('');
    };

    _createClass(Namespace, [{
        key: 'namespace',
        get: function get() {
            return this._namespace;
        },
        set: function set(namespace) {
            this._namespace = namespace;
            if (this.raws) {
                delete this.raws.namespace;
            }
        }
    }, {
        key: 'ns',
        get: function get() {
            return this._namespace;
        },
        set: function set(namespace) {
            this._namespace = namespace;
            if (this.raws) {
                delete this.raws.namespace;
            }
        }
    }, {
        key: 'namespaceString',
        get: function get() {
            if (this.namespace) {
                var ns = this.raws && this.raws.namespace || this.namespace;
                if (ns === true) {
                    return '';
                } else {
                    return ns;
                }
            } else {
                return '';
            }
        }
    }]);

    return Namespace;
}(_node2.default);

exports.default = Namespace;
;
module.exports = exports['default'];

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var vendor = __webpack_require__(3).vendor;

var Browsers = __webpack_require__(21);

var utils = __webpack_require__(10);
/**
 * Recursively clone objects
 */


function _clone(obj, parent) {
  var cloned = new obj.constructor();

  for (var _i = 0, _Object$keys = Object.keys(obj || {}); _i < _Object$keys.length; _i++) {
    var i = _Object$keys[_i];
    var value = obj[i];

    if (i === 'parent' && typeof value === 'object') {
      if (parent) {
        cloned[i] = parent;
      }
    } else if (i === 'source' || i === null) {
      cloned[i] = value;
    } else if (value instanceof Array) {
      cloned[i] = value.map(function (x) {
        return _clone(x, cloned);
      });
    } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues') {
      if (typeof value === 'object' && value !== null) {
        value = _clone(value, cloned);
      }

      cloned[i] = value;
    }
  }

  return cloned;
}

var Prefixer =
/*#__PURE__*/
function () {
  /**
     * Add hack to selected names
     */
  Prefixer.hack = function hack(klass) {
    var _this = this;

    if (!this.hacks) {
      this.hacks = {};
    }

    return klass.names.map(function (name) {
      _this.hacks[name] = klass;
      return _this.hacks[name];
    });
  }
  /**
     * Load hacks for some names
     */
  ;

  Prefixer.load = function load(name, prefixes, all) {
    var Klass = this.hacks && this.hacks[name];

    if (Klass) {
      return new Klass(name, prefixes, all);
    } else {
      return new this(name, prefixes, all);
    }
  }
  /**
     * Clone node and clean autprefixer custom caches
     */
  ;

  Prefixer.clone = function clone(node, overrides) {
    var cloned = _clone(node);

    for (var name in overrides) {
      cloned[name] = overrides[name];
    }

    return cloned;
  };

  function Prefixer(name, prefixes, all) {
    this.prefixes = prefixes;
    this.name = name;
    this.all = all;
  }
  /**
     * Find prefix in node parents
     */


  var _proto = Prefixer.prototype;

  _proto.parentPrefix = function parentPrefix(node) {
    var prefix;

    if (typeof node._autoprefixerPrefix !== 'undefined') {
      prefix = node._autoprefixerPrefix;
    } else if (node.type === 'decl' && node.prop[0] === '-') {
      prefix = vendor.prefix(node.prop);
    } else if (node.type === 'root') {
      prefix = false;
    } else if (node.type === 'rule' && node.selector.indexOf(':-') !== -1 && /:(-\w+-)/.test(node.selector)) {
      prefix = node.selector.match(/:(-\w+-)/)[1];
    } else if (node.type === 'atrule' && node.name[0] === '-') {
      prefix = vendor.prefix(node.name);
    } else {
      prefix = this.parentPrefix(node.parent);
    }

    if (Browsers.prefixes().indexOf(prefix) === -1) {
      prefix = false;
    }

    node._autoprefixerPrefix = prefix;
    return node._autoprefixerPrefix;
  }
  /**
     * Clone node with prefixes
     */
  ;

  _proto.process = function process(node, result) {
    if (!this.check(node)) {
      return undefined;
    }

    var parent = this.parentPrefix(node);
    var prefixes = this.prefixes.filter(function (prefix) {
      return !parent || parent === utils.removeNote(prefix);
    });
    var added = [];

    for (var _iterator = prefixes, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i2 >= _iterator.length) break;
        _ref = _iterator[_i2++];
      } else {
        _i2 = _iterator.next();
        if (_i2.done) break;
        _ref = _i2.value;
      }

      var prefix = _ref;

      if (this.add(node, prefix, added.concat([prefix]), result)) {
        added.push(prefix);
      }
    }

    return added;
  }
  /**
     * Shortcut for Prefixer.clone
     */
  ;

  _proto.clone = function clone(node, overrides) {
    return Prefixer.clone(node, overrides);
  };

  return Prefixer;
}();

module.exports = Prefixer;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(10);

var OldValue =
/*#__PURE__*/
function () {
  function OldValue(unprefixed, prefixed, string, regexp) {
    this.unprefixed = unprefixed;
    this.prefixed = prefixed;
    this.string = string || prefixed;
    this.regexp = regexp || utils.regexp(prefixed);
  }
  /**
     * Check, that value contain old value
     */


  var _proto = OldValue.prototype;

  _proto.check = function check(value) {
    if (value.indexOf(this.string) !== -1) {
      return !!value.match(this.regexp);
    }

    return false;
  };

  return OldValue;
}();

module.exports = OldValue;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// JS-YAML's default schema for `load` function.
// It is not described in the YAML specification.
//
// This schema is based on JS-YAML's default safe schema and includes
// JavaScript-specific types: !!js/undefined, !!js/regexp and !!js/function.
//
// Also this schema is used as default base schema at `Schema.create` function.





var Schema = __webpack_require__(18);


module.exports = Schema.DEFAULT = new Schema({
  include: [
    __webpack_require__(24)
  ],
  explicit: [
    __webpack_require__(224),
    __webpack_require__(225),
    __webpack_require__(226)
  ]
});


/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = require("url");

/***/ }),
/* 33 */
/***/ (function(module, exports) {

module.exports = require("../../mock-doc");

/***/ }),
/* 34 */
/***/ (function(module, exports) {

module.exports = require("util");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _node = _interopRequireDefault(__webpack_require__(36));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents a CSS declaration.
 *
 * @extends Node
 *
 * @example
 * const root = postcss.parse('a { color: black }')
 * const decl = root.first.first
 * decl.type       //=> 'decl'
 * decl.toString() //=> ' color: black'
 */
var Declaration =
/*#__PURE__*/
function (_Node) {
  _inheritsLoose(Declaration, _Node);

  function Declaration(defaults) {
    var _this;

    _this = _Node.call(this, defaults) || this;
    _this.type = 'decl';
    return _this;
  }
  /**
   * @memberof Declaration#
   * @member {string} prop The declaration’s property name.
   *
   * @example
   * const root = postcss.parse('a { color: black }')
   * const decl = root.first.first
   * decl.prop //=> 'color'
   */

  /**
   * @memberof Declaration#
   * @member {string} value The declaration’s value.
   *
   * @example
   * const root = postcss.parse('a { color: black }')
   * const decl = root.first.first
   * decl.value //=> 'black'
   */

  /**
   * @memberof Declaration#
   * @member {boolean} important `true` if the declaration
   *                             has an !important annotation.
   *
   * @example
   * const root = postcss.parse('a { color: black !important; color: red }')
   * root.first.first.important //=> true
   * root.first.last.important  //=> undefined
   */

  /**
   * @memberof Declaration#
   * @member {object} raws Information to generate byte-to-byte equal
   *                       node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `before`: the space symbols before the node. It also stores `*`
   *   and `_` symbols before the declaration (IE hack).
   * * `between`: the symbols between the property and value
   *   for declarations.
   * * `important`: the content of the important statement,
   *   if it is not just `!important`.
   *
   * PostCSS cleans declaration from comments and extra spaces,
   * but it stores origin content in raws properties.
   * As such, if you don’t change a declaration’s value,
   * PostCSS will use the raw value with comments.
   *
   * @example
   * const root = postcss.parse('a {\n  color:black\n}')
   * root.first.first.raws //=> { before: '\n  ', between: ':' }
   */


  return Declaration;
}(_node.default);

var _default = Declaration;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlY2xhcmF0aW9uLmVzNiJdLCJuYW1lcyI6WyJEZWNsYXJhdGlvbiIsImRlZmF1bHRzIiwidHlwZSIsIk5vZGUiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7OztBQUVBOzs7Ozs7Ozs7OztJQVdNQSxXOzs7OztBQUNKLHVCQUFhQyxRQUFiLEVBQXVCO0FBQUE7O0FBQ3JCLDZCQUFNQSxRQUFOO0FBQ0EsVUFBS0MsSUFBTCxHQUFZLE1BQVo7QUFGcUI7QUFHdEI7QUFFRDs7Ozs7Ozs7OztBQVVBOzs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7O0FBV0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFQXJDd0JDLGE7O2VBK0RYSCxXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5vZGUgZnJvbSAnLi9ub2RlJ1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBDU1MgZGVjbGFyYXRpb24uXG4gKlxuICogQGV4dGVuZHMgTm9kZVxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7IGNvbG9yOiBibGFjayB9JylcbiAqIGNvbnN0IGRlY2wgPSByb290LmZpcnN0LmZpcnN0XG4gKiBkZWNsLnR5cGUgICAgICAgLy89PiAnZGVjbCdcbiAqIGRlY2wudG9TdHJpbmcoKSAvLz0+ICcgY29sb3I6IGJsYWNrJ1xuICovXG5jbGFzcyBEZWNsYXJhdGlvbiBleHRlbmRzIE5vZGUge1xuICBjb25zdHJ1Y3RvciAoZGVmYXVsdHMpIHtcbiAgICBzdXBlcihkZWZhdWx0cylcbiAgICB0aGlzLnR5cGUgPSAnZGVjbCdcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAqIEBtZW1iZXIge3N0cmluZ30gcHJvcCBUaGUgZGVjbGFyYXRpb27igJlzIHByb3BlcnR5IG5hbWUuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhIHsgY29sb3I6IGJsYWNrIH0nKVxuICAgKiBjb25zdCBkZWNsID0gcm9vdC5maXJzdC5maXJzdFxuICAgKiBkZWNsLnByb3AgLy89PiAnY29sb3InXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAqIEBtZW1iZXIge3N0cmluZ30gdmFsdWUgVGhlIGRlY2xhcmF0aW9u4oCZcyB2YWx1ZS5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EgeyBjb2xvcjogYmxhY2sgfScpXG4gICAqIGNvbnN0IGRlY2wgPSByb290LmZpcnN0LmZpcnN0XG4gICAqIGRlY2wudmFsdWUgLy89PiAnYmxhY2snXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgRGVjbGFyYXRpb24jXG4gICAqIEBtZW1iZXIge2Jvb2xlYW59IGltcG9ydGFudCBgdHJ1ZWAgaWYgdGhlIGRlY2xhcmF0aW9uXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXMgYW4gIWltcG9ydGFudCBhbm5vdGF0aW9uLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7IGNvbG9yOiBibGFjayAhaW1wb3J0YW50OyBjb2xvcjogcmVkIH0nKVxuICAgKiByb290LmZpcnN0LmZpcnN0LmltcG9ydGFudCAvLz0+IHRydWVcbiAgICogcm9vdC5maXJzdC5sYXN0LmltcG9ydGFudCAgLy89PiB1bmRlZmluZWRcbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBEZWNsYXJhdGlvbiNcbiAgICogQG1lbWJlciB7b2JqZWN0fSByYXdzIEluZm9ybWF0aW9uIHRvIGdlbmVyYXRlIGJ5dGUtdG8tYnl0ZSBlcXVhbFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAqXG4gICAqIEV2ZXJ5IHBhcnNlciBzYXZlcyBpdHMgb3duIHByb3BlcnRpZXMsXG4gICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAqXG4gICAqICogYGJlZm9yZWA6IHRoZSBzcGFjZSBzeW1ib2xzIGJlZm9yZSB0aGUgbm9kZS4gSXQgYWxzbyBzdG9yZXMgYCpgXG4gICAqICAgYW5kIGBfYCBzeW1ib2xzIGJlZm9yZSB0aGUgZGVjbGFyYXRpb24gKElFIGhhY2spLlxuICAgKiAqIGBiZXR3ZWVuYDogdGhlIHN5bWJvbHMgYmV0d2VlbiB0aGUgcHJvcGVydHkgYW5kIHZhbHVlXG4gICAqICAgZm9yIGRlY2xhcmF0aW9ucy5cbiAgICogKiBgaW1wb3J0YW50YDogdGhlIGNvbnRlbnQgb2YgdGhlIGltcG9ydGFudCBzdGF0ZW1lbnQsXG4gICAqICAgaWYgaXQgaXMgbm90IGp1c3QgYCFpbXBvcnRhbnRgLlxuICAgKlxuICAgKiBQb3N0Q1NTIGNsZWFucyBkZWNsYXJhdGlvbiBmcm9tIGNvbW1lbnRzIGFuZCBleHRyYSBzcGFjZXMsXG4gICAqIGJ1dCBpdCBzdG9yZXMgb3JpZ2luIGNvbnRlbnQgaW4gcmF3cyBwcm9wZXJ0aWVzLlxuICAgKiBBcyBzdWNoLCBpZiB5b3UgZG9u4oCZdCBjaGFuZ2UgYSBkZWNsYXJhdGlvbuKAmXMgdmFsdWUsXG4gICAqIFBvc3RDU1Mgd2lsbCB1c2UgdGhlIHJhdyB2YWx1ZSB3aXRoIGNvbW1lbnRzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSB7XFxuICBjb2xvcjpibGFja1xcbn0nKVxuICAgKiByb290LmZpcnN0LmZpcnN0LnJhd3MgLy89PiB7IGJlZm9yZTogJ1xcbiAgJywgYmV0d2VlbjogJzonIH1cbiAgICovXG59XG5cbmV4cG9ydCBkZWZhdWx0IERlY2xhcmF0aW9uXG4iXSwiZmlsZSI6ImRlY2xhcmF0aW9uLmpzIn0=


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _cssSyntaxError = _interopRequireDefault(__webpack_require__(56));

var _stringifier = _interopRequireDefault(__webpack_require__(63));

var _stringify = _interopRequireDefault(__webpack_require__(39));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function cloneNode(obj, parent) {
  var cloned = new obj.constructor();

  for (var i in obj) {
    if (!obj.hasOwnProperty(i)) continue;
    var value = obj[i];
    var type = typeof value;

    if (i === 'parent' && type === 'object') {
      if (parent) cloned[i] = parent;
    } else if (i === 'source') {
      cloned[i] = value;
    } else if (value instanceof Array) {
      cloned[i] = value.map(function (j) {
        return cloneNode(j, cloned);
      });
    } else {
      if (type === 'object' && value !== null) value = cloneNode(value);
      cloned[i] = value;
    }
  }

  return cloned;
}
/**
 * All node classes inherit the following common methods.
 *
 * @abstract
 */


var Node =
/*#__PURE__*/
function () {
  /**
   * @param {object} [defaults] Value for node properties.
   */
  function Node(defaults) {
    if (defaults === void 0) {
      defaults = {};
    }

    this.raws = {};

    if (false) {}

    for (var name in defaults) {
      this[name] = defaults[name];
    }
  }
  /**
   * Returns a `CssSyntaxError` instance containing the original position
   * of the node in the source, showing line and column numbers and also
   * a small excerpt to facilitate debugging.
   *
   * If present, an input source map will be used to get the original position
   * of the source, even from a previous compilation step
   * (e.g., from Sass compilation).
   *
   * This method produces very useful error messages.
   *
   * @param {string} message     Error description.
   * @param {object} [opts]      Options.
   * @param {string} opts.plugin Plugin name that created this error.
   *                             PostCSS will set it automatically.
   * @param {string} opts.word   A word inside a node’s string that should
   *                             be highlighted as the source of the error.
   * @param {number} opts.index  An index inside a node’s string that should
   *                             be highlighted as the source of the error.
   *
   * @return {CssSyntaxError} Error object to throw it.
   *
   * @example
   * if (!variables[name]) {
   *   throw decl.error('Unknown variable ' + name, { word: name })
   *   // CssSyntaxError: postcss-vars:a.sass:4:3: Unknown variable $black
   *   //   color: $black
   *   // a
   *   //          ^
   *   //   background: white
   * }
   */


  var _proto = Node.prototype;

  _proto.error = function error(message, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (this.source) {
      var pos = this.positionBy(opts);
      return this.source.input.error(message, pos.line, pos.column, opts);
    }

    return new _cssSyntaxError.default(message);
  }
  /**
   * This method is provided as a convenience wrapper for {@link Result#warn}.
   *
   * @param {Result} result      The {@link Result} instance
   *                             that will receive the warning.
   * @param {string} text        Warning message.
   * @param {object} [opts]      Options
   * @param {string} opts.plugin Plugin name that created this warning.
   *                             PostCSS will set it automatically.
   * @param {string} opts.word   A word inside a node’s string that should
   *                             be highlighted as the source of the warning.
   * @param {number} opts.index  An index inside a node’s string that should
   *                             be highlighted as the source of the warning.
   *
   * @return {Warning} Created warning object.
   *
   * @example
   * const plugin = postcss.plugin('postcss-deprecated', () => {
   *   return (root, result) => {
   *     root.walkDecls('bad', decl => {
   *       decl.warn(result, 'Deprecated property bad')
   *     })
   *   }
   * })
   */
  ;

  _proto.warn = function warn(result, text, opts) {
    var data = {
      node: this
    };

    for (var i in opts) {
      data[i] = opts[i];
    }

    return result.warn(text, data);
  }
  /**
   * Removes the node from its parent and cleans the parent properties
   * from the node and its children.
   *
   * @example
   * if (decl.prop.match(/^-webkit-/)) {
   *   decl.remove()
   * }
   *
   * @return {Node} Node to make calls chain.
   */
  ;

  _proto.remove = function remove() {
    if (this.parent) {
      this.parent.removeChild(this);
    }

    this.parent = undefined;
    return this;
  }
  /**
   * Returns a CSS string representing the node.
   *
   * @param {stringifier|syntax} [stringifier] A syntax to use
   *                                           in string generation.
   *
   * @return {string} CSS string of this node.
   *
   * @example
   * postcss.rule({ selector: 'a' }).toString() //=> "a {}"
   */
  ;

  _proto.toString = function toString(stringifier) {
    if (stringifier === void 0) {
      stringifier = _stringify.default;
    }

    if (stringifier.stringify) stringifier = stringifier.stringify;
    var result = '';
    stringifier(this, function (i) {
      result += i;
    });
    return result;
  }
  /**
   * Returns an exact clone of the node.
   *
   * The resulting cloned node and its (cloned) children will retain
   * code style properties.
   *
   * @param {object} [overrides] New properties to override in the clone.
   *
   * @example
   * decl.raws.before    //=> "\n  "
   * const cloned = decl.clone({ prop: '-moz-' + decl.prop })
   * cloned.raws.before  //=> "\n  "
   * cloned.toString()   //=> -moz-transform: scale(0)
   *
   * @return {Node} Clone of the node.
   */
  ;

  _proto.clone = function clone(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }

    var cloned = cloneNode(this);

    for (var name in overrides) {
      cloned[name] = overrides[name];
    }

    return cloned;
  }
  /**
   * Shortcut to clone the node and insert the resulting cloned node
   * before the current node.
   *
   * @param {object} [overrides] Mew properties to override in the clone.
   *
   * @example
   * decl.cloneBefore({ prop: '-moz-' + decl.prop })
   *
   * @return {Node} New node
   */
  ;

  _proto.cloneBefore = function cloneBefore(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }

    var cloned = this.clone(overrides);
    this.parent.insertBefore(this, cloned);
    return cloned;
  }
  /**
   * Shortcut to clone the node and insert the resulting cloned node
   * after the current node.
   *
   * @param {object} [overrides] New properties to override in the clone.
   *
   * @return {Node} New node.
   */
  ;

  _proto.cloneAfter = function cloneAfter(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }

    var cloned = this.clone(overrides);
    this.parent.insertAfter(this, cloned);
    return cloned;
  }
  /**
   * Inserts node(s) before the current node and removes the current node.
   *
   * @param {...Node} nodes Mode(s) to replace current one.
   *
   * @example
   * if (atrule.name === 'mixin') {
   *   atrule.replaceWith(mixinRules[atrule.params])
   * }
   *
   * @return {Node} Current node to methods chain.
   */
  ;

  _proto.replaceWith = function replaceWith() {
    if (this.parent) {
      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {
        nodes[_key] = arguments[_key];
      }

      for (var _i = 0, _nodes = nodes; _i < _nodes.length; _i++) {
        var node = _nodes[_i];
        this.parent.insertBefore(this, node);
      }

      this.remove();
    }

    return this;
  }
  /**
   * Returns the next child of the node’s parent.
   * Returns `undefined` if the current node is the last child.
   *
   * @return {Node|undefined} Next node.
   *
   * @example
   * if (comment.text === 'delete next') {
   *   const next = comment.next()
   *   if (next) {
   *     next.remove()
   *   }
   * }
   */
  ;

  _proto.next = function next() {
    if (!this.parent) return undefined;
    var index = this.parent.index(this);
    return this.parent.nodes[index + 1];
  }
  /**
   * Returns the previous child of the node’s parent.
   * Returns `undefined` if the current node is the first child.
   *
   * @return {Node|undefined} Previous node.
   *
   * @example
   * const annotation = decl.prev()
   * if (annotation.type === 'comment') {
   *   readAnnotation(annotation.text)
   * }
   */
  ;

  _proto.prev = function prev() {
    if (!this.parent) return undefined;
    var index = this.parent.index(this);
    return this.parent.nodes[index - 1];
  }
  /**
   * Insert new node before current node to current node’s parent.
   *
   * Just alias for `node.parent.insertBefore(node, add)`.
   *
   * @param {Node|object|string|Node[]} add New node.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * decl.before('content: ""')
   */
  ;

  _proto.before = function before(add) {
    this.parent.insertBefore(this, add);
    return this;
  }
  /**
   * Insert new node after current node to current node’s parent.
   *
   * Just alias for `node.parent.insertAfter(node, add)`.
   *
   * @param {Node|object|string|Node[]} add New node.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * decl.after('color: black')
   */
  ;

  _proto.after = function after(add) {
    this.parent.insertAfter(this, add);
    return this;
  };

  _proto.toJSON = function toJSON() {
    var fixed = {};

    for (var name in this) {
      if (!this.hasOwnProperty(name)) continue;
      if (name === 'parent') continue;
      var value = this[name];

      if (value instanceof Array) {
        fixed[name] = value.map(function (i) {
          if (typeof i === 'object' && i.toJSON) {
            return i.toJSON();
          } else {
            return i;
          }
        });
      } else if (typeof value === 'object' && value.toJSON) {
        fixed[name] = value.toJSON();
      } else {
        fixed[name] = value;
      }
    }

    return fixed;
  }
  /**
   * Returns a {@link Node#raws} value. If the node is missing
   * the code style property (because the node was manually built or cloned),
   * PostCSS will try to autodetect the code style property by looking
   * at other nodes in the tree.
   *
   * @param {string} prop          Name of code style property.
   * @param {string} [defaultType] Name of default value, it can be missed
   *                               if the value is the same as prop.
   *
   * @example
   * const root = postcss.parse('a { background: white }')
   * root.nodes[0].append({ prop: 'color', value: 'black' })
   * root.nodes[0].nodes[1].raws.before   //=> undefined
   * root.nodes[0].nodes[1].raw('before') //=> ' '
   *
   * @return {string} Code style value.
   */
  ;

  _proto.raw = function raw(prop, defaultType) {
    var str = new _stringifier.default();
    return str.raw(this, prop, defaultType);
  }
  /**
   * Finds the Root instance of the node’s tree.
   *
   * @example
   * root.nodes[0].nodes[0].root() === root
   *
   * @return {Root} Root parent.
   */
  ;

  _proto.root = function root() {
    var result = this;

    while (result.parent) {
      result = result.parent;
    }

    return result;
  }
  /**
   * Clear the code style properties for the node and its children.
   *
   * @param {boolean} [keepBetween] Keep the raws.between symbols.
   *
   * @return {undefined}
   *
   * @example
   * node.raws.before  //=> ' '
   * node.cleanRaws()
   * node.raws.before  //=> undefined
   */
  ;

  _proto.cleanRaws = function cleanRaws(keepBetween) {
    delete this.raws.before;
    delete this.raws.after;
    if (!keepBetween) delete this.raws.between;
  };

  _proto.positionInside = function positionInside(index) {
    var string = this.toString();
    var column = this.source.start.column;
    var line = this.source.start.line;

    for (var i = 0; i < index; i++) {
      if (string[i] === '\n') {
        column = 1;
        line += 1;
      } else {
        column += 1;
      }
    }

    return {
      line: line,
      column: column
    };
  };

  _proto.positionBy = function positionBy(opts) {
    var pos = this.source.start;

    if (opts.index) {
      pos = this.positionInside(opts.index);
    } else if (opts.word) {
      var index = this.toString().indexOf(opts.word);
      if (index !== -1) pos = this.positionInside(index);
    }

    return pos;
  }
  /**
   * @memberof Node#
   * @member {string} type String representing the node’s type.
   *                       Possible values are `root`, `atrule`, `rule`,
   *                       `decl`, or `comment`.
   *
   * @example
   * postcss.decl({ prop: 'color', value: 'black' }).type //=> 'decl'
   */

  /**
   * @memberof Node#
   * @member {Container} parent The node’s parent node.
   *
   * @example
   * root.nodes[0].parent === root
   */

  /**
   * @memberof Node#
   * @member {source} source The input source of the node.
   *
   * The property is used in source map generation.
   *
   * If you create a node manually (e.g., with `postcss.decl()`),
   * that node will not have a `source` property and will be absent
   * from the source map. For this reason, the plugin developer should
   * consider cloning nodes to create new ones (in which case the new node’s
   * source will reference the original, cloned node) or setting
   * the `source` property manually.
   *
   * ```js
   * // Bad
   * const prefixed = postcss.decl({
   *   prop: '-moz-' + decl.prop,
   *   value: decl.value
   * })
   *
   * // Good
   * const prefixed = decl.clone({ prop: '-moz-' + decl.prop })
   * ```
   *
   * ```js
   * if (atrule.name === 'add-link') {
   *   const rule = postcss.rule({ selector: 'a', source: atrule.source })
   *   atrule.parent.insertBefore(atrule, rule)
   * }
   * ```
   *
   * @example
   * decl.source.input.from //=> '/home/ai/a.sass'
   * decl.source.start      //=> { line: 10, column: 2 }
   * decl.source.end        //=> { line: 10, column: 12 }
   */

  /**
   * @memberof Node#
   * @member {object} raws Information to generate byte-to-byte equal
   *                       node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `before`: the space symbols before the node. It also stores `*`
   *   and `_` symbols before the declaration (IE hack).
   * * `after`: the space symbols after the last child of the node
   *   to the end of the node.
   * * `between`: the symbols between the property and value
   *   for declarations, selector and `{` for rules, or last parameter
   *   and `{` for at-rules.
   * * `semicolon`: contains true if the last child has
   *   an (optional) semicolon.
   * * `afterName`: the space between the at-rule name and its parameters.
   * * `left`: the space symbols between `/*` and the comment’s text.
   * * `right`: the space symbols between the comment’s text
   *   and <code>*&#47;</code>.
   * * `important`: the content of the important statement,
   *   if it is not just `!important`.
   *
   * PostCSS cleans selectors, declaration values and at-rule parameters
   * from comments and extra spaces, but it stores origin content in raws
   * properties. As such, if you don’t change a declaration’s value,
   * PostCSS will use the raw value with comments.
   *
   * @example
   * const root = postcss.parse('a {\n  color:black\n}')
   * root.first.first.raws //=> { before: '\n  ', between: ':' }
   */
  ;

  return Node;
}();

var _default = Node;
/**
 * @typedef {object} position
 * @property {number} line   Source line in file.
 * @property {number} column Source column in file.
 */

/**
 * @typedef {object} source
 * @property {Input} input    {@link Input} with input file
 * @property {position} start The starting position of the node’s source.
 * @property {position} end   The ending position of the node’s source.
 */

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 37 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

/*
 * Copyright 2009-2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE.txt or:
 * http://opensource.org/licenses/BSD-3-Clause
 */
exports.SourceMapGenerator = __webpack_require__(60).SourceMapGenerator;
exports.SourceMapConsumer = __webpack_require__(190).SourceMapConsumer;
exports.SourceNode = __webpack_require__(193).SourceNode;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _stringifier = _interopRequireDefault(__webpack_require__(63));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stringify(node, builder) {
  var str = new _stringifier.default(builder);
  str.stringify(node);
}

var _default = stringify;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0cmluZ2lmeS5lczYiXSwibmFtZXMiOlsic3RyaW5naWZ5Iiwibm9kZSIsImJ1aWxkZXIiLCJzdHIiLCJTdHJpbmdpZmllciJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7OztBQUVBLFNBQVNBLFNBQVQsQ0FBb0JDLElBQXBCLEVBQTBCQyxPQUExQixFQUFtQztBQUNqQyxNQUFJQyxHQUFHLEdBQUcsSUFBSUMsb0JBQUosQ0FBZ0JGLE9BQWhCLENBQVY7QUFDQUMsRUFBQUEsR0FBRyxDQUFDSCxTQUFKLENBQWNDLElBQWQ7QUFDRDs7ZUFFY0QsUyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJpbmdpZmllciBmcm9tICcuL3N0cmluZ2lmaWVyJ1xuXG5mdW5jdGlvbiBzdHJpbmdpZnkgKG5vZGUsIGJ1aWxkZXIpIHtcbiAgbGV0IHN0ciA9IG5ldyBTdHJpbmdpZmllcihidWlsZGVyKVxuICBzdHIuc3RyaW5naWZ5KG5vZGUpXG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0cmluZ2lmeVxuIl0sImZpbGUiOiJzdHJpbmdpZnkuanMifQ==


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _parser = _interopRequireDefault(__webpack_require__(198));

var _input = _interopRequireDefault(__webpack_require__(59));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parse(css, opts) {
  var input = new _input.default(css, opts);
  var parser = new _parser.default(input);

  try {
    parser.parse();
  } catch (e) {
    if (false) {}

    throw e;
  }

  return parser.root;
}

var _default = parse;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlLmVzNiJdLCJuYW1lcyI6WyJwYXJzZSIsImNzcyIsIm9wdHMiLCJpbnB1dCIsIklucHV0IiwicGFyc2VyIiwiUGFyc2VyIiwiZSIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIm5hbWUiLCJmcm9tIiwidGVzdCIsIm1lc3NhZ2UiLCJyb290Il0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUNBOzs7O0FBRUEsU0FBU0EsS0FBVCxDQUFnQkMsR0FBaEIsRUFBcUJDLElBQXJCLEVBQTJCO0FBQ3pCLE1BQUlDLEtBQUssR0FBRyxJQUFJQyxjQUFKLENBQVVILEdBQVYsRUFBZUMsSUFBZixDQUFaO0FBQ0EsTUFBSUcsTUFBTSxHQUFHLElBQUlDLGVBQUosQ0FBV0gsS0FBWCxDQUFiOztBQUNBLE1BQUk7QUFDRkUsSUFBQUEsTUFBTSxDQUFDTCxLQUFQO0FBQ0QsR0FGRCxDQUVFLE9BQU9PLENBQVAsRUFBVTtBQUNWLFFBQUlDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFaLEtBQXlCLFlBQTdCLEVBQTJDO0FBQ3pDLFVBQUlILENBQUMsQ0FBQ0ksSUFBRixLQUFXLGdCQUFYLElBQStCVCxJQUEvQixJQUF1Q0EsSUFBSSxDQUFDVSxJQUFoRCxFQUFzRDtBQUNwRCxZQUFJLFdBQVdDLElBQVgsQ0FBZ0JYLElBQUksQ0FBQ1UsSUFBckIsQ0FBSixFQUFnQztBQUM5QkwsVUFBQUEsQ0FBQyxDQUFDTyxPQUFGLElBQWEsb0NBQ0EsMkJBREEsR0FFQSx3Q0FGYjtBQUdELFNBSkQsTUFJTyxJQUFJLFVBQVVELElBQVYsQ0FBZVgsSUFBSSxDQUFDVSxJQUFwQixDQUFKLEVBQStCO0FBQ3BDTCxVQUFBQSxDQUFDLENBQUNPLE9BQUYsSUFBYSxvQ0FDQSwyQkFEQSxHQUVBLHdDQUZiO0FBR0QsU0FKTSxNQUlBLElBQUksV0FBV0QsSUFBWCxDQUFnQlgsSUFBSSxDQUFDVSxJQUFyQixDQUFKLEVBQWdDO0FBQ3JDTCxVQUFBQSxDQUFDLENBQUNPLE9BQUYsSUFBYSxvQ0FDQSwyQkFEQSxHQUVBLHdDQUZiO0FBR0Q7QUFDRjtBQUNGOztBQUNELFVBQU1QLENBQU47QUFDRDs7QUFFRCxTQUFPRixNQUFNLENBQUNVLElBQWQ7QUFDRDs7ZUFFY2YsSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJzZXIgZnJvbSAnLi9wYXJzZXInXG5pbXBvcnQgSW5wdXQgZnJvbSAnLi9pbnB1dCdcblxuZnVuY3Rpb24gcGFyc2UgKGNzcywgb3B0cykge1xuICBsZXQgaW5wdXQgPSBuZXcgSW5wdXQoY3NzLCBvcHRzKVxuICBsZXQgcGFyc2VyID0gbmV3IFBhcnNlcihpbnB1dClcbiAgdHJ5IHtcbiAgICBwYXJzZXIucGFyc2UoKVxuICB9IGNhdGNoIChlKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmIChlLm5hbWUgPT09ICdDc3NTeW50YXhFcnJvcicgJiYgb3B0cyAmJiBvcHRzLmZyb20pIHtcbiAgICAgICAgaWYgKC9cXC5zY3NzJC9pLnRlc3Qob3B0cy5mcm9tKSkge1xuICAgICAgICAgIGUubWVzc2FnZSArPSAnXFxuWW91IHRyaWVkIHRvIHBhcnNlIFNDU1Mgd2l0aCAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgJ3RoZSBzdGFuZGFyZCBDU1MgcGFyc2VyOyAnICtcbiAgICAgICAgICAgICAgICAgICAgICAgJ3RyeSBhZ2FpbiB3aXRoIHRoZSBwb3N0Y3NzLXNjc3MgcGFyc2VyJ1xuICAgICAgICB9IGVsc2UgaWYgKC9cXC5zYXNzL2kudGVzdChvcHRzLmZyb20pKSB7XG4gICAgICAgICAgZS5tZXNzYWdlICs9ICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgU2FzcyB3aXRoICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndGhlIHN0YW5kYXJkIENTUyBwYXJzZXI7ICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndHJ5IGFnYWluIHdpdGggdGhlIHBvc3Rjc3Mtc2FzcyBwYXJzZXInXG4gICAgICAgIH0gZWxzZSBpZiAoL1xcLmxlc3MkL2kudGVzdChvcHRzLmZyb20pKSB7XG4gICAgICAgICAgZS5tZXNzYWdlICs9ICdcXG5Zb3UgdHJpZWQgdG8gcGFyc2UgTGVzcyB3aXRoICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndGhlIHN0YW5kYXJkIENTUyBwYXJzZXI7ICcgK1xuICAgICAgICAgICAgICAgICAgICAgICAndHJ5IGFnYWluIHdpdGggdGhlIHBvc3Rjc3MtbGVzcyBwYXJzZXInXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgZVxuICB9XG5cbiAgcmV0dXJuIHBhcnNlci5yb290XG59XG5cbmV4cG9ydCBkZWZhdWx0IHBhcnNlXG4iXSwiZmlsZSI6InBhcnNlLmpzIn0=


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _node = _interopRequireDefault(__webpack_require__(36));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents a comment between declarations or statements (rule and at-rules).
 *
 * Comments inside selectors, at-rule parameters, or declaration values
 * will be stored in the `raws` properties explained above.
 *
 * @extends Node
 */
var Comment =
/*#__PURE__*/
function (_Node) {
  _inheritsLoose(Comment, _Node);

  function Comment(defaults) {
    var _this;

    _this = _Node.call(this, defaults) || this;
    _this.type = 'comment';
    return _this;
  }
  /**
   * @memberof Comment#
   * @member {string} text The comment’s text.
   */

  /**
   * @memberof Comment#
   * @member {object} raws Information to generate byte-to-byte equal
   *                       node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `before`: the space symbols before the node.
   * * `left`: the space symbols between `/*` and the comment’s text.
   * * `right`: the space symbols between the comment’s text.
   */


  return Comment;
}(_node.default);

var _default = Comment;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbW1lbnQuZXM2Il0sIm5hbWVzIjpbIkNvbW1lbnQiLCJkZWZhdWx0cyIsInR5cGUiLCJOb2RlIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFFQTs7Ozs7Ozs7SUFRTUEsTzs7Ozs7QUFDSixtQkFBYUMsUUFBYixFQUF1QjtBQUFBOztBQUNyQiw2QkFBTUEsUUFBTjtBQUNBLFVBQUtDLElBQUwsR0FBWSxTQUFaO0FBRnFCO0FBR3RCO0FBRUQ7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7OztFQVhvQkMsYTs7ZUF5QlBILE8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTm9kZSBmcm9tICcuL25vZGUnXG5cbi8qKlxuICogUmVwcmVzZW50cyBhIGNvbW1lbnQgYmV0d2VlbiBkZWNsYXJhdGlvbnMgb3Igc3RhdGVtZW50cyAocnVsZSBhbmQgYXQtcnVsZXMpLlxuICpcbiAqIENvbW1lbnRzIGluc2lkZSBzZWxlY3RvcnMsIGF0LXJ1bGUgcGFyYW1ldGVycywgb3IgZGVjbGFyYXRpb24gdmFsdWVzXG4gKiB3aWxsIGJlIHN0b3JlZCBpbiB0aGUgYHJhd3NgIHByb3BlcnRpZXMgZXhwbGFpbmVkIGFib3ZlLlxuICpcbiAqIEBleHRlbmRzIE5vZGVcbiAqL1xuY2xhc3MgQ29tbWVudCBleHRlbmRzIE5vZGUge1xuICBjb25zdHJ1Y3RvciAoZGVmYXVsdHMpIHtcbiAgICBzdXBlcihkZWZhdWx0cylcbiAgICB0aGlzLnR5cGUgPSAnY29tbWVudCdcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgQ29tbWVudCNcbiAgICogQG1lbWJlciB7c3RyaW5nfSB0ZXh0IFRoZSBjb21tZW504oCZcyB0ZXh0LlxuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIENvbW1lbnQjXG4gICAqIEBtZW1iZXIge29iamVjdH0gcmF3cyBJbmZvcm1hdGlvbiB0byBnZW5lcmF0ZSBieXRlLXRvLWJ5dGUgZXF1YWxcbiAgICogICAgICAgICAgICAgICAgICAgICAgIG5vZGUgc3RyaW5nIGFzIGl0IHdhcyBpbiB0aGUgb3JpZ2luIGlucHV0LlxuICAgKlxuICAgKiBFdmVyeSBwYXJzZXIgc2F2ZXMgaXRzIG93biBwcm9wZXJ0aWVzLFxuICAgKiBidXQgdGhlIGRlZmF1bHQgQ1NTIHBhcnNlciB1c2VzOlxuICAgKlxuICAgKiAqIGBiZWZvcmVgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZWZvcmUgdGhlIG5vZGUuXG4gICAqICogYGxlZnRgOiB0aGUgc3BhY2Ugc3ltYm9scyBiZXR3ZWVuIGAvKmAgYW5kIHRoZSBjb21tZW504oCZcyB0ZXh0LlxuICAgKiAqIGByaWdodGA6IHRoZSBzcGFjZSBzeW1ib2xzIGJldHdlZW4gdGhlIGNvbW1lbnTigJlzIHRleHQuXG4gICAqL1xufVxuXG5leHBvcnQgZGVmYXVsdCBDb21tZW50XG4iXSwiZmlsZSI6ImNvbW1lbnQuanMifQ==


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _container = _interopRequireDefault(__webpack_require__(43));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents an at-rule.
 *
 * If it’s followed in the CSS by a {} block, this node will have
 * a nodes property representing its children.
 *
 * @extends Container
 *
 * @example
 * const root = postcss.parse('@charset "UTF-8"; @media print {}')
 *
 * const charset = root.first
 * charset.type  //=> 'atrule'
 * charset.nodes //=> undefined
 *
 * const media = root.last
 * media.nodes   //=> []
 */
var AtRule =
/*#__PURE__*/
function (_Container) {
  _inheritsLoose(AtRule, _Container);

  function AtRule(defaults) {
    var _this;

    _this = _Container.call(this, defaults) || this;
    _this.type = 'atrule';
    return _this;
  }

  var _proto = AtRule.prototype;

  _proto.append = function append() {
    var _Container$prototype$;

    if (!this.nodes) this.nodes = [];

    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {
      children[_key] = arguments[_key];
    }

    return (_Container$prototype$ = _Container.prototype.append).call.apply(_Container$prototype$, [this].concat(children));
  };

  _proto.prepend = function prepend() {
    var _Container$prototype$2;

    if (!this.nodes) this.nodes = [];

    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      children[_key2] = arguments[_key2];
    }

    return (_Container$prototype$2 = _Container.prototype.prepend).call.apply(_Container$prototype$2, [this].concat(children));
  }
  /**
   * @memberof AtRule#
   * @member {string} name The at-rule’s name immediately follows the `@`.
   *
   * @example
   * const root  = postcss.parse('@media print {}')
   * media.name //=> 'media'
   * const media = root.first
   */

  /**
   * @memberof AtRule#
   * @member {string} params The at-rule’s parameters, the values
   *                         that follow the at-rule’s name but precede
   *                         any {} block.
   *
   * @example
   * const root  = postcss.parse('@media print, screen {}')
   * const media = root.first
   * media.params //=> 'print, screen'
   */

  /**
   * @memberof AtRule#
   * @member {object} raws Information to generate byte-to-byte equal
   *                        node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `before`: the space symbols before the node. It also stores `*`
   *   and `_` symbols before the declaration (IE hack).
   * * `after`: the space symbols after the last child of the node
   *   to the end of the node.
   * * `between`: the symbols between the property and value
   *   for declarations, selector and `{` for rules, or last parameter
   *   and `{` for at-rules.
   * * `semicolon`: contains true if the last child has
   *   an (optional) semicolon.
   * * `afterName`: the space between the at-rule name and its parameters.
   *
   * PostCSS cleans at-rule parameters from comments and extra spaces,
   * but it stores origin content in raws properties.
   * As such, if you don’t change a declaration’s value,
   * PostCSS will use the raw value with comments.
   *
   * @example
   * const root = postcss.parse('  @media\nprint {\n}')
   * root.first.first.raws //=> { before: '  ',
   *                       //     between: ' ',
   *                       //     afterName: '\n',
   *                       //     after: '\n' }
   */
  ;

  return AtRule;
}(_container.default);

var _default = AtRule;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0LXJ1bGUuZXM2Il0sIm5hbWVzIjpbIkF0UnVsZSIsImRlZmF1bHRzIiwidHlwZSIsImFwcGVuZCIsIm5vZGVzIiwiY2hpbGRyZW4iLCJwcmVwZW5kIiwiQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7Ozs7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBa0JNQSxNOzs7OztBQUNKLGtCQUFhQyxRQUFiLEVBQXVCO0FBQUE7O0FBQ3JCLGtDQUFNQSxRQUFOO0FBQ0EsVUFBS0MsSUFBTCxHQUFZLFFBQVo7QUFGcUI7QUFHdEI7Ozs7U0FFREMsTSxHQUFBLGtCQUFxQjtBQUFBOztBQUNuQixRQUFJLENBQUMsS0FBS0MsS0FBVixFQUFpQixLQUFLQSxLQUFMLEdBQWEsRUFBYjs7QUFERSxzQ0FBVkMsUUFBVTtBQUFWQSxNQUFBQSxRQUFVO0FBQUE7O0FBRW5CLHlEQUFhRixNQUFiLGtEQUF1QkUsUUFBdkI7QUFDRCxHOztTQUVEQyxPLEdBQUEsbUJBQXNCO0FBQUE7O0FBQ3BCLFFBQUksQ0FBQyxLQUFLRixLQUFWLEVBQWlCLEtBQUtBLEtBQUwsR0FBYSxFQUFiOztBQURHLHVDQUFWQyxRQUFVO0FBQVZBLE1BQUFBLFFBQVU7QUFBQTs7QUFFcEIsMERBQWFDLE9BQWIsbURBQXdCRCxRQUF4QjtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7QUFVQTs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUF0Q21CRSxrQjs7ZUF1RU5QLE0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vY29udGFpbmVyJ1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYW4gYXQtcnVsZS5cbiAqXG4gKiBJZiBpdOKAmXMgZm9sbG93ZWQgaW4gdGhlIENTUyBieSBhIHt9IGJsb2NrLCB0aGlzIG5vZGUgd2lsbCBoYXZlXG4gKiBhIG5vZGVzIHByb3BlcnR5IHJlcHJlc2VudGluZyBpdHMgY2hpbGRyZW4uXG4gKlxuICogQGV4dGVuZHMgQ29udGFpbmVyXG4gKlxuICogQGV4YW1wbGVcbiAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdAY2hhcnNldCBcIlVURi04XCI7IEBtZWRpYSBwcmludCB7fScpXG4gKlxuICogY29uc3QgY2hhcnNldCA9IHJvb3QuZmlyc3RcbiAqIGNoYXJzZXQudHlwZSAgLy89PiAnYXRydWxlJ1xuICogY2hhcnNldC5ub2RlcyAvLz0+IHVuZGVmaW5lZFxuICpcbiAqIGNvbnN0IG1lZGlhID0gcm9vdC5sYXN0XG4gKiBtZWRpYS5ub2RlcyAgIC8vPT4gW11cbiAqL1xuY2xhc3MgQXRSdWxlIGV4dGVuZHMgQ29udGFpbmVyIHtcbiAgY29uc3RydWN0b3IgKGRlZmF1bHRzKSB7XG4gICAgc3VwZXIoZGVmYXVsdHMpXG4gICAgdGhpcy50eXBlID0gJ2F0cnVsZSdcbiAgfVxuXG4gIGFwcGVuZCAoLi4uY2hpbGRyZW4pIHtcbiAgICBpZiAoIXRoaXMubm9kZXMpIHRoaXMubm9kZXMgPSBbXVxuICAgIHJldHVybiBzdXBlci5hcHBlbmQoLi4uY2hpbGRyZW4pXG4gIH1cblxuICBwcmVwZW5kICguLi5jaGlsZHJlbikge1xuICAgIGlmICghdGhpcy5ub2RlcykgdGhpcy5ub2RlcyA9IFtdXG4gICAgcmV0dXJuIHN1cGVyLnByZXBlbmQoLi4uY2hpbGRyZW4pXG4gIH1cblxuICAvKipcbiAgICogQG1lbWJlcm9mIEF0UnVsZSNcbiAgICogQG1lbWJlciB7c3RyaW5nfSBuYW1lIFRoZSBhdC1ydWxl4oCZcyBuYW1lIGltbWVkaWF0ZWx5IGZvbGxvd3MgdGhlIGBAYC5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCAgPSBwb3N0Y3NzLnBhcnNlKCdAbWVkaWEgcHJpbnQge30nKVxuICAgKiBtZWRpYS5uYW1lIC8vPT4gJ21lZGlhJ1xuICAgKiBjb25zdCBtZWRpYSA9IHJvb3QuZmlyc3RcbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBBdFJ1bGUjXG4gICAqIEBtZW1iZXIge3N0cmluZ30gcGFyYW1zIFRoZSBhdC1ydWxl4oCZcyBwYXJhbWV0ZXJzLCB0aGUgdmFsdWVzXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQgZm9sbG93IHRoZSBhdC1ydWxl4oCZcyBuYW1lIGJ1dCBwcmVjZWRlXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgIGFueSB7fSBibG9jay5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCAgPSBwb3N0Y3NzLnBhcnNlKCdAbWVkaWEgcHJpbnQsIHNjcmVlbiB7fScpXG4gICAqIGNvbnN0IG1lZGlhID0gcm9vdC5maXJzdFxuICAgKiBtZWRpYS5wYXJhbXMgLy89PiAncHJpbnQsIHNjcmVlbidcbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZW1iZXJvZiBBdFJ1bGUjXG4gICAqIEBtZW1iZXIge29iamVjdH0gcmF3cyBJbmZvcm1hdGlvbiB0byBnZW5lcmF0ZSBieXRlLXRvLWJ5dGUgZXF1YWxcbiAgICogICAgICAgICAgICAgICAgICAgICAgICBub2RlIHN0cmluZyBhcyBpdCB3YXMgaW4gdGhlIG9yaWdpbiBpbnB1dC5cbiAgICpcbiAgICogRXZlcnkgcGFyc2VyIHNhdmVzIGl0cyBvd24gcHJvcGVydGllcyxcbiAgICogYnV0IHRoZSBkZWZhdWx0IENTUyBwYXJzZXIgdXNlczpcbiAgICpcbiAgICogKiBgYmVmb3JlYDogdGhlIHNwYWNlIHN5bWJvbHMgYmVmb3JlIHRoZSBub2RlLiBJdCBhbHNvIHN0b3JlcyBgKmBcbiAgICogICBhbmQgYF9gIHN5bWJvbHMgYmVmb3JlIHRoZSBkZWNsYXJhdGlvbiAoSUUgaGFjaykuXG4gICAqICogYGFmdGVyYDogdGhlIHNwYWNlIHN5bWJvbHMgYWZ0ZXIgdGhlIGxhc3QgY2hpbGQgb2YgdGhlIG5vZGVcbiAgICogICB0byB0aGUgZW5kIG9mIHRoZSBub2RlLlxuICAgKiAqIGBiZXR3ZWVuYDogdGhlIHN5bWJvbHMgYmV0d2VlbiB0aGUgcHJvcGVydHkgYW5kIHZhbHVlXG4gICAqICAgZm9yIGRlY2xhcmF0aW9ucywgc2VsZWN0b3IgYW5kIGB7YCBmb3IgcnVsZXMsIG9yIGxhc3QgcGFyYW1ldGVyXG4gICAqICAgYW5kIGB7YCBmb3IgYXQtcnVsZXMuXG4gICAqICogYHNlbWljb2xvbmA6IGNvbnRhaW5zIHRydWUgaWYgdGhlIGxhc3QgY2hpbGQgaGFzXG4gICAqICAgYW4gKG9wdGlvbmFsKSBzZW1pY29sb24uXG4gICAqICogYGFmdGVyTmFtZWA6IHRoZSBzcGFjZSBiZXR3ZWVuIHRoZSBhdC1ydWxlIG5hbWUgYW5kIGl0cyBwYXJhbWV0ZXJzLlxuICAgKlxuICAgKiBQb3N0Q1NTIGNsZWFucyBhdC1ydWxlIHBhcmFtZXRlcnMgZnJvbSBjb21tZW50cyBhbmQgZXh0cmEgc3BhY2VzLFxuICAgKiBidXQgaXQgc3RvcmVzIG9yaWdpbiBjb250ZW50IGluIHJhd3MgcHJvcGVydGllcy5cbiAgICogQXMgc3VjaCwgaWYgeW91IGRvbuKAmXQgY2hhbmdlIGEgZGVjbGFyYXRpb27igJlzIHZhbHVlLFxuICAgKiBQb3N0Q1NTIHdpbGwgdXNlIHRoZSByYXcgdmFsdWUgd2l0aCBjb21tZW50cy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJyAgQG1lZGlhXFxucHJpbnQge1xcbn0nKVxuICAgKiByb290LmZpcnN0LmZpcnN0LnJhd3MgLy89PiB7IGJlZm9yZTogJyAgJyxcbiAgICogICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBiZXR3ZWVuOiAnICcsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgYWZ0ZXJOYW1lOiAnXFxuJyxcbiAgICogICAgICAgICAgICAgICAgICAgICAgIC8vICAgICBhZnRlcjogJ1xcbicgfVxuICAgKi9cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXRSdWxlXG4iXSwiZmlsZSI6ImF0LXJ1bGUuanMifQ==


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _declaration = _interopRequireDefault(__webpack_require__(35));

var _comment = _interopRequireDefault(__webpack_require__(41));

var _node = _interopRequireDefault(__webpack_require__(36));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function cleanSource(nodes) {
  return nodes.map(function (i) {
    if (i.nodes) i.nodes = cleanSource(i.nodes);
    delete i.source;
    return i;
  });
}
/**
 * The {@link Root}, {@link AtRule}, and {@link Rule} container nodes
 * inherit some common methods to help work with their children.
 *
 * Note that all containers can store any content. If you write a rule inside
 * a rule, PostCSS will parse it.
 *
 * @extends Node
 * @abstract
 */


var Container =
/*#__PURE__*/
function (_Node) {
  _inheritsLoose(Container, _Node);

  function Container() {
    return _Node.apply(this, arguments) || this;
  }

  var _proto = Container.prototype;

  _proto.push = function push(child) {
    child.parent = this;
    this.nodes.push(child);
    return this;
  }
  /**
   * Iterates through the container’s immediate children,
   * calling `callback` for each child.
   *
   * Returning `false` in the callback will break iteration.
   *
   * This method only iterates through the container’s immediate children.
   * If you need to recursively iterate through all the container’s descendant
   * nodes, use {@link Container#walk}.
   *
   * Unlike the for `{}`-cycle or `Array#forEach` this iterator is safe
   * if you are mutating the array of child nodes during iteration.
   * PostCSS will adjust the current index to match the mutations.
   *
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * const root = postcss.parse('a { color: black; z-index: 1 }')
   * const rule = root.first
   *
   * for (const decl of rule.nodes) {
   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })
   *   // Cycle will be infinite, because cloneBefore moves the current node
   *   // to the next index
   * }
   *
   * rule.each(decl => {
   *   decl.cloneBefore({ prop: '-webkit-' + decl.prop })
   *   // Will be executed only for color and z-index
   * })
   */
  ;

  _proto.each = function each(callback) {
    if (!this.lastEach) this.lastEach = 0;
    if (!this.indexes) this.indexes = {};
    this.lastEach += 1;
    var id = this.lastEach;
    this.indexes[id] = 0;
    if (!this.nodes) return undefined;
    var index, result;

    while (this.indexes[id] < this.nodes.length) {
      index = this.indexes[id];
      result = callback(this.nodes[index], index);
      if (result === false) break;
      this.indexes[id] += 1;
    }

    delete this.indexes[id];
    return result;
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each node.
   *
   * Like container.each(), this method is safe to use
   * if you are mutating arrays during iteration.
   *
   * If you only need to iterate through the container’s immediate children,
   * use {@link Container#each}.
   *
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * root.walk(node => {
   *   // Traverses all descendant nodes.
   * })
   */
  ;

  _proto.walk = function walk(callback) {
    return this.each(function (child, i) {
      var result;

      try {
        result = callback(child, i);
      } catch (e) {
        e.postcssNode = child;

        if (e.stack && child.source && /\n\s{4}at /.test(e.stack)) {
          var s = child.source;
          e.stack = e.stack.replace(/\n\s{4}at /, "$&" + s.input.from + ":" + s.start.line + ":" + s.start.column + "$&");
        }

        throw e;
      }

      if (result !== false && child.walk) {
        result = child.walk(callback);
      }

      return result;
    });
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each declaration node.
   *
   * If you pass a filter, iteration will only happen over declarations
   * with matching properties.
   *
   * Like {@link Container#each}, this method is safe
   * to use if you are mutating arrays during iteration.
   *
   * @param {string|RegExp} [prop]   String or regular expression
   *                                 to filter declarations by property name.
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * root.walkDecls(decl => {
   *   checkPropertySupport(decl.prop)
   * })
   *
   * root.walkDecls('border-radius', decl => {
   *   decl.remove()
   * })
   *
   * root.walkDecls(/^background/, decl => {
   *   decl.value = takeFirstColorFromGradient(decl.value)
   * })
   */
  ;

  _proto.walkDecls = function walkDecls(prop, callback) {
    if (!callback) {
      callback = prop;
      return this.walk(function (child, i) {
        if (child.type === 'decl') {
          return callback(child, i);
        }
      });
    }

    if (prop instanceof RegExp) {
      return this.walk(function (child, i) {
        if (child.type === 'decl' && prop.test(child.prop)) {
          return callback(child, i);
        }
      });
    }

    return this.walk(function (child, i) {
      if (child.type === 'decl' && child.prop === prop) {
        return callback(child, i);
      }
    });
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each rule node.
   *
   * If you pass a filter, iteration will only happen over rules
   * with matching selectors.
   *
   * Like {@link Container#each}, this method is safe
   * to use if you are mutating arrays during iteration.
   *
   * @param {string|RegExp} [selector] String or regular expression
   *                                   to filter rules by selector.
   * @param {childIterator} callback   Iterator receives each node and index.
   *
   * @return {false|undefined} returns `false` if iteration was broke.
   *
   * @example
   * const selectors = []
   * root.walkRules(rule => {
   *   selectors.push(rule.selector)
   * })
   * console.log(`Your CSS uses ${ selectors.length } selectors`)
   */
  ;

  _proto.walkRules = function walkRules(selector, callback) {
    if (!callback) {
      callback = selector;
      return this.walk(function (child, i) {
        if (child.type === 'rule') {
          return callback(child, i);
        }
      });
    }

    if (selector instanceof RegExp) {
      return this.walk(function (child, i) {
        if (child.type === 'rule' && selector.test(child.selector)) {
          return callback(child, i);
        }
      });
    }

    return this.walk(function (child, i) {
      if (child.type === 'rule' && child.selector === selector) {
        return callback(child, i);
      }
    });
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each at-rule node.
   *
   * If you pass a filter, iteration will only happen over at-rules
   * that have matching names.
   *
   * Like {@link Container#each}, this method is safe
   * to use if you are mutating arrays during iteration.
   *
   * @param {string|RegExp} [name]   String or regular expression
   *                                 to filter at-rules by name.
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * root.walkAtRules(rule => {
   *   if (isOld(rule.name)) rule.remove()
   * })
   *
   * let first = false
   * root.walkAtRules('charset', rule => {
   *   if (!first) {
   *     first = true
   *   } else {
   *     rule.remove()
   *   }
   * })
   */
  ;

  _proto.walkAtRules = function walkAtRules(name, callback) {
    if (!callback) {
      callback = name;
      return this.walk(function (child, i) {
        if (child.type === 'atrule') {
          return callback(child, i);
        }
      });
    }

    if (name instanceof RegExp) {
      return this.walk(function (child, i) {
        if (child.type === 'atrule' && name.test(child.name)) {
          return callback(child, i);
        }
      });
    }

    return this.walk(function (child, i) {
      if (child.type === 'atrule' && child.name === name) {
        return callback(child, i);
      }
    });
  }
  /**
   * Traverses the container’s descendant nodes, calling callback
   * for each comment node.
   *
   * Like {@link Container#each}, this method is safe
   * to use if you are mutating arrays during iteration.
   *
   * @param {childIterator} callback Iterator receives each node and index.
   *
   * @return {false|undefined} Returns `false` if iteration was broke.
   *
   * @example
   * root.walkComments(comment => {
   *   comment.remove()
   * })
   */
  ;

  _proto.walkComments = function walkComments(callback) {
    return this.walk(function (child, i) {
      if (child.type === 'comment') {
        return callback(child, i);
      }
    });
  }
  /**
   * Inserts new nodes to the end of the container.
   *
   * @param {...(Node|object|string|Node[])} children New nodes.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })
   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })
   * rule.append(decl1, decl2)
   *
   * root.append({ name: 'charset', params: '"UTF-8"' })  // at-rule
   * root.append({ selector: 'a' })                       // rule
   * rule.append({ prop: 'color', value: 'black' })       // declaration
   * rule.append({ text: 'Comment' })                     // comment
   *
   * root.append('a {}')
   * root.first.append('color: black; z-index: 1')
   */
  ;

  _proto.append = function append() {
    for (var _len = arguments.length, children = new Array(_len), _key = 0; _key < _len; _key++) {
      children[_key] = arguments[_key];
    }

    for (var _i = 0, _children = children; _i < _children.length; _i++) {
      var child = _children[_i];
      var nodes = this.normalize(child, this.last);

      for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i2 >= _iterator.length) break;
          _ref = _iterator[_i2++];
        } else {
          _i2 = _iterator.next();
          if (_i2.done) break;
          _ref = _i2.value;
        }

        var node = _ref;
        this.nodes.push(node);
      }
    }

    return this;
  }
  /**
   * Inserts new nodes to the start of the container.
   *
   * @param {...(Node|object|string|Node[])} children New nodes.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * const decl1 = postcss.decl({ prop: 'color', value: 'black' })
   * const decl2 = postcss.decl({ prop: 'background-color', value: 'white' })
   * rule.prepend(decl1, decl2)
   *
   * root.append({ name: 'charset', params: '"UTF-8"' })  // at-rule
   * root.append({ selector: 'a' })                       // rule
   * rule.append({ prop: 'color', value: 'black' })       // declaration
   * rule.append({ text: 'Comment' })                     // comment
   *
   * root.append('a {}')
   * root.first.append('color: black; z-index: 1')
   */
  ;

  _proto.prepend = function prepend() {
    for (var _len2 = arguments.length, children = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      children[_key2] = arguments[_key2];
    }

    children = children.reverse();

    for (var _iterator2 = children, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i3 >= _iterator2.length) break;
        _ref2 = _iterator2[_i3++];
      } else {
        _i3 = _iterator2.next();
        if (_i3.done) break;
        _ref2 = _i3.value;
      }

      var child = _ref2;
      var nodes = this.normalize(child, this.first, 'prepend').reverse();

      for (var _iterator3 = nodes, _isArray3 = Array.isArray(_iterator3), _i4 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        var _ref3;

        if (_isArray3) {
          if (_i4 >= _iterator3.length) break;
          _ref3 = _iterator3[_i4++];
        } else {
          _i4 = _iterator3.next();
          if (_i4.done) break;
          _ref3 = _i4.value;
        }

        var node = _ref3;
        this.nodes.unshift(node);
      }

      for (var id in this.indexes) {
        this.indexes[id] = this.indexes[id] + nodes.length;
      }
    }

    return this;
  };

  _proto.cleanRaws = function cleanRaws(keepBetween) {
    _Node.prototype.cleanRaws.call(this, keepBetween);

    if (this.nodes) {
      for (var _iterator4 = this.nodes, _isArray4 = Array.isArray(_iterator4), _i5 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
        var _ref4;

        if (_isArray4) {
          if (_i5 >= _iterator4.length) break;
          _ref4 = _iterator4[_i5++];
        } else {
          _i5 = _iterator4.next();
          if (_i5.done) break;
          _ref4 = _i5.value;
        }

        var node = _ref4;
        node.cleanRaws(keepBetween);
      }
    }
  }
  /**
   * Insert new node before old node within the container.
   *
   * @param {Node|number} exist             Child or child’s index.
   * @param {Node|object|string|Node[]} add New node.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * rule.insertBefore(decl, decl.clone({ prop: '-webkit-' + decl.prop }))
   */
  ;

  _proto.insertBefore = function insertBefore(exist, add) {
    exist = this.index(exist);
    var type = exist === 0 ? 'prepend' : false;
    var nodes = this.normalize(add, this.nodes[exist], type).reverse();

    for (var _iterator5 = nodes, _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
      var _ref5;

      if (_isArray5) {
        if (_i6 >= _iterator5.length) break;
        _ref5 = _iterator5[_i6++];
      } else {
        _i6 = _iterator5.next();
        if (_i6.done) break;
        _ref5 = _i6.value;
      }

      var node = _ref5;
      this.nodes.splice(exist, 0, node);
    }

    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (exist <= index) {
        this.indexes[id] = index + nodes.length;
      }
    }

    return this;
  }
  /**
   * Insert new node after old node within the container.
   *
   * @param {Node|number} exist             Child or child’s index.
   * @param {Node|object|string|Node[]} add New node.
   *
   * @return {Node} This node for methods chain.
   */
  ;

  _proto.insertAfter = function insertAfter(exist, add) {
    exist = this.index(exist);
    var nodes = this.normalize(add, this.nodes[exist]).reverse();

    for (var _iterator6 = nodes, _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {
      var _ref6;

      if (_isArray6) {
        if (_i7 >= _iterator6.length) break;
        _ref6 = _iterator6[_i7++];
      } else {
        _i7 = _iterator6.next();
        if (_i7.done) break;
        _ref6 = _i7.value;
      }

      var node = _ref6;
      this.nodes.splice(exist + 1, 0, node);
    }

    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (exist < index) {
        this.indexes[id] = index + nodes.length;
      }
    }

    return this;
  }
  /**
   * Removes node from the container and cleans the parent properties
   * from the node and its children.
   *
   * @param {Node|number} child Child or child’s index.
   *
   * @return {Node} This node for methods chain
   *
   * @example
   * rule.nodes.length  //=> 5
   * rule.removeChild(decl)
   * rule.nodes.length  //=> 4
   * decl.parent        //=> undefined
   */
  ;

  _proto.removeChild = function removeChild(child) {
    child = this.index(child);
    this.nodes[child].parent = undefined;
    this.nodes.splice(child, 1);
    var index;

    for (var id in this.indexes) {
      index = this.indexes[id];

      if (index >= child) {
        this.indexes[id] = index - 1;
      }
    }

    return this;
  }
  /**
   * Removes all children from the container
   * and cleans their parent properties.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * rule.removeAll()
   * rule.nodes.length //=> 0
   */
  ;

  _proto.removeAll = function removeAll() {
    for (var _iterator7 = this.nodes, _isArray7 = Array.isArray(_iterator7), _i8 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {
      var _ref7;

      if (_isArray7) {
        if (_i8 >= _iterator7.length) break;
        _ref7 = _iterator7[_i8++];
      } else {
        _i8 = _iterator7.next();
        if (_i8.done) break;
        _ref7 = _i8.value;
      }

      var node = _ref7;
      node.parent = undefined;
    }

    this.nodes = [];
    return this;
  }
  /**
   * Passes all declaration values within the container that match pattern
   * through callback, replacing those values with the returned result
   * of callback.
   *
   * This method is useful if you are using a custom unit or function
   * and need to iterate through all values.
   *
   * @param {string|RegExp} pattern      Replace pattern.
   * @param {object} opts                Options to speed up the search.
   * @param {string|string[]} opts.props An array of property names.
   * @param {string} opts.fast           String that’s used to narrow down
   *                                     values and speed up the regexp search.
   * @param {function|string} callback   String to replace pattern or callback
   *                                     that returns a new value. The callback
   *                                     will receive the same arguments
   *                                     as those passed to a function parameter
   *                                     of `String#replace`.
   *
   * @return {Node} This node for methods chain.
   *
   * @example
   * root.replaceValues(/\d+rem/, { fast: 'rem' }, string => {
   *   return 15 * parseInt(string) + 'px'
   * })
   */
  ;

  _proto.replaceValues = function replaceValues(pattern, opts, callback) {
    if (!callback) {
      callback = opts;
      opts = {};
    }

    this.walkDecls(function (decl) {
      if (opts.props && opts.props.indexOf(decl.prop) === -1) return;
      if (opts.fast && decl.value.indexOf(opts.fast) === -1) return;
      decl.value = decl.value.replace(pattern, callback);
    });
    return this;
  }
  /**
   * Returns `true` if callback returns `true`
   * for all of the container’s children.
   *
   * @param {childCondition} condition Iterator returns true or false.
   *
   * @return {boolean} Is every child pass condition.
   *
   * @example
   * const noPrefixes = rule.every(i => i.prop[0] !== '-')
   */
  ;

  _proto.every = function every(condition) {
    return this.nodes.every(condition);
  }
  /**
   * Returns `true` if callback returns `true` for (at least) one
   * of the container’s children.
   *
   * @param {childCondition} condition Iterator returns true or false.
   *
   * @return {boolean} Is some child pass condition.
   *
   * @example
   * const hasPrefix = rule.some(i => i.prop[0] === '-')
   */
  ;

  _proto.some = function some(condition) {
    return this.nodes.some(condition);
  }
  /**
   * Returns a `child`’s index within the {@link Container#nodes} array.
   *
   * @param {Node} child Child of the current container.
   *
   * @return {number} Child index.
   *
   * @example
   * rule.index( rule.nodes[2] ) //=> 2
   */
  ;

  _proto.index = function index(child) {
    if (typeof child === 'number') {
      return child;
    }

    return this.nodes.indexOf(child);
  }
  /**
   * The container’s first child.
   *
   * @type {Node}
   *
   * @example
   * rule.first === rules.nodes[0]
   */
  ;

  _proto.normalize = function normalize(nodes, sample) {
    var _this = this;

    if (typeof nodes === 'string') {
      var parse = __webpack_require__(40);

      nodes = cleanSource(parse(nodes).nodes);
    } else if (Array.isArray(nodes)) {
      nodes = nodes.slice(0);

      for (var _iterator8 = nodes, _isArray8 = Array.isArray(_iterator8), _i9 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {
        var _ref8;

        if (_isArray8) {
          if (_i9 >= _iterator8.length) break;
          _ref8 = _iterator8[_i9++];
        } else {
          _i9 = _iterator8.next();
          if (_i9.done) break;
          _ref8 = _i9.value;
        }

        var i = _ref8;
        if (i.parent) i.parent.removeChild(i, 'ignore');
      }
    } else if (nodes.type === 'root') {
      nodes = nodes.nodes.slice(0);

      for (var _iterator9 = nodes, _isArray9 = Array.isArray(_iterator9), _i10 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {
        var _ref9;

        if (_isArray9) {
          if (_i10 >= _iterator9.length) break;
          _ref9 = _iterator9[_i10++];
        } else {
          _i10 = _iterator9.next();
          if (_i10.done) break;
          _ref9 = _i10.value;
        }

        var _i11 = _ref9;
        if (_i11.parent) _i11.parent.removeChild(_i11, 'ignore');
      }
    } else if (nodes.type) {
      nodes = [nodes];
    } else if (nodes.prop) {
      if (typeof nodes.value === 'undefined') {
        throw new Error('Value field is missed in node creation');
      } else if (typeof nodes.value !== 'string') {
        nodes.value = String(nodes.value);
      }

      nodes = [new _declaration.default(nodes)];
    } else if (nodes.selector) {
      var Rule = __webpack_require__(44);

      nodes = [new Rule(nodes)];
    } else if (nodes.name) {
      var AtRule = __webpack_require__(42);

      nodes = [new AtRule(nodes)];
    } else if (nodes.text) {
      nodes = [new _comment.default(nodes)];
    } else {
      throw new Error('Unknown node type in node creation');
    }

    var processed = nodes.map(function (i) {
      if (i.parent) i.parent.removeChild(i);

      if (typeof i.raws.before === 'undefined') {
        if (sample && typeof sample.raws.before !== 'undefined') {
          i.raws.before = sample.raws.before.replace(/[^\s]/g, '');
        }
      }

      i.parent = _this;
      return i;
    });
    return processed;
  }
  /**
   * @memberof Container#
   * @member {Node[]} nodes An array containing the container’s children.
   *
   * @example
   * const root = postcss.parse('a { color: black }')
   * root.nodes.length           //=> 1
   * root.nodes[0].selector      //=> 'a'
   * root.nodes[0].nodes[0].prop //=> 'color'
   */
  ;

  _createClass(Container, [{
    key: "first",
    get: function get() {
      if (!this.nodes) return undefined;
      return this.nodes[0];
    }
    /**
     * The container’s last child.
     *
     * @type {Node}
     *
     * @example
     * rule.last === rule.nodes[rule.nodes.length - 1]
     */

  }, {
    key: "last",
    get: function get() {
      if (!this.nodes) return undefined;
      return this.nodes[this.nodes.length - 1];
    }
  }]);

  return Container;
}(_node.default);

var _default = Container;
/**
 * @callback childCondition
 * @param {Node} node    Container child.
 * @param {number} index Child index.
 * @param {Node[]} nodes All container children.
 * @return {boolean}
 */

/**
 * @callback childIterator
 * @param {Node} node    Container child.
 * @param {number} index Child index.
 * @return {false|undefined} Returning `false` will break iteration.
 */

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _container = _interopRequireDefault(__webpack_require__(43));

var _list = _interopRequireDefault(__webpack_require__(66));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents a CSS rule: a selector followed by a declaration block.
 *
 * @extends Container
 *
 * @example
 * const root = postcss.parse('a{}')
 * const rule = root.first
 * rule.type       //=> 'rule'
 * rule.toString() //=> 'a{}'
 */
var Rule =
/*#__PURE__*/
function (_Container) {
  _inheritsLoose(Rule, _Container);

  function Rule(defaults) {
    var _this;

    _this = _Container.call(this, defaults) || this;
    _this.type = 'rule';
    if (!_this.nodes) _this.nodes = [];
    return _this;
  }
  /**
   * An array containing the rule’s individual selectors.
   * Groups of selectors are split at commas.
   *
   * @type {string[]}
   *
   * @example
   * const root = postcss.parse('a, b { }')
   * const rule = root.first
   *
   * rule.selector  //=> 'a, b'
   * rule.selectors //=> ['a', 'b']
   *
   * rule.selectors = ['a', 'strong']
   * rule.selector //=> 'a, strong'
   */


  _createClass(Rule, [{
    key: "selectors",
    get: function get() {
      return _list.default.comma(this.selector);
    },
    set: function set(values) {
      var match = this.selector ? this.selector.match(/,\s*/) : null;
      var sep = match ? match[0] : ',' + this.raw('between', 'beforeOpen');
      this.selector = values.join(sep);
    }
    /**
     * @memberof Rule#
     * @member {string} selector The rule’s full selector represented
     *                           as a string.
     *
     * @example
     * const root = postcss.parse('a, b { }')
     * const rule = root.first
     * rule.selector //=> 'a, b'
     */

    /**
     * @memberof Rule#
     * @member {object} raws Information to generate byte-to-byte equal
     *                       node string as it was in the origin input.
     *
     * Every parser saves its own properties,
     * but the default CSS parser uses:
     *
     * * `before`: the space symbols before the node. It also stores `*`
     *   and `_` symbols before the declaration (IE hack).
     * * `after`: the space symbols after the last child of the node
     *   to the end of the node.
     * * `between`: the symbols between the property and value
     *   for declarations, selector and `{` for rules, or last parameter
     *   and `{` for at-rules.
     * * `semicolon`: contains `true` if the last child has
     *   an (optional) semicolon.
     * * `ownSemicolon`: contains `true` if there is semicolon after rule.
     *
     * PostCSS cleans selectors from comments and extra spaces,
     * but it stores origin content in raws properties.
     * As such, if you don’t change a declaration’s value,
     * PostCSS will use the raw value with comments.
     *
     * @example
     * const root = postcss.parse('a {\n  color:black\n}')
     * root.first.first.raws //=> { before: '', between: ' ', after: '\n' }
     */

  }]);

  return Rule;
}(_container.default);

var _default = Rule;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJ1bGUuZXM2Il0sIm5hbWVzIjpbIlJ1bGUiLCJkZWZhdWx0cyIsInR5cGUiLCJub2RlcyIsImxpc3QiLCJjb21tYSIsInNlbGVjdG9yIiwidmFsdWVzIiwibWF0Y2giLCJzZXAiLCJyYXciLCJqb2luIiwiQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7O0FBRUE7Ozs7Ozs7Ozs7O0lBV01BLEk7Ozs7O0FBQ0osZ0JBQWFDLFFBQWIsRUFBdUI7QUFBQTs7QUFDckIsa0NBQU1BLFFBQU47QUFDQSxVQUFLQyxJQUFMLEdBQVksTUFBWjtBQUNBLFFBQUksQ0FBQyxNQUFLQyxLQUFWLEVBQWlCLE1BQUtBLEtBQUwsR0FBYSxFQUFiO0FBSEk7QUFJdEI7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7d0JBZ0JpQjtBQUNmLGFBQU9DLGNBQUtDLEtBQUwsQ0FBVyxLQUFLQyxRQUFoQixDQUFQO0FBQ0QsSztzQkFFY0MsTSxFQUFRO0FBQ3JCLFVBQUlDLEtBQUssR0FBRyxLQUFLRixRQUFMLEdBQWdCLEtBQUtBLFFBQUwsQ0FBY0UsS0FBZCxDQUFvQixNQUFwQixDQUFoQixHQUE4QyxJQUExRDtBQUNBLFVBQUlDLEdBQUcsR0FBR0QsS0FBSyxHQUFHQSxLQUFLLENBQUMsQ0FBRCxDQUFSLEdBQWMsTUFBTSxLQUFLRSxHQUFMLENBQVMsU0FBVCxFQUFvQixZQUFwQixDQUFuQztBQUNBLFdBQUtKLFFBQUwsR0FBZ0JDLE1BQU0sQ0FBQ0ksSUFBUCxDQUFZRixHQUFaLENBQWhCO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7QUFXQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RUE1Q2lCRyxrQjs7ZUEwRUpaLEkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vY29udGFpbmVyJ1xuaW1wb3J0IGxpc3QgZnJvbSAnLi9saXN0J1xuXG4vKipcbiAqIFJlcHJlc2VudHMgYSBDU1MgcnVsZTogYSBzZWxlY3RvciBmb2xsb3dlZCBieSBhIGRlY2xhcmF0aW9uIGJsb2NrLlxuICpcbiAqIEBleHRlbmRzIENvbnRhaW5lclxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYXt9JylcbiAqIGNvbnN0IHJ1bGUgPSByb290LmZpcnN0XG4gKiBydWxlLnR5cGUgICAgICAgLy89PiAncnVsZSdcbiAqIHJ1bGUudG9TdHJpbmcoKSAvLz0+ICdhe30nXG4gKi9cbmNsYXNzIFJ1bGUgZXh0ZW5kcyBDb250YWluZXIge1xuICBjb25zdHJ1Y3RvciAoZGVmYXVsdHMpIHtcbiAgICBzdXBlcihkZWZhdWx0cylcbiAgICB0aGlzLnR5cGUgPSAncnVsZSdcbiAgICBpZiAoIXRoaXMubm9kZXMpIHRoaXMubm9kZXMgPSBbXVxuICB9XG5cbiAgLyoqXG4gICAqIEFuIGFycmF5IGNvbnRhaW5pbmcgdGhlIHJ1bGXigJlzIGluZGl2aWR1YWwgc2VsZWN0b3JzLlxuICAgKiBHcm91cHMgb2Ygc2VsZWN0b3JzIGFyZSBzcGxpdCBhdCBjb21tYXMuXG4gICAqXG4gICAqIEB0eXBlIHtzdHJpbmdbXX1cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2EsIGIgeyB9JylcbiAgICogY29uc3QgcnVsZSA9IHJvb3QuZmlyc3RcbiAgICpcbiAgICogcnVsZS5zZWxlY3RvciAgLy89PiAnYSwgYidcbiAgICogcnVsZS5zZWxlY3RvcnMgLy89PiBbJ2EnLCAnYiddXG4gICAqXG4gICAqIHJ1bGUuc2VsZWN0b3JzID0gWydhJywgJ3N0cm9uZyddXG4gICAqIHJ1bGUuc2VsZWN0b3IgLy89PiAnYSwgc3Ryb25nJ1xuICAgKi9cbiAgZ2V0IHNlbGVjdG9ycyAoKSB7XG4gICAgcmV0dXJuIGxpc3QuY29tbWEodGhpcy5zZWxlY3RvcilcbiAgfVxuXG4gIHNldCBzZWxlY3RvcnMgKHZhbHVlcykge1xuICAgIGxldCBtYXRjaCA9IHRoaXMuc2VsZWN0b3IgPyB0aGlzLnNlbGVjdG9yLm1hdGNoKC8sXFxzKi8pIDogbnVsbFxuICAgIGxldCBzZXAgPSBtYXRjaCA/IG1hdGNoWzBdIDogJywnICsgdGhpcy5yYXcoJ2JldHdlZW4nLCAnYmVmb3JlT3BlbicpXG4gICAgdGhpcy5zZWxlY3RvciA9IHZhbHVlcy5qb2luKHNlcClcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgUnVsZSNcbiAgICogQG1lbWJlciB7c3RyaW5nfSBzZWxlY3RvciBUaGUgcnVsZeKAmXMgZnVsbCBzZWxlY3RvciByZXByZXNlbnRlZFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgIGFzIGEgc3RyaW5nLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBjb25zdCByb290ID0gcG9zdGNzcy5wYXJzZSgnYSwgYiB7IH0nKVxuICAgKiBjb25zdCBydWxlID0gcm9vdC5maXJzdFxuICAgKiBydWxlLnNlbGVjdG9yIC8vPT4gJ2EsIGInXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgUnVsZSNcbiAgICogQG1lbWJlciB7b2JqZWN0fSByYXdzIEluZm9ybWF0aW9uIHRvIGdlbmVyYXRlIGJ5dGUtdG8tYnl0ZSBlcXVhbFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAqXG4gICAqIEV2ZXJ5IHBhcnNlciBzYXZlcyBpdHMgb3duIHByb3BlcnRpZXMsXG4gICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAqXG4gICAqICogYGJlZm9yZWA6IHRoZSBzcGFjZSBzeW1ib2xzIGJlZm9yZSB0aGUgbm9kZS4gSXQgYWxzbyBzdG9yZXMgYCpgXG4gICAqICAgYW5kIGBfYCBzeW1ib2xzIGJlZm9yZSB0aGUgZGVjbGFyYXRpb24gKElFIGhhY2spLlxuICAgKiAqIGBhZnRlcmA6IHRoZSBzcGFjZSBzeW1ib2xzIGFmdGVyIHRoZSBsYXN0IGNoaWxkIG9mIHRoZSBub2RlXG4gICAqICAgdG8gdGhlIGVuZCBvZiB0aGUgbm9kZS5cbiAgICogKiBgYmV0d2VlbmA6IHRoZSBzeW1ib2xzIGJldHdlZW4gdGhlIHByb3BlcnR5IGFuZCB2YWx1ZVxuICAgKiAgIGZvciBkZWNsYXJhdGlvbnMsIHNlbGVjdG9yIGFuZCBge2AgZm9yIHJ1bGVzLCBvciBsYXN0IHBhcmFtZXRlclxuICAgKiAgIGFuZCBge2AgZm9yIGF0LXJ1bGVzLlxuICAgKiAqIGBzZW1pY29sb25gOiBjb250YWlucyBgdHJ1ZWAgaWYgdGhlIGxhc3QgY2hpbGQgaGFzXG4gICAqICAgYW4gKG9wdGlvbmFsKSBzZW1pY29sb24uXG4gICAqICogYG93blNlbWljb2xvbmA6IGNvbnRhaW5zIGB0cnVlYCBpZiB0aGVyZSBpcyBzZW1pY29sb24gYWZ0ZXIgcnVsZS5cbiAgICpcbiAgICogUG9zdENTUyBjbGVhbnMgc2VsZWN0b3JzIGZyb20gY29tbWVudHMgYW5kIGV4dHJhIHNwYWNlcyxcbiAgICogYnV0IGl0IHN0b3JlcyBvcmlnaW4gY29udGVudCBpbiByYXdzIHByb3BlcnRpZXMuXG4gICAqIEFzIHN1Y2gsIGlmIHlvdSBkb27igJl0IGNoYW5nZSBhIGRlY2xhcmF0aW9u4oCZcyB2YWx1ZSxcbiAgICogUG9zdENTUyB3aWxsIHVzZSB0aGUgcmF3IHZhbHVlIHdpdGggY29tbWVudHMuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGNvbnN0IHJvb3QgPSBwb3N0Y3NzLnBhcnNlKCdhIHtcXG4gIGNvbG9yOmJsYWNrXFxufScpXG4gICAqIHJvb3QuZmlyc3QuZmlyc3QucmF3cyAvLz0+IHsgYmVmb3JlOiAnJywgYmV0d2VlbjogJyAnLCBhZnRlcjogJ1xcbicgfVxuICAgKi9cbn1cblxuZXhwb3J0IGRlZmF1bHQgUnVsZVxuIl0sImZpbGUiOiJydWxlLmpzIn0=


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Standard YAML's Failsafe schema.
// http://www.yaml.org/spec/1.2/spec.html#id2802346





var Schema = __webpack_require__(18);


module.exports = new Schema({
  explicit: [
    __webpack_require__(210),
    __webpack_require__(211),
    __webpack_require__(212)
  ]
});


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var browsers = exports.browsers = __webpack_require__(251);

/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = getMatchFactory;
function getMatchFactory(map) {
    return function getMatch(args) {
        const match = args.reduce((list, arg, i) => {
            return list.filter(keyword => keyword[1][i] === arg);
        }, map);
        if (match.length) {
            return match[0][0];
        }
        return false;
    };
}
module.exports = exports["default"];

/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = addSpace;
function addSpace() {
    return { type: 'space', value: ' ' };
}
module.exports = exports['default'];

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = getValue;

var _postcssValueParser = __webpack_require__(4);

function getValue(values) {
    return (0, _postcssValueParser.stringify)({
        nodes: values.reduce((nodes, arg, index) => {
            arg.forEach((val, idx) => {
                if (idx === arg.length - 1 && index === values.length - 1 && val.type === 'space') {
                    return;
                }
                nodes.push(val);
            });

            if (index !== values.length - 1) {
                nodes[nodes.length - 1].type = 'div';
                nodes[nodes.length - 1].value = ',';
            }

            return nodes;
        }, [])
    });
}
module.exports = exports['default'];

/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

var compare = __webpack_require__(1003);

function mediator(a, b) {
	return compare(this, a.converted, b.converted);
}

module.exports = function (array, opts) {
	if (!Array.isArray(array) || array.length < 2) {
		return array;
	}
	if (typeof opts !== 'object') {
		opts = {};
	}
	opts.sign = !!opts.sign;
	var insensitive = !!opts.insensitive;
	var result = Array(array.length);
	var i, max, value;

	for (i = 0, max = array.length; i < max; i += 1) {
		value = String(array[i]);
		result[i] = {
			value: array[i],
			converted: insensitive ? value.toLowerCase() : value
		};
	}

	result.sort(mediator.bind(opts));

	for (i = result.length - 1; ~i; i -= 1) {
		result[i] = result[i].value;
	}

	return result;
};


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _node = __webpack_require__(19);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(8);

var types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Container = function (_Node) {
    _inherits(Container, _Node);

    function Container(opts) {
        _classCallCheck(this, Container);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        if (!_this.nodes) {
            _this.nodes = [];
        }
        return _this;
    }

    Container.prototype.append = function append(selector) {
        selector.parent = this;
        this.nodes.push(selector);
        return this;
    };

    Container.prototype.prepend = function prepend(selector) {
        selector.parent = this;
        this.nodes.unshift(selector);
        return this;
    };

    Container.prototype.at = function at(index) {
        return this.nodes[index];
    };

    Container.prototype.index = function index(child) {
        if (typeof child === 'number') {
            return child;
        }
        return this.nodes.indexOf(child);
    };

    Container.prototype.removeChild = function removeChild(child) {
        child = this.index(child);
        this.at(child).parent = undefined;
        this.nodes.splice(child, 1);

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (index >= child) {
                this.indexes[id] = index - 1;
            }
        }

        return this;
    };

    Container.prototype.removeAll = function removeAll() {
        for (var _iterator = this.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref;

            if (_isArray) {
                if (_i >= _iterator.length) break;
                _ref = _iterator[_i++];
            } else {
                _i = _iterator.next();
                if (_i.done) break;
                _ref = _i.value;
            }

            var node = _ref;

            node.parent = undefined;
        }
        this.nodes = [];
        return this;
    };

    Container.prototype.empty = function empty() {
        return this.removeAll();
    };

    Container.prototype.insertAfter = function insertAfter(oldNode, newNode) {
        newNode.parent = this;
        var oldIndex = this.index(oldNode);
        this.nodes.splice(oldIndex + 1, 0, newNode);

        newNode.parent = this;

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (oldIndex <= index) {
                this.indexes[id] = index + 1;
            }
        }

        return this;
    };

    Container.prototype.insertBefore = function insertBefore(oldNode, newNode) {
        newNode.parent = this;
        var oldIndex = this.index(oldNode);
        this.nodes.splice(oldIndex, 0, newNode);

        newNode.parent = this;

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (index <= oldIndex) {
                this.indexes[id] = index + 1;
            }
        }

        return this;
    };

    Container.prototype.each = function each(callback) {
        if (!this.lastEach) {
            this.lastEach = 0;
        }
        if (!this.indexes) {
            this.indexes = {};
        }

        this.lastEach++;
        var id = this.lastEach;
        this.indexes[id] = 0;

        if (!this.length) {
            return undefined;
        }

        var index = void 0,
            result = void 0;
        while (this.indexes[id] < this.length) {
            index = this.indexes[id];
            result = callback(this.at(index), index);
            if (result === false) {
                break;
            }

            this.indexes[id] += 1;
        }

        delete this.indexes[id];

        if (result === false) {
            return false;
        }
    };

    Container.prototype.walk = function walk(callback) {
        return this.each(function (node, i) {
            var result = callback(node, i);

            if (result !== false && node.length) {
                result = node.walk(callback);
            }

            if (result === false) {
                return false;
            }
        });
    };

    Container.prototype.walkAttributes = function walkAttributes(callback) {
        var _this2 = this;

        return this.walk(function (selector) {
            if (selector.type === types.ATTRIBUTE) {
                return callback.call(_this2, selector);
            }
        });
    };

    Container.prototype.walkClasses = function walkClasses(callback) {
        var _this3 = this;

        return this.walk(function (selector) {
            if (selector.type === types.CLASS) {
                return callback.call(_this3, selector);
            }
        });
    };

    Container.prototype.walkCombinators = function walkCombinators(callback) {
        var _this4 = this;

        return this.walk(function (selector) {
            if (selector.type === types.COMBINATOR) {
                return callback.call(_this4, selector);
            }
        });
    };

    Container.prototype.walkComments = function walkComments(callback) {
        var _this5 = this;

        return this.walk(function (selector) {
            if (selector.type === types.COMMENT) {
                return callback.call(_this5, selector);
            }
        });
    };

    Container.prototype.walkIds = function walkIds(callback) {
        var _this6 = this;

        return this.walk(function (selector) {
            if (selector.type === types.ID) {
                return callback.call(_this6, selector);
            }
        });
    };

    Container.prototype.walkNesting = function walkNesting(callback) {
        var _this7 = this;

        return this.walk(function (selector) {
            if (selector.type === types.NESTING) {
                return callback.call(_this7, selector);
            }
        });
    };

    Container.prototype.walkPseudos = function walkPseudos(callback) {
        var _this8 = this;

        return this.walk(function (selector) {
            if (selector.type === types.PSEUDO) {
                return callback.call(_this8, selector);
            }
        });
    };

    Container.prototype.walkTags = function walkTags(callback) {
        var _this9 = this;

        return this.walk(function (selector) {
            if (selector.type === types.TAG) {
                return callback.call(_this9, selector);
            }
        });
    };

    Container.prototype.walkUniversals = function walkUniversals(callback) {
        var _this10 = this;

        return this.walk(function (selector) {
            if (selector.type === types.UNIVERSAL) {
                return callback.call(_this10, selector);
            }
        });
    };

    Container.prototype.split = function split(callback) {
        var _this11 = this;

        var current = [];
        return this.reduce(function (memo, node, index) {
            var split = callback.call(_this11, node);
            current.push(node);
            if (split) {
                memo.push(current);
                current = [];
            } else if (index === _this11.length - 1) {
                memo.push(current);
            }
            return memo;
        }, []);
    };

    Container.prototype.map = function map(callback) {
        return this.nodes.map(callback);
    };

    Container.prototype.reduce = function reduce(callback, memo) {
        return this.nodes.reduce(callback, memo);
    };

    Container.prototype.every = function every(callback) {
        return this.nodes.every(callback);
    };

    Container.prototype.some = function some(callback) {
        return this.nodes.some(callback);
    };

    Container.prototype.filter = function filter(callback) {
        return this.nodes.filter(callback);
    };

    Container.prototype.sort = function sort(callback) {
        return this.nodes.sort(callback);
    };

    Container.prototype.toString = function toString() {
        return this.map(String).join('');
    };

    _createClass(Container, [{
        key: 'first',
        get: function get() {
            return this.at(0);
        }
    }, {
        key: 'last',
        get: function get() {
            return this.at(this.length - 1);
        }
    }, {
        key: 'length',
        get: function get() {
            return this.nodes.length;
        }
    }]);

    return Container;
}(_node2.default);

exports.default = Container;
module.exports = exports['default'];

/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _node = __webpack_require__(20);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(9);

var types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Container = function (_Node) {
    _inherits(Container, _Node);

    function Container(opts) {
        _classCallCheck(this, Container);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        if (!_this.nodes) {
            _this.nodes = [];
        }
        return _this;
    }

    Container.prototype.append = function append(selector) {
        selector.parent = this;
        this.nodes.push(selector);
        return this;
    };

    Container.prototype.prepend = function prepend(selector) {
        selector.parent = this;
        this.nodes.unshift(selector);
        return this;
    };

    Container.prototype.at = function at(index) {
        return this.nodes[index];
    };

    Container.prototype.index = function index(child) {
        if (typeof child === 'number') {
            return child;
        }
        return this.nodes.indexOf(child);
    };

    Container.prototype.removeChild = function removeChild(child) {
        child = this.index(child);
        this.at(child).parent = undefined;
        this.nodes.splice(child, 1);

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (index >= child) {
                this.indexes[id] = index - 1;
            }
        }

        return this;
    };

    Container.prototype.removeAll = function removeAll() {
        for (var _iterator = this.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref;

            if (_isArray) {
                if (_i >= _iterator.length) break;
                _ref = _iterator[_i++];
            } else {
                _i = _iterator.next();
                if (_i.done) break;
                _ref = _i.value;
            }

            var node = _ref;

            node.parent = undefined;
        }
        this.nodes = [];
        return this;
    };

    Container.prototype.empty = function empty() {
        return this.removeAll();
    };

    Container.prototype.insertAfter = function insertAfter(oldNode, newNode) {
        newNode.parent = this;
        var oldIndex = this.index(oldNode);
        this.nodes.splice(oldIndex + 1, 0, newNode);

        newNode.parent = this;

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (oldIndex <= index) {
                this.indexes[id] = index + 1;
            }
        }

        return this;
    };

    Container.prototype.insertBefore = function insertBefore(oldNode, newNode) {
        newNode.parent = this;
        var oldIndex = this.index(oldNode);
        this.nodes.splice(oldIndex, 0, newNode);

        newNode.parent = this;

        var index = void 0;
        for (var id in this.indexes) {
            index = this.indexes[id];
            if (index <= oldIndex) {
                this.indexes[id] = index + 1;
            }
        }

        return this;
    };

    Container.prototype.each = function each(callback) {
        if (!this.lastEach) {
            this.lastEach = 0;
        }
        if (!this.indexes) {
            this.indexes = {};
        }

        this.lastEach++;
        var id = this.lastEach;
        this.indexes[id] = 0;

        if (!this.length) {
            return undefined;
        }

        var index = void 0,
            result = void 0;
        while (this.indexes[id] < this.length) {
            index = this.indexes[id];
            result = callback(this.at(index), index);
            if (result === false) {
                break;
            }

            this.indexes[id] += 1;
        }

        delete this.indexes[id];

        if (result === false) {
            return false;
        }
    };

    Container.prototype.walk = function walk(callback) {
        return this.each(function (node, i) {
            var result = callback(node, i);

            if (result !== false && node.length) {
                result = node.walk(callback);
            }

            if (result === false) {
                return false;
            }
        });
    };

    Container.prototype.walkAttributes = function walkAttributes(callback) {
        var _this2 = this;

        return this.walk(function (selector) {
            if (selector.type === types.ATTRIBUTE) {
                return callback.call(_this2, selector);
            }
        });
    };

    Container.prototype.walkClasses = function walkClasses(callback) {
        var _this3 = this;

        return this.walk(function (selector) {
            if (selector.type === types.CLASS) {
                return callback.call(_this3, selector);
            }
        });
    };

    Container.prototype.walkCombinators = function walkCombinators(callback) {
        var _this4 = this;

        return this.walk(function (selector) {
            if (selector.type === types.COMBINATOR) {
                return callback.call(_this4, selector);
            }
        });
    };

    Container.prototype.walkComments = function walkComments(callback) {
        var _this5 = this;

        return this.walk(function (selector) {
            if (selector.type === types.COMMENT) {
                return callback.call(_this5, selector);
            }
        });
    };

    Container.prototype.walkIds = function walkIds(callback) {
        var _this6 = this;

        return this.walk(function (selector) {
            if (selector.type === types.ID) {
                return callback.call(_this6, selector);
            }
        });
    };

    Container.prototype.walkNesting = function walkNesting(callback) {
        var _this7 = this;

        return this.walk(function (selector) {
            if (selector.type === types.NESTING) {
                return callback.call(_this7, selector);
            }
        });
    };

    Container.prototype.walkPseudos = function walkPseudos(callback) {
        var _this8 = this;

        return this.walk(function (selector) {
            if (selector.type === types.PSEUDO) {
                return callback.call(_this8, selector);
            }
        });
    };

    Container.prototype.walkTags = function walkTags(callback) {
        var _this9 = this;

        return this.walk(function (selector) {
            if (selector.type === types.TAG) {
                return callback.call(_this9, selector);
            }
        });
    };

    Container.prototype.walkUniversals = function walkUniversals(callback) {
        var _this10 = this;

        return this.walk(function (selector) {
            if (selector.type === types.UNIVERSAL) {
                return callback.call(_this10, selector);
            }
        });
    };

    Container.prototype.split = function split(callback) {
        var _this11 = this;

        var current = [];
        return this.reduce(function (memo, node, index) {
            var split = callback.call(_this11, node);
            current.push(node);
            if (split) {
                memo.push(current);
                current = [];
            } else if (index === _this11.length - 1) {
                memo.push(current);
            }
            return memo;
        }, []);
    };

    Container.prototype.map = function map(callback) {
        return this.nodes.map(callback);
    };

    Container.prototype.reduce = function reduce(callback, memo) {
        return this.nodes.reduce(callback, memo);
    };

    Container.prototype.every = function every(callback) {
        return this.nodes.every(callback);
    };

    Container.prototype.some = function some(callback) {
        return this.nodes.some(callback);
    };

    Container.prototype.filter = function filter(callback) {
        return this.nodes.filter(callback);
    };

    Container.prototype.sort = function sort(callback) {
        return this.nodes.sort(callback);
    };

    Container.prototype.toString = function toString() {
        return this.map(String).join('');
    };

    _createClass(Container, [{
        key: 'first',
        get: function get() {
            return this.at(0);
        }
    }, {
        key: 'last',
        get: function get() {
            return this.at(this.length - 1);
        }
    }, {
        key: 'length',
        get: function get() {
            return this.nodes.length;
        }
    }]);

    return Container;
}(_node2.default);

exports.default = Container;
module.exports = exports['default'];

/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

var OldSelector = __webpack_require__(1052);

var Prefixer = __webpack_require__(29);

var Browsers = __webpack_require__(21);

var utils = __webpack_require__(10);

var Selector =
/*#__PURE__*/
function (_Prefixer) {
  _inheritsLoose(Selector, _Prefixer);

  function Selector(name, prefixes, all) {
    var _this;

    _this = _Prefixer.call(this, name, prefixes, all) || this;
    _this.regexpCache = {};
    return _this;
  }
  /**
     * Is rule selectors need to be prefixed
     */


  var _proto = Selector.prototype;

  _proto.check = function check(rule) {
    if (rule.selector.indexOf(this.name) !== -1) {
      return !!rule.selector.match(this.regexp());
    }

    return false;
  }
  /**
     * Return prefixed version of selector
     */
  ;

  _proto.prefixed = function prefixed(prefix) {
    return this.name.replace(/^([^\w]*)/, "$1" + prefix);
  }
  /**
     * Lazy loadRegExp for name
     */
  ;

  _proto.regexp = function regexp(prefix) {
    if (this.regexpCache[prefix]) {
      return this.regexpCache[prefix];
    }

    var name = prefix ? this.prefixed(prefix) : this.name;
    this.regexpCache[prefix] = new RegExp("(^|[^:\"'=])" + utils.escapeRegexp(name), 'gi');
    return this.regexpCache[prefix];
  }
  /**
     * All possible prefixes
     */
  ;

  _proto.possible = function possible() {
    return Browsers.prefixes();
  }
  /**
     * Return all possible selector prefixes
     */
  ;

  _proto.prefixeds = function prefixeds(rule) {
    if (rule._autoprefixerPrefixeds) {
      return rule._autoprefixerPrefixeds;
    }

    var prefixeds = {};

    for (var _iterator = this.possible(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var prefix = _ref;
      prefixeds[prefix] = this.replace(rule.selector, prefix);
    }

    rule._autoprefixerPrefixeds = prefixeds;
    return rule._autoprefixerPrefixeds;
  }
  /**
     * Is rule already prefixed before
     */
  ;

  _proto.already = function already(rule, prefixeds, prefix) {
    var index = rule.parent.index(rule) - 1;

    while (index >= 0) {
      var before = rule.parent.nodes[index];

      if (before.type !== 'rule') {
        return false;
      }

      var some = false;

      for (var key in prefixeds) {
        var prefixed = prefixeds[key];

        if (before.selector === prefixed) {
          if (prefix === key) {
            return true;
          } else {
            some = true;
            break;
          }
        }
      }

      if (!some) {
        return false;
      }

      index -= 1;
    }

    return false;
  }
  /**
     * Replace selectors by prefixed one
     */
  ;

  _proto.replace = function replace(selector, prefix) {
    return selector.replace(this.regexp(), "$1" + this.prefixed(prefix));
  }
  /**
     * Clone and add prefixes for at-rule
     */
  ;

  _proto.add = function add(rule, prefix) {
    var prefixeds = this.prefixeds(rule);

    if (this.already(rule, prefixeds, prefix)) {
      return;
    }

    var cloned = this.clone(rule, {
      selector: prefixeds[prefix]
    });
    rule.parent.insertBefore(rule, cloned);
  }
  /**
     * Return function to fast find prefixed selector
     */
  ;

  _proto.old = function old(prefix) {
    return new OldSelector(this, prefix);
  };

  return Selector;
}(Prefixer);

module.exports = Selector;

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
 * exit
 * https://github.com/cowboy/node-exit
 *
 * Copyright (c) 2013 "Cowboy" Ben Alman
 * Licensed under the MIT license.
 */



module.exports = function exit(exitCode, streams) {
  if (!streams) { streams = [process.stdout, process.stderr]; }
  var drainCount = 0;
  // Actually exit if all streams are drained.
  function tryToExit() {
    if (drainCount === streams.length) {
      process.exit(exitCode);
    }
  }
  streams.forEach(function(stream) {
    // Count drained streams now, but monitor non-drained streams.
    if (stream.bufferSize === 0) {
      drainCount++;
    } else {
      stream.write('', 'utf-8', function() {
        drainCount++;
        tryToExit();
      });
    }
    // Prevent further writing.
    stream.write = function() {};
  });
  // If all streams were already drained, exit now.
  tryToExit();
  // In Windows, when run as a Node.js child process, a script utilizing
  // this library might just exit with a 0 exit code, regardless. This code,
  // despite the fact that it looks a bit crazy, appears to fix that.
  process.on('exit', function() {
    process.exit(exitCode);
  });
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(5);
var fs = __webpack_require__(13);
var _0777 = parseInt('0777', 8);

module.exports = mkdirP.mkdirp = mkdirP.mkdirP = mkdirP;

function mkdirP (p, opts, f, made) {
    if (typeof opts === 'function') {
        f = opts;
        opts = {};
    }
    else if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;
    
    var cb = f || function () {};
    p = path.resolve(p);
    
    xfs.mkdir(p, mode, function (er) {
        if (!er) {
            made = made || p;
            return cb(null, made);
        }
        switch (er.code) {
            case 'ENOENT':
                mkdirP(path.dirname(p), opts, function (er, made) {
                    if (er) cb(er, made);
                    else mkdirP(p, opts, cb, made);
                });
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                xfs.stat(p, function (er2, stat) {
                    // if the stat fails, then that's super weird.
                    // let the original error be the failure reason.
                    if (er2 || !stat.isDirectory()) cb(er, made)
                    else cb(null, made);
                });
                break;
        }
    });
}

mkdirP.sync = function sync (p, opts, made) {
    if (!opts || typeof opts !== 'object') {
        opts = { mode: opts };
    }
    
    var mode = opts.mode;
    var xfs = opts.fs || fs;
    
    if (mode === undefined) {
        mode = _0777 & (~process.umask());
    }
    if (!made) made = null;

    p = path.resolve(p);

    try {
        xfs.mkdirSync(p, mode);
        made = made || p;
    }
    catch (err0) {
        switch (err0.code) {
            case 'ENOENT' :
                made = sync(path.dirname(p), opts, made);
                sync(p, opts, made);
                break;

            // In the case of any other error, just see if there's a dir
            // there already.  If so, then hooray!  If not, then something
            // is borked.
            default:
                var stat;
                try {
                    stat = xfs.statSync(p);
                }
                catch (err1) {
                    throw err0;
                }
                if (!stat.isDirectory()) throw err0;
                break;
        }
    }

    return made;
};


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _supportsColor = _interopRequireDefault(__webpack_require__(184));

var _chalk = _interopRequireDefault(__webpack_require__(37));

var _terminalHighlight = _interopRequireDefault(__webpack_require__(186));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * The CSS parser throws this error for broken CSS.
 *
 * Custom parsers can throw this error for broken custom syntax using
 * the {@link Node#error} method.
 *
 * PostCSS will use the input source map to detect the original error location.
 * If you wrote a Sass file, compiled it to CSS and then parsed it with PostCSS,
 * PostCSS will show the original position in the Sass file.
 *
 * If you need the position in the PostCSS input
 * (e.g., to debug the previous compiler), use `error.input.file`.
 *
 * @example
 * // Catching and checking syntax error
 * try {
 *   postcss.parse('a{')
 * } catch (error) {
 *   if (error.name === 'CssSyntaxError') {
 *     error //=> CssSyntaxError
 *   }
 * }
 *
 * @example
 * // Raising error from plugin
 * throw node.error('Unknown variable', { plugin: 'postcss-vars' })
 */
var CssSyntaxError =
/*#__PURE__*/
function (_Error) {
  _inheritsLoose(CssSyntaxError, _Error);

  /**
   * @param {string} message  Error message.
   * @param {number} [line]   Source line of the error.
   * @param {number} [column] Source column of the error.
   * @param {string} [source] Source code of the broken file.
   * @param {string} [file]   Absolute path to the broken file.
   * @param {string} [plugin] PostCSS plugin name, if error came from plugin.
   */
  function CssSyntaxError(message, line, column, source, file, plugin) {
    var _this;

    _this = _Error.call(this, message) || this;
    /**
     * Always equal to `'CssSyntaxError'`. You should always check error type
     * by `error.name === 'CssSyntaxError'`
     * instead of `error instanceof CssSyntaxError`,
     * because npm could have several PostCSS versions.
     *
     * @type {string}
     *
     * @example
     * if (error.name === 'CssSyntaxError') {
     *   error //=> CssSyntaxError
     * }
     */

    _this.name = 'CssSyntaxError';
    /**
     * Error message.
     *
     * @type {string}
     *
     * @example
     * error.message //=> 'Unclosed block'
     */

    _this.reason = message;

    if (file) {
      /**
       * Absolute path to the broken file.
       *
       * @type {string}
       *
       * @example
       * error.file       //=> 'a.sass'
       * error.input.file //=> 'a.css'
       */
      _this.file = file;
    }

    if (source) {
      /**
       * Source code of the broken file.
       *
       * @type {string}
       *
       * @example
       * error.source       //=> 'a { b {} }'
       * error.input.column //=> 'a b { }'
       */
      _this.source = source;
    }

    if (plugin) {
      /**
       * Plugin name, if error came from plugin.
       *
       * @type {string}
       *
       * @example
       * error.plugin //=> 'postcss-vars'
       */
      _this.plugin = plugin;
    }

    if (typeof line !== 'undefined' && typeof column !== 'undefined') {
      /**
       * Source line of the error.
       *
       * @type {number}
       *
       * @example
       * error.line       //=> 2
       * error.input.line //=> 4
       */
      _this.line = line;
      /**
       * Source column of the error.
       *
       * @type {number}
       *
       * @example
       * error.column       //=> 1
       * error.input.column //=> 4
       */

      _this.column = column;
    }

    _this.setMessage();

    if (Error.captureStackTrace) {
      Error.captureStackTrace(_assertThisInitialized(_this), CssSyntaxError);
    }

    return _this;
  }

  var _proto = CssSyntaxError.prototype;

  _proto.setMessage = function setMessage() {
    /**
     * Full error text in the GNU error format
     * with plugin, file, line and column.
     *
     * @type {string}
     *
     * @example
     * error.message //=> 'a.css:1:1: Unclosed block'
     */
    this.message = this.plugin ? this.plugin + ': ' : '';
    this.message += this.file ? this.file : '<css input>';

    if (typeof this.line !== 'undefined') {
      this.message += ':' + this.line + ':' + this.column;
    }

    this.message += ': ' + this.reason;
  }
  /**
   * Returns a few lines of CSS source that caused the error.
   *
   * If the CSS has an input source map without `sourceContent`,
   * this method will return an empty string.
   *
   * @param {boolean} [color] Whether arrow will be colored red by terminal
   *                          color codes. By default, PostCSS will detect
   *                          color support by `process.stdout.isTTY`
   *                          and `process.env.NODE_DISABLE_COLORS`.
   *
   * @example
   * error.showSourceCode() //=> "  4 | }
   *                        //      5 | a {
   *                        //    > 6 |   bad
   *                        //        |   ^
   *                        //      7 | }
   *                        //      8 | b {"
   *
   * @return {string} Few lines of CSS source that caused the error.
   */
  ;

  _proto.showSourceCode = function showSourceCode(color) {
    var _this2 = this;

    if (!this.source) return '';
    var css = this.source;

    if (_terminalHighlight.default) {
      if (typeof color === 'undefined') color = _supportsColor.default.stdout;
      if (color) css = (0, _terminalHighlight.default)(css);
    }

    var lines = css.split(/\r?\n/);
    var start = Math.max(this.line - 3, 0);
    var end = Math.min(this.line + 2, lines.length);
    var maxWidth = String(end).length;

    function mark(text) {
      if (color && _chalk.default.red) {
        return _chalk.default.red.bold(text);
      }

      return text;
    }

    function aside(text) {
      if (color && _chalk.default.gray) {
        return _chalk.default.gray(text);
      }

      return text;
    }

    return lines.slice(start, end).map(function (line, index) {
      var number = start + 1 + index;
      var gutter = ' ' + (' ' + number).slice(-maxWidth) + ' | ';

      if (number === _this2.line) {
        var spacing = aside(gutter.replace(/\d/g, ' ')) + line.slice(0, _this2.column - 1).replace(/[^\t]/g, ' ');
        return mark('>') + aside(gutter) + line + '\n ' + spacing + mark('^');
      }

      return ' ' + aside(gutter) + line;
    }).join('\n');
  }
  /**
   * Returns error position, message and source code of the broken part.
   *
   * @example
   * error.toString() //=> "CssSyntaxError: app.css:1:1: Unclosed block
   *                  //    > 1 | a {
   *                  //        | ^"
   *
   * @return {string} Error position, message and source code.
   */
  ;

  _proto.toString = function toString() {
    var code = this.showSourceCode();

    if (code) {
      code = '\n\n' + code + '\n';
    }

    return this.name + ': ' + this.message + code;
  }
  /**
   * @memberof CssSyntaxError#
   * @member {Input} input Input object with PostCSS internal information
   *                       about input file. If input has source map
   *                       from previous tool, PostCSS will use origin
   *                       (for example, Sass) source. You can use this
   *                       object to get PostCSS input source.
   *
   * @example
   * error.input.file //=> 'a.css'
   * error.file       //=> 'a.sass'
   */
  ;

  return CssSyntaxError;
}(_wrapNativeSuper(Error));

var _default = CssSyntaxError;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 57 */
/***/ (function(module, exports) {

module.exports = require("os");

/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = tokenizer;
var SINGLE_QUOTE = '\''.charCodeAt(0);
var DOUBLE_QUOTE = '"'.charCodeAt(0);
var BACKSLASH = '\\'.charCodeAt(0);
var SLASH = '/'.charCodeAt(0);
var NEWLINE = '\n'.charCodeAt(0);
var SPACE = ' '.charCodeAt(0);
var FEED = '\f'.charCodeAt(0);
var TAB = '\t'.charCodeAt(0);
var CR = '\r'.charCodeAt(0);
var OPEN_SQUARE = '['.charCodeAt(0);
var CLOSE_SQUARE = ']'.charCodeAt(0);
var OPEN_PARENTHESES = '('.charCodeAt(0);
var CLOSE_PARENTHESES = ')'.charCodeAt(0);
var OPEN_CURLY = '{'.charCodeAt(0);
var CLOSE_CURLY = '}'.charCodeAt(0);
var SEMICOLON = ';'.charCodeAt(0);
var ASTERISK = '*'.charCodeAt(0);
var COLON = ':'.charCodeAt(0);
var AT = '@'.charCodeAt(0);
var RE_AT_END = /[ \n\t\r\f{}()'"\\;/[\]#]/g;
var RE_WORD_END = /[ \n\t\r\f(){}:;@!'"\\\][#]|\/(?=\*)/g;
var RE_BAD_BRACKET = /.[\\/("'\n]/;
var RE_HEX_ESCAPE = /[a-f0-9]/i;

function tokenizer(input, options) {
  if (options === void 0) {
    options = {};
  }

  var css = input.css.valueOf();
  var ignore = options.ignoreErrors;
  var code, next, quote, lines, last, content, escape;
  var nextLine, nextOffset, escaped, escapePos, prev, n, currentToken;
  var length = css.length;
  var offset = -1;
  var line = 1;
  var pos = 0;
  var buffer = [];
  var returned = [];

  function position() {
    return pos;
  }

  function unclosed(what) {
    throw input.error('Unclosed ' + what, line, pos - offset);
  }

  function endOfFile() {
    return returned.length === 0 && pos >= length;
  }

  function nextToken(opts) {
    if (returned.length) return returned.pop();
    if (pos >= length) return;
    var ignoreUnclosed = opts ? opts.ignoreUnclosed : false;
    code = css.charCodeAt(pos);

    if (code === NEWLINE || code === FEED || code === CR && css.charCodeAt(pos + 1) !== NEWLINE) {
      offset = pos;
      line += 1;
    }

    switch (code) {
      case NEWLINE:
      case SPACE:
      case TAB:
      case CR:
      case FEED:
        next = pos;

        do {
          next += 1;
          code = css.charCodeAt(next);

          if (code === NEWLINE) {
            offset = next;
            line += 1;
          }
        } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);

        currentToken = ['space', css.slice(pos, next)];
        pos = next - 1;
        break;

      case OPEN_SQUARE:
      case CLOSE_SQUARE:
      case OPEN_CURLY:
      case CLOSE_CURLY:
      case COLON:
      case SEMICOLON:
      case CLOSE_PARENTHESES:
        var controlChar = String.fromCharCode(code);
        currentToken = [controlChar, controlChar, line, pos - offset];
        break;

      case OPEN_PARENTHESES:
        prev = buffer.length ? buffer.pop()[1] : '';
        n = css.charCodeAt(pos + 1);

        if (prev === 'url' && n !== SINGLE_QUOTE && n !== DOUBLE_QUOTE && n !== SPACE && n !== NEWLINE && n !== TAB && n !== FEED && n !== CR) {
          next = pos;

          do {
            escaped = false;
            next = css.indexOf(')', next + 1);

            if (next === -1) {
              if (ignore || ignoreUnclosed) {
                next = pos;
                break;
              } else {
                unclosed('bracket');
              }
            }

            escapePos = next;

            while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
              escapePos -= 1;
              escaped = !escaped;
            }
          } while (escaped);

          currentToken = ['brackets', css.slice(pos, next + 1), line, pos - offset, line, next - offset];
          pos = next;
        } else {
          next = css.indexOf(')', pos + 1);
          content = css.slice(pos, next + 1);

          if (next === -1 || RE_BAD_BRACKET.test(content)) {
            currentToken = ['(', '(', line, pos - offset];
          } else {
            currentToken = ['brackets', content, line, pos - offset, line, next - offset];
            pos = next;
          }
        }

        break;

      case SINGLE_QUOTE:
      case DOUBLE_QUOTE:
        quote = code === SINGLE_QUOTE ? '\'' : '"';
        next = pos;

        do {
          escaped = false;
          next = css.indexOf(quote, next + 1);

          if (next === -1) {
            if (ignore || ignoreUnclosed) {
              next = pos + 1;
              break;
            } else {
              unclosed('string');
            }
          }

          escapePos = next;

          while (css.charCodeAt(escapePos - 1) === BACKSLASH) {
            escapePos -= 1;
            escaped = !escaped;
          }
        } while (escaped);

        content = css.slice(pos, next + 1);
        lines = content.split('\n');
        last = lines.length - 1;

        if (last > 0) {
          nextLine = line + last;
          nextOffset = next - lines[last].length;
        } else {
          nextLine = line;
          nextOffset = offset;
        }

        currentToken = ['string', css.slice(pos, next + 1), line, pos - offset, nextLine, next - nextOffset];
        offset = nextOffset;
        line = nextLine;
        pos = next;
        break;

      case AT:
        RE_AT_END.lastIndex = pos + 1;
        RE_AT_END.test(css);

        if (RE_AT_END.lastIndex === 0) {
          next = css.length - 1;
        } else {
          next = RE_AT_END.lastIndex - 2;
        }

        currentToken = ['at-word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];
        pos = next;
        break;

      case BACKSLASH:
        next = pos;
        escape = true;

        while (css.charCodeAt(next + 1) === BACKSLASH) {
          next += 1;
          escape = !escape;
        }

        code = css.charCodeAt(next + 1);

        if (escape && code !== SLASH && code !== SPACE && code !== NEWLINE && code !== TAB && code !== CR && code !== FEED) {
          next += 1;

          if (RE_HEX_ESCAPE.test(css.charAt(next))) {
            while (RE_HEX_ESCAPE.test(css.charAt(next + 1))) {
              next += 1;
            }

            if (css.charCodeAt(next + 1) === SPACE) {
              next += 1;
            }
          }
        }

        currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];
        pos = next;
        break;

      default:
        if (code === SLASH && css.charCodeAt(pos + 1) === ASTERISK) {
          next = css.indexOf('*/', pos + 2) + 1;

          if (next === 0) {
            if (ignore || ignoreUnclosed) {
              next = css.length;
            } else {
              unclosed('comment');
            }
          }

          content = css.slice(pos, next + 1);
          lines = content.split('\n');
          last = lines.length - 1;

          if (last > 0) {
            nextLine = line + last;
            nextOffset = next - lines[last].length;
          } else {
            nextLine = line;
            nextOffset = offset;
          }

          currentToken = ['comment', content, line, pos - offset, nextLine, next - nextOffset];
          offset = nextOffset;
          line = nextLine;
          pos = next;
        } else {
          RE_WORD_END.lastIndex = pos + 1;
          RE_WORD_END.test(css);

          if (RE_WORD_END.lastIndex === 0) {
            next = css.length - 1;
          } else {
            next = RE_WORD_END.lastIndex - 2;
          }

          currentToken = ['word', css.slice(pos, next + 1), line, pos - offset, line, next - offset];
          buffer.push(currentToken);
          pos = next;
        }

        break;
    }

    pos++;
    return currentToken;
  }

  function back(token) {
    returned.push(token);
  }

  return {
    back: back,
    nextToken: nextToken,
    endOfFile: endOfFile,
    position: position
  };
}

module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _path = _interopRequireDefault(__webpack_require__(5));

var _cssSyntaxError = _interopRequireDefault(__webpack_require__(56));

var _previousMap = _interopRequireDefault(__webpack_require__(187));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var sequence = 0;
/**
 * Represents the source CSS.
 *
 * @example
 * const root  = postcss.parse(css, { from: file })
 * const input = root.source.input
 */

var Input =
/*#__PURE__*/
function () {
  /**
   * @param {string} css    Input CSS source.
   * @param {object} [opts] {@link Processor#process} options.
   */
  function Input(css, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (css === null || typeof css === 'object' && !css.toString) {
      throw new Error("PostCSS received " + css + " instead of CSS string");
    }
    /**
     * Input CSS source
     *
     * @type {string}
     *
     * @example
     * const input = postcss.parse('a{}', { from: file }).input
     * input.css //=> "a{}"
     */


    this.css = css.toString();

    if (this.css[0] === "\uFEFF" || this.css[0] === "\uFFFE") {
      this.hasBOM = true;
      this.css = this.css.slice(1);
    } else {
      this.hasBOM = false;
    }

    if (opts.from) {
      if (/^\w+:\/\//.test(opts.from)) {
        /**
         * The absolute path to the CSS source file defined
         * with the `from` option.
         *
         * @type {string}
         *
         * @example
         * const root = postcss.parse(css, { from: 'a.css' })
         * root.source.input.file //=> '/home/ai/a.css'
         */
        this.file = opts.from;
      } else {
        this.file = _path.default.resolve(opts.from);
      }
    }

    var map = new _previousMap.default(this.css, opts);

    if (map.text) {
      /**
       * The input source map passed from a compilation step before PostCSS
       * (for example, from Sass compiler).
       *
       * @type {PreviousMap}
       *
       * @example
       * root.source.input.map.consumer().sources //=> ['a.sass']
       */
      this.map = map;
      var file = map.consumer().file;
      if (!this.file && file) this.file = this.mapResolve(file);
    }

    if (!this.file) {
      sequence += 1;
      /**
       * The unique ID of the CSS source. It will be created if `from` option
       * is not provided (because PostCSS does not know the file path).
       *
       * @type {string}
       *
       * @example
       * const root = postcss.parse(css)
       * root.source.input.file //=> undefined
       * root.source.input.id   //=> "<input css 1>"
       */

      this.id = '<input css ' + sequence + '>';
    }

    if (this.map) this.map.file = this.from;
  }

  var _proto = Input.prototype;

  _proto.error = function error(message, line, column, opts) {
    if (opts === void 0) {
      opts = {};
    }

    var result;
    var origin = this.origin(line, column);

    if (origin) {
      result = new _cssSyntaxError.default(message, origin.line, origin.column, origin.source, origin.file, opts.plugin);
    } else {
      result = new _cssSyntaxError.default(message, line, column, this.css, this.file, opts.plugin);
    }

    result.input = {
      line: line,
      column: column,
      source: this.css
    };
    if (this.file) result.input.file = this.file;
    return result;
  }
  /**
   * Reads the input source map and returns a symbol position
   * in the input source (e.g., in a Sass file that was compiled
   * to CSS before being passed to PostCSS).
   *
   * @param {number} line   Line in input CSS.
   * @param {number} column Column in input CSS.
   *
   * @return {filePosition} Position in input source.
   *
   * @example
   * root.source.input.origin(1, 1) //=> { file: 'a.css', line: 3, column: 1 }
   */
  ;

  _proto.origin = function origin(line, column) {
    if (!this.map) return false;
    var consumer = this.map.consumer();
    var from = consumer.originalPositionFor({
      line: line,
      column: column
    });
    if (!from.source) return false;
    var result = {
      file: this.mapResolve(from.source),
      line: from.line,
      column: from.column
    };
    var source = consumer.sourceContentFor(from.source);
    if (source) result.source = source;
    return result;
  };

  _proto.mapResolve = function mapResolve(file) {
    if (/^\w+:\/\//.test(file)) {
      return file;
    }

    return _path.default.resolve(this.map.consumer().sourceRoot || '.', file);
  }
  /**
   * The CSS source identifier. Contains {@link Input#file} if the user
   * set the `from` option, or {@link Input#id} if they did not.
   *
   * @type {string}
   *
   * @example
   * const root = postcss.parse(css, { from: 'a.css' })
   * root.source.input.from //=> "/home/ai/a.css"
   *
   * const root = postcss.parse(css)
   * root.source.input.from //=> "<input css 1>"
   */
  ;

  _createClass(Input, [{
    key: "from",
    get: function get() {
      return this.file || this.id;
    }
  }]);

  return Input;
}();

var _default = Input;
/**
 * @typedef  {object} filePosition
 * @property {string} file   Path to file.
 * @property {number} line   Source line in file.
 * @property {number} column Source column in file.
 */

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var base64VLQ = __webpack_require__(61);
var util = __webpack_require__(22);
var ArraySet = __webpack_require__(62).ArraySet;
var MappingList = __webpack_require__(189).MappingList;

/**
 * An instance of the SourceMapGenerator represents a source map which is
 * being built incrementally. You may pass an object with the following
 * properties:
 *
 *   - file: The filename of the generated source.
 *   - sourceRoot: A root for all relative URLs in this source map.
 */
function SourceMapGenerator(aArgs) {
  if (!aArgs) {
    aArgs = {};
  }
  this._file = util.getArg(aArgs, 'file', null);
  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);
  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);
  this._sources = new ArraySet();
  this._names = new ArraySet();
  this._mappings = new MappingList();
  this._sourcesContents = null;
}

SourceMapGenerator.prototype._version = 3;

/**
 * Creates a new SourceMapGenerator based on a SourceMapConsumer
 *
 * @param aSourceMapConsumer The SourceMap.
 */
SourceMapGenerator.fromSourceMap =
  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {
    var sourceRoot = aSourceMapConsumer.sourceRoot;
    var generator = new SourceMapGenerator({
      file: aSourceMapConsumer.file,
      sourceRoot: sourceRoot
    });
    aSourceMapConsumer.eachMapping(function (mapping) {
      var newMapping = {
        generated: {
          line: mapping.generatedLine,
          column: mapping.generatedColumn
        }
      };

      if (mapping.source != null) {
        newMapping.source = mapping.source;
        if (sourceRoot != null) {
          newMapping.source = util.relative(sourceRoot, newMapping.source);
        }

        newMapping.original = {
          line: mapping.originalLine,
          column: mapping.originalColumn
        };

        if (mapping.name != null) {
          newMapping.name = mapping.name;
        }
      }

      generator.addMapping(newMapping);
    });
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var sourceRelative = sourceFile;
      if (sourceRoot !== null) {
        sourceRelative = util.relative(sourceRoot, sourceFile);
      }

      if (!generator._sources.has(sourceRelative)) {
        generator._sources.add(sourceRelative);
      }

      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        generator.setSourceContent(sourceFile, content);
      }
    });
    return generator;
  };

/**
 * Add a single mapping from original source line and column to the generated
 * source's line and column for this source map being created. The mapping
 * object should have the following properties:
 *
 *   - generated: An object with the generated line and column positions.
 *   - original: An object with the original line and column positions.
 *   - source: The original source file (relative to the sourceRoot).
 *   - name: An optional original token name for this mapping.
 */
SourceMapGenerator.prototype.addMapping =
  function SourceMapGenerator_addMapping(aArgs) {
    var generated = util.getArg(aArgs, 'generated');
    var original = util.getArg(aArgs, 'original', null);
    var source = util.getArg(aArgs, 'source', null);
    var name = util.getArg(aArgs, 'name', null);

    if (!this._skipValidation) {
      this._validateMapping(generated, original, source, name);
    }

    if (source != null) {
      source = String(source);
      if (!this._sources.has(source)) {
        this._sources.add(source);
      }
    }

    if (name != null) {
      name = String(name);
      if (!this._names.has(name)) {
        this._names.add(name);
      }
    }

    this._mappings.add({
      generatedLine: generated.line,
      generatedColumn: generated.column,
      originalLine: original != null && original.line,
      originalColumn: original != null && original.column,
      source: source,
      name: name
    });
  };

/**
 * Set the source content for a source file.
 */
SourceMapGenerator.prototype.setSourceContent =
  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {
    var source = aSourceFile;
    if (this._sourceRoot != null) {
      source = util.relative(this._sourceRoot, source);
    }

    if (aSourceContent != null) {
      // Add the source content to the _sourcesContents map.
      // Create a new _sourcesContents map if the property is null.
      if (!this._sourcesContents) {
        this._sourcesContents = Object.create(null);
      }
      this._sourcesContents[util.toSetString(source)] = aSourceContent;
    } else if (this._sourcesContents) {
      // Remove the source file from the _sourcesContents map.
      // If the _sourcesContents map is empty, set the property to null.
      delete this._sourcesContents[util.toSetString(source)];
      if (Object.keys(this._sourcesContents).length === 0) {
        this._sourcesContents = null;
      }
    }
  };

/**
 * Applies the mappings of a sub-source-map for a specific source file to the
 * source map being generated. Each mapping to the supplied source file is
 * rewritten using the supplied source map. Note: The resolution for the
 * resulting mappings is the minimium of this map and the supplied map.
 *
 * @param aSourceMapConsumer The source map to be applied.
 * @param aSourceFile Optional. The filename of the source file.
 *        If omitted, SourceMapConsumer's file property will be used.
 * @param aSourceMapPath Optional. The dirname of the path to the source map
 *        to be applied. If relative, it is relative to the SourceMapConsumer.
 *        This parameter is needed when the two source maps aren't in the same
 *        directory, and the source map to be applied contains relative source
 *        paths. If so, those relative source paths need to be rewritten
 *        relative to the SourceMapGenerator.
 */
SourceMapGenerator.prototype.applySourceMap =
  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {
    var sourceFile = aSourceFile;
    // If aSourceFile is omitted, we will use the file property of the SourceMap
    if (aSourceFile == null) {
      if (aSourceMapConsumer.file == null) {
        throw new Error(
          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +
          'or the source map\'s "file" property. Both were omitted.'
        );
      }
      sourceFile = aSourceMapConsumer.file;
    }
    var sourceRoot = this._sourceRoot;
    // Make "sourceFile" relative if an absolute Url is passed.
    if (sourceRoot != null) {
      sourceFile = util.relative(sourceRoot, sourceFile);
    }
    // Applying the SourceMap can add and remove items from the sources and
    // the names array.
    var newSources = new ArraySet();
    var newNames = new ArraySet();

    // Find mappings for the "sourceFile"
    this._mappings.unsortedForEach(function (mapping) {
      if (mapping.source === sourceFile && mapping.originalLine != null) {
        // Check if it can be mapped by the source map, then update the mapping.
        var original = aSourceMapConsumer.originalPositionFor({
          line: mapping.originalLine,
          column: mapping.originalColumn
        });
        if (original.source != null) {
          // Copy mapping
          mapping.source = original.source;
          if (aSourceMapPath != null) {
            mapping.source = util.join(aSourceMapPath, mapping.source)
          }
          if (sourceRoot != null) {
            mapping.source = util.relative(sourceRoot, mapping.source);
          }
          mapping.originalLine = original.line;
          mapping.originalColumn = original.column;
          if (original.name != null) {
            mapping.name = original.name;
          }
        }
      }

      var source = mapping.source;
      if (source != null && !newSources.has(source)) {
        newSources.add(source);
      }

      var name = mapping.name;
      if (name != null && !newNames.has(name)) {
        newNames.add(name);
      }

    }, this);
    this._sources = newSources;
    this._names = newNames;

    // Copy sourcesContents of applied map.
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aSourceMapPath != null) {
          sourceFile = util.join(aSourceMapPath, sourceFile);
        }
        if (sourceRoot != null) {
          sourceFile = util.relative(sourceRoot, sourceFile);
        }
        this.setSourceContent(sourceFile, content);
      }
    }, this);
  };

/**
 * A mapping can have one of the three levels of data:
 *
 *   1. Just the generated position.
 *   2. The Generated position, original position, and original source.
 *   3. Generated and original position, original source, as well as a name
 *      token.
 *
 * To maintain consistency, we validate that any new mapping being added falls
 * in to one of these categories.
 */
SourceMapGenerator.prototype._validateMapping =
  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,
                                              aName) {
    // When aOriginal is truthy but has empty values for .line and .column,
    // it is most likely a programmer error. In this case we throw a very
    // specific error message to try to guide them the right way.
    // For example: https://github.com/Polymer/polymer-bundler/pull/519
    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {
        throw new Error(
            'original.line and original.column are not numbers -- you probably meant to omit ' +
            'the original mapping entirely and only map the generated position. If so, pass ' +
            'null for the original mapping instead of an object with empty or null values.'
        );
    }

    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
        && aGenerated.line > 0 && aGenerated.column >= 0
        && !aOriginal && !aSource && !aName) {
      // Case 1.
      return;
    }
    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated
             && aOriginal && 'line' in aOriginal && 'column' in aOriginal
             && aGenerated.line > 0 && aGenerated.column >= 0
             && aOriginal.line > 0 && aOriginal.column >= 0
             && aSource) {
      // Cases 2 and 3.
      return;
    }
    else {
      throw new Error('Invalid mapping: ' + JSON.stringify({
        generated: aGenerated,
        source: aSource,
        original: aOriginal,
        name: aName
      }));
    }
  };

/**
 * Serialize the accumulated mappings in to the stream of base 64 VLQs
 * specified by the source map format.
 */
SourceMapGenerator.prototype._serializeMappings =
  function SourceMapGenerator_serializeMappings() {
    var previousGeneratedColumn = 0;
    var previousGeneratedLine = 1;
    var previousOriginalColumn = 0;
    var previousOriginalLine = 0;
    var previousName = 0;
    var previousSource = 0;
    var result = '';
    var next;
    var mapping;
    var nameIdx;
    var sourceIdx;

    var mappings = this._mappings.toArray();
    for (var i = 0, len = mappings.length; i < len; i++) {
      mapping = mappings[i];
      next = ''

      if (mapping.generatedLine !== previousGeneratedLine) {
        previousGeneratedColumn = 0;
        while (mapping.generatedLine !== previousGeneratedLine) {
          next += ';';
          previousGeneratedLine++;
        }
      }
      else {
        if (i > 0) {
          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {
            continue;
          }
          next += ',';
        }
      }

      next += base64VLQ.encode(mapping.generatedColumn
                                 - previousGeneratedColumn);
      previousGeneratedColumn = mapping.generatedColumn;

      if (mapping.source != null) {
        sourceIdx = this._sources.indexOf(mapping.source);
        next += base64VLQ.encode(sourceIdx - previousSource);
        previousSource = sourceIdx;

        // lines are stored 0-based in SourceMap spec version 3
        next += base64VLQ.encode(mapping.originalLine - 1
                                   - previousOriginalLine);
        previousOriginalLine = mapping.originalLine - 1;

        next += base64VLQ.encode(mapping.originalColumn
                                   - previousOriginalColumn);
        previousOriginalColumn = mapping.originalColumn;

        if (mapping.name != null) {
          nameIdx = this._names.indexOf(mapping.name);
          next += base64VLQ.encode(nameIdx - previousName);
          previousName = nameIdx;
        }
      }

      result += next;
    }

    return result;
  };

SourceMapGenerator.prototype._generateSourcesContent =
  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {
    return aSources.map(function (source) {
      if (!this._sourcesContents) {
        return null;
      }
      if (aSourceRoot != null) {
        source = util.relative(aSourceRoot, source);
      }
      var key = util.toSetString(source);
      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)
        ? this._sourcesContents[key]
        : null;
    }, this);
  };

/**
 * Externalize the source map.
 */
SourceMapGenerator.prototype.toJSON =
  function SourceMapGenerator_toJSON() {
    var map = {
      version: this._version,
      sources: this._sources.toArray(),
      names: this._names.toArray(),
      mappings: this._serializeMappings()
    };
    if (this._file != null) {
      map.file = this._file;
    }
    if (this._sourceRoot != null) {
      map.sourceRoot = this._sourceRoot;
    }
    if (this._sourcesContents) {
      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);
    }

    return map;
  };

/**
 * Render the source map being generated to a string.
 */
SourceMapGenerator.prototype.toString =
  function SourceMapGenerator_toString() {
    return JSON.stringify(this.toJSON());
  };

exports.SourceMapGenerator = SourceMapGenerator;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 *
 * Based on the Base 64 VLQ implementation in Closure Compiler:
 * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java
 *
 * Copyright 2011 The Closure Compiler Authors. All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *  * Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above
 *    copyright notice, this list of conditions and the following
 *    disclaimer in the documentation and/or other materials provided
 *    with the distribution.
 *  * Neither the name of Google Inc. nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

var base64 = __webpack_require__(188);

// A single base 64 digit can contain 6 bits of data. For the base 64 variable
// length quantities we use in the source map spec, the first bit is the sign,
// the next four bits are the actual value, and the 6th bit is the
// continuation bit. The continuation bit tells us whether there are more
// digits in this value following this digit.
//
//   Continuation
//   |    Sign
//   |    |
//   V    V
//   101011

var VLQ_BASE_SHIFT = 5;

// binary: 100000
var VLQ_BASE = 1 << VLQ_BASE_SHIFT;

// binary: 011111
var VLQ_BASE_MASK = VLQ_BASE - 1;

// binary: 100000
var VLQ_CONTINUATION_BIT = VLQ_BASE;

/**
 * Converts from a two-complement value to a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)
 *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)
 */
function toVLQSigned(aValue) {
  return aValue < 0
    ? ((-aValue) << 1) + 1
    : (aValue << 1) + 0;
}

/**
 * Converts to a two-complement value from a value where the sign bit is
 * placed in the least significant bit.  For example, as decimals:
 *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1
 *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2
 */
function fromVLQSigned(aValue) {
  var isNegative = (aValue & 1) === 1;
  var shifted = aValue >> 1;
  return isNegative
    ? -shifted
    : shifted;
}

/**
 * Returns the base 64 VLQ encoded value.
 */
exports.encode = function base64VLQ_encode(aValue) {
  var encoded = "";
  var digit;

  var vlq = toVLQSigned(aValue);

  do {
    digit = vlq & VLQ_BASE_MASK;
    vlq >>>= VLQ_BASE_SHIFT;
    if (vlq > 0) {
      // There are still more digits in this value, so we must make sure the
      // continuation bit is marked.
      digit |= VLQ_CONTINUATION_BIT;
    }
    encoded += base64.encode(digit);
  } while (vlq > 0);

  return encoded;
};

/**
 * Decodes the next base 64 VLQ value from the given string and returns the
 * value and the rest of the string via the out parameter.
 */
exports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {
  var strLen = aStr.length;
  var result = 0;
  var shift = 0;
  var continuation, digit;

  do {
    if (aIndex >= strLen) {
      throw new Error("Expected more digits in base 64 VLQ value.");
    }

    digit = base64.decode(aStr.charCodeAt(aIndex++));
    if (digit === -1) {
      throw new Error("Invalid base64 digit: " + aStr.charAt(aIndex - 1));
    }

    continuation = !!(digit & VLQ_CONTINUATION_BIT);
    digit &= VLQ_BASE_MASK;
    result = result + (digit << shift);
    shift += VLQ_BASE_SHIFT;
  } while (continuation);

  aOutParam.value = fromVLQSigned(result);
  aOutParam.rest = aIndex;
};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(22);
var has = Object.prototype.hasOwnProperty;
var hasNativeMap = typeof Map !== "undefined";

/**
 * A data structure which is a combination of an array and a set. Adding a new
 * member is O(1), testing for membership is O(1), and finding the index of an
 * element is O(1). Removing elements from the set is not supported. Only
 * strings are supported for membership.
 */
function ArraySet() {
  this._array = [];
  this._set = hasNativeMap ? new Map() : Object.create(null);
}

/**
 * Static method for creating ArraySet instances from an existing array.
 */
ArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {
  var set = new ArraySet();
  for (var i = 0, len = aArray.length; i < len; i++) {
    set.add(aArray[i], aAllowDuplicates);
  }
  return set;
};

/**
 * Return how many unique items are in this ArraySet. If duplicates have been
 * added, than those do not count towards the size.
 *
 * @returns Number
 */
ArraySet.prototype.size = function ArraySet_size() {
  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;
};

/**
 * Add the given string to this set.
 *
 * @param String aStr
 */
ArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {
  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);
  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);
  var idx = this._array.length;
  if (!isDuplicate || aAllowDuplicates) {
    this._array.push(aStr);
  }
  if (!isDuplicate) {
    if (hasNativeMap) {
      this._set.set(aStr, idx);
    } else {
      this._set[sStr] = idx;
    }
  }
};

/**
 * Is the given string a member of this set?
 *
 * @param String aStr
 */
ArraySet.prototype.has = function ArraySet_has(aStr) {
  if (hasNativeMap) {
    return this._set.has(aStr);
  } else {
    var sStr = util.toSetString(aStr);
    return has.call(this._set, sStr);
  }
};

/**
 * What is the index of the given string in the array?
 *
 * @param String aStr
 */
ArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {
  if (hasNativeMap) {
    var idx = this._set.get(aStr);
    if (idx >= 0) {
        return idx;
    }
  } else {
    var sStr = util.toSetString(aStr);
    if (has.call(this._set, sStr)) {
      return this._set[sStr];
    }
  }

  throw new Error('"' + aStr + '" is not in the set.');
};

/**
 * What is the element at the given index?
 *
 * @param Number aIdx
 */
ArraySet.prototype.at = function ArraySet_at(aIdx) {
  if (aIdx >= 0 && aIdx < this._array.length) {
    return this._array[aIdx];
  }
  throw new Error('No element indexed by ' + aIdx);
};

/**
 * Returns the array representation of this set (which has the proper indices
 * indicated by indexOf). Note that this is a copy of the internal array used
 * for storing the members so that no one can mess with internal state.
 */
ArraySet.prototype.toArray = function ArraySet_toArray() {
  return this._array.slice();
};

exports.ArraySet = ArraySet;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;
var DEFAULT_RAW = {
  colon: ': ',
  indent: '    ',
  beforeDecl: '\n',
  beforeRule: '\n',
  beforeOpen: ' ',
  beforeClose: '\n',
  beforeComment: '\n',
  after: '\n',
  emptyBody: '',
  commentLeft: ' ',
  commentRight: ' ',
  semicolon: false
};

function capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
}

var Stringifier =
/*#__PURE__*/
function () {
  function Stringifier(builder) {
    this.builder = builder;
  }

  var _proto = Stringifier.prototype;

  _proto.stringify = function stringify(node, semicolon) {
    this[node.type](node, semicolon);
  };

  _proto.root = function root(node) {
    this.body(node);
    if (node.raws.after) this.builder(node.raws.after);
  };

  _proto.comment = function comment(node) {
    var left = this.raw(node, 'left', 'commentLeft');
    var right = this.raw(node, 'right', 'commentRight');
    this.builder('/*' + left + node.text + right + '*/', node);
  };

  _proto.decl = function decl(node, semicolon) {
    var between = this.raw(node, 'between', 'colon');
    var string = node.prop + between + this.rawValue(node, 'value');

    if (node.important) {
      string += node.raws.important || ' !important';
    }

    if (semicolon) string += ';';
    this.builder(string, node);
  };

  _proto.rule = function rule(node) {
    this.block(node, this.rawValue(node, 'selector'));

    if (node.raws.ownSemicolon) {
      this.builder(node.raws.ownSemicolon, node, 'end');
    }
  };

  _proto.atrule = function atrule(node, semicolon) {
    var name = '@' + node.name;
    var params = node.params ? this.rawValue(node, 'params') : '';

    if (typeof node.raws.afterName !== 'undefined') {
      name += node.raws.afterName;
    } else if (params) {
      name += ' ';
    }

    if (node.nodes) {
      this.block(node, name + params);
    } else {
      var end = (node.raws.between || '') + (semicolon ? ';' : '');
      this.builder(name + params + end, node);
    }
  };

  _proto.body = function body(node) {
    var last = node.nodes.length - 1;

    while (last > 0) {
      if (node.nodes[last].type !== 'comment') break;
      last -= 1;
    }

    var semicolon = this.raw(node, 'semicolon');

    for (var i = 0; i < node.nodes.length; i++) {
      var child = node.nodes[i];
      var before = this.raw(child, 'before');
      if (before) this.builder(before);
      this.stringify(child, last !== i || semicolon);
    }
  };

  _proto.block = function block(node, start) {
    var between = this.raw(node, 'between', 'beforeOpen');
    this.builder(start + between + '{', node, 'start');
    var after;

    if (node.nodes && node.nodes.length) {
      this.body(node);
      after = this.raw(node, 'after');
    } else {
      after = this.raw(node, 'after', 'emptyBody');
    }

    if (after) this.builder(after);
    this.builder('}', node, 'end');
  };

  _proto.raw = function raw(node, own, detect) {
    var value;
    if (!detect) detect = own; // Already had

    if (own) {
      value = node.raws[own];
      if (typeof value !== 'undefined') return value;
    }

    var parent = node.parent; // Hack for first rule in CSS

    if (detect === 'before') {
      if (!parent || parent.type === 'root' && parent.first === node) {
        return '';
      }
    } // Floating child without parent


    if (!parent) return DEFAULT_RAW[detect]; // Detect style by other nodes

    var root = node.root();
    if (!root.rawCache) root.rawCache = {};

    if (typeof root.rawCache[detect] !== 'undefined') {
      return root.rawCache[detect];
    }

    if (detect === 'before' || detect === 'after') {
      return this.beforeAfter(node, detect);
    } else {
      var method = 'raw' + capitalize(detect);

      if (this[method]) {
        value = this[method](root, node);
      } else {
        root.walk(function (i) {
          value = i.raws[own];
          if (typeof value !== 'undefined') return false;
        });
      }
    }

    if (typeof value === 'undefined') value = DEFAULT_RAW[detect];
    root.rawCache[detect] = value;
    return value;
  };

  _proto.rawSemicolon = function rawSemicolon(root) {
    var value;
    root.walk(function (i) {
      if (i.nodes && i.nodes.length && i.last.type === 'decl') {
        value = i.raws.semicolon;
        if (typeof value !== 'undefined') return false;
      }
    });
    return value;
  };

  _proto.rawEmptyBody = function rawEmptyBody(root) {
    var value;
    root.walk(function (i) {
      if (i.nodes && i.nodes.length === 0) {
        value = i.raws.after;
        if (typeof value !== 'undefined') return false;
      }
    });
    return value;
  };

  _proto.rawIndent = function rawIndent(root) {
    if (root.raws.indent) return root.raws.indent;
    var value;
    root.walk(function (i) {
      var p = i.parent;

      if (p && p !== root && p.parent && p.parent === root) {
        if (typeof i.raws.before !== 'undefined') {
          var parts = i.raws.before.split('\n');
          value = parts[parts.length - 1];
          value = value.replace(/[^\s]/g, '');
          return false;
        }
      }
    });
    return value;
  };

  _proto.rawBeforeComment = function rawBeforeComment(root, node) {
    var value;
    root.walkComments(function (i) {
      if (typeof i.raws.before !== 'undefined') {
        value = i.raws.before;

        if (value.indexOf('\n') !== -1) {
          value = value.replace(/[^\n]+$/, '');
        }

        return false;
      }
    });

    if (typeof value === 'undefined') {
      value = this.raw(node, null, 'beforeDecl');
    } else if (value) {
      value = value.replace(/[^\s]/g, '');
    }

    return value;
  };

  _proto.rawBeforeDecl = function rawBeforeDecl(root, node) {
    var value;
    root.walkDecls(function (i) {
      if (typeof i.raws.before !== 'undefined') {
        value = i.raws.before;

        if (value.indexOf('\n') !== -1) {
          value = value.replace(/[^\n]+$/, '');
        }

        return false;
      }
    });

    if (typeof value === 'undefined') {
      value = this.raw(node, null, 'beforeRule');
    } else if (value) {
      value = value.replace(/[^\s]/g, '');
    }

    return value;
  };

  _proto.rawBeforeRule = function rawBeforeRule(root) {
    var value;
    root.walk(function (i) {
      if (i.nodes && (i.parent !== root || root.first !== i)) {
        if (typeof i.raws.before !== 'undefined') {
          value = i.raws.before;

          if (value.indexOf('\n') !== -1) {
            value = value.replace(/[^\n]+$/, '');
          }

          return false;
        }
      }
    });
    if (value) value = value.replace(/[^\s]/g, '');
    return value;
  };

  _proto.rawBeforeClose = function rawBeforeClose(root) {
    var value;
    root.walk(function (i) {
      if (i.nodes && i.nodes.length > 0) {
        if (typeof i.raws.after !== 'undefined') {
          value = i.raws.after;

          if (value.indexOf('\n') !== -1) {
            value = value.replace(/[^\n]+$/, '');
          }

          return false;
        }
      }
    });
    if (value) value = value.replace(/[^\s]/g, '');
    return value;
  };

  _proto.rawBeforeOpen = function rawBeforeOpen(root) {
    var value;
    root.walk(function (i) {
      if (i.type !== 'decl') {
        value = i.raws.between;
        if (typeof value !== 'undefined') return false;
      }
    });
    return value;
  };

  _proto.rawColon = function rawColon(root) {
    var value;
    root.walkDecls(function (i) {
      if (typeof i.raws.between !== 'undefined') {
        value = i.raws.between.replace(/[^\s:]/g, '');
        return false;
      }
    });
    return value;
  };

  _proto.beforeAfter = function beforeAfter(node, detect) {
    var value;

    if (node.type === 'decl') {
      value = this.raw(node, null, 'beforeDecl');
    } else if (node.type === 'comment') {
      value = this.raw(node, null, 'beforeComment');
    } else if (detect === 'before') {
      value = this.raw(node, null, 'beforeRule');
    } else {
      value = this.raw(node, null, 'beforeClose');
    }

    var buf = node.parent;
    var depth = 0;

    while (buf && buf.type !== 'root') {
      depth += 1;
      buf = buf.parent;
    }

    if (value.indexOf('\n') !== -1) {
      var indent = this.raw(node, null, 'indent');

      if (indent.length) {
        for (var step = 0; step < depth; step++) {
          value += indent;
        }
      }
    }

    return value;
  };

  _proto.rawValue = function rawValue(node, prop) {
    var value = node[prop];
    var raw = node.raws[prop];

    if (raw && raw.value === value) {
      return raw.raw;
    }

    return value;
  };

  return Stringifier;
}();

var _default = Stringifier;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _lazyResult = _interopRequireDefault(__webpack_require__(65));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Contains plugins to process CSS. Create one `Processor` instance,
 * initialize its plugins, and then use that instance on numerous CSS files.
 *
 * @example
 * const processor = postcss([autoprefixer, precss])
 * processor.process(css1).then(result => console.log(result.css))
 * processor.process(css2).then(result => console.log(result.css))
 */
var Processor =
/*#__PURE__*/
function () {
  /**
   * @param {Array.<Plugin|pluginFunction>|Processor} plugins PostCSS plugins.
   *        See {@link Processor#use} for plugin format.
   */
  function Processor(plugins) {
    if (plugins === void 0) {
      plugins = [];
    }

    /**
     * Current PostCSS version.
     *
     * @type {string}
     *
     * @example
     * if (result.processor.version.split('.')[0] !== '6') {
     *   throw new Error('This plugin works only with PostCSS 6')
     * }
     */
    this.version = '7.0.17';
    /**
     * Plugins added to this processor.
     *
     * @type {pluginFunction[]}
     *
     * @example
     * const processor = postcss([autoprefixer, precss])
     * processor.plugins.length //=> 2
     */

    this.plugins = this.normalize(plugins);
  }
  /**
   * Adds a plugin to be used as a CSS processor.
   *
   * PostCSS plugin can be in 4 formats:
   * * A plugin created by {@link postcss.plugin} method.
   * * A function. PostCSS will pass the function a @{link Root}
   *   as the first argument and current {@link Result} instance
   *   as the second.
   * * An object with a `postcss` method. PostCSS will use that method
   *   as described in #2.
   * * Another {@link Processor} instance. PostCSS will copy plugins
   *   from that instance into this one.
   *
   * Plugins can also be added by passing them as arguments when creating
   * a `postcss` instance (see [`postcss(plugins)`]).
   *
   * Asynchronous plugins should return a `Promise` instance.
   *
   * @param {Plugin|pluginFunction|Processor} plugin PostCSS plugin
   *                                                 or {@link Processor}
   *                                                 with plugins.
   *
   * @example
   * const processor = postcss()
   *   .use(autoprefixer)
   *   .use(precss)
   *
   * @return {Processes} Current processor to make methods chain.
   */


  var _proto = Processor.prototype;

  _proto.use = function use(plugin) {
    this.plugins = this.plugins.concat(this.normalize([plugin]));
    return this;
  }
  /**
   * Parses source CSS and returns a {@link LazyResult} Promise proxy.
   * Because some plugins can be asynchronous it doesn’t make
   * any transformations. Transformations will be applied
   * in the {@link LazyResult} methods.
   *
   * @param {string|toString|Result} css String with input CSS or any object
   *                                     with a `toString()` method,
   *                                     like a Buffer. Optionally, send
   *                                     a {@link Result} instance
   *                                     and the processor will take
   *                                     the {@link Root} from it.
   * @param {processOptions} [opts]      Options.
   *
   * @return {LazyResult} Promise proxy.
   *
   * @example
   * processor.process(css, { from: 'a.css', to: 'a.out.css' })
   *   .then(result => {
   *      console.log(result.css)
   *   })
   */
  ;

  _proto.process = function (_process) {
    function process(_x) {
      return _process.apply(this, arguments);
    }

    process.toString = function () {
      return _process.toString();
    };

    return process;
  }(function (css, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (this.plugins.length === 0 && opts.parser === opts.stringifier) {
      if (false) {}
    }

    return new _lazyResult.default(this, css, opts);
  });

  _proto.normalize = function normalize(plugins) {
    var normalized = [];

    for (var _iterator = plugins, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var i = _ref;
      if (i.postcss) i = i.postcss;

      if (typeof i === 'object' && Array.isArray(i.plugins)) {
        normalized = normalized.concat(i.plugins);
      } else if (typeof i === 'function') {
        normalized.push(i);
      } else if (typeof i === 'object' && (i.parse || i.stringify)) {
        if (false) {}
      } else {
        throw new Error(i + ' is not a PostCSS plugin');
      }
    }

    return normalized;
  };

  return Processor;
}();

var _default = Processor;
/**
 * @callback builder
 * @param {string} part          Part of generated CSS connected to this node.
 * @param {Node}   node          AST node.
 * @param {"start"|"end"} [type] Node’s part type.
 */

/**
 * @callback parser
 *
 * @param {string|toString} css   String with input CSS or any object
 *                                with toString() method, like a Buffer.
 * @param {processOptions} [opts] Options with only `from` and `map` keys.
 *
 * @return {Root} PostCSS AST
 */

/**
 * @callback stringifier
 *
 * @param {Node} node       Start node for stringifing. Usually {@link Root}.
 * @param {builder} builder Function to concatenate CSS from node’s parts
 *                          or generate string and source map.
 *
 * @return {void}
 */

/**
 * @typedef {object} syntax
 * @property {parser} parse          Function to generate AST by string.
 * @property {stringifier} stringify Function to generate string by AST.
 */

/**
 * @typedef {object} toString
 * @property {function} toString
 */

/**
 * @callback pluginFunction
 * @param {Root} root     Parsed input CSS.
 * @param {Result} result Result to set warnings or check other plugins.
 */

/**
 * @typedef {object} Plugin
 * @property {function} postcss PostCSS plugin function.
 */

/**
 * @typedef {object} processOptions
 * @property {string} from             The path of the CSS source file.
 *                                     You should always set `from`,
 *                                     because it is used in source map
 *                                     generation and syntax error messages.
 * @property {string} to               The path where you’ll put the output
 *                                     CSS file. You should always set `to`
 *                                     to generate correct source maps.
 * @property {parser} parser           Function to generate AST by string.
 * @property {stringifier} stringifier Class to generate string by AST.
 * @property {syntax} syntax           Object with `parse` and `stringify`.
 * @property {object} map              Source map options.
 * @property {boolean} map.inline                    Does source map should
 *                                                   be embedded in the output
 *                                                   CSS as a base64-encoded
 *                                                   comment.
 * @property {string|object|false|function} map.prev Source map content
 *                                                   from a previous
 *                                                   processing step
 *                                                   (for example, Sass).
 *                                                   PostCSS will try to find
 *                                                   previous map automatically,
 *                                                   so you could disable it by
 *                                                   `false` value.
 * @property {boolean} map.sourcesContent            Does PostCSS should set
 *                                                   the origin content to map.
 * @property {string|false} map.annotation           Does PostCSS should set
 *                                                   annotation comment to map.
 * @property {string} map.from                       Override `from` in map’s
 *                                                   sources`.
 */

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _mapGenerator = _interopRequireDefault(__webpack_require__(194));

var _stringify2 = _interopRequireDefault(__webpack_require__(39));

var _warnOnce = _interopRequireDefault(__webpack_require__(195));

var _result = _interopRequireDefault(__webpack_require__(196));

var _parse = _interopRequireDefault(__webpack_require__(40));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function isPromise(obj) {
  return typeof obj === 'object' && typeof obj.then === 'function';
}
/**
 * A Promise proxy for the result of PostCSS transformations.
 *
 * A `LazyResult` instance is returned by {@link Processor#process}.
 *
 * @example
 * const lazy = postcss([autoprefixer]).process(css)
 */


var LazyResult =
/*#__PURE__*/
function () {
  function LazyResult(processor, css, opts) {
    this.stringified = false;
    this.processed = false;
    var root;

    if (typeof css === 'object' && css !== null && css.type === 'root') {
      root = css;
    } else if (css instanceof LazyResult || css instanceof _result.default) {
      root = css.root;

      if (css.map) {
        if (typeof opts.map === 'undefined') opts.map = {};
        if (!opts.map.inline) opts.map.inline = false;
        opts.map.prev = css.map;
      }
    } else {
      var parser = _parse.default;
      if (opts.syntax) parser = opts.syntax.parse;
      if (opts.parser) parser = opts.parser;
      if (parser.parse) parser = parser.parse;

      try {
        root = parser(css, opts);
      } catch (error) {
        this.error = error;
      }
    }

    this.result = new _result.default(processor, root, opts);
  }
  /**
   * Returns a {@link Processor} instance, which will be used
   * for CSS transformations.
   *
   * @type {Processor}
   */


  var _proto = LazyResult.prototype;

  /**
   * Processes input CSS through synchronous plugins
   * and calls {@link Result#warnings()}.
   *
   * @return {Warning[]} Warnings from plugins.
   */
  _proto.warnings = function warnings() {
    return this.sync().warnings();
  }
  /**
   * Alias for the {@link LazyResult#css} property.
   *
   * @example
   * lazy + '' === lazy.css
   *
   * @return {string} Output CSS.
   */
  ;

  _proto.toString = function toString() {
    return this.css;
  }
  /**
   * Processes input CSS through synchronous and asynchronous plugins
   * and calls `onFulfilled` with a Result instance. If a plugin throws
   * an error, the `onRejected` callback will be executed.
   *
   * It implements standard Promise API.
   *
   * @param {onFulfilled} onFulfilled Callback will be executed
   *                                  when all plugins will finish work.
   * @param {onRejected}  onRejected  Callback will be executed on any error.
   *
   * @return {Promise} Promise API to make queue.
   *
   * @example
   * postcss([autoprefixer]).process(css, { from: cssPath }).then(result => {
   *   console.log(result.css)
   * })
   */
  ;

  _proto.then = function then(onFulfilled, onRejected) {
    if (false) {}

    return this.async().then(onFulfilled, onRejected);
  }
  /**
   * Processes input CSS through synchronous and asynchronous plugins
   * and calls onRejected for each error thrown in any plugin.
   *
   * It implements standard Promise API.
   *
   * @param {onRejected} onRejected Callback will be executed on any error.
   *
   * @return {Promise} Promise API to make queue.
   *
   * @example
   * postcss([autoprefixer]).process(css).then(result => {
   *   console.log(result.css)
   * }).catch(error => {
   *   console.error(error)
   * })
   */
  ;

  _proto.catch = function _catch(onRejected) {
    return this.async().catch(onRejected);
  }
  /**
   * Processes input CSS through synchronous and asynchronous plugins
   * and calls onFinally on any error or when all plugins will finish work.
   *
   * It implements standard Promise API.
   *
   * @param {onFinally} onFinally Callback will be executed on any error or
   *                              when all plugins will finish work.
   *
   * @return {Promise} Promise API to make queue.
   *
   * @example
   * postcss([autoprefixer]).process(css).finally(() => {
   *   console.log('processing ended')
   * })
   */
  ;

  _proto.finally = function _finally(onFinally) {
    return this.async().then(onFinally, onFinally);
  };

  _proto.handleError = function handleError(error, plugin) {
    try {
      this.error = error;

      if (error.name === 'CssSyntaxError' && !error.plugin) {
        error.plugin = plugin.postcssPlugin;
        error.setMessage();
      } else if (plugin.postcssVersion) {
        if (false) { var b, a, runtimeVer, pluginVer, pluginName; }
      }
    } catch (err) {
      if (console && console.error) console.error(err);
    }
  };

  _proto.asyncTick = function asyncTick(resolve, reject) {
    var _this = this;

    if (this.plugin >= this.processor.plugins.length) {
      this.processed = true;
      return resolve();
    }

    try {
      var plugin = this.processor.plugins[this.plugin];
      var promise = this.run(plugin);
      this.plugin += 1;

      if (isPromise(promise)) {
        promise.then(function () {
          _this.asyncTick(resolve, reject);
        }).catch(function (error) {
          _this.handleError(error, plugin);

          _this.processed = true;
          reject(error);
        });
      } else {
        this.asyncTick(resolve, reject);
      }
    } catch (error) {
      this.processed = true;
      reject(error);
    }
  };

  _proto.async = function async() {
    var _this2 = this;

    if (this.processed) {
      return new Promise(function (resolve, reject) {
        if (_this2.error) {
          reject(_this2.error);
        } else {
          resolve(_this2.stringify());
        }
      });
    }

    if (this.processing) {
      return this.processing;
    }

    this.processing = new Promise(function (resolve, reject) {
      if (_this2.error) return reject(_this2.error);
      _this2.plugin = 0;

      _this2.asyncTick(resolve, reject);
    }).then(function () {
      _this2.processed = true;
      return _this2.stringify();
    });
    return this.processing;
  };

  _proto.sync = function sync() {
    if (this.processed) return this.result;
    this.processed = true;

    if (this.processing) {
      throw new Error('Use process(css).then(cb) to work with async plugins');
    }

    if (this.error) throw this.error;

    for (var _iterator = this.result.processor.plugins, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var plugin = _ref;
      var promise = this.run(plugin);

      if (isPromise(promise)) {
        throw new Error('Use process(css).then(cb) to work with async plugins');
      }
    }

    return this.result;
  };

  _proto.run = function run(plugin) {
    this.result.lastPlugin = plugin;

    try {
      return plugin(this.result.root, this.result);
    } catch (error) {
      this.handleError(error, plugin);
      throw error;
    }
  };

  _proto.stringify = function stringify() {
    if (this.stringified) return this.result;
    this.stringified = true;
    this.sync();
    var opts = this.result.opts;
    var str = _stringify2.default;
    if (opts.syntax) str = opts.syntax.stringify;
    if (opts.stringifier) str = opts.stringifier;
    if (str.stringify) str = str.stringify;
    var map = new _mapGenerator.default(str, this.result.root, this.result.opts);
    var data = map.generate();
    this.result.css = data[0];
    this.result.map = data[1];
    return this.result;
  };

  _createClass(LazyResult, [{
    key: "processor",
    get: function get() {
      return this.result.processor;
    }
    /**
     * Options from the {@link Processor#process} call.
     *
     * @type {processOptions}
     */

  }, {
    key: "opts",
    get: function get() {
      return this.result.opts;
    }
    /**
     * Processes input CSS through synchronous plugins, converts `Root`
     * to a CSS string and returns {@link Result#css}.
     *
     * This property will only work with synchronous plugins.
     * If the processor contains any asynchronous plugins
     * it will throw an error. This is why this method is only
     * for debug purpose, you should always use {@link LazyResult#then}.
     *
     * @type {string}
     * @see Result#css
     */

  }, {
    key: "css",
    get: function get() {
      return this.stringify().css;
    }
    /**
     * An alias for the `css` property. Use it with syntaxes
     * that generate non-CSS output.
     *
     * This property will only work with synchronous plugins.
     * If the processor contains any asynchronous plugins
     * it will throw an error. This is why this method is only
     * for debug purpose, you should always use {@link LazyResult#then}.
     *
     * @type {string}
     * @see Result#content
     */

  }, {
    key: "content",
    get: function get() {
      return this.stringify().content;
    }
    /**
     * Processes input CSS through synchronous plugins
     * and returns {@link Result#map}.
     *
     * This property will only work with synchronous plugins.
     * If the processor contains any asynchronous plugins
     * it will throw an error. This is why this method is only
     * for debug purpose, you should always use {@link LazyResult#then}.
     *
     * @type {SourceMapGenerator}
     * @see Result#map
     */

  }, {
    key: "map",
    get: function get() {
      return this.stringify().map;
    }
    /**
     * Processes input CSS through synchronous plugins
     * and returns {@link Result#root}.
     *
     * This property will only work with synchronous plugins. If the processor
     * contains any asynchronous plugins it will throw an error.
     *
     * This is why this method is only for debug purpose,
     * you should always use {@link LazyResult#then}.
     *
     * @type {Root}
     * @see Result#root
     */

  }, {
    key: "root",
    get: function get() {
      return this.sync().root;
    }
    /**
     * Processes input CSS through synchronous plugins
     * and returns {@link Result#messages}.
     *
     * This property will only work with synchronous plugins. If the processor
     * contains any asynchronous plugins it will throw an error.
     *
     * This is why this method is only for debug purpose,
     * you should always use {@link LazyResult#then}.
     *
     * @type {Message[]}
     * @see Result#messages
     */

  }, {
    key: "messages",
    get: function get() {
      return this.sync().messages;
    }
  }]);

  return LazyResult;
}();

var _default = LazyResult;
/**
 * @callback onFulfilled
 * @param {Result} result
 */

/**
 * @callback onRejected
 * @param {Error} error
 */

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

/**
 * Contains helpers for safely splitting lists of CSS values,
 * preserving parentheses and quotes.
 *
 * @example
 * const list = postcss.list
 *
 * @namespace list
 */
var list = {
  split: function split(string, separators, last) {
    var array = [];
    var current = '';
    var split = false;
    var func = 0;
    var quote = false;
    var escape = false;

    for (var i = 0; i < string.length; i++) {
      var letter = string[i];

      if (quote) {
        if (escape) {
          escape = false;
        } else if (letter === '\\') {
          escape = true;
        } else if (letter === quote) {
          quote = false;
        }
      } else if (letter === '"' || letter === '\'') {
        quote = letter;
      } else if (letter === '(') {
        func += 1;
      } else if (letter === ')') {
        if (func > 0) func -= 1;
      } else if (func === 0) {
        if (separators.indexOf(letter) !== -1) split = true;
      }

      if (split) {
        if (current !== '') array.push(current.trim());
        current = '';
        split = false;
      } else {
        current += letter;
      }
    }

    if (last || current !== '') array.push(current.trim());
    return array;
  },

  /**
   * Safely splits space-separated values (such as those for `background`,
   * `border-radius`, and other shorthand properties).
   *
   * @param {string} string Space-separated values.
   *
   * @return {string[]} Split values.
   *
   * @example
   * postcss.list.space('1px calc(10% + 1px)') //=> ['1px', 'calc(10% + 1px)']
   */
  space: function space(string) {
    var spaces = [' ', '\n', '\t'];
    return list.split(string, spaces);
  },

  /**
   * Safely splits comma-separated values (such as those for `transition-*`
   * and `background` properties).
   *
   * @param {string} string Comma-separated values.
   *
   * @return {string[]} Split values.
   *
   * @example
   * postcss.list.comma('black, linear-gradient(white, black)')
   * //=> ['black', 'linear-gradient(white, black)']
   */
  comma: function comma(string) {
    return list.split(string, [','], true);
  }
};
var _default = list;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3QuZXM2Il0sIm5hbWVzIjpbImxpc3QiLCJzcGxpdCIsInN0cmluZyIsInNlcGFyYXRvcnMiLCJsYXN0IiwiYXJyYXkiLCJjdXJyZW50IiwiZnVuYyIsInF1b3RlIiwiZXNjYXBlIiwiaSIsImxlbmd0aCIsImxldHRlciIsImluZGV4T2YiLCJwdXNoIiwidHJpbSIsInNwYWNlIiwic3BhY2VzIiwiY29tbWEiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7OztBQVNBLElBQUlBLElBQUksR0FBRztBQUVUQyxFQUFBQSxLQUZTLGlCQUVGQyxNQUZFLEVBRU1DLFVBRk4sRUFFa0JDLElBRmxCLEVBRXdCO0FBQy9CLFFBQUlDLEtBQUssR0FBRyxFQUFaO0FBQ0EsUUFBSUMsT0FBTyxHQUFHLEVBQWQ7QUFDQSxRQUFJTCxLQUFLLEdBQUcsS0FBWjtBQUVBLFFBQUlNLElBQUksR0FBRyxDQUFYO0FBQ0EsUUFBSUMsS0FBSyxHQUFHLEtBQVo7QUFDQSxRQUFJQyxNQUFNLEdBQUcsS0FBYjs7QUFFQSxTQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdSLE1BQU0sQ0FBQ1MsTUFBM0IsRUFBbUNELENBQUMsRUFBcEMsRUFBd0M7QUFDdEMsVUFBSUUsTUFBTSxHQUFHVixNQUFNLENBQUNRLENBQUQsQ0FBbkI7O0FBRUEsVUFBSUYsS0FBSixFQUFXO0FBQ1QsWUFBSUMsTUFBSixFQUFZO0FBQ1ZBLFVBQUFBLE1BQU0sR0FBRyxLQUFUO0FBQ0QsU0FGRCxNQUVPLElBQUlHLE1BQU0sS0FBSyxJQUFmLEVBQXFCO0FBQzFCSCxVQUFBQSxNQUFNLEdBQUcsSUFBVDtBQUNELFNBRk0sTUFFQSxJQUFJRyxNQUFNLEtBQUtKLEtBQWYsRUFBc0I7QUFDM0JBLFVBQUFBLEtBQUssR0FBRyxLQUFSO0FBQ0Q7QUFDRixPQVJELE1BUU8sSUFBSUksTUFBTSxLQUFLLEdBQVgsSUFBa0JBLE1BQU0sS0FBSyxJQUFqQyxFQUF1QztBQUM1Q0osUUFBQUEsS0FBSyxHQUFHSSxNQUFSO0FBQ0QsT0FGTSxNQUVBLElBQUlBLE1BQU0sS0FBSyxHQUFmLEVBQW9CO0FBQ3pCTCxRQUFBQSxJQUFJLElBQUksQ0FBUjtBQUNELE9BRk0sTUFFQSxJQUFJSyxNQUFNLEtBQUssR0FBZixFQUFvQjtBQUN6QixZQUFJTCxJQUFJLEdBQUcsQ0FBWCxFQUFjQSxJQUFJLElBQUksQ0FBUjtBQUNmLE9BRk0sTUFFQSxJQUFJQSxJQUFJLEtBQUssQ0FBYixFQUFnQjtBQUNyQixZQUFJSixVQUFVLENBQUNVLE9BQVgsQ0FBbUJELE1BQW5CLE1BQStCLENBQUMsQ0FBcEMsRUFBdUNYLEtBQUssR0FBRyxJQUFSO0FBQ3hDOztBQUVELFVBQUlBLEtBQUosRUFBVztBQUNULFlBQUlLLE9BQU8sS0FBSyxFQUFoQixFQUFvQkQsS0FBSyxDQUFDUyxJQUFOLENBQVdSLE9BQU8sQ0FBQ1MsSUFBUixFQUFYO0FBQ3BCVCxRQUFBQSxPQUFPLEdBQUcsRUFBVjtBQUNBTCxRQUFBQSxLQUFLLEdBQUcsS0FBUjtBQUNELE9BSkQsTUFJTztBQUNMSyxRQUFBQSxPQUFPLElBQUlNLE1BQVg7QUFDRDtBQUNGOztBQUVELFFBQUlSLElBQUksSUFBSUUsT0FBTyxLQUFLLEVBQXhCLEVBQTRCRCxLQUFLLENBQUNTLElBQU4sQ0FBV1IsT0FBTyxDQUFDUyxJQUFSLEVBQVg7QUFDNUIsV0FBT1YsS0FBUDtBQUNELEdBM0NROztBQTZDVDs7Ozs7Ozs7Ozs7QUFXQVcsRUFBQUEsS0F4RFMsaUJBd0RGZCxNQXhERSxFQXdETTtBQUNiLFFBQUllLE1BQU0sR0FBRyxDQUFDLEdBQUQsRUFBTSxJQUFOLEVBQVksSUFBWixDQUFiO0FBQ0EsV0FBT2pCLElBQUksQ0FBQ0MsS0FBTCxDQUFXQyxNQUFYLEVBQW1CZSxNQUFuQixDQUFQO0FBQ0QsR0EzRFE7O0FBNkRUOzs7Ozs7Ozs7Ozs7QUFZQUMsRUFBQUEsS0F6RVMsaUJBeUVGaEIsTUF6RUUsRUF5RU07QUFDYixXQUFPRixJQUFJLENBQUNDLEtBQUwsQ0FBV0MsTUFBWCxFQUFtQixDQUFDLEdBQUQsQ0FBbkIsRUFBMEIsSUFBMUIsQ0FBUDtBQUNEO0FBM0VRLENBQVg7ZUErRWVGLEkiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbnRhaW5zIGhlbHBlcnMgZm9yIHNhZmVseSBzcGxpdHRpbmcgbGlzdHMgb2YgQ1NTIHZhbHVlcyxcbiAqIHByZXNlcnZpbmcgcGFyZW50aGVzZXMgYW5kIHF1b3Rlcy5cbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3QgbGlzdCA9IHBvc3Rjc3MubGlzdFxuICpcbiAqIEBuYW1lc3BhY2UgbGlzdFxuICovXG5sZXQgbGlzdCA9IHtcblxuICBzcGxpdCAoc3RyaW5nLCBzZXBhcmF0b3JzLCBsYXN0KSB7XG4gICAgbGV0IGFycmF5ID0gW11cbiAgICBsZXQgY3VycmVudCA9ICcnXG4gICAgbGV0IHNwbGl0ID0gZmFsc2VcblxuICAgIGxldCBmdW5jID0gMFxuICAgIGxldCBxdW90ZSA9IGZhbHNlXG4gICAgbGV0IGVzY2FwZSA9IGZhbHNlXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgbGV0IGxldHRlciA9IHN0cmluZ1tpXVxuXG4gICAgICBpZiAocXVvdGUpIHtcbiAgICAgICAgaWYgKGVzY2FwZSkge1xuICAgICAgICAgIGVzY2FwZSA9IGZhbHNlXG4gICAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnXFxcXCcpIHtcbiAgICAgICAgICBlc2NhcGUgPSB0cnVlXG4gICAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSBxdW90ZSkge1xuICAgICAgICAgIHF1b3RlID0gZmFsc2VcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChsZXR0ZXIgPT09ICdcIicgfHwgbGV0dGVyID09PSAnXFwnJykge1xuICAgICAgICBxdW90ZSA9IGxldHRlclxuICAgICAgfSBlbHNlIGlmIChsZXR0ZXIgPT09ICcoJykge1xuICAgICAgICBmdW5jICs9IDFcbiAgICAgIH0gZWxzZSBpZiAobGV0dGVyID09PSAnKScpIHtcbiAgICAgICAgaWYgKGZ1bmMgPiAwKSBmdW5jIC09IDFcbiAgICAgIH0gZWxzZSBpZiAoZnVuYyA9PT0gMCkge1xuICAgICAgICBpZiAoc2VwYXJhdG9ycy5pbmRleE9mKGxldHRlcikgIT09IC0xKSBzcGxpdCA9IHRydWVcbiAgICAgIH1cblxuICAgICAgaWYgKHNwbGl0KSB7XG4gICAgICAgIGlmIChjdXJyZW50ICE9PSAnJykgYXJyYXkucHVzaChjdXJyZW50LnRyaW0oKSlcbiAgICAgICAgY3VycmVudCA9ICcnXG4gICAgICAgIHNwbGl0ID0gZmFsc2VcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgKz0gbGV0dGVyXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGxhc3QgfHwgY3VycmVudCAhPT0gJycpIGFycmF5LnB1c2goY3VycmVudC50cmltKCkpXG4gICAgcmV0dXJuIGFycmF5XG4gIH0sXG5cbiAgLyoqXG4gICAqIFNhZmVseSBzcGxpdHMgc3BhY2Utc2VwYXJhdGVkIHZhbHVlcyAoc3VjaCBhcyB0aG9zZSBmb3IgYGJhY2tncm91bmRgLFxuICAgKiBgYm9yZGVyLXJhZGl1c2AsIGFuZCBvdGhlciBzaG9ydGhhbmQgcHJvcGVydGllcykuXG4gICAqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgU3BhY2Utc2VwYXJhdGVkIHZhbHVlcy5cbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nW119IFNwbGl0IHZhbHVlcy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogcG9zdGNzcy5saXN0LnNwYWNlKCcxcHggY2FsYygxMCUgKyAxcHgpJykgLy89PiBbJzFweCcsICdjYWxjKDEwJSArIDFweCknXVxuICAgKi9cbiAgc3BhY2UgKHN0cmluZykge1xuICAgIGxldCBzcGFjZXMgPSBbJyAnLCAnXFxuJywgJ1xcdCddXG4gICAgcmV0dXJuIGxpc3Quc3BsaXQoc3RyaW5nLCBzcGFjZXMpXG4gIH0sXG5cbiAgLyoqXG4gICAqIFNhZmVseSBzcGxpdHMgY29tbWEtc2VwYXJhdGVkIHZhbHVlcyAoc3VjaCBhcyB0aG9zZSBmb3IgYHRyYW5zaXRpb24tKmBcbiAgICogYW5kIGBiYWNrZ3JvdW5kYCBwcm9wZXJ0aWVzKS5cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHN0cmluZyBDb21tYS1zZXBhcmF0ZWQgdmFsdWVzLlxuICAgKlxuICAgKiBAcmV0dXJuIHtzdHJpbmdbXX0gU3BsaXQgdmFsdWVzLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiBwb3N0Y3NzLmxpc3QuY29tbWEoJ2JsYWNrLCBsaW5lYXItZ3JhZGllbnQod2hpdGUsIGJsYWNrKScpXG4gICAqIC8vPT4gWydibGFjaycsICdsaW5lYXItZ3JhZGllbnQod2hpdGUsIGJsYWNrKSddXG4gICAqL1xuICBjb21tYSAoc3RyaW5nKSB7XG4gICAgcmV0dXJuIGxpc3Quc3BsaXQoc3RyaW5nLCBbJywnXSwgdHJ1ZSlcbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGxpc3RcbiJdLCJmaWxlIjoibGlzdC5qcyJ9


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _container = _interopRequireDefault(__webpack_require__(43));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * Represents a CSS file and contains all its parsed nodes.
 *
 * @extends Container
 *
 * @example
 * const root = postcss.parse('a{color:black} b{z-index:2}')
 * root.type         //=> 'root'
 * root.nodes.length //=> 2
 */
var Root =
/*#__PURE__*/
function (_Container) {
  _inheritsLoose(Root, _Container);

  function Root(defaults) {
    var _this;

    _this = _Container.call(this, defaults) || this;
    _this.type = 'root';
    if (!_this.nodes) _this.nodes = [];
    return _this;
  }

  var _proto = Root.prototype;

  _proto.removeChild = function removeChild(child, ignore) {
    var index = this.index(child);

    if (!ignore && index === 0 && this.nodes.length > 1) {
      this.nodes[1].raws.before = this.nodes[index].raws.before;
    }

    return _Container.prototype.removeChild.call(this, child);
  };

  _proto.normalize = function normalize(child, sample, type) {
    var nodes = _Container.prototype.normalize.call(this, child);

    if (sample) {
      if (type === 'prepend') {
        if (this.nodes.length > 1) {
          sample.raws.before = this.nodes[1].raws.before;
        } else {
          delete sample.raws.before;
        }
      } else if (this.first !== sample) {
        for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
          var _ref;

          if (_isArray) {
            if (_i >= _iterator.length) break;
            _ref = _iterator[_i++];
          } else {
            _i = _iterator.next();
            if (_i.done) break;
            _ref = _i.value;
          }

          var node = _ref;
          node.raws.before = sample.raws.before;
        }
      }
    }

    return nodes;
  }
  /**
   * Returns a {@link Result} instance representing the root’s CSS.
   *
   * @param {processOptions} [opts] Options with only `to` and `map` keys.
   *
   * @return {Result} Result with current root’s CSS.
   *
   * @example
   * const root1 = postcss.parse(css1, { from: 'a.css' })
   * const root2 = postcss.parse(css2, { from: 'b.css' })
   * root1.append(root2)
   * const result = root1.toResult({ to: 'all.css', map: true })
   */
  ;

  _proto.toResult = function toResult(opts) {
    if (opts === void 0) {
      opts = {};
    }

    var LazyResult = __webpack_require__(65);

    var Processor = __webpack_require__(64);

    var lazy = new LazyResult(new Processor(), this, opts);
    return lazy.stringify();
  }
  /**
   * @memberof Root#
   * @member {object} raws Information to generate byte-to-byte equal
   *                       node string as it was in the origin input.
   *
   * Every parser saves its own properties,
   * but the default CSS parser uses:
   *
   * * `after`: the space symbols after the last child to the end of file.
   * * `semicolon`: is the last child has an (optional) semicolon.
   *
   * @example
   * postcss.parse('a {}\n').raws //=> { after: '\n' }
   * postcss.parse('a {}').raws   //=> { after: '' }
   */
  ;

  return Root;
}(_container.default);

var _default = Root;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvb3QuZXM2Il0sIm5hbWVzIjpbIlJvb3QiLCJkZWZhdWx0cyIsInR5cGUiLCJub2RlcyIsInJlbW92ZUNoaWxkIiwiY2hpbGQiLCJpZ25vcmUiLCJpbmRleCIsImxlbmd0aCIsInJhd3MiLCJiZWZvcmUiLCJub3JtYWxpemUiLCJzYW1wbGUiLCJmaXJzdCIsIm5vZGUiLCJ0b1Jlc3VsdCIsIm9wdHMiLCJMYXp5UmVzdWx0IiwicmVxdWlyZSIsIlByb2Nlc3NvciIsImxhenkiLCJzdHJpbmdpZnkiLCJDb250YWluZXIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7OztBQUVBOzs7Ozs7Ozs7O0lBVU1BLEk7Ozs7O0FBQ0osZ0JBQWFDLFFBQWIsRUFBdUI7QUFBQTs7QUFDckIsa0NBQU1BLFFBQU47QUFDQSxVQUFLQyxJQUFMLEdBQVksTUFBWjtBQUNBLFFBQUksQ0FBQyxNQUFLQyxLQUFWLEVBQWlCLE1BQUtBLEtBQUwsR0FBYSxFQUFiO0FBSEk7QUFJdEI7Ozs7U0FFREMsVyxHQUFBLHFCQUFhQyxLQUFiLEVBQW9CQyxNQUFwQixFQUE0QjtBQUMxQixRQUFJQyxLQUFLLEdBQUcsS0FBS0EsS0FBTCxDQUFXRixLQUFYLENBQVo7O0FBRUEsUUFBSSxDQUFDQyxNQUFELElBQVdDLEtBQUssS0FBSyxDQUFyQixJQUEwQixLQUFLSixLQUFMLENBQVdLLE1BQVgsR0FBb0IsQ0FBbEQsRUFBcUQ7QUFDbkQsV0FBS0wsS0FBTCxDQUFXLENBQVgsRUFBY00sSUFBZCxDQUFtQkMsTUFBbkIsR0FBNEIsS0FBS1AsS0FBTCxDQUFXSSxLQUFYLEVBQWtCRSxJQUFsQixDQUF1QkMsTUFBbkQ7QUFDRDs7QUFFRCxnQ0FBYU4sV0FBYixZQUF5QkMsS0FBekI7QUFDRCxHOztTQUVETSxTLEdBQUEsbUJBQVdOLEtBQVgsRUFBa0JPLE1BQWxCLEVBQTBCVixJQUExQixFQUFnQztBQUM5QixRQUFJQyxLQUFLLHdCQUFTUSxTQUFULFlBQW1CTixLQUFuQixDQUFUOztBQUVBLFFBQUlPLE1BQUosRUFBWTtBQUNWLFVBQUlWLElBQUksS0FBSyxTQUFiLEVBQXdCO0FBQ3RCLFlBQUksS0FBS0MsS0FBTCxDQUFXSyxNQUFYLEdBQW9CLENBQXhCLEVBQTJCO0FBQ3pCSSxVQUFBQSxNQUFNLENBQUNILElBQVAsQ0FBWUMsTUFBWixHQUFxQixLQUFLUCxLQUFMLENBQVcsQ0FBWCxFQUFjTSxJQUFkLENBQW1CQyxNQUF4QztBQUNELFNBRkQsTUFFTztBQUNMLGlCQUFPRSxNQUFNLENBQUNILElBQVAsQ0FBWUMsTUFBbkI7QUFDRDtBQUNGLE9BTkQsTUFNTyxJQUFJLEtBQUtHLEtBQUwsS0FBZUQsTUFBbkIsRUFBMkI7QUFDaEMsNkJBQWlCVCxLQUFqQixrSEFBd0I7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUFBLGNBQWZXLElBQWU7QUFDdEJBLFVBQUFBLElBQUksQ0FBQ0wsSUFBTCxDQUFVQyxNQUFWLEdBQW1CRSxNQUFNLENBQUNILElBQVAsQ0FBWUMsTUFBL0I7QUFDRDtBQUNGO0FBQ0Y7O0FBRUQsV0FBT1AsS0FBUDtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7Ozs7OztTQWFBWSxRLEdBQUEsa0JBQVVDLElBQVYsRUFBc0I7QUFBQSxRQUFaQSxJQUFZO0FBQVpBLE1BQUFBLElBQVksR0FBTCxFQUFLO0FBQUE7O0FBQ3BCLFFBQUlDLFVBQVUsR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBeEI7O0FBQ0EsUUFBSUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUF2Qjs7QUFFQSxRQUFJRSxJQUFJLEdBQUcsSUFBSUgsVUFBSixDQUFlLElBQUlFLFNBQUosRUFBZixFQUFnQyxJQUFoQyxFQUFzQ0gsSUFBdEMsQ0FBWDtBQUNBLFdBQU9JLElBQUksQ0FBQ0MsU0FBTCxFQUFQO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7O0VBMURpQkMsa0I7O2VBMkVKdEIsSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDb250YWluZXIgZnJvbSAnLi9jb250YWluZXInXG5cbi8qKlxuICogUmVwcmVzZW50cyBhIENTUyBmaWxlIGFuZCBjb250YWlucyBhbGwgaXRzIHBhcnNlZCBub2Rlcy5cbiAqXG4gKiBAZXh0ZW5kcyBDb250YWluZXJcbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3Qgcm9vdCA9IHBvc3Rjc3MucGFyc2UoJ2F7Y29sb3I6YmxhY2t9IGJ7ei1pbmRleDoyfScpXG4gKiByb290LnR5cGUgICAgICAgICAvLz0+ICdyb290J1xuICogcm9vdC5ub2Rlcy5sZW5ndGggLy89PiAyXG4gKi9cbmNsYXNzIFJvb3QgZXh0ZW5kcyBDb250YWluZXIge1xuICBjb25zdHJ1Y3RvciAoZGVmYXVsdHMpIHtcbiAgICBzdXBlcihkZWZhdWx0cylcbiAgICB0aGlzLnR5cGUgPSAncm9vdCdcbiAgICBpZiAoIXRoaXMubm9kZXMpIHRoaXMubm9kZXMgPSBbXVxuICB9XG5cbiAgcmVtb3ZlQ2hpbGQgKGNoaWxkLCBpZ25vcmUpIHtcbiAgICBsZXQgaW5kZXggPSB0aGlzLmluZGV4KGNoaWxkKVxuXG4gICAgaWYgKCFpZ25vcmUgJiYgaW5kZXggPT09IDAgJiYgdGhpcy5ub2Rlcy5sZW5ndGggPiAxKSB7XG4gICAgICB0aGlzLm5vZGVzWzFdLnJhd3MuYmVmb3JlID0gdGhpcy5ub2Rlc1tpbmRleF0ucmF3cy5iZWZvcmVcbiAgICB9XG5cbiAgICByZXR1cm4gc3VwZXIucmVtb3ZlQ2hpbGQoY2hpbGQpXG4gIH1cblxuICBub3JtYWxpemUgKGNoaWxkLCBzYW1wbGUsIHR5cGUpIHtcbiAgICBsZXQgbm9kZXMgPSBzdXBlci5ub3JtYWxpemUoY2hpbGQpXG5cbiAgICBpZiAoc2FtcGxlKSB7XG4gICAgICBpZiAodHlwZSA9PT0gJ3ByZXBlbmQnKSB7XG4gICAgICAgIGlmICh0aGlzLm5vZGVzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICBzYW1wbGUucmF3cy5iZWZvcmUgPSB0aGlzLm5vZGVzWzFdLnJhd3MuYmVmb3JlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgZGVsZXRlIHNhbXBsZS5yYXdzLmJlZm9yZVxuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHRoaXMuZmlyc3QgIT09IHNhbXBsZSkge1xuICAgICAgICBmb3IgKGxldCBub2RlIG9mIG5vZGVzKSB7XG4gICAgICAgICAgbm9kZS5yYXdzLmJlZm9yZSA9IHNhbXBsZS5yYXdzLmJlZm9yZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5vZGVzXG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyBhIHtAbGluayBSZXN1bHR9IGluc3RhbmNlIHJlcHJlc2VudGluZyB0aGUgcm9vdOKAmXMgQ1NTLlxuICAgKlxuICAgKiBAcGFyYW0ge3Byb2Nlc3NPcHRpb25zfSBbb3B0c10gT3B0aW9ucyB3aXRoIG9ubHkgYHRvYCBhbmQgYG1hcGAga2V5cy5cbiAgICpcbiAgICogQHJldHVybiB7UmVzdWx0fSBSZXN1bHQgd2l0aCBjdXJyZW50IHJvb3TigJlzIENTUy5cbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogY29uc3Qgcm9vdDEgPSBwb3N0Y3NzLnBhcnNlKGNzczEsIHsgZnJvbTogJ2EuY3NzJyB9KVxuICAgKiBjb25zdCByb290MiA9IHBvc3Rjc3MucGFyc2UoY3NzMiwgeyBmcm9tOiAnYi5jc3MnIH0pXG4gICAqIHJvb3QxLmFwcGVuZChyb290MilcbiAgICogY29uc3QgcmVzdWx0ID0gcm9vdDEudG9SZXN1bHQoeyB0bzogJ2FsbC5jc3MnLCBtYXA6IHRydWUgfSlcbiAgICovXG4gIHRvUmVzdWx0IChvcHRzID0geyB9KSB7XG4gICAgbGV0IExhenlSZXN1bHQgPSByZXF1aXJlKCcuL2xhenktcmVzdWx0JylcbiAgICBsZXQgUHJvY2Vzc29yID0gcmVxdWlyZSgnLi9wcm9jZXNzb3InKVxuXG4gICAgbGV0IGxhenkgPSBuZXcgTGF6eVJlc3VsdChuZXcgUHJvY2Vzc29yKCksIHRoaXMsIG9wdHMpXG4gICAgcmV0dXJuIGxhenkuc3RyaW5naWZ5KClcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgUm9vdCNcbiAgICogQG1lbWJlciB7b2JqZWN0fSByYXdzIEluZm9ybWF0aW9uIHRvIGdlbmVyYXRlIGJ5dGUtdG8tYnl0ZSBlcXVhbFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgbm9kZSBzdHJpbmcgYXMgaXQgd2FzIGluIHRoZSBvcmlnaW4gaW5wdXQuXG4gICAqXG4gICAqIEV2ZXJ5IHBhcnNlciBzYXZlcyBpdHMgb3duIHByb3BlcnRpZXMsXG4gICAqIGJ1dCB0aGUgZGVmYXVsdCBDU1MgcGFyc2VyIHVzZXM6XG4gICAqXG4gICAqICogYGFmdGVyYDogdGhlIHNwYWNlIHN5bWJvbHMgYWZ0ZXIgdGhlIGxhc3QgY2hpbGQgdG8gdGhlIGVuZCBvZiBmaWxlLlxuICAgKiAqIGBzZW1pY29sb25gOiBpcyB0aGUgbGFzdCBjaGlsZCBoYXMgYW4gKG9wdGlvbmFsKSBzZW1pY29sb24uXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIHBvc3Rjc3MucGFyc2UoJ2Ege31cXG4nKS5yYXdzIC8vPT4geyBhZnRlcjogJ1xcbicgfVxuICAgKiBwb3N0Y3NzLnBhcnNlKCdhIHt9JykucmF3cyAgIC8vPT4geyBhZnRlcjogJycgfVxuICAgKi9cbn1cblxuZXhwb3J0IGRlZmF1bHQgUm9vdFxuIl0sImZpbGUiOiJyb290LmpzIn0=


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//      


const parseJson = __webpack_require__(202);
const yaml = __webpack_require__(206);
const importFresh = __webpack_require__(229);

function loadJs(filepath        )         {
  const result = importFresh(filepath);
  return result;
}

function loadJson(filepath        , content        )         {
  try {
    return parseJson(content);
  } catch (err) {
    err.message = `JSON Error in ${filepath}:\n${err.message}`;
    throw err;
  }
}

function loadYaml(filepath        , content        )         {
  return yaml.safeLoad(content, { filename: filepath });
}

module.exports = {
  loadJs,
  loadJson,
  loadYaml,
};


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Standard YAML's Core schema.
// http://www.yaml.org/spec/1.2/spec.html#id2804923
//
// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
// So, Core schema has no distinctions from JSON schema is JS-YAML.





var Schema = __webpack_require__(18);


module.exports = new Schema({
  include: [
    __webpack_require__(70)
  ]
});


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Standard YAML's JSON schema.
// http://www.yaml.org/spec/1.2/spec.html#id2803231
//
// NOTE: JS-YAML does not support schema-specific tag resolution restrictions.
// So, this schema is not such strict as defined in the YAML specification.
// It allows numbers in binary notaion, use `Null` and `NULL` as `null`, etc.





var Schema = __webpack_require__(18);


module.exports = new Schema({
  include: [
    __webpack_require__(45)
  ],
  implicit: [
    __webpack_require__(213),
    __webpack_require__(214),
    __webpack_require__(215),
    __webpack_require__(216)
  ]
});


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.agents = undefined;

var _browsers = __webpack_require__(46);

var _browserVersions = __webpack_require__(72);

var agentsData = __webpack_require__(253);

function unpackBrowserVersions(versionsData) {
    return Object.keys(versionsData).reduce(function (usage, version) {
        usage[_browserVersions.browserVersions[version]] = versionsData[version];
        return usage;
    }, {});
}

var agents = exports.agents = Object.keys(agentsData).reduce(function (map, key) {
    var versionsData = agentsData[key];
    map[_browsers.browsers[key]] = Object.keys(versionsData).reduce(function (data, entry) {
        if (entry === 'A') {
            data.usage_global = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === 'C') {
            data.versions = versionsData[entry].reduce(function (list, version) {
                if (version === '') {
                    list.push(null);
                } else {
                    list.push(_browserVersions.browserVersions[version]);
                }
                return list;
            }, []);
        } else if (entry === 'D') {
            data.prefix_exceptions = unpackBrowserVersions(versionsData[entry]);
        } else if (entry === 'E') {
            data.browser = versionsData[entry];
        } else if (entry === 'F') {
            data.release_date = Object.keys(versionsData[entry]).reduce(function (map, key) {
                map[_browserVersions.browserVersions[key]] = versionsData[entry][key];
                return map;
            }, {});
        } else {
            // entry is B
            data.prefix = versionsData[entry];
        }
        return data;
    }, {});
    return map;
}, {});

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var browserVersions = exports.browserVersions = __webpack_require__(252);

/***/ }),
/* 73 */
/***/ (function(module, exports) {

function BrowserslistError (message) {
  this.name = 'BrowserslistError'
  this.message = message
  this.browserslist = true
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, BrowserslistError)
  }
}

BrowserslistError.prototype = Error.prototype

module.exports = BrowserslistError


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = unpackRegion;

var _browsers = __webpack_require__(46);

function unpackRegion(packed) {
    return Object.keys(packed).reduce(function (list, browser) {
        var data = packed[browser];
        list[_browsers.browsers[browser]] = Object.keys(data).reduce(function (memo, key) {
            var stats = data[key];
            if (key === '_') {
                stats.split(' ').forEach(function (version) {
                    return memo[version] = null;
                });
            } else {
                memo[key] = stats;
            }
            return memo;
        }, {});
        return list;
    }, {});
}

/***/ }),
/* 75 */
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 75;

/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getBrowserScope = exports.setBrowserScope = exports.getLatestStableBrowsers = exports.find = exports.isSupported = exports.getSupport = exports.features = undefined;

var _lodash = __webpack_require__(500);

var _lodash2 = _interopRequireDefault(_lodash);

var _browserslist = __webpack_require__(14);

var _browserslist2 = _interopRequireDefault(_browserslist);

var _caniuseLite = __webpack_require__(26);

var _utils = __webpack_require__(958);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var featuresList = Object.keys(_caniuseLite.features);

var browsers = void 0;
function setBrowserScope(browserList) {
  browsers = (0, _utils.cleanBrowsersList)(browserList);
}

function getBrowserScope() {
  return browsers;
}

var parse = (0, _lodash2.default)(_utils.parseCaniuseData, function (feat, browsers) {
  return feat.title + browsers;
});

function getSupport(query) {
  var feature = void 0;
  try {
    feature = (0, _caniuseLite.feature)(_caniuseLite.features[query]);
  } catch (e) {
    var res = find(query);
    if (res.length === 1) return getSupport(res[0]);
    throw new ReferenceError("Please provide a proper feature name. Cannot find " + query);
  }
  return parse(feature, browsers);
}

function isSupported(feature, browsers) {
  var data = void 0;
  try {
    data = (0, _caniuseLite.feature)(_caniuseLite.features[feature]);
  } catch (e) {
    var res = find(feature);
    if (res.length === 1) {
      data = _caniuseLite.features[res[0]];
    } else {
      throw new ReferenceError("Please provide a proper feature name. Cannot find " + feature);
    }
  }

  return (0, _browserslist2.default)(browsers, { ignoreUnknownVersions: true }).map(function (browser) {
    return browser.split(" ");
  }).every(function (browser) {
    return data.stats[browser[0]] && data.stats[browser[0]][browser[1]] === "y";
  });
}

function find(query) {
  if (typeof query !== "string") {
    throw new TypeError("The `query` parameter should be a string.");
  }

  if (~featuresList.indexOf(query)) {
    // exact match
    return query;
  }

  return featuresList.filter(function (file) {
    return (0, _utils.contains)(file, query);
  });
}

function getLatestStableBrowsers() {
  return (0, _browserslist2.default)("last 1 version");
}

setBrowserScope();

exports.features = featuresList;
exports.getSupport = getSupport;
exports.isSupported = isSupported;
exports.find = find;
exports.getLatestStableBrowsers = getLatestStableBrowsers;
exports.setBrowserScope = setBrowserScope;
exports.getBrowserScope = getBrowserScope;

/***/ }),
/* 77 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"36":"AB","257":"J M H I","548":"2 C d"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","16":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q ZB YB","130":"r"},D:{"36":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"16":"RB JB","36":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"16":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"16":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"16":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"16":"KB"},M:{"16":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"16":"F 3B 4B 5B 6B 7B"},Q:{"16":"8B"},R:{"16":"9B"},S:{"130":"AC"}},B:1,C:"CSS3 Background-clip: text"};


/***/ }),
/* 78 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB","36":"YB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","516":"2 F N K D G E A B C d"},E:{"1":"5 D G E A B C VB WB XB p aB","772":"F N K RB JB TB UB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB","36":"cB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","4":"JB hB HB kB","516":"jB"},H:{"132":"vB"},I:{"1":"4 0B 1B","36":"wB","516":"FB F zB HB","548":"xB yB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS3 Background-image options"};


/***/ }),
/* 79 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"d J M H I AB","129":"2 C"},C:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB","2":"fB FB","260":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s","804":"2 F N K D G E A B C d ZB YB"},D:{"1":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","260":"u v w x y","388":"6 Z a b c e f g h i j k l m n o L q r s t","1412":"J M H I O P Q R S T U V W X Y","1956":"2 F N K D G E A B C d"},E:{"129":"5 A B C WB XB p aB","1412":"K D G E UB VB","1956":"F N RB JB TB"},F:{"1":"0 1 m n o L q r s t u v w x y z","2":"E bB cB","260":"h i j k l","388":"6 J M H I O P Q R S T U V W X Y Z a b c e f g","1796":"dB eB","1828":"5 B C p EB gB"},G:{"129":"oB pB qB rB sB tB uB","1412":"G kB LB mB nB","1956":"JB hB HB jB"},H:{"1828":"vB"},I:{"388":"4 0B 1B","1956":"FB F wB xB yB zB HB"},J:{"1412":"A","1924":"D"},K:{"2":"A","388":"L","1828":"5 B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"388":"2B"},P:{"1":"5B 6B 7B","260":"3B 4B","388":"F"},Q:{"260":"8B"},R:{"260":"9B"},S:{"260":"AC"}},B:4,C:"CSS3 Border images"};


/***/ }),
/* 80 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB","257":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s","289":"FB ZB YB","292":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"F"},E:{"1":"5 N D G E A B C VB WB XB p aB","33":"F RB JB","129":"K TB UB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","33":"JB"},H:{"2":"vB"},I:{"1":"4 FB F xB yB zB HB 0B 1B","33":"wB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"257":"AC"}},B:4,C:"CSS3 Border-radius (rounded corners)"};


/***/ }),
/* 81 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","260":"E","516":"A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","33":"2 F N K D G E A B C d J"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I","33":"O P Q R S T U"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N RB JB TB","33":"K"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB","33":"kB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB","132":"0B 1B"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"calc() as CSS unit value"};


/***/ }),
/* 82 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F ZB YB","33":"2 N K D G E A B C d J"},D:{"1":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l"},E:{"1":"5 E A B C WB XB p aB","2":"RB JB","33":"K D G TB UB VB","292":"F N"},F:{"1":"0 1 5 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB","33":"C J M H I O P Q R S T U V W X Y"},G:{"1":"nB oB pB qB rB sB tB uB","33":"G kB LB mB","164":"JB hB HB jB"},H:{"2":"vB"},I:{"1":"4","33":"F zB HB 0B 1B","164":"FB wB xB yB"},J:{"33":"D A"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"CSS Animation"};


/***/ }),
/* 83 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","33":"AB"},C:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB","16":"2 fB FB F N K D G E A B C d J M H I O P ZB YB","33":"6 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s"},D:{"16":"2 F N K D G E A B C d J M H I O P Q R S","33":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"16":"F N K RB JB TB","33":"5 D G E A B C UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","33":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"16":"JB hB HB jB","33":"G kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"16":"FB F wB xB yB zB HB 0B 1B","33":"4"},J:{"16":"D A"},K:{"2":"5 A B C p EB","33":"L"},L:{"33":"KB"},M:{"33":"3"},N:{"2":"A B"},O:{"16":"2B"},P:{"16":"F","33":"3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"33":"9B"},S:{"33":"AC"}},B:5,C:"CSS :any-link selector"};


/***/ }),
/* 84 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"164":"AB","388":"2 C d J M H I"},C:{"164":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","676":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB"},D:{"164":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"164":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","164":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"164":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"164":"4 FB F wB xB yB zB HB 0B 1B"},J:{"164":"D A"},K:{"2":"5 A B C p EB","164":"L"},L:{"164":"KB"},M:{"164":"3"},N:{"2":"A","388":"B"},O:{"164":"2B"},P:{"164":"F 3B 4B 5B 6B 7B"},Q:{"164":"8B"},R:{"164":"9B"},S:{"164":"AC"}},B:5,C:"CSS Appearance"};


/***/ }),
/* 85 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M","194":"AB","257":"H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L","194":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G RB JB TB UB VB","33":"5 E A B C WB XB p aB"},F:{"2":"5 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB","194":"0 1 6 e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB","33":"nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","194":"L"},L:{"194":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F","194":"3B 4B 5B 6B 7B"},Q:{"194":"8B"},R:{"194":"9B"},S:{"2":"AC"}},B:7,C:"CSS Backdrop Filter"};


/***/ }),
/* 86 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","164":"AB"},C:{"1":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a ZB YB"},D:{"2":"2 F N K D G E A B C d J M H I O P Q","164":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K RB JB TB","164":"5 D G E A B C UB VB WB XB p aB"},F:{"2":"E bB cB dB eB","129":"5 B C p EB gB","164":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"JB hB HB jB kB","164":"G LB mB nB oB pB qB rB sB tB uB"},H:{"132":"vB"},I:{"2":"FB F wB xB yB zB HB","164":"4 0B 1B"},J:{"2":"D","164":"A"},K:{"2":"A","129":"5 B C p EB","164":"L"},L:{"164":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"164":"F 3B 4B 5B 6B 7B"},Q:{"164":"8B"},R:{"164":"9B"},S:{"1":"AC"}},B:5,C:"CSS box-decoration-break"};


/***/ }),
/* 87 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB","33":"ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"F N K D G E"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","33":"N","164":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","33":"hB HB","164":"JB"},H:{"2":"vB"},I:{"1":"4 F zB HB 0B 1B","164":"FB wB xB yB"},J:{"1":"A","33":"D"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS3 Box-shadow"};


/***/ }),
/* 88 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H","260":"AB","3138":"I"},C:{"1":"0 1 3 4 7 8 9 x y z IB BB CB DB GB","2":"fB FB","132":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L ZB YB","644":"q r s t u v w"},D:{"2":"2 F N K D G E A B C d J M H I O P Q R S","260":"0 1 3 4 7 8 9 y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","292":"6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x"},E:{"2":"F N K RB JB TB UB","292":"5 D G E A B C VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","260":"0 1 l m n o L q r s t u v w x y z","292":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k"},G:{"2":"JB hB HB jB kB","292":"G LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","260":"4","292":"0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","292":"L"},L:{"260":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"292":"2B"},P:{"292":"F 3B 4B 5B 6B 7B"},Q:{"292":"8B"},R:{"260":"9B"},S:{"644":"AC"}},B:4,C:"CSS clip-path property (for HTML)"};


/***/ }),
/* 89 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","33":"AB"},C:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q ZB YB"},D:{"16":"2 F N K D G E A B C d J M H I","33":"0 1 3 4 6 7 8 9 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N RB JB TB","33":"5 K D G E A B C UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","33":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"16":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"16":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"2":"5 A B C L p EB"},L:{"16":"KB"},M:{"1":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"16":"F 3B 4B 5B 6B 7B"},Q:{"16":"8B"},R:{"16":"9B"},S:{"1":"AC"}},B:7,C:"CSS color-adjust"};


/***/ }),
/* 90 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K iB","2340":"D G E A B"},B:{"2":"2 C d J M H I","1025":"AB"},C:{"2":"fB FB ZB","513":"3 4 DB GB","545":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB YB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j","1025":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C XB p aB","2":"F N RB JB TB","164":"K","4644":"D G E UB VB WB"},F:{"2":"E B J M H I O P Q R S T U V W bB cB dB eB p EB","545":"5 C gB","1025":"0 1 6 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"pB qB rB sB tB uB","2":"JB hB HB","4260":"jB kB","4644":"G LB mB nB oB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","1025":"4"},J:{"2":"D","4260":"A"},K:{"2":"A B p EB","545":"5 C","1025":"L"},L:{"1025":"KB"},M:{"545":"3"},N:{"2340":"A B"},O:{"1":"2B"},P:{"1025":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1025":"9B"},S:{"4097":"AC"}},B:7,C:"Crisp edges/pixelated images"};


/***/ }),
/* 91 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","33":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"2 F N K D G E A B C d J M","33":"0 1 3 4 6 7 8 9 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C XB p aB","2":"F N RB JB","33":"K D G E TB UB VB WB"},F:{"2":"5 E B C bB cB dB eB p EB gB","33":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"pB qB rB sB tB uB","2":"JB hB HB","33":"G jB kB LB mB nB oB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","33":"4 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","33":"L"},L:{"33":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"33":"2B"},P:{"33":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"33":"9B"},S:{"2":"AC"}},B:7,C:"CSS Cross-Fade Function"};


/***/ }),
/* 92 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","164":"A B"},B:{"66":"AB","164":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X","66":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i bB cB dB eB p EB gB","66":"0 1 j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"292":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"A L","292":"5 B C p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"164":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"66":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS Device Adaptation"};


/***/ }),
/* 93 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"33":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","164":"fB FB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"33":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"33":"AC"}},B:5,C:"CSS element() function"};


/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS Feature Queries"};


/***/ }),
/* 95 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C WB XB p aB","2":"F N K D G RB JB TB UB VB","33":"E"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB","33":"nB oB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS filter() function"};


/***/ }),
/* 96 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","1028":"2 d J M H I","1346":"C"},C:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB","196":"6","516":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c YB"},D:{"1":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H","33":"6 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v"},E:{"1":"5 A B C WB XB p aB","2":"F N RB JB TB","33":"K D G E UB VB"},F:{"1":"0 1 j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","33":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i"},G:{"1":"oB pB qB rB sB tB uB","2":"JB hB HB jB","33":"G kB LB mB nB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB","33":"0B 1B"},J:{"2":"D","33":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"5B 6B 7B","33":"F 3B 4B"},Q:{"33":"8B"},R:{"33":"9B"},S:{"1":"AC"}},B:5,C:"CSS Filter Effects"};


/***/ }),
/* 97 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB","260":"6 M H I O P Q R S T U V W X Y Z a b c e","292":"2 F N K D G E A B C d J YB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"2 A B C d J M H I O P Q R S T U","548":"F N K D G E"},E:{"2":"RB JB","260":"5 D G E A B C UB VB WB XB p aB","292":"K TB","804":"F N"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB","33":"C gB","164":"p EB"},G:{"260":"G LB mB nB oB pB qB rB sB tB uB","292":"jB kB","804":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 0B 1B","33":"F zB HB","548":"FB wB xB yB"},J:{"1":"A","548":"D"},K:{"1":"5 L","2":"A B","33":"C","164":"p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS Gradients"};


/***/ }),
/* 98 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","8":"E","292":"A B"},B:{"1":"M H I AB","292":"2 C d J"},C:{"1":"0 1 3 4 7 8 9 x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I ZB YB","8":"6 O P Q R S T U V W X Y Z a b c e f g h i","584":"j k l m n o L q r s t u","1025":"v w"},D:{"1":"1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T","8":"U V W X","200":"6 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","1025":"0"},E:{"1":"5 B C XB p aB","2":"F N RB JB TB","8":"K D G E A UB VB WB"},F:{"1":"0 1 n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W bB cB dB eB p EB gB","200":"6 X Y Z a b c e f g h i j k l m"},G:{"1":"qB rB sB tB uB","2":"JB hB HB jB","8":"G kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB","8":"HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"292":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"3B","8":"F"},Q:{"200":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:4,C:"CSS Grid Layout (level 1)"};


/***/ }),
/* 99 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","33":"A B"},B:{"33":"2 C d J M H I","132":"AB"},C:{"1":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N ZB YB","33":"2 6 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x","132":"0 1 3 4 7 8 9 y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N RB JB","33":"5 K D G E A B C TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k bB cB dB eB p EB gB","132":"0 1 l m n o L q r s t u v w x y z"},G:{"2":"JB hB","33":"G HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","132":"4"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"132":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"4":"2B"},P:{"1":"4B 5B 6B 7B","2":"F","132":"3B"},Q:{"2":"8B"},R:{"132":"9B"},S:{"1":"AC"}},B:5,C:"CSS Hyphenation"};


/***/ }),
/* 100 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","33":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"2 F N K D G E A B C d J M H I O P","33":"0 1 3 4 6 7 8 9 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N RB JB TB","33":"K D G E UB VB WB","129":"5 A B C XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","33":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"JB hB HB jB","33":"G kB LB mB nB oB","129":"pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","33":"4 0B 1B"},J:{"2":"D","33":"A"},K:{"2":"5 A B C p EB","33":"L"},L:{"33":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"33":"2B"},P:{"33":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"33":"9B"},S:{"2":"AC"}},B:5,C:"CSS image-set"};


/***/ }),
/* 101 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB","164":"2 6 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j ZB YB"},D:{"1":"SB OB MB lB NB KB AB PB QB","292":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},E:{"1":"5 aB","292":"F N K D G E A B C RB JB TB UB VB WB XB p"},F:{"2":"5 E B C bB cB dB eB p EB gB","292":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"uB","292":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB"},H:{"2":"vB"},I:{"1":"4","292":"FB F wB xB yB zB HB 0B 1B"},J:{"292":"D A"},K:{"2":"5 A B C p EB","292":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"292":"2B"},P:{"292":"F 3B 4B 5B 6B 7B"},Q:{"292":"8B"},R:{"292":"9B"},S:{"1":"AC"}},B:5,C:"CSS Logical Properties"};


/***/ }),
/* 102 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M","164":"AB","3138":"H","12292":"I"},C:{"1":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB","2":"fB FB","260":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v ZB YB"},D:{"164":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"RB JB","164":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","164":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"164":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"164":"4 0B 1B","676":"FB F wB xB yB zB HB"},J:{"164":"D A"},K:{"2":"5 A B C p EB","164":"L"},L:{"164":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"164":"2B"},P:{"164":"F 3B 4B 5B 6B 7B"},Q:{"164":"8B"},R:{"164":"9B"},S:{"260":"AC"}},B:4,C:"CSS Masks"};


/***/ }),
/* 103 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","132":"E A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB","260":"2 F N K D G E A B C d J ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","548":"2 F N K D G E A B C d J M H I O P Q R S T U V W X"},E:{"2":"RB JB","548":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E","548":"B C bB cB dB eB p EB gB"},G:{"16":"JB","548":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"132":"vB"},I:{"1":"4 0B 1B","16":"wB xB","548":"FB F yB zB HB"},J:{"548":"D A"},K:{"1":"5 L","548":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"Media Queries: resolution feature"};


/***/ }),
/* 104 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","132":"A B"},B:{"1":"AB","132":"2 C d J M H","516":"I"},C:{"1":"3 4 7 8 9 IB BB CB DB GB","2":"0 1 2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"3 4 DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB","260":"BB CB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s bB cB dB eB p EB gB","260":"t u"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"132":"A B"},O:{"2":"2B"},P:{"1":"6B 7B","2":"F 3B 4B 5B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"CSS overscroll-behavior"};


/***/ }),
/* 105 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","36":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I ZB YB","33":"6 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t"},D:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","36":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"1":"5 B C XB p aB","2":"F RB JB","36":"N K D G E A TB UB VB WB"},F:{"1":"0 1 n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","36":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m"},G:{"1":"qB rB sB tB uB","2":"JB hB","36":"G HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","36":"FB F wB xB yB zB HB 0B 1B"},J:{"36":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"36":"A B"},O:{"1":"2B"},P:{"1":"5B 6B 7B","36":"F 3B 4B"},Q:{"36":"8B"},R:{"1":"9B"},S:{"33":"AC"}},B:5,C:"::placeholder CSS pseudo-element"};


/***/ }),
/* 106 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","2":"C"},C:{"16":"fB","33":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d","132":"6 J M H I O P Q R S T U V W X Y Z a b c e"},E:{"1":"5 E A B C WB XB p aB","16":"RB JB","132":"F N K D G TB UB VB"},F:{"1":"0 1 6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E B bB cB dB eB p","132":"5 C J M H I O P Q R EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","16":"JB hB","132":"G HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","16":"wB xB","132":"FB F yB zB HB 0B 1B"},J:{"1":"A","132":"D"},K:{"1":"L","2":"A B p","132":"5 C EB"},L:{"1":"KB"},M:{"33":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"33":"AC"}},B:1,C:"CSS :read-only and :read-write selectors"};


/***/ }),
/* 107 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","420":"A B"},B:{"2":"AB","420":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 7 8 9 F N K D G E A B C d e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","36":"J M H I","66":"6 O P Q R S T U V W X Y Z a b c"},E:{"2":"5 F N K C RB JB TB p aB","33":"D G E A B UB VB WB XB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"JB hB HB jB kB sB tB uB","33":"G LB mB nB oB pB qB rB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"420":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS Regions"};


/***/ }),
/* 108 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"3 4 IB BB CB DB GB","33":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"5 C L EB","16":"A B p"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"33":"AC"}},B:5,C:"::selection CSS pseudo-element"};


/***/ }),
/* 109 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"3 4 IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t ZB YB","322":"0 1 7 8 9 u v w x y z"},D:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c","194":"6 e f"},E:{"1":"5 B C XB p aB","2":"F N K D RB JB TB UB","33":"G E A VB WB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"JB hB HB jB kB LB","33":"G mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:4,C:"CSS Shapes Level 1"};


/***/ }),
/* 110 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","6308":"A","6436":"B"},B:{"1":"AB","6436":"2 C d J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h ZB YB","2052":"0 1 3 4 7 8 9 i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB","8258":"3 4 GB"},E:{"1":"5 B C p aB","2":"F N K D G RB JB TB UB VB","3108":"E A WB XB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w bB cB dB eB p EB gB","8258":"0 1 x y z"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB","3108":"nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2052":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2052":"AC"}},B:4,C:"CSS Scroll snap"};


/***/ }),
/* 111 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J","1028":"AB","4100":"M H I"},C:{"1":"3 4 7 8 9 IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U ZB YB","194":"V W X Y Z a","516":"0 1 6 b c e f g h i j k l m n o L q r s t u v w x y z"},D:{"2":"2 F N K D G E A B C d J M H I O P Q R g h i j k l m n o L q r s t u","322":"6 S T U V W X Y Z a b c e f v w x y","1028":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K RB JB TB","33":"5 G E A B C VB WB XB p aB","2084":"D UB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h bB cB dB eB p EB gB","322":"i j k","1028":"0 1 l m n o L q r s t u v w x y z"},G:{"2":"JB hB HB jB","33":"G mB nB oB pB qB rB sB tB uB","2084":"kB LB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","1028":"4"},J:{"2":"D A"},K:{"2":"5 A B C p EB","1028":"L"},L:{"1028":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1028":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"322":"8B"},R:{"2":"9B"},S:{"516":"AC"}},B:5,C:"CSS position:sticky"};


/***/ }),
/* 112 */
/***/ (function(module, exports) {

module.exports={A:{A:{"132":"K D G E A B iB"},B:{"1":"AB","4":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G E A B ZB YB","33":"2 6 C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r"},D:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c","322":"e f g h i j k l m n o L"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q bB cB dB eB p EB gB","578":"R S T U V W X Y Z a b c"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"33":"AC"}},B:5,C:"CSS3 text-align-last"};


/***/ }),
/* 113 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g ZB YB","194":"h i j"},D:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q"},E:{"2":"F N K D G E RB JB TB UB VB WB","16":"A","33":"5 B C XB p aB"},F:{"1":"0 1 e f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS text-orientation"};


/***/ }),
/* 114 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D iB","161":"G E A B"},B:{"2":"AB","161":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"16":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS Text 4 text-spacing"};


/***/ }),
/* 115 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","33":"2 N K D G E A B C d J","164":"F"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"2 F N K D G E A B C d J M H I O P Q R S T U"},E:{"1":"5 D G E A B C UB VB WB XB p aB","33":"K TB","164":"F N RB JB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E bB cB","33":"C","164":"B dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","33":"kB","164":"JB hB HB jB"},H:{"2":"vB"},I:{"1":"4 0B 1B","33":"FB F wB xB yB zB HB"},J:{"1":"A","33":"D"},K:{"1":"5 L","33":"C","164":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"CSS3 Transitions"};


/***/ }),
/* 116 */
/***/ (function(module, exports) {

module.exports={A:{A:{"132":"K D G E A B iB"},B:{"1":"AB","132":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB","33":"6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s","132":"fB FB F N K D G E ZB YB","292":"2 A B C d J M"},D:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"2 F N K D G E A B C d J M","548":"6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q"},E:{"132":"F N K D G RB JB TB UB VB","548":"5 E A B C WB XB p aB"},F:{"132":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"132":"G JB hB HB jB kB LB mB","548":"nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"1":"4","16":"FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"16":"2B"},P:{"1":"3B 4B 5B 6B 7B","16":"F"},Q:{"16":"8B"},R:{"16":"9B"},S:{"33":"AC"}},B:4,C:"CSS unicode-bidi property"};


/***/ }),
/* 117 */
/***/ (function(module, exports) {

module.exports={A:{A:{"132":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB","322":"f g h i j"},D:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K","16":"D","33":"2 6 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q"},E:{"1":"5 B C p aB","2":"F RB JB","16":"N","33":"K D G E A TB UB VB WB XB"},F:{"1":"0 1 e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","33":"6 J M H I O P Q R S T U V W X Y Z a b c"},G:{"1":"rB sB tB uB","16":"JB hB HB","33":"G jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"wB xB yB","33":"FB F zB HB 0B 1B"},J:{"33":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"36":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","33":"F"},Q:{"33":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS writing-mode property"};


/***/ }),
/* 118 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","8":"K D iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","33":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"F N K D G E"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","33":"F N RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","33":"JB hB HB"},H:{"1":"vB"},I:{"1":"4 F zB HB 0B 1B","33":"FB wB xB yB"},J:{"1":"A","33":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"CSS3 Box-sizing"};


/***/ }),
/* 119 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","2":"2 C d"},C:{"1":"0 1 3 4 6 7 8 9 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","33":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V ZB YB"},D:{"1":"GB SB OB MB lB NB KB AB PB QB","33":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB"},E:{"1":"5 B C p aB","33":"F N K D G E A RB JB TB UB VB WB XB"},F:{"1":"0 1 5 C y z gB","2":"E B bB cB dB eB p EB","33":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"33":"D A"},K:{"2":"5 A B C p EB","33":"L"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:3,C:"CSS grab & grabbing cursors"};


/***/ }),
/* 120 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","33":"2 fB FB F N K D G E A B C d J M H I O P Q R S ZB YB"},D:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f"},E:{"1":"5 E A B C WB XB p aB","33":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 5 6 C T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E B bB cB dB eB p EB","33":"J M H I O P Q R S"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"33":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"CSS3 Cursors: zoom-in & zoom-out"};


/***/ }),
/* 121 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"fB FB ZB YB","33":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB","164":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v"},D:{"1":"0 1 3 4 7 8 9 l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P","132":"6 Q R S T U V W X Y Z a b c e f g h i j k"},E:{"2":"F N K RB JB TB","132":"5 D G E A B C UB VB WB XB p aB"},F:{"1":"0 1 6 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E bB cB dB","132":"J M H I O P Q R S T U V W X","164":"5 B C eB p EB gB"},G:{"2":"JB hB HB jB kB","132":"G LB mB nB oB pB qB rB sB tB uB"},H:{"164":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB","132":"0B 1B"},J:{"132":"D A"},K:{"1":"L","2":"A","164":"5 B C p EB"},L:{"1":"KB"},M:{"33":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"164":"AC"}},B:5,C:"CSS3 tab-size"};


/***/ }),
/* 122 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","1028":"B","1316":"A"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","164":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB","516":"R S T U V W"},D:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"Q R S T U V W X","164":"2 F N K D G E A B C d J M H I O P"},E:{"1":"5 E A B C WB XB p aB","33":"D G UB VB","164":"F N K RB JB TB"},F:{"1":"0 1 5 6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB","33":"J M"},G:{"1":"nB oB pB qB rB sB tB uB","33":"G LB mB","164":"JB hB HB jB kB"},H:{"1":"vB"},I:{"1":"4 0B 1B","164":"FB F wB xB yB zB HB"},J:{"1":"A","164":"D"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","292":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS Flexible Box Layout Module"};


/***/ }),
/* 123 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","33":"J M H I O P Q R S T U V W X Y Z a b c","164":"2 F N K D G E A B C d"},D:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J","33":"6 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q","292":"M H I O P"},E:{"1":"5 A B C WB XB p aB","2":"D G E RB JB UB VB","4":"F N K TB"},F:{"1":"0 1 e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","33":"6 J M H I O P Q R S T U V W X Y Z a b c"},G:{"1":"oB pB qB rB sB tB uB","2":"G LB mB nB","4":"JB hB HB jB kB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB","33":"0B 1B"},J:{"2":"D","33":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"33":"2B"},P:{"1":"3B 4B 5B 6B 7B","33":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS font-feature-settings"};


/***/ }),
/* 124 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S ZB YB","194":"T U V W X Y Z a b c"},D:{"1":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X","33":"Y Z a b"},E:{"1":"5 A B C WB XB p aB","2":"F N K RB JB TB UB","33":"D G E VB"},F:{"1":"0 1 6 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J bB cB dB eB p EB gB","33":"M H I O"},G:{"2":"JB hB HB jB kB LB","33":"G mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 1B","2":"FB F wB xB yB zB HB","33":"0B"},J:{"2":"D","33":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS3 font-kerning"};


/***/ }),
/* 125 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","548":"B"},B:{"1":"AB","516":"2 C d J M H I"},C:{"1":"3 4 CB DB GB","2":"fB FB F N K D G E ZB YB","676":"2 6 A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L","1700":"0 1 7 8 9 q r s t u v w x y z IB BB"},D:{"1":"MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d","676":"J M H I O","804":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB"},E:{"2":"F N RB JB","676":"TB","804":"5 K D G E A B C UB VB WB XB p aB"},F:{"1":"5","2":"E B C bB cB dB eB p EB gB","804":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB","2052":"tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","292":"A"},K:{"2":"5 A B C p EB","804":"L"},L:{"804":"KB"},M:{"1":"3"},N:{"2":"A","548":"B"},O:{"804":"2B"},P:{"804":"F 3B 4B 5B 6B 7B"},Q:{"804":"8B"},R:{"804":"9B"},S:{"1":"AC"}},B:1,C:"Full Screen API"};


/***/ }),
/* 126 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","1537":"AB"},C:{"2":"fB","932":"0 1 2 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB","2308":"3 4 GB"},D:{"2":"2 F N K D G E A B C d J M H I O P Q","545":"6 R S T U V W X Y Z a b c e f g h i j k l m n o","1537":"0 1 3 4 7 8 9 L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K RB JB TB","516":"5 B C p aB","548":"E A WB XB","676":"D G UB VB"},F:{"2":"5 E B C bB cB dB eB p EB gB","513":"6","545":"J M H I O P Q R S T U V W X Y Z a b","1537":"0 1 c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"JB hB HB jB kB","548":"nB oB pB qB rB sB tB uB","676":"G LB mB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","545":"0B 1B","1537":"4"},J:{"2":"D","545":"A"},K:{"2":"5 A B C p EB","1537":"L"},L:{"1537":"KB"},M:{"2340":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"545":"F","1537":"3B 4B 5B 6B 7B"},Q:{"545":"8B"},R:{"1537":"9B"},S:{"932":"AC"}},B:5,C:"Intrinsic & Extrinsic Sizing"};


/***/ }),
/* 127 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I","516":"AB"},C:{"132":"0 1 7 8 9 v w x y z IB BB CB","164":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB","516":"3 4 DB GB"},D:{"420":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s","516":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C XB p aB","132":"E WB","164":"D G VB","420":"F N K RB JB TB UB"},F:{"1":"5 C p EB gB","2":"E B bB cB dB eB","420":"6 J M H I O P Q R S T U V W X Y Z a b c e f","516":"0 1 g h i j k l m n o L q r s t u v w x y z"},G:{"1":"pB qB rB sB tB uB","132":"nB oB","164":"G LB mB","420":"JB hB HB jB kB"},H:{"1":"vB"},I:{"420":"FB F wB xB yB zB HB 0B 1B","516":"4"},J:{"420":"D A"},K:{"1":"5 C p EB","2":"A B","132":"L"},L:{"516":"KB"},M:{"132":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","420":"F"},Q:{"132":"8B"},R:{"132":"9B"},S:{"164":"AC"}},B:4,C:"CSS3 Multiple column layout"};


/***/ }),
/* 128 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J","260":"M H I"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z"},E:{"1":"5 A B C XB p aB","2":"F N K D RB JB TB UB","132":"G E VB WB"},F:{"1":"0 1 6 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E J M H I bB cB dB","33":"5 B C eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"JB hB HB jB kB LB","132":"G mB nB oB"},H:{"33":"vB"},I:{"1":"4 1B","2":"FB F wB xB yB zB HB 0B"},J:{"2":"D A"},K:{"1":"L","2":"A","33":"5 B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS3 object-fit/object-position"};


/***/ }),
/* 129 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E iB","164":"A"},B:{"1":"2 C d J M H I AB"},C:{"1":"3 4 7 8 9 IB BB CB DB GB","2":"fB FB F N ZB YB","8":"2 6 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j","328":"0 1 k l m n o L q r s t u v w x y z"},D:{"1":"0 1 3 4 7 8 9 y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q","8":"6 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u","584":"v w x"},E:{"1":"aB","2":"F N K RB JB TB","8":"D G E A B C UB VB WB XB p","1096":"5"},F:{"1":"0 1 l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","8":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h","584":"i j k"},G:{"8":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","8":"FB F wB xB yB zB HB 0B 1B"},J:{"8":"D A"},K:{"1":"L","2":"A","8":"5 B C p EB"},L:{"1":"KB"},M:{"328":"3"},N:{"1":"B","36":"A"},O:{"8":"2B"},P:{"1":"4B 5B 6B 7B","2":"3B","8":"F"},Q:{"584":"8B"},R:{"2":"9B"},S:{"328":"AC"}},B:2,C:"Pointer events"};


/***/ }),
/* 130 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","2052":"AB"},C:{"2":"fB FB F N ZB YB","1028":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","1060":"2 6 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e"},D:{"2":"2 F N K D G E A B C d J M H I O P Q R S T U","226":"6 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2052":"0 1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D RB JB TB UB","772":"5 aB","804":"G E A B C WB XB p","1316":"VB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB","226":"e f g h i j k l m","2052":"0 1 n o L q r s t u v w x y z"},G:{"2":"JB hB HB jB kB LB","292":"G mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","2052":"L"},L:{"2052":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2052":"2B"},P:{"2":"F 3B 4B","2052":"5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1028":"AC"}},B:4,C:"text-decoration styling"};


/***/ }),
/* 131 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","164":"AB"},C:{"1":"0 1 3 4 7 8 9 L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n ZB YB","322":"o"},D:{"2":"2 F N K D G E A B C d J M H I O P Q R S T","164":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 G E A B C VB WB XB p aB","2":"F N K RB JB TB","164":"D UB"},F:{"2":"5 E B C bB cB dB eB p EB gB","164":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","164":"4 0B 1B"},J:{"2":"D","164":"A"},K:{"2":"5 A B C p EB","164":"L"},L:{"164":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"164":"2B"},P:{"164":"F 3B 4B 5B 6B 7B"},Q:{"164":"8B"},R:{"164":"9B"},S:{"1":"AC"}},B:4,C:"text-emphasis styling"};


/***/ }),
/* 132 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","2":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","8":"fB FB F N K ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","33":"E bB cB dB eB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 L","33":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS3 Text-overflow"};


/***/ }),
/* 133 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","33":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U W X Y Z a b c e f g h i j k l m n o L q r s t u v w","258":"V"},E:{"2":"5 F N K D G E A B C RB JB UB VB WB XB p aB","258":"TB"},F:{"1":"0 1 m o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l n bB cB dB eB p EB gB"},G:{"2":"JB hB HB","33":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"33":"3"},N:{"161":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"CSS text-size-adjust"};


/***/ }),
/* 134 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G","129":"A B","161":"E"},B:{"1":"H I AB","129":"2 C d J M"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB","33":"2 F N K D G E A B C d J ZB YB"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e"},E:{"1":"5 E A B C WB XB p aB","33":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 5 6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E bB cB","33":"B C J M H I O P Q R dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","33":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","33":"FB F wB xB yB zB HB 0B 1B"},J:{"33":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"CSS3 2D Transforms"};


/***/ }),
/* 135 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","132":"A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G E ZB YB","33":"2 A B C d J"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E A B","33":"2 6 C d J M H I O P Q R S T U V W X Y Z a b c e"},E:{"2":"RB JB","33":"F N K D G TB UB VB","257":"5 E A B C WB XB p aB"},F:{"1":"0 1 6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","33":"J M H I O P Q R"},G:{"33":"G JB hB HB jB kB LB mB","257":"nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"wB xB yB","33":"FB F zB HB 0B 1B"},J:{"33":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"CSS3 3D Transforms"};


/***/ }),
/* 136 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","33":"A B"},B:{"1":"AB","33":"2 C d J M H I"},C:{"33":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w"},E:{"33":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","33":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j"},G:{"33":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","33":"FB F wB xB yB zB HB 0B 1B"},J:{"33":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"33":"3"},N:{"33":"A B"},O:{"2":"2B"},P:{"33":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"2":"9B"},S:{"33":"AC"}},B:5,C:"CSS user-select: none"};


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const lengthArray = [
  'PX',
  'IN',
  'CM',
  'MM',
  'EM',
  'REM',
  'POINTS',
  'PC',
  'EX',
  'CH',
  'VW',
  'VH',
  'VMIN',
  'VMAX',
  '%',
];

function isCSSLengthUnit(unit) {
  return lengthArray.indexOf(unit.toUpperCase()) >= 0;
}

module.exports = isCSSLengthUnit;


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

/* MIT license */
var cssKeywords = __webpack_require__(138);

// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)

var reverseKeywords = {};
for (var key in cssKeywords) {
	if (cssKeywords.hasOwnProperty(key)) {
		reverseKeywords[cssKeywords[key]] = key;
	}
}

var convert = module.exports = {
	rgb: {channels: 3, labels: 'rgb'},
	hsl: {channels: 3, labels: 'hsl'},
	hsv: {channels: 3, labels: 'hsv'},
	hwb: {channels: 3, labels: 'hwb'},
	cmyk: {channels: 4, labels: 'cmyk'},
	xyz: {channels: 3, labels: 'xyz'},
	lab: {channels: 3, labels: 'lab'},
	lch: {channels: 3, labels: 'lch'},
	hex: {channels: 1, labels: ['hex']},
	keyword: {channels: 1, labels: ['keyword']},
	ansi16: {channels: 1, labels: ['ansi16']},
	ansi256: {channels: 1, labels: ['ansi256']},
	hcg: {channels: 3, labels: ['h', 'c', 'g']},
	apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
	gray: {channels: 1, labels: ['gray']}
};

// hide .channels and .labels properties
for (var model in convert) {
	if (convert.hasOwnProperty(model)) {
		if (!('channels' in convert[model])) {
			throw new Error('missing channels property: ' + model);
		}

		if (!('labels' in convert[model])) {
			throw new Error('missing channel labels property: ' + model);
		}

		if (convert[model].labels.length !== convert[model].channels) {
			throw new Error('channel and label counts mismatch: ' + model);
		}

		var channels = convert[model].channels;
		var labels = convert[model].labels;
		delete convert[model].channels;
		delete convert[model].labels;
		Object.defineProperty(convert[model], 'channels', {value: channels});
		Object.defineProperty(convert[model], 'labels', {value: labels});
	}
}

convert.rgb.hsl = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var min = Math.min(r, g, b);
	var max = Math.max(r, g, b);
	var delta = max - min;
	var h;
	var s;
	var l;

	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}

	h = Math.min(h * 60, 360);

	if (h < 0) {
		h += 360;
	}

	l = (min + max) / 2;

	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}

	return [h, s * 100, l * 100];
};

convert.rgb.hsv = function (rgb) {
	var rdif;
	var gdif;
	var bdif;
	var h;
	var s;

	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var v = Math.max(r, g, b);
	var diff = v - Math.min(r, g, b);
	var diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};

	if (diff === 0) {
		h = s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);

		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}
		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}

	return [
		h * 360,
		s * 100,
		v * 100
	];
};

convert.rgb.hwb = function (rgb) {
	var r = rgb[0];
	var g = rgb[1];
	var b = rgb[2];
	var h = convert.rgb.hsl(rgb)[0];
	var w = 1 / 255 * Math.min(r, Math.min(g, b));

	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

	return [h, w * 100, b * 100];
};

convert.rgb.cmyk = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var c;
	var m;
	var y;
	var k;

	k = Math.min(1 - r, 1 - g, 1 - b);
	c = (1 - r - k) / (1 - k) || 0;
	m = (1 - g - k) / (1 - k) || 0;
	y = (1 - b - k) / (1 - k) || 0;

	return [c * 100, m * 100, y * 100, k * 100];
};

/**
 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
 * */
function comparativeDistance(x, y) {
	return (
		Math.pow(x[0] - y[0], 2) +
		Math.pow(x[1] - y[1], 2) +
		Math.pow(x[2] - y[2], 2)
	);
}

convert.rgb.keyword = function (rgb) {
	var reversed = reverseKeywords[rgb];
	if (reversed) {
		return reversed;
	}

	var currentClosestDistance = Infinity;
	var currentClosestKeyword;

	for (var keyword in cssKeywords) {
		if (cssKeywords.hasOwnProperty(keyword)) {
			var value = cssKeywords[keyword];

			// Compute comparative distance
			var distance = comparativeDistance(rgb, value);

			// Check if its less, if so set as closest
			if (distance < currentClosestDistance) {
				currentClosestDistance = distance;
				currentClosestKeyword = keyword;
			}
		}
	}

	return currentClosestKeyword;
};

convert.keyword.rgb = function (keyword) {
	return cssKeywords[keyword];
};

convert.rgb.xyz = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;

	// assume sRGB
	r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
	g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
	b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

	var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	return [x * 100, y * 100, z * 100];
};

convert.rgb.lab = function (rgb) {
	var xyz = convert.rgb.xyz(rgb);
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.hsl.rgb = function (hsl) {
	var h = hsl[0] / 360;
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var t1;
	var t2;
	var t3;
	var rgb;
	var val;

	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}

	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}

	t1 = 2 * l - t2;

	rgb = [0, 0, 0];
	for (var i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}
		if (t3 > 1) {
			t3--;
		}

		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}

		rgb[i] = val * 255;
	}

	return rgb;
};

convert.hsl.hsv = function (hsl) {
	var h = hsl[0];
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var smin = s;
	var lmin = Math.max(l, 0.01);
	var sv;
	var v;

	l *= 2;
	s *= (l <= 1) ? l : 2 - l;
	smin *= lmin <= 1 ? lmin : 2 - lmin;
	v = (l + s) / 2;
	sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);

	return [h, sv * 100, v * 100];
};

convert.hsv.rgb = function (hsv) {
	var h = hsv[0] / 60;
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var hi = Math.floor(h) % 6;

	var f = h - Math.floor(h);
	var p = 255 * v * (1 - s);
	var q = 255 * v * (1 - (s * f));
	var t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;

	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

convert.hsv.hsl = function (hsv) {
	var h = hsv[0];
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var vmin = Math.max(v, 0.01);
	var lmin;
	var sl;
	var l;

	l = (2 - s) * v;
	lmin = (2 - s) * vmin;
	sl = s * vmin;
	sl /= (lmin <= 1) ? lmin : 2 - lmin;
	sl = sl || 0;
	l /= 2;

	return [h, sl * 100, l * 100];
};

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function (hwb) {
	var h = hwb[0] / 360;
	var wh = hwb[1] / 100;
	var bl = hwb[2] / 100;
	var ratio = wh + bl;
	var i;
	var v;
	var f;
	var n;

	// wh + bl cant be > 1
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}

	i = Math.floor(6 * h);
	v = 1 - bl;
	f = 6 * h - i;

	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}

	n = wh + f * (v - wh); // linear interpolation

	var r;
	var g;
	var b;
	switch (i) {
		default:
		case 6:
		case 0: r = v; g = n; b = wh; break;
		case 1: r = n; g = v; b = wh; break;
		case 2: r = wh; g = v; b = n; break;
		case 3: r = wh; g = n; b = v; break;
		case 4: r = n; g = wh; b = v; break;
		case 5: r = v; g = wh; b = n; break;
	}

	return [r * 255, g * 255, b * 255];
};

convert.cmyk.rgb = function (cmyk) {
	var c = cmyk[0] / 100;
	var m = cmyk[1] / 100;
	var y = cmyk[2] / 100;
	var k = cmyk[3] / 100;
	var r;
	var g;
	var b;

	r = 1 - Math.min(1, c * (1 - k) + k);
	g = 1 - Math.min(1, m * (1 - k) + k);
	b = 1 - Math.min(1, y * (1 - k) + k);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.rgb = function (xyz) {
	var x = xyz[0] / 100;
	var y = xyz[1] / 100;
	var z = xyz[2] / 100;
	var r;
	var g;
	var b;

	r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	// assume sRGB
	r = r > 0.0031308
		? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
		: r * 12.92;

	g = g > 0.0031308
		? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
		: g * 12.92;

	b = b > 0.0031308
		? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
		: b * 12.92;

	r = Math.min(Math.max(0, r), 1);
	g = Math.min(Math.max(0, g), 1);
	b = Math.min(Math.max(0, b), 1);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.lab = function (xyz) {
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.lab.xyz = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var x;
	var y;
	var z;

	y = (l + 16) / 116;
	x = a / 500 + y;
	z = y - b / 200;

	var y2 = Math.pow(y, 3);
	var x2 = Math.pow(x, 3);
	var z2 = Math.pow(z, 3);
	y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
	x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
	z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

	x *= 95.047;
	y *= 100;
	z *= 108.883;

	return [x, y, z];
};

convert.lab.lch = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var hr;
	var h;
	var c;

	hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;

	if (h < 0) {
		h += 360;
	}

	c = Math.sqrt(a * a + b * b);

	return [l, c, h];
};

convert.lch.lab = function (lch) {
	var l = lch[0];
	var c = lch[1];
	var h = lch[2];
	var a;
	var b;
	var hr;

	hr = h / 360 * 2 * Math.PI;
	a = c * Math.cos(hr);
	b = c * Math.sin(hr);

	return [l, a, b];
};

convert.rgb.ansi16 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];
	var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization

	value = Math.round(value / 50);

	if (value === 0) {
		return 30;
	}

	var ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));

	if (value === 2) {
		ansi += 60;
	}

	return ansi;
};

convert.hsv.ansi16 = function (args) {
	// optimization here; we already know the value and don't need to get
	// it converted for us.
	return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};

convert.rgb.ansi256 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];

	// we use the extended greyscale palette here, with the exception of
	// black and white. normal palette only has 4 greyscale shades.
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}

		if (r > 248) {
			return 231;
		}

		return Math.round(((r - 8) / 247) * 24) + 232;
	}

	var ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);

	return ansi;
};

convert.ansi16.rgb = function (args) {
	var color = args % 10;

	// handle greyscale
	if (color === 0 || color === 7) {
		if (args > 50) {
			color += 3.5;
		}

		color = color / 10.5 * 255;

		return [color, color, color];
	}

	var mult = (~~(args > 50) + 1) * 0.5;
	var r = ((color & 1) * mult) * 255;
	var g = (((color >> 1) & 1) * mult) * 255;
	var b = (((color >> 2) & 1) * mult) * 255;

	return [r, g, b];
};

convert.ansi256.rgb = function (args) {
	// handle greyscale
	if (args >= 232) {
		var c = (args - 232) * 10 + 8;
		return [c, c, c];
	}

	args -= 16;

	var rem;
	var r = Math.floor(args / 36) / 5 * 255;
	var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
	var b = (rem % 6) / 5 * 255;

	return [r, g, b];
};

convert.rgb.hex = function (args) {
	var integer = ((Math.round(args[0]) & 0xFF) << 16)
		+ ((Math.round(args[1]) & 0xFF) << 8)
		+ (Math.round(args[2]) & 0xFF);

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.hex.rgb = function (args) {
	var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	var colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(function (char) {
			return char + char;
		}).join('');
	}

	var integer = parseInt(colorString, 16);
	var r = (integer >> 16) & 0xFF;
	var g = (integer >> 8) & 0xFF;
	var b = integer & 0xFF;

	return [r, g, b];
};

convert.rgb.hcg = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var max = Math.max(Math.max(r, g), b);
	var min = Math.min(Math.min(r, g), b);
	var chroma = (max - min);
	var grayscale;
	var hue;

	if (chroma < 1) {
		grayscale = min / (1 - chroma);
	} else {
		grayscale = 0;
	}

	if (chroma <= 0) {
		hue = 0;
	} else
	if (max === r) {
		hue = ((g - b) / chroma) % 6;
	} else
	if (max === g) {
		hue = 2 + (b - r) / chroma;
	} else {
		hue = 4 + (r - g) / chroma + 4;
	}

	hue /= 6;
	hue %= 1;

	return [hue * 360, chroma * 100, grayscale * 100];
};

convert.hsl.hcg = function (hsl) {
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var c = 1;
	var f = 0;

	if (l < 0.5) {
		c = 2.0 * s * l;
	} else {
		c = 2.0 * s * (1.0 - l);
	}

	if (c < 1.0) {
		f = (l - 0.5 * c) / (1.0 - c);
	}

	return [hsl[0], c * 100, f * 100];
};

convert.hsv.hcg = function (hsv) {
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;

	var c = s * v;
	var f = 0;

	if (c < 1.0) {
		f = (v - c) / (1 - c);
	}

	return [hsv[0], c * 100, f * 100];
};

convert.hcg.rgb = function (hcg) {
	var h = hcg[0] / 360;
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	if (c === 0.0) {
		return [g * 255, g * 255, g * 255];
	}

	var pure = [0, 0, 0];
	var hi = (h % 1) * 6;
	var v = hi % 1;
	var w = 1 - v;
	var mg = 0;

	switch (Math.floor(hi)) {
		case 0:
			pure[0] = 1; pure[1] = v; pure[2] = 0; break;
		case 1:
			pure[0] = w; pure[1] = 1; pure[2] = 0; break;
		case 2:
			pure[0] = 0; pure[1] = 1; pure[2] = v; break;
		case 3:
			pure[0] = 0; pure[1] = w; pure[2] = 1; break;
		case 4:
			pure[0] = v; pure[1] = 0; pure[2] = 1; break;
		default:
			pure[0] = 1; pure[1] = 0; pure[2] = w;
	}

	mg = (1.0 - c) * g;

	return [
		(c * pure[0] + mg) * 255,
		(c * pure[1] + mg) * 255,
		(c * pure[2] + mg) * 255
	];
};

convert.hcg.hsv = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var v = c + g * (1.0 - c);
	var f = 0;

	if (v > 0.0) {
		f = c / v;
	}

	return [hcg[0], f * 100, v * 100];
};

convert.hcg.hsl = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var l = g * (1.0 - c) + 0.5 * c;
	var s = 0;

	if (l > 0.0 && l < 0.5) {
		s = c / (2 * l);
	} else
	if (l >= 0.5 && l < 1.0) {
		s = c / (2 * (1 - l));
	}

	return [hcg[0], s * 100, l * 100];
};

convert.hcg.hwb = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;
	var v = c + g * (1.0 - c);
	return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert.hwb.hcg = function (hwb) {
	var w = hwb[1] / 100;
	var b = hwb[2] / 100;
	var v = 1 - b;
	var c = v - w;
	var g = 0;

	if (c < 1) {
		g = (v - c) / (1 - c);
	}

	return [hwb[0], c * 100, g * 100];
};

convert.apple.rgb = function (apple) {
	return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
};

convert.rgb.apple = function (rgb) {
	return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
};

convert.gray.rgb = function (args) {
	return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert.gray.hsl = convert.gray.hsv = function (args) {
	return [0, 0, args[0]];
};

convert.gray.hwb = function (gray) {
	return [0, 100, gray[0]];
};

convert.gray.cmyk = function (gray) {
	return [0, 0, 0, gray[0]];
};

convert.gray.lab = function (gray) {
	return [gray[0], 0, 0];
};

convert.gray.hex = function (gray) {
	var val = Math.round(gray[0] / 100 * 255) & 0xFF;
	var integer = (val << 16) + (val << 8) + val;

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.rgb.gray = function (rgb) {
	var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
	return [val / 255 * 100];
};


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function (x) {
	var type = typeof x;
	return x !== null && (type === 'object' || type === 'function');
};


/***/ }),
/* 141 */
/***/ (function(module, exports) {

module.exports = function (ary, item) {
  var i = -1, indexes = []
  while((i = ary.indexOf(item, i + 1)) !== -1)
    indexes.push(i)
  return indexes
}


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function unique_pred(list, compare) {
  var ptr = 1
    , len = list.length
    , a=list[0], b=list[0]
  for(var i=1; i<len; ++i) {
    b = a
    a = list[i]
    if(compare(a, b)) {
      if(i === ptr) {
        ptr++
        continue
      }
      list[ptr++] = a
    }
  }
  list.length = ptr
  return list
}

function unique_eq(list) {
  var ptr = 1
    , len = list.length
    , a=list[0], b = list[0]
  for(var i=1; i<len; ++i, b=a) {
    b = a
    a = list[i]
    if(a !== b) {
      if(i === ptr) {
        ptr++
        continue
      }
      list[ptr++] = a
    }
  }
  list.length = ptr
  return list
}

function unique(list, compare, sorted) {
  if(list.length === 0) {
    return list
  }
  if(compare) {
    if(!sorted) {
      list.sort(compare)
    }
    return unique_pred(list, compare)
  }
  if(!sorted) {
    list.sort()
  }
  return unique_eq(list)
}

module.exports = unique


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _container = __webpack_require__(51);

var _container2 = _interopRequireDefault(_container);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Root = function (_Container) {
    _inherits(Root, _Container);

    function Root(opts) {
        _classCallCheck(this, Root);

        var _this = _possibleConstructorReturn(this, _Container.call(this, opts));

        _this.type = _types.ROOT;
        return _this;
    }

    Root.prototype.toString = function toString() {
        var str = this.reduce(function (memo, selector) {
            var sel = String(selector);
            return sel ? memo + sel + ',' : '';
        }, '').slice(0, -1);
        return this.trailingComma ? str + ',' : str;
    };

    Root.prototype.error = function error(message, options) {
        if (this._error) {
            return this._error(message, options);
        } else {
            return new Error(message);
        }
    };

    _createClass(Root, [{
        key: 'errorGenerator',
        set: function set(handler) {
            this._error = handler;
        }
    }]);

    return Root;
}(_container2.default);

exports.default = Root;
module.exports = exports['default'];

/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _container = __webpack_require__(51);

var _container2 = _interopRequireDefault(_container);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Selector = function (_Container) {
    _inherits(Selector, _Container);

    function Selector(opts) {
        _classCallCheck(this, Selector);

        var _this = _possibleConstructorReturn(this, _Container.call(this, opts));

        _this.type = _types.SELECTOR;
        return _this;
    }

    return Selector;
}(_container2.default);

exports.default = Selector;
module.exports = exports['default'];

/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _namespace = __webpack_require__(27);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassName = function (_Namespace) {
    _inherits(ClassName, _Namespace);

    function ClassName(opts) {
        _classCallCheck(this, ClassName);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.CLASS;
        return _this;
    }

    ClassName.prototype.toString = function toString() {
        return [this.spaces.before, this.ns, String('.' + this.value), this.spaces.after].join('');
    };

    return ClassName;
}(_namespace2.default);

exports.default = ClassName;
module.exports = exports['default'];

/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _node = __webpack_require__(19);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Comment = function (_Node) {
    _inherits(Comment, _Node);

    function Comment(opts) {
        _classCallCheck(this, Comment);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        _this.type = _types.COMMENT;
        return _this;
    }

    return Comment;
}(_node2.default);

exports.default = Comment;
module.exports = exports['default'];

/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _namespace = __webpack_require__(27);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ID = function (_Namespace) {
    _inherits(ID, _Namespace);

    function ID(opts) {
        _classCallCheck(this, ID);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.ID;
        return _this;
    }

    ID.prototype.toString = function toString() {
        return [this.spaces.before, this.ns, String('#' + this.value), this.spaces.after].join('');
    };

    return ID;
}(_namespace2.default);

exports.default = ID;
module.exports = exports['default'];

/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _namespace = __webpack_require__(27);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tag = function (_Namespace) {
    _inherits(Tag, _Namespace);

    function Tag(opts) {
        _classCallCheck(this, Tag);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.TAG;
        return _this;
    }

    return Tag;
}(_namespace2.default);

exports.default = Tag;
module.exports = exports['default'];

/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _node = __webpack_require__(19);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var String = function (_Node) {
    _inherits(String, _Node);

    function String(opts) {
        _classCallCheck(this, String);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        _this.type = _types.STRING;
        return _this;
    }

    return String;
}(_node2.default);

exports.default = String;
module.exports = exports['default'];

/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _container = __webpack_require__(51);

var _container2 = _interopRequireDefault(_container);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Pseudo = function (_Container) {
    _inherits(Pseudo, _Container);

    function Pseudo(opts) {
        _classCallCheck(this, Pseudo);

        var _this = _possibleConstructorReturn(this, _Container.call(this, opts));

        _this.type = _types.PSEUDO;
        return _this;
    }

    Pseudo.prototype.toString = function toString() {
        var params = this.length ? '(' + this.map(String).join(',') + ')' : '';
        return [this.spaces.before, String(this.value), params, this.spaces.after].join('');
    };

    return Pseudo;
}(_container2.default);

exports.default = Pseudo;
module.exports = exports['default'];

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _namespace = __webpack_require__(27);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Attribute = function (_Namespace) {
    _inherits(Attribute, _Namespace);

    function Attribute() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, Attribute);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.ATTRIBUTE;
        _this.raws = _this.raws || {};
        _this._constructed = true;
        return _this;
    }

    Attribute.prototype._spacesFor = function _spacesFor(name) {
        var attrSpaces = { before: '', after: '' };
        var spaces = this.spaces[name] || {};
        var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};
        return Object.assign(attrSpaces, spaces, rawSpaces);
    };

    Attribute.prototype._valueFor = function _valueFor(name) {
        return this.raws[name] || this[name];
    };

    Attribute.prototype._stringFor = function _stringFor(name) {
        var spaceName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : name;
        var concat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultAttrConcat;

        var attrSpaces = this._spacesFor(spaceName);
        return concat(this._valueFor(name), attrSpaces);
    };

    /**
     * returns the offset of the attribute part specified relative to the
     * start of the node of the output string.
     *
     * * "ns" - alias for "namespace"
     * * "namespace" - the namespace if it exists.
     * * "attribute" - the attribute name
     * * "attributeNS" - the start of the attribute or its namespace
     * * "operator" - the match operator of the attribute
     * * "value" - The value (string or identifier)
     * * "insensitive" - the case insensitivity flag;
     * @param part One of the possible values inside an attribute.
     * @returns -1 if the name is invalid or the value doesn't exist in this attribute.
     */


    Attribute.prototype.offsetOf = function offsetOf(name) {
        var count = 1;
        var attributeSpaces = this._spacesFor("attribute");
        count += attributeSpaces.before.length;
        if (name === "namespace" || name === "ns") {
            return this.namespace ? count : -1;
        }
        if (name === "attributeNS") {
            return count;
        }

        count += this.namespaceString.length;
        if (this.namespace) {
            count += 1;
        }
        if (name === "attribute") {
            return count;
        }

        count += this._valueFor("attribute").length;
        count += attributeSpaces.after.length;
        var operatorSpaces = this._spacesFor("operator");
        count += operatorSpaces.before.length;
        var operator = this._valueFor("operator");
        if (name === "operator") {
            return operator ? count : -1;
        }

        count += operator.length;
        count += operatorSpaces.after.length;
        var valueSpaces = this._spacesFor("value");
        count += valueSpaces.before.length;
        var value = this._valueFor("value");
        if (name === "value") {
            return value ? count : -1;
        }

        count += value.length;
        count += valueSpaces.after.length;
        var insensitiveSpaces = this._spacesFor("insensitive");
        count += insensitiveSpaces.before.length;
        if (name === "insensitive") {
            return this.insensitive ? count : -1;
        }
        return -1;
    };

    Attribute.prototype.toString = function toString() {
        var _this2 = this;

        var selector = [this.spaces.before, '['];

        selector.push(this._stringFor('qualifiedAttribute', 'attribute'));

        if (this.operator && this.value) {
            selector.push(this._stringFor('operator'));
            selector.push(this._stringFor('value'));
            selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {
                if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {
                    attrSpaces.before = " ";
                }
                return defaultAttrConcat(attrValue, attrSpaces);
            }));
        }

        selector.push(']');
        selector.push(this.spaces.after);
        return selector.join('');
    };

    _createClass(Attribute, [{
        key: 'qualifiedAttribute',
        get: function get() {
            return this.qualifiedName(this.raws.attribute || this.attribute);
        }
    }, {
        key: 'insensitiveFlag',
        get: function get() {
            return this.insensitive ? 'i' : '';
        }
    }, {
        key: 'value',
        get: function get() {
            return this._value;
        },
        set: function set(v) {
            this._value = v;
            if (this._constructed) {
                delete this.raws.value;
            }
        }
    }, {
        key: 'namespace',
        get: function get() {
            return this._namespace;
        },
        set: function set(v) {
            this._namespace = v;
            if (this._constructed) {
                delete this.raws.namespace;
            }
        }
    }, {
        key: 'attribute',
        get: function get() {
            return this._attribute;
        },
        set: function set(v) {
            this._attribute = v;
            if (this._constructed) {
                delete this.raws.attibute;
            }
        }
    }]);

    return Attribute;
}(_namespace2.default);

exports.default = Attribute;


function defaultAttrConcat(attrValue, attrSpaces) {
    return '' + attrSpaces.before + attrValue + attrSpaces.after;
}
module.exports = exports['default'];

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _namespace = __webpack_require__(27);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Universal = function (_Namespace) {
    _inherits(Universal, _Namespace);

    function Universal(opts) {
        _classCallCheck(this, Universal);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.UNIVERSAL;
        _this.value = '*';
        return _this;
    }

    return Universal;
}(_namespace2.default);

exports.default = Universal;
module.exports = exports['default'];

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _node = __webpack_require__(19);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Combinator = function (_Node) {
    _inherits(Combinator, _Node);

    function Combinator(opts) {
        _classCallCheck(this, Combinator);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        _this.type = _types.COMBINATOR;
        return _this;
    }

    return Combinator;
}(_node2.default);

exports.default = Combinator;
module.exports = exports['default'];

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _node = __webpack_require__(19);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Nesting = function (_Node) {
    _inherits(Nesting, _Node);

    function Nesting(opts) {
        _classCallCheck(this, Nesting);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        _this.type = _types.NESTING;
        _this.value = '&';
        return _this;
    }

    return Nesting;
}(_node2.default);

exports.default = Nesting;
module.exports = exports['default'];

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var ampersand = exports.ampersand = '&'.charCodeAt(0);
var asterisk = exports.asterisk = '*'.charCodeAt(0);
var at = exports.at = '@'.charCodeAt(0);
var comma = exports.comma = ','.charCodeAt(0);
var colon = exports.colon = ':'.charCodeAt(0);
var semicolon = exports.semicolon = ';'.charCodeAt(0);
var openParenthesis = exports.openParenthesis = '('.charCodeAt(0);
var closeParenthesis = exports.closeParenthesis = ')'.charCodeAt(0);
var openSquare = exports.openSquare = '['.charCodeAt(0);
var closeSquare = exports.closeSquare = ']'.charCodeAt(0);
var dollar = exports.dollar = '$'.charCodeAt(0);
var tilde = exports.tilde = '~'.charCodeAt(0);
var caret = exports.caret = '^'.charCodeAt(0);
var plus = exports.plus = '+'.charCodeAt(0);
var equals = exports.equals = '='.charCodeAt(0);
var pipe = exports.pipe = '|'.charCodeAt(0);
var greaterThan = exports.greaterThan = '>'.charCodeAt(0);
var space = exports.space = ' '.charCodeAt(0);
var singleQuote = exports.singleQuote = '\''.charCodeAt(0);
var doubleQuote = exports.doubleQuote = '"'.charCodeAt(0);
var slash = exports.slash = '/'.charCodeAt(0);

var backslash = exports.backslash = 92;
var cr = exports.cr = 13;
var feed = exports.feed = 12;
var newline = exports.newline = 10;
var tab = exports.tab = 9;

// Expose aliases primarily for readability.
var str = exports.str = singleQuote;

// No good single character representation!
var comment = exports.comment = -1;
var word = exports.word = -2;
var combinator = exports.combinator = -3;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = string => string.replace(/["']/g, '');

module.exports = exports['default'];

/***/ }),
/* 157 */
/***/ (function(module, exports) {

module.exports = function uniqs() {
  var list = Array.prototype.concat.apply([], arguments);
  return list.filter(function(item, i) {
    return i == list.indexOf(item);
  });
};


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (value) {
    const valueInLowerCase = value.toLowerCase();

    return valueInLowerCase === 'normal' ? '400' : valueInLowerCase === 'bold' ? '700' : value;
};

;
module.exports = exports['default'];

/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (nodes, opts) {
    let family = [];
    let last = null;
    let i, max;

    nodes.forEach((node, index, arr) => {
        if (node.type === 'string' || node.type === 'function') {
            family.push(node);
        } else if (node.type === 'word') {
            if (!last) {
                last = { type: 'word', value: '' };
                family.push(last);
            }

            last.value += node.value;
        } else if (node.type === 'space') {
            if (last && index !== arr.length - 1) {
                last.value += ' ';
            }
        } else {
            last = null;
        }
    });

    family = family.map(node => {
        if (node.type === 'string') {
            const isKeyword = regexKeyword.test(node.value);

            if (!opts.removeQuotes || isKeyword || /[0-9]/.test(node.value.slice(0, 1))) {
                return (0, _postcssValueParser.stringify)(node);
            }

            let escaped = escapeIdentifierSequence(node.value);

            if (escaped.length < node.value.length + 2) {
                return escaped;
            }
        }

        return (0, _postcssValueParser.stringify)(node);
    });

    if (opts.removeAfterKeyword) {
        for (i = 0, max = family.length; i < max; i += 1) {
            if (~genericFontFamilykeywords.indexOf(family[i].toLowerCase())) {
                family = family.slice(0, i + 1);
                break;
            }
        }
    }

    if (opts.removeDuplicates) {
        family = uniqs(family);
    }

    return [{
        type: 'word',
        value: family.join()
    }];
};

var _postcssValueParser = __webpack_require__(4);

var _uniqs = __webpack_require__(1016);

var _uniqs2 = _interopRequireDefault(_uniqs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const uniqs = (0, _uniqs2.default)('monospace');
const globalKeywords = ['inherit', 'initial', 'unset'];
const genericFontFamilykeywords = ['sans-serif', 'serif', 'fantasy', 'cursive', 'monospace', 'system-ui'];

function makeArray(value, length) {
    let array = [];
    while (length--) {
        array[length] = value;
    }
    return array;
}

const regexSimpleEscapeCharacters = /[ !"#$%&'()*+,.\/;<=>?@\[\\\]^`{|}~]/;

function escape(string, escapeForString) {
    let counter = 0;
    let character = null;
    let charCode = null;
    let value = null;
    let output = '';

    while (counter < string.length) {
        character = string.charAt(counter++);
        charCode = character.charCodeAt();

        // \r is already tokenized away at this point
        // `:` can be escaped as `\:`, but that fails in IE < 8
        if (!escapeForString && /[\t\n\v\f:]/.test(character)) {
            value = '\\' + charCode.toString(16) + ' ';
        } else if (!escapeForString && regexSimpleEscapeCharacters.test(character)) {
            value = '\\' + character;
        } else {
            value = character;
        }

        output += value;
    }

    if (!escapeForString) {
        if (/^-[-\d]/.test(output)) {
            output = '\\-' + output.slice(1);
        }

        const firstChar = string.charAt(0);

        if (/\d/.test(firstChar)) {
            output = '\\3' + firstChar + ' ' + output.slice(1);
        }
    }

    return output;
}

const regexKeyword = new RegExp(genericFontFamilykeywords.concat(globalKeywords).join('|'), 'i');
const regexInvalidIdentifier = /^(-?\d|--)/;
const regexSpaceAtStart = /^\x20/;
const regexWhitespace = /[\t\n\f\r\x20]/g;
const regexIdentifierCharacter = /^[a-zA-Z\d\xa0-\uffff_-]+$/;
const regexConsecutiveSpaces = /(\\(?:[a-fA-F0-9]{1,6}\x20|\x20))?(\x20{2,})/g;
const regexTrailingEscape = /\\[a-fA-F0-9]{0,6}\x20$/;
const regexTrailingSpace = /\x20$/;

function escapeIdentifierSequence(string) {
    let identifiers = string.split(regexWhitespace);
    let index = 0;
    let result = [];
    let escapeResult;

    while (index < identifiers.length) {
        let subString = identifiers[index++];

        if (subString === '') {
            result.push(subString);
            continue;
        }

        escapeResult = escape(subString, false);

        if (regexIdentifierCharacter.test(subString)) {
            // the font family name part consists of allowed characters exclusively
            if (regexInvalidIdentifier.test(subString)) {
                // the font family name part starts with two hyphens, a digit, or a
                // hyphen followed by a digit
                if (index === 1) {
                    // if this is the first item
                    result.push(escapeResult);
                } else {
                    // if it’s not the first item, we can simply escape the space
                    // between the two identifiers to merge them into a single
                    // identifier rather than escaping the start characters of the
                    // second identifier
                    result[index - 2] += '\\';
                    result.push(escape(subString, true));
                }
            } else {
                // the font family name part doesn’t start with two hyphens, a digit,
                // or a hyphen followed by a digit
                result.push(escapeResult);
            }
        } else {
            // the font family name part contains invalid identifier characters
            result.push(escapeResult);
        }
    }

    result = result.join(' ').replace(regexConsecutiveSpaces, ($0, $1, $2) => {
        const spaceCount = $2.length;
        const escapesNeeded = Math.floor(spaceCount / 2);
        const array = makeArray('\\ ', escapesNeeded);

        if (spaceCount % 2) {
            array[escapesNeeded - 1] += '\\ ';
        }

        return ($1 || '') + ' ' + array.join(' ');
    });

    // Escape trailing spaces unless they’re already part of an escape
    if (regexTrailingSpace.test(result) && !regexTrailingEscape.test(result)) {
        result = result.replace(regexTrailingSpace, '\\ ');
    }

    if (regexSpaceAtStart.test(result)) {
        result = '\\ ' + result.slice(1);
    }

    return result;
}

;
module.exports = exports['default'];

/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _container = __webpack_require__(52);

var _container2 = _interopRequireDefault(_container);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Root = function (_Container) {
    _inherits(Root, _Container);

    function Root(opts) {
        _classCallCheck(this, Root);

        var _this = _possibleConstructorReturn(this, _Container.call(this, opts));

        _this.type = _types.ROOT;
        return _this;
    }

    Root.prototype.toString = function toString() {
        var str = this.reduce(function (memo, selector) {
            var sel = String(selector);
            return sel ? memo + sel + ',' : '';
        }, '').slice(0, -1);
        return this.trailingComma ? str + ',' : str;
    };

    Root.prototype.error = function error(message, options) {
        if (this._error) {
            return this._error(message, options);
        } else {
            return new Error(message);
        }
    };

    _createClass(Root, [{
        key: 'errorGenerator',
        set: function set(handler) {
            this._error = handler;
        }
    }]);

    return Root;
}(_container2.default);

exports.default = Root;
module.exports = exports['default'];

/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _container = __webpack_require__(52);

var _container2 = _interopRequireDefault(_container);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Selector = function (_Container) {
    _inherits(Selector, _Container);

    function Selector(opts) {
        _classCallCheck(this, Selector);

        var _this = _possibleConstructorReturn(this, _Container.call(this, opts));

        _this.type = _types.SELECTOR;
        return _this;
    }

    return Selector;
}(_container2.default);

exports.default = Selector;
module.exports = exports['default'];

/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _namespace = __webpack_require__(28);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ClassName = function (_Namespace) {
    _inherits(ClassName, _Namespace);

    function ClassName(opts) {
        _classCallCheck(this, ClassName);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.CLASS;
        return _this;
    }

    ClassName.prototype.toString = function toString() {
        return [this.spaces.before, this.ns, String('.' + this.value), this.spaces.after].join('');
    };

    return ClassName;
}(_namespace2.default);

exports.default = ClassName;
module.exports = exports['default'];

/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _node = __webpack_require__(20);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Comment = function (_Node) {
    _inherits(Comment, _Node);

    function Comment(opts) {
        _classCallCheck(this, Comment);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        _this.type = _types.COMMENT;
        return _this;
    }

    return Comment;
}(_node2.default);

exports.default = Comment;
module.exports = exports['default'];

/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _namespace = __webpack_require__(28);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ID = function (_Namespace) {
    _inherits(ID, _Namespace);

    function ID(opts) {
        _classCallCheck(this, ID);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.ID;
        return _this;
    }

    ID.prototype.toString = function toString() {
        return [this.spaces.before, this.ns, String('#' + this.value), this.spaces.after].join('');
    };

    return ID;
}(_namespace2.default);

exports.default = ID;
module.exports = exports['default'];

/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _namespace = __webpack_require__(28);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Tag = function (_Namespace) {
    _inherits(Tag, _Namespace);

    function Tag(opts) {
        _classCallCheck(this, Tag);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.TAG;
        return _this;
    }

    return Tag;
}(_namespace2.default);

exports.default = Tag;
module.exports = exports['default'];

/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _node = __webpack_require__(20);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var String = function (_Node) {
    _inherits(String, _Node);

    function String(opts) {
        _classCallCheck(this, String);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        _this.type = _types.STRING;
        return _this;
    }

    return String;
}(_node2.default);

exports.default = String;
module.exports = exports['default'];

/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _container = __webpack_require__(52);

var _container2 = _interopRequireDefault(_container);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Pseudo = function (_Container) {
    _inherits(Pseudo, _Container);

    function Pseudo(opts) {
        _classCallCheck(this, Pseudo);

        var _this = _possibleConstructorReturn(this, _Container.call(this, opts));

        _this.type = _types.PSEUDO;
        return _this;
    }

    Pseudo.prototype.toString = function toString() {
        var params = this.length ? '(' + this.map(String).join(',') + ')' : '';
        return [this.spaces.before, String(this.value), params, this.spaces.after].join('');
    };

    return Pseudo;
}(_container2.default);

exports.default = Pseudo;
module.exports = exports['default'];

/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _namespace = __webpack_require__(28);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Attribute = function (_Namespace) {
    _inherits(Attribute, _Namespace);

    function Attribute() {
        var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        _classCallCheck(this, Attribute);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.ATTRIBUTE;
        _this.raws = _this.raws || {};
        _this._constructed = true;
        return _this;
    }

    Attribute.prototype._spacesFor = function _spacesFor(name) {
        var attrSpaces = { before: '', after: '' };
        var spaces = this.spaces[name] || {};
        var rawSpaces = this.raws.spaces && this.raws.spaces[name] || {};
        return Object.assign(attrSpaces, spaces, rawSpaces);
    };

    Attribute.prototype._valueFor = function _valueFor(name) {
        return this.raws[name] || this[name];
    };

    Attribute.prototype._stringFor = function _stringFor(name) {
        var spaceName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : name;
        var concat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultAttrConcat;

        var attrSpaces = this._spacesFor(spaceName);
        return concat(this._valueFor(name), attrSpaces);
    };

    /**
     * returns the offset of the attribute part specified relative to the
     * start of the node of the output string.
     *
     * * "ns" - alias for "namespace"
     * * "namespace" - the namespace if it exists.
     * * "attribute" - the attribute name
     * * "attributeNS" - the start of the attribute or its namespace
     * * "operator" - the match operator of the attribute
     * * "value" - The value (string or identifier)
     * * "insensitive" - the case insensitivity flag;
     * @param part One of the possible values inside an attribute.
     * @returns -1 if the name is invalid or the value doesn't exist in this attribute.
     */


    Attribute.prototype.offsetOf = function offsetOf(name) {
        var count = 1;
        var attributeSpaces = this._spacesFor("attribute");
        count += attributeSpaces.before.length;
        if (name === "namespace" || name === "ns") {
            return this.namespace ? count : -1;
        }
        if (name === "attributeNS") {
            return count;
        }

        count += this.namespaceString.length;
        if (this.namespace) {
            count += 1;
        }
        if (name === "attribute") {
            return count;
        }

        count += this._valueFor("attribute").length;
        count += attributeSpaces.after.length;
        var operatorSpaces = this._spacesFor("operator");
        count += operatorSpaces.before.length;
        var operator = this._valueFor("operator");
        if (name === "operator") {
            return operator ? count : -1;
        }

        count += operator.length;
        count += operatorSpaces.after.length;
        var valueSpaces = this._spacesFor("value");
        count += valueSpaces.before.length;
        var value = this._valueFor("value");
        if (name === "value") {
            return value ? count : -1;
        }

        count += value.length;
        count += valueSpaces.after.length;
        var insensitiveSpaces = this._spacesFor("insensitive");
        count += insensitiveSpaces.before.length;
        if (name === "insensitive") {
            return this.insensitive ? count : -1;
        }
        return -1;
    };

    Attribute.prototype.toString = function toString() {
        var _this2 = this;

        var selector = [this.spaces.before, '['];

        selector.push(this._stringFor('qualifiedAttribute', 'attribute'));

        if (this.operator && this.value) {
            selector.push(this._stringFor('operator'));
            selector.push(this._stringFor('value'));
            selector.push(this._stringFor('insensitiveFlag', 'insensitive', function (attrValue, attrSpaces) {
                if (attrValue.length > 0 && !_this2.quoted && attrSpaces.before.length === 0 && !(_this2.spaces.value && _this2.spaces.value.after)) {
                    attrSpaces.before = " ";
                }
                return defaultAttrConcat(attrValue, attrSpaces);
            }));
        }

        selector.push(']');
        selector.push(this.spaces.after);
        return selector.join('');
    };

    _createClass(Attribute, [{
        key: 'qualifiedAttribute',
        get: function get() {
            return this.qualifiedName(this.raws.attribute || this.attribute);
        }
    }, {
        key: 'insensitiveFlag',
        get: function get() {
            return this.insensitive ? 'i' : '';
        }
    }, {
        key: 'value',
        get: function get() {
            return this._value;
        },
        set: function set(v) {
            this._value = v;
            if (this._constructed) {
                delete this.raws.value;
            }
        }
    }, {
        key: 'namespace',
        get: function get() {
            return this._namespace;
        },
        set: function set(v) {
            this._namespace = v;
            if (this._constructed) {
                delete this.raws.namespace;
            }
        }
    }, {
        key: 'attribute',
        get: function get() {
            return this._attribute;
        },
        set: function set(v) {
            this._attribute = v;
            if (this._constructed) {
                delete this.raws.attibute;
            }
        }
    }]);

    return Attribute;
}(_namespace2.default);

exports.default = Attribute;


function defaultAttrConcat(attrValue, attrSpaces) {
    return '' + attrSpaces.before + attrValue + attrSpaces.after;
}
module.exports = exports['default'];

/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _namespace = __webpack_require__(28);

var _namespace2 = _interopRequireDefault(_namespace);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Universal = function (_Namespace) {
    _inherits(Universal, _Namespace);

    function Universal(opts) {
        _classCallCheck(this, Universal);

        var _this = _possibleConstructorReturn(this, _Namespace.call(this, opts));

        _this.type = _types.UNIVERSAL;
        _this.value = '*';
        return _this;
    }

    return Universal;
}(_namespace2.default);

exports.default = Universal;
module.exports = exports['default'];

/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _node = __webpack_require__(20);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Combinator = function (_Node) {
    _inherits(Combinator, _Node);

    function Combinator(opts) {
        _classCallCheck(this, Combinator);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        _this.type = _types.COMBINATOR;
        return _this;
    }

    return Combinator;
}(_node2.default);

exports.default = Combinator;
module.exports = exports['default'];

/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _node = __webpack_require__(20);

var _node2 = _interopRequireDefault(_node);

var _types = __webpack_require__(9);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Nesting = function (_Node) {
    _inherits(Nesting, _Node);

    function Nesting(opts) {
        _classCallCheck(this, Nesting);

        var _this = _possibleConstructorReturn(this, _Node.call(this, opts));

        _this.type = _types.NESTING;
        _this.value = '&';
        return _this;
    }

    return Nesting;
}(_node2.default);

exports.default = Nesting;
module.exports = exports['default'];

/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
var ampersand = exports.ampersand = '&'.charCodeAt(0);
var asterisk = exports.asterisk = '*'.charCodeAt(0);
var at = exports.at = '@'.charCodeAt(0);
var comma = exports.comma = ','.charCodeAt(0);
var colon = exports.colon = ':'.charCodeAt(0);
var semicolon = exports.semicolon = ';'.charCodeAt(0);
var openParenthesis = exports.openParenthesis = '('.charCodeAt(0);
var closeParenthesis = exports.closeParenthesis = ')'.charCodeAt(0);
var openSquare = exports.openSquare = '['.charCodeAt(0);
var closeSquare = exports.closeSquare = ']'.charCodeAt(0);
var dollar = exports.dollar = '$'.charCodeAt(0);
var tilde = exports.tilde = '~'.charCodeAt(0);
var caret = exports.caret = '^'.charCodeAt(0);
var plus = exports.plus = '+'.charCodeAt(0);
var equals = exports.equals = '='.charCodeAt(0);
var pipe = exports.pipe = '|'.charCodeAt(0);
var greaterThan = exports.greaterThan = '>'.charCodeAt(0);
var space = exports.space = ' '.charCodeAt(0);
var singleQuote = exports.singleQuote = '\''.charCodeAt(0);
var doubleQuote = exports.doubleQuote = '"'.charCodeAt(0);
var slash = exports.slash = '/'.charCodeAt(0);

var backslash = exports.backslash = 92;
var cr = exports.cr = 13;
var feed = exports.feed = 12;
var newline = exports.newline = 10;
var tab = exports.tab = 9;

// Expose aliases primarily for readability.
var str = exports.str = singleQuote;

// No good single character representation!
var comment = exports.comment = -1;
var word = exports.word = -2;
var combinator = exports.combinator = -3;

/***/ }),
/* 173 */
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 173;

/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var parser = __webpack_require__(4);

var Value = __webpack_require__(12);

var insertAreas = __webpack_require__(16).insertAreas;

var OLD_LINEAR = /(^|[^-])linear-gradient\(\s*(top|left|right|bottom)/i;
var OLD_RADIAL = /(^|[^-])radial-gradient\(\s*\d+(\w*|%)\s+\d+(\w*|%)\s*,/i;
var IGNORE_NEXT = /(!\s*)?autoprefixer:\s*ignore\s+next/i;
var GRID_REGEX = /(!\s*)?autoprefixer\s*grid:\s*(on|off|(no-)?autoplace)/i;
var SIZES = ['width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'];

function hasGridTemplate(decl) {
  return decl.parent.some(function (i) {
    return i.prop === 'grid-template' || i.prop === 'grid-template-areas';
  });
}

function hasRowsAndColumns(decl) {
  var hasRows = decl.parent.some(function (i) {
    return i.prop === 'grid-template-rows';
  });
  var hasColumns = decl.parent.some(function (i) {
    return i.prop === 'grid-template-columns';
  });
  return hasRows && hasColumns;
}

var Processor =
/*#__PURE__*/
function () {
  function Processor(prefixes) {
    this.prefixes = prefixes;
  }
  /**
   * Add necessary prefixes
   */


  var _proto = Processor.prototype;

  _proto.add = function add(css, result) {
    var _this = this;

    // At-rules
    var resolution = this.prefixes.add['@resolution'];
    var keyframes = this.prefixes.add['@keyframes'];
    var viewport = this.prefixes.add['@viewport'];
    var supports = this.prefixes.add['@supports'];
    css.walkAtRules(function (rule) {
      if (rule.name === 'keyframes') {
        if (!_this.disabled(rule, result)) {
          return keyframes && keyframes.process(rule);
        }
      } else if (rule.name === 'viewport') {
        if (!_this.disabled(rule, result)) {
          return viewport && viewport.process(rule);
        }
      } else if (rule.name === 'supports') {
        if (_this.prefixes.options.supports !== false && !_this.disabled(rule, result)) {
          return supports.process(rule);
        }
      } else if (rule.name === 'media' && rule.params.indexOf('-resolution') !== -1) {
        if (!_this.disabled(rule, result)) {
          return resolution && resolution.process(rule);
        }
      }

      return undefined;
    }); // Selectors

    css.walkRules(function (rule) {
      if (_this.disabled(rule, result)) return undefined;
      return _this.prefixes.add.selectors.map(function (selector) {
        return selector.process(rule, result);
      });
    });

    function insideGrid(decl) {
      return decl.parent.some(function (subDecl) {
        var displayGrid = subDecl.prop === 'display' && /(inline-)?grid/.test(subDecl.value);
        var gridTemplate = /^grid-template/.test(subDecl.prop);
        var gridGap = /^grid-([A-z]+-)?gap/.test(subDecl.prop);
        return displayGrid || gridTemplate || gridGap;
      });
    }

    function insideFlex(decl) {
      return decl.parent.some(function (subDecl) {
        return subDecl.prop === 'display' && /(inline-)?flex/.test(subDecl.value);
      });
    }

    var gridPrefixes = this.gridStatus(css, result) && this.prefixes.add['grid-area'] && this.prefixes.add['grid-area'].prefixes;
    css.walkDecls(function (decl) {
      if (_this.disabledDecl(decl, result)) return undefined;
      var parent = decl.parent;
      var prop = decl.prop;
      var value = decl.value;

      if (prop === 'grid-row-span') {
        result.warn('grid-row-span is not part of final Grid Layout. Use grid-row.', {
          node: decl
        });
        return undefined;
      } else if (prop === 'grid-column-span') {
        result.warn('grid-column-span is not part of final Grid Layout. Use grid-column.', {
          node: decl
        });
        return undefined;
      } else if (prop === 'display' && value === 'box') {
        result.warn('You should write display: flex by final spec ' + 'instead of display: box', {
          node: decl
        });
        return undefined;
      } else if (prop === 'text-emphasis-position') {
        if (value === 'under' || value === 'over') {
          result.warn('You should use 2 values for text-emphasis-position ' + 'For example, `under left` instead of just `under`.', {
            node: decl
          });
        }
      } else if (/^(align|justify|place)-(items|content)$/.test(prop) && insideFlex(decl)) {
        if (value === 'start' || value === 'end') {
          result.warn(value + " value has mixed support, consider using " + ("flex-" + value + " instead"), {
            node: decl
          });
        }
      } else if (prop === 'text-decoration-skip' && value === 'ink') {
        result.warn('Replace text-decoration-skip: ink to ' + 'text-decoration-skip-ink: auto, because spec had been changed', {
          node: decl
        });
      } else {
        if (gridPrefixes) {
          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {
            var fixed = prop.replace('-items', '-self');
            result.warn("IE does not support " + prop + " on grid containers. " + ("Try using " + fixed + " on child elements instead: ") + (decl.parent.selector + " > * { " + fixed + ": " + decl.value + " }"), {
              node: decl
            });
          } else if (/^(align|justify|place)-content$/.test(prop) && insideGrid(decl)) {
            result.warn("IE does not support " + decl.prop + " on grid containers", {
              node: decl
            });
          } else if (prop === 'display' && decl.value === 'contents') {
            result.warn('Please do not use display: contents; ' + 'if you have grid setting enabled', {
              node: decl
            });
            return undefined;
          } else if (decl.prop === 'grid-gap') {
            var status = _this.gridStatus(decl, result);

            if (status === 'autoplace' && !hasRowsAndColumns(decl) && !hasGridTemplate(decl)) {
              result.warn('grid-gap only works if grid-template(-areas) is being ' + 'used or both rows and columns have been declared ' + 'and cells have not been manually ' + 'placed inside the explicit grid', {
                node: decl
              });
            } else if ((status === true || status === 'no-autoplace') && !hasGridTemplate(decl)) {
              result.warn("grid-gap only works if grid-template(-areas) is being used", {
                node: decl
              });
            }
          } else if (prop === 'grid-auto-columns') {
            result.warn('grid-auto-columns is not supported by IE', {
              node: decl
            });
            return undefined;
          } else if (prop === 'grid-auto-rows') {
            result.warn('grid-auto-rows is not supported by IE', {
              node: decl
            });
            return undefined;
          } else if (prop === 'grid-auto-flow') {
            var hasRows = parent.some(function (i) {
              return i.prop === 'grid-template-rows';
            });
            var hasCols = parent.some(function (i) {
              return i.prop === 'grid-template-columns';
            });

            if (hasGridTemplate(decl)) {
              result.warn('grid-auto-flow is not supported by IE', {
                node: decl
              });
            } else if (value.includes('dense')) {
              result.warn('grid-auto-flow: dense is not supported by IE', {
                node: decl
              });
            } else if (!hasRows && !hasCols) {
              result.warn('grid-auto-flow works only if grid-template-rows and ' + 'grid-template-columns are present in the same rule', {
                node: decl
              });
            }

            return undefined;
          } else if (value.indexOf('auto-fit') !== -1) {
            result.warn('auto-fit value is not supported by IE', {
              node: decl,
              word: 'auto-fit'
            });
            return undefined;
          } else if (value.indexOf('auto-fill') !== -1) {
            result.warn('auto-fill value is not supported by IE', {
              node: decl,
              word: 'auto-fill'
            });
            return undefined;
          } else if (/^grid-template/.test(prop) && value.indexOf('[') !== -1) {
            result.warn('Autoprefixer currently does not support line names. ' + 'Try using grid-template-areas instead.', {
              node: decl,
              word: '['
            });
          }
        }

        if (value.indexOf('radial-gradient') !== -1) {
          if (OLD_RADIAL.test(decl.value)) {
            result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `closest-side at 0 0` ' + 'instead of `0 0, closest-side`.', {
              node: decl
            });
          } else {
            var ast = parser(value);

            for (var _iterator = ast.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
              var _ref;

              if (_isArray) {
                if (_i >= _iterator.length) break;
                _ref = _iterator[_i++];
              } else {
                _i = _iterator.next();
                if (_i.done) break;
                _ref = _i.value;
              }

              var i = _ref;

              if (i.type === 'function' && i.value === 'radial-gradient') {
                for (var _iterator2 = i.nodes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
                  var _ref2;

                  if (_isArray2) {
                    if (_i2 >= _iterator2.length) break;
                    _ref2 = _iterator2[_i2++];
                  } else {
                    _i2 = _iterator2.next();
                    if (_i2.done) break;
                    _ref2 = _i2.value;
                  }

                  var word = _ref2;

                  if (word.type === 'word') {
                    if (word.value === 'cover') {
                      result.warn('Gradient has outdated direction syntax. ' + 'Replace `cover` to `farthest-corner`.', {
                        node: decl
                      });
                    } else if (word.value === 'contain') {
                      result.warn('Gradient has outdated direction syntax. ' + 'Replace `contain` to `closest-side`.', {
                        node: decl
                      });
                    }
                  }
                }
              }
            }
          }
        }

        if (value.indexOf('linear-gradient') !== -1) {
          if (OLD_LINEAR.test(value)) {
            result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `to left` instead of `right`.', {
              node: decl
            });
          }
        }
      }

      if (SIZES.indexOf(decl.prop) !== -1) {
        if (decl.value.indexOf('-fill-available') === -1) {
          if (decl.value.indexOf('fill-available') !== -1) {
            result.warn('Replace fill-available to stretch, ' + 'because spec had been changed', {
              node: decl
            });
          } else if (decl.value.indexOf('fill') !== -1) {
            result.warn('Replace fill to stretch, because spec had been changed', {
              node: decl
            });
          }
        }
      }

      var prefixer;

      if (decl.prop === 'transition' || decl.prop === 'transition-property') {
        // Transition
        return _this.prefixes.transition.add(decl, result);
      } else if (decl.prop === 'align-self') {
        // align-self flexbox or grid
        var display = _this.displayType(decl);

        if (display !== 'grid' && _this.prefixes.options.flexbox !== false) {
          prefixer = _this.prefixes.add['align-self'];

          if (prefixer && prefixer.prefixes) {
            prefixer.process(decl);
          }
        }

        if (display !== 'flex' && _this.gridStatus(decl, result) !== false) {
          prefixer = _this.prefixes.add['grid-row-align'];

          if (prefixer && prefixer.prefixes) {
            return prefixer.process(decl, result);
          }
        }
      } else if (decl.prop === 'justify-self') {
        // justify-self flexbox or grid
        var _display = _this.displayType(decl);

        if (_display !== 'flex' && _this.gridStatus(decl, result) !== false) {
          prefixer = _this.prefixes.add['grid-column-align'];

          if (prefixer && prefixer.prefixes) {
            return prefixer.process(decl, result);
          }
        }
      } else if (decl.prop === 'place-self') {
        prefixer = _this.prefixes.add['place-self'];

        if (prefixer && prefixer.prefixes && _this.gridStatus(decl, result) !== false) {
          return prefixer.process(decl, result);
        }
      } else {
        // Properties
        prefixer = _this.prefixes.add[decl.prop];

        if (prefixer && prefixer.prefixes) {
          return prefixer.process(decl, result);
        }
      }

      return undefined;
    }); // Insert grid-area prefixes. We need to be able to store the different
    // rules as a data and hack API is not enough for this

    if (this.gridStatus(css, result)) {
      insertAreas(css, this.disabled);
    } // Values


    return css.walkDecls(function (decl) {
      if (_this.disabledValue(decl, result)) return;

      var unprefixed = _this.prefixes.unprefixed(decl.prop);

      for (var _iterator3 = _this.prefixes.values('add', unprefixed), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        var _ref3;

        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          _ref3 = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          _ref3 = _i3.value;
        }

        var value = _ref3;
        value.process(decl, result);
      }

      Value.save(_this.prefixes, decl);
    });
  }
  /**
   * Remove unnecessary pefixes
   */
  ;

  _proto.remove = function remove(css, result) {
    var _this2 = this;

    // At-rules
    var resolution = this.prefixes.remove['@resolution'];
    css.walkAtRules(function (rule, i) {
      if (_this2.prefixes.remove["@" + rule.name]) {
        if (!_this2.disabled(rule, result)) {
          rule.parent.removeChild(i);
        }
      } else if (rule.name === 'media' && rule.params.indexOf('-resolution') !== -1 && resolution) {
        resolution.clean(rule);
      }
    }); // Selectors

    var _loop = function _loop() {
      if (_isArray4) {
        if (_i4 >= _iterator4.length) return "break";
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done) return "break";
        _ref4 = _i4.value;
      }

      var checker = _ref4;
      css.walkRules(function (rule, i) {
        if (checker.check(rule)) {
          if (!_this2.disabled(rule, result)) {
            rule.parent.removeChild(i);
          }
        }
      });
    };

    for (var _iterator4 = this.prefixes.remove.selectors, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
      var _ref4;

      var _ret = _loop();

      if (_ret === "break") break;
    }

    return css.walkDecls(function (decl, i) {
      if (_this2.disabled(decl, result)) return;
      var rule = decl.parent;

      var unprefixed = _this2.prefixes.unprefixed(decl.prop); // Transition


      if (decl.prop === 'transition' || decl.prop === 'transition-property') {
        _this2.prefixes.transition.remove(decl);
      } // Properties


      if (_this2.prefixes.remove[decl.prop] && _this2.prefixes.remove[decl.prop].remove) {
        var notHack = _this2.prefixes.group(decl).down(function (other) {
          return _this2.prefixes.normalize(other.prop) === unprefixed;
        });

        if (unprefixed === 'flex-flow') {
          notHack = true;
        }

        if (notHack && !_this2.withHackValue(decl)) {
          if (decl.raw('before').indexOf('\n') > -1) {
            _this2.reduceSpaces(decl);
          }

          rule.removeChild(i);
          return;
        }
      } // Values


      for (var _iterator5 = _this2.prefixes.values('remove', unprefixed), _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
        var _ref5;

        if (_isArray5) {
          if (_i5 >= _iterator5.length) break;
          _ref5 = _iterator5[_i5++];
        } else {
          _i5 = _iterator5.next();
          if (_i5.done) break;
          _ref5 = _i5.value;
        }

        var checker = _ref5;

        if (!checker.check(decl.value)) {
          continue;
        }

        unprefixed = checker.unprefixed;

        var _notHack = _this2.prefixes.group(decl).down(function (other) {
          return other.value.indexOf(unprefixed) !== -1;
        });

        if (_notHack) {
          rule.removeChild(i);
          return;
        }
      }
    });
  }
  /**
   * Some rare old values, which is not in standard
   */
  ;

  _proto.withHackValue = function withHackValue(decl) {
    return decl.prop === '-webkit-background-clip' && decl.value === 'text';
  }
  /**
   * Check for grid/flexbox options.
   */
  ;

  _proto.disabledValue = function disabledValue(node, result) {
    if (this.gridStatus(node, result) === false && node.type === 'decl') {
      if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {
        return true;
      }
    }

    if (this.prefixes.options.flexbox === false && node.type === 'decl') {
      if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {
        return true;
      }
    }

    return this.disabled(node, result);
  }
  /**
   * Check for grid/flexbox options.
   */
  ;

  _proto.disabledDecl = function disabledDecl(node, result) {
    if (this.gridStatus(node, result) === false && node.type === 'decl') {
      if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {
        return true;
      }
    }

    if (this.prefixes.options.flexbox === false && node.type === 'decl') {
      var other = ['order', 'justify-content', 'align-items', 'align-content'];

      if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {
        return true;
      }
    }

    return this.disabled(node, result);
  }
  /**
   * Check for control comment and global options
   */
  ;

  _proto.disabled = function disabled(node, result) {
    if (!node) return false;

    if (node._autoprefixerDisabled !== undefined) {
      return node._autoprefixerDisabled;
    }

    if (node.parent) {
      var p = node.prev();

      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {
        node._autoprefixerDisabled = true;
        node._autoprefixerSelfDisabled = true;
        return true;
      }
    }

    var value = null;

    if (node.nodes) {
      var status;
      node.each(function (i) {
        if (i.type !== 'comment') return;

        if (/(!\s*)?autoprefixer:\s*(off|on)/i.test(i.text)) {
          if (typeof status !== 'undefined') {
            result.warn('Second Autoprefixer control comment ' + 'was ignored. Autoprefixer applies control ' + 'comment to whole block, not to next rules.', {
              node: i
            });
          } else {
            status = /on/i.test(i.text);
          }
        }
      });

      if (status !== undefined) {
        value = !status;
      }
    }

    if (!node.nodes || value === null) {
      if (node.parent) {
        var isParentDisabled = this.disabled(node.parent, result);

        if (node.parent._autoprefixerSelfDisabled === true) {
          value = false;
        } else {
          value = isParentDisabled;
        }
      } else {
        value = false;
      }
    }

    node._autoprefixerDisabled = value;
    return value;
  }
  /**
   * Normalize spaces in cascade declaration group
   */
  ;

  _proto.reduceSpaces = function reduceSpaces(decl) {
    var stop = false;
    this.prefixes.group(decl).up(function () {
      stop = true;
      return true;
    });

    if (stop) {
      return;
    }

    var parts = decl.raw('before').split('\n');
    var prevMin = parts[parts.length - 1].length;
    var diff = false;
    this.prefixes.group(decl).down(function (other) {
      parts = other.raw('before').split('\n');
      var last = parts.length - 1;

      if (parts[last].length > prevMin) {
        if (diff === false) {
          diff = parts[last].length - prevMin;
        }

        parts[last] = parts[last].slice(0, -diff);
        other.raws.before = parts.join('\n');
      }
    });
  }
  /**
   * Is it flebox or grid rule
   */
  ;

  _proto.displayType = function displayType(decl) {
    for (var _iterator6 = decl.parent.nodes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {
      var _ref6;

      if (_isArray6) {
        if (_i6 >= _iterator6.length) break;
        _ref6 = _iterator6[_i6++];
      } else {
        _i6 = _iterator6.next();
        if (_i6.done) break;
        _ref6 = _i6.value;
      }

      var i = _ref6;

      if (i.prop !== 'display') {
        continue;
      }

      if (i.value.indexOf('flex') !== -1) {
        return 'flex';
      }

      if (i.value.indexOf('grid') !== -1) {
        return 'grid';
      }
    }

    return false;
  }
  /**
   * Set grid option via control comment
   */
  ;

  _proto.gridStatus = function gridStatus(node, result) {
    if (!node) return false;

    if (node._autoprefixerGridStatus !== undefined) {
      return node._autoprefixerGridStatus;
    }

    var value = null;

    if (node.nodes) {
      var status;
      node.each(function (i) {
        if (i.type !== 'comment') return;

        if (GRID_REGEX.test(i.text)) {
          var hasAutoplace = /:\s*autoplace/i.test(i.text);
          var noAutoplace = /no-autoplace/i.test(i.text);

          if (typeof status !== 'undefined') {
            result.warn("Second Autoprefixer grid control comment was " + 'ignored. Autoprefixer applies control comments to the whole ' + 'block, not to the next rules.', {
              node: i
            });
          } else if (hasAutoplace) {
            status = 'autoplace';
          } else if (noAutoplace) {
            status = true;
          } else {
            status = /on/i.test(i.text);
          }
        }
      });

      if (status !== undefined) {
        value = status;
      }
    }

    if (node.type === 'atrule' && node.name === 'supports') {
      var params = node.params;

      if (params.indexOf('grid') !== -1 && params.indexOf('auto') !== -1) {
        value = false;
      }
    }

    if (!node.nodes || value === null) {
      if (node.parent) {
        var isParentGrid = this.gridStatus(node.parent, result);

        if (node.parent._autoprefixerSelfDisabled === true) {
          value = false;
        } else {
          value = isParentGrid;
        }
      } else {
        value = this.prefixes.options.grid;
      }
    }

    node._autoprefixerGridStatus = value;
    return value;
  };

  return Processor;
}();

module.exports = Processor;

/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _path = __webpack_require__(5);

var _path2 = _interopRequireDefault(_path);

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _cosmiconfig = __webpack_require__(200);

var _cosmiconfig2 = _interopRequireDefault(_cosmiconfig);

var _isResolvable = __webpack_require__(241);

var _isResolvable2 = _interopRequireDefault(_isResolvable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const cssnano = 'cssnano';

function initializePlugin(plugin, css, result) {
    if (Array.isArray(plugin)) {
        const [processor, opts] = plugin;
        if (typeof opts === 'undefined' || typeof opts === 'object' && !opts.exclude || typeof opts === 'boolean' && opts === true) {
            return Promise.resolve(processor(opts)(css, result));
        }
    } else {
        return Promise.resolve(plugin()(css, result));
    }
    // Handle excluded plugins
    return Promise.resolve();
}

/*
 * preset can be one of four possibilities:
 * preset = 'default'
 * preset = ['default', {}]
 * preset = function <- to be invoked
 * preset = {plugins: []} <- already invoked function
 */

function resolvePreset(preset) {
    let fn, options;
    if (Array.isArray(preset)) {
        fn = preset[0];
        options = preset[1];
    } else {
        fn = preset;
        options = {};
    }
    // For JS setups where we invoked the preset already
    if (preset.plugins) {
        return Promise.resolve(preset.plugins);
    }
    // Provide an alias for the default preset, as it is built-in.
    if (fn === 'default') {
        return Promise.resolve(__webpack_require__(243)(options).plugins);
    }
    // For non-JS setups; we'll need to invoke the preset ourselves.
    if (typeof fn === 'function') {
        return Promise.resolve(fn(options).plugins);
    }
    // Try loading a preset from node_modules
    if ((0, _isResolvable2.default)(fn)) {
        return Promise.resolve(__webpack_require__(173)(fn)(options).plugins);
    }
    const sugar = `cssnano-preset-${fn}`;
    // Try loading a preset from node_modules (sugar)
    if ((0, _isResolvable2.default)(sugar)) {
        return Promise.resolve(__webpack_require__(173)(sugar)(options).plugins);
    }
    // If all else fails, we probably have a typo in the config somewhere
    throw new Error(`Cannot load preset "${fn}". Please check your configuration for errors and try again.`);
}

/*
 * cssnano will look for configuration firstly as options passed
 * directly to it, and failing this it will use cosmiconfig to
 * load an external file.
 */

function resolveConfig(css, result, options) {
    if (options.preset) {
        return resolvePreset(options.preset);
    }

    const inputFile = css.source && css.source.input && css.source.input.file;
    let searchPath = inputFile ? _path2.default.dirname(inputFile) : process.cwd();
    let configPath = null;

    if (options.configFile) {
        searchPath = null;
        configPath = _path2.default.resolve(process.cwd(), options.configFile);
    }

    const configExplorer = (0, _cosmiconfig2.default)(cssnano);
    const searchForConfig = configPath ? configExplorer.load(configPath) : configExplorer.search(searchPath);

    return searchForConfig.then(config => {
        if (config === null) {
            return resolvePreset('default');
        }
        return resolvePreset(config.config.preset || config.config);
    });
}

exports.default = _postcss2.default.plugin(cssnano, (options = {}) => {
    return (css, result) => {
        return resolveConfig(css, result, options).then(plugins => {
            return plugins.reduce((promise, plugin) => {
                return promise.then(initializePlugin.bind(null, plugin, css, result));
            }, Promise.resolve());
        });
    };
});
module.exports = exports['default'];

/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var browserslist = __webpack_require__(14);

var postcss = __webpack_require__(3);

var agents = __webpack_require__(26).agents;

var chalk = __webpack_require__(37);

var Browsers = __webpack_require__(21);

var Prefixes = __webpack_require__(1046);

var data = __webpack_require__(1108);

var info = __webpack_require__(1109);

var WARNING = '\n' + '  Replace Autoprefixer `browsers` option to Browserslist config.\n' + '  Use `browserslist` key in `package.json` or `.browserslistrc` file.\n' + '\n' + '  Using `browsers` option cause some error. Browserslist config \n' + '  can be used for Babel, Autoprefixer, postcss-normalize and other tools.\n' + '\n' + '  If you really need to use option, rename it to `overrideBrowserslist`.\n' + '\n' + '  Learn more at:\n' + '  https://github.com/browserslist/browserslist#readme\n' + '  https://twitter.com/browserslist\n' + '\n';

function isPlainObject(obj) {
  return Object.prototype.toString.apply(obj) === '[object Object]';
}

var cache = {};

function timeCapsule(result, prefixes) {
  if (prefixes.browsers.selected.length === 0) {
    return;
  }

  if (prefixes.add.selectors.length > 0) {
    return;
  }

  if (Object.keys(prefixes.add).length > 2) {
    return;
  }
  /* istanbul ignore next */


  result.warn('Greetings, time traveller. ' + 'We are in the golden age of prefix-less CSS, ' + 'where Autoprefixer is no longer needed for your stylesheet.');
}

module.exports = postcss.plugin('autoprefixer', function () {
  for (var _len = arguments.length, reqs = new Array(_len), _key = 0; _key < _len; _key++) {
    reqs[_key] = arguments[_key];
  }

  var options;

  if (reqs.length === 1 && isPlainObject(reqs[0])) {
    options = reqs[0];
    reqs = undefined;
  } else if (reqs.length === 0 || reqs.length === 1 && !reqs[0]) {
    reqs = undefined;
  } else if (reqs.length <= 2 && (reqs[0] instanceof Array || !reqs[0])) {
    options = reqs[1];
    reqs = reqs[0];
  } else if (typeof reqs[reqs.length - 1] === 'object') {
    options = reqs.pop();
  }

  if (!options) {
    options = {};
  }

  if (options.browser) {
    throw new Error('Change `browser` option to `overrideBrowserslist` in Autoprefixer');
  } else if (options.browserslist) {
    throw new Error('Change `browserslist` option to `overrideBrowserslist` in Autoprefixer');
  }

  if (options.overrideBrowserslist) {
    reqs = options.overrideBrowserslist;
  } else if (options.browsers) {
    if (typeof console !== 'undefined' && console.warn) {
      if (chalk && chalk.red) {
        console.warn(chalk.red(WARNING.replace(/`[^`]+`/g, function (i) {
          return chalk.yellow(i.slice(1, -1));
        })));
      } else {
        console.warn(WARNING);
      }
    }

    reqs = options.browsers;
  }

  if (typeof options.grid === 'undefined') {
    options.grid = false;
  }

  var brwlstOpts = {
    ignoreUnknownVersions: options.ignoreUnknownVersions,
    stats: options.stats
  };

  function loadPrefixes(opts) {
    var d = module.exports.data;
    var browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts);
    var key = browsers.selected.join(', ') + JSON.stringify(options);

    if (!cache[key]) {
      cache[key] = new Prefixes(d.prefixes, browsers, options);
    }

    return cache[key];
  }

  function plugin(css, result) {
    var prefixes = loadPrefixes({
      from: css.source && css.source.input.file,
      env: options.env
    });
    timeCapsule(result, prefixes);

    if (options.remove !== false) {
      prefixes.processor.remove(css, result);
    }

    if (options.add !== false) {
      prefixes.processor.add(css, result);
    }
  }

  plugin.options = options;
  plugin.browsers = reqs;

  plugin.info = function (opts) {
    opts = opts || {};
    opts.from = opts.from || process.cwd();
    return info(loadPrefixes(opts));
  };

  return plugin;
});
/**
 * Autoprefixer data
 */

module.exports.data = {
  browsers: agents,
  prefixes: data
  /**
   * Autoprefixer default browsers
   */

};
module.exports.defaults = browserslist.defaults;
/**
 * Inspect with default Autoprefixer
 */

module.exports.info = function () {
  return module.exports().info();
};

/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {


const sysWorker = __webpack_require__(1111);

exports.createRunner = sysWorker.createRunner;
exports.attachMessageHandler = sysWorker.attachMessageHandler;

if (process.argv.indexOf('--start-worker') > -1) {
  // --start-worker cmd line arg used to start the worker
  // and attached a message handler to the process
  const runner = sysWorker.createRunner();
  sysWorker.attachMessageHandler(process, runner);
}


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

var constants = __webpack_require__(179)

var origCwd = process.cwd
var cwd = null

var platform = process.env.GRACEFUL_FS_PLATFORM || process.platform

process.cwd = function() {
  if (!cwd)
    cwd = origCwd.call(process)
  return cwd
}
try {
  process.cwd()
} catch (er) {}

var chdir = process.chdir
process.chdir = function(d) {
  cwd = null
  chdir.call(process, d)
}

module.exports = patch

function patch (fs) {
  // (re-)implement some things that are known busted or missing.

  // lchmod, broken prior to 0.6.2
  // back-port the fix here.
  if (constants.hasOwnProperty('O_SYMLINK') &&
      process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)) {
    patchLchmod(fs)
  }

  // lutimes implementation, or no-op
  if (!fs.lutimes) {
    patchLutimes(fs)
  }

  // https://github.com/isaacs/node-graceful-fs/issues/4
  // Chown should not fail on einval or eperm if non-root.
  // It should not fail on enosys ever, as this just indicates
  // that a fs doesn't support the intended operation.

  fs.chown = chownFix(fs.chown)
  fs.fchown = chownFix(fs.fchown)
  fs.lchown = chownFix(fs.lchown)

  fs.chmod = chmodFix(fs.chmod)
  fs.fchmod = chmodFix(fs.fchmod)
  fs.lchmod = chmodFix(fs.lchmod)

  fs.chownSync = chownFixSync(fs.chownSync)
  fs.fchownSync = chownFixSync(fs.fchownSync)
  fs.lchownSync = chownFixSync(fs.lchownSync)

  fs.chmodSync = chmodFixSync(fs.chmodSync)
  fs.fchmodSync = chmodFixSync(fs.fchmodSync)
  fs.lchmodSync = chmodFixSync(fs.lchmodSync)

  fs.stat = statFix(fs.stat)
  fs.fstat = statFix(fs.fstat)
  fs.lstat = statFix(fs.lstat)

  fs.statSync = statFixSync(fs.statSync)
  fs.fstatSync = statFixSync(fs.fstatSync)
  fs.lstatSync = statFixSync(fs.lstatSync)

  // if lchmod/lchown do not exist, then make them no-ops
  if (!fs.lchmod) {
    fs.lchmod = function (path, mode, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchmodSync = function () {}
  }
  if (!fs.lchown) {
    fs.lchown = function (path, uid, gid, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchownSync = function () {}
  }

  // on Windows, A/V software can lock the directory, causing this
  // to fail with an EACCES or EPERM if the directory contains newly
  // created files.  Try again on failure, for up to 60 seconds.

  // Set the timeout this long because some Windows Anti-Virus, such as Parity
  // bit9, may lock files for up to a minute, causing npm package install
  // failures. Also, take care to yield the scheduler. Windows scheduling gives
  // CPU to a busy looping process, which can cause the program causing the lock
  // contention to be starved of CPU by node, so the contention doesn't resolve.
  if (platform === "win32") {
    fs.rename = (function (fs$rename) { return function (from, to, cb) {
      var start = Date.now()
      var backoff = 0;
      fs$rename(from, to, function CB (er) {
        if (er
            && (er.code === "EACCES" || er.code === "EPERM")
            && Date.now() - start < 60000) {
          setTimeout(function() {
            fs.stat(to, function (stater, st) {
              if (stater && stater.code === "ENOENT")
                fs$rename(from, to, CB);
              else
                cb(er)
            })
          }, backoff)
          if (backoff < 100)
            backoff += 10;
          return;
        }
        if (cb) cb(er)
      })
    }})(fs.rename)
  }

  // if read() returns EAGAIN, then just try it again.
  fs.read = (function (fs$read) { return function (fd, buffer, offset, length, position, callback_) {
    var callback
    if (callback_ && typeof callback_ === 'function') {
      var eagCounter = 0
      callback = function (er, _, __) {
        if (er && er.code === 'EAGAIN' && eagCounter < 10) {
          eagCounter ++
          return fs$read.call(fs, fd, buffer, offset, length, position, callback)
        }
        callback_.apply(this, arguments)
      }
    }
    return fs$read.call(fs, fd, buffer, offset, length, position, callback)
  }})(fs.read)

  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {
    var eagCounter = 0
    while (true) {
      try {
        return fs$readSync.call(fs, fd, buffer, offset, length, position)
      } catch (er) {
        if (er.code === 'EAGAIN' && eagCounter < 10) {
          eagCounter ++
          continue
        }
        throw er
      }
    }
  }})(fs.readSync)

  function patchLchmod (fs) {
    fs.lchmod = function (path, mode, callback) {
      fs.open( path
             , constants.O_WRONLY | constants.O_SYMLINK
             , mode
             , function (err, fd) {
        if (err) {
          if (callback) callback(err)
          return
        }
        // prefer to return the chmod error, if one occurs,
        // but still try to close, and report closing errors if they occur.
        fs.fchmod(fd, mode, function (err) {
          fs.close(fd, function(err2) {
            if (callback) callback(err || err2)
          })
        })
      })
    }

    fs.lchmodSync = function (path, mode) {
      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)

      // prefer to return the chmod error, if one occurs,
      // but still try to close, and report closing errors if they occur.
      var threw = true
      var ret
      try {
        ret = fs.fchmodSync(fd, mode)
        threw = false
      } finally {
        if (threw) {
          try {
            fs.closeSync(fd)
          } catch (er) {}
        } else {
          fs.closeSync(fd)
        }
      }
      return ret
    }
  }

  function patchLutimes (fs) {
    if (constants.hasOwnProperty("O_SYMLINK")) {
      fs.lutimes = function (path, at, mt, cb) {
        fs.open(path, constants.O_SYMLINK, function (er, fd) {
          if (er) {
            if (cb) cb(er)
            return
          }
          fs.futimes(fd, at, mt, function (er) {
            fs.close(fd, function (er2) {
              if (cb) cb(er || er2)
            })
          })
        })
      }

      fs.lutimesSync = function (path, at, mt) {
        var fd = fs.openSync(path, constants.O_SYMLINK)
        var ret
        var threw = true
        try {
          ret = fs.futimesSync(fd, at, mt)
          threw = false
        } finally {
          if (threw) {
            try {
              fs.closeSync(fd)
            } catch (er) {}
          } else {
            fs.closeSync(fd)
          }
        }
        return ret
      }

    } else {
      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }
      fs.lutimesSync = function () {}
    }
  }

  function chmodFix (orig) {
    if (!orig) return orig
    return function (target, mode, cb) {
      return orig.call(fs, target, mode, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chmodFixSync (orig) {
    if (!orig) return orig
    return function (target, mode) {
      try {
        return orig.call(fs, target, mode)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }


  function chownFix (orig) {
    if (!orig) return orig
    return function (target, uid, gid, cb) {
      return orig.call(fs, target, uid, gid, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chownFixSync (orig) {
    if (!orig) return orig
    return function (target, uid, gid) {
      try {
        return orig.call(fs, target, uid, gid)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }


  function statFix (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, cb) {
      return orig.call(fs, target, function (er, stats) {
        if (!stats) return cb.apply(this, arguments)
        if (stats.uid < 0) stats.uid += 0x100000000
        if (stats.gid < 0) stats.gid += 0x100000000
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function statFixSync (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target) {
      var stats = orig.call(fs, target)
      if (stats.uid < 0) stats.uid += 0x100000000
      if (stats.gid < 0) stats.gid += 0x100000000
      return stats;
    }
  }

  // ENOSYS means that the fs doesn't support the op. Just ignore
  // that, because it doesn't matter.
  //
  // if there's no getuid, or if getuid() is something other
  // than 0, and the error is EINVAL or EPERM, then just ignore
  // it.
  //
  // This specific case is a silent failure in cp, install, tar,
  // and most other unix tools that manage permissions.
  //
  // When running as root, or if other types of errors are
  // encountered, then it's strict.
  function chownErOk (er) {
    if (!er)
      return true

    if (er.code === "ENOSYS")
      return true

    var nonroot = !process.getuid || process.getuid() !== 0
    if (nonroot) {
      if (er.code === "EINVAL" || er.code === "EPERM")
        return true
    }

    return false
  }
}


/***/ }),
/* 179 */
/***/ (function(module, exports) {

module.exports = require("constants");

/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

var Stream = __webpack_require__(181).Stream

module.exports = legacy

function legacy (fs) {
  return {
    ReadStream: ReadStream,
    WriteStream: WriteStream
  }

  function ReadStream (path, options) {
    if (!(this instanceof ReadStream)) return new ReadStream(path, options);

    Stream.call(this);

    var self = this;

    this.path = path;
    this.fd = null;
    this.readable = true;
    this.paused = false;

    this.flags = 'r';
    this.mode = 438; /*=0666*/
    this.bufferSize = 64 * 1024;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.encoding) this.setEncoding(this.encoding);

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.end === undefined) {
        this.end = Infinity;
      } else if ('number' !== typeof this.end) {
        throw TypeError('end must be a Number');
      }

      if (this.start > this.end) {
        throw new Error('start must be <= end');
      }

      this.pos = this.start;
    }

    if (this.fd !== null) {
      process.nextTick(function() {
        self._read();
      });
      return;
    }

    fs.open(this.path, this.flags, this.mode, function (err, fd) {
      if (err) {
        self.emit('error', err);
        self.readable = false;
        return;
      }

      self.fd = fd;
      self.emit('open', fd);
      self._read();
    })
  }

  function WriteStream (path, options) {
    if (!(this instanceof WriteStream)) return new WriteStream(path, options);

    Stream.call(this);

    this.path = path;
    this.fd = null;
    this.writable = true;

    this.flags = 'w';
    this.encoding = 'binary';
    this.mode = 438; /*=0666*/
    this.bytesWritten = 0;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.start < 0) {
        throw new Error('start must be >= zero');
      }

      this.pos = this.start;
    }

    this.busy = false;
    this._queue = [];

    if (this.fd === null) {
      this._open = fs.open;
      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);
      this.flush();
    }
  }
}


/***/ }),
/* 181 */
/***/ (function(module, exports) {

module.exports = require("stream");

/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = clone

function clone (obj) {
  if (obj === null || typeof obj !== 'object')
    return obj

  if (obj instanceof Object)
    var copy = { __proto__: obj.__proto__ }
  else
    var copy = Object.create(null)

  Object.getOwnPropertyNames(obj).forEach(function (key) {
    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))
  })

  return copy
}


/***/ }),
/* 183 */
/***/ (function(module, exports) {

module.exports = require("assert");

/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const os = __webpack_require__(57);
const hasFlag = __webpack_require__(185);

const {env} = process;

let forceColor;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false') ||
	hasFlag('color=never')) {
	forceColor = 0;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor = 1;
}
if ('FORCE_COLOR' in env) {
	if (env.FORCE_COLOR === true || env.FORCE_COLOR === 'true') {
		forceColor = 1;
	} else if (env.FORCE_COLOR === false || env.FORCE_COLOR === 'false') {
		forceColor = 0;
	} else {
		forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
	}
}

function translateLevel(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor(stream) {
	if (forceColor === 0) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (stream && !stream.isTTY && forceColor === undefined) {
		return 0;
	}

	const min = forceColor || 0;

	if (env.TERM === 'dumb') {
		return min;
	}

	if (process.platform === 'win32') {
		// Node.js 7.5.0 is the first version of Node.js to include a patch to
		// libuv that enables 256 color output on Windows. Anything earlier and it
		// won't work. However, here we target Node.js 8 at minimum as it is an LTS
		// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
		// release that supports 256 colors. Windows 10 build 14931 is the first release
		// that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(process.versions.node.split('.')[0]) >= 8 &&
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
	}

	if (env.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env) {
		const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env) {
		return 1;
	}

	return min;
}

function getSupportLevel(stream) {
	const level = supportsColor(stream);
	return translateLevel(level);
}

module.exports = {
	supportsColor: getSupportLevel,
	stdout: getSupportLevel(process.stdout),
	stderr: getSupportLevel(process.stderr)
};


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = (flag, argv) => {
	argv = argv || process.argv;
	const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');
	const pos = argv.indexOf(prefix + flag);
	const terminatorPos = argv.indexOf('--');
	return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _chalk = _interopRequireDefault(__webpack_require__(37));

var _tokenize = _interopRequireDefault(__webpack_require__(58));

var _input = _interopRequireDefault(__webpack_require__(59));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HIGHLIGHT_THEME = {
  'brackets': _chalk.default.cyan,
  'at-word': _chalk.default.cyan,
  'comment': _chalk.default.gray,
  'string': _chalk.default.green,
  'class': _chalk.default.yellow,
  'call': _chalk.default.cyan,
  'hash': _chalk.default.magenta,
  '(': _chalk.default.cyan,
  ')': _chalk.default.cyan,
  '{': _chalk.default.yellow,
  '}': _chalk.default.yellow,
  '[': _chalk.default.yellow,
  ']': _chalk.default.yellow,
  ':': _chalk.default.yellow,
  ';': _chalk.default.yellow
};

function getTokenType(_ref, processor) {
  var type = _ref[0],
      value = _ref[1];

  if (type === 'word') {
    if (value[0] === '.') {
      return 'class';
    }

    if (value[0] === '#') {
      return 'hash';
    }
  }

  if (!processor.endOfFile()) {
    var next = processor.nextToken();
    processor.back(next);
    if (next[0] === 'brackets' || next[0] === '(') return 'call';
  }

  return type;
}

function terminalHighlight(css) {
  var processor = (0, _tokenize.default)(new _input.default(css), {
    ignoreErrors: true
  });
  var result = '';

  var _loop = function _loop() {
    var token = processor.nextToken();
    var color = HIGHLIGHT_THEME[getTokenType(token, processor)];

    if (color) {
      result += token[1].split(/\r?\n/).map(function (i) {
        return color(i);
      }).join('\n');
    } else {
      result += token[1];
    }
  };

  while (!processor.endOfFile()) {
    _loop();
  }

  return result;
}

var _default = terminalHighlight;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlcm1pbmFsLWhpZ2hsaWdodC5lczYiXSwibmFtZXMiOlsiSElHSExJR0hUX1RIRU1FIiwiY2hhbGsiLCJjeWFuIiwiZ3JheSIsImdyZWVuIiwieWVsbG93IiwibWFnZW50YSIsImdldFRva2VuVHlwZSIsInByb2Nlc3NvciIsInR5cGUiLCJ2YWx1ZSIsImVuZE9mRmlsZSIsIm5leHQiLCJuZXh0VG9rZW4iLCJiYWNrIiwidGVybWluYWxIaWdobGlnaHQiLCJjc3MiLCJJbnB1dCIsImlnbm9yZUVycm9ycyIsInJlc3VsdCIsInRva2VuIiwiY29sb3IiLCJzcGxpdCIsIm1hcCIsImkiLCJqb2luIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUVBOztBQUNBOzs7O0FBRUEsSUFBTUEsZUFBZSxHQUFHO0FBQ3RCLGNBQVlDLGVBQU1DLElBREk7QUFFdEIsYUFBV0QsZUFBTUMsSUFGSztBQUd0QixhQUFXRCxlQUFNRSxJQUhLO0FBSXRCLFlBQVVGLGVBQU1HLEtBSk07QUFLdEIsV0FBU0gsZUFBTUksTUFMTztBQU10QixVQUFRSixlQUFNQyxJQU5RO0FBT3RCLFVBQVFELGVBQU1LLE9BUFE7QUFRdEIsT0FBS0wsZUFBTUMsSUFSVztBQVN0QixPQUFLRCxlQUFNQyxJQVRXO0FBVXRCLE9BQUtELGVBQU1JLE1BVlc7QUFXdEIsT0FBS0osZUFBTUksTUFYVztBQVl0QixPQUFLSixlQUFNSSxNQVpXO0FBYXRCLE9BQUtKLGVBQU1JLE1BYlc7QUFjdEIsT0FBS0osZUFBTUksTUFkVztBQWV0QixPQUFLSixlQUFNSTtBQWZXLENBQXhCOztBQWtCQSxTQUFTRSxZQUFULE9BQXNDQyxTQUF0QyxFQUFpRDtBQUFBLE1BQXpCQyxJQUF5QjtBQUFBLE1BQW5CQyxLQUFtQjs7QUFDL0MsTUFBSUQsSUFBSSxLQUFLLE1BQWIsRUFBcUI7QUFDbkIsUUFBSUMsS0FBSyxDQUFDLENBQUQsQ0FBTCxLQUFhLEdBQWpCLEVBQXNCO0FBQ3BCLGFBQU8sT0FBUDtBQUNEOztBQUNELFFBQUlBLEtBQUssQ0FBQyxDQUFELENBQUwsS0FBYSxHQUFqQixFQUFzQjtBQUNwQixhQUFPLE1BQVA7QUFDRDtBQUNGOztBQUVELE1BQUksQ0FBQ0YsU0FBUyxDQUFDRyxTQUFWLEVBQUwsRUFBNEI7QUFDMUIsUUFBSUMsSUFBSSxHQUFHSixTQUFTLENBQUNLLFNBQVYsRUFBWDtBQUNBTCxJQUFBQSxTQUFTLENBQUNNLElBQVYsQ0FBZUYsSUFBZjtBQUNBLFFBQUlBLElBQUksQ0FBQyxDQUFELENBQUosS0FBWSxVQUFaLElBQTBCQSxJQUFJLENBQUMsQ0FBRCxDQUFKLEtBQVksR0FBMUMsRUFBK0MsT0FBTyxNQUFQO0FBQ2hEOztBQUVELFNBQU9ILElBQVA7QUFDRDs7QUFFRCxTQUFTTSxpQkFBVCxDQUE0QkMsR0FBNUIsRUFBaUM7QUFDL0IsTUFBSVIsU0FBUyxHQUFHLHVCQUFVLElBQUlTLGNBQUosQ0FBVUQsR0FBVixDQUFWLEVBQTBCO0FBQUVFLElBQUFBLFlBQVksRUFBRTtBQUFoQixHQUExQixDQUFoQjtBQUNBLE1BQUlDLE1BQU0sR0FBRyxFQUFiOztBQUYrQjtBQUk3QixRQUFJQyxLQUFLLEdBQUdaLFNBQVMsQ0FBQ0ssU0FBVixFQUFaO0FBQ0EsUUFBSVEsS0FBSyxHQUFHckIsZUFBZSxDQUFDTyxZQUFZLENBQUNhLEtBQUQsRUFBUVosU0FBUixDQUFiLENBQTNCOztBQUNBLFFBQUlhLEtBQUosRUFBVztBQUNURixNQUFBQSxNQUFNLElBQUlDLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBU0UsS0FBVCxDQUFlLE9BQWYsRUFDUEMsR0FETyxDQUNILFVBQUFDLENBQUM7QUFBQSxlQUFJSCxLQUFLLENBQUNHLENBQUQsQ0FBVDtBQUFBLE9BREUsRUFFUEMsSUFGTyxDQUVGLElBRkUsQ0FBVjtBQUdELEtBSkQsTUFJTztBQUNMTixNQUFBQSxNQUFNLElBQUlDLEtBQUssQ0FBQyxDQUFELENBQWY7QUFDRDtBQVo0Qjs7QUFHL0IsU0FBTyxDQUFDWixTQUFTLENBQUNHLFNBQVYsRUFBUixFQUErQjtBQUFBO0FBVTlCOztBQUNELFNBQU9RLE1BQVA7QUFDRDs7ZUFFY0osaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnXG5cbmltcG9ydCB0b2tlbml6ZXIgZnJvbSAnLi90b2tlbml6ZSdcbmltcG9ydCBJbnB1dCBmcm9tICcuL2lucHV0J1xuXG5jb25zdCBISUdITElHSFRfVEhFTUUgPSB7XG4gICdicmFja2V0cyc6IGNoYWxrLmN5YW4sXG4gICdhdC13b3JkJzogY2hhbGsuY3lhbixcbiAgJ2NvbW1lbnQnOiBjaGFsay5ncmF5LFxuICAnc3RyaW5nJzogY2hhbGsuZ3JlZW4sXG4gICdjbGFzcyc6IGNoYWxrLnllbGxvdyxcbiAgJ2NhbGwnOiBjaGFsay5jeWFuLFxuICAnaGFzaCc6IGNoYWxrLm1hZ2VudGEsXG4gICcoJzogY2hhbGsuY3lhbixcbiAgJyknOiBjaGFsay5jeWFuLFxuICAneyc6IGNoYWxrLnllbGxvdyxcbiAgJ30nOiBjaGFsay55ZWxsb3csXG4gICdbJzogY2hhbGsueWVsbG93LFxuICAnXSc6IGNoYWxrLnllbGxvdyxcbiAgJzonOiBjaGFsay55ZWxsb3csXG4gICc7JzogY2hhbGsueWVsbG93XG59XG5cbmZ1bmN0aW9uIGdldFRva2VuVHlwZSAoW3R5cGUsIHZhbHVlXSwgcHJvY2Vzc29yKSB7XG4gIGlmICh0eXBlID09PSAnd29yZCcpIHtcbiAgICBpZiAodmFsdWVbMF0gPT09ICcuJykge1xuICAgICAgcmV0dXJuICdjbGFzcydcbiAgICB9XG4gICAgaWYgKHZhbHVlWzBdID09PSAnIycpIHtcbiAgICAgIHJldHVybiAnaGFzaCdcbiAgICB9XG4gIH1cblxuICBpZiAoIXByb2Nlc3Nvci5lbmRPZkZpbGUoKSkge1xuICAgIGxldCBuZXh0ID0gcHJvY2Vzc29yLm5leHRUb2tlbigpXG4gICAgcHJvY2Vzc29yLmJhY2sobmV4dClcbiAgICBpZiAobmV4dFswXSA9PT0gJ2JyYWNrZXRzJyB8fCBuZXh0WzBdID09PSAnKCcpIHJldHVybiAnY2FsbCdcbiAgfVxuXG4gIHJldHVybiB0eXBlXG59XG5cbmZ1bmN0aW9uIHRlcm1pbmFsSGlnaGxpZ2h0IChjc3MpIHtcbiAgbGV0IHByb2Nlc3NvciA9IHRva2VuaXplcihuZXcgSW5wdXQoY3NzKSwgeyBpZ25vcmVFcnJvcnM6IHRydWUgfSlcbiAgbGV0IHJlc3VsdCA9ICcnXG4gIHdoaWxlICghcHJvY2Vzc29yLmVuZE9mRmlsZSgpKSB7XG4gICAgbGV0IHRva2VuID0gcHJvY2Vzc29yLm5leHRUb2tlbigpXG4gICAgbGV0IGNvbG9yID0gSElHSExJR0hUX1RIRU1FW2dldFRva2VuVHlwZSh0b2tlbiwgcHJvY2Vzc29yKV1cbiAgICBpZiAoY29sb3IpIHtcbiAgICAgIHJlc3VsdCArPSB0b2tlblsxXS5zcGxpdCgvXFxyP1xcbi8pXG4gICAgICAgIC5tYXAoaSA9PiBjb2xvcihpKSlcbiAgICAgICAgLmpvaW4oJ1xcbicpXG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3VsdCArPSB0b2tlblsxXVxuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRlcm1pbmFsSGlnaGxpZ2h0XG4iXSwiZmlsZSI6InRlcm1pbmFsLWhpZ2hsaWdodC5qcyJ9


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _sourceMap = _interopRequireDefault(__webpack_require__(38));

var _path = _interopRequireDefault(__webpack_require__(5));

var _fs = _interopRequireDefault(__webpack_require__(13));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fromBase64(str) {
  if (Buffer) {
    return Buffer.from(str, 'base64').toString();
  } else {
    return window.atob(str);
  }
}
/**
 * Source map information from input CSS.
 * For example, source map after Sass compiler.
 *
 * This class will automatically find source map in input CSS or in file system
 * near input file (according `from` option).
 *
 * @example
 * const root = postcss.parse(css, { from: 'a.sass.css' })
 * root.input.map //=> PreviousMap
 */


var PreviousMap =
/*#__PURE__*/
function () {
  /**
   * @param {string}         css    Input CSS source.
   * @param {processOptions} [opts] {@link Processor#process} options.
   */
  function PreviousMap(css, opts) {
    this.loadAnnotation(css);
    /**
     * Was source map inlined by data-uri to input CSS.
     *
     * @type {boolean}
     */

    this.inline = this.startWith(this.annotation, 'data:');
    var prev = opts.map ? opts.map.prev : undefined;
    var text = this.loadMap(opts.from, prev);
    if (text) this.text = text;
  }
  /**
   * Create a instance of `SourceMapGenerator` class
   * from the `source-map` library to work with source map information.
   *
   * It is lazy method, so it will create object only on first call
   * and then it will use cache.
   *
   * @return {SourceMapGenerator} Object with source map information.
   */


  var _proto = PreviousMap.prototype;

  _proto.consumer = function consumer() {
    if (!this.consumerCache) {
      this.consumerCache = new _sourceMap.default.SourceMapConsumer(this.text);
    }

    return this.consumerCache;
  }
  /**
   * Does source map contains `sourcesContent` with input source text.
   *
   * @return {boolean} Is `sourcesContent` present.
   */
  ;

  _proto.withContent = function withContent() {
    return !!(this.consumer().sourcesContent && this.consumer().sourcesContent.length > 0);
  };

  _proto.startWith = function startWith(string, start) {
    if (!string) return false;
    return string.substr(0, start.length) === start;
  };

  _proto.loadAnnotation = function loadAnnotation(css) {
    var match = css.match(/\/\*\s*# sourceMappingURL=(.*)\s*\*\//);
    if (match) this.annotation = match[1].trim();
  };

  _proto.decodeInline = function decodeInline(text) {
    var baseCharsetUri = /^data:application\/json;charset=utf-?8;base64,/;
    var baseUri = /^data:application\/json;base64,/;
    var uri = 'data:application/json,';

    if (this.startWith(text, uri)) {
      return decodeURIComponent(text.substr(uri.length));
    }

    if (baseCharsetUri.test(text) || baseUri.test(text)) {
      return fromBase64(text.substr(RegExp.lastMatch.length));
    }

    var encoding = text.match(/data:application\/json;([^,]+),/)[1];
    throw new Error('Unsupported source map encoding ' + encoding);
  };

  _proto.loadMap = function loadMap(file, prev) {
    if (prev === false) return false;

    if (prev) {
      if (typeof prev === 'string') {
        return prev;
      } else if (typeof prev === 'function') {
        var prevPath = prev(file);

        if (prevPath && _fs.default.existsSync && _fs.default.existsSync(prevPath)) {
          return _fs.default.readFileSync(prevPath, 'utf-8').toString().trim();
        } else {
          throw new Error('Unable to load previous source map: ' + prevPath.toString());
        }
      } else if (prev instanceof _sourceMap.default.SourceMapConsumer) {
        return _sourceMap.default.SourceMapGenerator.fromSourceMap(prev).toString();
      } else if (prev instanceof _sourceMap.default.SourceMapGenerator) {
        return prev.toString();
      } else if (this.isMap(prev)) {
        return JSON.stringify(prev);
      } else {
        throw new Error('Unsupported previous source map format: ' + prev.toString());
      }
    } else if (this.inline) {
      return this.decodeInline(this.annotation);
    } else if (this.annotation) {
      var map = this.annotation;
      if (file) map = _path.default.join(_path.default.dirname(file), map);
      this.root = _path.default.dirname(map);

      if (_fs.default.existsSync && _fs.default.existsSync(map)) {
        return _fs.default.readFileSync(map, 'utf-8').toString().trim();
      } else {
        return false;
      }
    }
  };

  _proto.isMap = function isMap(map) {
    if (typeof map !== 'object') return false;
    return typeof map.mappings === 'string' || typeof map._mappings === 'string';
  };

  return PreviousMap;
}();

var _default = PreviousMap;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 188 */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');

/**
 * Encode an integer in the range of 0 to 63 to a single base 64 digit.
 */
exports.encode = function (number) {
  if (0 <= number && number < intToCharMap.length) {
    return intToCharMap[number];
  }
  throw new TypeError("Must be between 0 and 63: " + number);
};

/**
 * Decode a single base 64 character code digit to an integer. Returns -1 on
 * failure.
 */
exports.decode = function (charCode) {
  var bigA = 65;     // 'A'
  var bigZ = 90;     // 'Z'

  var littleA = 97;  // 'a'
  var littleZ = 122; // 'z'

  var zero = 48;     // '0'
  var nine = 57;     // '9'

  var plus = 43;     // '+'
  var slash = 47;    // '/'

  var littleOffset = 26;
  var numberOffset = 52;

  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ
  if (bigA <= charCode && charCode <= bigZ) {
    return (charCode - bigA);
  }

  // 26 - 51: abcdefghijklmnopqrstuvwxyz
  if (littleA <= charCode && charCode <= littleZ) {
    return (charCode - littleA + littleOffset);
  }

  // 52 - 61: 0123456789
  if (zero <= charCode && charCode <= nine) {
    return (charCode - zero + numberOffset);
  }

  // 62: +
  if (charCode == plus) {
    return 62;
  }

  // 63: /
  if (charCode == slash) {
    return 63;
  }

  // Invalid base64 digit.
  return -1;
};


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2014 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(22);

/**
 * Determine whether mappingB is after mappingA with respect to generated
 * position.
 */
function generatedPositionAfter(mappingA, mappingB) {
  // Optimized for most common case
  var lineA = mappingA.generatedLine;
  var lineB = mappingB.generatedLine;
  var columnA = mappingA.generatedColumn;
  var columnB = mappingB.generatedColumn;
  return lineB > lineA || lineB == lineA && columnB >= columnA ||
         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;
}

/**
 * A data structure to provide a sorted view of accumulated mappings in a
 * performance conscious manner. It trades a neglibable overhead in general
 * case for a large speedup in case of mappings being added in order.
 */
function MappingList() {
  this._array = [];
  this._sorted = true;
  // Serves as infimum
  this._last = {generatedLine: -1, generatedColumn: 0};
}

/**
 * Iterate through internal items. This method takes the same arguments that
 * `Array.prototype.forEach` takes.
 *
 * NOTE: The order of the mappings is NOT guaranteed.
 */
MappingList.prototype.unsortedForEach =
  function MappingList_forEach(aCallback, aThisArg) {
    this._array.forEach(aCallback, aThisArg);
  };

/**
 * Add the given source mapping.
 *
 * @param Object aMapping
 */
MappingList.prototype.add = function MappingList_add(aMapping) {
  if (generatedPositionAfter(this._last, aMapping)) {
    this._last = aMapping;
    this._array.push(aMapping);
  } else {
    this._sorted = false;
    this._array.push(aMapping);
  }
};

/**
 * Returns the flat, sorted array of mappings. The mappings are sorted by
 * generated position.
 *
 * WARNING: This method returns internal data without copying, for
 * performance. The return value must NOT be mutated, and should be treated as
 * an immutable borrow. If you want to take ownership, you must make your own
 * copy.
 */
MappingList.prototype.toArray = function MappingList_toArray() {
  if (!this._sorted) {
    this._array.sort(util.compareByGeneratedPositionsInflated);
    this._sorted = true;
  }
  return this._array;
};

exports.MappingList = MappingList;


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var util = __webpack_require__(22);
var binarySearch = __webpack_require__(191);
var ArraySet = __webpack_require__(62).ArraySet;
var base64VLQ = __webpack_require__(61);
var quickSort = __webpack_require__(192).quickSort;

function SourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  return sourceMap.sections != null
    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)
    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);
}

SourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {
  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);
}

/**
 * The version of the source mapping spec that we are consuming.
 */
SourceMapConsumer.prototype._version = 3;

// `__generatedMappings` and `__originalMappings` are arrays that hold the
// parsed mapping coordinates from the source map's "mappings" attribute. They
// are lazily instantiated, accessed via the `_generatedMappings` and
// `_originalMappings` getters respectively, and we only parse the mappings
// and create these arrays once queried for a source location. We jump through
// these hoops because there can be many thousands of mappings, and parsing
// them is expensive, so we only want to do it if we must.
//
// Each object in the arrays is of the form:
//
//     {
//       generatedLine: The line number in the generated code,
//       generatedColumn: The column number in the generated code,
//       source: The path to the original source file that generated this
//               chunk of code,
//       originalLine: The line number in the original source that
//                     corresponds to this chunk of generated code,
//       originalColumn: The column number in the original source that
//                       corresponds to this chunk of generated code,
//       name: The name of the original symbol which generated this chunk of
//             code.
//     }
//
// All properties except for `generatedLine` and `generatedColumn` can be
// `null`.
//
// `_generatedMappings` is ordered by the generated positions.
//
// `_originalMappings` is ordered by the original positions.

SourceMapConsumer.prototype.__generatedMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {
  configurable: true,
  enumerable: true,
  get: function () {
    if (!this.__generatedMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__generatedMappings;
  }
});

SourceMapConsumer.prototype.__originalMappings = null;
Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {
  configurable: true,
  enumerable: true,
  get: function () {
    if (!this.__originalMappings) {
      this._parseMappings(this._mappings, this.sourceRoot);
    }

    return this.__originalMappings;
  }
});

SourceMapConsumer.prototype._charIsMappingSeparator =
  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {
    var c = aStr.charAt(index);
    return c === ";" || c === ",";
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
SourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    throw new Error("Subclasses must implement _parseMappings");
  };

SourceMapConsumer.GENERATED_ORDER = 1;
SourceMapConsumer.ORIGINAL_ORDER = 2;

SourceMapConsumer.GREATEST_LOWER_BOUND = 1;
SourceMapConsumer.LEAST_UPPER_BOUND = 2;

/**
 * Iterate over each mapping between an original source/line/column and a
 * generated line/column in this source map.
 *
 * @param Function aCallback
 *        The function that is called with each mapping.
 * @param Object aContext
 *        Optional. If specified, this object will be the value of `this` every
 *        time that `aCallback` is called.
 * @param aOrder
 *        Either `SourceMapConsumer.GENERATED_ORDER` or
 *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to
 *        iterate over the mappings sorted by the generated file's line/column
 *        order or the original's source/line/column order, respectively. Defaults to
 *        `SourceMapConsumer.GENERATED_ORDER`.
 */
SourceMapConsumer.prototype.eachMapping =
  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {
    var context = aContext || null;
    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;

    var mappings;
    switch (order) {
    case SourceMapConsumer.GENERATED_ORDER:
      mappings = this._generatedMappings;
      break;
    case SourceMapConsumer.ORIGINAL_ORDER:
      mappings = this._originalMappings;
      break;
    default:
      throw new Error("Unknown order of iteration.");
    }

    var sourceRoot = this.sourceRoot;
    mappings.map(function (mapping) {
      var source = mapping.source === null ? null : this._sources.at(mapping.source);
      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);
      return {
        source: source,
        generatedLine: mapping.generatedLine,
        generatedColumn: mapping.generatedColumn,
        originalLine: mapping.originalLine,
        originalColumn: mapping.originalColumn,
        name: mapping.name === null ? null : this._names.at(mapping.name)
      };
    }, this).forEach(aCallback, context);
  };

/**
 * Returns all generated line and column information for the original source,
 * line, and column provided. If no column is provided, returns all mappings
 * corresponding to a either the line we are searching for or the next
 * closest line that has any mappings. Otherwise, returns all mappings
 * corresponding to the given line and either the column we are searching for
 * or the next closest column that has any offsets.
 *
 * The only argument is an object with the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number is 1-based.
 *   - column: Optional. the column number in the original source.
 *    The column number is 0-based.
 *
 * and an array of objects is returned, each with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *    line number is 1-based.
 *   - column: The column number in the generated source, or null.
 *    The column number is 0-based.
 */
SourceMapConsumer.prototype.allGeneratedPositionsFor =
  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {
    var line = util.getArg(aArgs, 'line');

    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping
    // returns the index of the closest mapping less than the needle. By
    // setting needle.originalColumn to 0, we thus find the last mapping for
    // the given line, provided such a mapping exists.
    var needle = {
      source: util.getArg(aArgs, 'source'),
      originalLine: line,
      originalColumn: util.getArg(aArgs, 'column', 0)
    };

    needle.source = this._findSourceIndex(needle.source);
    if (needle.source < 0) {
      return [];
    }

    var mappings = [];

    var index = this._findMapping(needle,
                                  this._originalMappings,
                                  "originalLine",
                                  "originalColumn",
                                  util.compareByOriginalPositions,
                                  binarySearch.LEAST_UPPER_BOUND);
    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (aArgs.column === undefined) {
        var originalLine = mapping.originalLine;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we found. Since
        // mappings are sorted, this is guaranteed to find all mappings for
        // the line we found.
        while (mapping && mapping.originalLine === originalLine) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      } else {
        var originalColumn = mapping.originalColumn;

        // Iterate until either we run out of mappings, or we run into
        // a mapping for a different line than the one we were searching for.
        // Since mappings are sorted, this is guaranteed to find all mappings for
        // the line we are searching for.
        while (mapping &&
               mapping.originalLine === line &&
               mapping.originalColumn == originalColumn) {
          mappings.push({
            line: util.getArg(mapping, 'generatedLine', null),
            column: util.getArg(mapping, 'generatedColumn', null),
            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
          });

          mapping = this._originalMappings[++index];
        }
      }
    }

    return mappings;
  };

exports.SourceMapConsumer = SourceMapConsumer;

/**
 * A BasicSourceMapConsumer instance represents a parsed source map which we can
 * query for information about the original file positions by giving it a file
 * position in the generated source.
 *
 * The first parameter is the raw source map (either as a JSON string, or
 * already parsed to an object). According to the spec, source maps have the
 * following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - sources: An array of URLs to the original source files.
 *   - names: An array of identifiers which can be referrenced by individual mappings.
 *   - sourceRoot: Optional. The URL root from which all sources are relative.
 *   - sourcesContent: Optional. An array of contents of the original source files.
 *   - mappings: A string of base64 VLQs which contain the actual mappings.
 *   - file: Optional. The generated file this source map is associated with.
 *
 * Here is an example source map, taken from the source map spec[0]:
 *
 *     {
 *       version : 3,
 *       file: "out.js",
 *       sourceRoot : "",
 *       sources: ["foo.js", "bar.js"],
 *       names: ["src", "maps", "are", "fun"],
 *       mappings: "AA,AB;;ABCDE;"
 *     }
 *
 * The second parameter, if given, is a string whose value is the URL
 * at which the source map was found.  This URL is used to compute the
 * sources array.
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#
 */
function BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  var version = util.getArg(sourceMap, 'version');
  var sources = util.getArg(sourceMap, 'sources');
  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which
  // requires the array) to play nice here.
  var names = util.getArg(sourceMap, 'names', []);
  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);
  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);
  var mappings = util.getArg(sourceMap, 'mappings');
  var file = util.getArg(sourceMap, 'file', null);

  // Once again, Sass deviates from the spec and supplies the version as a
  // string rather than a number, so we use loose equality checking here.
  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  if (sourceRoot) {
    sourceRoot = util.normalize(sourceRoot);
  }

  sources = sources
    .map(String)
    // Some source maps produce relative source paths like "./foo.js" instead of
    // "foo.js".  Normalize these first so that future comparisons will succeed.
    // See bugzil.la/1090768.
    .map(util.normalize)
    // Always ensure that absolute sources are internally stored relative to
    // the source root, if the source root is absolute. Not doing this would
    // be particularly problematic when the source root is a prefix of the
    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.
    .map(function (source) {
      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)
        ? util.relative(sourceRoot, source)
        : source;
    });

  // Pass `true` below to allow duplicate names and sources. While source maps
  // are intended to be compressed and deduplicated, the TypeScript compiler
  // sometimes generates source maps with duplicates in them. See Github issue
  // #72 and bugzil.la/889492.
  this._names = ArraySet.fromArray(names.map(String), true);
  this._sources = ArraySet.fromArray(sources, true);

  this._absoluteSources = this._sources.toArray().map(function (s) {
    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);
  });

  this.sourceRoot = sourceRoot;
  this.sourcesContent = sourcesContent;
  this._mappings = mappings;
  this._sourceMapURL = aSourceMapURL;
  this.file = file;
}

BasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
BasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;

/**
 * Utility function to find the index of a source.  Returns -1 if not
 * found.
 */
BasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {
  var relativeSource = aSource;
  if (this.sourceRoot != null) {
    relativeSource = util.relative(this.sourceRoot, relativeSource);
  }

  if (this._sources.has(relativeSource)) {
    return this._sources.indexOf(relativeSource);
  }

  // Maybe aSource is an absolute URL as returned by |sources|.  In
  // this case we can't simply undo the transform.
  var i;
  for (i = 0; i < this._absoluteSources.length; ++i) {
    if (this._absoluteSources[i] == aSource) {
      return i;
    }
  }

  return -1;
};

/**
 * Create a BasicSourceMapConsumer from a SourceMapGenerator.
 *
 * @param SourceMapGenerator aSourceMap
 *        The source map that will be consumed.
 * @param String aSourceMapURL
 *        The URL at which the source map can be found (optional)
 * @returns BasicSourceMapConsumer
 */
BasicSourceMapConsumer.fromSourceMap =
  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {
    var smc = Object.create(BasicSourceMapConsumer.prototype);

    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);
    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);
    smc.sourceRoot = aSourceMap._sourceRoot;
    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),
                                                            smc.sourceRoot);
    smc.file = aSourceMap._file;
    smc._sourceMapURL = aSourceMapURL;
    smc._absoluteSources = smc._sources.toArray().map(function (s) {
      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);
    });

    // Because we are modifying the entries (by converting string sources and
    // names to indices into the sources and names ArraySets), we have to make
    // a copy of the entry or else bad things happen. Shared mutable state
    // strikes again! See github issue #191.

    var generatedMappings = aSourceMap._mappings.toArray().slice();
    var destGeneratedMappings = smc.__generatedMappings = [];
    var destOriginalMappings = smc.__originalMappings = [];

    for (var i = 0, length = generatedMappings.length; i < length; i++) {
      var srcMapping = generatedMappings[i];
      var destMapping = new Mapping;
      destMapping.generatedLine = srcMapping.generatedLine;
      destMapping.generatedColumn = srcMapping.generatedColumn;

      if (srcMapping.source) {
        destMapping.source = sources.indexOf(srcMapping.source);
        destMapping.originalLine = srcMapping.originalLine;
        destMapping.originalColumn = srcMapping.originalColumn;

        if (srcMapping.name) {
          destMapping.name = names.indexOf(srcMapping.name);
        }

        destOriginalMappings.push(destMapping);
      }

      destGeneratedMappings.push(destMapping);
    }

    quickSort(smc.__originalMappings, util.compareByOriginalPositions);

    return smc;
  };

/**
 * The version of the source mapping spec that we are consuming.
 */
BasicSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {
  get: function () {
    return this._absoluteSources.slice();
  }
});

/**
 * Provide the JIT with a nice shape / hidden class.
 */
function Mapping() {
  this.generatedLine = 0;
  this.generatedColumn = 0;
  this.source = null;
  this.originalLine = null;
  this.originalColumn = null;
  this.name = null;
}

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
BasicSourceMapConsumer.prototype._parseMappings =
  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    var generatedLine = 1;
    var previousGeneratedColumn = 0;
    var previousOriginalLine = 0;
    var previousOriginalColumn = 0;
    var previousSource = 0;
    var previousName = 0;
    var length = aStr.length;
    var index = 0;
    var cachedSegments = {};
    var temp = {};
    var originalMappings = [];
    var generatedMappings = [];
    var mapping, str, segment, end, value;

    while (index < length) {
      if (aStr.charAt(index) === ';') {
        generatedLine++;
        index++;
        previousGeneratedColumn = 0;
      }
      else if (aStr.charAt(index) === ',') {
        index++;
      }
      else {
        mapping = new Mapping();
        mapping.generatedLine = generatedLine;

        // Because each offset is encoded relative to the previous one,
        // many segments often have the same encoding. We can exploit this
        // fact by caching the parsed variable length fields of each segment,
        // allowing us to avoid a second parse if we encounter the same
        // segment again.
        for (end = index; end < length; end++) {
          if (this._charIsMappingSeparator(aStr, end)) {
            break;
          }
        }
        str = aStr.slice(index, end);

        segment = cachedSegments[str];
        if (segment) {
          index += str.length;
        } else {
          segment = [];
          while (index < end) {
            base64VLQ.decode(aStr, index, temp);
            value = temp.value;
            index = temp.rest;
            segment.push(value);
          }

          if (segment.length === 2) {
            throw new Error('Found a source, but no line and column');
          }

          if (segment.length === 3) {
            throw new Error('Found a source and line, but no column');
          }

          cachedSegments[str] = segment;
        }

        // Generated column.
        mapping.generatedColumn = previousGeneratedColumn + segment[0];
        previousGeneratedColumn = mapping.generatedColumn;

        if (segment.length > 1) {
          // Original source.
          mapping.source = previousSource + segment[1];
          previousSource += segment[1];

          // Original line.
          mapping.originalLine = previousOriginalLine + segment[2];
          previousOriginalLine = mapping.originalLine;
          // Lines are stored 0-based
          mapping.originalLine += 1;

          // Original column.
          mapping.originalColumn = previousOriginalColumn + segment[3];
          previousOriginalColumn = mapping.originalColumn;

          if (segment.length > 4) {
            // Original name.
            mapping.name = previousName + segment[4];
            previousName += segment[4];
          }
        }

        generatedMappings.push(mapping);
        if (typeof mapping.originalLine === 'number') {
          originalMappings.push(mapping);
        }
      }
    }

    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);
    this.__generatedMappings = generatedMappings;

    quickSort(originalMappings, util.compareByOriginalPositions);
    this.__originalMappings = originalMappings;
  };

/**
 * Find the mapping that best matches the hypothetical "needle" mapping that
 * we are searching for in the given "haystack" of mappings.
 */
BasicSourceMapConsumer.prototype._findMapping =
  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,
                                         aColumnName, aComparator, aBias) {
    // To return the position we are searching for, we must first find the
    // mapping for the given position and then return the opposite position it
    // points to. Because the mappings are sorted, we can use binary search to
    // find the best mapping.

    if (aNeedle[aLineName] <= 0) {
      throw new TypeError('Line must be greater than or equal to 1, got '
                          + aNeedle[aLineName]);
    }
    if (aNeedle[aColumnName] < 0) {
      throw new TypeError('Column must be greater than or equal to 0, got '
                          + aNeedle[aColumnName]);
    }

    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);
  };

/**
 * Compute the last column for each generated mapping. The last column is
 * inclusive.
 */
BasicSourceMapConsumer.prototype.computeColumnSpans =
  function SourceMapConsumer_computeColumnSpans() {
    for (var index = 0; index < this._generatedMappings.length; ++index) {
      var mapping = this._generatedMappings[index];

      // Mappings do not contain a field for the last generated columnt. We
      // can come up with an optimistic estimate, however, by assuming that
      // mappings are contiguous (i.e. given two consecutive mappings, the
      // first mapping ends where the second one starts).
      if (index + 1 < this._generatedMappings.length) {
        var nextMapping = this._generatedMappings[index + 1];

        if (mapping.generatedLine === nextMapping.generatedLine) {
          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;
          continue;
        }
      }

      // The last mapping for each line spans the entire line.
      mapping.lastGeneratedColumn = Infinity;
    }
  };

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.  The line number
 *     is 1-based.
 *   - column: The column number in the generated source.  The column
 *     number is 0-based.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the original source, or null.  The
 *     column number is 0-based.
 *   - name: The original identifier, or null.
 */
BasicSourceMapConsumer.prototype.originalPositionFor =
  function SourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._generatedMappings,
      "generatedLine",
      "generatedColumn",
      util.compareByGeneratedPositionsDeflated,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._generatedMappings[index];

      if (mapping.generatedLine === needle.generatedLine) {
        var source = util.getArg(mapping, 'source', null);
        if (source !== null) {
          source = this._sources.at(source);
          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);
        }
        var name = util.getArg(mapping, 'name', null);
        if (name !== null) {
          name = this._names.at(name);
        }
        return {
          source: source,
          line: util.getArg(mapping, 'originalLine', null),
          column: util.getArg(mapping, 'originalColumn', null),
          name: name
        };
      }
    }

    return {
      source: null,
      line: null,
      column: null,
      name: null
    };
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
BasicSourceMapConsumer.prototype.hasContentsOfAllSources =
  function BasicSourceMapConsumer_hasContentsOfAllSources() {
    if (!this.sourcesContent) {
      return false;
    }
    return this.sourcesContent.length >= this._sources.size() &&
      !this.sourcesContent.some(function (sc) { return sc == null; });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
BasicSourceMapConsumer.prototype.sourceContentFor =
  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    if (!this.sourcesContent) {
      return null;
    }

    var index = this._findSourceIndex(aSource);
    if (index >= 0) {
      return this.sourcesContent[index];
    }

    var relativeSource = aSource;
    if (this.sourceRoot != null) {
      relativeSource = util.relative(this.sourceRoot, relativeSource);
    }

    var url;
    if (this.sourceRoot != null
        && (url = util.urlParse(this.sourceRoot))) {
      // XXX: file:// URIs and absolute paths lead to unexpected behavior for
      // many users. We can help them out when they expect file:// URIs to
      // behave like it would if they were running a local HTTP server. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.
      var fileUriAbsPath = relativeSource.replace(/^file:\/\//, "");
      if (url.scheme == "file"
          && this._sources.has(fileUriAbsPath)) {
        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]
      }

      if ((!url.path || url.path == "/")
          && this._sources.has("/" + relativeSource)) {
        return this.sourcesContent[this._sources.indexOf("/" + relativeSource)];
      }
    }

    // This function is used recursively from
    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we
    // don't want to throw if we can't find the source - we just want to
    // return null, so we provide a flag to exit gracefully.
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + relativeSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number
 *     is 1-based.
 *   - column: The column number in the original source.  The column
 *     number is 0-based.
 *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or
 *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the generated source, or null.
 *     The column number is 0-based.
 */
BasicSourceMapConsumer.prototype.generatedPositionFor =
  function SourceMapConsumer_generatedPositionFor(aArgs) {
    var source = util.getArg(aArgs, 'source');
    source = this._findSourceIndex(source);
    if (source < 0) {
      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }

    var needle = {
      source: source,
      originalLine: util.getArg(aArgs, 'line'),
      originalColumn: util.getArg(aArgs, 'column')
    };

    var index = this._findMapping(
      needle,
      this._originalMappings,
      "originalLine",
      "originalColumn",
      util.compareByOriginalPositions,
      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)
    );

    if (index >= 0) {
      var mapping = this._originalMappings[index];

      if (mapping.source === needle.source) {
        return {
          line: util.getArg(mapping, 'generatedLine', null),
          column: util.getArg(mapping, 'generatedColumn', null),
          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)
        };
      }
    }

    return {
      line: null,
      column: null,
      lastColumn: null
    };
  };

exports.BasicSourceMapConsumer = BasicSourceMapConsumer;

/**
 * An IndexedSourceMapConsumer instance represents a parsed source map which
 * we can query for information. It differs from BasicSourceMapConsumer in
 * that it takes "indexed" source maps (i.e. ones with a "sections" field) as
 * input.
 *
 * The first parameter is a raw source map (either as a JSON string, or already
 * parsed to an object). According to the spec for indexed source maps, they
 * have the following attributes:
 *
 *   - version: Which version of the source map spec this map is following.
 *   - file: Optional. The generated file this source map is associated with.
 *   - sections: A list of section definitions.
 *
 * Each value under the "sections" field has two fields:
 *   - offset: The offset into the original specified at which this section
 *       begins to apply, defined as an object with a "line" and "column"
 *       field.
 *   - map: A source map definition. This source map could also be indexed,
 *       but doesn't have to be.
 *
 * Instead of the "map" field, it's also possible to have a "url" field
 * specifying a URL to retrieve a source map from, but that's currently
 * unsupported.
 *
 * Here's an example source map, taken from the source map spec[0], but
 * modified to omit a section which uses the "url" field.
 *
 *  {
 *    version : 3,
 *    file: "app.js",
 *    sections: [{
 *      offset: {line:100, column:10},
 *      map: {
 *        version : 3,
 *        file: "section.js",
 *        sources: ["foo.js", "bar.js"],
 *        names: ["src", "maps", "are", "fun"],
 *        mappings: "AAAA,E;;ABCDE;"
 *      }
 *    }],
 *  }
 *
 * The second parameter, if given, is a string whose value is the URL
 * at which the source map was found.  This URL is used to compute the
 * sources array.
 *
 * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt
 */
function IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {
  var sourceMap = aSourceMap;
  if (typeof aSourceMap === 'string') {
    sourceMap = util.parseSourceMapInput(aSourceMap);
  }

  var version = util.getArg(sourceMap, 'version');
  var sections = util.getArg(sourceMap, 'sections');

  if (version != this._version) {
    throw new Error('Unsupported version: ' + version);
  }

  this._sources = new ArraySet();
  this._names = new ArraySet();

  var lastOffset = {
    line: -1,
    column: 0
  };
  this._sections = sections.map(function (s) {
    if (s.url) {
      // The url field will require support for asynchronicity.
      // See https://github.com/mozilla/source-map/issues/16
      throw new Error('Support for url field in sections not implemented.');
    }
    var offset = util.getArg(s, 'offset');
    var offsetLine = util.getArg(offset, 'line');
    var offsetColumn = util.getArg(offset, 'column');

    if (offsetLine < lastOffset.line ||
        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {
      throw new Error('Section offsets must be ordered and non-overlapping.');
    }
    lastOffset = offset;

    return {
      generatedOffset: {
        // The offset fields are 0-based, but we use 1-based indices when
        // encoding/decoding from VLQ.
        generatedLine: offsetLine + 1,
        generatedColumn: offsetColumn + 1
      },
      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)
    }
  });
}

IndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);
IndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;

/**
 * The version of the source mapping spec that we are consuming.
 */
IndexedSourceMapConsumer.prototype._version = 3;

/**
 * The list of original sources.
 */
Object.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {
  get: function () {
    var sources = [];
    for (var i = 0; i < this._sections.length; i++) {
      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {
        sources.push(this._sections[i].consumer.sources[j]);
      }
    }
    return sources;
  }
});

/**
 * Returns the original source, line, and column information for the generated
 * source's line and column positions provided. The only argument is an object
 * with the following properties:
 *
 *   - line: The line number in the generated source.  The line number
 *     is 1-based.
 *   - column: The column number in the generated source.  The column
 *     number is 0-based.
 *
 * and an object is returned with the following properties:
 *
 *   - source: The original source file, or null.
 *   - line: The line number in the original source, or null.  The
 *     line number is 1-based.
 *   - column: The column number in the original source, or null.  The
 *     column number is 0-based.
 *   - name: The original identifier, or null.
 */
IndexedSourceMapConsumer.prototype.originalPositionFor =
  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {
    var needle = {
      generatedLine: util.getArg(aArgs, 'line'),
      generatedColumn: util.getArg(aArgs, 'column')
    };

    // Find the section containing the generated position we're trying to map
    // to an original position.
    var sectionIndex = binarySearch.search(needle, this._sections,
      function(needle, section) {
        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;
        if (cmp) {
          return cmp;
        }

        return (needle.generatedColumn -
                section.generatedOffset.generatedColumn);
      });
    var section = this._sections[sectionIndex];

    if (!section) {
      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }

    return section.consumer.originalPositionFor({
      line: needle.generatedLine -
        (section.generatedOffset.generatedLine - 1),
      column: needle.generatedColumn -
        (section.generatedOffset.generatedLine === needle.generatedLine
         ? section.generatedOffset.generatedColumn - 1
         : 0),
      bias: aArgs.bias
    });
  };

/**
 * Return true if we have the source content for every source in the source
 * map, false otherwise.
 */
IndexedSourceMapConsumer.prototype.hasContentsOfAllSources =
  function IndexedSourceMapConsumer_hasContentsOfAllSources() {
    return this._sections.every(function (s) {
      return s.consumer.hasContentsOfAllSources();
    });
  };

/**
 * Returns the original source content. The only argument is the url of the
 * original source file. Returns null if no original source content is
 * available.
 */
IndexedSourceMapConsumer.prototype.sourceContentFor =
  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      var content = section.consumer.sourceContentFor(aSource, true);
      if (content) {
        return content;
      }
    }
    if (nullOnMissing) {
      return null;
    }
    else {
      throw new Error('"' + aSource + '" is not in the SourceMap.');
    }
  };

/**
 * Returns the generated line and column information for the original source,
 * line, and column positions provided. The only argument is an object with
 * the following properties:
 *
 *   - source: The filename of the original source.
 *   - line: The line number in the original source.  The line number
 *     is 1-based.
 *   - column: The column number in the original source.  The column
 *     number is 0-based.
 *
 * and an object is returned with the following properties:
 *
 *   - line: The line number in the generated source, or null.  The
 *     line number is 1-based. 
 *   - column: The column number in the generated source, or null.
 *     The column number is 0-based.
 */
IndexedSourceMapConsumer.prototype.generatedPositionFor =
  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];

      // Only consider this section if the requested source is in the list of
      // sources of the consumer.
      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {
        continue;
      }
      var generatedPosition = section.consumer.generatedPositionFor(aArgs);
      if (generatedPosition) {
        var ret = {
          line: generatedPosition.line +
            (section.generatedOffset.generatedLine - 1),
          column: generatedPosition.column +
            (section.generatedOffset.generatedLine === generatedPosition.line
             ? section.generatedOffset.generatedColumn - 1
             : 0)
        };
        return ret;
      }
    }

    return {
      line: null,
      column: null
    };
  };

/**
 * Parse the mappings in a string in to a data structure which we can easily
 * query (the ordered arrays in the `this.__generatedMappings` and
 * `this.__originalMappings` properties).
 */
IndexedSourceMapConsumer.prototype._parseMappings =
  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {
    this.__generatedMappings = [];
    this.__originalMappings = [];
    for (var i = 0; i < this._sections.length; i++) {
      var section = this._sections[i];
      var sectionMappings = section.consumer._generatedMappings;
      for (var j = 0; j < sectionMappings.length; j++) {
        var mapping = sectionMappings[j];

        var source = section.consumer._sources.at(mapping.source);
        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);
        this._sources.add(source);
        source = this._sources.indexOf(source);

        var name = null;
        if (mapping.name) {
          name = section.consumer._names.at(mapping.name);
          this._names.add(name);
          name = this._names.indexOf(name);
        }

        // The mappings coming from the consumer for the section have
        // generated positions relative to the start of the section, so we
        // need to offset them to be relative to the start of the concatenated
        // generated file.
        var adjustedMapping = {
          source: source,
          generatedLine: mapping.generatedLine +
            (section.generatedOffset.generatedLine - 1),
          generatedColumn: mapping.generatedColumn +
            (section.generatedOffset.generatedLine === mapping.generatedLine
            ? section.generatedOffset.generatedColumn - 1
            : 0),
          originalLine: mapping.originalLine,
          originalColumn: mapping.originalColumn,
          name: name
        };

        this.__generatedMappings.push(adjustedMapping);
        if (typeof adjustedMapping.originalLine === 'number') {
          this.__originalMappings.push(adjustedMapping);
        }
      }
    }

    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);
    quickSort(this.__originalMappings, util.compareByOriginalPositions);
  };

exports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;


/***/ }),
/* 191 */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

exports.GREATEST_LOWER_BOUND = 1;
exports.LEAST_UPPER_BOUND = 2;

/**
 * Recursive implementation of binary search.
 *
 * @param aLow Indices here and lower do not contain the needle.
 * @param aHigh Indices here and higher do not contain the needle.
 * @param aNeedle The element being searched for.
 * @param aHaystack The non-empty array being searched.
 * @param aCompare Function which takes two elements and returns -1, 0, or 1.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 */
function recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {
  // This function terminates when one of the following is true:
  //
  //   1. We find the exact element we are looking for.
  //
  //   2. We did not find the exact element, but we can return the index of
  //      the next-closest element.
  //
  //   3. We did not find the exact element, and there is no next-closest
  //      element than the one we are searching for, so we return -1.
  var mid = Math.floor((aHigh - aLow) / 2) + aLow;
  var cmp = aCompare(aNeedle, aHaystack[mid], true);
  if (cmp === 0) {
    // Found the element we are looking for.
    return mid;
  }
  else if (cmp > 0) {
    // Our needle is greater than aHaystack[mid].
    if (aHigh - mid > 1) {
      // The element is in the upper half.
      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);
    }

    // The exact needle element was not found in this haystack. Determine if
    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return aHigh < aHaystack.length ? aHigh : -1;
    } else {
      return mid;
    }
  }
  else {
    // Our needle is less than aHaystack[mid].
    if (mid - aLow > 1) {
      // The element is in the lower half.
      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);
    }

    // we are in termination case (3) or (2) and return the appropriate thing.
    if (aBias == exports.LEAST_UPPER_BOUND) {
      return mid;
    } else {
      return aLow < 0 ? -1 : aLow;
    }
  }
}

/**
 * This is an implementation of binary search which will always try and return
 * the index of the closest element if there is no exact hit. This is because
 * mappings between original and generated line/col pairs are single points,
 * and there is an implicit region between each of them, so a miss just means
 * that you aren't on the very start of a region.
 *
 * @param aNeedle The element you are looking for.
 * @param aHaystack The array that is being searched.
 * @param aCompare A function which takes the needle and an element in the
 *     array and returns -1, 0, or 1 depending on whether the needle is less
 *     than, equal to, or greater than the element, respectively.
 * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or
 *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the
 *     closest element that is smaller than or greater than the one we are
 *     searching for, respectively, if the exact element cannot be found.
 *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.
 */
exports.search = function search(aNeedle, aHaystack, aCompare, aBias) {
  if (aHaystack.length === 0) {
    return -1;
  }

  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,
                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);
  if (index < 0) {
    return -1;
  }

  // We have found either the exact element, or the next-closest element than
  // the one we are searching for. However, there may be more than one such
  // element. Make sure we always return the smallest of these.
  while (index - 1 >= 0) {
    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {
      break;
    }
    --index;
  }

  return index;
};


/***/ }),
/* 192 */
/***/ (function(module, exports) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

// It turns out that some (most?) JavaScript engines don't self-host
// `Array.prototype.sort`. This makes sense because C++ will likely remain
// faster than JS when doing raw CPU-intensive sorting. However, when using a
// custom comparator function, calling back and forth between the VM's C++ and
// JIT'd JS is rather slow *and* loses JIT type information, resulting in
// worse generated code for the comparator function than would be optimal. In
// fact, when sorting with a comparator, these costs outweigh the benefits of
// sorting in C++. By using our own JS-implemented Quick Sort (below), we get
// a ~3500ms mean speed-up in `bench/bench.html`.

/**
 * Swap the elements indexed by `x` and `y` in the array `ary`.
 *
 * @param {Array} ary
 *        The array.
 * @param {Number} x
 *        The index of the first item.
 * @param {Number} y
 *        The index of the second item.
 */
function swap(ary, x, y) {
  var temp = ary[x];
  ary[x] = ary[y];
  ary[y] = temp;
}

/**
 * Returns a random integer within the range `low .. high` inclusive.
 *
 * @param {Number} low
 *        The lower bound on the range.
 * @param {Number} high
 *        The upper bound on the range.
 */
function randomIntInRange(low, high) {
  return Math.round(low + (Math.random() * (high - low)));
}

/**
 * The Quick Sort algorithm.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 * @param {Number} p
 *        Start index of the array
 * @param {Number} r
 *        End index of the array
 */
function doQuickSort(ary, comparator, p, r) {
  // If our lower bound is less than our upper bound, we (1) partition the
  // array into two pieces and (2) recurse on each half. If it is not, this is
  // the empty array and our base case.

  if (p < r) {
    // (1) Partitioning.
    //
    // The partitioning chooses a pivot between `p` and `r` and moves all
    // elements that are less than or equal to the pivot to the before it, and
    // all the elements that are greater than it after it. The effect is that
    // once partition is done, the pivot is in the exact place it will be when
    // the array is put in sorted order, and it will not need to be moved
    // again. This runs in O(n) time.

    // Always choose a random pivot so that an input array which is reverse
    // sorted does not cause O(n^2) running time.
    var pivotIndex = randomIntInRange(p, r);
    var i = p - 1;

    swap(ary, pivotIndex, r);
    var pivot = ary[r];

    // Immediately after `j` is incremented in this loop, the following hold
    // true:
    //
    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.
    //
    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.
    for (var j = p; j < r; j++) {
      if (comparator(ary[j], pivot) <= 0) {
        i += 1;
        swap(ary, i, j);
      }
    }

    swap(ary, i + 1, j);
    var q = i + 1;

    // (2) Recurse on each half.

    doQuickSort(ary, comparator, p, q - 1);
    doQuickSort(ary, comparator, q + 1, r);
  }
}

/**
 * Sort the given array in-place with the given comparator function.
 *
 * @param {Array} ary
 *        An array to sort.
 * @param {function} comparator
 *        Function to use to compare two items.
 */
exports.quickSort = function (ary, comparator) {
  doQuickSort(ary, comparator, 0, ary.length - 1);
};


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

/* -*- Mode: js; js-indent-level: 2; -*- */
/*
 * Copyright 2011 Mozilla Foundation and contributors
 * Licensed under the New BSD license. See LICENSE or:
 * http://opensource.org/licenses/BSD-3-Clause
 */

var SourceMapGenerator = __webpack_require__(60).SourceMapGenerator;
var util = __webpack_require__(22);

// Matches a Windows-style `\r\n` newline or a `\n` newline used by all other
// operating systems these days (capturing the result).
var REGEX_NEWLINE = /(\r?\n)/;

// Newline character code for charCodeAt() comparisons
var NEWLINE_CODE = 10;

// Private symbol for identifying `SourceNode`s when multiple versions of
// the source-map library are loaded. This MUST NOT CHANGE across
// versions!
var isSourceNode = "$$$isSourceNode$$$";

/**
 * SourceNodes provide a way to abstract over interpolating/concatenating
 * snippets of generated JavaScript source code while maintaining the line and
 * column information associated with the original source code.
 *
 * @param aLine The original line number.
 * @param aColumn The original column number.
 * @param aSource The original source's filename.
 * @param aChunks Optional. An array of strings which are snippets of
 *        generated JS, or other SourceNodes.
 * @param aName The original identifier.
 */
function SourceNode(aLine, aColumn, aSource, aChunks, aName) {
  this.children = [];
  this.sourceContents = {};
  this.line = aLine == null ? null : aLine;
  this.column = aColumn == null ? null : aColumn;
  this.source = aSource == null ? null : aSource;
  this.name = aName == null ? null : aName;
  this[isSourceNode] = true;
  if (aChunks != null) this.add(aChunks);
}

/**
 * Creates a SourceNode from generated code and a SourceMapConsumer.
 *
 * @param aGeneratedCode The generated code
 * @param aSourceMapConsumer The SourceMap for the generated code
 * @param aRelativePath Optional. The path that relative sources in the
 *        SourceMapConsumer should be relative to.
 */
SourceNode.fromStringWithSourceMap =
  function SourceNode_fromStringWithSourceMap(aGeneratedCode, aSourceMapConsumer, aRelativePath) {
    // The SourceNode we want to fill with the generated code
    // and the SourceMap
    var node = new SourceNode();

    // All even indices of this array are one line of the generated code,
    // while all odd indices are the newlines between two adjacent lines
    // (since `REGEX_NEWLINE` captures its match).
    // Processed fragments are accessed by calling `shiftNextLine`.
    var remainingLines = aGeneratedCode.split(REGEX_NEWLINE);
    var remainingLinesIndex = 0;
    var shiftNextLine = function() {
      var lineContents = getNextLine();
      // The last line of a file might not have a newline.
      var newLine = getNextLine() || "";
      return lineContents + newLine;

      function getNextLine() {
        return remainingLinesIndex < remainingLines.length ?
            remainingLines[remainingLinesIndex++] : undefined;
      }
    };

    // We need to remember the position of "remainingLines"
    var lastGeneratedLine = 1, lastGeneratedColumn = 0;

    // The generate SourceNodes we need a code range.
    // To extract it current and last mapping is used.
    // Here we store the last mapping.
    var lastMapping = null;

    aSourceMapConsumer.eachMapping(function (mapping) {
      if (lastMapping !== null) {
        // We add the code from "lastMapping" to "mapping":
        // First check if there is a new line in between.
        if (lastGeneratedLine < mapping.generatedLine) {
          // Associate first line with "lastMapping"
          addMappingWithCode(lastMapping, shiftNextLine());
          lastGeneratedLine++;
          lastGeneratedColumn = 0;
          // The remaining code is added without mapping
        } else {
          // There is no new line in between.
          // Associate the code between "lastGeneratedColumn" and
          // "mapping.generatedColumn" with "lastMapping"
          var nextLine = remainingLines[remainingLinesIndex] || '';
          var code = nextLine.substr(0, mapping.generatedColumn -
                                        lastGeneratedColumn);
          remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn -
                                              lastGeneratedColumn);
          lastGeneratedColumn = mapping.generatedColumn;
          addMappingWithCode(lastMapping, code);
          // No more remaining code, continue
          lastMapping = mapping;
          return;
        }
      }
      // We add the generated code until the first mapping
      // to the SourceNode without any mapping.
      // Each line is added as separate string.
      while (lastGeneratedLine < mapping.generatedLine) {
        node.add(shiftNextLine());
        lastGeneratedLine++;
      }
      if (lastGeneratedColumn < mapping.generatedColumn) {
        var nextLine = remainingLines[remainingLinesIndex] || '';
        node.add(nextLine.substr(0, mapping.generatedColumn));
        remainingLines[remainingLinesIndex] = nextLine.substr(mapping.generatedColumn);
        lastGeneratedColumn = mapping.generatedColumn;
      }
      lastMapping = mapping;
    }, this);
    // We have processed all mappings.
    if (remainingLinesIndex < remainingLines.length) {
      if (lastMapping) {
        // Associate the remaining code in the current line with "lastMapping"
        addMappingWithCode(lastMapping, shiftNextLine());
      }
      // and add the remaining lines without any mapping
      node.add(remainingLines.splice(remainingLinesIndex).join(""));
    }

    // Copy sourcesContent into SourceNode
    aSourceMapConsumer.sources.forEach(function (sourceFile) {
      var content = aSourceMapConsumer.sourceContentFor(sourceFile);
      if (content != null) {
        if (aRelativePath != null) {
          sourceFile = util.join(aRelativePath, sourceFile);
        }
        node.setSourceContent(sourceFile, content);
      }
    });

    return node;

    function addMappingWithCode(mapping, code) {
      if (mapping === null || mapping.source === undefined) {
        node.add(code);
      } else {
        var source = aRelativePath
          ? util.join(aRelativePath, mapping.source)
          : mapping.source;
        node.add(new SourceNode(mapping.originalLine,
                                mapping.originalColumn,
                                source,
                                code,
                                mapping.name));
      }
    }
  };

/**
 * Add a chunk of generated JS to this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.add = function SourceNode_add(aChunk) {
  if (Array.isArray(aChunk)) {
    aChunk.forEach(function (chunk) {
      this.add(chunk);
    }, this);
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    if (aChunk) {
      this.children.push(aChunk);
    }
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Add a chunk of generated JS to the beginning of this source node.
 *
 * @param aChunk A string snippet of generated JS code, another instance of
 *        SourceNode, or an array where each member is one of those things.
 */
SourceNode.prototype.prepend = function SourceNode_prepend(aChunk) {
  if (Array.isArray(aChunk)) {
    for (var i = aChunk.length-1; i >= 0; i--) {
      this.prepend(aChunk[i]);
    }
  }
  else if (aChunk[isSourceNode] || typeof aChunk === "string") {
    this.children.unshift(aChunk);
  }
  else {
    throw new TypeError(
      "Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + aChunk
    );
  }
  return this;
};

/**
 * Walk over the tree of JS snippets in this node and its children. The
 * walking function is called once for each snippet of JS and is passed that
 * snippet and the its original associated source's line/column location.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walk = function SourceNode_walk(aFn) {
  var chunk;
  for (var i = 0, len = this.children.length; i < len; i++) {
    chunk = this.children[i];
    if (chunk[isSourceNode]) {
      chunk.walk(aFn);
    }
    else {
      if (chunk !== '') {
        aFn(chunk, { source: this.source,
                     line: this.line,
                     column: this.column,
                     name: this.name });
      }
    }
  }
};

/**
 * Like `String.prototype.join` except for SourceNodes. Inserts `aStr` between
 * each of `this.children`.
 *
 * @param aSep The separator.
 */
SourceNode.prototype.join = function SourceNode_join(aSep) {
  var newChildren;
  var i;
  var len = this.children.length;
  if (len > 0) {
    newChildren = [];
    for (i = 0; i < len-1; i++) {
      newChildren.push(this.children[i]);
      newChildren.push(aSep);
    }
    newChildren.push(this.children[i]);
    this.children = newChildren;
  }
  return this;
};

/**
 * Call String.prototype.replace on the very right-most source snippet. Useful
 * for trimming whitespace from the end of a source node, etc.
 *
 * @param aPattern The pattern to replace.
 * @param aReplacement The thing to replace the pattern with.
 */
SourceNode.prototype.replaceRight = function SourceNode_replaceRight(aPattern, aReplacement) {
  var lastChild = this.children[this.children.length - 1];
  if (lastChild[isSourceNode]) {
    lastChild.replaceRight(aPattern, aReplacement);
  }
  else if (typeof lastChild === 'string') {
    this.children[this.children.length - 1] = lastChild.replace(aPattern, aReplacement);
  }
  else {
    this.children.push(''.replace(aPattern, aReplacement));
  }
  return this;
};

/**
 * Set the source content for a source file. This will be added to the SourceMapGenerator
 * in the sourcesContent field.
 *
 * @param aSourceFile The filename of the source file
 * @param aSourceContent The content of the source file
 */
SourceNode.prototype.setSourceContent =
  function SourceNode_setSourceContent(aSourceFile, aSourceContent) {
    this.sourceContents[util.toSetString(aSourceFile)] = aSourceContent;
  };

/**
 * Walk over the tree of SourceNodes. The walking function is called for each
 * source file content and is passed the filename and source content.
 *
 * @param aFn The traversal function.
 */
SourceNode.prototype.walkSourceContents =
  function SourceNode_walkSourceContents(aFn) {
    for (var i = 0, len = this.children.length; i < len; i++) {
      if (this.children[i][isSourceNode]) {
        this.children[i].walkSourceContents(aFn);
      }
    }

    var sources = Object.keys(this.sourceContents);
    for (var i = 0, len = sources.length; i < len; i++) {
      aFn(util.fromSetString(sources[i]), this.sourceContents[sources[i]]);
    }
  };

/**
 * Return the string representation of this source node. Walks over the tree
 * and concatenates all the various snippets together to one string.
 */
SourceNode.prototype.toString = function SourceNode_toString() {
  var str = "";
  this.walk(function (chunk) {
    str += chunk;
  });
  return str;
};

/**
 * Returns the string representation of this source node along with a source
 * map.
 */
SourceNode.prototype.toStringWithSourceMap = function SourceNode_toStringWithSourceMap(aArgs) {
  var generated = {
    code: "",
    line: 1,
    column: 0
  };
  var map = new SourceMapGenerator(aArgs);
  var sourceMappingActive = false;
  var lastOriginalSource = null;
  var lastOriginalLine = null;
  var lastOriginalColumn = null;
  var lastOriginalName = null;
  this.walk(function (chunk, original) {
    generated.code += chunk;
    if (original.source !== null
        && original.line !== null
        && original.column !== null) {
      if(lastOriginalSource !== original.source
         || lastOriginalLine !== original.line
         || lastOriginalColumn !== original.column
         || lastOriginalName !== original.name) {
        map.addMapping({
          source: original.source,
          original: {
            line: original.line,
            column: original.column
          },
          generated: {
            line: generated.line,
            column: generated.column
          },
          name: original.name
        });
      }
      lastOriginalSource = original.source;
      lastOriginalLine = original.line;
      lastOriginalColumn = original.column;
      lastOriginalName = original.name;
      sourceMappingActive = true;
    } else if (sourceMappingActive) {
      map.addMapping({
        generated: {
          line: generated.line,
          column: generated.column
        }
      });
      lastOriginalSource = null;
      sourceMappingActive = false;
    }
    for (var idx = 0, length = chunk.length; idx < length; idx++) {
      if (chunk.charCodeAt(idx) === NEWLINE_CODE) {
        generated.line++;
        generated.column = 0;
        // Mappings end at eol
        if (idx + 1 === length) {
          lastOriginalSource = null;
          sourceMappingActive = false;
        } else if (sourceMappingActive) {
          map.addMapping({
            source: original.source,
            original: {
              line: original.line,
              column: original.column
            },
            generated: {
              line: generated.line,
              column: generated.column
            },
            name: original.name
          });
        }
      } else {
        generated.column++;
      }
    }
  });
  this.walkSourceContents(function (sourceFile, sourceContent) {
    map.setSourceContent(sourceFile, sourceContent);
  });

  return { code: generated.code, map: map };
};

exports.SourceNode = SourceNode;


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _sourceMap = _interopRequireDefault(__webpack_require__(38));

var _path = _interopRequireDefault(__webpack_require__(5));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MapGenerator =
/*#__PURE__*/
function () {
  function MapGenerator(stringify, root, opts) {
    this.stringify = stringify;
    this.mapOpts = opts.map || {};
    this.root = root;
    this.opts = opts;
  }

  var _proto = MapGenerator.prototype;

  _proto.isMap = function isMap() {
    if (typeof this.opts.map !== 'undefined') {
      return !!this.opts.map;
    }

    return this.previous().length > 0;
  };

  _proto.previous = function previous() {
    var _this = this;

    if (!this.previousMaps) {
      this.previousMaps = [];
      this.root.walk(function (node) {
        if (node.source && node.source.input.map) {
          var map = node.source.input.map;

          if (_this.previousMaps.indexOf(map) === -1) {
            _this.previousMaps.push(map);
          }
        }
      });
    }

    return this.previousMaps;
  };

  _proto.isInline = function isInline() {
    if (typeof this.mapOpts.inline !== 'undefined') {
      return this.mapOpts.inline;
    }

    var annotation = this.mapOpts.annotation;

    if (typeof annotation !== 'undefined' && annotation !== true) {
      return false;
    }

    if (this.previous().length) {
      return this.previous().some(function (i) {
        return i.inline;
      });
    }

    return true;
  };

  _proto.isSourcesContent = function isSourcesContent() {
    if (typeof this.mapOpts.sourcesContent !== 'undefined') {
      return this.mapOpts.sourcesContent;
    }

    if (this.previous().length) {
      return this.previous().some(function (i) {
        return i.withContent();
      });
    }

    return true;
  };

  _proto.clearAnnotation = function clearAnnotation() {
    if (this.mapOpts.annotation === false) return;
    var node;

    for (var i = this.root.nodes.length - 1; i >= 0; i--) {
      node = this.root.nodes[i];
      if (node.type !== 'comment') continue;

      if (node.text.indexOf('# sourceMappingURL=') === 0) {
        this.root.removeChild(i);
      }
    }
  };

  _proto.setSourcesContent = function setSourcesContent() {
    var _this2 = this;

    var already = {};
    this.root.walk(function (node) {
      if (node.source) {
        var from = node.source.input.from;

        if (from && !already[from]) {
          already[from] = true;

          var relative = _this2.relative(from);

          _this2.map.setSourceContent(relative, node.source.input.css);
        }
      }
    });
  };

  _proto.applyPrevMaps = function applyPrevMaps() {
    for (var _iterator = this.previous(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var prev = _ref;
      var from = this.relative(prev.file);

      var root = prev.root || _path.default.dirname(prev.file);

      var map = void 0;

      if (this.mapOpts.sourcesContent === false) {
        map = new _sourceMap.default.SourceMapConsumer(prev.text);

        if (map.sourcesContent) {
          map.sourcesContent = map.sourcesContent.map(function () {
            return null;
          });
        }
      } else {
        map = prev.consumer();
      }

      this.map.applySourceMap(map, from, this.relative(root));
    }
  };

  _proto.isAnnotation = function isAnnotation() {
    if (this.isInline()) {
      return true;
    }

    if (typeof this.mapOpts.annotation !== 'undefined') {
      return this.mapOpts.annotation;
    }

    if (this.previous().length) {
      return this.previous().some(function (i) {
        return i.annotation;
      });
    }

    return true;
  };

  _proto.toBase64 = function toBase64(str) {
    if (Buffer) {
      return Buffer.from(str).toString('base64');
    }

    return window.btoa(unescape(encodeURIComponent(str)));
  };

  _proto.addAnnotation = function addAnnotation() {
    var content;

    if (this.isInline()) {
      content = 'data:application/json;base64,' + this.toBase64(this.map.toString());
    } else if (typeof this.mapOpts.annotation === 'string') {
      content = this.mapOpts.annotation;
    } else {
      content = this.outputFile() + '.map';
    }

    var eol = '\n';
    if (this.css.indexOf('\r\n') !== -1) eol = '\r\n';
    this.css += eol + '/*# sourceMappingURL=' + content + ' */';
  };

  _proto.outputFile = function outputFile() {
    if (this.opts.to) {
      return this.relative(this.opts.to);
    }

    if (this.opts.from) {
      return this.relative(this.opts.from);
    }

    return 'to.css';
  };

  _proto.generateMap = function generateMap() {
    this.generateString();
    if (this.isSourcesContent()) this.setSourcesContent();
    if (this.previous().length > 0) this.applyPrevMaps();
    if (this.isAnnotation()) this.addAnnotation();

    if (this.isInline()) {
      return [this.css];
    }

    return [this.css, this.map];
  };

  _proto.relative = function relative(file) {
    if (file.indexOf('<') === 0) return file;
    if (/^\w+:\/\//.test(file)) return file;
    var from = this.opts.to ? _path.default.dirname(this.opts.to) : '.';

    if (typeof this.mapOpts.annotation === 'string') {
      from = _path.default.dirname(_path.default.resolve(from, this.mapOpts.annotation));
    }

    file = _path.default.relative(from, file);

    if (_path.default.sep === '\\') {
      return file.replace(/\\/g, '/');
    }

    return file;
  };

  _proto.sourcePath = function sourcePath(node) {
    if (this.mapOpts.from) {
      return this.mapOpts.from;
    }

    return this.relative(node.source.input.from);
  };

  _proto.generateString = function generateString() {
    var _this3 = this;

    this.css = '';
    this.map = new _sourceMap.default.SourceMapGenerator({
      file: this.outputFile()
    });
    var line = 1;
    var column = 1;
    var lines, last;
    this.stringify(this.root, function (str, node, type) {
      _this3.css += str;

      if (node && type !== 'end') {
        if (node.source && node.source.start) {
          _this3.map.addMapping({
            source: _this3.sourcePath(node),
            generated: {
              line: line,
              column: column - 1
            },
            original: {
              line: node.source.start.line,
              column: node.source.start.column - 1
            }
          });
        } else {
          _this3.map.addMapping({
            source: '<no source>',
            original: {
              line: 1,
              column: 0
            },
            generated: {
              line: line,
              column: column - 1
            }
          });
        }
      }

      lines = str.match(/\n/g);

      if (lines) {
        line += lines.length;
        last = str.lastIndexOf('\n');
        column = str.length - last;
      } else {
        column += str.length;
      }

      if (node && type !== 'start') {
        var p = node.parent || {
          raws: {}
        };

        if (node.type !== 'decl' || node !== p.last || p.raws.semicolon) {
          if (node.source && node.source.end) {
            _this3.map.addMapping({
              source: _this3.sourcePath(node),
              generated: {
                line: line,
                column: column - 2
              },
              original: {
                line: node.source.end.line,
                column: node.source.end.column - 1
              }
            });
          } else {
            _this3.map.addMapping({
              source: '<no source>',
              original: {
                line: 1,
                column: 0
              },
              generated: {
                line: line,
                column: column - 1
              }
            });
          }
        }
      }
    });
  };

  _proto.generate = function generate() {
    this.clearAnnotation();

    if (this.isMap()) {
      return this.generateMap();
    }

    var result = '';
    this.stringify(this.root, function (i) {
      result += i;
    });
    return [result];
  };

  return MapGenerator;
}();

var _default = MapGenerator;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = warnOnce;
var printed = {};

function warnOnce(message) {
  if (printed[message]) return;
  printed[message] = true;

  if (typeof console !== 'undefined' && console.warn) {
    console.warn(message);
  }
}

module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm4tb25jZS5lczYiXSwibmFtZXMiOlsicHJpbnRlZCIsIndhcm5PbmNlIiwibWVzc2FnZSIsImNvbnNvbGUiLCJ3YXJuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBSUEsT0FBTyxHQUFHLEVBQWQ7O0FBRWUsU0FBU0MsUUFBVCxDQUFtQkMsT0FBbkIsRUFBNEI7QUFDekMsTUFBSUYsT0FBTyxDQUFDRSxPQUFELENBQVgsRUFBc0I7QUFDdEJGLEVBQUFBLE9BQU8sQ0FBQ0UsT0FBRCxDQUFQLEdBQW1CLElBQW5COztBQUVBLE1BQUksT0FBT0MsT0FBUCxLQUFtQixXQUFuQixJQUFrQ0EsT0FBTyxDQUFDQyxJQUE5QyxFQUFvRDtBQUNsREQsSUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWFGLE9BQWI7QUFDRDtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsibGV0IHByaW50ZWQgPSB7IH1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2Fybk9uY2UgKG1lc3NhZ2UpIHtcbiAgaWYgKHByaW50ZWRbbWVzc2FnZV0pIHJldHVyblxuICBwcmludGVkW21lc3NhZ2VdID0gdHJ1ZVxuXG4gIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS53YXJuKSB7XG4gICAgY29uc29sZS53YXJuKG1lc3NhZ2UpXG4gIH1cbn1cbiJdLCJmaWxlIjoid2Fybi1vbmNlLmpzIn0=


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _warning = _interopRequireDefault(__webpack_require__(197));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * Provides the result of the PostCSS transformations.
 *
 * A Result instance is returned by {@link LazyResult#then}
 * or {@link Root#toResult} methods.
 *
 * @example
 * postcss([autoprefixer]).process(css).then(result => {
 *  console.log(result.css)
 * })
 *
 * @example
 * const result2 = postcss.parse(css).toResult()
 */
var Result =
/*#__PURE__*/
function () {
  /**
   * @param {Processor} processor Processor used for this transformation.
   * @param {Root}      root      Root node after all transformations.
   * @param {processOptions} opts Options from the {@link Processor#process}
   *                              or {@link Root#toResult}.
   */
  function Result(processor, root, opts) {
    /**
     * The Processor instance used for this transformation.
     *
     * @type {Processor}
     *
     * @example
     * for (const plugin of result.processor.plugins) {
     *   if (plugin.postcssPlugin === 'postcss-bad') {
     *     throw 'postcss-good is incompatible with postcss-bad'
     *   }
     * })
     */
    this.processor = processor;
    /**
     * Contains messages from plugins (e.g., warnings or custom messages).
     * Each message should have type and plugin properties.
     *
     * @type {Message[]}
     *
     * @example
     * postcss.plugin('postcss-min-browser', () => {
     *   return (root, result) => {
     *     const browsers = detectMinBrowsersByCanIUse(root)
     *     result.messages.push({
     *       type: 'min-browser',
     *       plugin: 'postcss-min-browser',
     *       browsers
     *     })
     *   }
     * })
     */

    this.messages = [];
    /**
     * Root node after all transformations.
     *
     * @type {Root}
     *
     * @example
     * root.toResult().root === root
     */

    this.root = root;
    /**
     * Options from the {@link Processor#process} or {@link Root#toResult} call
     * that produced this Result instance.
     *
     * @type {processOptions}
     *
     * @example
     * root.toResult(opts).opts === opts
     */

    this.opts = opts;
    /**
     * A CSS string representing of {@link Result#root}.
     *
     * @type {string}
     *
     * @example
     * postcss.parse('a{}').toResult().css //=> "a{}"
     */

    this.css = undefined;
    /**
     * An instance of `SourceMapGenerator` class from the `source-map` library,
     * representing changes to the {@link Result#root} instance.
     *
     * @type {SourceMapGenerator}
     *
     * @example
     * result.map.toJSON() //=> { version: 3, file: 'a.css', … }
     *
     * @example
     * if (result.map) {
     *   fs.writeFileSync(result.opts.to + '.map', result.map.toString())
     * }
     */

    this.map = undefined;
  }
  /**
   * Returns for @{link Result#css} content.
   *
   * @example
   * result + '' === result.css
   *
   * @return {string} String representing of {@link Result#root}.
   */


  var _proto = Result.prototype;

  _proto.toString = function toString() {
    return this.css;
  }
  /**
   * Creates an instance of {@link Warning} and adds it
   * to {@link Result#messages}.
   *
   * @param {string} text        Warning message.
   * @param {Object} [opts]      Warning options.
   * @param {Node}   opts.node   CSS node that caused the warning.
   * @param {string} opts.word   Word in CSS source that caused the warning.
   * @param {number} opts.index  Index in CSS node string that caused
   *                             the warning.
   * @param {string} opts.plugin Name of the plugin that created
   *                             this warning. {@link Result#warn} fills
   *                             this property automatically.
   *
   * @return {Warning} Created warning.
   */
  ;

  _proto.warn = function warn(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    if (!opts.plugin) {
      if (this.lastPlugin && this.lastPlugin.postcssPlugin) {
        opts.plugin = this.lastPlugin.postcssPlugin;
      }
    }

    var warning = new _warning.default(text, opts);
    this.messages.push(warning);
    return warning;
  }
  /**
     * Returns warnings from plugins. Filters {@link Warning} instances
     * from {@link Result#messages}.
     *
     * @example
     * result.warnings().forEach(warn => {
     *   console.warn(warn.toString())
     * })
     *
     * @return {Warning[]} Warnings from plugins.
     */
  ;

  _proto.warnings = function warnings() {
    return this.messages.filter(function (i) {
      return i.type === 'warning';
    });
  }
  /**
   * An alias for the {@link Result#css} property.
   * Use it with syntaxes that generate non-CSS output.
   *
   * @type {string}
   *
   * @example
   * result.css === result.content
   */
  ;

  _createClass(Result, [{
    key: "content",
    get: function get() {
      return this.css;
    }
  }]);

  return Result;
}();

var _default = Result;
/**
 * @typedef  {object} Message
 * @property {string} type   Message type.
 * @property {string} plugin Source PostCSS plugin name.
 */

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

/**
 * Represents a plugin’s warning. It can be created using {@link Node#warn}.
 *
 * @example
 * if (decl.important) {
 *   decl.warn(result, 'Avoid !important', { word: '!important' })
 * }
 */
var Warning =
/*#__PURE__*/
function () {
  /**
   * @param {string} text        Warning message.
   * @param {Object} [opts]      Warning options.
   * @param {Node}   opts.node   CSS node that caused the warning.
   * @param {string} opts.word   Word in CSS source that caused the warning.
   * @param {number} opts.index  Index in CSS node string that caused
   *                             the warning.
   * @param {string} opts.plugin Name of the plugin that created
   *                             this warning. {@link Result#warn} fills
   *                             this property automatically.
   */
  function Warning(text, opts) {
    if (opts === void 0) {
      opts = {};
    }

    /**
     * Type to filter warnings from {@link Result#messages}.
     * Always equal to `"warning"`.
     *
     * @type {string}
     *
     * @example
     * const nonWarning = result.messages.filter(i => i.type !== 'warning')
     */
    this.type = 'warning';
    /**
     * The warning message.
     *
     * @type {string}
     *
     * @example
     * warning.text //=> 'Try to avoid !important'
     */

    this.text = text;

    if (opts.node && opts.node.source) {
      var pos = opts.node.positionBy(opts);
      /**
       * Line in the input file with this warning’s source.
       * @type {number}
       *
       * @example
       * warning.line //=> 5
       */

      this.line = pos.line;
      /**
       * Column in the input file with this warning’s source.
       *
       * @type {number}
       *
       * @example
       * warning.column //=> 6
       */

      this.column = pos.column;
    }

    for (var opt in opts) {
      this[opt] = opts[opt];
    }
  }
  /**
   * Returns a warning position and message.
   *
   * @example
   * warning.toString() //=> 'postcss-lint:a.css:10:14: Avoid !important'
   *
   * @return {string} Warning position and message.
   */


  var _proto = Warning.prototype;

  _proto.toString = function toString() {
    if (this.node) {
      return this.node.error(this.text, {
        plugin: this.plugin,
        index: this.index,
        word: this.word
      }).message;
    }

    if (this.plugin) {
      return this.plugin + ': ' + this.text;
    }

    return this.text;
  }
  /**
   * @memberof Warning#
   * @member {string} plugin The name of the plugin that created
   *                         it will fill this property automatically.
   *                         this warning. When you call {@link Node#warn}
   *
   * @example
   * warning.plugin //=> 'postcss-important'
   */

  /**
   * @memberof Warning#
   * @member {Node} node Contains the CSS node that caused the warning.
   *
   * @example
   * warning.node.toString() //=> 'color: white !important'
   */
  ;

  return Warning;
}();

var _default = Warning;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndhcm5pbmcuZXM2Il0sIm5hbWVzIjpbIldhcm5pbmciLCJ0ZXh0Iiwib3B0cyIsInR5cGUiLCJub2RlIiwic291cmNlIiwicG9zIiwicG9zaXRpb25CeSIsImxpbmUiLCJjb2x1bW4iLCJvcHQiLCJ0b1N0cmluZyIsImVycm9yIiwicGx1Z2luIiwiaW5kZXgiLCJ3b3JkIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7Ozs7SUFRTUEsTzs7O0FBQ0o7Ozs7Ozs7Ozs7O0FBV0EsbUJBQWFDLElBQWIsRUFBbUJDLElBQW5CLEVBQStCO0FBQUEsUUFBWkEsSUFBWTtBQUFaQSxNQUFBQSxJQUFZLEdBQUwsRUFBSztBQUFBOztBQUM3Qjs7Ozs7Ozs7O0FBU0EsU0FBS0MsSUFBTCxHQUFZLFNBQVo7QUFDQTs7Ozs7Ozs7O0FBUUEsU0FBS0YsSUFBTCxHQUFZQSxJQUFaOztBQUVBLFFBQUlDLElBQUksQ0FBQ0UsSUFBTCxJQUFhRixJQUFJLENBQUNFLElBQUwsQ0FBVUMsTUFBM0IsRUFBbUM7QUFDakMsVUFBSUMsR0FBRyxHQUFHSixJQUFJLENBQUNFLElBQUwsQ0FBVUcsVUFBVixDQUFxQkwsSUFBckIsQ0FBVjtBQUNBOzs7Ozs7OztBQU9BLFdBQUtNLElBQUwsR0FBWUYsR0FBRyxDQUFDRSxJQUFoQjtBQUNBOzs7Ozs7Ozs7QUFRQSxXQUFLQyxNQUFMLEdBQWNILEdBQUcsQ0FBQ0csTUFBbEI7QUFDRDs7QUFFRCxTQUFLLElBQUlDLEdBQVQsSUFBZ0JSLElBQWhCO0FBQXNCLFdBQUtRLEdBQUwsSUFBWVIsSUFBSSxDQUFDUSxHQUFELENBQWhCO0FBQXRCO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7O1NBUUFDLFEsR0FBQSxvQkFBWTtBQUNWLFFBQUksS0FBS1AsSUFBVCxFQUFlO0FBQ2IsYUFBTyxLQUFLQSxJQUFMLENBQVVRLEtBQVYsQ0FBZ0IsS0FBS1gsSUFBckIsRUFBMkI7QUFDaENZLFFBQUFBLE1BQU0sRUFBRSxLQUFLQSxNQURtQjtBQUVoQ0MsUUFBQUEsS0FBSyxFQUFFLEtBQUtBLEtBRm9CO0FBR2hDQyxRQUFBQSxJQUFJLEVBQUUsS0FBS0E7QUFIcUIsT0FBM0IsRUFJSkMsT0FKSDtBQUtEOztBQUVELFFBQUksS0FBS0gsTUFBVCxFQUFpQjtBQUNmLGFBQU8sS0FBS0EsTUFBTCxHQUFjLElBQWQsR0FBcUIsS0FBS1osSUFBakM7QUFDRDs7QUFFRCxXQUFPLEtBQUtBLElBQVo7QUFDRDtBQUVEOzs7Ozs7Ozs7O0FBVUE7Ozs7Ozs7Ozs7OztlQVNhRCxPIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXByZXNlbnRzIGEgcGx1Z2lu4oCZcyB3YXJuaW5nLiBJdCBjYW4gYmUgY3JlYXRlZCB1c2luZyB7QGxpbmsgTm9kZSN3YXJufS5cbiAqXG4gKiBAZXhhbXBsZVxuICogaWYgKGRlY2wuaW1wb3J0YW50KSB7XG4gKiAgIGRlY2wud2FybihyZXN1bHQsICdBdm9pZCAhaW1wb3J0YW50JywgeyB3b3JkOiAnIWltcG9ydGFudCcgfSlcbiAqIH1cbiAqL1xuY2xhc3MgV2FybmluZyB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gdGV4dCAgICAgICAgV2FybmluZyBtZXNzYWdlLlxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdHNdICAgICAgV2FybmluZyBvcHRpb25zLlxuICAgKiBAcGFyYW0ge05vZGV9ICAgb3B0cy5ub2RlICAgQ1NTIG5vZGUgdGhhdCBjYXVzZWQgdGhlIHdhcm5pbmcuXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBvcHRzLndvcmQgICBXb3JkIGluIENTUyBzb3VyY2UgdGhhdCBjYXVzZWQgdGhlIHdhcm5pbmcuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBvcHRzLmluZGV4ICBJbmRleCBpbiBDU1Mgbm9kZSBzdHJpbmcgdGhhdCBjYXVzZWRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoZSB3YXJuaW5nLlxuICAgKiBAcGFyYW0ge3N0cmluZ30gb3B0cy5wbHVnaW4gTmFtZSBvZiB0aGUgcGx1Z2luIHRoYXQgY3JlYXRlZFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyB3YXJuaW5nLiB7QGxpbmsgUmVzdWx0I3dhcm59IGZpbGxzXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzIHByb3BlcnR5IGF1dG9tYXRpY2FsbHkuXG4gICAqL1xuICBjb25zdHJ1Y3RvciAodGV4dCwgb3B0cyA9IHsgfSkge1xuICAgIC8qKlxuICAgICAqIFR5cGUgdG8gZmlsdGVyIHdhcm5pbmdzIGZyb20ge0BsaW5rIFJlc3VsdCNtZXNzYWdlc30uXG4gICAgICogQWx3YXlzIGVxdWFsIHRvIGBcIndhcm5pbmdcImAuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBjb25zdCBub25XYXJuaW5nID0gcmVzdWx0Lm1lc3NhZ2VzLmZpbHRlcihpID0+IGkudHlwZSAhPT0gJ3dhcm5pbmcnKVxuICAgICAqL1xuICAgIHRoaXMudHlwZSA9ICd3YXJuaW5nJ1xuICAgIC8qKlxuICAgICAqIFRoZSB3YXJuaW5nIG1lc3NhZ2UuXG4gICAgICpcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiB3YXJuaW5nLnRleHQgLy89PiAnVHJ5IHRvIGF2b2lkICFpbXBvcnRhbnQnXG4gICAgICovXG4gICAgdGhpcy50ZXh0ID0gdGV4dFxuXG4gICAgaWYgKG9wdHMubm9kZSAmJiBvcHRzLm5vZGUuc291cmNlKSB7XG4gICAgICBsZXQgcG9zID0gb3B0cy5ub2RlLnBvc2l0aW9uQnkob3B0cylcbiAgICAgIC8qKlxuICAgICAgICogTGluZSBpbiB0aGUgaW5wdXQgZmlsZSB3aXRoIHRoaXMgd2FybmluZ+KAmXMgc291cmNlLlxuICAgICAgICogQHR5cGUge251bWJlcn1cbiAgICAgICAqXG4gICAgICAgKiBAZXhhbXBsZVxuICAgICAgICogd2FybmluZy5saW5lIC8vPT4gNVxuICAgICAgICovXG4gICAgICB0aGlzLmxpbmUgPSBwb3MubGluZVxuICAgICAgLyoqXG4gICAgICAgKiBDb2x1bW4gaW4gdGhlIGlucHV0IGZpbGUgd2l0aCB0aGlzIHdhcm5pbmfigJlzIHNvdXJjZS5cbiAgICAgICAqXG4gICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICpcbiAgICAgICAqIEBleGFtcGxlXG4gICAgICAgKiB3YXJuaW5nLmNvbHVtbiAvLz0+IDZcbiAgICAgICAqL1xuICAgICAgdGhpcy5jb2x1bW4gPSBwb3MuY29sdW1uXG4gICAgfVxuXG4gICAgZm9yIChsZXQgb3B0IGluIG9wdHMpIHRoaXNbb3B0XSA9IG9wdHNbb3B0XVxuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSB3YXJuaW5nIHBvc2l0aW9uIGFuZCBtZXNzYWdlLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiB3YXJuaW5nLnRvU3RyaW5nKCkgLy89PiAncG9zdGNzcy1saW50OmEuY3NzOjEwOjE0OiBBdm9pZCAhaW1wb3J0YW50J1xuICAgKlxuICAgKiBAcmV0dXJuIHtzdHJpbmd9IFdhcm5pbmcgcG9zaXRpb24gYW5kIG1lc3NhZ2UuXG4gICAqL1xuICB0b1N0cmluZyAoKSB7XG4gICAgaWYgKHRoaXMubm9kZSkge1xuICAgICAgcmV0dXJuIHRoaXMubm9kZS5lcnJvcih0aGlzLnRleHQsIHtcbiAgICAgICAgcGx1Z2luOiB0aGlzLnBsdWdpbixcbiAgICAgICAgaW5kZXg6IHRoaXMuaW5kZXgsXG4gICAgICAgIHdvcmQ6IHRoaXMud29yZFxuICAgICAgfSkubWVzc2FnZVxuICAgIH1cblxuICAgIGlmICh0aGlzLnBsdWdpbikge1xuICAgICAgcmV0dXJuIHRoaXMucGx1Z2luICsgJzogJyArIHRoaXMudGV4dFxuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnRleHRcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWVtYmVyb2YgV2FybmluZyNcbiAgICogQG1lbWJlciB7c3RyaW5nfSBwbHVnaW4gVGhlIG5hbWUgb2YgdGhlIHBsdWdpbiB0aGF0IGNyZWF0ZWRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgaXQgd2lsbCBmaWxsIHRoaXMgcHJvcGVydHkgYXV0b21hdGljYWxseS5cbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgdGhpcyB3YXJuaW5nLiBXaGVuIHlvdSBjYWxsIHtAbGluayBOb2RlI3dhcm59XG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIHdhcm5pbmcucGx1Z2luIC8vPT4gJ3Bvc3Rjc3MtaW1wb3J0YW50J1xuICAgKi9cblxuICAvKipcbiAgICogQG1lbWJlcm9mIFdhcm5pbmcjXG4gICAqIEBtZW1iZXIge05vZGV9IG5vZGUgQ29udGFpbnMgdGhlIENTUyBub2RlIHRoYXQgY2F1c2VkIHRoZSB3YXJuaW5nLlxuICAgKlxuICAgKiBAZXhhbXBsZVxuICAgKiB3YXJuaW5nLm5vZGUudG9TdHJpbmcoKSAvLz0+ICdjb2xvcjogd2hpdGUgIWltcG9ydGFudCdcbiAgICovXG59XG5cbmV4cG9ydCBkZWZhdWx0IFdhcm5pbmdcbiJdLCJmaWxlIjoid2FybmluZy5qcyJ9


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

var _declaration = _interopRequireDefault(__webpack_require__(35));

var _tokenize = _interopRequireDefault(__webpack_require__(58));

var _comment = _interopRequireDefault(__webpack_require__(41));

var _atRule = _interopRequireDefault(__webpack_require__(42));

var _root = _interopRequireDefault(__webpack_require__(67));

var _rule = _interopRequireDefault(__webpack_require__(44));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Parser =
/*#__PURE__*/
function () {
  function Parser(input) {
    this.input = input;
    this.root = new _root.default();
    this.current = this.root;
    this.spaces = '';
    this.semicolon = false;
    this.createTokenizer();
    this.root.source = {
      input: input,
      start: {
        line: 1,
        column: 1
      }
    };
  }

  var _proto = Parser.prototype;

  _proto.createTokenizer = function createTokenizer() {
    this.tokenizer = (0, _tokenize.default)(this.input);
  };

  _proto.parse = function parse() {
    var token;

    while (!this.tokenizer.endOfFile()) {
      token = this.tokenizer.nextToken();

      switch (token[0]) {
        case 'space':
          this.spaces += token[1];
          break;

        case ';':
          this.freeSemicolon(token);
          break;

        case '}':
          this.end(token);
          break;

        case 'comment':
          this.comment(token);
          break;

        case 'at-word':
          this.atrule(token);
          break;

        case '{':
          this.emptyRule(token);
          break;

        default:
          this.other(token);
          break;
      }
    }

    this.endFile();
  };

  _proto.comment = function comment(token) {
    var node = new _comment.default();
    this.init(node, token[2], token[3]);
    node.source.end = {
      line: token[4],
      column: token[5]
    };
    var text = token[1].slice(2, -2);

    if (/^\s*$/.test(text)) {
      node.text = '';
      node.raws.left = text;
      node.raws.right = '';
    } else {
      var match = text.match(/^(\s*)([^]*[^\s])(\s*)$/);
      node.text = match[2];
      node.raws.left = match[1];
      node.raws.right = match[3];
    }
  };

  _proto.emptyRule = function emptyRule(token) {
    var node = new _rule.default();
    this.init(node, token[2], token[3]);
    node.selector = '';
    node.raws.between = '';
    this.current = node;
  };

  _proto.other = function other(start) {
    var end = false;
    var type = null;
    var colon = false;
    var bracket = null;
    var brackets = [];
    var tokens = [];
    var token = start;

    while (token) {
      type = token[0];
      tokens.push(token);

      if (type === '(' || type === '[') {
        if (!bracket) bracket = token;
        brackets.push(type === '(' ? ')' : ']');
      } else if (brackets.length === 0) {
        if (type === ';') {
          if (colon) {
            this.decl(tokens);
            return;
          } else {
            break;
          }
        } else if (type === '{') {
          this.rule(tokens);
          return;
        } else if (type === '}') {
          this.tokenizer.back(tokens.pop());
          end = true;
          break;
        } else if (type === ':') {
          colon = true;
        }
      } else if (type === brackets[brackets.length - 1]) {
        brackets.pop();
        if (brackets.length === 0) bracket = null;
      }

      token = this.tokenizer.nextToken();
    }

    if (this.tokenizer.endOfFile()) end = true;
    if (brackets.length > 0) this.unclosedBracket(bracket);

    if (end && colon) {
      while (tokens.length) {
        token = tokens[tokens.length - 1][0];
        if (token !== 'space' && token !== 'comment') break;
        this.tokenizer.back(tokens.pop());
      }

      this.decl(tokens);
    } else {
      this.unknownWord(tokens);
    }
  };

  _proto.rule = function rule(tokens) {
    tokens.pop();
    var node = new _rule.default();
    this.init(node, tokens[0][2], tokens[0][3]);
    node.raws.between = this.spacesAndCommentsFromEnd(tokens);
    this.raw(node, 'selector', tokens);
    this.current = node;
  };

  _proto.decl = function decl(tokens) {
    var node = new _declaration.default();
    this.init(node);
    var last = tokens[tokens.length - 1];

    if (last[0] === ';') {
      this.semicolon = true;
      tokens.pop();
    }

    if (last[4]) {
      node.source.end = {
        line: last[4],
        column: last[5]
      };
    } else {
      node.source.end = {
        line: last[2],
        column: last[3]
      };
    }

    while (tokens[0][0] !== 'word') {
      if (tokens.length === 1) this.unknownWord(tokens);
      node.raws.before += tokens.shift()[1];
    }

    node.source.start = {
      line: tokens[0][2],
      column: tokens[0][3]
    };
    node.prop = '';

    while (tokens.length) {
      var type = tokens[0][0];

      if (type === ':' || type === 'space' || type === 'comment') {
        break;
      }

      node.prop += tokens.shift()[1];
    }

    node.raws.between = '';
    var token;

    while (tokens.length) {
      token = tokens.shift();

      if (token[0] === ':') {
        node.raws.between += token[1];
        break;
      } else {
        if (token[0] === 'word' && /\w/.test(token[1])) {
          this.unknownWord([token]);
        }

        node.raws.between += token[1];
      }
    }

    if (node.prop[0] === '_' || node.prop[0] === '*') {
      node.raws.before += node.prop[0];
      node.prop = node.prop.slice(1);
    }

    node.raws.between += this.spacesAndCommentsFromStart(tokens);
    this.precheckMissedSemicolon(tokens);

    for (var i = tokens.length - 1; i > 0; i--) {
      token = tokens[i];

      if (token[1].toLowerCase() === '!important') {
        node.important = true;
        var string = this.stringFrom(tokens, i);
        string = this.spacesFromEnd(tokens) + string;
        if (string !== ' !important') node.raws.important = string;
        break;
      } else if (token[1].toLowerCase() === 'important') {
        var cache = tokens.slice(0);
        var str = '';

        for (var j = i; j > 0; j--) {
          var _type = cache[j][0];

          if (str.trim().indexOf('!') === 0 && _type !== 'space') {
            break;
          }

          str = cache.pop()[1] + str;
        }

        if (str.trim().indexOf('!') === 0) {
          node.important = true;
          node.raws.important = str;
          tokens = cache;
        }
      }

      if (token[0] !== 'space' && token[0] !== 'comment') {
        break;
      }
    }

    this.raw(node, 'value', tokens);
    if (node.value.indexOf(':') !== -1) this.checkMissedSemicolon(tokens);
  };

  _proto.atrule = function atrule(token) {
    var node = new _atRule.default();
    node.name = token[1].slice(1);

    if (node.name === '') {
      this.unnamedAtrule(node, token);
    }

    this.init(node, token[2], token[3]);
    var prev;
    var shift;
    var last = false;
    var open = false;
    var params = [];

    while (!this.tokenizer.endOfFile()) {
      token = this.tokenizer.nextToken();

      if (token[0] === ';') {
        node.source.end = {
          line: token[2],
          column: token[3]
        };
        this.semicolon = true;
        break;
      } else if (token[0] === '{') {
        open = true;
        break;
      } else if (token[0] === '}') {
        if (params.length > 0) {
          shift = params.length - 1;
          prev = params[shift];

          while (prev && prev[0] === 'space') {
            prev = params[--shift];
          }

          if (prev) {
            node.source.end = {
              line: prev[4],
              column: prev[5]
            };
          }
        }

        this.end(token);
        break;
      } else {
        params.push(token);
      }

      if (this.tokenizer.endOfFile()) {
        last = true;
        break;
      }
    }

    node.raws.between = this.spacesAndCommentsFromEnd(params);

    if (params.length) {
      node.raws.afterName = this.spacesAndCommentsFromStart(params);
      this.raw(node, 'params', params);

      if (last) {
        token = params[params.length - 1];
        node.source.end = {
          line: token[4],
          column: token[5]
        };
        this.spaces = node.raws.between;
        node.raws.between = '';
      }
    } else {
      node.raws.afterName = '';
      node.params = '';
    }

    if (open) {
      node.nodes = [];
      this.current = node;
    }
  };

  _proto.end = function end(token) {
    if (this.current.nodes && this.current.nodes.length) {
      this.current.raws.semicolon = this.semicolon;
    }

    this.semicolon = false;
    this.current.raws.after = (this.current.raws.after || '') + this.spaces;
    this.spaces = '';

    if (this.current.parent) {
      this.current.source.end = {
        line: token[2],
        column: token[3]
      };
      this.current = this.current.parent;
    } else {
      this.unexpectedClose(token);
    }
  };

  _proto.endFile = function endFile() {
    if (this.current.parent) this.unclosedBlock();

    if (this.current.nodes && this.current.nodes.length) {
      this.current.raws.semicolon = this.semicolon;
    }

    this.current.raws.after = (this.current.raws.after || '') + this.spaces;
  };

  _proto.freeSemicolon = function freeSemicolon(token) {
    this.spaces += token[1];

    if (this.current.nodes) {
      var prev = this.current.nodes[this.current.nodes.length - 1];

      if (prev && prev.type === 'rule' && !prev.raws.ownSemicolon) {
        prev.raws.ownSemicolon = this.spaces;
        this.spaces = '';
      }
    }
  } // Helpers
  ;

  _proto.init = function init(node, line, column) {
    this.current.push(node);
    node.source = {
      start: {
        line: line,
        column: column
      },
      input: this.input
    };
    node.raws.before = this.spaces;
    this.spaces = '';
    if (node.type !== 'comment') this.semicolon = false;
  };

  _proto.raw = function raw(node, prop, tokens) {
    var token, type;
    var length = tokens.length;
    var value = '';
    var clean = true;
    var next, prev;
    var pattern = /^([.|#])?([\w])+/i;

    for (var i = 0; i < length; i += 1) {
      token = tokens[i];
      type = token[0];

      if (type === 'comment' && node.type === 'rule') {
        prev = tokens[i - 1];
        next = tokens[i + 1];

        if (prev[0] !== 'space' && next[0] !== 'space' && pattern.test(prev[1]) && pattern.test(next[1])) {
          value += token[1];
        } else {
          clean = false;
        }

        continue;
      }

      if (type === 'comment' || type === 'space' && i === length - 1) {
        clean = false;
      } else {
        value += token[1];
      }
    }

    if (!clean) {
      var raw = tokens.reduce(function (all, i) {
        return all + i[1];
      }, '');
      node.raws[prop] = {
        value: value,
        raw: raw
      };
    }

    node[prop] = value;
  };

  _proto.spacesAndCommentsFromEnd = function spacesAndCommentsFromEnd(tokens) {
    var lastTokenType;
    var spaces = '';

    while (tokens.length) {
      lastTokenType = tokens[tokens.length - 1][0];
      if (lastTokenType !== 'space' && lastTokenType !== 'comment') break;
      spaces = tokens.pop()[1] + spaces;
    }

    return spaces;
  };

  _proto.spacesAndCommentsFromStart = function spacesAndCommentsFromStart(tokens) {
    var next;
    var spaces = '';

    while (tokens.length) {
      next = tokens[0][0];
      if (next !== 'space' && next !== 'comment') break;
      spaces += tokens.shift()[1];
    }

    return spaces;
  };

  _proto.spacesFromEnd = function spacesFromEnd(tokens) {
    var lastTokenType;
    var spaces = '';

    while (tokens.length) {
      lastTokenType = tokens[tokens.length - 1][0];
      if (lastTokenType !== 'space') break;
      spaces = tokens.pop()[1] + spaces;
    }

    return spaces;
  };

  _proto.stringFrom = function stringFrom(tokens, from) {
    var result = '';

    for (var i = from; i < tokens.length; i++) {
      result += tokens[i][1];
    }

    tokens.splice(from, tokens.length - from);
    return result;
  };

  _proto.colon = function colon(tokens) {
    var brackets = 0;
    var token, type, prev;

    for (var i = 0; i < tokens.length; i++) {
      token = tokens[i];
      type = token[0];

      if (type === '(') {
        brackets += 1;
      }

      if (type === ')') {
        brackets -= 1;
      }

      if (brackets === 0 && type === ':') {
        if (!prev) {
          this.doubleColon(token);
        } else if (prev[0] === 'word' && prev[1] === 'progid') {
          continue;
        } else {
          return i;
        }
      }

      prev = token;
    }

    return false;
  } // Errors
  ;

  _proto.unclosedBracket = function unclosedBracket(bracket) {
    throw this.input.error('Unclosed bracket', bracket[2], bracket[3]);
  };

  _proto.unknownWord = function unknownWord(tokens) {
    throw this.input.error('Unknown word', tokens[0][2], tokens[0][3]);
  };

  _proto.unexpectedClose = function unexpectedClose(token) {
    throw this.input.error('Unexpected }', token[2], token[3]);
  };

  _proto.unclosedBlock = function unclosedBlock() {
    var pos = this.current.source.start;
    throw this.input.error('Unclosed block', pos.line, pos.column);
  };

  _proto.doubleColon = function doubleColon(token) {
    throw this.input.error('Double colon', token[2], token[3]);
  };

  _proto.unnamedAtrule = function unnamedAtrule(node, token) {
    throw this.input.error('At-rule without name', token[2], token[3]);
  };

  _proto.precheckMissedSemicolon = function precheckMissedSemicolon()
  /* tokens */
  {// Hook for Safe Parser
  };

  _proto.checkMissedSemicolon = function checkMissedSemicolon(tokens) {
    var colon = this.colon(tokens);
    if (colon === false) return;
    var founded = 0;
    var token;

    for (var j = colon - 1; j >= 0; j--) {
      token = tokens[j];

      if (token[0] !== 'space') {
        founded += 1;
        if (founded === 2) break;
      }
    }

    throw this.input.error('Missed semicolon', token[2], token[3]);
  };

  return Parser;
}();

exports.default = Parser;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhcnNlci5lczYiXSwibmFtZXMiOlsiUGFyc2VyIiwiaW5wdXQiLCJyb290IiwiUm9vdCIsImN1cnJlbnQiLCJzcGFjZXMiLCJzZW1pY29sb24iLCJjcmVhdGVUb2tlbml6ZXIiLCJzb3VyY2UiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJ0b2tlbml6ZXIiLCJwYXJzZSIsInRva2VuIiwiZW5kT2ZGaWxlIiwibmV4dFRva2VuIiwiZnJlZVNlbWljb2xvbiIsImVuZCIsImNvbW1lbnQiLCJhdHJ1bGUiLCJlbXB0eVJ1bGUiLCJvdGhlciIsImVuZEZpbGUiLCJub2RlIiwiQ29tbWVudCIsImluaXQiLCJ0ZXh0Iiwic2xpY2UiLCJ0ZXN0IiwicmF3cyIsImxlZnQiLCJyaWdodCIsIm1hdGNoIiwiUnVsZSIsInNlbGVjdG9yIiwiYmV0d2VlbiIsInR5cGUiLCJjb2xvbiIsImJyYWNrZXQiLCJicmFja2V0cyIsInRva2VucyIsInB1c2giLCJsZW5ndGgiLCJkZWNsIiwicnVsZSIsImJhY2siLCJwb3AiLCJ1bmNsb3NlZEJyYWNrZXQiLCJ1bmtub3duV29yZCIsInNwYWNlc0FuZENvbW1lbnRzRnJvbUVuZCIsInJhdyIsIkRlY2xhcmF0aW9uIiwibGFzdCIsImJlZm9yZSIsInNoaWZ0IiwicHJvcCIsInNwYWNlc0FuZENvbW1lbnRzRnJvbVN0YXJ0IiwicHJlY2hlY2tNaXNzZWRTZW1pY29sb24iLCJpIiwidG9Mb3dlckNhc2UiLCJpbXBvcnRhbnQiLCJzdHJpbmciLCJzdHJpbmdGcm9tIiwic3BhY2VzRnJvbUVuZCIsImNhY2hlIiwic3RyIiwiaiIsInRyaW0iLCJpbmRleE9mIiwidmFsdWUiLCJjaGVja01pc3NlZFNlbWljb2xvbiIsIkF0UnVsZSIsIm5hbWUiLCJ1bm5hbWVkQXRydWxlIiwicHJldiIsIm9wZW4iLCJwYXJhbXMiLCJhZnRlck5hbWUiLCJub2RlcyIsImFmdGVyIiwicGFyZW50IiwidW5leHBlY3RlZENsb3NlIiwidW5jbG9zZWRCbG9jayIsIm93blNlbWljb2xvbiIsImNsZWFuIiwibmV4dCIsInBhdHRlcm4iLCJyZWR1Y2UiLCJhbGwiLCJsYXN0VG9rZW5UeXBlIiwiZnJvbSIsInJlc3VsdCIsInNwbGljZSIsImRvdWJsZUNvbG9uIiwiZXJyb3IiLCJwb3MiLCJmb3VuZGVkIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0lBRXFCQSxNOzs7QUFDbkIsa0JBQWFDLEtBQWIsRUFBb0I7QUFDbEIsU0FBS0EsS0FBTCxHQUFhQSxLQUFiO0FBRUEsU0FBS0MsSUFBTCxHQUFZLElBQUlDLGFBQUosRUFBWjtBQUNBLFNBQUtDLE9BQUwsR0FBZSxLQUFLRixJQUFwQjtBQUNBLFNBQUtHLE1BQUwsR0FBYyxFQUFkO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQixLQUFqQjtBQUVBLFNBQUtDLGVBQUw7QUFDQSxTQUFLTCxJQUFMLENBQVVNLE1BQVYsR0FBbUI7QUFBRVAsTUFBQUEsS0FBSyxFQUFMQSxLQUFGO0FBQVNRLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxJQUFJLEVBQUUsQ0FBUjtBQUFXQyxRQUFBQSxNQUFNLEVBQUU7QUFBbkI7QUFBaEIsS0FBbkI7QUFDRDs7OztTQUVESixlLEdBQUEsMkJBQW1CO0FBQ2pCLFNBQUtLLFNBQUwsR0FBaUIsdUJBQVUsS0FBS1gsS0FBZixDQUFqQjtBQUNELEc7O1NBRURZLEssR0FBQSxpQkFBUztBQUNQLFFBQUlDLEtBQUo7O0FBQ0EsV0FBTyxDQUFDLEtBQUtGLFNBQUwsQ0FBZUcsU0FBZixFQUFSLEVBQW9DO0FBQ2xDRCxNQUFBQSxLQUFLLEdBQUcsS0FBS0YsU0FBTCxDQUFlSSxTQUFmLEVBQVI7O0FBRUEsY0FBUUYsS0FBSyxDQUFDLENBQUQsQ0FBYjtBQUNFLGFBQUssT0FBTDtBQUNFLGVBQUtULE1BQUwsSUFBZVMsS0FBSyxDQUFDLENBQUQsQ0FBcEI7QUFDQTs7QUFFRixhQUFLLEdBQUw7QUFDRSxlQUFLRyxhQUFMLENBQW1CSCxLQUFuQjtBQUNBOztBQUVGLGFBQUssR0FBTDtBQUNFLGVBQUtJLEdBQUwsQ0FBU0osS0FBVDtBQUNBOztBQUVGLGFBQUssU0FBTDtBQUNFLGVBQUtLLE9BQUwsQ0FBYUwsS0FBYjtBQUNBOztBQUVGLGFBQUssU0FBTDtBQUNFLGVBQUtNLE1BQUwsQ0FBWU4sS0FBWjtBQUNBOztBQUVGLGFBQUssR0FBTDtBQUNFLGVBQUtPLFNBQUwsQ0FBZVAsS0FBZjtBQUNBOztBQUVGO0FBQ0UsZUFBS1EsS0FBTCxDQUFXUixLQUFYO0FBQ0E7QUEzQko7QUE2QkQ7O0FBQ0QsU0FBS1MsT0FBTDtBQUNELEc7O1NBRURKLE8sR0FBQSxpQkFBU0wsS0FBVCxFQUFnQjtBQUNkLFFBQUlVLElBQUksR0FBRyxJQUFJQyxnQkFBSixFQUFYO0FBQ0EsU0FBS0MsSUFBTCxDQUFVRixJQUFWLEVBQWdCVixLQUFLLENBQUMsQ0FBRCxDQUFyQixFQUEwQkEsS0FBSyxDQUFDLENBQUQsQ0FBL0I7QUFDQVUsSUFBQUEsSUFBSSxDQUFDaEIsTUFBTCxDQUFZVSxHQUFaLEdBQWtCO0FBQUVSLE1BQUFBLElBQUksRUFBRUksS0FBSyxDQUFDLENBQUQsQ0FBYjtBQUFrQkgsTUFBQUEsTUFBTSxFQUFFRyxLQUFLLENBQUMsQ0FBRDtBQUEvQixLQUFsQjtBQUVBLFFBQUlhLElBQUksR0FBR2IsS0FBSyxDQUFDLENBQUQsQ0FBTCxDQUFTYyxLQUFULENBQWUsQ0FBZixFQUFrQixDQUFDLENBQW5CLENBQVg7O0FBQ0EsUUFBSSxRQUFRQyxJQUFSLENBQWFGLElBQWIsQ0FBSixFQUF3QjtBQUN0QkgsTUFBQUEsSUFBSSxDQUFDRyxJQUFMLEdBQVksRUFBWjtBQUNBSCxNQUFBQSxJQUFJLENBQUNNLElBQUwsQ0FBVUMsSUFBVixHQUFpQkosSUFBakI7QUFDQUgsTUFBQUEsSUFBSSxDQUFDTSxJQUFMLENBQVVFLEtBQVYsR0FBa0IsRUFBbEI7QUFDRCxLQUpELE1BSU87QUFDTCxVQUFJQyxLQUFLLEdBQUdOLElBQUksQ0FBQ00sS0FBTCxDQUFXLHlCQUFYLENBQVo7QUFDQVQsTUFBQUEsSUFBSSxDQUFDRyxJQUFMLEdBQVlNLEtBQUssQ0FBQyxDQUFELENBQWpCO0FBQ0FULE1BQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVQyxJQUFWLEdBQWlCRSxLQUFLLENBQUMsQ0FBRCxDQUF0QjtBQUNBVCxNQUFBQSxJQUFJLENBQUNNLElBQUwsQ0FBVUUsS0FBVixHQUFrQkMsS0FBSyxDQUFDLENBQUQsQ0FBdkI7QUFDRDtBQUNGLEc7O1NBRURaLFMsR0FBQSxtQkFBV1AsS0FBWCxFQUFrQjtBQUNoQixRQUFJVSxJQUFJLEdBQUcsSUFBSVUsYUFBSixFQUFYO0FBQ0EsU0FBS1IsSUFBTCxDQUFVRixJQUFWLEVBQWdCVixLQUFLLENBQUMsQ0FBRCxDQUFyQixFQUEwQkEsS0FBSyxDQUFDLENBQUQsQ0FBL0I7QUFDQVUsSUFBQUEsSUFBSSxDQUFDVyxRQUFMLEdBQWdCLEVBQWhCO0FBQ0FYLElBQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVTSxPQUFWLEdBQW9CLEVBQXBCO0FBQ0EsU0FBS2hDLE9BQUwsR0FBZW9CLElBQWY7QUFDRCxHOztTQUVERixLLEdBQUEsZUFBT2IsS0FBUCxFQUFjO0FBQ1osUUFBSVMsR0FBRyxHQUFHLEtBQVY7QUFDQSxRQUFJbUIsSUFBSSxHQUFHLElBQVg7QUFDQSxRQUFJQyxLQUFLLEdBQUcsS0FBWjtBQUNBLFFBQUlDLE9BQU8sR0FBRyxJQUFkO0FBQ0EsUUFBSUMsUUFBUSxHQUFHLEVBQWY7QUFFQSxRQUFJQyxNQUFNLEdBQUcsRUFBYjtBQUNBLFFBQUkzQixLQUFLLEdBQUdMLEtBQVo7O0FBQ0EsV0FBT0ssS0FBUCxFQUFjO0FBQ1p1QixNQUFBQSxJQUFJLEdBQUd2QixLQUFLLENBQUMsQ0FBRCxDQUFaO0FBQ0EyQixNQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWTVCLEtBQVo7O0FBRUEsVUFBSXVCLElBQUksS0FBSyxHQUFULElBQWdCQSxJQUFJLEtBQUssR0FBN0IsRUFBa0M7QUFDaEMsWUFBSSxDQUFDRSxPQUFMLEVBQWNBLE9BQU8sR0FBR3pCLEtBQVY7QUFDZDBCLFFBQUFBLFFBQVEsQ0FBQ0UsSUFBVCxDQUFjTCxJQUFJLEtBQUssR0FBVCxHQUFlLEdBQWYsR0FBcUIsR0FBbkM7QUFDRCxPQUhELE1BR08sSUFBSUcsUUFBUSxDQUFDRyxNQUFULEtBQW9CLENBQXhCLEVBQTJCO0FBQ2hDLFlBQUlOLElBQUksS0FBSyxHQUFiLEVBQWtCO0FBQ2hCLGNBQUlDLEtBQUosRUFBVztBQUNULGlCQUFLTSxJQUFMLENBQVVILE1BQVY7QUFDQTtBQUNELFdBSEQsTUFHTztBQUNMO0FBQ0Q7QUFDRixTQVBELE1BT08sSUFBSUosSUFBSSxLQUFLLEdBQWIsRUFBa0I7QUFDdkIsZUFBS1EsSUFBTCxDQUFVSixNQUFWO0FBQ0E7QUFDRCxTQUhNLE1BR0EsSUFBSUosSUFBSSxLQUFLLEdBQWIsRUFBa0I7QUFDdkIsZUFBS3pCLFNBQUwsQ0FBZWtDLElBQWYsQ0FBb0JMLE1BQU0sQ0FBQ00sR0FBUCxFQUFwQjtBQUNBN0IsVUFBQUEsR0FBRyxHQUFHLElBQU47QUFDQTtBQUNELFNBSk0sTUFJQSxJQUFJbUIsSUFBSSxLQUFLLEdBQWIsRUFBa0I7QUFDdkJDLFVBQUFBLEtBQUssR0FBRyxJQUFSO0FBQ0Q7QUFDRixPQWxCTSxNQWtCQSxJQUFJRCxJQUFJLEtBQUtHLFFBQVEsQ0FBQ0EsUUFBUSxDQUFDRyxNQUFULEdBQWtCLENBQW5CLENBQXJCLEVBQTRDO0FBQ2pESCxRQUFBQSxRQUFRLENBQUNPLEdBQVQ7QUFDQSxZQUFJUCxRQUFRLENBQUNHLE1BQVQsS0FBb0IsQ0FBeEIsRUFBMkJKLE9BQU8sR0FBRyxJQUFWO0FBQzVCOztBQUVEekIsTUFBQUEsS0FBSyxHQUFHLEtBQUtGLFNBQUwsQ0FBZUksU0FBZixFQUFSO0FBQ0Q7O0FBRUQsUUFBSSxLQUFLSixTQUFMLENBQWVHLFNBQWYsRUFBSixFQUFnQ0csR0FBRyxHQUFHLElBQU47QUFDaEMsUUFBSXNCLFFBQVEsQ0FBQ0csTUFBVCxHQUFrQixDQUF0QixFQUF5QixLQUFLSyxlQUFMLENBQXFCVCxPQUFyQjs7QUFFekIsUUFBSXJCLEdBQUcsSUFBSW9CLEtBQVgsRUFBa0I7QUFDaEIsYUFBT0csTUFBTSxDQUFDRSxNQUFkLEVBQXNCO0FBQ3BCN0IsUUFBQUEsS0FBSyxHQUFHMkIsTUFBTSxDQUFDQSxNQUFNLENBQUNFLE1BQVAsR0FBZ0IsQ0FBakIsQ0FBTixDQUEwQixDQUExQixDQUFSO0FBQ0EsWUFBSTdCLEtBQUssS0FBSyxPQUFWLElBQXFCQSxLQUFLLEtBQUssU0FBbkMsRUFBOEM7QUFDOUMsYUFBS0YsU0FBTCxDQUFla0MsSUFBZixDQUFvQkwsTUFBTSxDQUFDTSxHQUFQLEVBQXBCO0FBQ0Q7O0FBQ0QsV0FBS0gsSUFBTCxDQUFVSCxNQUFWO0FBQ0QsS0FQRCxNQU9PO0FBQ0wsV0FBS1EsV0FBTCxDQUFpQlIsTUFBakI7QUFDRDtBQUNGLEc7O1NBRURJLEksR0FBQSxjQUFNSixNQUFOLEVBQWM7QUFDWkEsSUFBQUEsTUFBTSxDQUFDTSxHQUFQO0FBRUEsUUFBSXZCLElBQUksR0FBRyxJQUFJVSxhQUFKLEVBQVg7QUFDQSxTQUFLUixJQUFMLENBQVVGLElBQVYsRUFBZ0JpQixNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFoQixFQUE4QkEsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBOUI7QUFFQWpCLElBQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVTSxPQUFWLEdBQW9CLEtBQUtjLHdCQUFMLENBQThCVCxNQUE5QixDQUFwQjtBQUNBLFNBQUtVLEdBQUwsQ0FBUzNCLElBQVQsRUFBZSxVQUFmLEVBQTJCaUIsTUFBM0I7QUFDQSxTQUFLckMsT0FBTCxHQUFlb0IsSUFBZjtBQUNELEc7O1NBRURvQixJLEdBQUEsY0FBTUgsTUFBTixFQUFjO0FBQ1osUUFBSWpCLElBQUksR0FBRyxJQUFJNEIsb0JBQUosRUFBWDtBQUNBLFNBQUsxQixJQUFMLENBQVVGLElBQVY7QUFFQSxRQUFJNkIsSUFBSSxHQUFHWixNQUFNLENBQUNBLE1BQU0sQ0FBQ0UsTUFBUCxHQUFnQixDQUFqQixDQUFqQjs7QUFDQSxRQUFJVSxJQUFJLENBQUMsQ0FBRCxDQUFKLEtBQVksR0FBaEIsRUFBcUI7QUFDbkIsV0FBSy9DLFNBQUwsR0FBaUIsSUFBakI7QUFDQW1DLE1BQUFBLE1BQU0sQ0FBQ00sR0FBUDtBQUNEOztBQUNELFFBQUlNLElBQUksQ0FBQyxDQUFELENBQVIsRUFBYTtBQUNYN0IsTUFBQUEsSUFBSSxDQUFDaEIsTUFBTCxDQUFZVSxHQUFaLEdBQWtCO0FBQUVSLFFBQUFBLElBQUksRUFBRTJDLElBQUksQ0FBQyxDQUFELENBQVo7QUFBaUIxQyxRQUFBQSxNQUFNLEVBQUUwQyxJQUFJLENBQUMsQ0FBRDtBQUE3QixPQUFsQjtBQUNELEtBRkQsTUFFTztBQUNMN0IsTUFBQUEsSUFBSSxDQUFDaEIsTUFBTCxDQUFZVSxHQUFaLEdBQWtCO0FBQUVSLFFBQUFBLElBQUksRUFBRTJDLElBQUksQ0FBQyxDQUFELENBQVo7QUFBaUIxQyxRQUFBQSxNQUFNLEVBQUUwQyxJQUFJLENBQUMsQ0FBRDtBQUE3QixPQUFsQjtBQUNEOztBQUVELFdBQU9aLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLE1BQWlCLE1BQXhCLEVBQWdDO0FBQzlCLFVBQUlBLE1BQU0sQ0FBQ0UsTUFBUCxLQUFrQixDQUF0QixFQUF5QixLQUFLTSxXQUFMLENBQWlCUixNQUFqQjtBQUN6QmpCLE1BQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVd0IsTUFBVixJQUFvQmIsTUFBTSxDQUFDYyxLQUFQLEdBQWUsQ0FBZixDQUFwQjtBQUNEOztBQUNEL0IsSUFBQUEsSUFBSSxDQUFDaEIsTUFBTCxDQUFZQyxLQUFaLEdBQW9CO0FBQUVDLE1BQUFBLElBQUksRUFBRStCLE1BQU0sQ0FBQyxDQUFELENBQU4sQ0FBVSxDQUFWLENBQVI7QUFBc0I5QixNQUFBQSxNQUFNLEVBQUU4QixNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVjtBQUE5QixLQUFwQjtBQUVBakIsSUFBQUEsSUFBSSxDQUFDZ0MsSUFBTCxHQUFZLEVBQVo7O0FBQ0EsV0FBT2YsTUFBTSxDQUFDRSxNQUFkLEVBQXNCO0FBQ3BCLFVBQUlOLElBQUksR0FBR0ksTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBWDs7QUFDQSxVQUFJSixJQUFJLEtBQUssR0FBVCxJQUFnQkEsSUFBSSxLQUFLLE9BQXpCLElBQW9DQSxJQUFJLEtBQUssU0FBakQsRUFBNEQ7QUFDMUQ7QUFDRDs7QUFDRGIsTUFBQUEsSUFBSSxDQUFDZ0MsSUFBTCxJQUFhZixNQUFNLENBQUNjLEtBQVAsR0FBZSxDQUFmLENBQWI7QUFDRDs7QUFFRC9CLElBQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVTSxPQUFWLEdBQW9CLEVBQXBCO0FBRUEsUUFBSXRCLEtBQUo7O0FBQ0EsV0FBTzJCLE1BQU0sQ0FBQ0UsTUFBZCxFQUFzQjtBQUNwQjdCLE1BQUFBLEtBQUssR0FBRzJCLE1BQU0sQ0FBQ2MsS0FBUCxFQUFSOztBQUVBLFVBQUl6QyxLQUFLLENBQUMsQ0FBRCxDQUFMLEtBQWEsR0FBakIsRUFBc0I7QUFDcEJVLFFBQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVTSxPQUFWLElBQXFCdEIsS0FBSyxDQUFDLENBQUQsQ0FBMUI7QUFDQTtBQUNELE9BSEQsTUFHTztBQUNMLFlBQUlBLEtBQUssQ0FBQyxDQUFELENBQUwsS0FBYSxNQUFiLElBQXVCLEtBQUtlLElBQUwsQ0FBVWYsS0FBSyxDQUFDLENBQUQsQ0FBZixDQUEzQixFQUFnRDtBQUM5QyxlQUFLbUMsV0FBTCxDQUFpQixDQUFDbkMsS0FBRCxDQUFqQjtBQUNEOztBQUNEVSxRQUFBQSxJQUFJLENBQUNNLElBQUwsQ0FBVU0sT0FBVixJQUFxQnRCLEtBQUssQ0FBQyxDQUFELENBQTFCO0FBQ0Q7QUFDRjs7QUFFRCxRQUFJVSxJQUFJLENBQUNnQyxJQUFMLENBQVUsQ0FBVixNQUFpQixHQUFqQixJQUF3QmhDLElBQUksQ0FBQ2dDLElBQUwsQ0FBVSxDQUFWLE1BQWlCLEdBQTdDLEVBQWtEO0FBQ2hEaEMsTUFBQUEsSUFBSSxDQUFDTSxJQUFMLENBQVV3QixNQUFWLElBQW9COUIsSUFBSSxDQUFDZ0MsSUFBTCxDQUFVLENBQVYsQ0FBcEI7QUFDQWhDLE1BQUFBLElBQUksQ0FBQ2dDLElBQUwsR0FBWWhDLElBQUksQ0FBQ2dDLElBQUwsQ0FBVTVCLEtBQVYsQ0FBZ0IsQ0FBaEIsQ0FBWjtBQUNEOztBQUNESixJQUFBQSxJQUFJLENBQUNNLElBQUwsQ0FBVU0sT0FBVixJQUFxQixLQUFLcUIsMEJBQUwsQ0FBZ0NoQixNQUFoQyxDQUFyQjtBQUNBLFNBQUtpQix1QkFBTCxDQUE2QmpCLE1BQTdCOztBQUVBLFNBQUssSUFBSWtCLENBQUMsR0FBR2xCLE1BQU0sQ0FBQ0UsTUFBUCxHQUFnQixDQUE3QixFQUFnQ2dCLENBQUMsR0FBRyxDQUFwQyxFQUF1Q0EsQ0FBQyxFQUF4QyxFQUE0QztBQUMxQzdDLE1BQUFBLEtBQUssR0FBRzJCLE1BQU0sQ0FBQ2tCLENBQUQsQ0FBZDs7QUFDQSxVQUFJN0MsS0FBSyxDQUFDLENBQUQsQ0FBTCxDQUFTOEMsV0FBVCxPQUEyQixZQUEvQixFQUE2QztBQUMzQ3BDLFFBQUFBLElBQUksQ0FBQ3FDLFNBQUwsR0FBaUIsSUFBakI7QUFDQSxZQUFJQyxNQUFNLEdBQUcsS0FBS0MsVUFBTCxDQUFnQnRCLE1BQWhCLEVBQXdCa0IsQ0FBeEIsQ0FBYjtBQUNBRyxRQUFBQSxNQUFNLEdBQUcsS0FBS0UsYUFBTCxDQUFtQnZCLE1BQW5CLElBQTZCcUIsTUFBdEM7QUFDQSxZQUFJQSxNQUFNLEtBQUssYUFBZixFQUE4QnRDLElBQUksQ0FBQ00sSUFBTCxDQUFVK0IsU0FBVixHQUFzQkMsTUFBdEI7QUFDOUI7QUFDRCxPQU5ELE1BTU8sSUFBSWhELEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUzhDLFdBQVQsT0FBMkIsV0FBL0IsRUFBNEM7QUFDakQsWUFBSUssS0FBSyxHQUFHeEIsTUFBTSxDQUFDYixLQUFQLENBQWEsQ0FBYixDQUFaO0FBQ0EsWUFBSXNDLEdBQUcsR0FBRyxFQUFWOztBQUNBLGFBQUssSUFBSUMsQ0FBQyxHQUFHUixDQUFiLEVBQWdCUSxDQUFDLEdBQUcsQ0FBcEIsRUFBdUJBLENBQUMsRUFBeEIsRUFBNEI7QUFDMUIsY0FBSTlCLEtBQUksR0FBRzRCLEtBQUssQ0FBQ0UsQ0FBRCxDQUFMLENBQVMsQ0FBVCxDQUFYOztBQUNBLGNBQUlELEdBQUcsQ0FBQ0UsSUFBSixHQUFXQyxPQUFYLENBQW1CLEdBQW5CLE1BQTRCLENBQTVCLElBQWlDaEMsS0FBSSxLQUFLLE9BQTlDLEVBQXVEO0FBQ3JEO0FBQ0Q7O0FBQ0Q2QixVQUFBQSxHQUFHLEdBQUdELEtBQUssQ0FBQ2xCLEdBQU4sR0FBWSxDQUFaLElBQWlCbUIsR0FBdkI7QUFDRDs7QUFDRCxZQUFJQSxHQUFHLENBQUNFLElBQUosR0FBV0MsT0FBWCxDQUFtQixHQUFuQixNQUE0QixDQUFoQyxFQUFtQztBQUNqQzdDLFVBQUFBLElBQUksQ0FBQ3FDLFNBQUwsR0FBaUIsSUFBakI7QUFDQXJDLFVBQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVK0IsU0FBVixHQUFzQkssR0FBdEI7QUFDQXpCLFVBQUFBLE1BQU0sR0FBR3dCLEtBQVQ7QUFDRDtBQUNGOztBQUVELFVBQUluRCxLQUFLLENBQUMsQ0FBRCxDQUFMLEtBQWEsT0FBYixJQUF3QkEsS0FBSyxDQUFDLENBQUQsQ0FBTCxLQUFhLFNBQXpDLEVBQW9EO0FBQ2xEO0FBQ0Q7QUFDRjs7QUFFRCxTQUFLcUMsR0FBTCxDQUFTM0IsSUFBVCxFQUFlLE9BQWYsRUFBd0JpQixNQUF4QjtBQUVBLFFBQUlqQixJQUFJLENBQUM4QyxLQUFMLENBQVdELE9BQVgsQ0FBbUIsR0FBbkIsTUFBNEIsQ0FBQyxDQUFqQyxFQUFvQyxLQUFLRSxvQkFBTCxDQUEwQjlCLE1BQTFCO0FBQ3JDLEc7O1NBRURyQixNLEdBQUEsZ0JBQVFOLEtBQVIsRUFBZTtBQUNiLFFBQUlVLElBQUksR0FBRyxJQUFJZ0QsZUFBSixFQUFYO0FBQ0FoRCxJQUFBQSxJQUFJLENBQUNpRCxJQUFMLEdBQVkzRCxLQUFLLENBQUMsQ0FBRCxDQUFMLENBQVNjLEtBQVQsQ0FBZSxDQUFmLENBQVo7O0FBQ0EsUUFBSUosSUFBSSxDQUFDaUQsSUFBTCxLQUFjLEVBQWxCLEVBQXNCO0FBQ3BCLFdBQUtDLGFBQUwsQ0FBbUJsRCxJQUFuQixFQUF5QlYsS0FBekI7QUFDRDs7QUFDRCxTQUFLWSxJQUFMLENBQVVGLElBQVYsRUFBZ0JWLEtBQUssQ0FBQyxDQUFELENBQXJCLEVBQTBCQSxLQUFLLENBQUMsQ0FBRCxDQUEvQjtBQUVBLFFBQUk2RCxJQUFKO0FBQ0EsUUFBSXBCLEtBQUo7QUFDQSxRQUFJRixJQUFJLEdBQUcsS0FBWDtBQUNBLFFBQUl1QixJQUFJLEdBQUcsS0FBWDtBQUNBLFFBQUlDLE1BQU0sR0FBRyxFQUFiOztBQUVBLFdBQU8sQ0FBQyxLQUFLakUsU0FBTCxDQUFlRyxTQUFmLEVBQVIsRUFBb0M7QUFDbENELE1BQUFBLEtBQUssR0FBRyxLQUFLRixTQUFMLENBQWVJLFNBQWYsRUFBUjs7QUFFQSxVQUFJRixLQUFLLENBQUMsQ0FBRCxDQUFMLEtBQWEsR0FBakIsRUFBc0I7QUFDcEJVLFFBQUFBLElBQUksQ0FBQ2hCLE1BQUwsQ0FBWVUsR0FBWixHQUFrQjtBQUFFUixVQUFBQSxJQUFJLEVBQUVJLEtBQUssQ0FBQyxDQUFELENBQWI7QUFBa0JILFVBQUFBLE1BQU0sRUFBRUcsS0FBSyxDQUFDLENBQUQ7QUFBL0IsU0FBbEI7QUFDQSxhQUFLUixTQUFMLEdBQWlCLElBQWpCO0FBQ0E7QUFDRCxPQUpELE1BSU8sSUFBSVEsS0FBSyxDQUFDLENBQUQsQ0FBTCxLQUFhLEdBQWpCLEVBQXNCO0FBQzNCOEQsUUFBQUEsSUFBSSxHQUFHLElBQVA7QUFDQTtBQUNELE9BSE0sTUFHQSxJQUFJOUQsS0FBSyxDQUFDLENBQUQsQ0FBTCxLQUFhLEdBQWpCLEVBQXNCO0FBQzNCLFlBQUkrRCxNQUFNLENBQUNsQyxNQUFQLEdBQWdCLENBQXBCLEVBQXVCO0FBQ3JCWSxVQUFBQSxLQUFLLEdBQUdzQixNQUFNLENBQUNsQyxNQUFQLEdBQWdCLENBQXhCO0FBQ0FnQyxVQUFBQSxJQUFJLEdBQUdFLE1BQU0sQ0FBQ3RCLEtBQUQsQ0FBYjs7QUFDQSxpQkFBT29CLElBQUksSUFBSUEsSUFBSSxDQUFDLENBQUQsQ0FBSixLQUFZLE9BQTNCLEVBQW9DO0FBQ2xDQSxZQUFBQSxJQUFJLEdBQUdFLE1BQU0sQ0FBQyxFQUFFdEIsS0FBSCxDQUFiO0FBQ0Q7O0FBQ0QsY0FBSW9CLElBQUosRUFBVTtBQUNSbkQsWUFBQUEsSUFBSSxDQUFDaEIsTUFBTCxDQUFZVSxHQUFaLEdBQWtCO0FBQUVSLGNBQUFBLElBQUksRUFBRWlFLElBQUksQ0FBQyxDQUFELENBQVo7QUFBaUJoRSxjQUFBQSxNQUFNLEVBQUVnRSxJQUFJLENBQUMsQ0FBRDtBQUE3QixhQUFsQjtBQUNEO0FBQ0Y7O0FBQ0QsYUFBS3pELEdBQUwsQ0FBU0osS0FBVDtBQUNBO0FBQ0QsT0FiTSxNQWFBO0FBQ0wrRCxRQUFBQSxNQUFNLENBQUNuQyxJQUFQLENBQVk1QixLQUFaO0FBQ0Q7O0FBRUQsVUFBSSxLQUFLRixTQUFMLENBQWVHLFNBQWYsRUFBSixFQUFnQztBQUM5QnNDLFFBQUFBLElBQUksR0FBRyxJQUFQO0FBQ0E7QUFDRDtBQUNGOztBQUVEN0IsSUFBQUEsSUFBSSxDQUFDTSxJQUFMLENBQVVNLE9BQVYsR0FBb0IsS0FBS2Msd0JBQUwsQ0FBOEIyQixNQUE5QixDQUFwQjs7QUFDQSxRQUFJQSxNQUFNLENBQUNsQyxNQUFYLEVBQW1CO0FBQ2pCbkIsTUFBQUEsSUFBSSxDQUFDTSxJQUFMLENBQVVnRCxTQUFWLEdBQXNCLEtBQUtyQiwwQkFBTCxDQUFnQ29CLE1BQWhDLENBQXRCO0FBQ0EsV0FBSzFCLEdBQUwsQ0FBUzNCLElBQVQsRUFBZSxRQUFmLEVBQXlCcUQsTUFBekI7O0FBQ0EsVUFBSXhCLElBQUosRUFBVTtBQUNSdkMsUUFBQUEsS0FBSyxHQUFHK0QsTUFBTSxDQUFDQSxNQUFNLENBQUNsQyxNQUFQLEdBQWdCLENBQWpCLENBQWQ7QUFDQW5CLFFBQUFBLElBQUksQ0FBQ2hCLE1BQUwsQ0FBWVUsR0FBWixHQUFrQjtBQUFFUixVQUFBQSxJQUFJLEVBQUVJLEtBQUssQ0FBQyxDQUFELENBQWI7QUFBa0JILFVBQUFBLE1BQU0sRUFBRUcsS0FBSyxDQUFDLENBQUQ7QUFBL0IsU0FBbEI7QUFDQSxhQUFLVCxNQUFMLEdBQWNtQixJQUFJLENBQUNNLElBQUwsQ0FBVU0sT0FBeEI7QUFDQVosUUFBQUEsSUFBSSxDQUFDTSxJQUFMLENBQVVNLE9BQVYsR0FBb0IsRUFBcEI7QUFDRDtBQUNGLEtBVEQsTUFTTztBQUNMWixNQUFBQSxJQUFJLENBQUNNLElBQUwsQ0FBVWdELFNBQVYsR0FBc0IsRUFBdEI7QUFDQXRELE1BQUFBLElBQUksQ0FBQ3FELE1BQUwsR0FBYyxFQUFkO0FBQ0Q7O0FBRUQsUUFBSUQsSUFBSixFQUFVO0FBQ1JwRCxNQUFBQSxJQUFJLENBQUN1RCxLQUFMLEdBQWEsRUFBYjtBQUNBLFdBQUszRSxPQUFMLEdBQWVvQixJQUFmO0FBQ0Q7QUFDRixHOztTQUVETixHLEdBQUEsYUFBS0osS0FBTCxFQUFZO0FBQ1YsUUFBSSxLQUFLVixPQUFMLENBQWEyRSxLQUFiLElBQXNCLEtBQUszRSxPQUFMLENBQWEyRSxLQUFiLENBQW1CcEMsTUFBN0MsRUFBcUQ7QUFDbkQsV0FBS3ZDLE9BQUwsQ0FBYTBCLElBQWIsQ0FBa0J4QixTQUFsQixHQUE4QixLQUFLQSxTQUFuQztBQUNEOztBQUNELFNBQUtBLFNBQUwsR0FBaUIsS0FBakI7QUFFQSxTQUFLRixPQUFMLENBQWEwQixJQUFiLENBQWtCa0QsS0FBbEIsR0FBMEIsQ0FBQyxLQUFLNUUsT0FBTCxDQUFhMEIsSUFBYixDQUFrQmtELEtBQWxCLElBQTJCLEVBQTVCLElBQWtDLEtBQUszRSxNQUFqRTtBQUNBLFNBQUtBLE1BQUwsR0FBYyxFQUFkOztBQUVBLFFBQUksS0FBS0QsT0FBTCxDQUFhNkUsTUFBakIsRUFBeUI7QUFDdkIsV0FBSzdFLE9BQUwsQ0FBYUksTUFBYixDQUFvQlUsR0FBcEIsR0FBMEI7QUFBRVIsUUFBQUEsSUFBSSxFQUFFSSxLQUFLLENBQUMsQ0FBRCxDQUFiO0FBQWtCSCxRQUFBQSxNQUFNLEVBQUVHLEtBQUssQ0FBQyxDQUFEO0FBQS9CLE9BQTFCO0FBQ0EsV0FBS1YsT0FBTCxHQUFlLEtBQUtBLE9BQUwsQ0FBYTZFLE1BQTVCO0FBQ0QsS0FIRCxNQUdPO0FBQ0wsV0FBS0MsZUFBTCxDQUFxQnBFLEtBQXJCO0FBQ0Q7QUFDRixHOztTQUVEUyxPLEdBQUEsbUJBQVc7QUFDVCxRQUFJLEtBQUtuQixPQUFMLENBQWE2RSxNQUFqQixFQUF5QixLQUFLRSxhQUFMOztBQUN6QixRQUFJLEtBQUsvRSxPQUFMLENBQWEyRSxLQUFiLElBQXNCLEtBQUszRSxPQUFMLENBQWEyRSxLQUFiLENBQW1CcEMsTUFBN0MsRUFBcUQ7QUFDbkQsV0FBS3ZDLE9BQUwsQ0FBYTBCLElBQWIsQ0FBa0J4QixTQUFsQixHQUE4QixLQUFLQSxTQUFuQztBQUNEOztBQUNELFNBQUtGLE9BQUwsQ0FBYTBCLElBQWIsQ0FBa0JrRCxLQUFsQixHQUEwQixDQUFDLEtBQUs1RSxPQUFMLENBQWEwQixJQUFiLENBQWtCa0QsS0FBbEIsSUFBMkIsRUFBNUIsSUFBa0MsS0FBSzNFLE1BQWpFO0FBQ0QsRzs7U0FFRFksYSxHQUFBLHVCQUFlSCxLQUFmLEVBQXNCO0FBQ3BCLFNBQUtULE1BQUwsSUFBZVMsS0FBSyxDQUFDLENBQUQsQ0FBcEI7O0FBQ0EsUUFBSSxLQUFLVixPQUFMLENBQWEyRSxLQUFqQixFQUF3QjtBQUN0QixVQUFJSixJQUFJLEdBQUcsS0FBS3ZFLE9BQUwsQ0FBYTJFLEtBQWIsQ0FBbUIsS0FBSzNFLE9BQUwsQ0FBYTJFLEtBQWIsQ0FBbUJwQyxNQUFuQixHQUE0QixDQUEvQyxDQUFYOztBQUNBLFVBQUlnQyxJQUFJLElBQUlBLElBQUksQ0FBQ3RDLElBQUwsS0FBYyxNQUF0QixJQUFnQyxDQUFDc0MsSUFBSSxDQUFDN0MsSUFBTCxDQUFVc0QsWUFBL0MsRUFBNkQ7QUFDM0RULFFBQUFBLElBQUksQ0FBQzdDLElBQUwsQ0FBVXNELFlBQVYsR0FBeUIsS0FBSy9FLE1BQTlCO0FBQ0EsYUFBS0EsTUFBTCxHQUFjLEVBQWQ7QUFDRDtBQUNGO0FBQ0YsRyxDQUVEOzs7U0FFQXFCLEksR0FBQSxjQUFNRixJQUFOLEVBQVlkLElBQVosRUFBa0JDLE1BQWxCLEVBQTBCO0FBQ3hCLFNBQUtQLE9BQUwsQ0FBYXNDLElBQWIsQ0FBa0JsQixJQUFsQjtBQUVBQSxJQUFBQSxJQUFJLENBQUNoQixNQUFMLEdBQWM7QUFBRUMsTUFBQUEsS0FBSyxFQUFFO0FBQUVDLFFBQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRQyxRQUFBQSxNQUFNLEVBQU5BO0FBQVIsT0FBVDtBQUEyQlYsTUFBQUEsS0FBSyxFQUFFLEtBQUtBO0FBQXZDLEtBQWQ7QUFDQXVCLElBQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVd0IsTUFBVixHQUFtQixLQUFLakQsTUFBeEI7QUFDQSxTQUFLQSxNQUFMLEdBQWMsRUFBZDtBQUNBLFFBQUltQixJQUFJLENBQUNhLElBQUwsS0FBYyxTQUFsQixFQUE2QixLQUFLL0IsU0FBTCxHQUFpQixLQUFqQjtBQUM5QixHOztTQUVENkMsRyxHQUFBLGFBQUszQixJQUFMLEVBQVdnQyxJQUFYLEVBQWlCZixNQUFqQixFQUF5QjtBQUN2QixRQUFJM0IsS0FBSixFQUFXdUIsSUFBWDtBQUNBLFFBQUlNLE1BQU0sR0FBR0YsTUFBTSxDQUFDRSxNQUFwQjtBQUNBLFFBQUkyQixLQUFLLEdBQUcsRUFBWjtBQUNBLFFBQUllLEtBQUssR0FBRyxJQUFaO0FBQ0EsUUFBSUMsSUFBSixFQUFVWCxJQUFWO0FBQ0EsUUFBSVksT0FBTyxHQUFHLG1CQUFkOztBQUVBLFNBQUssSUFBSTVCLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdoQixNQUFwQixFQUE0QmdCLENBQUMsSUFBSSxDQUFqQyxFQUFvQztBQUNsQzdDLE1BQUFBLEtBQUssR0FBRzJCLE1BQU0sQ0FBQ2tCLENBQUQsQ0FBZDtBQUNBdEIsTUFBQUEsSUFBSSxHQUFHdkIsS0FBSyxDQUFDLENBQUQsQ0FBWjs7QUFFQSxVQUFJdUIsSUFBSSxLQUFLLFNBQVQsSUFBc0JiLElBQUksQ0FBQ2EsSUFBTCxLQUFjLE1BQXhDLEVBQWdEO0FBQzlDc0MsUUFBQUEsSUFBSSxHQUFHbEMsTUFBTSxDQUFDa0IsQ0FBQyxHQUFHLENBQUwsQ0FBYjtBQUNBMkIsUUFBQUEsSUFBSSxHQUFHN0MsTUFBTSxDQUFDa0IsQ0FBQyxHQUFHLENBQUwsQ0FBYjs7QUFFQSxZQUNFZ0IsSUFBSSxDQUFDLENBQUQsQ0FBSixLQUFZLE9BQVosSUFDQVcsSUFBSSxDQUFDLENBQUQsQ0FBSixLQUFZLE9BRFosSUFFQUMsT0FBTyxDQUFDMUQsSUFBUixDQUFhOEMsSUFBSSxDQUFDLENBQUQsQ0FBakIsQ0FGQSxJQUdBWSxPQUFPLENBQUMxRCxJQUFSLENBQWF5RCxJQUFJLENBQUMsQ0FBRCxDQUFqQixDQUpGLEVBS0U7QUFDQWhCLFVBQUFBLEtBQUssSUFBSXhELEtBQUssQ0FBQyxDQUFELENBQWQ7QUFDRCxTQVBELE1BT087QUFDTHVFLFVBQUFBLEtBQUssR0FBRyxLQUFSO0FBQ0Q7O0FBRUQ7QUFDRDs7QUFFRCxVQUFJaEQsSUFBSSxLQUFLLFNBQVQsSUFBdUJBLElBQUksS0FBSyxPQUFULElBQW9Cc0IsQ0FBQyxLQUFLaEIsTUFBTSxHQUFHLENBQTlELEVBQWtFO0FBQ2hFMEMsUUFBQUEsS0FBSyxHQUFHLEtBQVI7QUFDRCxPQUZELE1BRU87QUFDTGYsUUFBQUEsS0FBSyxJQUFJeEQsS0FBSyxDQUFDLENBQUQsQ0FBZDtBQUNEO0FBQ0Y7O0FBQ0QsUUFBSSxDQUFDdUUsS0FBTCxFQUFZO0FBQ1YsVUFBSWxDLEdBQUcsR0FBR1YsTUFBTSxDQUFDK0MsTUFBUCxDQUFjLFVBQUNDLEdBQUQsRUFBTTlCLENBQU47QUFBQSxlQUFZOEIsR0FBRyxHQUFHOUIsQ0FBQyxDQUFDLENBQUQsQ0FBbkI7QUFBQSxPQUFkLEVBQXNDLEVBQXRDLENBQVY7QUFDQW5DLE1BQUFBLElBQUksQ0FBQ00sSUFBTCxDQUFVMEIsSUFBVixJQUFrQjtBQUFFYyxRQUFBQSxLQUFLLEVBQUxBLEtBQUY7QUFBU25CLFFBQUFBLEdBQUcsRUFBSEE7QUFBVCxPQUFsQjtBQUNEOztBQUNEM0IsSUFBQUEsSUFBSSxDQUFDZ0MsSUFBRCxDQUFKLEdBQWFjLEtBQWI7QUFDRCxHOztTQUVEcEIsd0IsR0FBQSxrQ0FBMEJULE1BQTFCLEVBQWtDO0FBQ2hDLFFBQUlpRCxhQUFKO0FBQ0EsUUFBSXJGLE1BQU0sR0FBRyxFQUFiOztBQUNBLFdBQU9vQyxNQUFNLENBQUNFLE1BQWQsRUFBc0I7QUFDcEIrQyxNQUFBQSxhQUFhLEdBQUdqRCxNQUFNLENBQUNBLE1BQU0sQ0FBQ0UsTUFBUCxHQUFnQixDQUFqQixDQUFOLENBQTBCLENBQTFCLENBQWhCO0FBQ0EsVUFBSStDLGFBQWEsS0FBSyxPQUFsQixJQUE2QkEsYUFBYSxLQUFLLFNBQW5ELEVBQThEO0FBQzlEckYsTUFBQUEsTUFBTSxHQUFHb0MsTUFBTSxDQUFDTSxHQUFQLEdBQWEsQ0FBYixJQUFrQjFDLE1BQTNCO0FBQ0Q7O0FBQ0QsV0FBT0EsTUFBUDtBQUNELEc7O1NBRURvRCwwQixHQUFBLG9DQUE0QmhCLE1BQTVCLEVBQW9DO0FBQ2xDLFFBQUk2QyxJQUFKO0FBQ0EsUUFBSWpGLE1BQU0sR0FBRyxFQUFiOztBQUNBLFdBQU9vQyxNQUFNLENBQUNFLE1BQWQsRUFBc0I7QUFDcEIyQyxNQUFBQSxJQUFJLEdBQUc3QyxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFQO0FBQ0EsVUFBSTZDLElBQUksS0FBSyxPQUFULElBQW9CQSxJQUFJLEtBQUssU0FBakMsRUFBNEM7QUFDNUNqRixNQUFBQSxNQUFNLElBQUlvQyxNQUFNLENBQUNjLEtBQVAsR0FBZSxDQUFmLENBQVY7QUFDRDs7QUFDRCxXQUFPbEQsTUFBUDtBQUNELEc7O1NBRUQyRCxhLEdBQUEsdUJBQWV2QixNQUFmLEVBQXVCO0FBQ3JCLFFBQUlpRCxhQUFKO0FBQ0EsUUFBSXJGLE1BQU0sR0FBRyxFQUFiOztBQUNBLFdBQU9vQyxNQUFNLENBQUNFLE1BQWQsRUFBc0I7QUFDcEIrQyxNQUFBQSxhQUFhLEdBQUdqRCxNQUFNLENBQUNBLE1BQU0sQ0FBQ0UsTUFBUCxHQUFnQixDQUFqQixDQUFOLENBQTBCLENBQTFCLENBQWhCO0FBQ0EsVUFBSStDLGFBQWEsS0FBSyxPQUF0QixFQUErQjtBQUMvQnJGLE1BQUFBLE1BQU0sR0FBR29DLE1BQU0sQ0FBQ00sR0FBUCxHQUFhLENBQWIsSUFBa0IxQyxNQUEzQjtBQUNEOztBQUNELFdBQU9BLE1BQVA7QUFDRCxHOztTQUVEMEQsVSxHQUFBLG9CQUFZdEIsTUFBWixFQUFvQmtELElBQXBCLEVBQTBCO0FBQ3hCLFFBQUlDLE1BQU0sR0FBRyxFQUFiOztBQUNBLFNBQUssSUFBSWpDLENBQUMsR0FBR2dDLElBQWIsRUFBbUJoQyxDQUFDLEdBQUdsQixNQUFNLENBQUNFLE1BQTlCLEVBQXNDZ0IsQ0FBQyxFQUF2QyxFQUEyQztBQUN6Q2lDLE1BQUFBLE1BQU0sSUFBSW5ELE1BQU0sQ0FBQ2tCLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBVjtBQUNEOztBQUNEbEIsSUFBQUEsTUFBTSxDQUFDb0QsTUFBUCxDQUFjRixJQUFkLEVBQW9CbEQsTUFBTSxDQUFDRSxNQUFQLEdBQWdCZ0QsSUFBcEM7QUFDQSxXQUFPQyxNQUFQO0FBQ0QsRzs7U0FFRHRELEssR0FBQSxlQUFPRyxNQUFQLEVBQWU7QUFDYixRQUFJRCxRQUFRLEdBQUcsQ0FBZjtBQUNBLFFBQUkxQixLQUFKLEVBQVd1QixJQUFYLEVBQWlCc0MsSUFBakI7O0FBQ0EsU0FBSyxJQUFJaEIsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR2xCLE1BQU0sQ0FBQ0UsTUFBM0IsRUFBbUNnQixDQUFDLEVBQXBDLEVBQXdDO0FBQ3RDN0MsTUFBQUEsS0FBSyxHQUFHMkIsTUFBTSxDQUFDa0IsQ0FBRCxDQUFkO0FBQ0F0QixNQUFBQSxJQUFJLEdBQUd2QixLQUFLLENBQUMsQ0FBRCxDQUFaOztBQUVBLFVBQUl1QixJQUFJLEtBQUssR0FBYixFQUFrQjtBQUNoQkcsUUFBQUEsUUFBUSxJQUFJLENBQVo7QUFDRDs7QUFDRCxVQUFJSCxJQUFJLEtBQUssR0FBYixFQUFrQjtBQUNoQkcsUUFBQUEsUUFBUSxJQUFJLENBQVo7QUFDRDs7QUFDRCxVQUFJQSxRQUFRLEtBQUssQ0FBYixJQUFrQkgsSUFBSSxLQUFLLEdBQS9CLEVBQW9DO0FBQ2xDLFlBQUksQ0FBQ3NDLElBQUwsRUFBVztBQUNULGVBQUttQixXQUFMLENBQWlCaEYsS0FBakI7QUFDRCxTQUZELE1BRU8sSUFBSTZELElBQUksQ0FBQyxDQUFELENBQUosS0FBWSxNQUFaLElBQXNCQSxJQUFJLENBQUMsQ0FBRCxDQUFKLEtBQVksUUFBdEMsRUFBZ0Q7QUFDckQ7QUFDRCxTQUZNLE1BRUE7QUFDTCxpQkFBT2hCLENBQVA7QUFDRDtBQUNGOztBQUVEZ0IsTUFBQUEsSUFBSSxHQUFHN0QsS0FBUDtBQUNEOztBQUNELFdBQU8sS0FBUDtBQUNELEcsQ0FFRDs7O1NBRUFrQyxlLEdBQUEseUJBQWlCVCxPQUFqQixFQUEwQjtBQUN4QixVQUFNLEtBQUt0QyxLQUFMLENBQVc4RixLQUFYLENBQWlCLGtCQUFqQixFQUFxQ3hELE9BQU8sQ0FBQyxDQUFELENBQTVDLEVBQWlEQSxPQUFPLENBQUMsQ0FBRCxDQUF4RCxDQUFOO0FBQ0QsRzs7U0FFRFUsVyxHQUFBLHFCQUFhUixNQUFiLEVBQXFCO0FBQ25CLFVBQU0sS0FBS3hDLEtBQUwsQ0FBVzhGLEtBQVgsQ0FBaUIsY0FBakIsRUFBaUN0RCxNQUFNLENBQUMsQ0FBRCxDQUFOLENBQVUsQ0FBVixDQUFqQyxFQUErQ0EsTUFBTSxDQUFDLENBQUQsQ0FBTixDQUFVLENBQVYsQ0FBL0MsQ0FBTjtBQUNELEc7O1NBRUR5QyxlLEdBQUEseUJBQWlCcEUsS0FBakIsRUFBd0I7QUFDdEIsVUFBTSxLQUFLYixLQUFMLENBQVc4RixLQUFYLENBQWlCLGNBQWpCLEVBQWlDakYsS0FBSyxDQUFDLENBQUQsQ0FBdEMsRUFBMkNBLEtBQUssQ0FBQyxDQUFELENBQWhELENBQU47QUFDRCxHOztTQUVEcUUsYSxHQUFBLHlCQUFpQjtBQUNmLFFBQUlhLEdBQUcsR0FBRyxLQUFLNUYsT0FBTCxDQUFhSSxNQUFiLENBQW9CQyxLQUE5QjtBQUNBLFVBQU0sS0FBS1IsS0FBTCxDQUFXOEYsS0FBWCxDQUFpQixnQkFBakIsRUFBbUNDLEdBQUcsQ0FBQ3RGLElBQXZDLEVBQTZDc0YsR0FBRyxDQUFDckYsTUFBakQsQ0FBTjtBQUNELEc7O1NBRURtRixXLEdBQUEscUJBQWFoRixLQUFiLEVBQW9CO0FBQ2xCLFVBQU0sS0FBS2IsS0FBTCxDQUFXOEYsS0FBWCxDQUFpQixjQUFqQixFQUFpQ2pGLEtBQUssQ0FBQyxDQUFELENBQXRDLEVBQTJDQSxLQUFLLENBQUMsQ0FBRCxDQUFoRCxDQUFOO0FBQ0QsRzs7U0FFRDRELGEsR0FBQSx1QkFBZWxELElBQWYsRUFBcUJWLEtBQXJCLEVBQTRCO0FBQzFCLFVBQU0sS0FBS2IsS0FBTCxDQUFXOEYsS0FBWCxDQUFpQixzQkFBakIsRUFBeUNqRixLQUFLLENBQUMsQ0FBRCxDQUE5QyxFQUFtREEsS0FBSyxDQUFDLENBQUQsQ0FBeEQsQ0FBTjtBQUNELEc7O1NBRUQ0Qyx1QixHQUFBO0FBQXlCO0FBQWMsR0FDckM7QUFDRCxHOztTQUVEYSxvQixHQUFBLDhCQUFzQjlCLE1BQXRCLEVBQThCO0FBQzVCLFFBQUlILEtBQUssR0FBRyxLQUFLQSxLQUFMLENBQVdHLE1BQVgsQ0FBWjtBQUNBLFFBQUlILEtBQUssS0FBSyxLQUFkLEVBQXFCO0FBRXJCLFFBQUkyRCxPQUFPLEdBQUcsQ0FBZDtBQUNBLFFBQUluRixLQUFKOztBQUNBLFNBQUssSUFBSXFELENBQUMsR0FBRzdCLEtBQUssR0FBRyxDQUFyQixFQUF3QjZCLENBQUMsSUFBSSxDQUE3QixFQUFnQ0EsQ0FBQyxFQUFqQyxFQUFxQztBQUNuQ3JELE1BQUFBLEtBQUssR0FBRzJCLE1BQU0sQ0FBQzBCLENBQUQsQ0FBZDs7QUFDQSxVQUFJckQsS0FBSyxDQUFDLENBQUQsQ0FBTCxLQUFhLE9BQWpCLEVBQTBCO0FBQ3hCbUYsUUFBQUEsT0FBTyxJQUFJLENBQVg7QUFDQSxZQUFJQSxPQUFPLEtBQUssQ0FBaEIsRUFBbUI7QUFDcEI7QUFDRjs7QUFDRCxVQUFNLEtBQUtoRyxLQUFMLENBQVc4RixLQUFYLENBQWlCLGtCQUFqQixFQUFxQ2pGLEtBQUssQ0FBQyxDQUFELENBQTFDLEVBQStDQSxLQUFLLENBQUMsQ0FBRCxDQUFwRCxDQUFOO0FBQ0QsRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEZWNsYXJhdGlvbiBmcm9tICcuL2RlY2xhcmF0aW9uJ1xuaW1wb3J0IHRva2VuaXplciBmcm9tICcuL3Rva2VuaXplJ1xuaW1wb3J0IENvbW1lbnQgZnJvbSAnLi9jb21tZW50J1xuaW1wb3J0IEF0UnVsZSBmcm9tICcuL2F0LXJ1bGUnXG5pbXBvcnQgUm9vdCBmcm9tICcuL3Jvb3QnXG5pbXBvcnQgUnVsZSBmcm9tICcuL3J1bGUnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhcnNlciB7XG4gIGNvbnN0cnVjdG9yIChpbnB1dCkge1xuICAgIHRoaXMuaW5wdXQgPSBpbnB1dFxuXG4gICAgdGhpcy5yb290ID0gbmV3IFJvb3QoKVxuICAgIHRoaXMuY3VycmVudCA9IHRoaXMucm9vdFxuICAgIHRoaXMuc3BhY2VzID0gJydcbiAgICB0aGlzLnNlbWljb2xvbiA9IGZhbHNlXG5cbiAgICB0aGlzLmNyZWF0ZVRva2VuaXplcigpXG4gICAgdGhpcy5yb290LnNvdXJjZSA9IHsgaW5wdXQsIHN0YXJ0OiB7IGxpbmU6IDEsIGNvbHVtbjogMSB9IH1cbiAgfVxuXG4gIGNyZWF0ZVRva2VuaXplciAoKSB7XG4gICAgdGhpcy50b2tlbml6ZXIgPSB0b2tlbml6ZXIodGhpcy5pbnB1dClcbiAgfVxuXG4gIHBhcnNlICgpIHtcbiAgICBsZXQgdG9rZW5cbiAgICB3aGlsZSAoIXRoaXMudG9rZW5pemVyLmVuZE9mRmlsZSgpKSB7XG4gICAgICB0b2tlbiA9IHRoaXMudG9rZW5pemVyLm5leHRUb2tlbigpXG5cbiAgICAgIHN3aXRjaCAodG9rZW5bMF0pIHtcbiAgICAgICAgY2FzZSAnc3BhY2UnOlxuICAgICAgICAgIHRoaXMuc3BhY2VzICs9IHRva2VuWzFdXG4gICAgICAgICAgYnJlYWtcblxuICAgICAgICBjYXNlICc7JzpcbiAgICAgICAgICB0aGlzLmZyZWVTZW1pY29sb24odG9rZW4pXG4gICAgICAgICAgYnJlYWtcblxuICAgICAgICBjYXNlICd9JzpcbiAgICAgICAgICB0aGlzLmVuZCh0b2tlbilcbiAgICAgICAgICBicmVha1xuXG4gICAgICAgIGNhc2UgJ2NvbW1lbnQnOlxuICAgICAgICAgIHRoaXMuY29tbWVudCh0b2tlbilcbiAgICAgICAgICBicmVha1xuXG4gICAgICAgIGNhc2UgJ2F0LXdvcmQnOlxuICAgICAgICAgIHRoaXMuYXRydWxlKHRva2VuKVxuICAgICAgICAgIGJyZWFrXG5cbiAgICAgICAgY2FzZSAneyc6XG4gICAgICAgICAgdGhpcy5lbXB0eVJ1bGUodG9rZW4pXG4gICAgICAgICAgYnJlYWtcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHRoaXMub3RoZXIodG9rZW4pXG4gICAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICB9XG4gICAgdGhpcy5lbmRGaWxlKClcbiAgfVxuXG4gIGNvbW1lbnQgKHRva2VuKSB7XG4gICAgbGV0IG5vZGUgPSBuZXcgQ29tbWVudCgpXG4gICAgdGhpcy5pbml0KG5vZGUsIHRva2VuWzJdLCB0b2tlblszXSlcbiAgICBub2RlLnNvdXJjZS5lbmQgPSB7IGxpbmU6IHRva2VuWzRdLCBjb2x1bW46IHRva2VuWzVdIH1cblxuICAgIGxldCB0ZXh0ID0gdG9rZW5bMV0uc2xpY2UoMiwgLTIpXG4gICAgaWYgKC9eXFxzKiQvLnRlc3QodGV4dCkpIHtcbiAgICAgIG5vZGUudGV4dCA9ICcnXG4gICAgICBub2RlLnJhd3MubGVmdCA9IHRleHRcbiAgICAgIG5vZGUucmF3cy5yaWdodCA9ICcnXG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBtYXRjaCA9IHRleHQubWF0Y2goL14oXFxzKikoW15dKlteXFxzXSkoXFxzKikkLylcbiAgICAgIG5vZGUudGV4dCA9IG1hdGNoWzJdXG4gICAgICBub2RlLnJhd3MubGVmdCA9IG1hdGNoWzFdXG4gICAgICBub2RlLnJhd3MucmlnaHQgPSBtYXRjaFszXVxuICAgIH1cbiAgfVxuXG4gIGVtcHR5UnVsZSAodG9rZW4pIHtcbiAgICBsZXQgbm9kZSA9IG5ldyBSdWxlKClcbiAgICB0aGlzLmluaXQobm9kZSwgdG9rZW5bMl0sIHRva2VuWzNdKVxuICAgIG5vZGUuc2VsZWN0b3IgPSAnJ1xuICAgIG5vZGUucmF3cy5iZXR3ZWVuID0gJydcbiAgICB0aGlzLmN1cnJlbnQgPSBub2RlXG4gIH1cblxuICBvdGhlciAoc3RhcnQpIHtcbiAgICBsZXQgZW5kID0gZmFsc2VcbiAgICBsZXQgdHlwZSA9IG51bGxcbiAgICBsZXQgY29sb24gPSBmYWxzZVxuICAgIGxldCBicmFja2V0ID0gbnVsbFxuICAgIGxldCBicmFja2V0cyA9IFtdXG5cbiAgICBsZXQgdG9rZW5zID0gW11cbiAgICBsZXQgdG9rZW4gPSBzdGFydFxuICAgIHdoaWxlICh0b2tlbikge1xuICAgICAgdHlwZSA9IHRva2VuWzBdXG4gICAgICB0b2tlbnMucHVzaCh0b2tlbilcblxuICAgICAgaWYgKHR5cGUgPT09ICcoJyB8fCB0eXBlID09PSAnWycpIHtcbiAgICAgICAgaWYgKCFicmFja2V0KSBicmFja2V0ID0gdG9rZW5cbiAgICAgICAgYnJhY2tldHMucHVzaCh0eXBlID09PSAnKCcgPyAnKScgOiAnXScpXG4gICAgICB9IGVsc2UgaWYgKGJyYWNrZXRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBpZiAodHlwZSA9PT0gJzsnKSB7XG4gICAgICAgICAgaWYgKGNvbG9uKSB7XG4gICAgICAgICAgICB0aGlzLmRlY2wodG9rZW5zKVxuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICd7Jykge1xuICAgICAgICAgIHRoaXMucnVsZSh0b2tlbnMpXG4gICAgICAgICAgcmV0dXJuXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJ30nKSB7XG4gICAgICAgICAgdGhpcy50b2tlbml6ZXIuYmFjayh0b2tlbnMucG9wKCkpXG4gICAgICAgICAgZW5kID0gdHJ1ZVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gJzonKSB7XG4gICAgICAgICAgY29sb24gPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAodHlwZSA9PT0gYnJhY2tldHNbYnJhY2tldHMubGVuZ3RoIC0gMV0pIHtcbiAgICAgICAgYnJhY2tldHMucG9wKClcbiAgICAgICAgaWYgKGJyYWNrZXRzLmxlbmd0aCA9PT0gMCkgYnJhY2tldCA9IG51bGxcbiAgICAgIH1cblxuICAgICAgdG9rZW4gPSB0aGlzLnRva2VuaXplci5uZXh0VG9rZW4oKVxuICAgIH1cblxuICAgIGlmICh0aGlzLnRva2VuaXplci5lbmRPZkZpbGUoKSkgZW5kID0gdHJ1ZVxuICAgIGlmIChicmFja2V0cy5sZW5ndGggPiAwKSB0aGlzLnVuY2xvc2VkQnJhY2tldChicmFja2V0KVxuXG4gICAgaWYgKGVuZCAmJiBjb2xvbikge1xuICAgICAgd2hpbGUgKHRva2Vucy5sZW5ndGgpIHtcbiAgICAgICAgdG9rZW4gPSB0b2tlbnNbdG9rZW5zLmxlbmd0aCAtIDFdWzBdXG4gICAgICAgIGlmICh0b2tlbiAhPT0gJ3NwYWNlJyAmJiB0b2tlbiAhPT0gJ2NvbW1lbnQnKSBicmVha1xuICAgICAgICB0aGlzLnRva2VuaXplci5iYWNrKHRva2Vucy5wb3AoKSlcbiAgICAgIH1cbiAgICAgIHRoaXMuZGVjbCh0b2tlbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudW5rbm93bldvcmQodG9rZW5zKVxuICAgIH1cbiAgfVxuXG4gIHJ1bGUgKHRva2Vucykge1xuICAgIHRva2Vucy5wb3AoKVxuXG4gICAgbGV0IG5vZGUgPSBuZXcgUnVsZSgpXG4gICAgdGhpcy5pbml0KG5vZGUsIHRva2Vuc1swXVsyXSwgdG9rZW5zWzBdWzNdKVxuXG4gICAgbm9kZS5yYXdzLmJldHdlZW4gPSB0aGlzLnNwYWNlc0FuZENvbW1lbnRzRnJvbUVuZCh0b2tlbnMpXG4gICAgdGhpcy5yYXcobm9kZSwgJ3NlbGVjdG9yJywgdG9rZW5zKVxuICAgIHRoaXMuY3VycmVudCA9IG5vZGVcbiAgfVxuXG4gIGRlY2wgKHRva2Vucykge1xuICAgIGxldCBub2RlID0gbmV3IERlY2xhcmF0aW9uKClcbiAgICB0aGlzLmluaXQobm9kZSlcblxuICAgIGxldCBsYXN0ID0gdG9rZW5zW3Rva2Vucy5sZW5ndGggLSAxXVxuICAgIGlmIChsYXN0WzBdID09PSAnOycpIHtcbiAgICAgIHRoaXMuc2VtaWNvbG9uID0gdHJ1ZVxuICAgICAgdG9rZW5zLnBvcCgpXG4gICAgfVxuICAgIGlmIChsYXN0WzRdKSB7XG4gICAgICBub2RlLnNvdXJjZS5lbmQgPSB7IGxpbmU6IGxhc3RbNF0sIGNvbHVtbjogbGFzdFs1XSB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG5vZGUuc291cmNlLmVuZCA9IHsgbGluZTogbGFzdFsyXSwgY29sdW1uOiBsYXN0WzNdIH1cbiAgICB9XG5cbiAgICB3aGlsZSAodG9rZW5zWzBdWzBdICE9PSAnd29yZCcpIHtcbiAgICAgIGlmICh0b2tlbnMubGVuZ3RoID09PSAxKSB0aGlzLnVua25vd25Xb3JkKHRva2VucylcbiAgICAgIG5vZGUucmF3cy5iZWZvcmUgKz0gdG9rZW5zLnNoaWZ0KClbMV1cbiAgICB9XG4gICAgbm9kZS5zb3VyY2Uuc3RhcnQgPSB7IGxpbmU6IHRva2Vuc1swXVsyXSwgY29sdW1uOiB0b2tlbnNbMF1bM10gfVxuXG4gICAgbm9kZS5wcm9wID0gJydcbiAgICB3aGlsZSAodG9rZW5zLmxlbmd0aCkge1xuICAgICAgbGV0IHR5cGUgPSB0b2tlbnNbMF1bMF1cbiAgICAgIGlmICh0eXBlID09PSAnOicgfHwgdHlwZSA9PT0gJ3NwYWNlJyB8fCB0eXBlID09PSAnY29tbWVudCcpIHtcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICAgIG5vZGUucHJvcCArPSB0b2tlbnMuc2hpZnQoKVsxXVxuICAgIH1cblxuICAgIG5vZGUucmF3cy5iZXR3ZWVuID0gJydcblxuICAgIGxldCB0b2tlblxuICAgIHdoaWxlICh0b2tlbnMubGVuZ3RoKSB7XG4gICAgICB0b2tlbiA9IHRva2Vucy5zaGlmdCgpXG5cbiAgICAgIGlmICh0b2tlblswXSA9PT0gJzonKSB7XG4gICAgICAgIG5vZGUucmF3cy5iZXR3ZWVuICs9IHRva2VuWzFdXG4gICAgICAgIGJyZWFrXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAodG9rZW5bMF0gPT09ICd3b3JkJyAmJiAvXFx3Ly50ZXN0KHRva2VuWzFdKSkge1xuICAgICAgICAgIHRoaXMudW5rbm93bldvcmQoW3Rva2VuXSlcbiAgICAgICAgfVxuICAgICAgICBub2RlLnJhd3MuYmV0d2VlbiArPSB0b2tlblsxXVxuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChub2RlLnByb3BbMF0gPT09ICdfJyB8fCBub2RlLnByb3BbMF0gPT09ICcqJykge1xuICAgICAgbm9kZS5yYXdzLmJlZm9yZSArPSBub2RlLnByb3BbMF1cbiAgICAgIG5vZGUucHJvcCA9IG5vZGUucHJvcC5zbGljZSgxKVxuICAgIH1cbiAgICBub2RlLnJhd3MuYmV0d2VlbiArPSB0aGlzLnNwYWNlc0FuZENvbW1lbnRzRnJvbVN0YXJ0KHRva2VucylcbiAgICB0aGlzLnByZWNoZWNrTWlzc2VkU2VtaWNvbG9uKHRva2VucylcblxuICAgIGZvciAobGV0IGkgPSB0b2tlbnMubGVuZ3RoIC0gMTsgaSA+IDA7IGktLSkge1xuICAgICAgdG9rZW4gPSB0b2tlbnNbaV1cbiAgICAgIGlmICh0b2tlblsxXS50b0xvd2VyQ2FzZSgpID09PSAnIWltcG9ydGFudCcpIHtcbiAgICAgICAgbm9kZS5pbXBvcnRhbnQgPSB0cnVlXG4gICAgICAgIGxldCBzdHJpbmcgPSB0aGlzLnN0cmluZ0Zyb20odG9rZW5zLCBpKVxuICAgICAgICBzdHJpbmcgPSB0aGlzLnNwYWNlc0Zyb21FbmQodG9rZW5zKSArIHN0cmluZ1xuICAgICAgICBpZiAoc3RyaW5nICE9PSAnICFpbXBvcnRhbnQnKSBub2RlLnJhd3MuaW1wb3J0YW50ID0gc3RyaW5nXG4gICAgICAgIGJyZWFrXG4gICAgICB9IGVsc2UgaWYgKHRva2VuWzFdLnRvTG93ZXJDYXNlKCkgPT09ICdpbXBvcnRhbnQnKSB7XG4gICAgICAgIGxldCBjYWNoZSA9IHRva2Vucy5zbGljZSgwKVxuICAgICAgICBsZXQgc3RyID0gJydcbiAgICAgICAgZm9yIChsZXQgaiA9IGk7IGogPiAwOyBqLS0pIHtcbiAgICAgICAgICBsZXQgdHlwZSA9IGNhY2hlW2pdWzBdXG4gICAgICAgICAgaWYgKHN0ci50cmltKCkuaW5kZXhPZignIScpID09PSAwICYmIHR5cGUgIT09ICdzcGFjZScpIHtcbiAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgfVxuICAgICAgICAgIHN0ciA9IGNhY2hlLnBvcCgpWzFdICsgc3RyXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHN0ci50cmltKCkuaW5kZXhPZignIScpID09PSAwKSB7XG4gICAgICAgICAgbm9kZS5pbXBvcnRhbnQgPSB0cnVlXG4gICAgICAgICAgbm9kZS5yYXdzLmltcG9ydGFudCA9IHN0clxuICAgICAgICAgIHRva2VucyA9IGNhY2hlXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHRva2VuWzBdICE9PSAnc3BhY2UnICYmIHRva2VuWzBdICE9PSAnY29tbWVudCcpIHtcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnJhdyhub2RlLCAndmFsdWUnLCB0b2tlbnMpXG5cbiAgICBpZiAobm9kZS52YWx1ZS5pbmRleE9mKCc6JykgIT09IC0xKSB0aGlzLmNoZWNrTWlzc2VkU2VtaWNvbG9uKHRva2VucylcbiAgfVxuXG4gIGF0cnVsZSAodG9rZW4pIHtcbiAgICBsZXQgbm9kZSA9IG5ldyBBdFJ1bGUoKVxuICAgIG5vZGUubmFtZSA9IHRva2VuWzFdLnNsaWNlKDEpXG4gICAgaWYgKG5vZGUubmFtZSA9PT0gJycpIHtcbiAgICAgIHRoaXMudW5uYW1lZEF0cnVsZShub2RlLCB0b2tlbilcbiAgICB9XG4gICAgdGhpcy5pbml0KG5vZGUsIHRva2VuWzJdLCB0b2tlblszXSlcblxuICAgIGxldCBwcmV2XG4gICAgbGV0IHNoaWZ0XG4gICAgbGV0IGxhc3QgPSBmYWxzZVxuICAgIGxldCBvcGVuID0gZmFsc2VcbiAgICBsZXQgcGFyYW1zID0gW11cblxuICAgIHdoaWxlICghdGhpcy50b2tlbml6ZXIuZW5kT2ZGaWxlKCkpIHtcbiAgICAgIHRva2VuID0gdGhpcy50b2tlbml6ZXIubmV4dFRva2VuKClcblxuICAgICAgaWYgKHRva2VuWzBdID09PSAnOycpIHtcbiAgICAgICAgbm9kZS5zb3VyY2UuZW5kID0geyBsaW5lOiB0b2tlblsyXSwgY29sdW1uOiB0b2tlblszXSB9XG4gICAgICAgIHRoaXMuc2VtaWNvbG9uID0gdHJ1ZVxuICAgICAgICBicmVha1xuICAgICAgfSBlbHNlIGlmICh0b2tlblswXSA9PT0gJ3snKSB7XG4gICAgICAgIG9wZW4gPSB0cnVlXG4gICAgICAgIGJyZWFrXG4gICAgICB9IGVsc2UgaWYgKHRva2VuWzBdID09PSAnfScpIHtcbiAgICAgICAgaWYgKHBhcmFtcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgc2hpZnQgPSBwYXJhbXMubGVuZ3RoIC0gMVxuICAgICAgICAgIHByZXYgPSBwYXJhbXNbc2hpZnRdXG4gICAgICAgICAgd2hpbGUgKHByZXYgJiYgcHJldlswXSA9PT0gJ3NwYWNlJykge1xuICAgICAgICAgICAgcHJldiA9IHBhcmFtc1stLXNoaWZ0XVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocHJldikge1xuICAgICAgICAgICAgbm9kZS5zb3VyY2UuZW5kID0geyBsaW5lOiBwcmV2WzRdLCBjb2x1bW46IHByZXZbNV0gfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmVuZCh0b2tlbilcbiAgICAgICAgYnJlYWtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHBhcmFtcy5wdXNoKHRva2VuKVxuICAgICAgfVxuXG4gICAgICBpZiAodGhpcy50b2tlbml6ZXIuZW5kT2ZGaWxlKCkpIHtcbiAgICAgICAgbGFzdCA9IHRydWVcbiAgICAgICAgYnJlYWtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBub2RlLnJhd3MuYmV0d2VlbiA9IHRoaXMuc3BhY2VzQW5kQ29tbWVudHNGcm9tRW5kKHBhcmFtcylcbiAgICBpZiAocGFyYW1zLmxlbmd0aCkge1xuICAgICAgbm9kZS5yYXdzLmFmdGVyTmFtZSA9IHRoaXMuc3BhY2VzQW5kQ29tbWVudHNGcm9tU3RhcnQocGFyYW1zKVxuICAgICAgdGhpcy5yYXcobm9kZSwgJ3BhcmFtcycsIHBhcmFtcylcbiAgICAgIGlmIChsYXN0KSB7XG4gICAgICAgIHRva2VuID0gcGFyYW1zW3BhcmFtcy5sZW5ndGggLSAxXVxuICAgICAgICBub2RlLnNvdXJjZS5lbmQgPSB7IGxpbmU6IHRva2VuWzRdLCBjb2x1bW46IHRva2VuWzVdIH1cbiAgICAgICAgdGhpcy5zcGFjZXMgPSBub2RlLnJhd3MuYmV0d2VlblxuICAgICAgICBub2RlLnJhd3MuYmV0d2VlbiA9ICcnXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIG5vZGUucmF3cy5hZnRlck5hbWUgPSAnJ1xuICAgICAgbm9kZS5wYXJhbXMgPSAnJ1xuICAgIH1cblxuICAgIGlmIChvcGVuKSB7XG4gICAgICBub2RlLm5vZGVzID0gW11cbiAgICAgIHRoaXMuY3VycmVudCA9IG5vZGVcbiAgICB9XG4gIH1cblxuICBlbmQgKHRva2VuKSB7XG4gICAgaWYgKHRoaXMuY3VycmVudC5ub2RlcyAmJiB0aGlzLmN1cnJlbnQubm9kZXMubGVuZ3RoKSB7XG4gICAgICB0aGlzLmN1cnJlbnQucmF3cy5zZW1pY29sb24gPSB0aGlzLnNlbWljb2xvblxuICAgIH1cbiAgICB0aGlzLnNlbWljb2xvbiA9IGZhbHNlXG5cbiAgICB0aGlzLmN1cnJlbnQucmF3cy5hZnRlciA9ICh0aGlzLmN1cnJlbnQucmF3cy5hZnRlciB8fCAnJykgKyB0aGlzLnNwYWNlc1xuICAgIHRoaXMuc3BhY2VzID0gJydcblxuICAgIGlmICh0aGlzLmN1cnJlbnQucGFyZW50KSB7XG4gICAgICB0aGlzLmN1cnJlbnQuc291cmNlLmVuZCA9IHsgbGluZTogdG9rZW5bMl0sIGNvbHVtbjogdG9rZW5bM10gfVxuICAgICAgdGhpcy5jdXJyZW50ID0gdGhpcy5jdXJyZW50LnBhcmVudFxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnVuZXhwZWN0ZWRDbG9zZSh0b2tlbilcbiAgICB9XG4gIH1cblxuICBlbmRGaWxlICgpIHtcbiAgICBpZiAodGhpcy5jdXJyZW50LnBhcmVudCkgdGhpcy51bmNsb3NlZEJsb2NrKClcbiAgICBpZiAodGhpcy5jdXJyZW50Lm5vZGVzICYmIHRoaXMuY3VycmVudC5ub2Rlcy5sZW5ndGgpIHtcbiAgICAgIHRoaXMuY3VycmVudC5yYXdzLnNlbWljb2xvbiA9IHRoaXMuc2VtaWNvbG9uXG4gICAgfVxuICAgIHRoaXMuY3VycmVudC5yYXdzLmFmdGVyID0gKHRoaXMuY3VycmVudC5yYXdzLmFmdGVyIHx8ICcnKSArIHRoaXMuc3BhY2VzXG4gIH1cblxuICBmcmVlU2VtaWNvbG9uICh0b2tlbikge1xuICAgIHRoaXMuc3BhY2VzICs9IHRva2VuWzFdXG4gICAgaWYgKHRoaXMuY3VycmVudC5ub2Rlcykge1xuICAgICAgbGV0IHByZXYgPSB0aGlzLmN1cnJlbnQubm9kZXNbdGhpcy5jdXJyZW50Lm5vZGVzLmxlbmd0aCAtIDFdXG4gICAgICBpZiAocHJldiAmJiBwcmV2LnR5cGUgPT09ICdydWxlJyAmJiAhcHJldi5yYXdzLm93blNlbWljb2xvbikge1xuICAgICAgICBwcmV2LnJhd3Mub3duU2VtaWNvbG9uID0gdGhpcy5zcGFjZXNcbiAgICAgICAgdGhpcy5zcGFjZXMgPSAnJ1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8vIEhlbHBlcnNcblxuICBpbml0IChub2RlLCBsaW5lLCBjb2x1bW4pIHtcbiAgICB0aGlzLmN1cnJlbnQucHVzaChub2RlKVxuXG4gICAgbm9kZS5zb3VyY2UgPSB7IHN0YXJ0OiB7IGxpbmUsIGNvbHVtbiB9LCBpbnB1dDogdGhpcy5pbnB1dCB9XG4gICAgbm9kZS5yYXdzLmJlZm9yZSA9IHRoaXMuc3BhY2VzXG4gICAgdGhpcy5zcGFjZXMgPSAnJ1xuICAgIGlmIChub2RlLnR5cGUgIT09ICdjb21tZW50JykgdGhpcy5zZW1pY29sb24gPSBmYWxzZVxuICB9XG5cbiAgcmF3IChub2RlLCBwcm9wLCB0b2tlbnMpIHtcbiAgICBsZXQgdG9rZW4sIHR5cGVcbiAgICBsZXQgbGVuZ3RoID0gdG9rZW5zLmxlbmd0aFxuICAgIGxldCB2YWx1ZSA9ICcnXG4gICAgbGV0IGNsZWFuID0gdHJ1ZVxuICAgIGxldCBuZXh0LCBwcmV2XG4gICAgbGV0IHBhdHRlcm4gPSAvXihbLnwjXSk/KFtcXHddKSsvaVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkgKz0gMSkge1xuICAgICAgdG9rZW4gPSB0b2tlbnNbaV1cbiAgICAgIHR5cGUgPSB0b2tlblswXVxuXG4gICAgICBpZiAodHlwZSA9PT0gJ2NvbW1lbnQnICYmIG5vZGUudHlwZSA9PT0gJ3J1bGUnKSB7XG4gICAgICAgIHByZXYgPSB0b2tlbnNbaSAtIDFdXG4gICAgICAgIG5leHQgPSB0b2tlbnNbaSArIDFdXG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgIHByZXZbMF0gIT09ICdzcGFjZScgJiZcbiAgICAgICAgICBuZXh0WzBdICE9PSAnc3BhY2UnICYmXG4gICAgICAgICAgcGF0dGVybi50ZXN0KHByZXZbMV0pICYmXG4gICAgICAgICAgcGF0dGVybi50ZXN0KG5leHRbMV0pXG4gICAgICAgICkge1xuICAgICAgICAgIHZhbHVlICs9IHRva2VuWzFdXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2xlYW4gPSBmYWxzZVxuICAgICAgICB9XG5cbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGUgPT09ICdjb21tZW50JyB8fCAodHlwZSA9PT0gJ3NwYWNlJyAmJiBpID09PSBsZW5ndGggLSAxKSkge1xuICAgICAgICBjbGVhbiA9IGZhbHNlXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWx1ZSArPSB0b2tlblsxXVxuICAgICAgfVxuICAgIH1cbiAgICBpZiAoIWNsZWFuKSB7XG4gICAgICBsZXQgcmF3ID0gdG9rZW5zLnJlZHVjZSgoYWxsLCBpKSA9PiBhbGwgKyBpWzFdLCAnJylcbiAgICAgIG5vZGUucmF3c1twcm9wXSA9IHsgdmFsdWUsIHJhdyB9XG4gICAgfVxuICAgIG5vZGVbcHJvcF0gPSB2YWx1ZVxuICB9XG5cbiAgc3BhY2VzQW5kQ29tbWVudHNGcm9tRW5kICh0b2tlbnMpIHtcbiAgICBsZXQgbGFzdFRva2VuVHlwZVxuICAgIGxldCBzcGFjZXMgPSAnJ1xuICAgIHdoaWxlICh0b2tlbnMubGVuZ3RoKSB7XG4gICAgICBsYXN0VG9rZW5UeXBlID0gdG9rZW5zW3Rva2Vucy5sZW5ndGggLSAxXVswXVxuICAgICAgaWYgKGxhc3RUb2tlblR5cGUgIT09ICdzcGFjZScgJiYgbGFzdFRva2VuVHlwZSAhPT0gJ2NvbW1lbnQnKSBicmVha1xuICAgICAgc3BhY2VzID0gdG9rZW5zLnBvcCgpWzFdICsgc3BhY2VzXG4gICAgfVxuICAgIHJldHVybiBzcGFjZXNcbiAgfVxuXG4gIHNwYWNlc0FuZENvbW1lbnRzRnJvbVN0YXJ0ICh0b2tlbnMpIHtcbiAgICBsZXQgbmV4dFxuICAgIGxldCBzcGFjZXMgPSAnJ1xuICAgIHdoaWxlICh0b2tlbnMubGVuZ3RoKSB7XG4gICAgICBuZXh0ID0gdG9rZW5zWzBdWzBdXG4gICAgICBpZiAobmV4dCAhPT0gJ3NwYWNlJyAmJiBuZXh0ICE9PSAnY29tbWVudCcpIGJyZWFrXG4gICAgICBzcGFjZXMgKz0gdG9rZW5zLnNoaWZ0KClbMV1cbiAgICB9XG4gICAgcmV0dXJuIHNwYWNlc1xuICB9XG5cbiAgc3BhY2VzRnJvbUVuZCAodG9rZW5zKSB7XG4gICAgbGV0IGxhc3RUb2tlblR5cGVcbiAgICBsZXQgc3BhY2VzID0gJydcbiAgICB3aGlsZSAodG9rZW5zLmxlbmd0aCkge1xuICAgICAgbGFzdFRva2VuVHlwZSA9IHRva2Vuc1t0b2tlbnMubGVuZ3RoIC0gMV1bMF1cbiAgICAgIGlmIChsYXN0VG9rZW5UeXBlICE9PSAnc3BhY2UnKSBicmVha1xuICAgICAgc3BhY2VzID0gdG9rZW5zLnBvcCgpWzFdICsgc3BhY2VzXG4gICAgfVxuICAgIHJldHVybiBzcGFjZXNcbiAgfVxuXG4gIHN0cmluZ0Zyb20gKHRva2VucywgZnJvbSkge1xuICAgIGxldCByZXN1bHQgPSAnJ1xuICAgIGZvciAobGV0IGkgPSBmcm9tOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICByZXN1bHQgKz0gdG9rZW5zW2ldWzFdXG4gICAgfVxuICAgIHRva2Vucy5zcGxpY2UoZnJvbSwgdG9rZW5zLmxlbmd0aCAtIGZyb20pXG4gICAgcmV0dXJuIHJlc3VsdFxuICB9XG5cbiAgY29sb24gKHRva2Vucykge1xuICAgIGxldCBicmFja2V0cyA9IDBcbiAgICBsZXQgdG9rZW4sIHR5cGUsIHByZXZcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2Vucy5sZW5ndGg7IGkrKykge1xuICAgICAgdG9rZW4gPSB0b2tlbnNbaV1cbiAgICAgIHR5cGUgPSB0b2tlblswXVxuXG4gICAgICBpZiAodHlwZSA9PT0gJygnKSB7XG4gICAgICAgIGJyYWNrZXRzICs9IDFcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlID09PSAnKScpIHtcbiAgICAgICAgYnJhY2tldHMgLT0gMVxuICAgICAgfVxuICAgICAgaWYgKGJyYWNrZXRzID09PSAwICYmIHR5cGUgPT09ICc6Jykge1xuICAgICAgICBpZiAoIXByZXYpIHtcbiAgICAgICAgICB0aGlzLmRvdWJsZUNvbG9uKHRva2VuKVxuICAgICAgICB9IGVsc2UgaWYgKHByZXZbMF0gPT09ICd3b3JkJyAmJiBwcmV2WzFdID09PSAncHJvZ2lkJykge1xuICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIGlcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBwcmV2ID0gdG9rZW5cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICAvLyBFcnJvcnNcblxuICB1bmNsb3NlZEJyYWNrZXQgKGJyYWNrZXQpIHtcbiAgICB0aHJvdyB0aGlzLmlucHV0LmVycm9yKCdVbmNsb3NlZCBicmFja2V0JywgYnJhY2tldFsyXSwgYnJhY2tldFszXSlcbiAgfVxuXG4gIHVua25vd25Xb3JkICh0b2tlbnMpIHtcbiAgICB0aHJvdyB0aGlzLmlucHV0LmVycm9yKCdVbmtub3duIHdvcmQnLCB0b2tlbnNbMF1bMl0sIHRva2Vuc1swXVszXSlcbiAgfVxuXG4gIHVuZXhwZWN0ZWRDbG9zZSAodG9rZW4pIHtcbiAgICB0aHJvdyB0aGlzLmlucHV0LmVycm9yKCdVbmV4cGVjdGVkIH0nLCB0b2tlblsyXSwgdG9rZW5bM10pXG4gIH1cblxuICB1bmNsb3NlZEJsb2NrICgpIHtcbiAgICBsZXQgcG9zID0gdGhpcy5jdXJyZW50LnNvdXJjZS5zdGFydFxuICAgIHRocm93IHRoaXMuaW5wdXQuZXJyb3IoJ1VuY2xvc2VkIGJsb2NrJywgcG9zLmxpbmUsIHBvcy5jb2x1bW4pXG4gIH1cblxuICBkb3VibGVDb2xvbiAodG9rZW4pIHtcbiAgICB0aHJvdyB0aGlzLmlucHV0LmVycm9yKCdEb3VibGUgY29sb24nLCB0b2tlblsyXSwgdG9rZW5bM10pXG4gIH1cblxuICB1bm5hbWVkQXRydWxlIChub2RlLCB0b2tlbikge1xuICAgIHRocm93IHRoaXMuaW5wdXQuZXJyb3IoJ0F0LXJ1bGUgd2l0aG91dCBuYW1lJywgdG9rZW5bMl0sIHRva2VuWzNdKVxuICB9XG5cbiAgcHJlY2hlY2tNaXNzZWRTZW1pY29sb24gKC8qIHRva2VucyAqLykge1xuICAgIC8vIEhvb2sgZm9yIFNhZmUgUGFyc2VyXG4gIH1cblxuICBjaGVja01pc3NlZFNlbWljb2xvbiAodG9rZW5zKSB7XG4gICAgbGV0IGNvbG9uID0gdGhpcy5jb2xvbih0b2tlbnMpXG4gICAgaWYgKGNvbG9uID09PSBmYWxzZSkgcmV0dXJuXG5cbiAgICBsZXQgZm91bmRlZCA9IDBcbiAgICBsZXQgdG9rZW5cbiAgICBmb3IgKGxldCBqID0gY29sb24gLSAxOyBqID49IDA7IGotLSkge1xuICAgICAgdG9rZW4gPSB0b2tlbnNbal1cbiAgICAgIGlmICh0b2tlblswXSAhPT0gJ3NwYWNlJykge1xuICAgICAgICBmb3VuZGVkICs9IDFcbiAgICAgICAgaWYgKGZvdW5kZWQgPT09IDIpIGJyZWFrXG4gICAgICB9XG4gICAgfVxuICAgIHRocm93IHRoaXMuaW5wdXQuZXJyb3IoJ01pc3NlZCBzZW1pY29sb24nLCB0b2tlblsyXSwgdG9rZW5bM10pXG4gIH1cbn1cbiJdLCJmaWxlIjoicGFyc2VyLmpzIn0=


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = void 0;

/**
 * Contains helpers for working with vendor prefixes.
 *
 * @example
 * const vendor = postcss.vendor
 *
 * @namespace vendor
 */
var vendor = {
  /**
   * Returns the vendor prefix extracted from an input string.
   *
   * @param {string} prop String with or without vendor prefix.
   *
   * @return {string} vendor prefix or empty string
   *
   * @example
   * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'
   * postcss.vendor.prefix('tab-size')      //=> ''
   */
  prefix: function prefix(prop) {
    var match = prop.match(/^(-\w+-)/);

    if (match) {
      return match[0];
    }

    return '';
  },

  /**
     * Returns the input string stripped of its vendor prefix.
     *
     * @param {string} prop String with or without vendor prefix.
     *
     * @return {string} String name without vendor prefixes.
     *
     * @example
     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'
     */
  unprefixed: function unprefixed(prop) {
    return prop.replace(/^-\w+-/, '');
  }
};
var _default = vendor;
exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci5lczYiXSwibmFtZXMiOlsidmVuZG9yIiwicHJlZml4IiwicHJvcCIsIm1hdGNoIiwidW5wcmVmaXhlZCIsInJlcGxhY2UiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7Ozs7O0FBUUEsSUFBSUEsTUFBTSxHQUFHO0FBRVg7Ozs7Ozs7Ozs7O0FBV0FDLEVBQUFBLE1BYlcsa0JBYUhDLElBYkcsRUFhRztBQUNaLFFBQUlDLEtBQUssR0FBR0QsSUFBSSxDQUFDQyxLQUFMLENBQVcsVUFBWCxDQUFaOztBQUNBLFFBQUlBLEtBQUosRUFBVztBQUNULGFBQU9BLEtBQUssQ0FBQyxDQUFELENBQVo7QUFDRDs7QUFFRCxXQUFPLEVBQVA7QUFDRCxHQXBCVTs7QUFzQlg7Ozs7Ozs7Ozs7QUFVQUMsRUFBQUEsVUFoQ1csc0JBZ0NDRixJQWhDRCxFQWdDTztBQUNoQixXQUFPQSxJQUFJLENBQUNHLE9BQUwsQ0FBYSxRQUFiLEVBQXVCLEVBQXZCLENBQVA7QUFDRDtBQWxDVSxDQUFiO2VBc0NlTCxNIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb250YWlucyBoZWxwZXJzIGZvciB3b3JraW5nIHdpdGggdmVuZG9yIHByZWZpeGVzLlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCB2ZW5kb3IgPSBwb3N0Y3NzLnZlbmRvclxuICpcbiAqIEBuYW1lc3BhY2UgdmVuZG9yXG4gKi9cbmxldCB2ZW5kb3IgPSB7XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIHZlbmRvciBwcmVmaXggZXh0cmFjdGVkIGZyb20gYW4gaW5wdXQgc3RyaW5nLlxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcCBTdHJpbmcgd2l0aCBvciB3aXRob3V0IHZlbmRvciBwcmVmaXguXG4gICAqXG4gICAqIEByZXR1cm4ge3N0cmluZ30gdmVuZG9yIHByZWZpeCBvciBlbXB0eSBzdHJpbmdcbiAgICpcbiAgICogQGV4YW1wbGVcbiAgICogcG9zdGNzcy52ZW5kb3IucHJlZml4KCctbW96LXRhYi1zaXplJykgLy89PiAnLW1vei0nXG4gICAqIHBvc3Rjc3MudmVuZG9yLnByZWZpeCgndGFiLXNpemUnKSAgICAgIC8vPT4gJydcbiAgICovXG4gIHByZWZpeCAocHJvcCkge1xuICAgIGxldCBtYXRjaCA9IHByb3AubWF0Y2goL14oLVxcdystKS8pXG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICByZXR1cm4gbWF0Y2hbMF1cbiAgICB9XG5cbiAgICByZXR1cm4gJydcbiAgfSxcblxuICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBpbnB1dCBzdHJpbmcgc3RyaXBwZWQgb2YgaXRzIHZlbmRvciBwcmVmaXguXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gcHJvcCBTdHJpbmcgd2l0aCBvciB3aXRob3V0IHZlbmRvciBwcmVmaXguXG4gICAgICpcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IFN0cmluZyBuYW1lIHdpdGhvdXQgdmVuZG9yIHByZWZpeGVzLlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBwb3N0Y3NzLnZlbmRvci51bnByZWZpeGVkKCctbW96LXRhYi1zaXplJykgLy89PiAndGFiLXNpemUnXG4gICAgICovXG4gIHVucHJlZml4ZWQgKHByb3ApIHtcbiAgICByZXR1cm4gcHJvcC5yZXBsYWNlKC9eLVxcdystLywgJycpXG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCB2ZW5kb3JcbiJdLCJmaWxlIjoidmVuZG9yLmpzIn0=


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//      


const os = __webpack_require__(57);
const createExplorer = __webpack_require__(201);
const loaders = __webpack_require__(68);

module.exports = cosmiconfig;

function cosmiconfig(
  moduleName        ,
  options   
                         
                     
                                 
                                      
                     
                    
                                                       
   
) {
  options = options || {};
  const defaults = {
    packageProp: moduleName,
    searchPlaces: [
      'package.json',
      `.${moduleName}rc`,
      `.${moduleName}rc.json`,
      `.${moduleName}rc.yaml`,
      `.${moduleName}rc.yml`,
      `.${moduleName}rc.js`,
      `${moduleName}.config.js`,
    ],
    ignoreEmptySearchPlaces: true,
    stopDir: os.homedir(),
    cache: true,
    transform: identity,
  };
  const normalizedOptions                  = Object.assign(
    {},
    defaults,
    options,
    {
      loaders: normalizeLoaders(options.loaders),
    }
  );

  return createExplorer(normalizedOptions);
}

cosmiconfig.loadJs = loaders.loadJs;
cosmiconfig.loadJson = loaders.loadJson;
cosmiconfig.loadYaml = loaders.loadYaml;

function normalizeLoaders(rawLoaders         )          {
  const defaults = {
    '.js': { sync: loaders.loadJs, async: loaders.loadJs },
    '.json': { sync: loaders.loadJson, async: loaders.loadJson },
    '.yaml': { sync: loaders.loadYaml, async: loaders.loadYaml },
    '.yml': { sync: loaders.loadYaml, async: loaders.loadYaml },
    noExt: { sync: loaders.loadYaml, async: loaders.loadYaml },
  };

  if (!rawLoaders) {
    return defaults;
  }

  return Object.keys(rawLoaders).reduce((result, ext) => {
    const entry = rawLoaders && rawLoaders[ext];
    if (typeof entry === 'function') {
      result[ext] = { sync: entry, async: entry };
    } else {
      result[ext] = entry;
    }
    return result;
  }, defaults);
}

function identity(x) {
  return x;
}


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//      


const path = __webpack_require__(5);
const loaders = __webpack_require__(68);
const readFile = __webpack_require__(236);
const cacheWrapper = __webpack_require__(237);
const getDirectory = __webpack_require__(238);
const getPropertyByPath = __webpack_require__(240);

const MODE_SYNC = 'sync';

// An object value represents a config object.
// null represents that the loader did not find anything relevant.
// undefined represents that the loader found something relevant
// but it was empty.
                                              

class Explorer {
                                                      
                                                 
                                                        
                                                   
                          

  constructor(options                 ) {
    this.loadCache = options.cache ? new Map() : null;
    this.loadSyncCache = options.cache ? new Map() : null;
    this.searchCache = options.cache ? new Map() : null;
    this.searchSyncCache = options.cache ? new Map() : null;
    this.config = options;
    this.validateConfig();
  }

  clearLoadCache() {
    if (this.loadCache) {
      this.loadCache.clear();
    }
    if (this.loadSyncCache) {
      this.loadSyncCache.clear();
    }
  }

  clearSearchCache() {
    if (this.searchCache) {
      this.searchCache.clear();
    }
    if (this.searchSyncCache) {
      this.searchSyncCache.clear();
    }
  }

  clearCaches() {
    this.clearLoadCache();
    this.clearSearchCache();
  }

  validateConfig() {
    const config = this.config;

    config.searchPlaces.forEach(place => {
      const loaderKey = path.extname(place) || 'noExt';
      const loader = config.loaders[loaderKey];
      if (!loader) {
        throw new Error(
          `No loader specified for ${getExtensionDescription(
            place
          )}, so searchPlaces item "${place}" is invalid`
        );
      }
    });
  }

  search(searchFrom         )                             {
    searchFrom = searchFrom || process.cwd();
    return getDirectory(searchFrom).then(dir => {
      return this.searchFromDirectory(dir);
    });
  }

  searchFromDirectory(dir        )                             {
    const absoluteDir = path.resolve(process.cwd(), dir);
    const run = () => {
      return this.searchDirectory(absoluteDir).then(result => {
        const nextDir = this.nextDirectoryToSearch(absoluteDir, result);
        if (nextDir) {
          return this.searchFromDirectory(nextDir);
        }
        return this.config.transform(result);
      });
    };

    if (this.searchCache) {
      return cacheWrapper(this.searchCache, absoluteDir, run);
    }
    return run();
  }

  searchSync(searchFrom         )                    {
    searchFrom = searchFrom || process.cwd();
    const dir = getDirectory.sync(searchFrom);
    return this.searchFromDirectorySync(dir);
  }

  searchFromDirectorySync(dir        )                    {
    const absoluteDir = path.resolve(process.cwd(), dir);
    const run = () => {
      const result = this.searchDirectorySync(absoluteDir);
      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);
      if (nextDir) {
        return this.searchFromDirectorySync(nextDir);
      }
      return this.config.transform(result);
    };

    if (this.searchSyncCache) {
      return cacheWrapper(this.searchSyncCache, absoluteDir, run);
    }
    return run();
  }

  searchDirectory(dir        )                             {
    return this.config.searchPlaces.reduce((prevResultPromise, place) => {
      return prevResultPromise.then(prevResult => {
        if (this.shouldSearchStopWithResult(prevResult)) {
          return prevResult;
        }
        return this.loadSearchPlace(dir, place);
      });
    }, Promise.resolve(null));
  }

  searchDirectorySync(dir        )                    {
    let result = null;
    for (const place of this.config.searchPlaces) {
      result = this.loadSearchPlaceSync(dir, place);
      if (this.shouldSearchStopWithResult(result)) break;
    }
    return result;
  }

  shouldSearchStopWithResult(result                   )          {
    if (result === null) return false;
    if (result.isEmpty && this.config.ignoreEmptySearchPlaces) return false;
    return true;
  }

  loadSearchPlace(dir        , place        )                             {
    const filepath = path.join(dir, place);
    return readFile(filepath).then(content => {
      return this.createCosmiconfigResult(filepath, content);
    });
  }

  loadSearchPlaceSync(dir        , place        )                    {
    const filepath = path.join(dir, place);
    const content = readFile.sync(filepath);
    return this.createCosmiconfigResultSync(filepath, content);
  }

  nextDirectoryToSearch(
    currentDir        ,
    currentResult                   
  )          {
    if (this.shouldSearchStopWithResult(currentResult)) {
      return null;
    }
    const nextDir = nextDirUp(currentDir);
    if (nextDir === currentDir || currentDir === this.config.stopDir) {
      return null;
    }
    return nextDir;
  }

  loadPackageProp(filepath        , content        ) {
    const parsedContent = loaders.loadJson(filepath, content);
    const packagePropValue = getPropertyByPath(
      parsedContent,
      this.config.packageProp
    );
    return packagePropValue || null;
  }

  getLoaderEntryForFile(filepath        )              {
    if (path.basename(filepath) === 'package.json') {
      const loader = this.loadPackageProp.bind(this);
      return { sync: loader, async: loader };
    }

    const loaderKey = path.extname(filepath) || 'noExt';
    return this.config.loaders[loaderKey] || {};
  }

  getSyncLoaderForFile(filepath        )             {
    const entry = this.getLoaderEntryForFile(filepath);
    if (!entry.sync) {
      throw new Error(
        `No sync loader specified for ${getExtensionDescription(filepath)}`
      );
    }
    return entry.sync;
  }

  getAsyncLoaderForFile(filepath        )              {
    const entry = this.getLoaderEntryForFile(filepath);
    const loader = entry.async || entry.sync;
    if (!loader) {
      throw new Error(
        `No async loader specified for ${getExtensionDescription(filepath)}`
      );
    }
    return loader;
  }

  loadFileContent(
    mode                  ,
    filepath        ,
    content               
  )                                                 {
    if (content === null) {
      return null;
    }
    if (content.trim() === '') {
      return undefined;
    }
    const loader =
      mode === MODE_SYNC
        ? this.getSyncLoaderForFile(filepath)
        : this.getAsyncLoaderForFile(filepath);
    return loader(filepath, content);
  }

  loadedContentToCosmiconfigResult(
    filepath        ,
    loadedContent                   
  )                    {
    if (loadedContent === null) {
      return null;
    }
    if (loadedContent === undefined) {
      return { filepath, config: undefined, isEmpty: true };
    }
    return { config: loadedContent, filepath };
  }

  createCosmiconfigResult(
    filepath        ,
    content               
  )                             {
    return Promise.resolve()
      .then(() => {
        return this.loadFileContent('async', filepath, content);
      })
      .then(loaderResult => {
        return this.loadedContentToCosmiconfigResult(filepath, loaderResult);
      });
  }

  createCosmiconfigResultSync(
    filepath        ,
    content               
  )                    {
    const loaderResult = this.loadFileContent('sync', filepath, content);
    return this.loadedContentToCosmiconfigResult(filepath, loaderResult);
  }

  validateFilePath(filepath         ) {
    if (!filepath) {
      throw new Error('load and loadSync must pass a non-empty string');
    }
  }

  load(filepath        )                             {
    return Promise.resolve().then(() => {
      this.validateFilePath(filepath);
      const absoluteFilePath = path.resolve(process.cwd(), filepath);
      return cacheWrapper(this.loadCache, absoluteFilePath, () => {
        return readFile(absoluteFilePath, { throwNotFound: true })
          .then(content => {
            return this.createCosmiconfigResult(absoluteFilePath, content);
          })
          .then(this.config.transform);
      });
    });
  }

  loadSync(filepath        )                    {
    this.validateFilePath(filepath);
    const absoluteFilePath = path.resolve(process.cwd(), filepath);
    return cacheWrapper(this.loadSyncCache, absoluteFilePath, () => {
      const content = readFile.sync(absoluteFilePath, { throwNotFound: true });
      const result = this.createCosmiconfigResultSync(
        absoluteFilePath,
        content
      );
      return this.config.transform(result);
    });
  }
}

module.exports = function createExplorer(options                 ) {
  const explorer = new Explorer(options);

  return {
    search: explorer.search.bind(explorer),
    searchSync: explorer.searchSync.bind(explorer),
    load: explorer.load.bind(explorer),
    loadSync: explorer.loadSync.bind(explorer),
    clearLoadCache: explorer.clearLoadCache.bind(explorer),
    clearSearchCache: explorer.clearSearchCache.bind(explorer),
    clearCaches: explorer.clearCaches.bind(explorer),
  };
};

function nextDirUp(dir        )         {
  return path.dirname(dir);
}

function getExtensionDescription(filepath        )         {
  const ext = path.extname(filepath);
  return ext ? `extension "${ext}"` : 'files without extensions';
}


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const errorEx = __webpack_require__(203);
const fallback = __webpack_require__(205);

const JSONError = errorEx('JSONError', {
	fileName: errorEx.append('in %s')
});

module.exports = (input, reviver, filename) => {
	if (typeof reviver === 'string') {
		filename = reviver;
		reviver = null;
	}

	try {
		try {
			return JSON.parse(input, reviver);
		} catch (err) {
			fallback(input, reviver);

			throw err;
		}
	} catch (err) {
		err.message = err.message.replace(/\n/g, '');

		const jsonErr = new JSONError(err);
		if (filename) {
			jsonErr.fileName = filename;
		}

		throw jsonErr;
	}
};


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(34);
var isArrayish = __webpack_require__(204);

var errorEx = function errorEx(name, properties) {
	if (!name || name.constructor !== String) {
		properties = name || {};
		name = Error.name;
	}

	var errorExError = function ErrorEXError(message) {
		if (!this) {
			return new ErrorEXError(message);
		}

		message = message instanceof Error
			? message.message
			: (message || this.message);

		Error.call(this, message);
		Error.captureStackTrace(this, errorExError);

		this.name = name;

		Object.defineProperty(this, 'message', {
			configurable: true,
			enumerable: false,
			get: function () {
				var newMessage = message.split(/\r?\n/g);

				for (var key in properties) {
					if (!properties.hasOwnProperty(key)) {
						continue;
					}

					var modifier = properties[key];

					if ('message' in modifier) {
						newMessage = modifier.message(this[key], newMessage) || newMessage;
						if (!isArrayish(newMessage)) {
							newMessage = [newMessage];
						}
					}
				}

				return newMessage.join('\n');
			},
			set: function (v) {
				message = v;
			}
		});

		var overwrittenStack = null;

		var stackDescriptor = Object.getOwnPropertyDescriptor(this, 'stack');
		var stackGetter = stackDescriptor.get;
		var stackValue = stackDescriptor.value;
		delete stackDescriptor.value;
		delete stackDescriptor.writable;

		stackDescriptor.set = function (newstack) {
			overwrittenStack = newstack;
		};

		stackDescriptor.get = function () {
			var stack = (overwrittenStack || ((stackGetter)
				? stackGetter.call(this)
				: stackValue)).split(/\r?\n+/g);

			// starting in Node 7, the stack builder caches the message.
			// just replace it.
			if (!overwrittenStack) {
				stack[0] = this.name + ': ' + this.message;
			}

			var lineCount = 1;
			for (var key in properties) {
				if (!properties.hasOwnProperty(key)) {
					continue;
				}

				var modifier = properties[key];

				if ('line' in modifier) {
					var line = modifier.line(this[key]);
					if (line) {
						stack.splice(lineCount++, 0, '    ' + line);
					}
				}

				if ('stack' in modifier) {
					modifier.stack(this[key], stack);
				}
			}

			return stack.join('\n');
		};

		Object.defineProperty(this, 'stack', stackDescriptor);
	};

	if (Object.setPrototypeOf) {
		Object.setPrototypeOf(errorExError.prototype, Error.prototype);
		Object.setPrototypeOf(errorExError, Error);
	} else {
		util.inherits(errorExError, Error);
	}

	return errorExError;
};

errorEx.append = function (str, def) {
	return {
		message: function (v, message) {
			v = v || def;

			if (v) {
				message[0] += ' ' + str.replace('%s', v.toString());
			}

			return message;
		}
	};
};

errorEx.line = function (str, def) {
	return {
		line: function (v) {
			v = v || def;

			if (v) {
				return str.replace('%s', v.toString());
			}

			return null;
		}
	};
};

module.exports = errorEx;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isArrayish(obj) {
	if (!obj) {
		return false;
	}

	return obj instanceof Array || Array.isArray(obj) ||
		(obj.length >= 0 && obj.splice instanceof Function);
};


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = parseJson
function parseJson (txt, reviver, context) {
  context = context || 20
  try {
    return JSON.parse(txt, reviver)
  } catch (e) {
    if (typeof txt !== 'string') {
      const isEmptyArray = Array.isArray(txt) && txt.length === 0
      const errorMessage = 'Cannot parse ' +
      (isEmptyArray ? 'an empty array' : String(txt))
      throw new TypeError(errorMessage)
    }
    const syntaxErr = e.message.match(/^Unexpected token.*position\s+(\d+)/i)
    const errIdx = syntaxErr
    ? +syntaxErr[1]
    : e.message.match(/^Unexpected end of JSON.*/i)
    ? txt.length - 1
    : null
    if (errIdx != null) {
      const start = errIdx <= context
      ? 0
      : errIdx - context
      const end = errIdx + context >= txt.length
      ? txt.length
      : errIdx + context
      e.message += ` while parsing near '${
        start === 0 ? '' : '...'
      }${txt.slice(start, end)}${
        end === txt.length ? '' : '...'
      }'`
    } else {
      e.message += ` while parsing '${txt.slice(0, context * 2)}'`
    }
    throw e
  }
}


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var yaml = __webpack_require__(207);


module.exports = yaml;


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var loader = __webpack_require__(208);
var dumper = __webpack_require__(228);


function deprecated(name) {
  return function () {
    throw new Error('Function ' + name + ' is deprecated and cannot be used.');
  };
}


module.exports.Type                = __webpack_require__(7);
module.exports.Schema              = __webpack_require__(18);
module.exports.FAILSAFE_SCHEMA     = __webpack_require__(45);
module.exports.JSON_SCHEMA         = __webpack_require__(70);
module.exports.CORE_SCHEMA         = __webpack_require__(69);
module.exports.DEFAULT_SAFE_SCHEMA = __webpack_require__(24);
module.exports.DEFAULT_FULL_SCHEMA = __webpack_require__(31);
module.exports.load                = loader.load;
module.exports.loadAll             = loader.loadAll;
module.exports.safeLoad            = loader.safeLoad;
module.exports.safeLoadAll         = loader.safeLoadAll;
module.exports.dump                = dumper.dump;
module.exports.safeDump            = dumper.safeDump;
module.exports.YAMLException       = __webpack_require__(23);

// Deprecated schema names from JS-YAML 2.0.x
module.exports.MINIMAL_SCHEMA = __webpack_require__(45);
module.exports.SAFE_SCHEMA    = __webpack_require__(24);
module.exports.DEFAULT_SCHEMA = __webpack_require__(31);

// Deprecated functions from JS-YAML 1.x.x
module.exports.scan           = deprecated('scan');
module.exports.parse          = deprecated('parse');
module.exports.compose        = deprecated('compose');
module.exports.addConstructor = deprecated('addConstructor');


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*eslint-disable max-len,no-use-before-define*/

var common              = __webpack_require__(17);
var YAMLException       = __webpack_require__(23);
var Mark                = __webpack_require__(209);
var DEFAULT_SAFE_SCHEMA = __webpack_require__(24);
var DEFAULT_FULL_SCHEMA = __webpack_require__(31);


var _hasOwnProperty = Object.prototype.hasOwnProperty;


var CONTEXT_FLOW_IN   = 1;
var CONTEXT_FLOW_OUT  = 2;
var CONTEXT_BLOCK_IN  = 3;
var CONTEXT_BLOCK_OUT = 4;


var CHOMPING_CLIP  = 1;
var CHOMPING_STRIP = 2;
var CHOMPING_KEEP  = 3;


var PATTERN_NON_PRINTABLE         = /[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/;
var PATTERN_NON_ASCII_LINE_BREAKS = /[\x85\u2028\u2029]/;
var PATTERN_FLOW_INDICATORS       = /[,\[\]\{\}]/;
var PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\-]+!)$/i;
var PATTERN_TAG_URI               = /^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;


function _class(obj) { return Object.prototype.toString.call(obj); }

function is_EOL(c) {
  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);
}

function is_WHITE_SPACE(c) {
  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);
}

function is_WS_OR_EOL(c) {
  return (c === 0x09/* Tab */) ||
         (c === 0x20/* Space */) ||
         (c === 0x0A/* LF */) ||
         (c === 0x0D/* CR */);
}

function is_FLOW_INDICATOR(c) {
  return c === 0x2C/* , */ ||
         c === 0x5B/* [ */ ||
         c === 0x5D/* ] */ ||
         c === 0x7B/* { */ ||
         c === 0x7D/* } */;
}

function fromHexCode(c) {
  var lc;

  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
    return c - 0x30;
  }

  /*eslint-disable no-bitwise*/
  lc = c | 0x20;

  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {
    return lc - 0x61 + 10;
  }

  return -1;
}

function escapedHexLen(c) {
  if (c === 0x78/* x */) { return 2; }
  if (c === 0x75/* u */) { return 4; }
  if (c === 0x55/* U */) { return 8; }
  return 0;
}

function fromDecimalCode(c) {
  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {
    return c - 0x30;
  }

  return -1;
}

function simpleEscapeSequence(c) {
  /* eslint-disable indent */
  return (c === 0x30/* 0 */) ? '\x00' :
        (c === 0x61/* a */) ? '\x07' :
        (c === 0x62/* b */) ? '\x08' :
        (c === 0x74/* t */) ? '\x09' :
        (c === 0x09/* Tab */) ? '\x09' :
        (c === 0x6E/* n */) ? '\x0A' :
        (c === 0x76/* v */) ? '\x0B' :
        (c === 0x66/* f */) ? '\x0C' :
        (c === 0x72/* r */) ? '\x0D' :
        (c === 0x65/* e */) ? '\x1B' :
        (c === 0x20/* Space */) ? ' ' :
        (c === 0x22/* " */) ? '\x22' :
        (c === 0x2F/* / */) ? '/' :
        (c === 0x5C/* \ */) ? '\x5C' :
        (c === 0x4E/* N */) ? '\x85' :
        (c === 0x5F/* _ */) ? '\xA0' :
        (c === 0x4C/* L */) ? '\u2028' :
        (c === 0x50/* P */) ? '\u2029' : '';
}

function charFromCodepoint(c) {
  if (c <= 0xFFFF) {
    return String.fromCharCode(c);
  }
  // Encode UTF-16 surrogate pair
  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF
  return String.fromCharCode(
    ((c - 0x010000) >> 10) + 0xD800,
    ((c - 0x010000) & 0x03FF) + 0xDC00
  );
}

var simpleEscapeCheck = new Array(256); // integer, for fast access
var simpleEscapeMap = new Array(256);
for (var i = 0; i < 256; i++) {
  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;
  simpleEscapeMap[i] = simpleEscapeSequence(i);
}


function State(input, options) {
  this.input = input;

  this.filename  = options['filename']  || null;
  this.schema    = options['schema']    || DEFAULT_FULL_SCHEMA;
  this.onWarning = options['onWarning'] || null;
  this.legacy    = options['legacy']    || false;
  this.json      = options['json']      || false;
  this.listener  = options['listener']  || null;

  this.implicitTypes = this.schema.compiledImplicit;
  this.typeMap       = this.schema.compiledTypeMap;

  this.length     = input.length;
  this.position   = 0;
  this.line       = 0;
  this.lineStart  = 0;
  this.lineIndent = 0;

  this.documents = [];

  /*
  this.version;
  this.checkLineBreaks;
  this.tagMap;
  this.anchorMap;
  this.tag;
  this.anchor;
  this.kind;
  this.result;*/

}


function generateError(state, message) {
  return new YAMLException(
    message,
    new Mark(state.filename, state.input, state.position, state.line, (state.position - state.lineStart)));
}

function throwError(state, message) {
  throw generateError(state, message);
}

function throwWarning(state, message) {
  if (state.onWarning) {
    state.onWarning.call(null, generateError(state, message));
  }
}


var directiveHandlers = {

  YAML: function handleYamlDirective(state, name, args) {

    var match, major, minor;

    if (state.version !== null) {
      throwError(state, 'duplication of %YAML directive');
    }

    if (args.length !== 1) {
      throwError(state, 'YAML directive accepts exactly one argument');
    }

    match = /^([0-9]+)\.([0-9]+)$/.exec(args[0]);

    if (match === null) {
      throwError(state, 'ill-formed argument of the YAML directive');
    }

    major = parseInt(match[1], 10);
    minor = parseInt(match[2], 10);

    if (major !== 1) {
      throwError(state, 'unacceptable YAML version of the document');
    }

    state.version = args[0];
    state.checkLineBreaks = (minor < 2);

    if (minor !== 1 && minor !== 2) {
      throwWarning(state, 'unsupported YAML version of the document');
    }
  },

  TAG: function handleTagDirective(state, name, args) {

    var handle, prefix;

    if (args.length !== 2) {
      throwError(state, 'TAG directive accepts exactly two arguments');
    }

    handle = args[0];
    prefix = args[1];

    if (!PATTERN_TAG_HANDLE.test(handle)) {
      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');
    }

    if (_hasOwnProperty.call(state.tagMap, handle)) {
      throwError(state, 'there is a previously declared suffix for "' + handle + '" tag handle');
    }

    if (!PATTERN_TAG_URI.test(prefix)) {
      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');
    }

    state.tagMap[handle] = prefix;
  }
};


function captureSegment(state, start, end, checkJson) {
  var _position, _length, _character, _result;

  if (start < end) {
    _result = state.input.slice(start, end);

    if (checkJson) {
      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {
        _character = _result.charCodeAt(_position);
        if (!(_character === 0x09 ||
              (0x20 <= _character && _character <= 0x10FFFF))) {
          throwError(state, 'expected valid JSON character');
        }
      }
    } else if (PATTERN_NON_PRINTABLE.test(_result)) {
      throwError(state, 'the stream contains non-printable characters');
    }

    state.result += _result;
  }
}

function mergeMappings(state, destination, source, overridableKeys) {
  var sourceKeys, key, index, quantity;

  if (!common.isObject(source)) {
    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');
  }

  sourceKeys = Object.keys(source);

  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {
    key = sourceKeys[index];

    if (!_hasOwnProperty.call(destination, key)) {
      destination[key] = source[key];
      overridableKeys[key] = true;
    }
  }
}

function storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, startLine, startPos) {
  var index, quantity;

  // The output is a plain object here, so keys can only be strings.
  // We need to convert keyNode to a string, but doing so can hang the process
  // (deeply nested arrays that explode exponentially using aliases).
  if (Array.isArray(keyNode)) {
    keyNode = Array.prototype.slice.call(keyNode);

    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {
      if (Array.isArray(keyNode[index])) {
        throwError(state, 'nested arrays are not supported inside keys');
      }

      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {
        keyNode[index] = '[object Object]';
      }
    }
  }

  // Avoid code execution in load() via toString property
  // (still use its own toString for arrays, timestamps,
  // and whatever user schema extensions happen to have @@toStringTag)
  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {
    keyNode = '[object Object]';
  }


  keyNode = String(keyNode);

  if (_result === null) {
    _result = {};
  }

  if (keyTag === 'tag:yaml.org,2002:merge') {
    if (Array.isArray(valueNode)) {
      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {
        mergeMappings(state, _result, valueNode[index], overridableKeys);
      }
    } else {
      mergeMappings(state, _result, valueNode, overridableKeys);
    }
  } else {
    if (!state.json &&
        !_hasOwnProperty.call(overridableKeys, keyNode) &&
        _hasOwnProperty.call(_result, keyNode)) {
      state.line = startLine || state.line;
      state.position = startPos || state.position;
      throwError(state, 'duplicated mapping key');
    }
    _result[keyNode] = valueNode;
    delete overridableKeys[keyNode];
  }

  return _result;
}

function readLineBreak(state) {
  var ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x0A/* LF */) {
    state.position++;
  } else if (ch === 0x0D/* CR */) {
    state.position++;
    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {
      state.position++;
    }
  } else {
    throwError(state, 'a line break is expected');
  }

  state.line += 1;
  state.lineStart = state.position;
}

function skipSeparationSpace(state, allowComments, checkIndent) {
  var lineBreaks = 0,
      ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {
    while (is_WHITE_SPACE(ch)) {
      ch = state.input.charCodeAt(++state.position);
    }

    if (allowComments && ch === 0x23/* # */) {
      do {
        ch = state.input.charCodeAt(++state.position);
      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);
    }

    if (is_EOL(ch)) {
      readLineBreak(state);

      ch = state.input.charCodeAt(state.position);
      lineBreaks++;
      state.lineIndent = 0;

      while (ch === 0x20/* Space */) {
        state.lineIndent++;
        ch = state.input.charCodeAt(++state.position);
      }
    } else {
      break;
    }
  }

  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {
    throwWarning(state, 'deficient indentation');
  }

  return lineBreaks;
}

function testDocumentSeparator(state) {
  var _position = state.position,
      ch;

  ch = state.input.charCodeAt(_position);

  // Condition state.position === state.lineStart is tested
  // in parent on each call, for efficiency. No needs to test here again.
  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&
      ch === state.input.charCodeAt(_position + 1) &&
      ch === state.input.charCodeAt(_position + 2)) {

    _position += 3;

    ch = state.input.charCodeAt(_position);

    if (ch === 0 || is_WS_OR_EOL(ch)) {
      return true;
    }
  }

  return false;
}

function writeFoldedLines(state, count) {
  if (count === 1) {
    state.result += ' ';
  } else if (count > 1) {
    state.result += common.repeat('\n', count - 1);
  }
}


function readPlainScalar(state, nodeIndent, withinFlowCollection) {
  var preceding,
      following,
      captureStart,
      captureEnd,
      hasPendingContent,
      _line,
      _lineStart,
      _lineIndent,
      _kind = state.kind,
      _result = state.result,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (is_WS_OR_EOL(ch)      ||
      is_FLOW_INDICATOR(ch) ||
      ch === 0x23/* # */    ||
      ch === 0x26/* & */    ||
      ch === 0x2A/* * */    ||
      ch === 0x21/* ! */    ||
      ch === 0x7C/* | */    ||
      ch === 0x3E/* > */    ||
      ch === 0x27/* ' */    ||
      ch === 0x22/* " */    ||
      ch === 0x25/* % */    ||
      ch === 0x40/* @ */    ||
      ch === 0x60/* ` */) {
    return false;
  }

  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {
    following = state.input.charCodeAt(state.position + 1);

    if (is_WS_OR_EOL(following) ||
        withinFlowCollection && is_FLOW_INDICATOR(following)) {
      return false;
    }
  }

  state.kind = 'scalar';
  state.result = '';
  captureStart = captureEnd = state.position;
  hasPendingContent = false;

  while (ch !== 0) {
    if (ch === 0x3A/* : */) {
      following = state.input.charCodeAt(state.position + 1);

      if (is_WS_OR_EOL(following) ||
          withinFlowCollection && is_FLOW_INDICATOR(following)) {
        break;
      }

    } else if (ch === 0x23/* # */) {
      preceding = state.input.charCodeAt(state.position - 1);

      if (is_WS_OR_EOL(preceding)) {
        break;
      }

    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||
               withinFlowCollection && is_FLOW_INDICATOR(ch)) {
      break;

    } else if (is_EOL(ch)) {
      _line = state.line;
      _lineStart = state.lineStart;
      _lineIndent = state.lineIndent;
      skipSeparationSpace(state, false, -1);

      if (state.lineIndent >= nodeIndent) {
        hasPendingContent = true;
        ch = state.input.charCodeAt(state.position);
        continue;
      } else {
        state.position = captureEnd;
        state.line = _line;
        state.lineStart = _lineStart;
        state.lineIndent = _lineIndent;
        break;
      }
    }

    if (hasPendingContent) {
      captureSegment(state, captureStart, captureEnd, false);
      writeFoldedLines(state, state.line - _line);
      captureStart = captureEnd = state.position;
      hasPendingContent = false;
    }

    if (!is_WHITE_SPACE(ch)) {
      captureEnd = state.position + 1;
    }

    ch = state.input.charCodeAt(++state.position);
  }

  captureSegment(state, captureStart, captureEnd, false);

  if (state.result) {
    return true;
  }

  state.kind = _kind;
  state.result = _result;
  return false;
}

function readSingleQuotedScalar(state, nodeIndent) {
  var ch,
      captureStart, captureEnd;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x27/* ' */) {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';
  state.position++;
  captureStart = captureEnd = state.position;

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    if (ch === 0x27/* ' */) {
      captureSegment(state, captureStart, state.position, true);
      ch = state.input.charCodeAt(++state.position);

      if (ch === 0x27/* ' */) {
        captureStart = state.position;
        state.position++;
        captureEnd = state.position;
      } else {
        return true;
      }

    } else if (is_EOL(ch)) {
      captureSegment(state, captureStart, captureEnd, true);
      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
      captureStart = captureEnd = state.position;

    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
      throwError(state, 'unexpected end of the document within a single quoted scalar');

    } else {
      state.position++;
      captureEnd = state.position;
    }
  }

  throwError(state, 'unexpected end of the stream within a single quoted scalar');
}

function readDoubleQuotedScalar(state, nodeIndent) {
  var captureStart,
      captureEnd,
      hexLength,
      hexResult,
      tmp,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x22/* " */) {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';
  state.position++;
  captureStart = captureEnd = state.position;

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    if (ch === 0x22/* " */) {
      captureSegment(state, captureStart, state.position, true);
      state.position++;
      return true;

    } else if (ch === 0x5C/* \ */) {
      captureSegment(state, captureStart, state.position, true);
      ch = state.input.charCodeAt(++state.position);

      if (is_EOL(ch)) {
        skipSeparationSpace(state, false, nodeIndent);

        // TODO: rework to inline fn with no type cast?
      } else if (ch < 256 && simpleEscapeCheck[ch]) {
        state.result += simpleEscapeMap[ch];
        state.position++;

      } else if ((tmp = escapedHexLen(ch)) > 0) {
        hexLength = tmp;
        hexResult = 0;

        for (; hexLength > 0; hexLength--) {
          ch = state.input.charCodeAt(++state.position);

          if ((tmp = fromHexCode(ch)) >= 0) {
            hexResult = (hexResult << 4) + tmp;

          } else {
            throwError(state, 'expected hexadecimal character');
          }
        }

        state.result += charFromCodepoint(hexResult);

        state.position++;

      } else {
        throwError(state, 'unknown escape sequence');
      }

      captureStart = captureEnd = state.position;

    } else if (is_EOL(ch)) {
      captureSegment(state, captureStart, captureEnd, true);
      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));
      captureStart = captureEnd = state.position;

    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {
      throwError(state, 'unexpected end of the document within a double quoted scalar');

    } else {
      state.position++;
      captureEnd = state.position;
    }
  }

  throwError(state, 'unexpected end of the stream within a double quoted scalar');
}

function readFlowCollection(state, nodeIndent) {
  var readNext = true,
      _line,
      _tag     = state.tag,
      _result,
      _anchor  = state.anchor,
      following,
      terminator,
      isPair,
      isExplicitPair,
      isMapping,
      overridableKeys = {},
      keyNode,
      keyTag,
      valueNode,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x5B/* [ */) {
    terminator = 0x5D;/* ] */
    isMapping = false;
    _result = [];
  } else if (ch === 0x7B/* { */) {
    terminator = 0x7D;/* } */
    isMapping = true;
    _result = {};
  } else {
    return false;
  }

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(++state.position);

  while (ch !== 0) {
    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if (ch === terminator) {
      state.position++;
      state.tag = _tag;
      state.anchor = _anchor;
      state.kind = isMapping ? 'mapping' : 'sequence';
      state.result = _result;
      return true;
    } else if (!readNext) {
      throwError(state, 'missed comma between flow collection entries');
    }

    keyTag = keyNode = valueNode = null;
    isPair = isExplicitPair = false;

    if (ch === 0x3F/* ? */) {
      following = state.input.charCodeAt(state.position + 1);

      if (is_WS_OR_EOL(following)) {
        isPair = isExplicitPair = true;
        state.position++;
        skipSeparationSpace(state, true, nodeIndent);
      }
    }

    _line = state.line;
    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
    keyTag = state.tag;
    keyNode = state.result;
    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {
      isPair = true;
      ch = state.input.charCodeAt(++state.position);
      skipSeparationSpace(state, true, nodeIndent);
      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);
      valueNode = state.result;
    }

    if (isMapping) {
      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode);
    } else if (isPair) {
      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode));
    } else {
      _result.push(keyNode);
    }

    skipSeparationSpace(state, true, nodeIndent);

    ch = state.input.charCodeAt(state.position);

    if (ch === 0x2C/* , */) {
      readNext = true;
      ch = state.input.charCodeAt(++state.position);
    } else {
      readNext = false;
    }
  }

  throwError(state, 'unexpected end of the stream within a flow collection');
}

function readBlockScalar(state, nodeIndent) {
  var captureStart,
      folding,
      chomping       = CHOMPING_CLIP,
      didReadContent = false,
      detectedIndent = false,
      textIndent     = nodeIndent,
      emptyLines     = 0,
      atMoreIndented = false,
      tmp,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch === 0x7C/* | */) {
    folding = false;
  } else if (ch === 0x3E/* > */) {
    folding = true;
  } else {
    return false;
  }

  state.kind = 'scalar';
  state.result = '';

  while (ch !== 0) {
    ch = state.input.charCodeAt(++state.position);

    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {
      if (CHOMPING_CLIP === chomping) {
        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;
      } else {
        throwError(state, 'repeat of a chomping mode identifier');
      }

    } else if ((tmp = fromDecimalCode(ch)) >= 0) {
      if (tmp === 0) {
        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');
      } else if (!detectedIndent) {
        textIndent = nodeIndent + tmp - 1;
        detectedIndent = true;
      } else {
        throwError(state, 'repeat of an indentation width identifier');
      }

    } else {
      break;
    }
  }

  if (is_WHITE_SPACE(ch)) {
    do { ch = state.input.charCodeAt(++state.position); }
    while (is_WHITE_SPACE(ch));

    if (ch === 0x23/* # */) {
      do { ch = state.input.charCodeAt(++state.position); }
      while (!is_EOL(ch) && (ch !== 0));
    }
  }

  while (ch !== 0) {
    readLineBreak(state);
    state.lineIndent = 0;

    ch = state.input.charCodeAt(state.position);

    while ((!detectedIndent || state.lineIndent < textIndent) &&
           (ch === 0x20/* Space */)) {
      state.lineIndent++;
      ch = state.input.charCodeAt(++state.position);
    }

    if (!detectedIndent && state.lineIndent > textIndent) {
      textIndent = state.lineIndent;
    }

    if (is_EOL(ch)) {
      emptyLines++;
      continue;
    }

    // End of the scalar.
    if (state.lineIndent < textIndent) {

      // Perform the chomping.
      if (chomping === CHOMPING_KEEP) {
        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
      } else if (chomping === CHOMPING_CLIP) {
        if (didReadContent) { // i.e. only if the scalar is not empty.
          state.result += '\n';
        }
      }

      // Break this `while` cycle and go to the funciton's epilogue.
      break;
    }

    // Folded style: use fancy rules to handle line breaks.
    if (folding) {

      // Lines starting with white space characters (more-indented lines) are not folded.
      if (is_WHITE_SPACE(ch)) {
        atMoreIndented = true;
        // except for the first content line (cf. Example 8.1)
        state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);

      // End of more-indented block.
      } else if (atMoreIndented) {
        atMoreIndented = false;
        state.result += common.repeat('\n', emptyLines + 1);

      // Just one line break - perceive as the same line.
      } else if (emptyLines === 0) {
        if (didReadContent) { // i.e. only if we have already read some scalar content.
          state.result += ' ';
        }

      // Several line breaks - perceive as different lines.
      } else {
        state.result += common.repeat('\n', emptyLines);
      }

    // Literal style: just add exact number of line breaks between content lines.
    } else {
      // Keep all line breaks except the header line break.
      state.result += common.repeat('\n', didReadContent ? 1 + emptyLines : emptyLines);
    }

    didReadContent = true;
    detectedIndent = true;
    emptyLines = 0;
    captureStart = state.position;

    while (!is_EOL(ch) && (ch !== 0)) {
      ch = state.input.charCodeAt(++state.position);
    }

    captureSegment(state, captureStart, state.position, false);
  }

  return true;
}

function readBlockSequence(state, nodeIndent) {
  var _line,
      _tag      = state.tag,
      _anchor   = state.anchor,
      _result   = [],
      following,
      detected  = false,
      ch;

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {

    if (ch !== 0x2D/* - */) {
      break;
    }

    following = state.input.charCodeAt(state.position + 1);

    if (!is_WS_OR_EOL(following)) {
      break;
    }

    detected = true;
    state.position++;

    if (skipSeparationSpace(state, true, -1)) {
      if (state.lineIndent <= nodeIndent) {
        _result.push(null);
        ch = state.input.charCodeAt(state.position);
        continue;
      }
    }

    _line = state.line;
    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);
    _result.push(state.result);
    skipSeparationSpace(state, true, -1);

    ch = state.input.charCodeAt(state.position);

    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {
      throwError(state, 'bad indentation of a sequence entry');
    } else if (state.lineIndent < nodeIndent) {
      break;
    }
  }

  if (detected) {
    state.tag = _tag;
    state.anchor = _anchor;
    state.kind = 'sequence';
    state.result = _result;
    return true;
  }
  return false;
}

function readBlockMapping(state, nodeIndent, flowIndent) {
  var following,
      allowCompact,
      _line,
      _pos,
      _tag          = state.tag,
      _anchor       = state.anchor,
      _result       = {},
      overridableKeys = {},
      keyTag        = null,
      keyNode       = null,
      valueNode     = null,
      atExplicitKey = false,
      detected      = false,
      ch;

  if (state.anchor !== null) {
    state.anchorMap[state.anchor] = _result;
  }

  ch = state.input.charCodeAt(state.position);

  while (ch !== 0) {
    following = state.input.charCodeAt(state.position + 1);
    _line = state.line; // Save the current line.
    _pos = state.position;

    //
    // Explicit notation case. There are two separate blocks:
    // first for the key (denoted by "?") and second for the value (denoted by ":")
    //
    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {

      if (ch === 0x3F/* ? */) {
        if (atExplicitKey) {
          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
          keyTag = keyNode = valueNode = null;
        }

        detected = true;
        atExplicitKey = true;
        allowCompact = true;

      } else if (atExplicitKey) {
        // i.e. 0x3A/* : */ === character after the explicit key.
        atExplicitKey = false;
        allowCompact = true;

      } else {
        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');
      }

      state.position += 1;
      ch = following;

    //
    // Implicit notation case. Flow-style node as the key first, then ":", and the value.
    //
    } else if (composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {

      if (state.line === _line) {
        ch = state.input.charCodeAt(state.position);

        while (is_WHITE_SPACE(ch)) {
          ch = state.input.charCodeAt(++state.position);
        }

        if (ch === 0x3A/* : */) {
          ch = state.input.charCodeAt(++state.position);

          if (!is_WS_OR_EOL(ch)) {
            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');
          }

          if (atExplicitKey) {
            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
            keyTag = keyNode = valueNode = null;
          }

          detected = true;
          atExplicitKey = false;
          allowCompact = false;
          keyTag = state.tag;
          keyNode = state.result;

        } else if (detected) {
          throwError(state, 'can not read an implicit mapping pair; a colon is missed');

        } else {
          state.tag = _tag;
          state.anchor = _anchor;
          return true; // Keep the result of `composeNode`.
        }

      } else if (detected) {
        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');

      } else {
        state.tag = _tag;
        state.anchor = _anchor;
        return true; // Keep the result of `composeNode`.
      }

    } else {
      break; // Reading is done. Go to the epilogue.
    }

    //
    // Common reading code for both explicit and implicit notations.
    //
    if (state.line === _line || state.lineIndent > nodeIndent) {
      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {
        if (atExplicitKey) {
          keyNode = state.result;
        } else {
          valueNode = state.result;
        }
      }

      if (!atExplicitKey) {
        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _pos);
        keyTag = keyNode = valueNode = null;
      }

      skipSeparationSpace(state, true, -1);
      ch = state.input.charCodeAt(state.position);
    }

    if (state.lineIndent > nodeIndent && (ch !== 0)) {
      throwError(state, 'bad indentation of a mapping entry');
    } else if (state.lineIndent < nodeIndent) {
      break;
    }
  }

  //
  // Epilogue.
  //

  // Special case: last mapping's node contains only the key in explicit notation.
  if (atExplicitKey) {
    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null);
  }

  // Expose the resulting mapping.
  if (detected) {
    state.tag = _tag;
    state.anchor = _anchor;
    state.kind = 'mapping';
    state.result = _result;
  }

  return detected;
}

function readTagProperty(state) {
  var _position,
      isVerbatim = false,
      isNamed    = false,
      tagHandle,
      tagName,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x21/* ! */) return false;

  if (state.tag !== null) {
    throwError(state, 'duplication of a tag property');
  }

  ch = state.input.charCodeAt(++state.position);

  if (ch === 0x3C/* < */) {
    isVerbatim = true;
    ch = state.input.charCodeAt(++state.position);

  } else if (ch === 0x21/* ! */) {
    isNamed = true;
    tagHandle = '!!';
    ch = state.input.charCodeAt(++state.position);

  } else {
    tagHandle = '!';
  }

  _position = state.position;

  if (isVerbatim) {
    do { ch = state.input.charCodeAt(++state.position); }
    while (ch !== 0 && ch !== 0x3E/* > */);

    if (state.position < state.length) {
      tagName = state.input.slice(_position, state.position);
      ch = state.input.charCodeAt(++state.position);
    } else {
      throwError(state, 'unexpected end of the stream within a verbatim tag');
    }
  } else {
    while (ch !== 0 && !is_WS_OR_EOL(ch)) {

      if (ch === 0x21/* ! */) {
        if (!isNamed) {
          tagHandle = state.input.slice(_position - 1, state.position + 1);

          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {
            throwError(state, 'named tag handle cannot contain such characters');
          }

          isNamed = true;
          _position = state.position + 1;
        } else {
          throwError(state, 'tag suffix cannot contain exclamation marks');
        }
      }

      ch = state.input.charCodeAt(++state.position);
    }

    tagName = state.input.slice(_position, state.position);

    if (PATTERN_FLOW_INDICATORS.test(tagName)) {
      throwError(state, 'tag suffix cannot contain flow indicator characters');
    }
  }

  if (tagName && !PATTERN_TAG_URI.test(tagName)) {
    throwError(state, 'tag name cannot contain such characters: ' + tagName);
  }

  if (isVerbatim) {
    state.tag = tagName;

  } else if (_hasOwnProperty.call(state.tagMap, tagHandle)) {
    state.tag = state.tagMap[tagHandle] + tagName;

  } else if (tagHandle === '!') {
    state.tag = '!' + tagName;

  } else if (tagHandle === '!!') {
    state.tag = 'tag:yaml.org,2002:' + tagName;

  } else {
    throwError(state, 'undeclared tag handle "' + tagHandle + '"');
  }

  return true;
}

function readAnchorProperty(state) {
  var _position,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x26/* & */) return false;

  if (state.anchor !== null) {
    throwError(state, 'duplication of an anchor property');
  }

  ch = state.input.charCodeAt(++state.position);
  _position = state.position;

  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
    ch = state.input.charCodeAt(++state.position);
  }

  if (state.position === _position) {
    throwError(state, 'name of an anchor node must contain at least one character');
  }

  state.anchor = state.input.slice(_position, state.position);
  return true;
}

function readAlias(state) {
  var _position, alias,
      ch;

  ch = state.input.charCodeAt(state.position);

  if (ch !== 0x2A/* * */) return false;

  ch = state.input.charCodeAt(++state.position);
  _position = state.position;

  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {
    ch = state.input.charCodeAt(++state.position);
  }

  if (state.position === _position) {
    throwError(state, 'name of an alias node must contain at least one character');
  }

  alias = state.input.slice(_position, state.position);

  if (!state.anchorMap.hasOwnProperty(alias)) {
    throwError(state, 'unidentified alias "' + alias + '"');
  }

  state.result = state.anchorMap[alias];
  skipSeparationSpace(state, true, -1);
  return true;
}

function composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {
  var allowBlockStyles,
      allowBlockScalars,
      allowBlockCollections,
      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent
      atNewLine  = false,
      hasContent = false,
      typeIndex,
      typeQuantity,
      type,
      flowIndent,
      blockIndent;

  if (state.listener !== null) {
    state.listener('open', state);
  }

  state.tag    = null;
  state.anchor = null;
  state.kind   = null;
  state.result = null;

  allowBlockStyles = allowBlockScalars = allowBlockCollections =
    CONTEXT_BLOCK_OUT === nodeContext ||
    CONTEXT_BLOCK_IN  === nodeContext;

  if (allowToSeek) {
    if (skipSeparationSpace(state, true, -1)) {
      atNewLine = true;

      if (state.lineIndent > parentIndent) {
        indentStatus = 1;
      } else if (state.lineIndent === parentIndent) {
        indentStatus = 0;
      } else if (state.lineIndent < parentIndent) {
        indentStatus = -1;
      }
    }
  }

  if (indentStatus === 1) {
    while (readTagProperty(state) || readAnchorProperty(state)) {
      if (skipSeparationSpace(state, true, -1)) {
        atNewLine = true;
        allowBlockCollections = allowBlockStyles;

        if (state.lineIndent > parentIndent) {
          indentStatus = 1;
        } else if (state.lineIndent === parentIndent) {
          indentStatus = 0;
        } else if (state.lineIndent < parentIndent) {
          indentStatus = -1;
        }
      } else {
        allowBlockCollections = false;
      }
    }
  }

  if (allowBlockCollections) {
    allowBlockCollections = atNewLine || allowCompact;
  }

  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {
    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {
      flowIndent = parentIndent;
    } else {
      flowIndent = parentIndent + 1;
    }

    blockIndent = state.position - state.lineStart;

    if (indentStatus === 1) {
      if (allowBlockCollections &&
          (readBlockSequence(state, blockIndent) ||
           readBlockMapping(state, blockIndent, flowIndent)) ||
          readFlowCollection(state, flowIndent)) {
        hasContent = true;
      } else {
        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||
            readSingleQuotedScalar(state, flowIndent) ||
            readDoubleQuotedScalar(state, flowIndent)) {
          hasContent = true;

        } else if (readAlias(state)) {
          hasContent = true;

          if (state.tag !== null || state.anchor !== null) {
            throwError(state, 'alias node should not have any properties');
          }

        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {
          hasContent = true;

          if (state.tag === null) {
            state.tag = '?';
          }
        }

        if (state.anchor !== null) {
          state.anchorMap[state.anchor] = state.result;
        }
      }
    } else if (indentStatus === 0) {
      // Special case: block sequences are allowed to have same indentation level as the parent.
      // http://www.yaml.org/spec/1.2/spec.html#id2799784
      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);
    }
  }

  if (state.tag !== null && state.tag !== '!') {
    if (state.tag === '?') {
      for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {
        type = state.implicitTypes[typeIndex];

        // Implicit resolving is not allowed for non-scalar types, and '?'
        // non-specific tag is only assigned to plain scalars. So, it isn't
        // needed to check for 'kind' conformity.

        if (type.resolve(state.result)) { // `state.result` updated in resolver if matched
          state.result = type.construct(state.result);
          state.tag = type.tag;
          if (state.anchor !== null) {
            state.anchorMap[state.anchor] = state.result;
          }
          break;
        }
      }
    } else if (_hasOwnProperty.call(state.typeMap[state.kind || 'fallback'], state.tag)) {
      type = state.typeMap[state.kind || 'fallback'][state.tag];

      if (state.result !== null && type.kind !== state.kind) {
        throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be "' + type.kind + '", not "' + state.kind + '"');
      }

      if (!type.resolve(state.result)) { // `state.result` updated in resolver if matched
        throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');
      } else {
        state.result = type.construct(state.result);
        if (state.anchor !== null) {
          state.anchorMap[state.anchor] = state.result;
        }
      }
    } else {
      throwError(state, 'unknown tag !<' + state.tag + '>');
    }
  }

  if (state.listener !== null) {
    state.listener('close', state);
  }
  return state.tag !== null ||  state.anchor !== null || hasContent;
}

function readDocument(state) {
  var documentStart = state.position,
      _position,
      directiveName,
      directiveArgs,
      hasDirectives = false,
      ch;

  state.version = null;
  state.checkLineBreaks = state.legacy;
  state.tagMap = {};
  state.anchorMap = {};

  while ((ch = state.input.charCodeAt(state.position)) !== 0) {
    skipSeparationSpace(state, true, -1);

    ch = state.input.charCodeAt(state.position);

    if (state.lineIndent > 0 || ch !== 0x25/* % */) {
      break;
    }

    hasDirectives = true;
    ch = state.input.charCodeAt(++state.position);
    _position = state.position;

    while (ch !== 0 && !is_WS_OR_EOL(ch)) {
      ch = state.input.charCodeAt(++state.position);
    }

    directiveName = state.input.slice(_position, state.position);
    directiveArgs = [];

    if (directiveName.length < 1) {
      throwError(state, 'directive name must not be less than one character in length');
    }

    while (ch !== 0) {
      while (is_WHITE_SPACE(ch)) {
        ch = state.input.charCodeAt(++state.position);
      }

      if (ch === 0x23/* # */) {
        do { ch = state.input.charCodeAt(++state.position); }
        while (ch !== 0 && !is_EOL(ch));
        break;
      }

      if (is_EOL(ch)) break;

      _position = state.position;

      while (ch !== 0 && !is_WS_OR_EOL(ch)) {
        ch = state.input.charCodeAt(++state.position);
      }

      directiveArgs.push(state.input.slice(_position, state.position));
    }

    if (ch !== 0) readLineBreak(state);

    if (_hasOwnProperty.call(directiveHandlers, directiveName)) {
      directiveHandlers[directiveName](state, directiveName, directiveArgs);
    } else {
      throwWarning(state, 'unknown document directive "' + directiveName + '"');
    }
  }

  skipSeparationSpace(state, true, -1);

  if (state.lineIndent === 0 &&
      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&
      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&
      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {
    state.position += 3;
    skipSeparationSpace(state, true, -1);

  } else if (hasDirectives) {
    throwError(state, 'directives end mark is expected');
  }

  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);
  skipSeparationSpace(state, true, -1);

  if (state.checkLineBreaks &&
      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {
    throwWarning(state, 'non-ASCII line breaks are interpreted as content');
  }

  state.documents.push(state.result);

  if (state.position === state.lineStart && testDocumentSeparator(state)) {

    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {
      state.position += 3;
      skipSeparationSpace(state, true, -1);
    }
    return;
  }

  if (state.position < (state.length - 1)) {
    throwError(state, 'end of the stream or a document separator is expected');
  } else {
    return;
  }
}


function loadDocuments(input, options) {
  input = String(input);
  options = options || {};

  if (input.length !== 0) {

    // Add tailing `\n` if not exists
    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&
        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {
      input += '\n';
    }

    // Strip BOM
    if (input.charCodeAt(0) === 0xFEFF) {
      input = input.slice(1);
    }
  }

  var state = new State(input, options);

  // Use 0 as string terminator. That significantly simplifies bounds check.
  state.input += '\0';

  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {
    state.lineIndent += 1;
    state.position += 1;
  }

  while (state.position < (state.length - 1)) {
    readDocument(state);
  }

  return state.documents;
}


function loadAll(input, iterator, options) {
  var documents = loadDocuments(input, options), index, length;

  if (typeof iterator !== 'function') {
    return documents;
  }

  for (index = 0, length = documents.length; index < length; index += 1) {
    iterator(documents[index]);
  }
}


function load(input, options) {
  var documents = loadDocuments(input, options);

  if (documents.length === 0) {
    /*eslint-disable no-undefined*/
    return undefined;
  } else if (documents.length === 1) {
    return documents[0];
  }
  throw new YAMLException('expected a single document in the stream, but found more');
}


function safeLoadAll(input, output, options) {
  if (typeof output === 'function') {
    loadAll(input, output, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
  } else {
    return loadAll(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
  }
}


function safeLoad(input, options) {
  return load(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
}


module.exports.loadAll     = loadAll;
module.exports.load        = load;
module.exports.safeLoadAll = safeLoadAll;
module.exports.safeLoad    = safeLoad;


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var common = __webpack_require__(17);


function Mark(name, buffer, position, line, column) {
  this.name     = name;
  this.buffer   = buffer;
  this.position = position;
  this.line     = line;
  this.column   = column;
}


Mark.prototype.getSnippet = function getSnippet(indent, maxLength) {
  var head, start, tail, end, snippet;

  if (!this.buffer) return null;

  indent = indent || 4;
  maxLength = maxLength || 75;

  head = '';
  start = this.position;

  while (start > 0 && '\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(start - 1)) === -1) {
    start -= 1;
    if (this.position - start > (maxLength / 2 - 1)) {
      head = ' ... ';
      start += 5;
      break;
    }
  }

  tail = '';
  end = this.position;

  while (end < this.buffer.length && '\x00\r\n\x85\u2028\u2029'.indexOf(this.buffer.charAt(end)) === -1) {
    end += 1;
    if (end - this.position > (maxLength / 2 - 1)) {
      tail = ' ... ';
      end -= 5;
      break;
    }
  }

  snippet = this.buffer.slice(start, end);

  return common.repeat(' ', indent) + head + snippet + tail + '\n' +
         common.repeat(' ', indent + this.position - start + head.length) + '^';
};


Mark.prototype.toString = function toString(compact) {
  var snippet, where = '';

  if (this.name) {
    where += 'in "' + this.name + '" ';
  }

  where += 'at line ' + (this.line + 1) + ', column ' + (this.column + 1);

  if (!compact) {
    snippet = this.getSnippet();

    if (snippet) {
      where += ':\n' + snippet;
    }
  }

  return where;
};


module.exports = Mark;


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

module.exports = new Type('tag:yaml.org,2002:str', {
  kind: 'scalar',
  construct: function (data) { return data !== null ? data : ''; }
});


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

module.exports = new Type('tag:yaml.org,2002:seq', {
  kind: 'sequence',
  construct: function (data) { return data !== null ? data : []; }
});


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

module.exports = new Type('tag:yaml.org,2002:map', {
  kind: 'mapping',
  construct: function (data) { return data !== null ? data : {}; }
});


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

function resolveYamlNull(data) {
  if (data === null) return true;

  var max = data.length;

  return (max === 1 && data === '~') ||
         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));
}

function constructYamlNull() {
  return null;
}

function isNull(object) {
  return object === null;
}

module.exports = new Type('tag:yaml.org,2002:null', {
  kind: 'scalar',
  resolve: resolveYamlNull,
  construct: constructYamlNull,
  predicate: isNull,
  represent: {
    canonical: function () { return '~';    },
    lowercase: function () { return 'null'; },
    uppercase: function () { return 'NULL'; },
    camelcase: function () { return 'Null'; }
  },
  defaultStyle: 'lowercase'
});


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

function resolveYamlBoolean(data) {
  if (data === null) return false;

  var max = data.length;

  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||
         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));
}

function constructYamlBoolean(data) {
  return data === 'true' ||
         data === 'True' ||
         data === 'TRUE';
}

function isBoolean(object) {
  return Object.prototype.toString.call(object) === '[object Boolean]';
}

module.exports = new Type('tag:yaml.org,2002:bool', {
  kind: 'scalar',
  resolve: resolveYamlBoolean,
  construct: constructYamlBoolean,
  predicate: isBoolean,
  represent: {
    lowercase: function (object) { return object ? 'true' : 'false'; },
    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },
    camelcase: function (object) { return object ? 'True' : 'False'; }
  },
  defaultStyle: 'lowercase'
});


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var common = __webpack_require__(17);
var Type   = __webpack_require__(7);

function isHexCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||
         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||
         ((0x61/* a */ <= c) && (c <= 0x66/* f */));
}

function isOctCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));
}

function isDecCode(c) {
  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));
}

function resolveYamlInteger(data) {
  if (data === null) return false;

  var max = data.length,
      index = 0,
      hasDigits = false,
      ch;

  if (!max) return false;

  ch = data[index];

  // sign
  if (ch === '-' || ch === '+') {
    ch = data[++index];
  }

  if (ch === '0') {
    // 0
    if (index + 1 === max) return true;
    ch = data[++index];

    // base 2, base 8, base 16

    if (ch === 'b') {
      // base 2
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (ch !== '0' && ch !== '1') return false;
        hasDigits = true;
      }
      return hasDigits && ch !== '_';
    }


    if (ch === 'x') {
      // base 16
      index++;

      for (; index < max; index++) {
        ch = data[index];
        if (ch === '_') continue;
        if (!isHexCode(data.charCodeAt(index))) return false;
        hasDigits = true;
      }
      return hasDigits && ch !== '_';
    }

    // base 8
    for (; index < max; index++) {
      ch = data[index];
      if (ch === '_') continue;
      if (!isOctCode(data.charCodeAt(index))) return false;
      hasDigits = true;
    }
    return hasDigits && ch !== '_';
  }

  // base 10 (except 0) or base 60

  // value should not start with `_`;
  if (ch === '_') return false;

  for (; index < max; index++) {
    ch = data[index];
    if (ch === '_') continue;
    if (ch === ':') break;
    if (!isDecCode(data.charCodeAt(index))) {
      return false;
    }
    hasDigits = true;
  }

  // Should have digits and should not end with `_`
  if (!hasDigits || ch === '_') return false;

  // if !base60 - done;
  if (ch !== ':') return true;

  // base60 almost not used, no needs to optimize
  return /^(:[0-5]?[0-9])+$/.test(data.slice(index));
}

function constructYamlInteger(data) {
  var value = data, sign = 1, ch, base, digits = [];

  if (value.indexOf('_') !== -1) {
    value = value.replace(/_/g, '');
  }

  ch = value[0];

  if (ch === '-' || ch === '+') {
    if (ch === '-') sign = -1;
    value = value.slice(1);
    ch = value[0];
  }

  if (value === '0') return 0;

  if (ch === '0') {
    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);
    if (value[1] === 'x') return sign * parseInt(value, 16);
    return sign * parseInt(value, 8);
  }

  if (value.indexOf(':') !== -1) {
    value.split(':').forEach(function (v) {
      digits.unshift(parseInt(v, 10));
    });

    value = 0;
    base = 1;

    digits.forEach(function (d) {
      value += (d * base);
      base *= 60;
    });

    return sign * value;

  }

  return sign * parseInt(value, 10);
}

function isInteger(object) {
  return (Object.prototype.toString.call(object)) === '[object Number]' &&
         (object % 1 === 0 && !common.isNegativeZero(object));
}

module.exports = new Type('tag:yaml.org,2002:int', {
  kind: 'scalar',
  resolve: resolveYamlInteger,
  construct: constructYamlInteger,
  predicate: isInteger,
  represent: {
    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },
    octal:       function (obj) { return obj >= 0 ? '0'  + obj.toString(8) : '-0'  + obj.toString(8).slice(1); },
    decimal:     function (obj) { return obj.toString(10); },
    /* eslint-disable max-len */
    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }
  },
  defaultStyle: 'decimal',
  styleAliases: {
    binary:      [ 2,  'bin' ],
    octal:       [ 8,  'oct' ],
    decimal:     [ 10, 'dec' ],
    hexadecimal: [ 16, 'hex' ]
  }
});


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var common = __webpack_require__(17);
var Type   = __webpack_require__(7);

var YAML_FLOAT_PATTERN = new RegExp(
  // 2.5e4, 2.5 and integers
  '^(?:[-+]?(?:0|[1-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +
  // .2e4, .2
  // special case, seems not from spec
  '|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +
  // 20:59
  '|[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*' +
  // .inf
  '|[-+]?\\.(?:inf|Inf|INF)' +
  // .nan
  '|\\.(?:nan|NaN|NAN))$');

function resolveYamlFloat(data) {
  if (data === null) return false;

  if (!YAML_FLOAT_PATTERN.test(data) ||
      // Quick hack to not allow integers end with `_`
      // Probably should update regexp & check speed
      data[data.length - 1] === '_') {
    return false;
  }

  return true;
}

function constructYamlFloat(data) {
  var value, sign, base, digits;

  value  = data.replace(/_/g, '').toLowerCase();
  sign   = value[0] === '-' ? -1 : 1;
  digits = [];

  if ('+-'.indexOf(value[0]) >= 0) {
    value = value.slice(1);
  }

  if (value === '.inf') {
    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;

  } else if (value === '.nan') {
    return NaN;

  } else if (value.indexOf(':') >= 0) {
    value.split(':').forEach(function (v) {
      digits.unshift(parseFloat(v, 10));
    });

    value = 0.0;
    base = 1;

    digits.forEach(function (d) {
      value += d * base;
      base *= 60;
    });

    return sign * value;

  }
  return sign * parseFloat(value, 10);
}


var SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;

function representYamlFloat(object, style) {
  var res;

  if (isNaN(object)) {
    switch (style) {
      case 'lowercase': return '.nan';
      case 'uppercase': return '.NAN';
      case 'camelcase': return '.NaN';
    }
  } else if (Number.POSITIVE_INFINITY === object) {
    switch (style) {
      case 'lowercase': return '.inf';
      case 'uppercase': return '.INF';
      case 'camelcase': return '.Inf';
    }
  } else if (Number.NEGATIVE_INFINITY === object) {
    switch (style) {
      case 'lowercase': return '-.inf';
      case 'uppercase': return '-.INF';
      case 'camelcase': return '-.Inf';
    }
  } else if (common.isNegativeZero(object)) {
    return '-0.0';
  }

  res = object.toString(10);

  // JS stringifier can build scientific format without dots: 5e-100,
  // while YAML requres dot: 5.e-100. Fix it with simple hack

  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;
}

function isFloat(object) {
  return (Object.prototype.toString.call(object) === '[object Number]') &&
         (object % 1 !== 0 || common.isNegativeZero(object));
}

module.exports = new Type('tag:yaml.org,2002:float', {
  kind: 'scalar',
  resolve: resolveYamlFloat,
  construct: constructYamlFloat,
  predicate: isFloat,
  represent: representYamlFloat,
  defaultStyle: 'lowercase'
});


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

var YAML_DATE_REGEXP = new RegExp(
  '^([0-9][0-9][0-9][0-9])'          + // [1] year
  '-([0-9][0-9])'                    + // [2] month
  '-([0-9][0-9])$');                   // [3] day

var YAML_TIMESTAMP_REGEXP = new RegExp(
  '^([0-9][0-9][0-9][0-9])'          + // [1] year
  '-([0-9][0-9]?)'                   + // [2] month
  '-([0-9][0-9]?)'                   + // [3] day
  '(?:[Tt]|[ \\t]+)'                 + // ...
  '([0-9][0-9]?)'                    + // [4] hour
  ':([0-9][0-9])'                    + // [5] minute
  ':([0-9][0-9])'                    + // [6] second
  '(?:\\.([0-9]*))?'                 + // [7] fraction
  '(?:[ \\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour
  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute

function resolveYamlTimestamp(data) {
  if (data === null) return false;
  if (YAML_DATE_REGEXP.exec(data) !== null) return true;
  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;
  return false;
}

function constructYamlTimestamp(data) {
  var match, year, month, day, hour, minute, second, fraction = 0,
      delta = null, tz_hour, tz_minute, date;

  match = YAML_DATE_REGEXP.exec(data);
  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);

  if (match === null) throw new Error('Date resolve error');

  // match: [1] year [2] month [3] day

  year = +(match[1]);
  month = +(match[2]) - 1; // JS month starts with 0
  day = +(match[3]);

  if (!match[4]) { // no hour
    return new Date(Date.UTC(year, month, day));
  }

  // match: [4] hour [5] minute [6] second [7] fraction

  hour = +(match[4]);
  minute = +(match[5]);
  second = +(match[6]);

  if (match[7]) {
    fraction = match[7].slice(0, 3);
    while (fraction.length < 3) { // milli-seconds
      fraction += '0';
    }
    fraction = +fraction;
  }

  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute

  if (match[9]) {
    tz_hour = +(match[10]);
    tz_minute = +(match[11] || 0);
    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds
    if (match[9] === '-') delta = -delta;
  }

  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));

  if (delta) date.setTime(date.getTime() - delta);

  return date;
}

function representYamlTimestamp(object /*, style*/) {
  return object.toISOString();
}

module.exports = new Type('tag:yaml.org,2002:timestamp', {
  kind: 'scalar',
  resolve: resolveYamlTimestamp,
  construct: constructYamlTimestamp,
  instanceOf: Date,
  represent: representYamlTimestamp
});


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

function resolveYamlMerge(data) {
  return data === '<<' || data === null;
}

module.exports = new Type('tag:yaml.org,2002:merge', {
  kind: 'scalar',
  resolve: resolveYamlMerge
});


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var require;

/*eslint-disable no-bitwise*/

var NodeBuffer;

try {
  // A trick for browserified version, to not include `Buffer` shim
  var _require = require;
  NodeBuffer = __webpack_require__(220).Buffer;
} catch (__) {}

var Type       = __webpack_require__(7);


// [ 64, 65, 66 ] -> [ padding, CR, LF ]
var BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r';


function resolveYamlBinary(data) {
  if (data === null) return false;

  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;

  // Convert one by one.
  for (idx = 0; idx < max; idx++) {
    code = map.indexOf(data.charAt(idx));

    // Skip CR/LF
    if (code > 64) continue;

    // Fail on illegal characters
    if (code < 0) return false;

    bitlen += 6;
  }

  // If there are any bits left, source was corrupted
  return (bitlen % 8) === 0;
}

function constructYamlBinary(data) {
  var idx, tailbits,
      input = data.replace(/[\r\n=]/g, ''), // remove CR/LF & padding to simplify scan
      max = input.length,
      map = BASE64_MAP,
      bits = 0,
      result = [];

  // Collect by 6*4 bits (3 bytes)

  for (idx = 0; idx < max; idx++) {
    if ((idx % 4 === 0) && idx) {
      result.push((bits >> 16) & 0xFF);
      result.push((bits >> 8) & 0xFF);
      result.push(bits & 0xFF);
    }

    bits = (bits << 6) | map.indexOf(input.charAt(idx));
  }

  // Dump tail

  tailbits = (max % 4) * 6;

  if (tailbits === 0) {
    result.push((bits >> 16) & 0xFF);
    result.push((bits >> 8) & 0xFF);
    result.push(bits & 0xFF);
  } else if (tailbits === 18) {
    result.push((bits >> 10) & 0xFF);
    result.push((bits >> 2) & 0xFF);
  } else if (tailbits === 12) {
    result.push((bits >> 4) & 0xFF);
  }

  // Wrap into Buffer for NodeJS and leave Array for browser
  if (NodeBuffer) {
    // Support node 6.+ Buffer API when available
    return NodeBuffer.from ? NodeBuffer.from(result) : new NodeBuffer(result);
  }

  return result;
}

function representYamlBinary(object /*, style*/) {
  var result = '', bits = 0, idx, tail,
      max = object.length,
      map = BASE64_MAP;

  // Convert every three bytes to 4 ASCII characters.

  for (idx = 0; idx < max; idx++) {
    if ((idx % 3 === 0) && idx) {
      result += map[(bits >> 18) & 0x3F];
      result += map[(bits >> 12) & 0x3F];
      result += map[(bits >> 6) & 0x3F];
      result += map[bits & 0x3F];
    }

    bits = (bits << 8) + object[idx];
  }

  // Dump tail

  tail = max % 3;

  if (tail === 0) {
    result += map[(bits >> 18) & 0x3F];
    result += map[(bits >> 12) & 0x3F];
    result += map[(bits >> 6) & 0x3F];
    result += map[bits & 0x3F];
  } else if (tail === 2) {
    result += map[(bits >> 10) & 0x3F];
    result += map[(bits >> 4) & 0x3F];
    result += map[(bits << 2) & 0x3F];
    result += map[64];
  } else if (tail === 1) {
    result += map[(bits >> 2) & 0x3F];
    result += map[(bits << 4) & 0x3F];
    result += map[64];
    result += map[64];
  }

  return result;
}

function isBinary(object) {
  return NodeBuffer && NodeBuffer.isBuffer(object);
}

module.exports = new Type('tag:yaml.org,2002:binary', {
  kind: 'scalar',
  resolve: resolveYamlBinary,
  construct: constructYamlBinary,
  predicate: isBinary,
  represent: representYamlBinary
});


/***/ }),
/* 220 */
/***/ (function(module, exports) {

module.exports = require("buffer");

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

var _hasOwnProperty = Object.prototype.hasOwnProperty;
var _toString       = Object.prototype.toString;

function resolveYamlOmap(data) {
  if (data === null) return true;

  var objectKeys = [], index, length, pair, pairKey, pairHasKey,
      object = data;

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];
    pairHasKey = false;

    if (_toString.call(pair) !== '[object Object]') return false;

    for (pairKey in pair) {
      if (_hasOwnProperty.call(pair, pairKey)) {
        if (!pairHasKey) pairHasKey = true;
        else return false;
      }
    }

    if (!pairHasKey) return false;

    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);
    else return false;
  }

  return true;
}

function constructYamlOmap(data) {
  return data !== null ? data : [];
}

module.exports = new Type('tag:yaml.org,2002:omap', {
  kind: 'sequence',
  resolve: resolveYamlOmap,
  construct: constructYamlOmap
});


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

var _toString = Object.prototype.toString;

function resolveYamlPairs(data) {
  if (data === null) return true;

  var index, length, pair, keys, result,
      object = data;

  result = new Array(object.length);

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];

    if (_toString.call(pair) !== '[object Object]') return false;

    keys = Object.keys(pair);

    if (keys.length !== 1) return false;

    result[index] = [ keys[0], pair[keys[0]] ];
  }

  return true;
}

function constructYamlPairs(data) {
  if (data === null) return [];

  var index, length, pair, keys, result,
      object = data;

  result = new Array(object.length);

  for (index = 0, length = object.length; index < length; index += 1) {
    pair = object[index];

    keys = Object.keys(pair);

    result[index] = [ keys[0], pair[keys[0]] ];
  }

  return result;
}

module.exports = new Type('tag:yaml.org,2002:pairs', {
  kind: 'sequence',
  resolve: resolveYamlPairs,
  construct: constructYamlPairs
});


/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

var _hasOwnProperty = Object.prototype.hasOwnProperty;

function resolveYamlSet(data) {
  if (data === null) return true;

  var key, object = data;

  for (key in object) {
    if (_hasOwnProperty.call(object, key)) {
      if (object[key] !== null) return false;
    }
  }

  return true;
}

function constructYamlSet(data) {
  return data !== null ? data : {};
}

module.exports = new Type('tag:yaml.org,2002:set', {
  kind: 'mapping',
  resolve: resolveYamlSet,
  construct: constructYamlSet
});


/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

function resolveJavascriptUndefined() {
  return true;
}

function constructJavascriptUndefined() {
  /*eslint-disable no-undefined*/
  return undefined;
}

function representJavascriptUndefined() {
  return '';
}

function isUndefined(object) {
  return typeof object === 'undefined';
}

module.exports = new Type('tag:yaml.org,2002:js/undefined', {
  kind: 'scalar',
  resolve: resolveJavascriptUndefined,
  construct: constructJavascriptUndefined,
  predicate: isUndefined,
  represent: representJavascriptUndefined
});


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Type = __webpack_require__(7);

function resolveJavascriptRegExp(data) {
  if (data === null) return false;
  if (data.length === 0) return false;

  var regexp = data,
      tail   = /\/([gim]*)$/.exec(data),
      modifiers = '';

  // if regexp starts with '/' it can have modifiers and must be properly closed
  // `/foo/gim` - modifiers tail can be maximum 3 chars
  if (regexp[0] === '/') {
    if (tail) modifiers = tail[1];

    if (modifiers.length > 3) return false;
    // if expression starts with /, is should be properly terminated
    if (regexp[regexp.length - modifiers.length - 1] !== '/') return false;
  }

  return true;
}

function constructJavascriptRegExp(data) {
  var regexp = data,
      tail   = /\/([gim]*)$/.exec(data),
      modifiers = '';

  // `/foo/gim` - tail can be maximum 4 chars
  if (regexp[0] === '/') {
    if (tail) modifiers = tail[1];
    regexp = regexp.slice(1, regexp.length - modifiers.length - 1);
  }

  return new RegExp(regexp, modifiers);
}

function representJavascriptRegExp(object /*, style*/) {
  var result = '/' + object.source + '/';

  if (object.global) result += 'g';
  if (object.multiline) result += 'm';
  if (object.ignoreCase) result += 'i';

  return result;
}

function isRegExp(object) {
  return Object.prototype.toString.call(object) === '[object RegExp]';
}

module.exports = new Type('tag:yaml.org,2002:js/regexp', {
  kind: 'scalar',
  resolve: resolveJavascriptRegExp,
  construct: constructJavascriptRegExp,
  predicate: isRegExp,
  represent: representJavascriptRegExp
});


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
var require;

var esprima;

// Browserified version does not have esprima
//
// 1. For node.js just require module as deps
// 2. For browser try to require mudule via external AMD system.
//    If not found - try to fallback to window.esprima. If not
//    found too - then fail to parse.
//
try {
  // workaround to exclude package from browserify list.
  var _require = require;
  esprima = __webpack_require__(227);
} catch (_) {
  /*global window */
  if (typeof window !== 'undefined') esprima = window.esprima;
}

var Type = __webpack_require__(7);

function resolveJavascriptFunction(data) {
  if (data === null) return false;

  try {
    var source = '(' + data + ')',
        ast    = esprima.parse(source, { range: true });

    if (ast.type                    !== 'Program'             ||
        ast.body.length             !== 1                     ||
        ast.body[0].type            !== 'ExpressionStatement' ||
        (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&
          ast.body[0].expression.type !== 'FunctionExpression')) {
      return false;
    }

    return true;
  } catch (err) {
    return false;
  }
}

function constructJavascriptFunction(data) {
  /*jslint evil:true*/

  var source = '(' + data + ')',
      ast    = esprima.parse(source, { range: true }),
      params = [],
      body;

  if (ast.type                    !== 'Program'             ||
      ast.body.length             !== 1                     ||
      ast.body[0].type            !== 'ExpressionStatement' ||
      (ast.body[0].expression.type !== 'ArrowFunctionExpression' &&
        ast.body[0].expression.type !== 'FunctionExpression')) {
    throw new Error('Failed to resolve function');
  }

  ast.body[0].expression.params.forEach(function (param) {
    params.push(param.name);
  });

  body = ast.body[0].expression.body.range;

  // Esprima's ranges include the first '{' and the last '}' characters on
  // function expressions. So cut them out.
  if (ast.body[0].expression.body.type === 'BlockStatement') {
    /*eslint-disable no-new-func*/
    return new Function(params, source.slice(body[0] + 1, body[1] - 1));
  }
  // ES6 arrow functions can omit the BlockStatement. In that case, just return
  // the body.
  /*eslint-disable no-new-func*/
  return new Function(params, 'return ' + source.slice(body[0], body[1]));
}

function representJavascriptFunction(object /*, style*/) {
  return object.toString();
}

function isFunction(object) {
  return Object.prototype.toString.call(object) === '[object Function]';
}

module.exports = new Type('tag:yaml.org,2002:js/function', {
  kind: 'scalar',
  resolve: resolveJavascriptFunction,
  construct: constructJavascriptFunction,
  predicate: isFunction,
  represent: representJavascriptFunction
});


/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
/* istanbul ignore next */
	if(true)
		module.exports = factory();
	else {}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/* istanbul ignore if */
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	/*
	  Copyright JS Foundation and other contributors, https://js.foundation/

	  Redistribution and use in source and binary forms, with or without
	  modification, are permitted provided that the following conditions are met:

	    * Redistributions of source code must retain the above copyright
	      notice, this list of conditions and the following disclaimer.
	    * Redistributions in binary form must reproduce the above copyright
	      notice, this list of conditions and the following disclaimer in the
	      documentation and/or other materials provided with the distribution.

	  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY
	  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
	  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	*/
	Object.defineProperty(exports, "__esModule", { value: true });
	var comment_handler_1 = __webpack_require__(1);
	var jsx_parser_1 = __webpack_require__(3);
	var parser_1 = __webpack_require__(8);
	var tokenizer_1 = __webpack_require__(15);
	function parse(code, options, delegate) {
	    var commentHandler = null;
	    var proxyDelegate = function (node, metadata) {
	        if (delegate) {
	            delegate(node, metadata);
	        }
	        if (commentHandler) {
	            commentHandler.visit(node, metadata);
	        }
	    };
	    var parserDelegate = (typeof delegate === 'function') ? proxyDelegate : null;
	    var collectComment = false;
	    if (options) {
	        collectComment = (typeof options.comment === 'boolean' && options.comment);
	        var attachComment = (typeof options.attachComment === 'boolean' && options.attachComment);
	        if (collectComment || attachComment) {
	            commentHandler = new comment_handler_1.CommentHandler();
	            commentHandler.attach = attachComment;
	            options.comment = true;
	            parserDelegate = proxyDelegate;
	        }
	    }
	    var isModule = false;
	    if (options && typeof options.sourceType === 'string') {
	        isModule = (options.sourceType === 'module');
	    }
	    var parser;
	    if (options && typeof options.jsx === 'boolean' && options.jsx) {
	        parser = new jsx_parser_1.JSXParser(code, options, parserDelegate);
	    }
	    else {
	        parser = new parser_1.Parser(code, options, parserDelegate);
	    }
	    var program = isModule ? parser.parseModule() : parser.parseScript();
	    var ast = program;
	    if (collectComment && commentHandler) {
	        ast.comments = commentHandler.comments;
	    }
	    if (parser.config.tokens) {
	        ast.tokens = parser.tokens;
	    }
	    if (parser.config.tolerant) {
	        ast.errors = parser.errorHandler.errors;
	    }
	    return ast;
	}
	exports.parse = parse;
	function parseModule(code, options, delegate) {
	    var parsingOptions = options || {};
	    parsingOptions.sourceType = 'module';
	    return parse(code, parsingOptions, delegate);
	}
	exports.parseModule = parseModule;
	function parseScript(code, options, delegate) {
	    var parsingOptions = options || {};
	    parsingOptions.sourceType = 'script';
	    return parse(code, parsingOptions, delegate);
	}
	exports.parseScript = parseScript;
	function tokenize(code, options, delegate) {
	    var tokenizer = new tokenizer_1.Tokenizer(code, options);
	    var tokens;
	    tokens = [];
	    try {
	        while (true) {
	            var token = tokenizer.getNextToken();
	            if (!token) {
	                break;
	            }
	            if (delegate) {
	                token = delegate(token);
	            }
	            tokens.push(token);
	        }
	    }
	    catch (e) {
	        tokenizer.errorHandler.tolerate(e);
	    }
	    if (tokenizer.errorHandler.tolerant) {
	        tokens.errors = tokenizer.errors();
	    }
	    return tokens;
	}
	exports.tokenize = tokenize;
	var syntax_1 = __webpack_require__(2);
	exports.Syntax = syntax_1.Syntax;
	// Sync with *.json manifests.
	exports.version = '4.0.1';


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var syntax_1 = __webpack_require__(2);
	var CommentHandler = (function () {
	    function CommentHandler() {
	        this.attach = false;
	        this.comments = [];
	        this.stack = [];
	        this.leading = [];
	        this.trailing = [];
	    }
	    CommentHandler.prototype.insertInnerComments = function (node, metadata) {
	        //  innnerComments for properties empty block
	        //  `function a() {/** comments **\/}`
	        if (node.type === syntax_1.Syntax.BlockStatement && node.body.length === 0) {
	            var innerComments = [];
	            for (var i = this.leading.length - 1; i >= 0; --i) {
	                var entry = this.leading[i];
	                if (metadata.end.offset >= entry.start) {
	                    innerComments.unshift(entry.comment);
	                    this.leading.splice(i, 1);
	                    this.trailing.splice(i, 1);
	                }
	            }
	            if (innerComments.length) {
	                node.innerComments = innerComments;
	            }
	        }
	    };
	    CommentHandler.prototype.findTrailingComments = function (metadata) {
	        var trailingComments = [];
	        if (this.trailing.length > 0) {
	            for (var i = this.trailing.length - 1; i >= 0; --i) {
	                var entry_1 = this.trailing[i];
	                if (entry_1.start >= metadata.end.offset) {
	                    trailingComments.unshift(entry_1.comment);
	                }
	            }
	            this.trailing.length = 0;
	            return trailingComments;
	        }
	        var entry = this.stack[this.stack.length - 1];
	        if (entry && entry.node.trailingComments) {
	            var firstComment = entry.node.trailingComments[0];
	            if (firstComment && firstComment.range[0] >= metadata.end.offset) {
	                trailingComments = entry.node.trailingComments;
	                delete entry.node.trailingComments;
	            }
	        }
	        return trailingComments;
	    };
	    CommentHandler.prototype.findLeadingComments = function (metadata) {
	        var leadingComments = [];
	        var target;
	        while (this.stack.length > 0) {
	            var entry = this.stack[this.stack.length - 1];
	            if (entry && entry.start >= metadata.start.offset) {
	                target = entry.node;
	                this.stack.pop();
	            }
	            else {
	                break;
	            }
	        }
	        if (target) {
	            var count = target.leadingComments ? target.leadingComments.length : 0;
	            for (var i = count - 1; i >= 0; --i) {
	                var comment = target.leadingComments[i];
	                if (comment.range[1] <= metadata.start.offset) {
	                    leadingComments.unshift(comment);
	                    target.leadingComments.splice(i, 1);
	                }
	            }
	            if (target.leadingComments && target.leadingComments.length === 0) {
	                delete target.leadingComments;
	            }
	            return leadingComments;
	        }
	        for (var i = this.leading.length - 1; i >= 0; --i) {
	            var entry = this.leading[i];
	            if (entry.start <= metadata.start.offset) {
	                leadingComments.unshift(entry.comment);
	                this.leading.splice(i, 1);
	            }
	        }
	        return leadingComments;
	    };
	    CommentHandler.prototype.visitNode = function (node, metadata) {
	        if (node.type === syntax_1.Syntax.Program && node.body.length > 0) {
	            return;
	        }
	        this.insertInnerComments(node, metadata);
	        var trailingComments = this.findTrailingComments(metadata);
	        var leadingComments = this.findLeadingComments(metadata);
	        if (leadingComments.length > 0) {
	            node.leadingComments = leadingComments;
	        }
	        if (trailingComments.length > 0) {
	            node.trailingComments = trailingComments;
	        }
	        this.stack.push({
	            node: node,
	            start: metadata.start.offset
	        });
	    };
	    CommentHandler.prototype.visitComment = function (node, metadata) {
	        var type = (node.type[0] === 'L') ? 'Line' : 'Block';
	        var comment = {
	            type: type,
	            value: node.value
	        };
	        if (node.range) {
	            comment.range = node.range;
	        }
	        if (node.loc) {
	            comment.loc = node.loc;
	        }
	        this.comments.push(comment);
	        if (this.attach) {
	            var entry = {
	                comment: {
	                    type: type,
	                    value: node.value,
	                    range: [metadata.start.offset, metadata.end.offset]
	                },
	                start: metadata.start.offset
	            };
	            if (node.loc) {
	                entry.comment.loc = node.loc;
	            }
	            node.type = type;
	            this.leading.push(entry);
	            this.trailing.push(entry);
	        }
	    };
	    CommentHandler.prototype.visit = function (node, metadata) {
	        if (node.type === 'LineComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (node.type === 'BlockComment') {
	            this.visitComment(node, metadata);
	        }
	        else if (this.attach) {
	            this.visitNode(node, metadata);
	        }
	    };
	    return CommentHandler;
	}());
	exports.CommentHandler = CommentHandler;


/***/ },
/* 2 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.Syntax = {
	    AssignmentExpression: 'AssignmentExpression',
	    AssignmentPattern: 'AssignmentPattern',
	    ArrayExpression: 'ArrayExpression',
	    ArrayPattern: 'ArrayPattern',
	    ArrowFunctionExpression: 'ArrowFunctionExpression',
	    AwaitExpression: 'AwaitExpression',
	    BlockStatement: 'BlockStatement',
	    BinaryExpression: 'BinaryExpression',
	    BreakStatement: 'BreakStatement',
	    CallExpression: 'CallExpression',
	    CatchClause: 'CatchClause',
	    ClassBody: 'ClassBody',
	    ClassDeclaration: 'ClassDeclaration',
	    ClassExpression: 'ClassExpression',
	    ConditionalExpression: 'ConditionalExpression',
	    ContinueStatement: 'ContinueStatement',
	    DoWhileStatement: 'DoWhileStatement',
	    DebuggerStatement: 'DebuggerStatement',
	    EmptyStatement: 'EmptyStatement',
	    ExportAllDeclaration: 'ExportAllDeclaration',
	    ExportDefaultDeclaration: 'ExportDefaultDeclaration',
	    ExportNamedDeclaration: 'ExportNamedDeclaration',
	    ExportSpecifier: 'ExportSpecifier',
	    ExpressionStatement: 'ExpressionStatement',
	    ForStatement: 'ForStatement',
	    ForOfStatement: 'ForOfStatement',
	    ForInStatement: 'ForInStatement',
	    FunctionDeclaration: 'FunctionDeclaration',
	    FunctionExpression: 'FunctionExpression',
	    Identifier: 'Identifier',
	    IfStatement: 'IfStatement',
	    ImportDeclaration: 'ImportDeclaration',
	    ImportDefaultSpecifier: 'ImportDefaultSpecifier',
	    ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',
	    ImportSpecifier: 'ImportSpecifier',
	    Literal: 'Literal',
	    LabeledStatement: 'LabeledStatement',
	    LogicalExpression: 'LogicalExpression',
	    MemberExpression: 'MemberExpression',
	    MetaProperty: 'MetaProperty',
	    MethodDefinition: 'MethodDefinition',
	    NewExpression: 'NewExpression',
	    ObjectExpression: 'ObjectExpression',
	    ObjectPattern: 'ObjectPattern',
	    Program: 'Program',
	    Property: 'Property',
	    RestElement: 'RestElement',
	    ReturnStatement: 'ReturnStatement',
	    SequenceExpression: 'SequenceExpression',
	    SpreadElement: 'SpreadElement',
	    Super: 'Super',
	    SwitchCase: 'SwitchCase',
	    SwitchStatement: 'SwitchStatement',
	    TaggedTemplateExpression: 'TaggedTemplateExpression',
	    TemplateElement: 'TemplateElement',
	    TemplateLiteral: 'TemplateLiteral',
	    ThisExpression: 'ThisExpression',
	    ThrowStatement: 'ThrowStatement',
	    TryStatement: 'TryStatement',
	    UnaryExpression: 'UnaryExpression',
	    UpdateExpression: 'UpdateExpression',
	    VariableDeclaration: 'VariableDeclaration',
	    VariableDeclarator: 'VariableDeclarator',
	    WhileStatement: 'WhileStatement',
	    WithStatement: 'WithStatement',
	    YieldExpression: 'YieldExpression'
	};


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
/* istanbul ignore next */
	var __extends = (this && this.__extends) || (function () {
	    var extendStatics = Object.setPrototypeOf ||
	        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
	        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
	    return function (d, b) {
	        extendStatics(d, b);
	        function __() { this.constructor = d; }
	        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
	    };
	})();
	Object.defineProperty(exports, "__esModule", { value: true });
	var character_1 = __webpack_require__(4);
	var JSXNode = __webpack_require__(5);
	var jsx_syntax_1 = __webpack_require__(6);
	var Node = __webpack_require__(7);
	var parser_1 = __webpack_require__(8);
	var token_1 = __webpack_require__(13);
	var xhtml_entities_1 = __webpack_require__(14);
	token_1.TokenName[100 /* Identifier */] = 'JSXIdentifier';
	token_1.TokenName[101 /* Text */] = 'JSXText';
	// Fully qualified element name, e.g. <svg:path> returns "svg:path"
	function getQualifiedElementName(elementName) {
	    var qualifiedName;
	    switch (elementName.type) {
	        case jsx_syntax_1.JSXSyntax.JSXIdentifier:
	            var id = elementName;
	            qualifiedName = id.name;
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXNamespacedName:
	            var ns = elementName;
	            qualifiedName = getQualifiedElementName(ns.namespace) + ':' +
	                getQualifiedElementName(ns.name);
	            break;
	        case jsx_syntax_1.JSXSyntax.JSXMemberExpression:
	            var expr = elementName;
	            qualifiedName = getQualifiedElementName(expr.object) + '.' +
	                getQualifiedElementName(expr.property);
	            break;
	        /* istanbul ignore next */
	        default:
	            break;
	    }
	    return qualifiedName;
	}
	var JSXParser = (function (_super) {
	    __extends(JSXParser, _super);
	    function JSXParser(code, options, delegate) {
	        return _super.call(this, code, options, delegate) || this;
	    }
	    JSXParser.prototype.parsePrimaryExpression = function () {
	        return this.match('<') ? this.parseJSXRoot() : _super.prototype.parsePrimaryExpression.call(this);
	    };
	    JSXParser.prototype.startJSX = function () {
	        // Unwind the scanner before the lookahead token.
	        this.scanner.index = this.startMarker.index;
	        this.scanner.lineNumber = this.startMarker.line;
	        this.scanner.lineStart = this.startMarker.index - this.startMarker.column;
	    };
	    JSXParser.prototype.finishJSX = function () {
	        // Prime the next lookahead.
	        this.nextToken();
	    };
	    JSXParser.prototype.reenterJSX = function () {
	        this.startJSX();
	        this.expectJSX('}');
	        // Pop the closing '}' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	    };
	    JSXParser.prototype.createJSXNode = function () {
	        this.collectComments();
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.createJSXChildNode = function () {
	        return {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    };
	    JSXParser.prototype.scanXHTMLEntity = function (quote) {
	        var result = '&';
	        var valid = true;
	        var terminated = false;
	        var numeric = false;
	        var hex = false;
	        while (!this.scanner.eof() && valid && !terminated) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === quote) {
	                break;
	            }
	            terminated = (ch === ';');
	            result += ch;
	            ++this.scanner.index;
	            if (!terminated) {
	                switch (result.length) {
	                    case 2:
	                        // e.g. '&#123;'
	                        numeric = (ch === '#');
	                        break;
	                    case 3:
	                        if (numeric) {
	                            // e.g. '&#x41;'
	                            hex = (ch === 'x');
	                            valid = hex || character_1.Character.isDecimalDigit(ch.charCodeAt(0));
	                            numeric = numeric && !hex;
	                        }
	                        break;
	                    default:
	                        valid = valid && !(numeric && !character_1.Character.isDecimalDigit(ch.charCodeAt(0)));
	                        valid = valid && !(hex && !character_1.Character.isHexDigit(ch.charCodeAt(0)));
	                        break;
	                }
	            }
	        }
	        if (valid && terminated && result.length > 2) {
	            // e.g. '&#x41;' becomes just '#x41'
	            var str = result.substr(1, result.length - 2);
	            if (numeric && str.length > 1) {
	                result = String.fromCharCode(parseInt(str.substr(1), 10));
	            }
	            else if (hex && str.length > 2) {
	                result = String.fromCharCode(parseInt('0' + str.substr(1), 16));
	            }
	            else if (!numeric && !hex && xhtml_entities_1.XHTMLEntities[str]) {
	                result = xhtml_entities_1.XHTMLEntities[str];
	            }
	        }
	        return result;
	    };
	    // Scan the next JSX token. This replaces Scanner#lex when in JSX mode.
	    JSXParser.prototype.lexJSX = function () {
	        var cp = this.scanner.source.charCodeAt(this.scanner.index);
	        // < > / : = { }
	        if (cp === 60 || cp === 62 || cp === 47 || cp === 58 || cp === 61 || cp === 123 || cp === 125) {
	            var value = this.scanner.source[this.scanner.index++];
	            return {
	                type: 7 /* Punctuator */,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index - 1,
	                end: this.scanner.index
	            };
	        }
	        // " '
	        if (cp === 34 || cp === 39) {
	            var start = this.scanner.index;
	            var quote = this.scanner.source[this.scanner.index++];
	            var str = '';
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source[this.scanner.index++];
	                if (ch === quote) {
	                    break;
	                }
	                else if (ch === '&') {
	                    str += this.scanXHTMLEntity(quote);
	                }
	                else {
	                    str += ch;
	                }
	            }
	            return {
	                type: 8 /* StringLiteral */,
	                value: str,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // ... or .
	        if (cp === 46) {
	            var n1 = this.scanner.source.charCodeAt(this.scanner.index + 1);
	            var n2 = this.scanner.source.charCodeAt(this.scanner.index + 2);
	            var value = (n1 === 46 && n2 === 46) ? '...' : '.';
	            var start = this.scanner.index;
	            this.scanner.index += value.length;
	            return {
	                type: 7 /* Punctuator */,
	                value: value,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        // `
	        if (cp === 96) {
	            // Only placeholder, since it will be rescanned as a real assignment expression.
	            return {
	                type: 10 /* Template */,
	                value: '',
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: this.scanner.index,
	                end: this.scanner.index
	            };
	        }
	        // Identifer can not contain backslash (char code 92).
	        if (character_1.Character.isIdentifierStart(cp) && (cp !== 92)) {
	            var start = this.scanner.index;
	            ++this.scanner.index;
	            while (!this.scanner.eof()) {
	                var ch = this.scanner.source.charCodeAt(this.scanner.index);
	                if (character_1.Character.isIdentifierPart(ch) && (ch !== 92)) {
	                    ++this.scanner.index;
	                }
	                else if (ch === 45) {
	                    // Hyphen (char code 45) can be part of an identifier.
	                    ++this.scanner.index;
	                }
	                else {
	                    break;
	                }
	            }
	            var id = this.scanner.source.slice(start, this.scanner.index);
	            return {
	                type: 100 /* Identifier */,
	                value: id,
	                lineNumber: this.scanner.lineNumber,
	                lineStart: this.scanner.lineStart,
	                start: start,
	                end: this.scanner.index
	            };
	        }
	        return this.scanner.lex();
	    };
	    JSXParser.prototype.nextJSXToken = function () {
	        this.collectComments();
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.line = this.scanner.lineNumber;
	        this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        var token = this.lexJSX();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        if (this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.nextJSXText = function () {
	        this.startMarker.index = this.scanner.index;
	        this.startMarker.line = this.scanner.lineNumber;
	        this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        var start = this.scanner.index;
	        var text = '';
	        while (!this.scanner.eof()) {
	            var ch = this.scanner.source[this.scanner.index];
	            if (ch === '{' || ch === '<') {
	                break;
	            }
	            ++this.scanner.index;
	            text += ch;
	            if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.scanner.lineNumber;
	                if (ch === '\r' && this.scanner.source[this.scanner.index] === '\n') {
	                    ++this.scanner.index;
	                }
	                this.scanner.lineStart = this.scanner.index;
	            }
	        }
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        var token = {
	            type: 101 /* Text */,
	            value: text,
	            lineNumber: this.scanner.lineNumber,
	            lineStart: this.scanner.lineStart,
	            start: start,
	            end: this.scanner.index
	        };
	        if ((text.length > 0) && this.config.tokens) {
	            this.tokens.push(this.convertToken(token));
	        }
	        return token;
	    };
	    JSXParser.prototype.peekJSXToken = function () {
	        var state = this.scanner.saveState();
	        this.scanner.scanComments();
	        var next = this.lexJSX();
	        this.scanner.restoreState(state);
	        return next;
	    };
	    // Expect the next JSX token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    JSXParser.prototype.expectJSX = function (value) {
	        var token = this.nextJSXToken();
	        if (token.type !== 7 /* Punctuator */ || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next JSX token matches the specified punctuator.
	    JSXParser.prototype.matchJSX = function (value) {
	        var next = this.peekJSXToken();
	        return next.type === 7 /* Punctuator */ && next.value === value;
	    };
	    JSXParser.prototype.parseJSXIdentifier = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== 100 /* Identifier */) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new JSXNode.JSXIdentifier(token.value));
	    };
	    JSXParser.prototype.parseJSXElementName = function () {
	        var node = this.createJSXNode();
	        var elementName = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = elementName;
	            this.expectJSX(':');
	            var name_1 = this.parseJSXIdentifier();
	            elementName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_1));
	        }
	        else if (this.matchJSX('.')) {
	            while (this.matchJSX('.')) {
	                var object = elementName;
	                this.expectJSX('.');
	                var property = this.parseJSXIdentifier();
	                elementName = this.finalize(node, new JSXNode.JSXMemberExpression(object, property));
	            }
	        }
	        return elementName;
	    };
	    JSXParser.prototype.parseJSXAttributeName = function () {
	        var node = this.createJSXNode();
	        var attributeName;
	        var identifier = this.parseJSXIdentifier();
	        if (this.matchJSX(':')) {
	            var namespace = identifier;
	            this.expectJSX(':');
	            var name_2 = this.parseJSXIdentifier();
	            attributeName = this.finalize(node, new JSXNode.JSXNamespacedName(namespace, name_2));
	        }
	        else {
	            attributeName = identifier;
	        }
	        return attributeName;
	    };
	    JSXParser.prototype.parseJSXStringLiteralAttribute = function () {
	        var node = this.createJSXNode();
	        var token = this.nextJSXToken();
	        if (token.type !== 8 /* StringLiteral */) {
	            this.throwUnexpectedToken(token);
	        }
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    JSXParser.prototype.parseJSXExpressionAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.finishJSX();
	        if (this.match('}')) {
	            this.tolerateError('JSX attributes must only be assigned a non-empty expression');
	        }
	        var expression = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXAttributeValue = function () {
	        return this.matchJSX('{') ? this.parseJSXExpressionAttribute() :
	            this.matchJSX('<') ? this.parseJSXElement() : this.parseJSXStringLiteralAttribute();
	    };
	    JSXParser.prototype.parseJSXNameValueAttribute = function () {
	        var node = this.createJSXNode();
	        var name = this.parseJSXAttributeName();
	        var value = null;
	        if (this.matchJSX('=')) {
	            this.expectJSX('=');
	            value = this.parseJSXAttributeValue();
	        }
	        return this.finalize(node, new JSXNode.JSXAttribute(name, value));
	    };
	    JSXParser.prototype.parseJSXSpreadAttribute = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        this.expectJSX('...');
	        this.finishJSX();
	        var argument = this.parseAssignmentExpression();
	        this.reenterJSX();
	        return this.finalize(node, new JSXNode.JSXSpreadAttribute(argument));
	    };
	    JSXParser.prototype.parseJSXAttributes = function () {
	        var attributes = [];
	        while (!this.matchJSX('/') && !this.matchJSX('>')) {
	            var attribute = this.matchJSX('{') ? this.parseJSXSpreadAttribute() :
	                this.parseJSXNameValueAttribute();
	            attributes.push(attribute);
	        }
	        return attributes;
	    };
	    JSXParser.prototype.parseJSXOpeningElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXBoundaryElement = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('<');
	        if (this.matchJSX('/')) {
	            this.expectJSX('/');
	            var name_3 = this.parseJSXElementName();
	            this.expectJSX('>');
	            return this.finalize(node, new JSXNode.JSXClosingElement(name_3));
	        }
	        var name = this.parseJSXElementName();
	        var attributes = this.parseJSXAttributes();
	        var selfClosing = this.matchJSX('/');
	        if (selfClosing) {
	            this.expectJSX('/');
	        }
	        this.expectJSX('>');
	        return this.finalize(node, new JSXNode.JSXOpeningElement(name, selfClosing, attributes));
	    };
	    JSXParser.prototype.parseJSXEmptyExpression = function () {
	        var node = this.createJSXChildNode();
	        this.collectComments();
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        return this.finalize(node, new JSXNode.JSXEmptyExpression());
	    };
	    JSXParser.prototype.parseJSXExpressionContainer = function () {
	        var node = this.createJSXNode();
	        this.expectJSX('{');
	        var expression;
	        if (this.matchJSX('}')) {
	            expression = this.parseJSXEmptyExpression();
	            this.expectJSX('}');
	        }
	        else {
	            this.finishJSX();
	            expression = this.parseAssignmentExpression();
	            this.reenterJSX();
	        }
	        return this.finalize(node, new JSXNode.JSXExpressionContainer(expression));
	    };
	    JSXParser.prototype.parseJSXChildren = function () {
	        var children = [];
	        while (!this.scanner.eof()) {
	            var node = this.createJSXChildNode();
	            var token = this.nextJSXText();
	            if (token.start < token.end) {
	                var raw = this.getTokenRaw(token);
	                var child = this.finalize(node, new JSXNode.JSXText(token.value, raw));
	                children.push(child);
	            }
	            if (this.scanner.source[this.scanner.index] === '{') {
	                var container = this.parseJSXExpressionContainer();
	                children.push(container);
	            }
	            else {
	                break;
	            }
	        }
	        return children;
	    };
	    JSXParser.prototype.parseComplexJSXElement = function (el) {
	        var stack = [];
	        while (!this.scanner.eof()) {
	            el.children = el.children.concat(this.parseJSXChildren());
	            var node = this.createJSXChildNode();
	            var element = this.parseJSXBoundaryElement();
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXOpeningElement) {
	                var opening = element;
	                if (opening.selfClosing) {
	                    var child = this.finalize(node, new JSXNode.JSXElement(opening, [], null));
	                    el.children.push(child);
	                }
	                else {
	                    stack.push(el);
	                    el = { node: node, opening: opening, closing: null, children: [] };
	                }
	            }
	            if (element.type === jsx_syntax_1.JSXSyntax.JSXClosingElement) {
	                el.closing = element;
	                var open_1 = getQualifiedElementName(el.opening.name);
	                var close_1 = getQualifiedElementName(el.closing.name);
	                if (open_1 !== close_1) {
	                    this.tolerateError('Expected corresponding JSX closing tag for %0', open_1);
	                }
	                if (stack.length > 0) {
	                    var child = this.finalize(el.node, new JSXNode.JSXElement(el.opening, el.children, el.closing));
	                    el = stack[stack.length - 1];
	                    el.children.push(child);
	                    stack.pop();
	                }
	                else {
	                    break;
	                }
	            }
	        }
	        return el;
	    };
	    JSXParser.prototype.parseJSXElement = function () {
	        var node = this.createJSXNode();
	        var opening = this.parseJSXOpeningElement();
	        var children = [];
	        var closing = null;
	        if (!opening.selfClosing) {
	            var el = this.parseComplexJSXElement({ node: node, opening: opening, closing: closing, children: children });
	            children = el.children;
	            closing = el.closing;
	        }
	        return this.finalize(node, new JSXNode.JSXElement(opening, children, closing));
	    };
	    JSXParser.prototype.parseJSXRoot = function () {
	        // Pop the opening '<' added from the lookahead.
	        if (this.config.tokens) {
	            this.tokens.pop();
	        }
	        this.startJSX();
	        var element = this.parseJSXElement();
	        this.finishJSX();
	        return element;
	    };
	    JSXParser.prototype.isStartOfExpression = function () {
	        return _super.prototype.isStartOfExpression.call(this) || this.match('<');
	    };
	    return JSXParser;
	}(parser_1.Parser));
	exports.JSXParser = JSXParser;


/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// See also tools/generate-unicode-regex.js.
	var Regex = {
	    // Unicode v8.0.0 NonAsciiIdentifierStart:
	    NonAsciiIdentifierStart: /[\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
	    // Unicode v8.0.0 NonAsciiIdentifierPart:
	    NonAsciiIdentifierPart: /[\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u200C\u200D\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/
	};
	exports.Character = {
	    /* tslint:disable:no-bitwise */
	    fromCodePoint: function (cp) {
	        return (cp < 0x10000) ? String.fromCharCode(cp) :
	            String.fromCharCode(0xD800 + ((cp - 0x10000) >> 10)) +
	                String.fromCharCode(0xDC00 + ((cp - 0x10000) & 1023));
	    },
	    // https://tc39.github.io/ecma262/#sec-white-space
	    isWhiteSpace: function (cp) {
	        return (cp === 0x20) || (cp === 0x09) || (cp === 0x0B) || (cp === 0x0C) || (cp === 0xA0) ||
	            (cp >= 0x1680 && [0x1680, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006, 0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF].indexOf(cp) >= 0);
	    },
	    // https://tc39.github.io/ecma262/#sec-line-terminators
	    isLineTerminator: function (cp) {
	        return (cp === 0x0A) || (cp === 0x0D) || (cp === 0x2028) || (cp === 0x2029);
	    },
	    // https://tc39.github.io/ecma262/#sec-names-and-keywords
	    isIdentifierStart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierStart.test(exports.Character.fromCodePoint(cp)));
	    },
	    isIdentifierPart: function (cp) {
	        return (cp === 0x24) || (cp === 0x5F) ||
	            (cp >= 0x41 && cp <= 0x5A) ||
	            (cp >= 0x61 && cp <= 0x7A) ||
	            (cp >= 0x30 && cp <= 0x39) ||
	            (cp === 0x5C) ||
	            ((cp >= 0x80) && Regex.NonAsciiIdentifierPart.test(exports.Character.fromCodePoint(cp)));
	    },
	    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals
	    isDecimalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39); // 0..9
	    },
	    isHexDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x39) ||
	            (cp >= 0x41 && cp <= 0x46) ||
	            (cp >= 0x61 && cp <= 0x66); // a..f
	    },
	    isOctalDigit: function (cp) {
	        return (cp >= 0x30 && cp <= 0x37); // 0..7
	    }
	};


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var jsx_syntax_1 = __webpack_require__(6);
	/* tslint:disable:max-classes-per-file */
	var JSXClosingElement = (function () {
	    function JSXClosingElement(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXClosingElement;
	        this.name = name;
	    }
	    return JSXClosingElement;
	}());
	exports.JSXClosingElement = JSXClosingElement;
	var JSXElement = (function () {
	    function JSXElement(openingElement, children, closingElement) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXElement;
	        this.openingElement = openingElement;
	        this.children = children;
	        this.closingElement = closingElement;
	    }
	    return JSXElement;
	}());
	exports.JSXElement = JSXElement;
	var JSXEmptyExpression = (function () {
	    function JSXEmptyExpression() {
	        this.type = jsx_syntax_1.JSXSyntax.JSXEmptyExpression;
	    }
	    return JSXEmptyExpression;
	}());
	exports.JSXEmptyExpression = JSXEmptyExpression;
	var JSXExpressionContainer = (function () {
	    function JSXExpressionContainer(expression) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXExpressionContainer;
	        this.expression = expression;
	    }
	    return JSXExpressionContainer;
	}());
	exports.JSXExpressionContainer = JSXExpressionContainer;
	var JSXIdentifier = (function () {
	    function JSXIdentifier(name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXIdentifier;
	        this.name = name;
	    }
	    return JSXIdentifier;
	}());
	exports.JSXIdentifier = JSXIdentifier;
	var JSXMemberExpression = (function () {
	    function JSXMemberExpression(object, property) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXMemberExpression;
	        this.object = object;
	        this.property = property;
	    }
	    return JSXMemberExpression;
	}());
	exports.JSXMemberExpression = JSXMemberExpression;
	var JSXAttribute = (function () {
	    function JSXAttribute(name, value) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXAttribute;
	        this.name = name;
	        this.value = value;
	    }
	    return JSXAttribute;
	}());
	exports.JSXAttribute = JSXAttribute;
	var JSXNamespacedName = (function () {
	    function JSXNamespacedName(namespace, name) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXNamespacedName;
	        this.namespace = namespace;
	        this.name = name;
	    }
	    return JSXNamespacedName;
	}());
	exports.JSXNamespacedName = JSXNamespacedName;
	var JSXOpeningElement = (function () {
	    function JSXOpeningElement(name, selfClosing, attributes) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXOpeningElement;
	        this.name = name;
	        this.selfClosing = selfClosing;
	        this.attributes = attributes;
	    }
	    return JSXOpeningElement;
	}());
	exports.JSXOpeningElement = JSXOpeningElement;
	var JSXSpreadAttribute = (function () {
	    function JSXSpreadAttribute(argument) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXSpreadAttribute;
	        this.argument = argument;
	    }
	    return JSXSpreadAttribute;
	}());
	exports.JSXSpreadAttribute = JSXSpreadAttribute;
	var JSXText = (function () {
	    function JSXText(value, raw) {
	        this.type = jsx_syntax_1.JSXSyntax.JSXText;
	        this.value = value;
	        this.raw = raw;
	    }
	    return JSXText;
	}());
	exports.JSXText = JSXText;


/***/ },
/* 6 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.JSXSyntax = {
	    JSXAttribute: 'JSXAttribute',
	    JSXClosingElement: 'JSXClosingElement',
	    JSXElement: 'JSXElement',
	    JSXEmptyExpression: 'JSXEmptyExpression',
	    JSXExpressionContainer: 'JSXExpressionContainer',
	    JSXIdentifier: 'JSXIdentifier',
	    JSXMemberExpression: 'JSXMemberExpression',
	    JSXNamespacedName: 'JSXNamespacedName',
	    JSXOpeningElement: 'JSXOpeningElement',
	    JSXSpreadAttribute: 'JSXSpreadAttribute',
	    JSXText: 'JSXText'
	};


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var syntax_1 = __webpack_require__(2);
	/* tslint:disable:max-classes-per-file */
	var ArrayExpression = (function () {
	    function ArrayExpression(elements) {
	        this.type = syntax_1.Syntax.ArrayExpression;
	        this.elements = elements;
	    }
	    return ArrayExpression;
	}());
	exports.ArrayExpression = ArrayExpression;
	var ArrayPattern = (function () {
	    function ArrayPattern(elements) {
	        this.type = syntax_1.Syntax.ArrayPattern;
	        this.elements = elements;
	    }
	    return ArrayPattern;
	}());
	exports.ArrayPattern = ArrayPattern;
	var ArrowFunctionExpression = (function () {
	    function ArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	        this.async = false;
	    }
	    return ArrowFunctionExpression;
	}());
	exports.ArrowFunctionExpression = ArrowFunctionExpression;
	var AssignmentExpression = (function () {
	    function AssignmentExpression(operator, left, right) {
	        this.type = syntax_1.Syntax.AssignmentExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentExpression;
	}());
	exports.AssignmentExpression = AssignmentExpression;
	var AssignmentPattern = (function () {
	    function AssignmentPattern(left, right) {
	        this.type = syntax_1.Syntax.AssignmentPattern;
	        this.left = left;
	        this.right = right;
	    }
	    return AssignmentPattern;
	}());
	exports.AssignmentPattern = AssignmentPattern;
	var AsyncArrowFunctionExpression = (function () {
	    function AsyncArrowFunctionExpression(params, body, expression) {
	        this.type = syntax_1.Syntax.ArrowFunctionExpression;
	        this.id = null;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = expression;
	        this.async = true;
	    }
	    return AsyncArrowFunctionExpression;
	}());
	exports.AsyncArrowFunctionExpression = AsyncArrowFunctionExpression;
	var AsyncFunctionDeclaration = (function () {
	    function AsyncFunctionDeclaration(id, params, body) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = false;
	        this.async = true;
	    }
	    return AsyncFunctionDeclaration;
	}());
	exports.AsyncFunctionDeclaration = AsyncFunctionDeclaration;
	var AsyncFunctionExpression = (function () {
	    function AsyncFunctionExpression(id, params, body) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = false;
	        this.expression = false;
	        this.async = true;
	    }
	    return AsyncFunctionExpression;
	}());
	exports.AsyncFunctionExpression = AsyncFunctionExpression;
	var AwaitExpression = (function () {
	    function AwaitExpression(argument) {
	        this.type = syntax_1.Syntax.AwaitExpression;
	        this.argument = argument;
	    }
	    return AwaitExpression;
	}());
	exports.AwaitExpression = AwaitExpression;
	var BinaryExpression = (function () {
	    function BinaryExpression(operator, left, right) {
	        var logical = (operator === '||' || operator === '&&');
	        this.type = logical ? syntax_1.Syntax.LogicalExpression : syntax_1.Syntax.BinaryExpression;
	        this.operator = operator;
	        this.left = left;
	        this.right = right;
	    }
	    return BinaryExpression;
	}());
	exports.BinaryExpression = BinaryExpression;
	var BlockStatement = (function () {
	    function BlockStatement(body) {
	        this.type = syntax_1.Syntax.BlockStatement;
	        this.body = body;
	    }
	    return BlockStatement;
	}());
	exports.BlockStatement = BlockStatement;
	var BreakStatement = (function () {
	    function BreakStatement(label) {
	        this.type = syntax_1.Syntax.BreakStatement;
	        this.label = label;
	    }
	    return BreakStatement;
	}());
	exports.BreakStatement = BreakStatement;
	var CallExpression = (function () {
	    function CallExpression(callee, args) {
	        this.type = syntax_1.Syntax.CallExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return CallExpression;
	}());
	exports.CallExpression = CallExpression;
	var CatchClause = (function () {
	    function CatchClause(param, body) {
	        this.type = syntax_1.Syntax.CatchClause;
	        this.param = param;
	        this.body = body;
	    }
	    return CatchClause;
	}());
	exports.CatchClause = CatchClause;
	var ClassBody = (function () {
	    function ClassBody(body) {
	        this.type = syntax_1.Syntax.ClassBody;
	        this.body = body;
	    }
	    return ClassBody;
	}());
	exports.ClassBody = ClassBody;
	var ClassDeclaration = (function () {
	    function ClassDeclaration(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassDeclaration;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassDeclaration;
	}());
	exports.ClassDeclaration = ClassDeclaration;
	var ClassExpression = (function () {
	    function ClassExpression(id, superClass, body) {
	        this.type = syntax_1.Syntax.ClassExpression;
	        this.id = id;
	        this.superClass = superClass;
	        this.body = body;
	    }
	    return ClassExpression;
	}());
	exports.ClassExpression = ClassExpression;
	var ComputedMemberExpression = (function () {
	    function ComputedMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = true;
	        this.object = object;
	        this.property = property;
	    }
	    return ComputedMemberExpression;
	}());
	exports.ComputedMemberExpression = ComputedMemberExpression;
	var ConditionalExpression = (function () {
	    function ConditionalExpression(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.ConditionalExpression;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return ConditionalExpression;
	}());
	exports.ConditionalExpression = ConditionalExpression;
	var ContinueStatement = (function () {
	    function ContinueStatement(label) {
	        this.type = syntax_1.Syntax.ContinueStatement;
	        this.label = label;
	    }
	    return ContinueStatement;
	}());
	exports.ContinueStatement = ContinueStatement;
	var DebuggerStatement = (function () {
	    function DebuggerStatement() {
	        this.type = syntax_1.Syntax.DebuggerStatement;
	    }
	    return DebuggerStatement;
	}());
	exports.DebuggerStatement = DebuggerStatement;
	var Directive = (function () {
	    function Directive(expression, directive) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	        this.directive = directive;
	    }
	    return Directive;
	}());
	exports.Directive = Directive;
	var DoWhileStatement = (function () {
	    function DoWhileStatement(body, test) {
	        this.type = syntax_1.Syntax.DoWhileStatement;
	        this.body = body;
	        this.test = test;
	    }
	    return DoWhileStatement;
	}());
	exports.DoWhileStatement = DoWhileStatement;
	var EmptyStatement = (function () {
	    function EmptyStatement() {
	        this.type = syntax_1.Syntax.EmptyStatement;
	    }
	    return EmptyStatement;
	}());
	exports.EmptyStatement = EmptyStatement;
	var ExportAllDeclaration = (function () {
	    function ExportAllDeclaration(source) {
	        this.type = syntax_1.Syntax.ExportAllDeclaration;
	        this.source = source;
	    }
	    return ExportAllDeclaration;
	}());
	exports.ExportAllDeclaration = ExportAllDeclaration;
	var ExportDefaultDeclaration = (function () {
	    function ExportDefaultDeclaration(declaration) {
	        this.type = syntax_1.Syntax.ExportDefaultDeclaration;
	        this.declaration = declaration;
	    }
	    return ExportDefaultDeclaration;
	}());
	exports.ExportDefaultDeclaration = ExportDefaultDeclaration;
	var ExportNamedDeclaration = (function () {
	    function ExportNamedDeclaration(declaration, specifiers, source) {
	        this.type = syntax_1.Syntax.ExportNamedDeclaration;
	        this.declaration = declaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ExportNamedDeclaration;
	}());
	exports.ExportNamedDeclaration = ExportNamedDeclaration;
	var ExportSpecifier = (function () {
	    function ExportSpecifier(local, exported) {
	        this.type = syntax_1.Syntax.ExportSpecifier;
	        this.exported = exported;
	        this.local = local;
	    }
	    return ExportSpecifier;
	}());
	exports.ExportSpecifier = ExportSpecifier;
	var ExpressionStatement = (function () {
	    function ExpressionStatement(expression) {
	        this.type = syntax_1.Syntax.ExpressionStatement;
	        this.expression = expression;
	    }
	    return ExpressionStatement;
	}());
	exports.ExpressionStatement = ExpressionStatement;
	var ForInStatement = (function () {
	    function ForInStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForInStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	        this.each = false;
	    }
	    return ForInStatement;
	}());
	exports.ForInStatement = ForInStatement;
	var ForOfStatement = (function () {
	    function ForOfStatement(left, right, body) {
	        this.type = syntax_1.Syntax.ForOfStatement;
	        this.left = left;
	        this.right = right;
	        this.body = body;
	    }
	    return ForOfStatement;
	}());
	exports.ForOfStatement = ForOfStatement;
	var ForStatement = (function () {
	    function ForStatement(init, test, update, body) {
	        this.type = syntax_1.Syntax.ForStatement;
	        this.init = init;
	        this.test = test;
	        this.update = update;
	        this.body = body;
	    }
	    return ForStatement;
	}());
	exports.ForStatement = ForStatement;
	var FunctionDeclaration = (function () {
	    function FunctionDeclaration(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionDeclaration;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	        this.async = false;
	    }
	    return FunctionDeclaration;
	}());
	exports.FunctionDeclaration = FunctionDeclaration;
	var FunctionExpression = (function () {
	    function FunctionExpression(id, params, body, generator) {
	        this.type = syntax_1.Syntax.FunctionExpression;
	        this.id = id;
	        this.params = params;
	        this.body = body;
	        this.generator = generator;
	        this.expression = false;
	        this.async = false;
	    }
	    return FunctionExpression;
	}());
	exports.FunctionExpression = FunctionExpression;
	var Identifier = (function () {
	    function Identifier(name) {
	        this.type = syntax_1.Syntax.Identifier;
	        this.name = name;
	    }
	    return Identifier;
	}());
	exports.Identifier = Identifier;
	var IfStatement = (function () {
	    function IfStatement(test, consequent, alternate) {
	        this.type = syntax_1.Syntax.IfStatement;
	        this.test = test;
	        this.consequent = consequent;
	        this.alternate = alternate;
	    }
	    return IfStatement;
	}());
	exports.IfStatement = IfStatement;
	var ImportDeclaration = (function () {
	    function ImportDeclaration(specifiers, source) {
	        this.type = syntax_1.Syntax.ImportDeclaration;
	        this.specifiers = specifiers;
	        this.source = source;
	    }
	    return ImportDeclaration;
	}());
	exports.ImportDeclaration = ImportDeclaration;
	var ImportDefaultSpecifier = (function () {
	    function ImportDefaultSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportDefaultSpecifier;
	        this.local = local;
	    }
	    return ImportDefaultSpecifier;
	}());
	exports.ImportDefaultSpecifier = ImportDefaultSpecifier;
	var ImportNamespaceSpecifier = (function () {
	    function ImportNamespaceSpecifier(local) {
	        this.type = syntax_1.Syntax.ImportNamespaceSpecifier;
	        this.local = local;
	    }
	    return ImportNamespaceSpecifier;
	}());
	exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier;
	var ImportSpecifier = (function () {
	    function ImportSpecifier(local, imported) {
	        this.type = syntax_1.Syntax.ImportSpecifier;
	        this.local = local;
	        this.imported = imported;
	    }
	    return ImportSpecifier;
	}());
	exports.ImportSpecifier = ImportSpecifier;
	var LabeledStatement = (function () {
	    function LabeledStatement(label, body) {
	        this.type = syntax_1.Syntax.LabeledStatement;
	        this.label = label;
	        this.body = body;
	    }
	    return LabeledStatement;
	}());
	exports.LabeledStatement = LabeledStatement;
	var Literal = (function () {
	    function Literal(value, raw) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	    }
	    return Literal;
	}());
	exports.Literal = Literal;
	var MetaProperty = (function () {
	    function MetaProperty(meta, property) {
	        this.type = syntax_1.Syntax.MetaProperty;
	        this.meta = meta;
	        this.property = property;
	    }
	    return MetaProperty;
	}());
	exports.MetaProperty = MetaProperty;
	var MethodDefinition = (function () {
	    function MethodDefinition(key, computed, value, kind, isStatic) {
	        this.type = syntax_1.Syntax.MethodDefinition;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.static = isStatic;
	    }
	    return MethodDefinition;
	}());
	exports.MethodDefinition = MethodDefinition;
	var Module = (function () {
	    function Module(body) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = 'module';
	    }
	    return Module;
	}());
	exports.Module = Module;
	var NewExpression = (function () {
	    function NewExpression(callee, args) {
	        this.type = syntax_1.Syntax.NewExpression;
	        this.callee = callee;
	        this.arguments = args;
	    }
	    return NewExpression;
	}());
	exports.NewExpression = NewExpression;
	var ObjectExpression = (function () {
	    function ObjectExpression(properties) {
	        this.type = syntax_1.Syntax.ObjectExpression;
	        this.properties = properties;
	    }
	    return ObjectExpression;
	}());
	exports.ObjectExpression = ObjectExpression;
	var ObjectPattern = (function () {
	    function ObjectPattern(properties) {
	        this.type = syntax_1.Syntax.ObjectPattern;
	        this.properties = properties;
	    }
	    return ObjectPattern;
	}());
	exports.ObjectPattern = ObjectPattern;
	var Property = (function () {
	    function Property(kind, key, computed, value, method, shorthand) {
	        this.type = syntax_1.Syntax.Property;
	        this.key = key;
	        this.computed = computed;
	        this.value = value;
	        this.kind = kind;
	        this.method = method;
	        this.shorthand = shorthand;
	    }
	    return Property;
	}());
	exports.Property = Property;
	var RegexLiteral = (function () {
	    function RegexLiteral(value, raw, pattern, flags) {
	        this.type = syntax_1.Syntax.Literal;
	        this.value = value;
	        this.raw = raw;
	        this.regex = { pattern: pattern, flags: flags };
	    }
	    return RegexLiteral;
	}());
	exports.RegexLiteral = RegexLiteral;
	var RestElement = (function () {
	    function RestElement(argument) {
	        this.type = syntax_1.Syntax.RestElement;
	        this.argument = argument;
	    }
	    return RestElement;
	}());
	exports.RestElement = RestElement;
	var ReturnStatement = (function () {
	    function ReturnStatement(argument) {
	        this.type = syntax_1.Syntax.ReturnStatement;
	        this.argument = argument;
	    }
	    return ReturnStatement;
	}());
	exports.ReturnStatement = ReturnStatement;
	var Script = (function () {
	    function Script(body) {
	        this.type = syntax_1.Syntax.Program;
	        this.body = body;
	        this.sourceType = 'script';
	    }
	    return Script;
	}());
	exports.Script = Script;
	var SequenceExpression = (function () {
	    function SequenceExpression(expressions) {
	        this.type = syntax_1.Syntax.SequenceExpression;
	        this.expressions = expressions;
	    }
	    return SequenceExpression;
	}());
	exports.SequenceExpression = SequenceExpression;
	var SpreadElement = (function () {
	    function SpreadElement(argument) {
	        this.type = syntax_1.Syntax.SpreadElement;
	        this.argument = argument;
	    }
	    return SpreadElement;
	}());
	exports.SpreadElement = SpreadElement;
	var StaticMemberExpression = (function () {
	    function StaticMemberExpression(object, property) {
	        this.type = syntax_1.Syntax.MemberExpression;
	        this.computed = false;
	        this.object = object;
	        this.property = property;
	    }
	    return StaticMemberExpression;
	}());
	exports.StaticMemberExpression = StaticMemberExpression;
	var Super = (function () {
	    function Super() {
	        this.type = syntax_1.Syntax.Super;
	    }
	    return Super;
	}());
	exports.Super = Super;
	var SwitchCase = (function () {
	    function SwitchCase(test, consequent) {
	        this.type = syntax_1.Syntax.SwitchCase;
	        this.test = test;
	        this.consequent = consequent;
	    }
	    return SwitchCase;
	}());
	exports.SwitchCase = SwitchCase;
	var SwitchStatement = (function () {
	    function SwitchStatement(discriminant, cases) {
	        this.type = syntax_1.Syntax.SwitchStatement;
	        this.discriminant = discriminant;
	        this.cases = cases;
	    }
	    return SwitchStatement;
	}());
	exports.SwitchStatement = SwitchStatement;
	var TaggedTemplateExpression = (function () {
	    function TaggedTemplateExpression(tag, quasi) {
	        this.type = syntax_1.Syntax.TaggedTemplateExpression;
	        this.tag = tag;
	        this.quasi = quasi;
	    }
	    return TaggedTemplateExpression;
	}());
	exports.TaggedTemplateExpression = TaggedTemplateExpression;
	var TemplateElement = (function () {
	    function TemplateElement(value, tail) {
	        this.type = syntax_1.Syntax.TemplateElement;
	        this.value = value;
	        this.tail = tail;
	    }
	    return TemplateElement;
	}());
	exports.TemplateElement = TemplateElement;
	var TemplateLiteral = (function () {
	    function TemplateLiteral(quasis, expressions) {
	        this.type = syntax_1.Syntax.TemplateLiteral;
	        this.quasis = quasis;
	        this.expressions = expressions;
	    }
	    return TemplateLiteral;
	}());
	exports.TemplateLiteral = TemplateLiteral;
	var ThisExpression = (function () {
	    function ThisExpression() {
	        this.type = syntax_1.Syntax.ThisExpression;
	    }
	    return ThisExpression;
	}());
	exports.ThisExpression = ThisExpression;
	var ThrowStatement = (function () {
	    function ThrowStatement(argument) {
	        this.type = syntax_1.Syntax.ThrowStatement;
	        this.argument = argument;
	    }
	    return ThrowStatement;
	}());
	exports.ThrowStatement = ThrowStatement;
	var TryStatement = (function () {
	    function TryStatement(block, handler, finalizer) {
	        this.type = syntax_1.Syntax.TryStatement;
	        this.block = block;
	        this.handler = handler;
	        this.finalizer = finalizer;
	    }
	    return TryStatement;
	}());
	exports.TryStatement = TryStatement;
	var UnaryExpression = (function () {
	    function UnaryExpression(operator, argument) {
	        this.type = syntax_1.Syntax.UnaryExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = true;
	    }
	    return UnaryExpression;
	}());
	exports.UnaryExpression = UnaryExpression;
	var UpdateExpression = (function () {
	    function UpdateExpression(operator, argument, prefix) {
	        this.type = syntax_1.Syntax.UpdateExpression;
	        this.operator = operator;
	        this.argument = argument;
	        this.prefix = prefix;
	    }
	    return UpdateExpression;
	}());
	exports.UpdateExpression = UpdateExpression;
	var VariableDeclaration = (function () {
	    function VariableDeclaration(declarations, kind) {
	        this.type = syntax_1.Syntax.VariableDeclaration;
	        this.declarations = declarations;
	        this.kind = kind;
	    }
	    return VariableDeclaration;
	}());
	exports.VariableDeclaration = VariableDeclaration;
	var VariableDeclarator = (function () {
	    function VariableDeclarator(id, init) {
	        this.type = syntax_1.Syntax.VariableDeclarator;
	        this.id = id;
	        this.init = init;
	    }
	    return VariableDeclarator;
	}());
	exports.VariableDeclarator = VariableDeclarator;
	var WhileStatement = (function () {
	    function WhileStatement(test, body) {
	        this.type = syntax_1.Syntax.WhileStatement;
	        this.test = test;
	        this.body = body;
	    }
	    return WhileStatement;
	}());
	exports.WhileStatement = WhileStatement;
	var WithStatement = (function () {
	    function WithStatement(object, body) {
	        this.type = syntax_1.Syntax.WithStatement;
	        this.object = object;
	        this.body = body;
	    }
	    return WithStatement;
	}());
	exports.WithStatement = WithStatement;
	var YieldExpression = (function () {
	    function YieldExpression(argument, delegate) {
	        this.type = syntax_1.Syntax.YieldExpression;
	        this.argument = argument;
	        this.delegate = delegate;
	    }
	    return YieldExpression;
	}());
	exports.YieldExpression = YieldExpression;


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var assert_1 = __webpack_require__(9);
	var error_handler_1 = __webpack_require__(10);
	var messages_1 = __webpack_require__(11);
	var Node = __webpack_require__(7);
	var scanner_1 = __webpack_require__(12);
	var syntax_1 = __webpack_require__(2);
	var token_1 = __webpack_require__(13);
	var ArrowParameterPlaceHolder = 'ArrowParameterPlaceHolder';
	var Parser = (function () {
	    function Parser(code, options, delegate) {
	        if (options === void 0) { options = {}; }
	        this.config = {
	            range: (typeof options.range === 'boolean') && options.range,
	            loc: (typeof options.loc === 'boolean') && options.loc,
	            source: null,
	            tokens: (typeof options.tokens === 'boolean') && options.tokens,
	            comment: (typeof options.comment === 'boolean') && options.comment,
	            tolerant: (typeof options.tolerant === 'boolean') && options.tolerant
	        };
	        if (this.config.loc && options.source && options.source !== null) {
	            this.config.source = String(options.source);
	        }
	        this.delegate = delegate;
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = this.config.tolerant;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = this.config.comment;
	        this.operatorPrecedence = {
	            ')': 0,
	            ';': 0,
	            ',': 0,
	            '=': 0,
	            ']': 0,
	            '||': 1,
	            '&&': 2,
	            '|': 3,
	            '^': 4,
	            '&': 5,
	            '==': 6,
	            '!=': 6,
	            '===': 6,
	            '!==': 6,
	            '<': 7,
	            '>': 7,
	            '<=': 7,
	            '>=': 7,
	            '<<': 8,
	            '>>': 8,
	            '>>>': 8,
	            '+': 9,
	            '-': 9,
	            '*': 11,
	            '/': 11,
	            '%': 11
	        };
	        this.lookahead = {
	            type: 2 /* EOF */,
	            value: '',
	            lineNumber: this.scanner.lineNumber,
	            lineStart: 0,
	            start: 0,
	            end: 0
	        };
	        this.hasLineTerminator = false;
	        this.context = {
	            isModule: false,
	            await: false,
	            allowIn: true,
	            allowStrictDirective: true,
	            allowYield: true,
	            firstCoverInitializedNameError: null,
	            isAssignmentTarget: false,
	            isBindingElement: false,
	            inFunctionBody: false,
	            inIteration: false,
	            inSwitch: false,
	            labelSet: {},
	            strict: false
	        };
	        this.tokens = [];
	        this.startMarker = {
	            index: 0,
	            line: this.scanner.lineNumber,
	            column: 0
	        };
	        this.lastMarker = {
	            index: 0,
	            line: this.scanner.lineNumber,
	            column: 0
	        };
	        this.nextToken();
	        this.lastMarker = {
	            index: this.scanner.index,
	            line: this.scanner.lineNumber,
	            column: this.scanner.index - this.scanner.lineStart
	        };
	    }
	    Parser.prototype.throwError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.lastMarker.line;
	        var column = this.lastMarker.column + 1;
	        throw this.errorHandler.createError(index, line, column, msg);
	    };
	    Parser.prototype.tolerateError = function (messageFormat) {
	        var values = [];
	        for (var _i = 1; _i < arguments.length; _i++) {
	            values[_i - 1] = arguments[_i];
	        }
	        var args = Array.prototype.slice.call(arguments, 1);
	        var msg = messageFormat.replace(/%(\d)/g, function (whole, idx) {
	            assert_1.assert(idx < args.length, 'Message reference must be in range');
	            return args[idx];
	        });
	        var index = this.lastMarker.index;
	        var line = this.scanner.lineNumber;
	        var column = this.lastMarker.column + 1;
	        this.errorHandler.tolerateError(index, line, column, msg);
	    };
	    // Throw an exception because of the token.
	    Parser.prototype.unexpectedTokenError = function (token, message) {
	        var msg = message || messages_1.Messages.UnexpectedToken;
	        var value;
	        if (token) {
	            if (!message) {
	                msg = (token.type === 2 /* EOF */) ? messages_1.Messages.UnexpectedEOS :
	                    (token.type === 3 /* Identifier */) ? messages_1.Messages.UnexpectedIdentifier :
	                        (token.type === 6 /* NumericLiteral */) ? messages_1.Messages.UnexpectedNumber :
	                            (token.type === 8 /* StringLiteral */) ? messages_1.Messages.UnexpectedString :
	                                (token.type === 10 /* Template */) ? messages_1.Messages.UnexpectedTemplate :
	                                    messages_1.Messages.UnexpectedToken;
	                if (token.type === 4 /* Keyword */) {
	                    if (this.scanner.isFutureReservedWord(token.value)) {
	                        msg = messages_1.Messages.UnexpectedReserved;
	                    }
	                    else if (this.context.strict && this.scanner.isStrictModeReservedWord(token.value)) {
	                        msg = messages_1.Messages.StrictReservedWord;
	                    }
	                }
	            }
	            value = token.value;
	        }
	        else {
	            value = 'ILLEGAL';
	        }
	        msg = msg.replace('%0', value);
	        if (token && typeof token.lineNumber === 'number') {
	            var index = token.start;
	            var line = token.lineNumber;
	            var lastMarkerLineStart = this.lastMarker.index - this.lastMarker.column;
	            var column = token.start - lastMarkerLineStart + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	        else {
	            var index = this.lastMarker.index;
	            var line = this.lastMarker.line;
	            var column = this.lastMarker.column + 1;
	            return this.errorHandler.createError(index, line, column, msg);
	        }
	    };
	    Parser.prototype.throwUnexpectedToken = function (token, message) {
	        throw this.unexpectedTokenError(token, message);
	    };
	    Parser.prototype.tolerateUnexpectedToken = function (token, message) {
	        this.errorHandler.tolerate(this.unexpectedTokenError(token, message));
	    };
	    Parser.prototype.collectComments = function () {
	        if (!this.config.comment) {
	            this.scanner.scanComments();
	        }
	        else {
	            var comments = this.scanner.scanComments();
	            if (comments.length > 0 && this.delegate) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var node = void 0;
	                    node = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: this.scanner.source.slice(e.slice[0], e.slice[1])
	                    };
	                    if (this.config.range) {
	                        node.range = e.range;
	                    }
	                    if (this.config.loc) {
	                        node.loc = e.loc;
	                    }
	                    var metadata = {
	                        start: {
	                            line: e.loc.start.line,
	                            column: e.loc.start.column,
	                            offset: e.range[0]
	                        },
	                        end: {
	                            line: e.loc.end.line,
	                            column: e.loc.end.column,
	                            offset: e.range[1]
	                        }
	                    };
	                    this.delegate(node, metadata);
	                }
	            }
	        }
	    };
	    // From internal representation to an external structure
	    Parser.prototype.getTokenRaw = function (token) {
	        return this.scanner.source.slice(token.start, token.end);
	    };
	    Parser.prototype.convertToken = function (token) {
	        var t = {
	            type: token_1.TokenName[token.type],
	            value: this.getTokenRaw(token)
	        };
	        if (this.config.range) {
	            t.range = [token.start, token.end];
	        }
	        if (this.config.loc) {
	            t.loc = {
	                start: {
	                    line: this.startMarker.line,
	                    column: this.startMarker.column
	                },
	                end: {
	                    line: this.scanner.lineNumber,
	                    column: this.scanner.index - this.scanner.lineStart
	                }
	            };
	        }
	        if (token.type === 9 /* RegularExpression */) {
	            var pattern = token.pattern;
	            var flags = token.flags;
	            t.regex = { pattern: pattern, flags: flags };
	        }
	        return t;
	    };
	    Parser.prototype.nextToken = function () {
	        var token = this.lookahead;
	        this.lastMarker.index = this.scanner.index;
	        this.lastMarker.line = this.scanner.lineNumber;
	        this.lastMarker.column = this.scanner.index - this.scanner.lineStart;
	        this.collectComments();
	        if (this.scanner.index !== this.startMarker.index) {
	            this.startMarker.index = this.scanner.index;
	            this.startMarker.line = this.scanner.lineNumber;
	            this.startMarker.column = this.scanner.index - this.scanner.lineStart;
	        }
	        var next = this.scanner.lex();
	        this.hasLineTerminator = (token.lineNumber !== next.lineNumber);
	        if (next && this.context.strict && next.type === 3 /* Identifier */) {
	            if (this.scanner.isStrictModeReservedWord(next.value)) {
	                next.type = 4 /* Keyword */;
	            }
	        }
	        this.lookahead = next;
	        if (this.config.tokens && next.type !== 2 /* EOF */) {
	            this.tokens.push(this.convertToken(next));
	        }
	        return token;
	    };
	    Parser.prototype.nextRegexToken = function () {
	        this.collectComments();
	        var token = this.scanner.scanRegExp();
	        if (this.config.tokens) {
	            // Pop the previous token, '/' or '/='
	            // This is added from the lookahead token.
	            this.tokens.pop();
	            this.tokens.push(this.convertToken(token));
	        }
	        // Prime the next lookahead.
	        this.lookahead = token;
	        this.nextToken();
	        return token;
	    };
	    Parser.prototype.createNode = function () {
	        return {
	            index: this.startMarker.index,
	            line: this.startMarker.line,
	            column: this.startMarker.column
	        };
	    };
	    Parser.prototype.startNode = function (token, lastLineStart) {
	        if (lastLineStart === void 0) { lastLineStart = 0; }
	        var column = token.start - token.lineStart;
	        var line = token.lineNumber;
	        if (column < 0) {
	            column += lastLineStart;
	            line--;
	        }
	        return {
	            index: token.start,
	            line: line,
	            column: column
	        };
	    };
	    Parser.prototype.finalize = function (marker, node) {
	        if (this.config.range) {
	            node.range = [marker.index, this.lastMarker.index];
	        }
	        if (this.config.loc) {
	            node.loc = {
	                start: {
	                    line: marker.line,
	                    column: marker.column,
	                },
	                end: {
	                    line: this.lastMarker.line,
	                    column: this.lastMarker.column
	                }
	            };
	            if (this.config.source) {
	                node.loc.source = this.config.source;
	            }
	        }
	        if (this.delegate) {
	            var metadata = {
	                start: {
	                    line: marker.line,
	                    column: marker.column,
	                    offset: marker.index
	                },
	                end: {
	                    line: this.lastMarker.line,
	                    column: this.lastMarker.column,
	                    offset: this.lastMarker.index
	                }
	            };
	            this.delegate(node, metadata);
	        }
	        return node;
	    };
	    // Expect the next token to match the specified punctuator.
	    // If not, an exception will be thrown.
	    Parser.prototype.expect = function (value) {
	        var token = this.nextToken();
	        if (token.type !== 7 /* Punctuator */ || token.value !== value) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Quietly expect a comma when in tolerant mode, otherwise delegates to expect().
	    Parser.prototype.expectCommaSeparator = function () {
	        if (this.config.tolerant) {
	            var token = this.lookahead;
	            if (token.type === 7 /* Punctuator */ && token.value === ',') {
	                this.nextToken();
	            }
	            else if (token.type === 7 /* Punctuator */ && token.value === ';') {
	                this.nextToken();
	                this.tolerateUnexpectedToken(token);
	            }
	            else {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.UnexpectedToken);
	            }
	        }
	        else {
	            this.expect(',');
	        }
	    };
	    // Expect the next token to match the specified keyword.
	    // If not, an exception will be thrown.
	    Parser.prototype.expectKeyword = function (keyword) {
	        var token = this.nextToken();
	        if (token.type !== 4 /* Keyword */ || token.value !== keyword) {
	            this.throwUnexpectedToken(token);
	        }
	    };
	    // Return true if the next token matches the specified punctuator.
	    Parser.prototype.match = function (value) {
	        return this.lookahead.type === 7 /* Punctuator */ && this.lookahead.value === value;
	    };
	    // Return true if the next token matches the specified keyword
	    Parser.prototype.matchKeyword = function (keyword) {
	        return this.lookahead.type === 4 /* Keyword */ && this.lookahead.value === keyword;
	    };
	    // Return true if the next token matches the specified contextual keyword
	    // (where an identifier is sometimes a keyword depending on the context)
	    Parser.prototype.matchContextualKeyword = function (keyword) {
	        return this.lookahead.type === 3 /* Identifier */ && this.lookahead.value === keyword;
	    };
	    // Return true if the next token is an assignment operator
	    Parser.prototype.matchAssign = function () {
	        if (this.lookahead.type !== 7 /* Punctuator */) {
	            return false;
	        }
	        var op = this.lookahead.value;
	        return op === '=' ||
	            op === '*=' ||
	            op === '**=' ||
	            op === '/=' ||
	            op === '%=' ||
	            op === '+=' ||
	            op === '-=' ||
	            op === '<<=' ||
	            op === '>>=' ||
	            op === '>>>=' ||
	            op === '&=' ||
	            op === '^=' ||
	            op === '|=';
	    };
	    // Cover grammar support.
	    //
	    // When an assignment expression position starts with an left parenthesis, the determination of the type
	    // of the syntax is to be deferred arbitrarily long until the end of the parentheses pair (plus a lookahead)
	    // or the first comma. This situation also defers the determination of all the expressions nested in the pair.
	    //
	    // There are three productions that can be parsed in a parentheses pair that needs to be determined
	    // after the outermost pair is closed. They are:
	    //
	    //   1. AssignmentExpression
	    //   2. BindingElements
	    //   3. AssignmentTargets
	    //
	    // In order to avoid exponential backtracking, we use two flags to denote if the production can be
	    // binding element or assignment target.
	    //
	    // The three productions have the relationship:
	    //
	    //   BindingElements ⊆ AssignmentTargets ⊆ AssignmentExpression
	    //
	    // with a single exception that CoverInitializedName when used directly in an Expression, generates
	    // an early error. Therefore, we need the third state, firstCoverInitializedNameError, to track the
	    // first usage of CoverInitializedName and report it when we reached the end of the parentheses pair.
	    //
	    // isolateCoverGrammar function runs the given parser function with a new cover grammar context, and it does not
	    // effect the current flags. This means the production the parser parses is only used as an expression. Therefore
	    // the CoverInitializedName check is conducted.
	    //
	    // inheritCoverGrammar function runs the given parse function with a new cover grammar context, and it propagates
	    // the flags outside of the parser. This means the production the parser parses is used as a part of a potential
	    // pattern. The CoverInitializedName check is deferred.
	    Parser.prototype.isolateCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        if (this.context.firstCoverInitializedNameError !== null) {
	            this.throwUnexpectedToken(this.context.firstCoverInitializedNameError);
	        }
	        this.context.isBindingElement = previousIsBindingElement;
	        this.context.isAssignmentTarget = previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.inheritCoverGrammar = function (parseFunction) {
	        var previousIsBindingElement = this.context.isBindingElement;
	        var previousIsAssignmentTarget = this.context.isAssignmentTarget;
	        var previousFirstCoverInitializedNameError = this.context.firstCoverInitializedNameError;
	        this.context.isBindingElement = true;
	        this.context.isAssignmentTarget = true;
	        this.context.firstCoverInitializedNameError = null;
	        var result = parseFunction.call(this);
	        this.context.isBindingElement = this.context.isBindingElement && previousIsBindingElement;
	        this.context.isAssignmentTarget = this.context.isAssignmentTarget && previousIsAssignmentTarget;
	        this.context.firstCoverInitializedNameError = previousFirstCoverInitializedNameError || this.context.firstCoverInitializedNameError;
	        return result;
	    };
	    Parser.prototype.consumeSemicolon = function () {
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else if (!this.hasLineTerminator) {
	            if (this.lookahead.type !== 2 /* EOF */ && !this.match('}')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.lastMarker.index = this.startMarker.index;
	            this.lastMarker.line = this.startMarker.line;
	            this.lastMarker.column = this.startMarker.column;
	        }
	    };
	    // https://tc39.github.io/ecma262/#sec-primary-expression
	    Parser.prototype.parsePrimaryExpression = function () {
	        var node = this.createNode();
	        var expr;
	        var token, raw;
	        switch (this.lookahead.type) {
	            case 3 /* Identifier */:
	                if ((this.context.isModule || this.context.await) && this.lookahead.value === 'await') {
	                    this.tolerateUnexpectedToken(this.lookahead);
	                }
	                expr = this.matchAsyncFunction() ? this.parseFunctionExpression() : this.finalize(node, new Node.Identifier(this.nextToken().value));
	                break;
	            case 6 /* NumericLiteral */:
	            case 8 /* StringLiteral */:
	                if (this.context.strict && this.lookahead.octal) {
	                    this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.StrictOctalLiteral);
	                }
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case 1 /* BooleanLiteral */:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(token.value === 'true', raw));
	                break;
	            case 5 /* NullLiteral */:
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                token = this.nextToken();
	                raw = this.getTokenRaw(token);
	                expr = this.finalize(node, new Node.Literal(null, raw));
	                break;
	            case 10 /* Template */:
	                expr = this.parseTemplateLiteral();
	                break;
	            case 7 /* Punctuator */:
	                switch (this.lookahead.value) {
	                    case '(':
	                        this.context.isBindingElement = false;
	                        expr = this.inheritCoverGrammar(this.parseGroupExpression);
	                        break;
	                    case '[':
	                        expr = this.inheritCoverGrammar(this.parseArrayInitializer);
	                        break;
	                    case '{':
	                        expr = this.inheritCoverGrammar(this.parseObjectInitializer);
	                        break;
	                    case '/':
	                    case '/=':
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                        this.scanner.index = this.startMarker.index;
	                        token = this.nextRegexToken();
	                        raw = this.getTokenRaw(token);
	                        expr = this.finalize(node, new Node.RegexLiteral(token.regex, raw, token.pattern, token.flags));
	                        break;
	                    default:
	                        expr = this.throwUnexpectedToken(this.nextToken());
	                }
	                break;
	            case 4 /* Keyword */:
	                if (!this.context.strict && this.context.allowYield && this.matchKeyword('yield')) {
	                    expr = this.parseIdentifierName();
	                }
	                else if (!this.context.strict && this.matchKeyword('let')) {
	                    expr = this.finalize(node, new Node.Identifier(this.nextToken().value));
	                }
	                else {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    if (this.matchKeyword('function')) {
	                        expr = this.parseFunctionExpression();
	                    }
	                    else if (this.matchKeyword('this')) {
	                        this.nextToken();
	                        expr = this.finalize(node, new Node.ThisExpression());
	                    }
	                    else if (this.matchKeyword('class')) {
	                        expr = this.parseClassExpression();
	                    }
	                    else {
	                        expr = this.throwUnexpectedToken(this.nextToken());
	                    }
	                }
	                break;
	            default:
	                expr = this.throwUnexpectedToken(this.nextToken());
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-array-initializer
	    Parser.prototype.parseSpreadElement = function () {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.inheritCoverGrammar(this.parseAssignmentExpression);
	        return this.finalize(node, new Node.SpreadElement(arg));
	    };
	    Parser.prototype.parseArrayInitializer = function () {
	        var node = this.createNode();
	        var elements = [];
	        this.expect('[');
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else if (this.match('...')) {
	                var element = this.parseSpreadElement();
	                if (!this.match(']')) {
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    this.expect(',');
	                }
	                elements.push(element);
	            }
	            else {
	                elements.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayExpression(elements));
	    };
	    // https://tc39.github.io/ecma262/#sec-object-initializer
	    Parser.prototype.parsePropertyMethod = function (params) {
	        this.context.isAssignmentTarget = false;
	        this.context.isBindingElement = false;
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = params.simple;
	        var body = this.isolateCoverGrammar(this.parseFunctionSourceElements);
	        if (this.context.strict && params.firstRestricted) {
	            this.tolerateUnexpectedToken(params.firstRestricted, params.message);
	        }
	        if (this.context.strict && params.stricted) {
	            this.tolerateUnexpectedToken(params.stricted, params.message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        return body;
	    };
	    Parser.prototype.parsePropertyMethodFunction = function () {
	        var isGenerator = false;
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = true;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    Parser.prototype.parsePropertyMethodAsyncFunction = function () {
	        var node = this.createNode();
	        var previousAllowYield = this.context.allowYield;
	        var previousAwait = this.context.await;
	        this.context.allowYield = false;
	        this.context.await = true;
	        var params = this.parseFormalParameters();
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        this.context.await = previousAwait;
	        return this.finalize(node, new Node.AsyncFunctionExpression(null, params.params, method));
	    };
	    Parser.prototype.parseObjectPropertyKey = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        var key;
	        switch (token.type) {
	            case 8 /* StringLiteral */:
	            case 6 /* NumericLiteral */:
	                if (this.context.strict && token.octal) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictOctalLiteral);
	                }
	                var raw = this.getTokenRaw(token);
	                key = this.finalize(node, new Node.Literal(token.value, raw));
	                break;
	            case 3 /* Identifier */:
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 4 /* Keyword */:
	                key = this.finalize(node, new Node.Identifier(token.value));
	                break;
	            case 7 /* Punctuator */:
	                if (token.value === '[') {
	                    key = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    this.expect(']');
	                }
	                else {
	                    key = this.throwUnexpectedToken(token);
	                }
	                break;
	            default:
	                key = this.throwUnexpectedToken(token);
	        }
	        return key;
	    };
	    Parser.prototype.isPropertyKey = function (key, value) {
	        return (key.type === syntax_1.Syntax.Identifier && key.name === value) ||
	            (key.type === syntax_1.Syntax.Literal && key.value === value);
	    };
	    Parser.prototype.parseObjectProperty = function (hasProto) {
	        var node = this.createNode();
	        var token = this.lookahead;
	        var kind;
	        var key = null;
	        var value = null;
	        var computed = false;
	        var method = false;
	        var shorthand = false;
	        var isAsync = false;
	        if (token.type === 3 /* Identifier */) {
	            var id = token.value;
	            this.nextToken();
	            computed = this.match('[');
	            isAsync = !this.hasLineTerminator && (id === 'async') &&
	                !this.match(':') && !this.match('(') && !this.match('*') && !this.match(',');
	            key = isAsync ? this.parseObjectPropertyKey() : this.finalize(node, new Node.Identifier(id));
	        }
	        else if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'get' && lookaheadPropertyKey) {
	            kind = 'get';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.context.allowYield = false;
	            value = this.parseGetterMethod();
	        }
	        else if (token.type === 3 /* Identifier */ && !isAsync && token.value === 'set' && lookaheadPropertyKey) {
	            kind = 'set';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseSetterMethod();
	        }
	        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        else {
	            if (!key) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            kind = 'init';
	            if (this.match(':') && !isAsync) {
	                if (!computed && this.isPropertyKey(key, '__proto__')) {
	                    if (hasProto.value) {
	                        this.tolerateError(messages_1.Messages.DuplicateProtoProperty);
	                    }
	                    hasProto.value = true;
	                }
	                this.nextToken();
	                value = this.inheritCoverGrammar(this.parseAssignmentExpression);
	            }
	            else if (this.match('(')) {
	                value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();
	                method = true;
	            }
	            else if (token.type === 3 /* Identifier */) {
	                var id = this.finalize(node, new Node.Identifier(token.value));
	                if (this.match('=')) {
	                    this.context.firstCoverInitializedNameError = this.lookahead;
	                    this.nextToken();
	                    shorthand = true;
	                    var init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    value = this.finalize(node, new Node.AssignmentPattern(id, init));
	                }
	                else {
	                    shorthand = true;
	                    value = id;
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.Property(kind, key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectInitializer = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var properties = [];
	        var hasProto = { value: false };
	        while (!this.match('}')) {
	            properties.push(this.parseObjectProperty(hasProto));
	            if (!this.match('}')) {
	                this.expectCommaSeparator();
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectExpression(properties));
	    };
	    // https://tc39.github.io/ecma262/#sec-template-literals
	    Parser.prototype.parseTemplateHead = function () {
	        assert_1.assert(this.lookahead.head, 'Template literal must start with a template head');
	        var node = this.createNode();
	        var token = this.nextToken();
	        var raw = token.value;
	        var cooked = token.cooked;
	        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));
	    };
	    Parser.prototype.parseTemplateElement = function () {
	        if (this.lookahead.type !== 10 /* Template */) {
	            this.throwUnexpectedToken();
	        }
	        var node = this.createNode();
	        var token = this.nextToken();
	        var raw = token.value;
	        var cooked = token.cooked;
	        return this.finalize(node, new Node.TemplateElement({ raw: raw, cooked: cooked }, token.tail));
	    };
	    Parser.prototype.parseTemplateLiteral = function () {
	        var node = this.createNode();
	        var expressions = [];
	        var quasis = [];
	        var quasi = this.parseTemplateHead();
	        quasis.push(quasi);
	        while (!quasi.tail) {
	            expressions.push(this.parseExpression());
	            quasi = this.parseTemplateElement();
	            quasis.push(quasi);
	        }
	        return this.finalize(node, new Node.TemplateLiteral(quasis, expressions));
	    };
	    // https://tc39.github.io/ecma262/#sec-grouping-operator
	    Parser.prototype.reinterpretExpressionAsPattern = function (expr) {
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	            case syntax_1.Syntax.MemberExpression:
	            case syntax_1.Syntax.RestElement:
	            case syntax_1.Syntax.AssignmentPattern:
	                break;
	            case syntax_1.Syntax.SpreadElement:
	                expr.type = syntax_1.Syntax.RestElement;
	                this.reinterpretExpressionAsPattern(expr.argument);
	                break;
	            case syntax_1.Syntax.ArrayExpression:
	                expr.type = syntax_1.Syntax.ArrayPattern;
	                for (var i = 0; i < expr.elements.length; i++) {
	                    if (expr.elements[i] !== null) {
	                        this.reinterpretExpressionAsPattern(expr.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectExpression:
	                expr.type = syntax_1.Syntax.ObjectPattern;
	                for (var i = 0; i < expr.properties.length; i++) {
	                    this.reinterpretExpressionAsPattern(expr.properties[i].value);
	                }
	                break;
	            case syntax_1.Syntax.AssignmentExpression:
	                expr.type = syntax_1.Syntax.AssignmentPattern;
	                delete expr.operator;
	                this.reinterpretExpressionAsPattern(expr.left);
	                break;
	            default:
	                // Allow other node type for tolerant parsing.
	                break;
	        }
	    };
	    Parser.prototype.parseGroupExpression = function () {
	        var expr;
	        this.expect('(');
	        if (this.match(')')) {
	            this.nextToken();
	            if (!this.match('=>')) {
	                this.expect('=>');
	            }
	            expr = {
	                type: ArrowParameterPlaceHolder,
	                params: [],
	                async: false
	            };
	        }
	        else {
	            var startToken = this.lookahead;
	            var params = [];
	            if (this.match('...')) {
	                expr = this.parseRestElement(params);
	                this.expect(')');
	                if (!this.match('=>')) {
	                    this.expect('=>');
	                }
	                expr = {
	                    type: ArrowParameterPlaceHolder,
	                    params: [expr],
	                    async: false
	                };
	            }
	            else {
	                var arrow = false;
	                this.context.isBindingElement = true;
	                expr = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                if (this.match(',')) {
	                    var expressions = [];
	                    this.context.isAssignmentTarget = false;
	                    expressions.push(expr);
	                    while (this.lookahead.type !== 2 /* EOF */) {
	                        if (!this.match(',')) {
	                            break;
	                        }
	                        this.nextToken();
	                        if (this.match(')')) {
	                            this.nextToken();
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions,
	                                async: false
	                            };
	                        }
	                        else if (this.match('...')) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            expressions.push(this.parseRestElement(params));
	                            this.expect(')');
	                            if (!this.match('=>')) {
	                                this.expect('=>');
	                            }
	                            this.context.isBindingElement = false;
	                            for (var i = 0; i < expressions.length; i++) {
	                                this.reinterpretExpressionAsPattern(expressions[i]);
	                            }
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: expressions,
	                                async: false
	                            };
	                        }
	                        else {
	                            expressions.push(this.inheritCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        if (arrow) {
	                            break;
	                        }
	                    }
	                    if (!arrow) {
	                        expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	                    }
	                }
	                if (!arrow) {
	                    this.expect(')');
	                    if (this.match('=>')) {
	                        if (expr.type === syntax_1.Syntax.Identifier && expr.name === 'yield') {
	                            arrow = true;
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: [expr],
	                                async: false
	                            };
	                        }
	                        if (!arrow) {
	                            if (!this.context.isBindingElement) {
	                                this.throwUnexpectedToken(this.lookahead);
	                            }
	                            if (expr.type === syntax_1.Syntax.SequenceExpression) {
	                                for (var i = 0; i < expr.expressions.length; i++) {
	                                    this.reinterpretExpressionAsPattern(expr.expressions[i]);
	                                }
	                            }
	                            else {
	                                this.reinterpretExpressionAsPattern(expr);
	                            }
	                            var parameters = (expr.type === syntax_1.Syntax.SequenceExpression ? expr.expressions : [expr]);
	                            expr = {
	                                type: ArrowParameterPlaceHolder,
	                                params: parameters,
	                                async: false
	                            };
	                        }
	                    }
	                    this.context.isBindingElement = false;
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-left-hand-side-expressions
	    Parser.prototype.parseArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAssignmentExpression);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.isIdentifierName = function (token) {
	        return token.type === 3 /* Identifier */ ||
	            token.type === 4 /* Keyword */ ||
	            token.type === 1 /* BooleanLiteral */ ||
	            token.type === 5 /* NullLiteral */;
	    };
	    Parser.prototype.parseIdentifierName = function () {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (!this.isIdentifierName(token)) {
	            this.throwUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseNewExpression = function () {
	        var node = this.createNode();
	        var id = this.parseIdentifierName();
	        assert_1.assert(id.name === 'new', 'New expression must start with `new`');
	        var expr;
	        if (this.match('.')) {
	            this.nextToken();
	            if (this.lookahead.type === 3 /* Identifier */ && this.context.inFunctionBody && this.lookahead.value === 'target') {
	                var property = this.parseIdentifierName();
	                expr = new Node.MetaProperty(id, property);
	            }
	            else {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            var callee = this.isolateCoverGrammar(this.parseLeftHandSideExpression);
	            var args = this.match('(') ? this.parseArguments() : [];
	            expr = new Node.NewExpression(callee, args);
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return this.finalize(node, expr);
	    };
	    Parser.prototype.parseAsyncArgument = function () {
	        var arg = this.parseAssignmentExpression();
	        this.context.firstCoverInitializedNameError = null;
	        return arg;
	    };
	    Parser.prototype.parseAsyncArguments = function () {
	        this.expect('(');
	        var args = [];
	        if (!this.match(')')) {
	            while (true) {
	                var expr = this.match('...') ? this.parseSpreadElement() :
	                    this.isolateCoverGrammar(this.parseAsyncArgument);
	                args.push(expr);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expectCommaSeparator();
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return args;
	    };
	    Parser.prototype.parseLeftHandSideExpressionAllowCall = function () {
	        var startToken = this.lookahead;
	        var maybeAsync = this.matchContextualKeyword('async');
	        var previousAllowIn = this.context.allowIn;
	        this.context.allowIn = true;
	        var expr;
	        if (this.matchKeyword('super') && this.context.inFunctionBody) {
	            expr = this.createNode();
	            this.nextToken();
	            expr = this.finalize(expr, new Node.Super());
	            if (!this.match('(') && !this.match('.') && !this.match('[')) {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        }
	        while (true) {
	            if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(this.startNode(startToken), new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.match('(')) {
	                var asyncArrow = maybeAsync && (startToken.lineNumber === this.lookahead.lineNumber);
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = false;
	                var args = asyncArrow ? this.parseAsyncArguments() : this.parseArguments();
	                expr = this.finalize(this.startNode(startToken), new Node.CallExpression(expr, args));
	                if (asyncArrow && this.match('=>')) {
	                    for (var i = 0; i < args.length; ++i) {
	                        this.reinterpretExpressionAsPattern(args[i]);
	                    }
	                    expr = {
	                        type: ArrowParameterPlaceHolder,
	                        params: args,
	                        async: true
	                    };
	                }
	            }
	            else if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(this.startNode(startToken), new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(this.startNode(startToken), new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        this.context.allowIn = previousAllowIn;
	        return expr;
	    };
	    Parser.prototype.parseSuper = function () {
	        var node = this.createNode();
	        this.expectKeyword('super');
	        if (!this.match('[') && !this.match('.')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        return this.finalize(node, new Node.Super());
	    };
	    Parser.prototype.parseLeftHandSideExpression = function () {
	        assert_1.assert(this.context.allowIn, 'callee of new expression always allow in keyword.');
	        var node = this.startNode(this.lookahead);
	        var expr = (this.matchKeyword('super') && this.context.inFunctionBody) ? this.parseSuper() :
	            this.inheritCoverGrammar(this.matchKeyword('new') ? this.parseNewExpression : this.parsePrimaryExpression);
	        while (true) {
	            if (this.match('[')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('[');
	                var property = this.isolateCoverGrammar(this.parseExpression);
	                this.expect(']');
	                expr = this.finalize(node, new Node.ComputedMemberExpression(expr, property));
	            }
	            else if (this.match('.')) {
	                this.context.isBindingElement = false;
	                this.context.isAssignmentTarget = true;
	                this.expect('.');
	                var property = this.parseIdentifierName();
	                expr = this.finalize(node, new Node.StaticMemberExpression(expr, property));
	            }
	            else if (this.lookahead.type === 10 /* Template */ && this.lookahead.head) {
	                var quasi = this.parseTemplateLiteral();
	                expr = this.finalize(node, new Node.TaggedTemplateExpression(expr, quasi));
	            }
	            else {
	                break;
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-update-expressions
	    Parser.prototype.parseUpdateExpression = function () {
	        var expr;
	        var startToken = this.lookahead;
	        if (this.match('++') || this.match('--')) {
	            var node = this.startNode(startToken);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                this.tolerateError(messages_1.Messages.StrictLHSPrefix);
	            }
	            if (!this.context.isAssignmentTarget) {
	                this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	            }
	            var prefix = true;
	            expr = this.finalize(node, new Node.UpdateExpression(token.value, expr, prefix));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else {
	            expr = this.inheritCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	            if (!this.hasLineTerminator && this.lookahead.type === 7 /* Punctuator */) {
	                if (this.match('++') || this.match('--')) {
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier && this.scanner.isRestrictedWord(expr.name)) {
	                        this.tolerateError(messages_1.Messages.StrictLHSPostfix);
	                    }
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    this.context.isAssignmentTarget = false;
	                    this.context.isBindingElement = false;
	                    var operator = this.nextToken().value;
	                    var prefix = false;
	                    expr = this.finalize(this.startNode(startToken), new Node.UpdateExpression(operator, expr, prefix));
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-unary-operators
	    Parser.prototype.parseAwaitExpression = function () {
	        var node = this.createNode();
	        this.nextToken();
	        var argument = this.parseUnaryExpression();
	        return this.finalize(node, new Node.AwaitExpression(argument));
	    };
	    Parser.prototype.parseUnaryExpression = function () {
	        var expr;
	        if (this.match('+') || this.match('-') || this.match('~') || this.match('!') ||
	            this.matchKeyword('delete') || this.matchKeyword('void') || this.matchKeyword('typeof')) {
	            var node = this.startNode(this.lookahead);
	            var token = this.nextToken();
	            expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	            expr = this.finalize(node, new Node.UnaryExpression(token.value, expr));
	            if (this.context.strict && expr.operator === 'delete' && expr.argument.type === syntax_1.Syntax.Identifier) {
	                this.tolerateError(messages_1.Messages.StrictDelete);
	            }
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        else if (this.context.await && this.matchContextualKeyword('await')) {
	            expr = this.parseAwaitExpression();
	        }
	        else {
	            expr = this.parseUpdateExpression();
	        }
	        return expr;
	    };
	    Parser.prototype.parseExponentiationExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseUnaryExpression);
	        if (expr.type !== syntax_1.Syntax.UnaryExpression && this.match('**')) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.BinaryExpression('**', left, right));
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-exp-operator
	    // https://tc39.github.io/ecma262/#sec-multiplicative-operators
	    // https://tc39.github.io/ecma262/#sec-additive-operators
	    // https://tc39.github.io/ecma262/#sec-bitwise-shift-operators
	    // https://tc39.github.io/ecma262/#sec-relational-operators
	    // https://tc39.github.io/ecma262/#sec-equality-operators
	    // https://tc39.github.io/ecma262/#sec-binary-bitwise-operators
	    // https://tc39.github.io/ecma262/#sec-binary-logical-operators
	    Parser.prototype.binaryPrecedence = function (token) {
	        var op = token.value;
	        var precedence;
	        if (token.type === 7 /* Punctuator */) {
	            precedence = this.operatorPrecedence[op] || 0;
	        }
	        else if (token.type === 4 /* Keyword */) {
	            precedence = (op === 'instanceof' || (this.context.allowIn && op === 'in')) ? 7 : 0;
	        }
	        else {
	            precedence = 0;
	        }
	        return precedence;
	    };
	    Parser.prototype.parseBinaryExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseExponentiationExpression);
	        var token = this.lookahead;
	        var prec = this.binaryPrecedence(token);
	        if (prec > 0) {
	            this.nextToken();
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	            var markers = [startToken, this.lookahead];
	            var left = expr;
	            var right = this.isolateCoverGrammar(this.parseExponentiationExpression);
	            var stack = [left, token.value, right];
	            var precedences = [prec];
	            while (true) {
	                prec = this.binaryPrecedence(this.lookahead);
	                if (prec <= 0) {
	                    break;
	                }
	                // Reduce: make a binary expression from the three topmost entries.
	                while ((stack.length > 2) && (prec <= precedences[precedences.length - 1])) {
	                    right = stack.pop();
	                    var operator = stack.pop();
	                    precedences.pop();
	                    left = stack.pop();
	                    markers.pop();
	                    var node = this.startNode(markers[markers.length - 1]);
	                    stack.push(this.finalize(node, new Node.BinaryExpression(operator, left, right)));
	                }
	                // Shift.
	                stack.push(this.nextToken().value);
	                precedences.push(prec);
	                markers.push(this.lookahead);
	                stack.push(this.isolateCoverGrammar(this.parseExponentiationExpression));
	            }
	            // Final reduce to clean-up the stack.
	            var i = stack.length - 1;
	            expr = stack[i];
	            var lastMarker = markers.pop();
	            while (i > 1) {
	                var marker = markers.pop();
	                var lastLineStart = lastMarker && lastMarker.lineStart;
	                var node = this.startNode(marker, lastLineStart);
	                var operator = stack[i - 1];
	                expr = this.finalize(node, new Node.BinaryExpression(operator, stack[i - 2], expr));
	                i -= 2;
	                lastMarker = marker;
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-conditional-operator
	    Parser.prototype.parseConditionalExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.inheritCoverGrammar(this.parseBinaryExpression);
	        if (this.match('?')) {
	            this.nextToken();
	            var previousAllowIn = this.context.allowIn;
	            this.context.allowIn = true;
	            var consequent = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowIn = previousAllowIn;
	            this.expect(':');
	            var alternate = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            expr = this.finalize(this.startNode(startToken), new Node.ConditionalExpression(expr, consequent, alternate));
	            this.context.isAssignmentTarget = false;
	            this.context.isBindingElement = false;
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-assignment-operators
	    Parser.prototype.checkPatternParam = function (options, param) {
	        switch (param.type) {
	            case syntax_1.Syntax.Identifier:
	                this.validateParam(options, param, param.name);
	                break;
	            case syntax_1.Syntax.RestElement:
	                this.checkPatternParam(options, param.argument);
	                break;
	            case syntax_1.Syntax.AssignmentPattern:
	                this.checkPatternParam(options, param.left);
	                break;
	            case syntax_1.Syntax.ArrayPattern:
	                for (var i = 0; i < param.elements.length; i++) {
	                    if (param.elements[i] !== null) {
	                        this.checkPatternParam(options, param.elements[i]);
	                    }
	                }
	                break;
	            case syntax_1.Syntax.ObjectPattern:
	                for (var i = 0; i < param.properties.length; i++) {
	                    this.checkPatternParam(options, param.properties[i].value);
	                }
	                break;
	            default:
	                break;
	        }
	        options.simple = options.simple && (param instanceof Node.Identifier);
	    };
	    Parser.prototype.reinterpretAsCoverFormalsList = function (expr) {
	        var params = [expr];
	        var options;
	        var asyncArrow = false;
	        switch (expr.type) {
	            case syntax_1.Syntax.Identifier:
	                break;
	            case ArrowParameterPlaceHolder:
	                params = expr.params;
	                asyncArrow = expr.async;
	                break;
	            default:
	                return null;
	        }
	        options = {
	            simple: true,
	            paramSet: {}
	        };
	        for (var i = 0; i < params.length; ++i) {
	            var param = params[i];
	            if (param.type === syntax_1.Syntax.AssignmentPattern) {
	                if (param.right.type === syntax_1.Syntax.YieldExpression) {
	                    if (param.right.argument) {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                    param.right.type = syntax_1.Syntax.Identifier;
	                    param.right.name = 'yield';
	                    delete param.right.argument;
	                    delete param.right.delegate;
	                }
	            }
	            else if (asyncArrow && param.type === syntax_1.Syntax.Identifier && param.name === 'await') {
	                this.throwUnexpectedToken(this.lookahead);
	            }
	            this.checkPatternParam(options, param);
	            params[i] = param;
	        }
	        if (this.context.strict || !this.context.allowYield) {
	            for (var i = 0; i < params.length; ++i) {
	                var param = params[i];
	                if (param.type === syntax_1.Syntax.YieldExpression) {
	                    this.throwUnexpectedToken(this.lookahead);
	                }
	            }
	        }
	        if (options.message === messages_1.Messages.StrictParamDupe) {
	            var token = this.context.strict ? options.stricted : options.firstRestricted;
	            this.throwUnexpectedToken(token, options.message);
	        }
	        return {
	            simple: options.simple,
	            params: params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.parseAssignmentExpression = function () {
	        var expr;
	        if (!this.context.allowYield && this.matchKeyword('yield')) {
	            expr = this.parseYieldExpression();
	        }
	        else {
	            var startToken = this.lookahead;
	            var token = startToken;
	            expr = this.parseConditionalExpression();
	            if (token.type === 3 /* Identifier */ && (token.lineNumber === this.lookahead.lineNumber) && token.value === 'async') {
	                if (this.lookahead.type === 3 /* Identifier */ || this.matchKeyword('yield')) {
	                    var arg = this.parsePrimaryExpression();
	                    this.reinterpretExpressionAsPattern(arg);
	                    expr = {
	                        type: ArrowParameterPlaceHolder,
	                        params: [arg],
	                        async: true
	                    };
	                }
	            }
	            if (expr.type === ArrowParameterPlaceHolder || this.match('=>')) {
	                // https://tc39.github.io/ecma262/#sec-arrow-function-definitions
	                this.context.isAssignmentTarget = false;
	                this.context.isBindingElement = false;
	                var isAsync = expr.async;
	                var list = this.reinterpretAsCoverFormalsList(expr);
	                if (list) {
	                    if (this.hasLineTerminator) {
	                        this.tolerateUnexpectedToken(this.lookahead);
	                    }
	                    this.context.firstCoverInitializedNameError = null;
	                    var previousStrict = this.context.strict;
	                    var previousAllowStrictDirective = this.context.allowStrictDirective;
	                    this.context.allowStrictDirective = list.simple;
	                    var previousAllowYield = this.context.allowYield;
	                    var previousAwait = this.context.await;
	                    this.context.allowYield = true;
	                    this.context.await = isAsync;
	                    var node = this.startNode(startToken);
	                    this.expect('=>');
	                    var body = void 0;
	                    if (this.match('{')) {
	                        var previousAllowIn = this.context.allowIn;
	                        this.context.allowIn = true;
	                        body = this.parseFunctionSourceElements();
	                        this.context.allowIn = previousAllowIn;
	                    }
	                    else {
	                        body = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    }
	                    var expression = body.type !== syntax_1.Syntax.BlockStatement;
	                    if (this.context.strict && list.firstRestricted) {
	                        this.throwUnexpectedToken(list.firstRestricted, list.message);
	                    }
	                    if (this.context.strict && list.stricted) {
	                        this.tolerateUnexpectedToken(list.stricted, list.message);
	                    }
	                    expr = isAsync ? this.finalize(node, new Node.AsyncArrowFunctionExpression(list.params, body, expression)) :
	                        this.finalize(node, new Node.ArrowFunctionExpression(list.params, body, expression));
	                    this.context.strict = previousStrict;
	                    this.context.allowStrictDirective = previousAllowStrictDirective;
	                    this.context.allowYield = previousAllowYield;
	                    this.context.await = previousAwait;
	                }
	            }
	            else {
	                if (this.matchAssign()) {
	                    if (!this.context.isAssignmentTarget) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInAssignment);
	                    }
	                    if (this.context.strict && expr.type === syntax_1.Syntax.Identifier) {
	                        var id = expr;
	                        if (this.scanner.isRestrictedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictLHSAssignment);
	                        }
	                        if (this.scanner.isStrictModeReservedWord(id.name)) {
	                            this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	                        }
	                    }
	                    if (!this.match('=')) {
	                        this.context.isAssignmentTarget = false;
	                        this.context.isBindingElement = false;
	                    }
	                    else {
	                        this.reinterpretExpressionAsPattern(expr);
	                    }
	                    token = this.nextToken();
	                    var operator = token.value;
	                    var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                    expr = this.finalize(this.startNode(startToken), new Node.AssignmentExpression(operator, expr, right));
	                    this.context.firstCoverInitializedNameError = null;
	                }
	            }
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-comma-operator
	    Parser.prototype.parseExpression = function () {
	        var startToken = this.lookahead;
	        var expr = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        if (this.match(',')) {
	            var expressions = [];
	            expressions.push(expr);
	            while (this.lookahead.type !== 2 /* EOF */) {
	                if (!this.match(',')) {
	                    break;
	                }
	                this.nextToken();
	                expressions.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	            }
	            expr = this.finalize(this.startNode(startToken), new Node.SequenceExpression(expressions));
	        }
	        return expr;
	    };
	    // https://tc39.github.io/ecma262/#sec-block
	    Parser.prototype.parseStatementListItem = function () {
	        var statement;
	        this.context.isAssignmentTarget = true;
	        this.context.isBindingElement = true;
	        if (this.lookahead.type === 4 /* Keyword */) {
	            switch (this.lookahead.value) {
	                case 'export':
	                    if (!this.context.isModule) {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalExportDeclaration);
	                    }
	                    statement = this.parseExportDeclaration();
	                    break;
	                case 'import':
	                    if (!this.context.isModule) {
	                        this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.IllegalImportDeclaration);
	                    }
	                    statement = this.parseImportDeclaration();
	                    break;
	                case 'const':
	                    statement = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'function':
	                    statement = this.parseFunctionDeclaration();
	                    break;
	                case 'class':
	                    statement = this.parseClassDeclaration();
	                    break;
	                case 'let':
	                    statement = this.isLexicalDeclaration() ? this.parseLexicalDeclaration({ inFor: false }) : this.parseStatement();
	                    break;
	                default:
	                    statement = this.parseStatement();
	                    break;
	            }
	        }
	        else {
	            statement = this.parseStatement();
	        }
	        return statement;
	    };
	    Parser.prototype.parseBlock = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var block = [];
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            block.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.BlockStatement(block));
	    };
	    // https://tc39.github.io/ecma262/#sec-let-and-const-declarations
	    Parser.prototype.parseLexicalBinding = function (kind, options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, kind);
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(id.name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (kind === 'const') {
	            if (!this.matchKeyword('in') && !this.matchContextualKeyword('of')) {
	                if (this.match('=')) {
	                    this.nextToken();
	                    init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	                }
	                else {
	                    this.throwError(messages_1.Messages.DeclarationMissingInitializer, 'const');
	                }
	            }
	        }
	        else if ((!options.inFor && id.type !== syntax_1.Syntax.Identifier) || this.match('=')) {
	            this.expect('=');
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseBindingList = function (kind, options) {
	        var list = [this.parseLexicalBinding(kind, options)];
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseLexicalBinding(kind, options));
	        }
	        return list;
	    };
	    Parser.prototype.isLexicalDeclaration = function () {
	        var state = this.scanner.saveState();
	        this.scanner.scanComments();
	        var next = this.scanner.lex();
	        this.scanner.restoreState(state);
	        return (next.type === 3 /* Identifier */) ||
	            (next.type === 7 /* Punctuator */ && next.value === '[') ||
	            (next.type === 7 /* Punctuator */ && next.value === '{') ||
	            (next.type === 4 /* Keyword */ && next.value === 'let') ||
	            (next.type === 4 /* Keyword */ && next.value === 'yield');
	    };
	    Parser.prototype.parseLexicalDeclaration = function (options) {
	        var node = this.createNode();
	        var kind = this.nextToken().value;
	        assert_1.assert(kind === 'let' || kind === 'const', 'Lexical declaration must be either let or const');
	        var declarations = this.parseBindingList(kind, options);
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, kind));
	    };
	    // https://tc39.github.io/ecma262/#sec-destructuring-binding-patterns
	    Parser.prototype.parseBindingRestElement = function (params, kind) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params, kind);
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseArrayPattern = function (params, kind) {
	        var node = this.createNode();
	        this.expect('[');
	        var elements = [];
	        while (!this.match(']')) {
	            if (this.match(',')) {
	                this.nextToken();
	                elements.push(null);
	            }
	            else {
	                if (this.match('...')) {
	                    elements.push(this.parseBindingRestElement(params, kind));
	                    break;
	                }
	                else {
	                    elements.push(this.parsePatternWithDefault(params, kind));
	                }
	                if (!this.match(']')) {
	                    this.expect(',');
	                }
	            }
	        }
	        this.expect(']');
	        return this.finalize(node, new Node.ArrayPattern(elements));
	    };
	    Parser.prototype.parsePropertyPattern = function (params, kind) {
	        var node = this.createNode();
	        var computed = false;
	        var shorthand = false;
	        var method = false;
	        var key;
	        var value;
	        if (this.lookahead.type === 3 /* Identifier */) {
	            var keyToken = this.lookahead;
	            key = this.parseVariableIdentifier();
	            var init = this.finalize(node, new Node.Identifier(keyToken.value));
	            if (this.match('=')) {
	                params.push(keyToken);
	                shorthand = true;
	                this.nextToken();
	                var expr = this.parseAssignmentExpression();
	                value = this.finalize(this.startNode(keyToken), new Node.AssignmentPattern(init, expr));
	            }
	            else if (!this.match(':')) {
	                params.push(keyToken);
	                shorthand = true;
	                value = init;
	            }
	            else {
	                this.expect(':');
	                value = this.parsePatternWithDefault(params, kind);
	            }
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            this.expect(':');
	            value = this.parsePatternWithDefault(params, kind);
	        }
	        return this.finalize(node, new Node.Property('init', key, computed, value, method, shorthand));
	    };
	    Parser.prototype.parseObjectPattern = function (params, kind) {
	        var node = this.createNode();
	        var properties = [];
	        this.expect('{');
	        while (!this.match('}')) {
	            properties.push(this.parsePropertyPattern(params, kind));
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return this.finalize(node, new Node.ObjectPattern(properties));
	    };
	    Parser.prototype.parsePattern = function (params, kind) {
	        var pattern;
	        if (this.match('[')) {
	            pattern = this.parseArrayPattern(params, kind);
	        }
	        else if (this.match('{')) {
	            pattern = this.parseObjectPattern(params, kind);
	        }
	        else {
	            if (this.matchKeyword('let') && (kind === 'const' || kind === 'let')) {
	                this.tolerateUnexpectedToken(this.lookahead, messages_1.Messages.LetInLexicalBinding);
	            }
	            params.push(this.lookahead);
	            pattern = this.parseVariableIdentifier(kind);
	        }
	        return pattern;
	    };
	    Parser.prototype.parsePatternWithDefault = function (params, kind) {
	        var startToken = this.lookahead;
	        var pattern = this.parsePattern(params, kind);
	        if (this.match('=')) {
	            this.nextToken();
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = true;
	            var right = this.isolateCoverGrammar(this.parseAssignmentExpression);
	            this.context.allowYield = previousAllowYield;
	            pattern = this.finalize(this.startNode(startToken), new Node.AssignmentPattern(pattern, right));
	        }
	        return pattern;
	    };
	    // https://tc39.github.io/ecma262/#sec-variable-statement
	    Parser.prototype.parseVariableIdentifier = function (kind) {
	        var node = this.createNode();
	        var token = this.nextToken();
	        if (token.type === 4 /* Keyword */ && token.value === 'yield') {
	            if (this.context.strict) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else if (!this.context.allowYield) {
	                this.throwUnexpectedToken(token);
	            }
	        }
	        else if (token.type !== 3 /* Identifier */) {
	            if (this.context.strict && token.type === 4 /* Keyword */ && this.scanner.isStrictModeReservedWord(token.value)) {
	                this.tolerateUnexpectedToken(token, messages_1.Messages.StrictReservedWord);
	            }
	            else {
	                if (this.context.strict || token.value !== 'let' || kind !== 'var') {
	                    this.throwUnexpectedToken(token);
	                }
	            }
	        }
	        else if ((this.context.isModule || this.context.await) && token.type === 3 /* Identifier */ && token.value === 'await') {
	            this.tolerateUnexpectedToken(token);
	        }
	        return this.finalize(node, new Node.Identifier(token.value));
	    };
	    Parser.prototype.parseVariableDeclaration = function (options) {
	        var node = this.createNode();
	        var params = [];
	        var id = this.parsePattern(params, 'var');
	        if (this.context.strict && id.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(id.name)) {
	                this.tolerateError(messages_1.Messages.StrictVarName);
	            }
	        }
	        var init = null;
	        if (this.match('=')) {
	            this.nextToken();
	            init = this.isolateCoverGrammar(this.parseAssignmentExpression);
	        }
	        else if (id.type !== syntax_1.Syntax.Identifier && !options.inFor) {
	            this.expect('=');
	        }
	        return this.finalize(node, new Node.VariableDeclarator(id, init));
	    };
	    Parser.prototype.parseVariableDeclarationList = function (options) {
	        var opt = { inFor: options.inFor };
	        var list = [];
	        list.push(this.parseVariableDeclaration(opt));
	        while (this.match(',')) {
	            this.nextToken();
	            list.push(this.parseVariableDeclaration(opt));
	        }
	        return list;
	    };
	    Parser.prototype.parseVariableStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('var');
	        var declarations = this.parseVariableDeclarationList({ inFor: false });
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.VariableDeclaration(declarations, 'var'));
	    };
	    // https://tc39.github.io/ecma262/#sec-empty-statement
	    Parser.prototype.parseEmptyStatement = function () {
	        var node = this.createNode();
	        this.expect(';');
	        return this.finalize(node, new Node.EmptyStatement());
	    };
	    // https://tc39.github.io/ecma262/#sec-expression-statement
	    Parser.prototype.parseExpressionStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ExpressionStatement(expr));
	    };
	    // https://tc39.github.io/ecma262/#sec-if-statement
	    Parser.prototype.parseIfClause = function () {
	        if (this.context.strict && this.matchKeyword('function')) {
	            this.tolerateError(messages_1.Messages.StrictFunction);
	        }
	        return this.parseStatement();
	    };
	    Parser.prototype.parseIfStatement = function () {
	        var node = this.createNode();
	        var consequent;
	        var alternate = null;
	        this.expectKeyword('if');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            consequent = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            consequent = this.parseIfClause();
	            if (this.matchKeyword('else')) {
	                this.nextToken();
	                alternate = this.parseIfClause();
	            }
	        }
	        return this.finalize(node, new Node.IfStatement(test, consequent, alternate));
	    };
	    // https://tc39.github.io/ecma262/#sec-do-while-statement
	    Parser.prototype.parseDoWhileStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('do');
	        var previousInIteration = this.context.inIteration;
	        this.context.inIteration = true;
	        var body = this.parseStatement();
	        this.context.inIteration = previousInIteration;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	        }
	        else {
	            this.expect(')');
	            if (this.match(';')) {
	                this.nextToken();
	            }
	        }
	        return this.finalize(node, new Node.DoWhileStatement(body, test));
	    };
	    // https://tc39.github.io/ecma262/#sec-while-statement
	    Parser.prototype.parseWhileStatement = function () {
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('while');
	        this.expect('(');
	        var test = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.parseStatement();
	            this.context.inIteration = previousInIteration;
	        }
	        return this.finalize(node, new Node.WhileStatement(test, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-for-statement
	    // https://tc39.github.io/ecma262/#sec-for-in-and-for-of-statements
	    Parser.prototype.parseForStatement = function () {
	        var init = null;
	        var test = null;
	        var update = null;
	        var forIn = true;
	        var left, right;
	        var node = this.createNode();
	        this.expectKeyword('for');
	        this.expect('(');
	        if (this.match(';')) {
	            this.nextToken();
	        }
	        else {
	            if (this.matchKeyword('var')) {
	                init = this.createNode();
	                this.nextToken();
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                var declarations = this.parseVariableDeclarationList({ inFor: true });
	                this.context.allowIn = previousAllowIn;
	                if (declarations.length === 1 && this.matchKeyword('in')) {
	                    var decl = declarations[0];
	                    if (decl.init && (decl.id.type === syntax_1.Syntax.ArrayPattern || decl.id.type === syntax_1.Syntax.ObjectPattern || this.context.strict)) {
	                        this.tolerateError(messages_1.Messages.ForInOfLoopInitializer, 'for-in');
	                    }
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    init = this.finalize(init, new Node.VariableDeclaration(declarations, 'var'));
	                    this.expect(';');
	                }
	            }
	            else if (this.matchKeyword('const') || this.matchKeyword('let')) {
	                init = this.createNode();
	                var kind = this.nextToken().value;
	                if (!this.context.strict && this.lookahead.value === 'in') {
	                    init = this.finalize(init, new Node.Identifier(kind));
	                    this.nextToken();
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else {
	                    var previousAllowIn = this.context.allowIn;
	                    this.context.allowIn = false;
	                    var declarations = this.parseBindingList(kind, { inFor: true });
	                    this.context.allowIn = previousAllowIn;
	                    if (declarations.length === 1 && declarations[0].init === null && this.matchKeyword('in')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseExpression();
	                        init = null;
	                    }
	                    else if (declarations.length === 1 && declarations[0].init === null && this.matchContextualKeyword('of')) {
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                        this.nextToken();
	                        left = init;
	                        right = this.parseAssignmentExpression();
	                        init = null;
	                        forIn = false;
	                    }
	                    else {
	                        this.consumeSemicolon();
	                        init = this.finalize(init, new Node.VariableDeclaration(declarations, kind));
	                    }
	                }
	            }
	            else {
	                var initStartToken = this.lookahead;
	                var previousAllowIn = this.context.allowIn;
	                this.context.allowIn = false;
	                init = this.inheritCoverGrammar(this.parseAssignmentExpression);
	                this.context.allowIn = previousAllowIn;
	                if (this.matchKeyword('in')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForIn);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseExpression();
	                    init = null;
	                }
	                else if (this.matchContextualKeyword('of')) {
	                    if (!this.context.isAssignmentTarget || init.type === syntax_1.Syntax.AssignmentExpression) {
	                        this.tolerateError(messages_1.Messages.InvalidLHSInForLoop);
	                    }
	                    this.nextToken();
	                    this.reinterpretExpressionAsPattern(init);
	                    left = init;
	                    right = this.parseAssignmentExpression();
	                    init = null;
	                    forIn = false;
	                }
	                else {
	                    if (this.match(',')) {
	                        var initSeq = [init];
	                        while (this.match(',')) {
	                            this.nextToken();
	                            initSeq.push(this.isolateCoverGrammar(this.parseAssignmentExpression));
	                        }
	                        init = this.finalize(this.startNode(initStartToken), new Node.SequenceExpression(initSeq));
	                    }
	                    this.expect(';');
	                }
	            }
	        }
	        if (typeof left === 'undefined') {
	            if (!this.match(';')) {
	                test = this.parseExpression();
	            }
	            this.expect(';');
	            if (!this.match(')')) {
	                update = this.parseExpression();
	            }
	        }
	        var body;
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            var previousInIteration = this.context.inIteration;
	            this.context.inIteration = true;
	            body = this.isolateCoverGrammar(this.parseStatement);
	            this.context.inIteration = previousInIteration;
	        }
	        return (typeof left === 'undefined') ?
	            this.finalize(node, new Node.ForStatement(init, test, update, body)) :
	            forIn ? this.finalize(node, new Node.ForInStatement(left, right, body)) :
	                this.finalize(node, new Node.ForOfStatement(left, right, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-continue-statement
	    Parser.prototype.parseContinueStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('continue');
	        var label = null;
	        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {
	            var id = this.parseVariableIdentifier();
	            label = id;
	            var key = '$' + id.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, id.name);
	            }
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration) {
	            this.throwError(messages_1.Messages.IllegalContinue);
	        }
	        return this.finalize(node, new Node.ContinueStatement(label));
	    };
	    // https://tc39.github.io/ecma262/#sec-break-statement
	    Parser.prototype.parseBreakStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('break');
	        var label = null;
	        if (this.lookahead.type === 3 /* Identifier */ && !this.hasLineTerminator) {
	            var id = this.parseVariableIdentifier();
	            var key = '$' + id.name;
	            if (!Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.UnknownLabel, id.name);
	            }
	            label = id;
	        }
	        this.consumeSemicolon();
	        if (label === null && !this.context.inIteration && !this.context.inSwitch) {
	            this.throwError(messages_1.Messages.IllegalBreak);
	        }
	        return this.finalize(node, new Node.BreakStatement(label));
	    };
	    // https://tc39.github.io/ecma262/#sec-return-statement
	    Parser.prototype.parseReturnStatement = function () {
	        if (!this.context.inFunctionBody) {
	            this.tolerateError(messages_1.Messages.IllegalReturn);
	        }
	        var node = this.createNode();
	        this.expectKeyword('return');
	        var hasArgument = (!this.match(';') && !this.match('}') &&
	            !this.hasLineTerminator && this.lookahead.type !== 2 /* EOF */) ||
	            this.lookahead.type === 8 /* StringLiteral */ ||
	            this.lookahead.type === 10 /* Template */;
	        var argument = hasArgument ? this.parseExpression() : null;
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ReturnStatement(argument));
	    };
	    // https://tc39.github.io/ecma262/#sec-with-statement
	    Parser.prototype.parseWithStatement = function () {
	        if (this.context.strict) {
	            this.tolerateError(messages_1.Messages.StrictModeWith);
	        }
	        var node = this.createNode();
	        var body;
	        this.expectKeyword('with');
	        this.expect('(');
	        var object = this.parseExpression();
	        if (!this.match(')') && this.config.tolerant) {
	            this.tolerateUnexpectedToken(this.nextToken());
	            body = this.finalize(this.createNode(), new Node.EmptyStatement());
	        }
	        else {
	            this.expect(')');
	            body = this.parseStatement();
	        }
	        return this.finalize(node, new Node.WithStatement(object, body));
	    };
	    // https://tc39.github.io/ecma262/#sec-switch-statement
	    Parser.prototype.parseSwitchCase = function () {
	        var node = this.createNode();
	        var test;
	        if (this.matchKeyword('default')) {
	            this.nextToken();
	            test = null;
	        }
	        else {
	            this.expectKeyword('case');
	            test = this.parseExpression();
	        }
	        this.expect(':');
	        var consequent = [];
	        while (true) {
	            if (this.match('}') || this.matchKeyword('default') || this.matchKeyword('case')) {
	                break;
	            }
	            consequent.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.SwitchCase(test, consequent));
	    };
	    Parser.prototype.parseSwitchStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('switch');
	        this.expect('(');
	        var discriminant = this.parseExpression();
	        this.expect(')');
	        var previousInSwitch = this.context.inSwitch;
	        this.context.inSwitch = true;
	        var cases = [];
	        var defaultFound = false;
	        this.expect('{');
	        while (true) {
	            if (this.match('}')) {
	                break;
	            }
	            var clause = this.parseSwitchCase();
	            if (clause.test === null) {
	                if (defaultFound) {
	                    this.throwError(messages_1.Messages.MultipleDefaultsInSwitch);
	                }
	                defaultFound = true;
	            }
	            cases.push(clause);
	        }
	        this.expect('}');
	        this.context.inSwitch = previousInSwitch;
	        return this.finalize(node, new Node.SwitchStatement(discriminant, cases));
	    };
	    // https://tc39.github.io/ecma262/#sec-labelled-statements
	    Parser.prototype.parseLabelledStatement = function () {
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var statement;
	        if ((expr.type === syntax_1.Syntax.Identifier) && this.match(':')) {
	            this.nextToken();
	            var id = expr;
	            var key = '$' + id.name;
	            if (Object.prototype.hasOwnProperty.call(this.context.labelSet, key)) {
	                this.throwError(messages_1.Messages.Redeclaration, 'Label', id.name);
	            }
	            this.context.labelSet[key] = true;
	            var body = void 0;
	            if (this.matchKeyword('class')) {
	                this.tolerateUnexpectedToken(this.lookahead);
	                body = this.parseClassDeclaration();
	            }
	            else if (this.matchKeyword('function')) {
	                var token = this.lookahead;
	                var declaration = this.parseFunctionDeclaration();
	                if (this.context.strict) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunction);
	                }
	                else if (declaration.generator) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.GeneratorInLegacyContext);
	                }
	                body = declaration;
	            }
	            else {
	                body = this.parseStatement();
	            }
	            delete this.context.labelSet[key];
	            statement = new Node.LabeledStatement(id, body);
	        }
	        else {
	            this.consumeSemicolon();
	            statement = new Node.ExpressionStatement(expr);
	        }
	        return this.finalize(node, statement);
	    };
	    // https://tc39.github.io/ecma262/#sec-throw-statement
	    Parser.prototype.parseThrowStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('throw');
	        if (this.hasLineTerminator) {
	            this.throwError(messages_1.Messages.NewlineAfterThrow);
	        }
	        var argument = this.parseExpression();
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ThrowStatement(argument));
	    };
	    // https://tc39.github.io/ecma262/#sec-try-statement
	    Parser.prototype.parseCatchClause = function () {
	        var node = this.createNode();
	        this.expectKeyword('catch');
	        this.expect('(');
	        if (this.match(')')) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        var params = [];
	        var param = this.parsePattern(params);
	        var paramMap = {};
	        for (var i = 0; i < params.length; i++) {
	            var key = '$' + params[i].value;
	            if (Object.prototype.hasOwnProperty.call(paramMap, key)) {
	                this.tolerateError(messages_1.Messages.DuplicateBinding, params[i].value);
	            }
	            paramMap[key] = true;
	        }
	        if (this.context.strict && param.type === syntax_1.Syntax.Identifier) {
	            if (this.scanner.isRestrictedWord(param.name)) {
	                this.tolerateError(messages_1.Messages.StrictCatchVariable);
	            }
	        }
	        this.expect(')');
	        var body = this.parseBlock();
	        return this.finalize(node, new Node.CatchClause(param, body));
	    };
	    Parser.prototype.parseFinallyClause = function () {
	        this.expectKeyword('finally');
	        return this.parseBlock();
	    };
	    Parser.prototype.parseTryStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('try');
	        var block = this.parseBlock();
	        var handler = this.matchKeyword('catch') ? this.parseCatchClause() : null;
	        var finalizer = this.matchKeyword('finally') ? this.parseFinallyClause() : null;
	        if (!handler && !finalizer) {
	            this.throwError(messages_1.Messages.NoCatchOrFinally);
	        }
	        return this.finalize(node, new Node.TryStatement(block, handler, finalizer));
	    };
	    // https://tc39.github.io/ecma262/#sec-debugger-statement
	    Parser.prototype.parseDebuggerStatement = function () {
	        var node = this.createNode();
	        this.expectKeyword('debugger');
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.DebuggerStatement());
	    };
	    // https://tc39.github.io/ecma262/#sec-ecmascript-language-statements-and-declarations
	    Parser.prototype.parseStatement = function () {
	        var statement;
	        switch (this.lookahead.type) {
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 6 /* NumericLiteral */:
	            case 8 /* StringLiteral */:
	            case 10 /* Template */:
	            case 9 /* RegularExpression */:
	                statement = this.parseExpressionStatement();
	                break;
	            case 7 /* Punctuator */:
	                var value = this.lookahead.value;
	                if (value === '{') {
	                    statement = this.parseBlock();
	                }
	                else if (value === '(') {
	                    statement = this.parseExpressionStatement();
	                }
	                else if (value === ';') {
	                    statement = this.parseEmptyStatement();
	                }
	                else {
	                    statement = this.parseExpressionStatement();
	                }
	                break;
	            case 3 /* Identifier */:
	                statement = this.matchAsyncFunction() ? this.parseFunctionDeclaration() : this.parseLabelledStatement();
	                break;
	            case 4 /* Keyword */:
	                switch (this.lookahead.value) {
	                    case 'break':
	                        statement = this.parseBreakStatement();
	                        break;
	                    case 'continue':
	                        statement = this.parseContinueStatement();
	                        break;
	                    case 'debugger':
	                        statement = this.parseDebuggerStatement();
	                        break;
	                    case 'do':
	                        statement = this.parseDoWhileStatement();
	                        break;
	                    case 'for':
	                        statement = this.parseForStatement();
	                        break;
	                    case 'function':
	                        statement = this.parseFunctionDeclaration();
	                        break;
	                    case 'if':
	                        statement = this.parseIfStatement();
	                        break;
	                    case 'return':
	                        statement = this.parseReturnStatement();
	                        break;
	                    case 'switch':
	                        statement = this.parseSwitchStatement();
	                        break;
	                    case 'throw':
	                        statement = this.parseThrowStatement();
	                        break;
	                    case 'try':
	                        statement = this.parseTryStatement();
	                        break;
	                    case 'var':
	                        statement = this.parseVariableStatement();
	                        break;
	                    case 'while':
	                        statement = this.parseWhileStatement();
	                        break;
	                    case 'with':
	                        statement = this.parseWithStatement();
	                        break;
	                    default:
	                        statement = this.parseExpressionStatement();
	                        break;
	                }
	                break;
	            default:
	                statement = this.throwUnexpectedToken(this.lookahead);
	        }
	        return statement;
	    };
	    // https://tc39.github.io/ecma262/#sec-function-definitions
	    Parser.prototype.parseFunctionSourceElements = function () {
	        var node = this.createNode();
	        this.expect('{');
	        var body = this.parseDirectivePrologues();
	        var previousLabelSet = this.context.labelSet;
	        var previousInIteration = this.context.inIteration;
	        var previousInSwitch = this.context.inSwitch;
	        var previousInFunctionBody = this.context.inFunctionBody;
	        this.context.labelSet = {};
	        this.context.inIteration = false;
	        this.context.inSwitch = false;
	        this.context.inFunctionBody = true;
	        while (this.lookahead.type !== 2 /* EOF */) {
	            if (this.match('}')) {
	                break;
	            }
	            body.push(this.parseStatementListItem());
	        }
	        this.expect('}');
	        this.context.labelSet = previousLabelSet;
	        this.context.inIteration = previousInIteration;
	        this.context.inSwitch = previousInSwitch;
	        this.context.inFunctionBody = previousInFunctionBody;
	        return this.finalize(node, new Node.BlockStatement(body));
	    };
	    Parser.prototype.validateParam = function (options, param, name) {
	        var key = '$' + name;
	        if (this.context.strict) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        else if (!options.firstRestricted) {
	            if (this.scanner.isRestrictedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictParamName;
	            }
	            else if (this.scanner.isStrictModeReservedWord(name)) {
	                options.firstRestricted = param;
	                options.message = messages_1.Messages.StrictReservedWord;
	            }
	            else if (Object.prototype.hasOwnProperty.call(options.paramSet, key)) {
	                options.stricted = param;
	                options.message = messages_1.Messages.StrictParamDupe;
	            }
	        }
	        /* istanbul ignore next */
	        if (typeof Object.defineProperty === 'function') {
	            Object.defineProperty(options.paramSet, key, { value: true, enumerable: true, writable: true, configurable: true });
	        }
	        else {
	            options.paramSet[key] = true;
	        }
	    };
	    Parser.prototype.parseRestElement = function (params) {
	        var node = this.createNode();
	        this.expect('...');
	        var arg = this.parsePattern(params);
	        if (this.match('=')) {
	            this.throwError(messages_1.Messages.DefaultRestParameter);
	        }
	        if (!this.match(')')) {
	            this.throwError(messages_1.Messages.ParameterAfterRestParameter);
	        }
	        return this.finalize(node, new Node.RestElement(arg));
	    };
	    Parser.prototype.parseFormalParameter = function (options) {
	        var params = [];
	        var param = this.match('...') ? this.parseRestElement(params) : this.parsePatternWithDefault(params);
	        for (var i = 0; i < params.length; i++) {
	            this.validateParam(options, params[i], params[i].value);
	        }
	        options.simple = options.simple && (param instanceof Node.Identifier);
	        options.params.push(param);
	    };
	    Parser.prototype.parseFormalParameters = function (firstRestricted) {
	        var options;
	        options = {
	            simple: true,
	            params: [],
	            firstRestricted: firstRestricted
	        };
	        this.expect('(');
	        if (!this.match(')')) {
	            options.paramSet = {};
	            while (this.lookahead.type !== 2 /* EOF */) {
	                this.parseFormalParameter(options);
	                if (this.match(')')) {
	                    break;
	                }
	                this.expect(',');
	                if (this.match(')')) {
	                    break;
	                }
	            }
	        }
	        this.expect(')');
	        return {
	            simple: options.simple,
	            params: options.params,
	            stricted: options.stricted,
	            firstRestricted: options.firstRestricted,
	            message: options.message
	        };
	    };
	    Parser.prototype.matchAsyncFunction = function () {
	        var match = this.matchContextualKeyword('async');
	        if (match) {
	            var state = this.scanner.saveState();
	            this.scanner.scanComments();
	            var next = this.scanner.lex();
	            this.scanner.restoreState(state);
	            match = (state.lineNumber === next.lineNumber) && (next.type === 4 /* Keyword */) && (next.value === 'function');
	        }
	        return match;
	    };
	    Parser.prototype.parseFunctionDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var isAsync = this.matchContextualKeyword('async');
	        if (isAsync) {
	            this.nextToken();
	        }
	        this.expectKeyword('function');
	        var isGenerator = isAsync ? false : this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted = null;
	        if (!identifierIsOptional || !this.match('(')) {
	            var token = this.lookahead;
	            id = this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var previousAllowAwait = this.context.await;
	        var previousAllowYield = this.context.allowYield;
	        this.context.await = isAsync;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = formalParameters.simple;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        this.context.await = previousAllowAwait;
	        this.context.allowYield = previousAllowYield;
	        return isAsync ? this.finalize(node, new Node.AsyncFunctionDeclaration(id, params, body)) :
	            this.finalize(node, new Node.FunctionDeclaration(id, params, body, isGenerator));
	    };
	    Parser.prototype.parseFunctionExpression = function () {
	        var node = this.createNode();
	        var isAsync = this.matchContextualKeyword('async');
	        if (isAsync) {
	            this.nextToken();
	        }
	        this.expectKeyword('function');
	        var isGenerator = isAsync ? false : this.match('*');
	        if (isGenerator) {
	            this.nextToken();
	        }
	        var message;
	        var id = null;
	        var firstRestricted;
	        var previousAllowAwait = this.context.await;
	        var previousAllowYield = this.context.allowYield;
	        this.context.await = isAsync;
	        this.context.allowYield = !isGenerator;
	        if (!this.match('(')) {
	            var token = this.lookahead;
	            id = (!this.context.strict && !isGenerator && this.matchKeyword('yield')) ? this.parseIdentifierName() : this.parseVariableIdentifier();
	            if (this.context.strict) {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.StrictFunctionName);
	                }
	            }
	            else {
	                if (this.scanner.isRestrictedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictFunctionName;
	                }
	                else if (this.scanner.isStrictModeReservedWord(token.value)) {
	                    firstRestricted = token;
	                    message = messages_1.Messages.StrictReservedWord;
	                }
	            }
	        }
	        var formalParameters = this.parseFormalParameters(firstRestricted);
	        var params = formalParameters.params;
	        var stricted = formalParameters.stricted;
	        firstRestricted = formalParameters.firstRestricted;
	        if (formalParameters.message) {
	            message = formalParameters.message;
	        }
	        var previousStrict = this.context.strict;
	        var previousAllowStrictDirective = this.context.allowStrictDirective;
	        this.context.allowStrictDirective = formalParameters.simple;
	        var body = this.parseFunctionSourceElements();
	        if (this.context.strict && firstRestricted) {
	            this.throwUnexpectedToken(firstRestricted, message);
	        }
	        if (this.context.strict && stricted) {
	            this.tolerateUnexpectedToken(stricted, message);
	        }
	        this.context.strict = previousStrict;
	        this.context.allowStrictDirective = previousAllowStrictDirective;
	        this.context.await = previousAllowAwait;
	        this.context.allowYield = previousAllowYield;
	        return isAsync ? this.finalize(node, new Node.AsyncFunctionExpression(id, params, body)) :
	            this.finalize(node, new Node.FunctionExpression(id, params, body, isGenerator));
	    };
	    // https://tc39.github.io/ecma262/#sec-directive-prologues-and-the-use-strict-directive
	    Parser.prototype.parseDirective = function () {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var expr = this.parseExpression();
	        var directive = (expr.type === syntax_1.Syntax.Literal) ? this.getTokenRaw(token).slice(1, -1) : null;
	        this.consumeSemicolon();
	        return this.finalize(node, directive ? new Node.Directive(expr, directive) : new Node.ExpressionStatement(expr));
	    };
	    Parser.prototype.parseDirectivePrologues = function () {
	        var firstRestricted = null;
	        var body = [];
	        while (true) {
	            var token = this.lookahead;
	            if (token.type !== 8 /* StringLiteral */) {
	                break;
	            }
	            var statement = this.parseDirective();
	            body.push(statement);
	            var directive = statement.directive;
	            if (typeof directive !== 'string') {
	                break;
	            }
	            if (directive === 'use strict') {
	                this.context.strict = true;
	                if (firstRestricted) {
	                    this.tolerateUnexpectedToken(firstRestricted, messages_1.Messages.StrictOctalLiteral);
	                }
	                if (!this.context.allowStrictDirective) {
	                    this.tolerateUnexpectedToken(token, messages_1.Messages.IllegalLanguageModeDirective);
	                }
	            }
	            else {
	                if (!firstRestricted && token.octal) {
	                    firstRestricted = token;
	                }
	            }
	        }
	        return body;
	    };
	    // https://tc39.github.io/ecma262/#sec-method-definitions
	    Parser.prototype.qualifiedPropertyName = function (token) {
	        switch (token.type) {
	            case 3 /* Identifier */:
	            case 8 /* StringLiteral */:
	            case 1 /* BooleanLiteral */:
	            case 5 /* NullLiteral */:
	            case 6 /* NumericLiteral */:
	            case 4 /* Keyword */:
	                return true;
	            case 7 /* Punctuator */:
	                return token.value === '[';
	            default:
	                break;
	        }
	        return false;
	    };
	    Parser.prototype.parseGetterMethod = function () {
	        var node = this.createNode();
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters();
	        if (formalParameters.params.length > 0) {
	            this.tolerateError(messages_1.Messages.BadGetterArity);
	        }
	        var method = this.parsePropertyMethod(formalParameters);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));
	    };
	    Parser.prototype.parseSetterMethod = function () {
	        var node = this.createNode();
	        var isGenerator = false;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = !isGenerator;
	        var formalParameters = this.parseFormalParameters();
	        if (formalParameters.params.length !== 1) {
	            this.tolerateError(messages_1.Messages.BadSetterArity);
	        }
	        else if (formalParameters.params[0] instanceof Node.RestElement) {
	            this.tolerateError(messages_1.Messages.BadSetterRestParameter);
	        }
	        var method = this.parsePropertyMethod(formalParameters);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, formalParameters.params, method, isGenerator));
	    };
	    Parser.prototype.parseGeneratorMethod = function () {
	        var node = this.createNode();
	        var isGenerator = true;
	        var previousAllowYield = this.context.allowYield;
	        this.context.allowYield = true;
	        var params = this.parseFormalParameters();
	        this.context.allowYield = false;
	        var method = this.parsePropertyMethod(params);
	        this.context.allowYield = previousAllowYield;
	        return this.finalize(node, new Node.FunctionExpression(null, params.params, method, isGenerator));
	    };
	    // https://tc39.github.io/ecma262/#sec-generator-function-definitions
	    Parser.prototype.isStartOfExpression = function () {
	        var start = true;
	        var value = this.lookahead.value;
	        switch (this.lookahead.type) {
	            case 7 /* Punctuator */:
	                start = (value === '[') || (value === '(') || (value === '{') ||
	                    (value === '+') || (value === '-') ||
	                    (value === '!') || (value === '~') ||
	                    (value === '++') || (value === '--') ||
	                    (value === '/') || (value === '/='); // regular expression literal
	                break;
	            case 4 /* Keyword */:
	                start = (value === 'class') || (value === 'delete') ||
	                    (value === 'function') || (value === 'let') || (value === 'new') ||
	                    (value === 'super') || (value === 'this') || (value === 'typeof') ||
	                    (value === 'void') || (value === 'yield');
	                break;
	            default:
	                break;
	        }
	        return start;
	    };
	    Parser.prototype.parseYieldExpression = function () {
	        var node = this.createNode();
	        this.expectKeyword('yield');
	        var argument = null;
	        var delegate = false;
	        if (!this.hasLineTerminator) {
	            var previousAllowYield = this.context.allowYield;
	            this.context.allowYield = false;
	            delegate = this.match('*');
	            if (delegate) {
	                this.nextToken();
	                argument = this.parseAssignmentExpression();
	            }
	            else if (this.isStartOfExpression()) {
	                argument = this.parseAssignmentExpression();
	            }
	            this.context.allowYield = previousAllowYield;
	        }
	        return this.finalize(node, new Node.YieldExpression(argument, delegate));
	    };
	    // https://tc39.github.io/ecma262/#sec-class-definitions
	    Parser.prototype.parseClassElement = function (hasConstructor) {
	        var token = this.lookahead;
	        var node = this.createNode();
	        var kind = '';
	        var key = null;
	        var value = null;
	        var computed = false;
	        var method = false;
	        var isStatic = false;
	        var isAsync = false;
	        if (this.match('*')) {
	            this.nextToken();
	        }
	        else {
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            var id = key;
	            if (id.name === 'static' && (this.qualifiedPropertyName(this.lookahead) || this.match('*'))) {
	                token = this.lookahead;
	                isStatic = true;
	                computed = this.match('[');
	                if (this.match('*')) {
	                    this.nextToken();
	                }
	                else {
	                    key = this.parseObjectPropertyKey();
	                }
	            }
	            if ((token.type === 3 /* Identifier */) && !this.hasLineTerminator && (token.value === 'async')) {
	                var punctuator = this.lookahead.value;
	                if (punctuator !== ':' && punctuator !== '(' && punctuator !== '*') {
	                    isAsync = true;
	                    token = this.lookahead;
	                    key = this.parseObjectPropertyKey();
	                    if (token.type === 3 /* Identifier */ && token.value === 'constructor') {
	                        this.tolerateUnexpectedToken(token, messages_1.Messages.ConstructorIsAsync);
	                    }
	                }
	            }
	        }
	        var lookaheadPropertyKey = this.qualifiedPropertyName(this.lookahead);
	        if (token.type === 3 /* Identifier */) {
	            if (token.value === 'get' && lookaheadPropertyKey) {
	                kind = 'get';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                this.context.allowYield = false;
	                value = this.parseGetterMethod();
	            }
	            else if (token.value === 'set' && lookaheadPropertyKey) {
	                kind = 'set';
	                computed = this.match('[');
	                key = this.parseObjectPropertyKey();
	                value = this.parseSetterMethod();
	            }
	        }
	        else if (token.type === 7 /* Punctuator */ && token.value === '*' && lookaheadPropertyKey) {
	            kind = 'init';
	            computed = this.match('[');
	            key = this.parseObjectPropertyKey();
	            value = this.parseGeneratorMethod();
	            method = true;
	        }
	        if (!kind && key && this.match('(')) {
	            kind = 'init';
	            value = isAsync ? this.parsePropertyMethodAsyncFunction() : this.parsePropertyMethodFunction();
	            method = true;
	        }
	        if (!kind) {
	            this.throwUnexpectedToken(this.lookahead);
	        }
	        if (kind === 'init') {
	            kind = 'method';
	        }
	        if (!computed) {
	            if (isStatic && this.isPropertyKey(key, 'prototype')) {
	                this.throwUnexpectedToken(token, messages_1.Messages.StaticPrototype);
	            }
	            if (!isStatic && this.isPropertyKey(key, 'constructor')) {
	                if (kind !== 'method' || !method || (value && value.generator)) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.ConstructorSpecialMethod);
	                }
	                if (hasConstructor.value) {
	                    this.throwUnexpectedToken(token, messages_1.Messages.DuplicateConstructor);
	                }
	                else {
	                    hasConstructor.value = true;
	                }
	                kind = 'constructor';
	            }
	        }
	        return this.finalize(node, new Node.MethodDefinition(key, computed, value, kind, isStatic));
	    };
	    Parser.prototype.parseClassElementList = function () {
	        var body = [];
	        var hasConstructor = { value: false };
	        this.expect('{');
	        while (!this.match('}')) {
	            if (this.match(';')) {
	                this.nextToken();
	            }
	            else {
	                body.push(this.parseClassElement(hasConstructor));
	            }
	        }
	        this.expect('}');
	        return body;
	    };
	    Parser.prototype.parseClassBody = function () {
	        var node = this.createNode();
	        var elementList = this.parseClassElementList();
	        return this.finalize(node, new Node.ClassBody(elementList));
	    };
	    Parser.prototype.parseClassDeclaration = function (identifierIsOptional) {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (identifierIsOptional && (this.lookahead.type !== 3 /* Identifier */)) ? null : this.parseVariableIdentifier();
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassDeclaration(id, superClass, classBody));
	    };
	    Parser.prototype.parseClassExpression = function () {
	        var node = this.createNode();
	        var previousStrict = this.context.strict;
	        this.context.strict = true;
	        this.expectKeyword('class');
	        var id = (this.lookahead.type === 3 /* Identifier */) ? this.parseVariableIdentifier() : null;
	        var superClass = null;
	        if (this.matchKeyword('extends')) {
	            this.nextToken();
	            superClass = this.isolateCoverGrammar(this.parseLeftHandSideExpressionAllowCall);
	        }
	        var classBody = this.parseClassBody();
	        this.context.strict = previousStrict;
	        return this.finalize(node, new Node.ClassExpression(id, superClass, classBody));
	    };
	    // https://tc39.github.io/ecma262/#sec-scripts
	    // https://tc39.github.io/ecma262/#sec-modules
	    Parser.prototype.parseModule = function () {
	        this.context.strict = true;
	        this.context.isModule = true;
	        this.scanner.isModule = true;
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.lookahead.type !== 2 /* EOF */) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Module(body));
	    };
	    Parser.prototype.parseScript = function () {
	        var node = this.createNode();
	        var body = this.parseDirectivePrologues();
	        while (this.lookahead.type !== 2 /* EOF */) {
	            body.push(this.parseStatementListItem());
	        }
	        return this.finalize(node, new Node.Script(body));
	    };
	    // https://tc39.github.io/ecma262/#sec-imports
	    Parser.prototype.parseModuleSpecifier = function () {
	        var node = this.createNode();
	        if (this.lookahead.type !== 8 /* StringLiteral */) {
	            this.throwError(messages_1.Messages.InvalidModuleSpecifier);
	        }
	        var token = this.nextToken();
	        var raw = this.getTokenRaw(token);
	        return this.finalize(node, new Node.Literal(token.value, raw));
	    };
	    // import {<foo as bar>} ...;
	    Parser.prototype.parseImportSpecifier = function () {
	        var node = this.createNode();
	        var imported;
	        var local;
	        if (this.lookahead.type === 3 /* Identifier */) {
	            imported = this.parseVariableIdentifier();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	        }
	        else {
	            imported = this.parseIdentifierName();
	            local = imported;
	            if (this.matchContextualKeyword('as')) {
	                this.nextToken();
	                local = this.parseVariableIdentifier();
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	        }
	        return this.finalize(node, new Node.ImportSpecifier(local, imported));
	    };
	    // {foo, bar as bas}
	    Parser.prototype.parseNamedImports = function () {
	        this.expect('{');
	        var specifiers = [];
	        while (!this.match('}')) {
	            specifiers.push(this.parseImportSpecifier());
	            if (!this.match('}')) {
	                this.expect(',');
	            }
	        }
	        this.expect('}');
	        return specifiers;
	    };
	    // import <foo> ...;
	    Parser.prototype.parseImportDefaultSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportDefaultSpecifier(local));
	    };
	    // import <* as foo> ...;
	    Parser.prototype.parseImportNamespaceSpecifier = function () {
	        var node = this.createNode();
	        this.expect('*');
	        if (!this.matchContextualKeyword('as')) {
	            this.throwError(messages_1.Messages.NoAsAfterImportNamespace);
	        }
	        this.nextToken();
	        var local = this.parseIdentifierName();
	        return this.finalize(node, new Node.ImportNamespaceSpecifier(local));
	    };
	    Parser.prototype.parseImportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalImportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('import');
	        var src;
	        var specifiers = [];
	        if (this.lookahead.type === 8 /* StringLiteral */) {
	            // import 'foo';
	            src = this.parseModuleSpecifier();
	        }
	        else {
	            if (this.match('{')) {
	                // import {bar}
	                specifiers = specifiers.concat(this.parseNamedImports());
	            }
	            else if (this.match('*')) {
	                // import * as foo
	                specifiers.push(this.parseImportNamespaceSpecifier());
	            }
	            else if (this.isIdentifierName(this.lookahead) && !this.matchKeyword('default')) {
	                // import foo
	                specifiers.push(this.parseImportDefaultSpecifier());
	                if (this.match(',')) {
	                    this.nextToken();
	                    if (this.match('*')) {
	                        // import foo, * as foo
	                        specifiers.push(this.parseImportNamespaceSpecifier());
	                    }
	                    else if (this.match('{')) {
	                        // import foo, {bar}
	                        specifiers = specifiers.concat(this.parseNamedImports());
	                    }
	                    else {
	                        this.throwUnexpectedToken(this.lookahead);
	                    }
	                }
	            }
	            else {
	                this.throwUnexpectedToken(this.nextToken());
	            }
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            src = this.parseModuleSpecifier();
	        }
	        this.consumeSemicolon();
	        return this.finalize(node, new Node.ImportDeclaration(specifiers, src));
	    };
	    // https://tc39.github.io/ecma262/#sec-exports
	    Parser.prototype.parseExportSpecifier = function () {
	        var node = this.createNode();
	        var local = this.parseIdentifierName();
	        var exported = local;
	        if (this.matchContextualKeyword('as')) {
	            this.nextToken();
	            exported = this.parseIdentifierName();
	        }
	        return this.finalize(node, new Node.ExportSpecifier(local, exported));
	    };
	    Parser.prototype.parseExportDeclaration = function () {
	        if (this.context.inFunctionBody) {
	            this.throwError(messages_1.Messages.IllegalExportDeclaration);
	        }
	        var node = this.createNode();
	        this.expectKeyword('export');
	        var exportDeclaration;
	        if (this.matchKeyword('default')) {
	            // export default ...
	            this.nextToken();
	            if (this.matchKeyword('function')) {
	                // export default function foo () {}
	                // export default function () {}
	                var declaration = this.parseFunctionDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchKeyword('class')) {
	                // export default class foo {}
	                var declaration = this.parseClassDeclaration(true);
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else if (this.matchContextualKeyword('async')) {
	                // export default async function f () {}
	                // export default async function () {}
	                // export default async x => x
	                var declaration = this.matchAsyncFunction() ? this.parseFunctionDeclaration(true) : this.parseAssignmentExpression();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	            else {
	                if (this.matchContextualKeyword('from')) {
	                    this.throwError(messages_1.Messages.UnexpectedToken, this.lookahead.value);
	                }
	                // export default {};
	                // export default [];
	                // export default (1 + 2);
	                var declaration = this.match('{') ? this.parseObjectInitializer() :
	                    this.match('[') ? this.parseArrayInitializer() : this.parseAssignmentExpression();
	                this.consumeSemicolon();
	                exportDeclaration = this.finalize(node, new Node.ExportDefaultDeclaration(declaration));
	            }
	        }
	        else if (this.match('*')) {
	            // export * from 'foo';
	            this.nextToken();
	            if (!this.matchContextualKeyword('from')) {
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            this.nextToken();
	            var src = this.parseModuleSpecifier();
	            this.consumeSemicolon();
	            exportDeclaration = this.finalize(node, new Node.ExportAllDeclaration(src));
	        }
	        else if (this.lookahead.type === 4 /* Keyword */) {
	            // export var f = 1;
	            var declaration = void 0;
	            switch (this.lookahead.value) {
	                case 'let':
	                case 'const':
	                    declaration = this.parseLexicalDeclaration({ inFor: false });
	                    break;
	                case 'var':
	                case 'class':
	                case 'function':
	                    declaration = this.parseStatementListItem();
	                    break;
	                default:
	                    this.throwUnexpectedToken(this.lookahead);
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else if (this.matchAsyncFunction()) {
	            var declaration = this.parseFunctionDeclaration();
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(declaration, [], null));
	        }
	        else {
	            var specifiers = [];
	            var source = null;
	            var isExportFromIdentifier = false;
	            this.expect('{');
	            while (!this.match('}')) {
	                isExportFromIdentifier = isExportFromIdentifier || this.matchKeyword('default');
	                specifiers.push(this.parseExportSpecifier());
	                if (!this.match('}')) {
	                    this.expect(',');
	                }
	            }
	            this.expect('}');
	            if (this.matchContextualKeyword('from')) {
	                // export {default} from 'foo';
	                // export {foo} from 'foo';
	                this.nextToken();
	                source = this.parseModuleSpecifier();
	                this.consumeSemicolon();
	            }
	            else if (isExportFromIdentifier) {
	                // export {default}; // missing fromClause
	                var message = this.lookahead.value ? messages_1.Messages.UnexpectedToken : messages_1.Messages.MissingFromClause;
	                this.throwError(message, this.lookahead.value);
	            }
	            else {
	                // export {foo};
	                this.consumeSemicolon();
	            }
	            exportDeclaration = this.finalize(node, new Node.ExportNamedDeclaration(null, specifiers, source));
	        }
	        return exportDeclaration;
	    };
	    return Parser;
	}());
	exports.Parser = Parser;


/***/ },
/* 9 */
/***/ function(module, exports) {

	"use strict";
	// Ensure the condition is true, otherwise throw an error.
	// This is only to have a better contract semantic, i.e. another safety net
	// to catch a logic error. The condition shall be fulfilled in normal case.
	// Do NOT use this to enforce a certain condition on any user input.
	Object.defineProperty(exports, "__esModule", { value: true });
	function assert(condition, message) {
	    /* istanbul ignore if */
	    if (!condition) {
	        throw new Error('ASSERT: ' + message);
	    }
	}
	exports.assert = assert;


/***/ },
/* 10 */
/***/ function(module, exports) {

	"use strict";
	/* tslint:disable:max-classes-per-file */
	Object.defineProperty(exports, "__esModule", { value: true });
	var ErrorHandler = (function () {
	    function ErrorHandler() {
	        this.errors = [];
	        this.tolerant = false;
	    }
	    ErrorHandler.prototype.recordError = function (error) {
	        this.errors.push(error);
	    };
	    ErrorHandler.prototype.tolerate = function (error) {
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    ErrorHandler.prototype.constructError = function (msg, column) {
	        var error = new Error(msg);
	        try {
	            throw error;
	        }
	        catch (base) {
	            /* istanbul ignore else */
	            if (Object.create && Object.defineProperty) {
	                error = Object.create(base);
	                Object.defineProperty(error, 'column', { value: column });
	            }
	        }
	        /* istanbul ignore next */
	        return error;
	    };
	    ErrorHandler.prototype.createError = function (index, line, col, description) {
	        var msg = 'Line ' + line + ': ' + description;
	        var error = this.constructError(msg, col);
	        error.index = index;
	        error.lineNumber = line;
	        error.description = description;
	        return error;
	    };
	    ErrorHandler.prototype.throwError = function (index, line, col, description) {
	        throw this.createError(index, line, col, description);
	    };
	    ErrorHandler.prototype.tolerateError = function (index, line, col, description) {
	        var error = this.createError(index, line, col, description);
	        if (this.tolerant) {
	            this.recordError(error);
	        }
	        else {
	            throw error;
	        }
	    };
	    return ErrorHandler;
	}());
	exports.ErrorHandler = ErrorHandler;


/***/ },
/* 11 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	// Error messages should be identical to V8.
	exports.Messages = {
	    BadGetterArity: 'Getter must not have any formal parameters',
	    BadSetterArity: 'Setter must have exactly one formal parameter',
	    BadSetterRestParameter: 'Setter function argument must not be a rest parameter',
	    ConstructorIsAsync: 'Class constructor may not be an async method',
	    ConstructorSpecialMethod: 'Class constructor may not be an accessor',
	    DeclarationMissingInitializer: 'Missing initializer in %0 declaration',
	    DefaultRestParameter: 'Unexpected token =',
	    DuplicateBinding: 'Duplicate binding %0',
	    DuplicateConstructor: 'A class may only have one constructor',
	    DuplicateProtoProperty: 'Duplicate __proto__ fields are not allowed in object literals',
	    ForInOfLoopInitializer: '%0 loop variable declaration may not have an initializer',
	    GeneratorInLegacyContext: 'Generator declarations are not allowed in legacy contexts',
	    IllegalBreak: 'Illegal break statement',
	    IllegalContinue: 'Illegal continue statement',
	    IllegalExportDeclaration: 'Unexpected token',
	    IllegalImportDeclaration: 'Unexpected token',
	    IllegalLanguageModeDirective: 'Illegal \'use strict\' directive in function with non-simple parameter list',
	    IllegalReturn: 'Illegal return statement',
	    InvalidEscapedReservedWord: 'Keyword must not contain escaped characters',
	    InvalidHexEscapeSequence: 'Invalid hexadecimal escape sequence',
	    InvalidLHSInAssignment: 'Invalid left-hand side in assignment',
	    InvalidLHSInForIn: 'Invalid left-hand side in for-in',
	    InvalidLHSInForLoop: 'Invalid left-hand side in for-loop',
	    InvalidModuleSpecifier: 'Unexpected token',
	    InvalidRegExp: 'Invalid regular expression',
	    LetInLexicalBinding: 'let is disallowed as a lexically bound name',
	    MissingFromClause: 'Unexpected token',
	    MultipleDefaultsInSwitch: 'More than one default clause in switch statement',
	    NewlineAfterThrow: 'Illegal newline after throw',
	    NoAsAfterImportNamespace: 'Unexpected token',
	    NoCatchOrFinally: 'Missing catch or finally after try',
	    ParameterAfterRestParameter: 'Rest parameter must be last formal parameter',
	    Redeclaration: '%0 \'%1\' has already been declared',
	    StaticPrototype: 'Classes may not have static property named prototype',
	    StrictCatchVariable: 'Catch variable may not be eval or arguments in strict mode',
	    StrictDelete: 'Delete of an unqualified identifier in strict mode.',
	    StrictFunction: 'In strict mode code, functions can only be declared at top level or inside a block',
	    StrictFunctionName: 'Function name may not be eval or arguments in strict mode',
	    StrictLHSAssignment: 'Assignment to eval or arguments is not allowed in strict mode',
	    StrictLHSPostfix: 'Postfix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictLHSPrefix: 'Prefix increment/decrement may not have eval or arguments operand in strict mode',
	    StrictModeWith: 'Strict mode code may not include a with statement',
	    StrictOctalLiteral: 'Octal literals are not allowed in strict mode.',
	    StrictParamDupe: 'Strict mode function may not have duplicate parameter names',
	    StrictParamName: 'Parameter name eval or arguments is not allowed in strict mode',
	    StrictReservedWord: 'Use of future reserved word in strict mode',
	    StrictVarName: 'Variable name may not be eval or arguments in strict mode',
	    TemplateOctalLiteral: 'Octal literals are not allowed in template strings.',
	    UnexpectedEOS: 'Unexpected end of input',
	    UnexpectedIdentifier: 'Unexpected identifier',
	    UnexpectedNumber: 'Unexpected number',
	    UnexpectedReserved: 'Unexpected reserved word',
	    UnexpectedString: 'Unexpected string',
	    UnexpectedTemplate: 'Unexpected quasi %0',
	    UnexpectedToken: 'Unexpected token %0',
	    UnexpectedTokenIllegal: 'Unexpected token ILLEGAL',
	    UnknownLabel: 'Undefined label \'%0\'',
	    UnterminatedRegExp: 'Invalid regular expression: missing /'
	};


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var assert_1 = __webpack_require__(9);
	var character_1 = __webpack_require__(4);
	var messages_1 = __webpack_require__(11);
	function hexValue(ch) {
	    return '0123456789abcdef'.indexOf(ch.toLowerCase());
	}
	function octalValue(ch) {
	    return '01234567'.indexOf(ch);
	}
	var Scanner = (function () {
	    function Scanner(code, handler) {
	        this.source = code;
	        this.errorHandler = handler;
	        this.trackComment = false;
	        this.isModule = false;
	        this.length = code.length;
	        this.index = 0;
	        this.lineNumber = (code.length > 0) ? 1 : 0;
	        this.lineStart = 0;
	        this.curlyStack = [];
	    }
	    Scanner.prototype.saveState = function () {
	        return {
	            index: this.index,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart
	        };
	    };
	    Scanner.prototype.restoreState = function (state) {
	        this.index = state.index;
	        this.lineNumber = state.lineNumber;
	        this.lineStart = state.lineStart;
	    };
	    Scanner.prototype.eof = function () {
	        return this.index >= this.length;
	    };
	    Scanner.prototype.throwUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        return this.errorHandler.throwError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    Scanner.prototype.tolerateUnexpectedToken = function (message) {
	        if (message === void 0) { message = messages_1.Messages.UnexpectedTokenIllegal; }
	        this.errorHandler.tolerateError(this.index, this.lineNumber, this.index - this.lineStart + 1, message);
	    };
	    // https://tc39.github.io/ecma262/#sec-comments
	    Scanner.prototype.skipSingleLineComment = function (offset) {
	        var comments = [];
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - offset;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - offset
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            ++this.index;
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (this.trackComment) {
	                    loc.end = {
	                        line: this.lineNumber,
	                        column: this.index - this.lineStart - 1
	                    };
	                    var entry = {
	                        multiLine: false,
	                        slice: [start + offset, this.index - 1],
	                        range: [start, this.index - 1],
	                        loc: loc
	                    };
	                    comments.push(entry);
	                }
	                if (ch === 13 && this.source.charCodeAt(this.index) === 10) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                return comments;
	            }
	        }
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: false,
	                slice: [start + offset, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        return comments;
	    };
	    Scanner.prototype.skipMultiLineComment = function () {
	        var comments = [];
	        var start, loc;
	        if (this.trackComment) {
	            comments = [];
	            start = this.index - 2;
	            loc = {
	                start: {
	                    line: this.lineNumber,
	                    column: this.index - this.lineStart - 2
	                },
	                end: {}
	            };
	        }
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isLineTerminator(ch)) {
	                if (ch === 0x0D && this.source.charCodeAt(this.index + 1) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                ++this.index;
	                this.lineStart = this.index;
	            }
	            else if (ch === 0x2A) {
	                // Block comment ends with '*/'.
	                if (this.source.charCodeAt(this.index + 1) === 0x2F) {
	                    this.index += 2;
	                    if (this.trackComment) {
	                        loc.end = {
	                            line: this.lineNumber,
	                            column: this.index - this.lineStart
	                        };
	                        var entry = {
	                            multiLine: true,
	                            slice: [start + 2, this.index - 2],
	                            range: [start, this.index],
	                            loc: loc
	                        };
	                        comments.push(entry);
	                    }
	                    return comments;
	                }
	                ++this.index;
	            }
	            else {
	                ++this.index;
	            }
	        }
	        // Ran off the end of the file - the whole thing is a comment
	        if (this.trackComment) {
	            loc.end = {
	                line: this.lineNumber,
	                column: this.index - this.lineStart
	            };
	            var entry = {
	                multiLine: true,
	                slice: [start + 2, this.index],
	                range: [start, this.index],
	                loc: loc
	            };
	            comments.push(entry);
	        }
	        this.tolerateUnexpectedToken();
	        return comments;
	    };
	    Scanner.prototype.scanComments = function () {
	        var comments;
	        if (this.trackComment) {
	            comments = [];
	        }
	        var start = (this.index === 0);
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (character_1.Character.isWhiteSpace(ch)) {
	                ++this.index;
	            }
	            else if (character_1.Character.isLineTerminator(ch)) {
	                ++this.index;
	                if (ch === 0x0D && this.source.charCodeAt(this.index) === 0x0A) {
	                    ++this.index;
	                }
	                ++this.lineNumber;
	                this.lineStart = this.index;
	                start = true;
	            }
	            else if (ch === 0x2F) {
	                ch = this.source.charCodeAt(this.index + 1);
	                if (ch === 0x2F) {
	                    this.index += 2;
	                    var comment = this.skipSingleLineComment(2);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                    start = true;
	                }
	                else if (ch === 0x2A) {
	                    this.index += 2;
	                    var comment = this.skipMultiLineComment();
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (start && ch === 0x2D) {
	                // U+003E is '>'
	                if ((this.source.charCodeAt(this.index + 1) === 0x2D) && (this.source.charCodeAt(this.index + 2) === 0x3E)) {
	                    // '-->' is a single-line comment
	                    this.index += 3;
	                    var comment = this.skipSingleLineComment(3);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else if (ch === 0x3C && !this.isModule) {
	                if (this.source.slice(this.index + 1, this.index + 4) === '!--') {
	                    this.index += 4; // `<!--`
	                    var comment = this.skipSingleLineComment(4);
	                    if (this.trackComment) {
	                        comments = comments.concat(comment);
	                    }
	                }
	                else {
	                    break;
	                }
	            }
	            else {
	                break;
	            }
	        }
	        return comments;
	    };
	    // https://tc39.github.io/ecma262/#sec-future-reserved-words
	    Scanner.prototype.isFutureReservedWord = function (id) {
	        switch (id) {
	            case 'enum':
	            case 'export':
	            case 'import':
	            case 'super':
	                return true;
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.isStrictModeReservedWord = function (id) {
	        switch (id) {
	            case 'implements':
	            case 'interface':
	            case 'package':
	            case 'private':
	            case 'protected':
	            case 'public':
	            case 'static':
	            case 'yield':
	            case 'let':
	                return true;
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.isRestrictedWord = function (id) {
	        return id === 'eval' || id === 'arguments';
	    };
	    // https://tc39.github.io/ecma262/#sec-keywords
	    Scanner.prototype.isKeyword = function (id) {
	        switch (id.length) {
	            case 2:
	                return (id === 'if') || (id === 'in') || (id === 'do');
	            case 3:
	                return (id === 'var') || (id === 'for') || (id === 'new') ||
	                    (id === 'try') || (id === 'let');
	            case 4:
	                return (id === 'this') || (id === 'else') || (id === 'case') ||
	                    (id === 'void') || (id === 'with') || (id === 'enum');
	            case 5:
	                return (id === 'while') || (id === 'break') || (id === 'catch') ||
	                    (id === 'throw') || (id === 'const') || (id === 'yield') ||
	                    (id === 'class') || (id === 'super');
	            case 6:
	                return (id === 'return') || (id === 'typeof') || (id === 'delete') ||
	                    (id === 'switch') || (id === 'export') || (id === 'import');
	            case 7:
	                return (id === 'default') || (id === 'finally') || (id === 'extends');
	            case 8:
	                return (id === 'function') || (id === 'continue') || (id === 'debugger');
	            case 10:
	                return (id === 'instanceof');
	            default:
	                return false;
	        }
	    };
	    Scanner.prototype.codePointAt = function (i) {
	        var cp = this.source.charCodeAt(i);
	        if (cp >= 0xD800 && cp <= 0xDBFF) {
	            var second = this.source.charCodeAt(i + 1);
	            if (second >= 0xDC00 && second <= 0xDFFF) {
	                var first = cp;
	                cp = (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
	            }
	        }
	        return cp;
	    };
	    Scanner.prototype.scanHexEscape = function (prefix) {
	        var len = (prefix === 'u') ? 4 : 2;
	        var code = 0;
	        for (var i = 0; i < len; ++i) {
	            if (!this.eof() && character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                code = code * 16 + hexValue(this.source[this.index++]);
	            }
	            else {
	                return null;
	            }
	        }
	        return String.fromCharCode(code);
	    };
	    Scanner.prototype.scanUnicodeCodePointEscape = function () {
	        var ch = this.source[this.index];
	        var code = 0;
	        // At least, one hex digit is required.
	        if (ch === '}') {
	            this.throwUnexpectedToken();
	        }
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            if (!character_1.Character.isHexDigit(ch.charCodeAt(0))) {
	                break;
	            }
	            code = code * 16 + hexValue(ch);
	        }
	        if (code > 0x10FFFF || ch !== '}') {
	            this.throwUnexpectedToken();
	        }
	        return character_1.Character.fromCodePoint(code);
	    };
	    Scanner.prototype.getIdentifier = function () {
	        var start = this.index++;
	        while (!this.eof()) {
	            var ch = this.source.charCodeAt(this.index);
	            if (ch === 0x5C) {
	                // Blackslash (U+005C) marks Unicode escape sequence.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            else if (ch >= 0xD800 && ch < 0xDFFF) {
	                // Need to handle surrogate pairs.
	                this.index = start;
	                return this.getComplexIdentifier();
	            }
	            if (character_1.Character.isIdentifierPart(ch)) {
	                ++this.index;
	            }
	            else {
	                break;
	            }
	        }
	        return this.source.slice(start, this.index);
	    };
	    Scanner.prototype.getComplexIdentifier = function () {
	        var cp = this.codePointAt(this.index);
	        var id = character_1.Character.fromCodePoint(cp);
	        this.index += id.length;
	        // '\u' (U+005C, U+0075) denotes an escaped character.
	        var ch;
	        if (cp === 0x5C) {
	            if (this.source.charCodeAt(this.index) !== 0x75) {
	                this.throwUnexpectedToken();
	            }
	            ++this.index;
	            if (this.source[this.index] === '{') {
	                ++this.index;
	                ch = this.scanUnicodeCodePointEscape();
	            }
	            else {
	                ch = this.scanHexEscape('u');
	                if (ch === null || ch === '\\' || !character_1.Character.isIdentifierStart(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken();
	                }
	            }
	            id = ch;
	        }
	        while (!this.eof()) {
	            cp = this.codePointAt(this.index);
	            if (!character_1.Character.isIdentifierPart(cp)) {
	                break;
	            }
	            ch = character_1.Character.fromCodePoint(cp);
	            id += ch;
	            this.index += ch.length;
	            // '\u' (U+005C, U+0075) denotes an escaped character.
	            if (cp === 0x5C) {
	                id = id.substr(0, id.length - 1);
	                if (this.source.charCodeAt(this.index) !== 0x75) {
	                    this.throwUnexpectedToken();
	                }
	                ++this.index;
	                if (this.source[this.index] === '{') {
	                    ++this.index;
	                    ch = this.scanUnicodeCodePointEscape();
	                }
	                else {
	                    ch = this.scanHexEscape('u');
	                    if (ch === null || ch === '\\' || !character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                        this.throwUnexpectedToken();
	                    }
	                }
	                id += ch;
	            }
	        }
	        return id;
	    };
	    Scanner.prototype.octalToDecimal = function (ch) {
	        // \0 is not octal escape sequence
	        var octal = (ch !== '0');
	        var code = octalValue(ch);
	        if (!this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	            octal = true;
	            code = code * 8 + octalValue(this.source[this.index++]);
	            // 3 digits are only allowed when string starts
	            // with 0, 1, 2, 3
	            if ('0123'.indexOf(ch) >= 0 && !this.eof() && character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                code = code * 8 + octalValue(this.source[this.index++]);
	            }
	        }
	        return {
	            code: code,
	            octal: octal
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-names-and-keywords
	    Scanner.prototype.scanIdentifier = function () {
	        var type;
	        var start = this.index;
	        // Backslash (U+005C) starts an escaped character.
	        var id = (this.source.charCodeAt(start) === 0x5C) ? this.getComplexIdentifier() : this.getIdentifier();
	        // There is no keyword or literal with only one character.
	        // Thus, it must be an identifier.
	        if (id.length === 1) {
	            type = 3 /* Identifier */;
	        }
	        else if (this.isKeyword(id)) {
	            type = 4 /* Keyword */;
	        }
	        else if (id === 'null') {
	            type = 5 /* NullLiteral */;
	        }
	        else if (id === 'true' || id === 'false') {
	            type = 1 /* BooleanLiteral */;
	        }
	        else {
	            type = 3 /* Identifier */;
	        }
	        if (type !== 3 /* Identifier */ && (start + id.length !== this.index)) {
	            var restore = this.index;
	            this.index = start;
	            this.tolerateUnexpectedToken(messages_1.Messages.InvalidEscapedReservedWord);
	            this.index = restore;
	        }
	        return {
	            type: type,
	            value: id,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-punctuators
	    Scanner.prototype.scanPunctuator = function () {
	        var start = this.index;
	        // Check for most common single-character punctuators.
	        var str = this.source[this.index];
	        switch (str) {
	            case '(':
	            case '{':
	                if (str === '{') {
	                    this.curlyStack.push('{');
	                }
	                ++this.index;
	                break;
	            case '.':
	                ++this.index;
	                if (this.source[this.index] === '.' && this.source[this.index + 1] === '.') {
	                    // Spread operator: ...
	                    this.index += 2;
	                    str = '...';
	                }
	                break;
	            case '}':
	                ++this.index;
	                this.curlyStack.pop();
	                break;
	            case ')':
	            case ';':
	            case ',':
	            case '[':
	            case ']':
	            case ':':
	            case '?':
	            case '~':
	                ++this.index;
	                break;
	            default:
	                // 4-character punctuator.
	                str = this.source.substr(this.index, 4);
	                if (str === '>>>=') {
	                    this.index += 4;
	                }
	                else {
	                    // 3-character punctuators.
	                    str = str.substr(0, 3);
	                    if (str === '===' || str === '!==' || str === '>>>' ||
	                        str === '<<=' || str === '>>=' || str === '**=') {
	                        this.index += 3;
	                    }
	                    else {
	                        // 2-character punctuators.
	                        str = str.substr(0, 2);
	                        if (str === '&&' || str === '||' || str === '==' || str === '!=' ||
	                            str === '+=' || str === '-=' || str === '*=' || str === '/=' ||
	                            str === '++' || str === '--' || str === '<<' || str === '>>' ||
	                            str === '&=' || str === '|=' || str === '^=' || str === '%=' ||
	                            str === '<=' || str === '>=' || str === '=>' || str === '**') {
	                            this.index += 2;
	                        }
	                        else {
	                            // 1-character punctuators.
	                            str = this.source[this.index];
	                            if ('<>=!+-*%&|^/'.indexOf(str) >= 0) {
	                                ++this.index;
	                            }
	                        }
	                    }
	                }
	        }
	        if (this.index === start) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 7 /* Punctuator */,
	            value: str,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-numeric-literals
	    Scanner.prototype.scanHexLiteral = function (start) {
	        var num = '';
	        while (!this.eof()) {
	            if (!character_1.Character.isHexDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (num.length === 0) {
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt('0x' + num, 16),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.scanBinaryLiteral = function (start) {
	        var num = '';
	        var ch;
	        while (!this.eof()) {
	            ch = this.source[this.index];
	            if (ch !== '0' && ch !== '1') {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (num.length === 0) {
	            // only 0b or 0B
	            this.throwUnexpectedToken();
	        }
	        if (!this.eof()) {
	            ch = this.source.charCodeAt(this.index);
	            /* istanbul ignore else */
	            if (character_1.Character.isIdentifierStart(ch) || character_1.Character.isDecimalDigit(ch)) {
	                this.throwUnexpectedToken();
	            }
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt(num, 2),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.scanOctalLiteral = function (prefix, start) {
	        var num = '';
	        var octal = false;
	        if (character_1.Character.isOctalDigit(prefix.charCodeAt(0))) {
	            octal = true;
	            num = '0' + this.source[this.index++];
	        }
	        else {
	            ++this.index;
	        }
	        while (!this.eof()) {
	            if (!character_1.Character.isOctalDigit(this.source.charCodeAt(this.index))) {
	                break;
	            }
	            num += this.source[this.index++];
	        }
	        if (!octal && num.length === 0) {
	            // only 0o or 0O
	            this.throwUnexpectedToken();
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index)) || character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseInt(num, 8),
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.isImplicitOctalLiteral = function () {
	        // Implicit octal, unless there is a non-octal digit.
	        // (Annex B.1.1 on Numeric Literals)
	        for (var i = this.index + 1; i < this.length; ++i) {
	            var ch = this.source[i];
	            if (ch === '8' || ch === '9') {
	                return false;
	            }
	            if (!character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                return true;
	            }
	        }
	        return true;
	    };
	    Scanner.prototype.scanNumericLiteral = function () {
	        var start = this.index;
	        var ch = this.source[start];
	        assert_1.assert(character_1.Character.isDecimalDigit(ch.charCodeAt(0)) || (ch === '.'), 'Numeric literal must start with a decimal digit or a decimal point');
	        var num = '';
	        if (ch !== '.') {
	            num = this.source[this.index++];
	            ch = this.source[this.index];
	            // Hex number starts with '0x'.
	            // Octal number starts with '0'.
	            // Octal number in ES6 starts with '0o'.
	            // Binary number in ES6 starts with '0b'.
	            if (num === '0') {
	                if (ch === 'x' || ch === 'X') {
	                    ++this.index;
	                    return this.scanHexLiteral(start);
	                }
	                if (ch === 'b' || ch === 'B') {
	                    ++this.index;
	                    return this.scanBinaryLiteral(start);
	                }
	                if (ch === 'o' || ch === 'O') {
	                    return this.scanOctalLiteral(ch, start);
	                }
	                if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                    if (this.isImplicitOctalLiteral()) {
	                        return this.scanOctalLiteral(ch, start);
	                    }
	                }
	            }
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                num += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === '.') {
	            num += this.source[this.index++];
	            while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                num += this.source[this.index++];
	            }
	            ch = this.source[this.index];
	        }
	        if (ch === 'e' || ch === 'E') {
	            num += this.source[this.index++];
	            ch = this.source[this.index];
	            if (ch === '+' || ch === '-') {
	                num += this.source[this.index++];
	            }
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                while (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                    num += this.source[this.index++];
	                }
	            }
	            else {
	                this.throwUnexpectedToken();
	            }
	        }
	        if (character_1.Character.isIdentifierStart(this.source.charCodeAt(this.index))) {
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 6 /* NumericLiteral */,
	            value: parseFloat(num),
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-string-literals
	    Scanner.prototype.scanStringLiteral = function () {
	        var start = this.index;
	        var quote = this.source[start];
	        assert_1.assert((quote === '\'' || quote === '"'), 'String literal must starts with a quote');
	        ++this.index;
	        var octal = false;
	        var str = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === quote) {
	                quote = '';
	                break;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!ch || !character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'u':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                str += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var unescaped_1 = this.scanHexEscape(ch);
	                                if (unescaped_1 === null) {
	                                    this.throwUnexpectedToken();
	                                }
	                                str += unescaped_1;
	                            }
	                            break;
	                        case 'x':
	                            var unescaped = this.scanHexEscape(ch);
	                            if (unescaped === null) {
	                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);
	                            }
	                            str += unescaped;
	                            break;
	                        case 'n':
	                            str += '\n';
	                            break;
	                        case 'r':
	                            str += '\r';
	                            break;
	                        case 't':
	                            str += '\t';
	                            break;
	                        case 'b':
	                            str += '\b';
	                            break;
	                        case 'f':
	                            str += '\f';
	                            break;
	                        case 'v':
	                            str += '\x0B';
	                            break;
	                        case '8':
	                        case '9':
	                            str += ch;
	                            this.tolerateUnexpectedToken();
	                            break;
	                        default:
	                            if (ch && character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                var octToDec = this.octalToDecimal(ch);
	                                octal = octToDec.octal || octal;
	                                str += String.fromCharCode(octToDec.code);
	                            }
	                            else {
	                                str += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                break;
	            }
	            else {
	                str += ch;
	            }
	        }
	        if (quote !== '') {
	            this.index = start;
	            this.throwUnexpectedToken();
	        }
	        return {
	            type: 8 /* StringLiteral */,
	            value: str,
	            octal: octal,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-template-literal-lexical-components
	    Scanner.prototype.scanTemplate = function () {
	        var cooked = '';
	        var terminated = false;
	        var start = this.index;
	        var head = (this.source[start] === '`');
	        var tail = false;
	        var rawOffset = 2;
	        ++this.index;
	        while (!this.eof()) {
	            var ch = this.source[this.index++];
	            if (ch === '`') {
	                rawOffset = 1;
	                tail = true;
	                terminated = true;
	                break;
	            }
	            else if (ch === '$') {
	                if (this.source[this.index] === '{') {
	                    this.curlyStack.push('${');
	                    ++this.index;
	                    terminated = true;
	                    break;
	                }
	                cooked += ch;
	            }
	            else if (ch === '\\') {
	                ch = this.source[this.index++];
	                if (!character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    switch (ch) {
	                        case 'n':
	                            cooked += '\n';
	                            break;
	                        case 'r':
	                            cooked += '\r';
	                            break;
	                        case 't':
	                            cooked += '\t';
	                            break;
	                        case 'u':
	                            if (this.source[this.index] === '{') {
	                                ++this.index;
	                                cooked += this.scanUnicodeCodePointEscape();
	                            }
	                            else {
	                                var restore = this.index;
	                                var unescaped_2 = this.scanHexEscape(ch);
	                                if (unescaped_2 !== null) {
	                                    cooked += unescaped_2;
	                                }
	                                else {
	                                    this.index = restore;
	                                    cooked += ch;
	                                }
	                            }
	                            break;
	                        case 'x':
	                            var unescaped = this.scanHexEscape(ch);
	                            if (unescaped === null) {
	                                this.throwUnexpectedToken(messages_1.Messages.InvalidHexEscapeSequence);
	                            }
	                            cooked += unescaped;
	                            break;
	                        case 'b':
	                            cooked += '\b';
	                            break;
	                        case 'f':
	                            cooked += '\f';
	                            break;
	                        case 'v':
	                            cooked += '\v';
	                            break;
	                        default:
	                            if (ch === '0') {
	                                if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index))) {
	                                    // Illegal: \01 \02 and so on
	                                    this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                                }
	                                cooked += '\0';
	                            }
	                            else if (character_1.Character.isOctalDigit(ch.charCodeAt(0))) {
	                                // Illegal: \1 \2
	                                this.throwUnexpectedToken(messages_1.Messages.TemplateOctalLiteral);
	                            }
	                            else {
	                                cooked += ch;
	                            }
	                            break;
	                    }
	                }
	                else {
	                    ++this.lineNumber;
	                    if (ch === '\r' && this.source[this.index] === '\n') {
	                        ++this.index;
	                    }
	                    this.lineStart = this.index;
	                }
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                ++this.lineNumber;
	                if (ch === '\r' && this.source[this.index] === '\n') {
	                    ++this.index;
	                }
	                this.lineStart = this.index;
	                cooked += '\n';
	            }
	            else {
	                cooked += ch;
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken();
	        }
	        if (!head) {
	            this.curlyStack.pop();
	        }
	        return {
	            type: 10 /* Template */,
	            value: this.source.slice(start + 1, this.index - rawOffset),
	            cooked: cooked,
	            head: head,
	            tail: tail,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
	    Scanner.prototype.testRegExp = function (pattern, flags) {
	        // The BMP character to use as a replacement for astral symbols when
	        // translating an ES6 "u"-flagged pattern to an ES5-compatible
	        // approximation.
	        // Note: replacing with '\uFFFF' enables false positives in unlikely
	        // scenarios. For example, `[\u{1044f}-\u{10440}]` is an invalid
	        // pattern that would not be detected by this substitution.
	        var astralSubstitute = '\uFFFF';
	        var tmp = pattern;
	        var self = this;
	        if (flags.indexOf('u') >= 0) {
	            tmp = tmp
	                .replace(/\\u\{([0-9a-fA-F]+)\}|\\u([a-fA-F0-9]{4})/g, function ($0, $1, $2) {
	                var codePoint = parseInt($1 || $2, 16);
	                if (codePoint > 0x10FFFF) {
	                    self.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	                }
	                if (codePoint <= 0xFFFF) {
	                    return String.fromCharCode(codePoint);
	                }
	                return astralSubstitute;
	            })
	                .replace(/[\uD800-\uDBFF][\uDC00-\uDFFF]/g, astralSubstitute);
	        }
	        // First, detect invalid regular expressions.
	        try {
	            RegExp(tmp);
	        }
	        catch (e) {
	            this.throwUnexpectedToken(messages_1.Messages.InvalidRegExp);
	        }
	        // Return a regular expression object for this pattern-flag pair, or
	        // `null` in case the current environment doesn't support the flags it
	        // uses.
	        try {
	            return new RegExp(pattern, flags);
	        }
	        catch (exception) {
	            /* istanbul ignore next */
	            return null;
	        }
	    };
	    Scanner.prototype.scanRegExpBody = function () {
	        var ch = this.source[this.index];
	        assert_1.assert(ch === '/', 'Regular expression literal must start with a slash');
	        var str = this.source[this.index++];
	        var classMarker = false;
	        var terminated = false;
	        while (!this.eof()) {
	            ch = this.source[this.index++];
	            str += ch;
	            if (ch === '\\') {
	                ch = this.source[this.index++];
	                // https://tc39.github.io/ecma262/#sec-literals-regular-expression-literals
	                if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                    this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	                }
	                str += ch;
	            }
	            else if (character_1.Character.isLineTerminator(ch.charCodeAt(0))) {
	                this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	            }
	            else if (classMarker) {
	                if (ch === ']') {
	                    classMarker = false;
	                }
	            }
	            else {
	                if (ch === '/') {
	                    terminated = true;
	                    break;
	                }
	                else if (ch === '[') {
	                    classMarker = true;
	                }
	            }
	        }
	        if (!terminated) {
	            this.throwUnexpectedToken(messages_1.Messages.UnterminatedRegExp);
	        }
	        // Exclude leading and trailing slash.
	        return str.substr(1, str.length - 2);
	    };
	    Scanner.prototype.scanRegExpFlags = function () {
	        var str = '';
	        var flags = '';
	        while (!this.eof()) {
	            var ch = this.source[this.index];
	            if (!character_1.Character.isIdentifierPart(ch.charCodeAt(0))) {
	                break;
	            }
	            ++this.index;
	            if (ch === '\\' && !this.eof()) {
	                ch = this.source[this.index];
	                if (ch === 'u') {
	                    ++this.index;
	                    var restore = this.index;
	                    var char = this.scanHexEscape('u');
	                    if (char !== null) {
	                        flags += char;
	                        for (str += '\\u'; restore < this.index; ++restore) {
	                            str += this.source[restore];
	                        }
	                    }
	                    else {
	                        this.index = restore;
	                        flags += 'u';
	                        str += '\\u';
	                    }
	                    this.tolerateUnexpectedToken();
	                }
	                else {
	                    str += '\\';
	                    this.tolerateUnexpectedToken();
	                }
	            }
	            else {
	                flags += ch;
	                str += ch;
	            }
	        }
	        return flags;
	    };
	    Scanner.prototype.scanRegExp = function () {
	        var start = this.index;
	        var pattern = this.scanRegExpBody();
	        var flags = this.scanRegExpFlags();
	        var value = this.testRegExp(pattern, flags);
	        return {
	            type: 9 /* RegularExpression */,
	            value: '',
	            pattern: pattern,
	            flags: flags,
	            regex: value,
	            lineNumber: this.lineNumber,
	            lineStart: this.lineStart,
	            start: start,
	            end: this.index
	        };
	    };
	    Scanner.prototype.lex = function () {
	        if (this.eof()) {
	            return {
	                type: 2 /* EOF */,
	                value: '',
	                lineNumber: this.lineNumber,
	                lineStart: this.lineStart,
	                start: this.index,
	                end: this.index
	            };
	        }
	        var cp = this.source.charCodeAt(this.index);
	        if (character_1.Character.isIdentifierStart(cp)) {
	            return this.scanIdentifier();
	        }
	        // Very common: ( and ) and ;
	        if (cp === 0x28 || cp === 0x29 || cp === 0x3B) {
	            return this.scanPunctuator();
	        }
	        // String literal starts with single quote (U+0027) or double quote (U+0022).
	        if (cp === 0x27 || cp === 0x22) {
	            return this.scanStringLiteral();
	        }
	        // Dot (.) U+002E can also start a floating-point number, hence the need
	        // to check the next character.
	        if (cp === 0x2E) {
	            if (character_1.Character.isDecimalDigit(this.source.charCodeAt(this.index + 1))) {
	                return this.scanNumericLiteral();
	            }
	            return this.scanPunctuator();
	        }
	        if (character_1.Character.isDecimalDigit(cp)) {
	            return this.scanNumericLiteral();
	        }
	        // Template literals start with ` (U+0060) for template head
	        // or } (U+007D) for template middle or template tail.
	        if (cp === 0x60 || (cp === 0x7D && this.curlyStack[this.curlyStack.length - 1] === '${')) {
	            return this.scanTemplate();
	        }
	        // Possible identifier start in a surrogate pair.
	        if (cp >= 0xD800 && cp < 0xDFFF) {
	            if (character_1.Character.isIdentifierStart(this.codePointAt(this.index))) {
	                return this.scanIdentifier();
	            }
	        }
	        return this.scanPunctuator();
	    };
	    return Scanner;
	}());
	exports.Scanner = Scanner;


/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.TokenName = {};
	exports.TokenName[1 /* BooleanLiteral */] = 'Boolean';
	exports.TokenName[2 /* EOF */] = '<end>';
	exports.TokenName[3 /* Identifier */] = 'Identifier';
	exports.TokenName[4 /* Keyword */] = 'Keyword';
	exports.TokenName[5 /* NullLiteral */] = 'Null';
	exports.TokenName[6 /* NumericLiteral */] = 'Numeric';
	exports.TokenName[7 /* Punctuator */] = 'Punctuator';
	exports.TokenName[8 /* StringLiteral */] = 'String';
	exports.TokenName[9 /* RegularExpression */] = 'RegularExpression';
	exports.TokenName[10 /* Template */] = 'Template';


/***/ },
/* 14 */
/***/ function(module, exports) {

	"use strict";
	// Generated by generate-xhtml-entities.js. DO NOT MODIFY!
	Object.defineProperty(exports, "__esModule", { value: true });
	exports.XHTMLEntities = {
	    quot: '\u0022',
	    amp: '\u0026',
	    apos: '\u0027',
	    gt: '\u003E',
	    nbsp: '\u00A0',
	    iexcl: '\u00A1',
	    cent: '\u00A2',
	    pound: '\u00A3',
	    curren: '\u00A4',
	    yen: '\u00A5',
	    brvbar: '\u00A6',
	    sect: '\u00A7',
	    uml: '\u00A8',
	    copy: '\u00A9',
	    ordf: '\u00AA',
	    laquo: '\u00AB',
	    not: '\u00AC',
	    shy: '\u00AD',
	    reg: '\u00AE',
	    macr: '\u00AF',
	    deg: '\u00B0',
	    plusmn: '\u00B1',
	    sup2: '\u00B2',
	    sup3: '\u00B3',
	    acute: '\u00B4',
	    micro: '\u00B5',
	    para: '\u00B6',
	    middot: '\u00B7',
	    cedil: '\u00B8',
	    sup1: '\u00B9',
	    ordm: '\u00BA',
	    raquo: '\u00BB',
	    frac14: '\u00BC',
	    frac12: '\u00BD',
	    frac34: '\u00BE',
	    iquest: '\u00BF',
	    Agrave: '\u00C0',
	    Aacute: '\u00C1',
	    Acirc: '\u00C2',
	    Atilde: '\u00C3',
	    Auml: '\u00C4',
	    Aring: '\u00C5',
	    AElig: '\u00C6',
	    Ccedil: '\u00C7',
	    Egrave: '\u00C8',
	    Eacute: '\u00C9',
	    Ecirc: '\u00CA',
	    Euml: '\u00CB',
	    Igrave: '\u00CC',
	    Iacute: '\u00CD',
	    Icirc: '\u00CE',
	    Iuml: '\u00CF',
	    ETH: '\u00D0',
	    Ntilde: '\u00D1',
	    Ograve: '\u00D2',
	    Oacute: '\u00D3',
	    Ocirc: '\u00D4',
	    Otilde: '\u00D5',
	    Ouml: '\u00D6',
	    times: '\u00D7',
	    Oslash: '\u00D8',
	    Ugrave: '\u00D9',
	    Uacute: '\u00DA',
	    Ucirc: '\u00DB',
	    Uuml: '\u00DC',
	    Yacute: '\u00DD',
	    THORN: '\u00DE',
	    szlig: '\u00DF',
	    agrave: '\u00E0',
	    aacute: '\u00E1',
	    acirc: '\u00E2',
	    atilde: '\u00E3',
	    auml: '\u00E4',
	    aring: '\u00E5',
	    aelig: '\u00E6',
	    ccedil: '\u00E7',
	    egrave: '\u00E8',
	    eacute: '\u00E9',
	    ecirc: '\u00EA',
	    euml: '\u00EB',
	    igrave: '\u00EC',
	    iacute: '\u00ED',
	    icirc: '\u00EE',
	    iuml: '\u00EF',
	    eth: '\u00F0',
	    ntilde: '\u00F1',
	    ograve: '\u00F2',
	    oacute: '\u00F3',
	    ocirc: '\u00F4',
	    otilde: '\u00F5',
	    ouml: '\u00F6',
	    divide: '\u00F7',
	    oslash: '\u00F8',
	    ugrave: '\u00F9',
	    uacute: '\u00FA',
	    ucirc: '\u00FB',
	    uuml: '\u00FC',
	    yacute: '\u00FD',
	    thorn: '\u00FE',
	    yuml: '\u00FF',
	    OElig: '\u0152',
	    oelig: '\u0153',
	    Scaron: '\u0160',
	    scaron: '\u0161',
	    Yuml: '\u0178',
	    fnof: '\u0192',
	    circ: '\u02C6',
	    tilde: '\u02DC',
	    Alpha: '\u0391',
	    Beta: '\u0392',
	    Gamma: '\u0393',
	    Delta: '\u0394',
	    Epsilon: '\u0395',
	    Zeta: '\u0396',
	    Eta: '\u0397',
	    Theta: '\u0398',
	    Iota: '\u0399',
	    Kappa: '\u039A',
	    Lambda: '\u039B',
	    Mu: '\u039C',
	    Nu: '\u039D',
	    Xi: '\u039E',
	    Omicron: '\u039F',
	    Pi: '\u03A0',
	    Rho: '\u03A1',
	    Sigma: '\u03A3',
	    Tau: '\u03A4',
	    Upsilon: '\u03A5',
	    Phi: '\u03A6',
	    Chi: '\u03A7',
	    Psi: '\u03A8',
	    Omega: '\u03A9',
	    alpha: '\u03B1',
	    beta: '\u03B2',
	    gamma: '\u03B3',
	    delta: '\u03B4',
	    epsilon: '\u03B5',
	    zeta: '\u03B6',
	    eta: '\u03B7',
	    theta: '\u03B8',
	    iota: '\u03B9',
	    kappa: '\u03BA',
	    lambda: '\u03BB',
	    mu: '\u03BC',
	    nu: '\u03BD',
	    xi: '\u03BE',
	    omicron: '\u03BF',
	    pi: '\u03C0',
	    rho: '\u03C1',
	    sigmaf: '\u03C2',
	    sigma: '\u03C3',
	    tau: '\u03C4',
	    upsilon: '\u03C5',
	    phi: '\u03C6',
	    chi: '\u03C7',
	    psi: '\u03C8',
	    omega: '\u03C9',
	    thetasym: '\u03D1',
	    upsih: '\u03D2',
	    piv: '\u03D6',
	    ensp: '\u2002',
	    emsp: '\u2003',
	    thinsp: '\u2009',
	    zwnj: '\u200C',
	    zwj: '\u200D',
	    lrm: '\u200E',
	    rlm: '\u200F',
	    ndash: '\u2013',
	    mdash: '\u2014',
	    lsquo: '\u2018',
	    rsquo: '\u2019',
	    sbquo: '\u201A',
	    ldquo: '\u201C',
	    rdquo: '\u201D',
	    bdquo: '\u201E',
	    dagger: '\u2020',
	    Dagger: '\u2021',
	    bull: '\u2022',
	    hellip: '\u2026',
	    permil: '\u2030',
	    prime: '\u2032',
	    Prime: '\u2033',
	    lsaquo: '\u2039',
	    rsaquo: '\u203A',
	    oline: '\u203E',
	    frasl: '\u2044',
	    euro: '\u20AC',
	    image: '\u2111',
	    weierp: '\u2118',
	    real: '\u211C',
	    trade: '\u2122',
	    alefsym: '\u2135',
	    larr: '\u2190',
	    uarr: '\u2191',
	    rarr: '\u2192',
	    darr: '\u2193',
	    harr: '\u2194',
	    crarr: '\u21B5',
	    lArr: '\u21D0',
	    uArr: '\u21D1',
	    rArr: '\u21D2',
	    dArr: '\u21D3',
	    hArr: '\u21D4',
	    forall: '\u2200',
	    part: '\u2202',
	    exist: '\u2203',
	    empty: '\u2205',
	    nabla: '\u2207',
	    isin: '\u2208',
	    notin: '\u2209',
	    ni: '\u220B',
	    prod: '\u220F',
	    sum: '\u2211',
	    minus: '\u2212',
	    lowast: '\u2217',
	    radic: '\u221A',
	    prop: '\u221D',
	    infin: '\u221E',
	    ang: '\u2220',
	    and: '\u2227',
	    or: '\u2228',
	    cap: '\u2229',
	    cup: '\u222A',
	    int: '\u222B',
	    there4: '\u2234',
	    sim: '\u223C',
	    cong: '\u2245',
	    asymp: '\u2248',
	    ne: '\u2260',
	    equiv: '\u2261',
	    le: '\u2264',
	    ge: '\u2265',
	    sub: '\u2282',
	    sup: '\u2283',
	    nsub: '\u2284',
	    sube: '\u2286',
	    supe: '\u2287',
	    oplus: '\u2295',
	    otimes: '\u2297',
	    perp: '\u22A5',
	    sdot: '\u22C5',
	    lceil: '\u2308',
	    rceil: '\u2309',
	    lfloor: '\u230A',
	    rfloor: '\u230B',
	    loz: '\u25CA',
	    spades: '\u2660',
	    clubs: '\u2663',
	    hearts: '\u2665',
	    diams: '\u2666',
	    lang: '\u27E8',
	    rang: '\u27E9'
	};


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	Object.defineProperty(exports, "__esModule", { value: true });
	var error_handler_1 = __webpack_require__(10);
	var scanner_1 = __webpack_require__(12);
	var token_1 = __webpack_require__(13);
	var Reader = (function () {
	    function Reader() {
	        this.values = [];
	        this.curly = this.paren = -1;
	    }
	    // A function following one of those tokens is an expression.
	    Reader.prototype.beforeFunctionExpression = function (t) {
	        return ['(', '{', '[', 'in', 'typeof', 'instanceof', 'new',
	            'return', 'case', 'delete', 'throw', 'void',
	            // assignment operators
	            '=', '+=', '-=', '*=', '**=', '/=', '%=', '<<=', '>>=', '>>>=',
	            '&=', '|=', '^=', ',',
	            // binary/unary operators
	            '+', '-', '*', '**', '/', '%', '++', '--', '<<', '>>', '>>>', '&',
	            '|', '^', '!', '~', '&&', '||', '?', ':', '===', '==', '>=',
	            '<=', '<', '>', '!=', '!=='].indexOf(t) >= 0;
	    };
	    // Determine if forward slash (/) is an operator or part of a regular expression
	    // https://github.com/mozilla/sweet.js/wiki/design
	    Reader.prototype.isRegexStart = function () {
	        var previous = this.values[this.values.length - 1];
	        var regex = (previous !== null);
	        switch (previous) {
	            case 'this':
	            case ']':
	                regex = false;
	                break;
	            case ')':
	                var keyword = this.values[this.paren - 1];
	                regex = (keyword === 'if' || keyword === 'while' || keyword === 'for' || keyword === 'with');
	                break;
	            case '}':
	                // Dividing a function by anything makes little sense,
	                // but we have to check for that.
	                regex = false;
	                if (this.values[this.curly - 3] === 'function') {
	                    // Anonymous function, e.g. function(){} /42
	                    var check = this.values[this.curly - 4];
	                    regex = check ? !this.beforeFunctionExpression(check) : false;
	                }
	                else if (this.values[this.curly - 4] === 'function') {
	                    // Named function, e.g. function f(){} /42/
	                    var check = this.values[this.curly - 5];
	                    regex = check ? !this.beforeFunctionExpression(check) : true;
	                }
	                break;
	            default:
	                break;
	        }
	        return regex;
	    };
	    Reader.prototype.push = function (token) {
	        if (token.type === 7 /* Punctuator */ || token.type === 4 /* Keyword */) {
	            if (token.value === '{') {
	                this.curly = this.values.length;
	            }
	            else if (token.value === '(') {
	                this.paren = this.values.length;
	            }
	            this.values.push(token.value);
	        }
	        else {
	            this.values.push(null);
	        }
	    };
	    return Reader;
	}());
	var Tokenizer = (function () {
	    function Tokenizer(code, config) {
	        this.errorHandler = new error_handler_1.ErrorHandler();
	        this.errorHandler.tolerant = config ? (typeof config.tolerant === 'boolean' && config.tolerant) : false;
	        this.scanner = new scanner_1.Scanner(code, this.errorHandler);
	        this.scanner.trackComment = config ? (typeof config.comment === 'boolean' && config.comment) : false;
	        this.trackRange = config ? (typeof config.range === 'boolean' && config.range) : false;
	        this.trackLoc = config ? (typeof config.loc === 'boolean' && config.loc) : false;
	        this.buffer = [];
	        this.reader = new Reader();
	    }
	    Tokenizer.prototype.errors = function () {
	        return this.errorHandler.errors;
	    };
	    Tokenizer.prototype.getNextToken = function () {
	        if (this.buffer.length === 0) {
	            var comments = this.scanner.scanComments();
	            if (this.scanner.trackComment) {
	                for (var i = 0; i < comments.length; ++i) {
	                    var e = comments[i];
	                    var value = this.scanner.source.slice(e.slice[0], e.slice[1]);
	                    var comment = {
	                        type: e.multiLine ? 'BlockComment' : 'LineComment',
	                        value: value
	                    };
	                    if (this.trackRange) {
	                        comment.range = e.range;
	                    }
	                    if (this.trackLoc) {
	                        comment.loc = e.loc;
	                    }
	                    this.buffer.push(comment);
	                }
	            }
	            if (!this.scanner.eof()) {
	                var loc = void 0;
	                if (this.trackLoc) {
	                    loc = {
	                        start: {
	                            line: this.scanner.lineNumber,
	                            column: this.scanner.index - this.scanner.lineStart
	                        },
	                        end: {}
	                    };
	                }
	                var startRegex = (this.scanner.source[this.scanner.index] === '/') && this.reader.isRegexStart();
	                var token = startRegex ? this.scanner.scanRegExp() : this.scanner.lex();
	                this.reader.push(token);
	                var entry = {
	                    type: token_1.TokenName[token.type],
	                    value: this.scanner.source.slice(token.start, token.end)
	                };
	                if (this.trackRange) {
	                    entry.range = [token.start, token.end];
	                }
	                if (this.trackLoc) {
	                    loc.end = {
	                        line: this.scanner.lineNumber,
	                        column: this.scanner.index - this.scanner.lineStart
	                    };
	                    entry.loc = loc;
	                }
	                if (token.type === 9 /* RegularExpression */) {
	                    var pattern = token.pattern;
	                    var flags = token.flags;
	                    entry.regex = { pattern: pattern, flags: flags };
	                }
	                this.buffer.push(entry);
	            }
	        }
	        return this.buffer.shift();
	    };
	    return Tokenizer;
	}());
	exports.Tokenizer = Tokenizer;


/***/ }
/******/ ])
});
;

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*eslint-disable no-use-before-define*/

var common              = __webpack_require__(17);
var YAMLException       = __webpack_require__(23);
var DEFAULT_FULL_SCHEMA = __webpack_require__(31);
var DEFAULT_SAFE_SCHEMA = __webpack_require__(24);

var _toString       = Object.prototype.toString;
var _hasOwnProperty = Object.prototype.hasOwnProperty;

var CHAR_TAB                  = 0x09; /* Tab */
var CHAR_LINE_FEED            = 0x0A; /* LF */
var CHAR_SPACE                = 0x20; /* Space */
var CHAR_EXCLAMATION          = 0x21; /* ! */
var CHAR_DOUBLE_QUOTE         = 0x22; /* " */
var CHAR_SHARP                = 0x23; /* # */
var CHAR_PERCENT              = 0x25; /* % */
var CHAR_AMPERSAND            = 0x26; /* & */
var CHAR_SINGLE_QUOTE         = 0x27; /* ' */
var CHAR_ASTERISK             = 0x2A; /* * */
var CHAR_COMMA                = 0x2C; /* , */
var CHAR_MINUS                = 0x2D; /* - */
var CHAR_COLON                = 0x3A; /* : */
var CHAR_GREATER_THAN         = 0x3E; /* > */
var CHAR_QUESTION             = 0x3F; /* ? */
var CHAR_COMMERCIAL_AT        = 0x40; /* @ */
var CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */
var CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */
var CHAR_GRAVE_ACCENT         = 0x60; /* ` */
var CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */
var CHAR_VERTICAL_LINE        = 0x7C; /* | */
var CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */

var ESCAPE_SEQUENCES = {};

ESCAPE_SEQUENCES[0x00]   = '\\0';
ESCAPE_SEQUENCES[0x07]   = '\\a';
ESCAPE_SEQUENCES[0x08]   = '\\b';
ESCAPE_SEQUENCES[0x09]   = '\\t';
ESCAPE_SEQUENCES[0x0A]   = '\\n';
ESCAPE_SEQUENCES[0x0B]   = '\\v';
ESCAPE_SEQUENCES[0x0C]   = '\\f';
ESCAPE_SEQUENCES[0x0D]   = '\\r';
ESCAPE_SEQUENCES[0x1B]   = '\\e';
ESCAPE_SEQUENCES[0x22]   = '\\"';
ESCAPE_SEQUENCES[0x5C]   = '\\\\';
ESCAPE_SEQUENCES[0x85]   = '\\N';
ESCAPE_SEQUENCES[0xA0]   = '\\_';
ESCAPE_SEQUENCES[0x2028] = '\\L';
ESCAPE_SEQUENCES[0x2029] = '\\P';

var DEPRECATED_BOOLEANS_SYNTAX = [
  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',
  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'
];

function compileStyleMap(schema, map) {
  var result, keys, index, length, tag, style, type;

  if (map === null) return {};

  result = {};
  keys = Object.keys(map);

  for (index = 0, length = keys.length; index < length; index += 1) {
    tag = keys[index];
    style = String(map[tag]);

    if (tag.slice(0, 2) === '!!') {
      tag = 'tag:yaml.org,2002:' + tag.slice(2);
    }
    type = schema.compiledTypeMap['fallback'][tag];

    if (type && _hasOwnProperty.call(type.styleAliases, style)) {
      style = type.styleAliases[style];
    }

    result[tag] = style;
  }

  return result;
}

function encodeHex(character) {
  var string, handle, length;

  string = character.toString(16).toUpperCase();

  if (character <= 0xFF) {
    handle = 'x';
    length = 2;
  } else if (character <= 0xFFFF) {
    handle = 'u';
    length = 4;
  } else if (character <= 0xFFFFFFFF) {
    handle = 'U';
    length = 8;
  } else {
    throw new YAMLException('code point within a string may not be greater than 0xFFFFFFFF');
  }

  return '\\' + handle + common.repeat('0', length - string.length) + string;
}

function State(options) {
  this.schema        = options['schema'] || DEFAULT_FULL_SCHEMA;
  this.indent        = Math.max(1, (options['indent'] || 2));
  this.noArrayIndent = options['noArrayIndent'] || false;
  this.skipInvalid   = options['skipInvalid'] || false;
  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);
  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);
  this.sortKeys      = options['sortKeys'] || false;
  this.lineWidth     = options['lineWidth'] || 80;
  this.noRefs        = options['noRefs'] || false;
  this.noCompatMode  = options['noCompatMode'] || false;
  this.condenseFlow  = options['condenseFlow'] || false;

  this.implicitTypes = this.schema.compiledImplicit;
  this.explicitTypes = this.schema.compiledExplicit;

  this.tag = null;
  this.result = '';

  this.duplicates = [];
  this.usedDuplicates = null;
}

// Indents every line in a string. Empty lines (\n only) are not indented.
function indentString(string, spaces) {
  var ind = common.repeat(' ', spaces),
      position = 0,
      next = -1,
      result = '',
      line,
      length = string.length;

  while (position < length) {
    next = string.indexOf('\n', position);
    if (next === -1) {
      line = string.slice(position);
      position = length;
    } else {
      line = string.slice(position, next + 1);
      position = next + 1;
    }

    if (line.length && line !== '\n') result += ind;

    result += line;
  }

  return result;
}

function generateNextLine(state, level) {
  return '\n' + common.repeat(' ', state.indent * level);
}

function testImplicitResolving(state, str) {
  var index, length, type;

  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {
    type = state.implicitTypes[index];

    if (type.resolve(str)) {
      return true;
    }
  }

  return false;
}

// [33] s-white ::= s-space | s-tab
function isWhitespace(c) {
  return c === CHAR_SPACE || c === CHAR_TAB;
}

// Returns true if the character can be printed without escaping.
// From YAML 1.2: "any allowed characters known to be non-printable
// should also be escaped. [However,] This isn’t mandatory"
// Derived from nb-char - \t - #x85 - #xA0 - #x2028 - #x2029.
function isPrintable(c) {
  return  (0x00020 <= c && c <= 0x00007E)
      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)
      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== 0xFEFF /* BOM */)
      ||  (0x10000 <= c && c <= 0x10FFFF);
}

// Simplified test for values allowed after the first character in plain style.
function isPlainSafe(c) {
  // Uses a subset of nb-char - c-flow-indicator - ":" - "#"
  // where nb-char ::= c-printable - b-char - c-byte-order-mark.
  return isPrintable(c) && c !== 0xFEFF
    // - c-flow-indicator
    && c !== CHAR_COMMA
    && c !== CHAR_LEFT_SQUARE_BRACKET
    && c !== CHAR_RIGHT_SQUARE_BRACKET
    && c !== CHAR_LEFT_CURLY_BRACKET
    && c !== CHAR_RIGHT_CURLY_BRACKET
    // - ":" - "#"
    && c !== CHAR_COLON
    && c !== CHAR_SHARP;
}

// Simplified test for values allowed as the first character in plain style.
function isPlainSafeFirst(c) {
  // Uses a subset of ns-char - c-indicator
  // where ns-char = nb-char - s-white.
  return isPrintable(c) && c !== 0xFEFF
    && !isWhitespace(c) // - s-white
    // - (c-indicator ::=
    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”
    && c !== CHAR_MINUS
    && c !== CHAR_QUESTION
    && c !== CHAR_COLON
    && c !== CHAR_COMMA
    && c !== CHAR_LEFT_SQUARE_BRACKET
    && c !== CHAR_RIGHT_SQUARE_BRACKET
    && c !== CHAR_LEFT_CURLY_BRACKET
    && c !== CHAR_RIGHT_CURLY_BRACKET
    // | “#” | “&” | “*” | “!” | “|” | “>” | “'” | “"”
    && c !== CHAR_SHARP
    && c !== CHAR_AMPERSAND
    && c !== CHAR_ASTERISK
    && c !== CHAR_EXCLAMATION
    && c !== CHAR_VERTICAL_LINE
    && c !== CHAR_GREATER_THAN
    && c !== CHAR_SINGLE_QUOTE
    && c !== CHAR_DOUBLE_QUOTE
    // | “%” | “@” | “`”)
    && c !== CHAR_PERCENT
    && c !== CHAR_COMMERCIAL_AT
    && c !== CHAR_GRAVE_ACCENT;
}

// Determines whether block indentation indicator is required.
function needIndentIndicator(string) {
  var leadingSpaceRe = /^\n* /;
  return leadingSpaceRe.test(string);
}

var STYLE_PLAIN   = 1,
    STYLE_SINGLE  = 2,
    STYLE_LITERAL = 3,
    STYLE_FOLDED  = 4,
    STYLE_DOUBLE  = 5;

// Determines which scalar styles are possible and returns the preferred style.
// lineWidth = -1 => no limit.
// Pre-conditions: str.length > 0.
// Post-conditions:
//    STYLE_PLAIN or STYLE_SINGLE => no \n are in the string.
//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).
//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).
function chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth, testAmbiguousType) {
  var i;
  var char;
  var hasLineBreak = false;
  var hasFoldableLine = false; // only checked if shouldTrackWidth
  var shouldTrackWidth = lineWidth !== -1;
  var previousLineBreak = -1; // count the first line correctly
  var plain = isPlainSafeFirst(string.charCodeAt(0))
          && !isWhitespace(string.charCodeAt(string.length - 1));

  if (singleLineOnly) {
    // Case: no block styles.
    // Check for disallowed characters to rule out plain and single.
    for (i = 0; i < string.length; i++) {
      char = string.charCodeAt(i);
      if (!isPrintable(char)) {
        return STYLE_DOUBLE;
      }
      plain = plain && isPlainSafe(char);
    }
  } else {
    // Case: block styles permitted.
    for (i = 0; i < string.length; i++) {
      char = string.charCodeAt(i);
      if (char === CHAR_LINE_FEED) {
        hasLineBreak = true;
        // Check if any line can be folded.
        if (shouldTrackWidth) {
          hasFoldableLine = hasFoldableLine ||
            // Foldable line = too long, and not more-indented.
            (i - previousLineBreak - 1 > lineWidth &&
             string[previousLineBreak + 1] !== ' ');
          previousLineBreak = i;
        }
      } else if (!isPrintable(char)) {
        return STYLE_DOUBLE;
      }
      plain = plain && isPlainSafe(char);
    }
    // in case the end is missing a \n
    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&
      (i - previousLineBreak - 1 > lineWidth &&
       string[previousLineBreak + 1] !== ' '));
  }
  // Although every style can represent \n without escaping, prefer block styles
  // for multiline, since they're more readable and they don't add empty lines.
  // Also prefer folding a super-long line.
  if (!hasLineBreak && !hasFoldableLine) {
    // Strings interpretable as another type have to be quoted;
    // e.g. the string 'true' vs. the boolean true.
    return plain && !testAmbiguousType(string)
      ? STYLE_PLAIN : STYLE_SINGLE;
  }
  // Edge case: block indentation indicator can only have one digit.
  if (indentPerLevel > 9 && needIndentIndicator(string)) {
    return STYLE_DOUBLE;
  }
  // At this point we know block styles are valid.
  // Prefer literal style unless we want to fold.
  return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;
}

// Note: line breaking/folding is implemented for only the folded style.
// NB. We drop the last trailing newline (if any) of a returned block scalar
//  since the dumper adds its own newline. This always works:
//    • No ending newline => unaffected; already using strip "-" chomping.
//    • Ending newline    => removed then restored.
//  Importantly, this keeps the "+" chomp indicator from gaining an extra line.
function writeScalar(state, string, level, iskey) {
  state.dump = (function () {
    if (string.length === 0) {
      return "''";
    }
    if (!state.noCompatMode &&
        DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1) {
      return "'" + string + "'";
    }

    var indent = state.indent * Math.max(1, level); // no 0-indent scalars
    // As indentation gets deeper, let the width decrease monotonically
    // to the lower bound min(state.lineWidth, 40).
    // Note that this implies
    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.
    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.
    // This behaves better than a constant minimum width which disallows narrower options,
    // or an indent threshold which causes the width to suddenly increase.
    var lineWidth = state.lineWidth === -1
      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);

    // Without knowing if keys are implicit/explicit, assume implicit for safety.
    var singleLineOnly = iskey
      // No block styles in flow mode.
      || (state.flowLevel > -1 && level >= state.flowLevel);
    function testAmbiguity(string) {
      return testImplicitResolving(state, string);
    }

    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth, testAmbiguity)) {
      case STYLE_PLAIN:
        return string;
      case STYLE_SINGLE:
        return "'" + string.replace(/'/g, "''") + "'";
      case STYLE_LITERAL:
        return '|' + blockHeader(string, state.indent)
          + dropEndingNewline(indentString(string, indent));
      case STYLE_FOLDED:
        return '>' + blockHeader(string, state.indent)
          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));
      case STYLE_DOUBLE:
        return '"' + escapeString(string, lineWidth) + '"';
      default:
        throw new YAMLException('impossible error: invalid scalar style');
    }
  }());
}

// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.
function blockHeader(string, indentPerLevel) {
  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';

  // note the special case: the string '\n' counts as a "trailing" empty line.
  var clip =          string[string.length - 1] === '\n';
  var keep = clip && (string[string.length - 2] === '\n' || string === '\n');
  var chomp = keep ? '+' : (clip ? '' : '-');

  return indentIndicator + chomp + '\n';
}

// (See the note for writeScalar.)
function dropEndingNewline(string) {
  return string[string.length - 1] === '\n' ? string.slice(0, -1) : string;
}

// Note: a long line without a suitable break point will exceed the width limit.
// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.
function foldString(string, width) {
  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—
  // unless they're before or after a more-indented line, or at the very
  // beginning or end, in which case $k$ maps to $k$.
  // Therefore, parse each chunk as newline(s) followed by a content line.
  var lineRe = /(\n+)([^\n]*)/g;

  // first line (possibly an empty line)
  var result = (function () {
    var nextLF = string.indexOf('\n');
    nextLF = nextLF !== -1 ? nextLF : string.length;
    lineRe.lastIndex = nextLF;
    return foldLine(string.slice(0, nextLF), width);
  }());
  // If we haven't reached the first content line yet, don't add an extra \n.
  var prevMoreIndented = string[0] === '\n' || string[0] === ' ';
  var moreIndented;

  // rest of the lines
  var match;
  while ((match = lineRe.exec(string))) {
    var prefix = match[1], line = match[2];
    moreIndented = (line[0] === ' ');
    result += prefix
      + (!prevMoreIndented && !moreIndented && line !== ''
        ? '\n' : '')
      + foldLine(line, width);
    prevMoreIndented = moreIndented;
  }

  return result;
}

// Greedy line breaking.
// Picks the longest line under the limit each time,
// otherwise settles for the shortest line over the limit.
// NB. More-indented lines *cannot* be folded, as that would add an extra \n.
function foldLine(line, width) {
  if (line === '' || line[0] === ' ') return line;

  // Since a more-indented line adds a \n, breaks can't be followed by a space.
  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.
  var match;
  // start is an inclusive index. end, curr, and next are exclusive.
  var start = 0, end, curr = 0, next = 0;
  var result = '';

  // Invariants: 0 <= start <= length-1.
  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.
  // Inside the loop:
  //   A match implies length >= 2, so curr and next are <= length-2.
  while ((match = breakRe.exec(line))) {
    next = match.index;
    // maintain invariant: curr - start <= width
    if (next - start > width) {
      end = (curr > start) ? curr : next; // derive end <= length-2
      result += '\n' + line.slice(start, end);
      // skip the space that was output as \n
      start = end + 1;                    // derive start <= length-1
    }
    curr = next;
  }

  // By the invariants, start <= length-1, so there is something left over.
  // It is either the whole string or a part starting from non-whitespace.
  result += '\n';
  // Insert a break if the remainder is too long and there is a break available.
  if (line.length - start > width && curr > start) {
    result += line.slice(start, curr) + '\n' + line.slice(curr + 1);
  } else {
    result += line.slice(start);
  }

  return result.slice(1); // drop extra \n joiner
}

// Escapes a double-quoted string.
function escapeString(string) {
  var result = '';
  var char, nextChar;
  var escapeSeq;

  for (var i = 0; i < string.length; i++) {
    char = string.charCodeAt(i);
    // Check for surrogate pairs (reference Unicode 3.0 section "3.7 Surrogates").
    if (char >= 0xD800 && char <= 0xDBFF/* high surrogate */) {
      nextChar = string.charCodeAt(i + 1);
      if (nextChar >= 0xDC00 && nextChar <= 0xDFFF/* low surrogate */) {
        // Combine the surrogate pair and store it escaped.
        result += encodeHex((char - 0xD800) * 0x400 + nextChar - 0xDC00 + 0x10000);
        // Advance index one extra since we already used that char here.
        i++; continue;
      }
    }
    escapeSeq = ESCAPE_SEQUENCES[char];
    result += !escapeSeq && isPrintable(char)
      ? string[i]
      : escapeSeq || encodeHex(char);
  }

  return result;
}

function writeFlowSequence(state, level, object) {
  var _result = '',
      _tag    = state.tag,
      index,
      length;

  for (index = 0, length = object.length; index < length; index += 1) {
    // Write only valid elements.
    if (writeNode(state, level, object[index], false, false)) {
      if (index !== 0) _result += ',' + (!state.condenseFlow ? ' ' : '');
      _result += state.dump;
    }
  }

  state.tag = _tag;
  state.dump = '[' + _result + ']';
}

function writeBlockSequence(state, level, object, compact) {
  var _result = '',
      _tag    = state.tag,
      index,
      length;

  for (index = 0, length = object.length; index < length; index += 1) {
    // Write only valid elements.
    if (writeNode(state, level + 1, object[index], true, true)) {
      if (!compact || index !== 0) {
        _result += generateNextLine(state, level);
      }

      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
        _result += '-';
      } else {
        _result += '- ';
      }

      _result += state.dump;
    }
  }

  state.tag = _tag;
  state.dump = _result || '[]'; // Empty sequence if no valid values.
}

function writeFlowMapping(state, level, object) {
  var _result       = '',
      _tag          = state.tag,
      objectKeyList = Object.keys(object),
      index,
      length,
      objectKey,
      objectValue,
      pairBuffer;

  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
    pairBuffer = state.condenseFlow ? '"' : '';

    if (index !== 0) pairBuffer += ', ';

    objectKey = objectKeyList[index];
    objectValue = object[objectKey];

    if (!writeNode(state, level, objectKey, false, false)) {
      continue; // Skip this pair because of invalid key;
    }

    if (state.dump.length > 1024) pairBuffer += '? ';

    pairBuffer += state.dump + (state.condenseFlow ? '"' : '') + ':' + (state.condenseFlow ? '' : ' ');

    if (!writeNode(state, level, objectValue, false, false)) {
      continue; // Skip this pair because of invalid value.
    }

    pairBuffer += state.dump;

    // Both key and value are valid.
    _result += pairBuffer;
  }

  state.tag = _tag;
  state.dump = '{' + _result + '}';
}

function writeBlockMapping(state, level, object, compact) {
  var _result       = '',
      _tag          = state.tag,
      objectKeyList = Object.keys(object),
      index,
      length,
      objectKey,
      objectValue,
      explicitPair,
      pairBuffer;

  // Allow sorting keys so that the output file is deterministic
  if (state.sortKeys === true) {
    // Default sorting
    objectKeyList.sort();
  } else if (typeof state.sortKeys === 'function') {
    // Custom sort function
    objectKeyList.sort(state.sortKeys);
  } else if (state.sortKeys) {
    // Something is wrong
    throw new YAMLException('sortKeys must be a boolean or a function');
  }

  for (index = 0, length = objectKeyList.length; index < length; index += 1) {
    pairBuffer = '';

    if (!compact || index !== 0) {
      pairBuffer += generateNextLine(state, level);
    }

    objectKey = objectKeyList[index];
    objectValue = object[objectKey];

    if (!writeNode(state, level + 1, objectKey, true, true, true)) {
      continue; // Skip this pair because of invalid key.
    }

    explicitPair = (state.tag !== null && state.tag !== '?') ||
                   (state.dump && state.dump.length > 1024);

    if (explicitPair) {
      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
        pairBuffer += '?';
      } else {
        pairBuffer += '? ';
      }
    }

    pairBuffer += state.dump;

    if (explicitPair) {
      pairBuffer += generateNextLine(state, level);
    }

    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {
      continue; // Skip this pair because of invalid value.
    }

    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {
      pairBuffer += ':';
    } else {
      pairBuffer += ': ';
    }

    pairBuffer += state.dump;

    // Both key and value are valid.
    _result += pairBuffer;
  }

  state.tag = _tag;
  state.dump = _result || '{}'; // Empty mapping if no valid pairs.
}

function detectType(state, object, explicit) {
  var _result, typeList, index, length, type, style;

  typeList = explicit ? state.explicitTypes : state.implicitTypes;

  for (index = 0, length = typeList.length; index < length; index += 1) {
    type = typeList[index];

    if ((type.instanceOf  || type.predicate) &&
        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&
        (!type.predicate  || type.predicate(object))) {

      state.tag = explicit ? type.tag : '?';

      if (type.represent) {
        style = state.styleMap[type.tag] || type.defaultStyle;

        if (_toString.call(type.represent) === '[object Function]') {
          _result = type.represent(object, style);
        } else if (_hasOwnProperty.call(type.represent, style)) {
          _result = type.represent[style](object, style);
        } else {
          throw new YAMLException('!<' + type.tag + '> tag resolver accepts not "' + style + '" style');
        }

        state.dump = _result;
      }

      return true;
    }
  }

  return false;
}

// Serializes `object` and writes it to global `result`.
// Returns true on success, or false on invalid object.
//
function writeNode(state, level, object, block, compact, iskey) {
  state.tag = null;
  state.dump = object;

  if (!detectType(state, object, false)) {
    detectType(state, object, true);
  }

  var type = _toString.call(state.dump);

  if (block) {
    block = (state.flowLevel < 0 || state.flowLevel > level);
  }

  var objectOrArray = type === '[object Object]' || type === '[object Array]',
      duplicateIndex,
      duplicate;

  if (objectOrArray) {
    duplicateIndex = state.duplicates.indexOf(object);
    duplicate = duplicateIndex !== -1;
  }

  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {
    compact = false;
  }

  if (duplicate && state.usedDuplicates[duplicateIndex]) {
    state.dump = '*ref_' + duplicateIndex;
  } else {
    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {
      state.usedDuplicates[duplicateIndex] = true;
    }
    if (type === '[object Object]') {
      if (block && (Object.keys(state.dump).length !== 0)) {
        writeBlockMapping(state, level, state.dump, compact);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + state.dump;
        }
      } else {
        writeFlowMapping(state, level, state.dump);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
        }
      }
    } else if (type === '[object Array]') {
      var arrayLevel = (state.noArrayIndent && (level > 0)) ? level - 1 : level;
      if (block && (state.dump.length !== 0)) {
        writeBlockSequence(state, arrayLevel, state.dump, compact);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + state.dump;
        }
      } else {
        writeFlowSequence(state, arrayLevel, state.dump);
        if (duplicate) {
          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;
        }
      }
    } else if (type === '[object String]') {
      if (state.tag !== '?') {
        writeScalar(state, state.dump, level, iskey);
      }
    } else {
      if (state.skipInvalid) return false;
      throw new YAMLException('unacceptable kind of an object to dump ' + type);
    }

    if (state.tag !== null && state.tag !== '?') {
      state.dump = '!<' + state.tag + '> ' + state.dump;
    }
  }

  return true;
}

function getDuplicateReferences(object, state) {
  var objects = [],
      duplicatesIndexes = [],
      index,
      length;

  inspectNode(object, objects, duplicatesIndexes);

  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {
    state.duplicates.push(objects[duplicatesIndexes[index]]);
  }
  state.usedDuplicates = new Array(length);
}

function inspectNode(object, objects, duplicatesIndexes) {
  var objectKeyList,
      index,
      length;

  if (object !== null && typeof object === 'object') {
    index = objects.indexOf(object);
    if (index !== -1) {
      if (duplicatesIndexes.indexOf(index) === -1) {
        duplicatesIndexes.push(index);
      }
    } else {
      objects.push(object);

      if (Array.isArray(object)) {
        for (index = 0, length = object.length; index < length; index += 1) {
          inspectNode(object[index], objects, duplicatesIndexes);
        }
      } else {
        objectKeyList = Object.keys(object);

        for (index = 0, length = objectKeyList.length; index < length; index += 1) {
          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);
        }
      }
    }
  }
}

function dump(input, options) {
  options = options || {};

  var state = new State(options);

  if (!state.noRefs) getDuplicateReferences(input, state);

  if (writeNode(state, 0, input, true, true)) return state.dump + '\n';

  return '';
}

function safeDump(input, options) {
  return dump(input, common.extend({ schema: DEFAULT_SAFE_SCHEMA }, options));
}

module.exports.dump     = dump;
module.exports.safeDump = safeDump;


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const path = __webpack_require__(5);
const resolveFrom = __webpack_require__(230);
const callerPath = __webpack_require__(232);

module.exports = moduleId => {
	if (typeof moduleId !== 'string') {
		throw new TypeError('Expected a string');
	}

	const filePath = resolveFrom(path.dirname(callerPath()), moduleId);

	// Delete itself from module parent
	if (__webpack_require__.c[filePath] && __webpack_require__.c[filePath].parent) {
		let i = __webpack_require__.c[filePath].parent.children.length;

		while (i--) {
			if (__webpack_require__.c[filePath].parent.children[i].id === filePath) {
				__webpack_require__.c[filePath].parent.children.splice(i, 1);
			}
		}
	}

	// Delete module from cache
	delete __webpack_require__.c[filePath];

	// Return fresh module
	return __webpack_require__(235)(filePath);
};


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const path = __webpack_require__(5);
const Module = __webpack_require__(231);

const resolveFrom = (fromDir, moduleId, silent) => {
	if (typeof fromDir !== 'string') {
		throw new TypeError(`Expected \`fromDir\` to be of type \`string\`, got \`${typeof fromDir}\``);
	}

	if (typeof moduleId !== 'string') {
		throw new TypeError(`Expected \`moduleId\` to be of type \`string\`, got \`${typeof moduleId}\``);
	}

	fromDir = path.resolve(fromDir);
	const fromFile = path.join(fromDir, 'noop.js');

	const resolveFileName = () => Module._resolveFilename(moduleId, {
		id: fromFile,
		filename: fromFile,
		paths: Module._nodeModulePaths(fromDir)
	});

	if (silent) {
		try {
			return resolveFileName();
		} catch (err) {
			return null;
		}
	}

	return resolveFileName();
};

module.exports = (fromDir, moduleId) => resolveFrom(fromDir, moduleId);
module.exports.silent = (fromDir, moduleId) => resolveFrom(fromDir, moduleId, true);


/***/ }),
/* 231 */
/***/ (function(module, exports) {

module.exports = require("module");

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const callerCallsite = __webpack_require__(233);

module.exports = () => callerCallsite().getFileName();


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const callsites = __webpack_require__(234);

module.exports = () => {
	const c = callsites();
	let caller;

	for (let i = 0; i < c.length; i++) {
		const hasReceiver = c[i].getTypeName() !== null;

		if (hasReceiver) {
			caller = i;
			break;
		}
	}

	return c[caller];
};


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = () => {
	const _ = Error.prepareStackTrace;
	Error.prepareStackTrace = (_, stack) => stack;
	const stack = new Error().stack.slice(1);
	Error.prepareStackTrace = _;
	return stack;
};


/***/ }),
/* 235 */
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 235;

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//      


const fs = __webpack_require__(13);

                
                          
  

function readFile(filepath        , options          )                         {
  options = options || {};
  const throwNotFound = options.throwNotFound || false;

  return new Promise((resolve, reject) => {
    fs.readFile(filepath, 'utf8', (err, content) => {
      if (err && err.code === 'ENOENT' && !throwNotFound) {
        return resolve(null);
      }
      if (err) return reject(err);
      resolve(content);
    });
  });
}

readFile.sync = function readFileSync(
  filepath        ,
  options          
)                {
  options = options || {};
  const throwNotFound = options.throwNotFound || false;

  try {
    return fs.readFileSync(filepath, 'utf8');
  } catch (err) {
    if (err.code === 'ENOENT' && !throwNotFound) {
      return null;
    }
    throw err;
  }
};

module.exports = readFile;


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//      


function cacheWrapper   (cache                 , key        , fn         )    {
  if (!cache) {
    return fn();
  }

  const cached = cache.get(key);
  if (cached !== undefined) {
    return cached;
  }

  const result = fn();
  cache.set(key, result);
  return result;
}

module.exports = cacheWrapper;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//      


const path = __webpack_require__(5);
const isDirectory = __webpack_require__(239);

function getDirectory(filepath        )                  {
  return new Promise((resolve, reject) => {
    return isDirectory(filepath, (err, filepathIsDirectory) => {
      if (err) {
        return reject(err);
      }
      return resolve(filepathIsDirectory ? filepath : path.dirname(filepath));
    });
  });
}

getDirectory.sync = function getDirectorySync(filepath        )         {
  return isDirectory.sync(filepath) ? filepath : path.dirname(filepath);
};

module.exports = getDirectory;


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * is-directory <https://github.com/jonschlinkert/is-directory>
 *
 * Copyright (c) 2014-2015, Jon Schlinkert.
 * Licensed under the MIT License.
 */



var fs = __webpack_require__(13);

/**
 * async
 */

function isDirectory(filepath, cb) {
  if (typeof cb !== 'function') {
    throw new Error('expected a callback function');
  }

  if (typeof filepath !== 'string') {
    cb(new Error('expected filepath to be a string'));
    return;
  }

  fs.stat(filepath, function(err, stats) {
    if (err) {
      if (err.code === 'ENOENT') {
        cb(null, false);
        return;
      }
      cb(err);
      return;
    }
    cb(null, stats.isDirectory());
  });
}

/**
 * sync
 */

isDirectory.sync = function isDirectorySync(filepath) {
  if (typeof filepath !== 'string') {
    throw new Error('expected filepath to be a string');
  }

  try {
    var stat = fs.statSync(filepath);
    return stat.isDirectory();
  } catch (err) {
    if (err.code === 'ENOENT') {
      return false;
    } else {
      throw err;
    }
  }
  return false;
};

/**
 * Expose `isDirectory`
 */

module.exports = isDirectory;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
//      


// Resolves property names or property paths defined with period-delimited
// strings or arrays of strings. Property names that are found on the source
// object are used directly (even if they include a period).
// Nested property names that include periods, within a path, are only
// understood in array paths.
function getPropertyByPath(source        , path                        )      {
  if (typeof path === 'string' && source.hasOwnProperty(path)) {
    return source[path];
  }

  const parsedPath = typeof path === 'string' ? path.split('.') : path;
  return parsedPath.reduce((previous, key) => {
    if (previous === undefined) {
      return previous;
    }
    return previous[key];
  }, source);
}

module.exports = getPropertyByPath;


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inspect = __webpack_require__(34).inspect;

module.exports = function isResolvable(moduleId, options) {
	if (typeof moduleId !== 'string') {
		throw new TypeError(inspect(moduleId) + ' is not a string. Expected a valid Node.js module identifier (<string>), for example \'eslint\', \'./index.js\', \'./lib\'.');
	}

	try {
		__webpack_require__(242).resolve(moduleId, options);
		return true;
	} catch (err) {
		return false;
	}
};


/***/ }),
/* 242 */
/***/ (function(module, exports) {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = function() { return []; };
webpackEmptyContext.resolve = webpackEmptyContext;
module.exports = webpackEmptyContext;
webpackEmptyContext.id = 242;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * @author Ben Briggs
 * @license MIT
 * @module cssnano:preset:default
 * @overview
 *
 * This default preset for cssnano only includes transforms that make no
 * assumptions about your CSS other than what is passed in. In previous
 * iterations of cssnano, assumptions were made about your CSS which caused
 * output to look different in certain use cases, but not others. These
 * transforms have been moved from the defaults to other presets, to make
 * this preset require only minimal configuration.
 */

// const cssDeclarationSorter = require('css-declaration-sorter');
const postcssDiscardComments = __webpack_require__(244);
const postcssReduceInitial = __webpack_require__(247);
const postcssMinifyGradients = __webpack_require__(962);
// const postcssSvgo = require('postcss-svgo');
const postcssReduceTransforms = __webpack_require__(983);
const postcssConvertValues = __webpack_require__(984);
// const postcssCalc = require('postcss-calc');
const postcssColormin = __webpack_require__(986).default;
const postcssOrderedValues = __webpack_require__(996);
const postcssMinifySelectors = __webpack_require__(1002);
const postcssMinifyParams = __webpack_require__(1014);
// const postcssNormalizeCharset = require('postcss-normalize-charset');
const postcssMinifyFontValues = __webpack_require__(1015);
const postcssNormalizeUrl = __webpack_require__(1019);
// const postcssMergeLonghand = require('postcss-merge-longhand');
const postcssDiscardDuplicates = __webpack_require__(1022);
// const postcssDiscardOverridden = require('postcss-discard-overridden');
const postcssNormalizeRepeatStyle = __webpack_require__(1023);
const postcssMergeRules = __webpack_require__(1025);
const postcssDiscardEmpty = __webpack_require__(1038);
const postcssUniqueSelectors = __webpack_require__(1039);
const postcssNormalizeString = __webpack_require__(1040);
const postcssNormalizePositions = __webpack_require__(1041);
const postcssNormalizeWhitespace = __webpack_require__(1042);
// const postcssNormalizeUnicode = require('postcss-normalize-unicode');
const postcssNormalizeDisplayValues = __webpack_require__(1043);
// const postcssNormalizeTimingFunctions = require('postcss-normalize-timing-functions');
const rawCache = __webpack_require__(1045);

const defaultOpts = {
  convertValues: {
    length: false,
  },
//   normalizeCharset: {
//     add: false,
//   },
  cssDeclarationSorter: {
    exclude: true,
  },
};

module.exports = function defaultPreset (opts = {}) {
  const options = Object.assign({}, defaultOpts, opts);

  const plugins = [
    [postcssDiscardComments, options.discardComments],
    [postcssMinifyGradients, options.minifyGradients],
    [postcssReduceInitial, options.reduceInitial],
    // [postcssSvgo, options.svgo],
    [postcssNormalizeDisplayValues, options.normalizeDisplayValues],
    [postcssReduceTransforms, options.reduceTransforms],
    [postcssColormin, options.colormin],
    // [postcssNormalizeTimingFunctions, options.normalizeTimingFunctions],
    // [postcssCalc, options.calc],
    [postcssConvertValues, options.convertValues],
    [postcssOrderedValues, options.orderedValues],
    [postcssMinifySelectors, options.minifySelectors],
    [postcssMinifyParams, options.minifyParams],
    // [postcssNormalizeCharset, options.normalizeCharset],
    // [postcssDiscardOverridden, options.discardOverridden],
    [postcssNormalizeString, options.normalizeString],
    // [postcssNormalizeUnicode, options.normalizeUnicode],
    [postcssMinifyFontValues, options.minifyFontValues],
    [postcssNormalizeUrl, options.normalizeUrl],
    [postcssNormalizeRepeatStyle, options.normalizeRepeatStyle],
    [postcssNormalizePositions, options.normalizePositions],
    [postcssNormalizeWhitespace, options.normalizeWhitespace],
    // [postcssMergeLonghand, options.mergeLonghand],
    [postcssDiscardDuplicates, options.discardDuplicates],
    [postcssMergeRules, options.mergeRules],
    [postcssDiscardEmpty, options.discardEmpty],
    [postcssUniqueSelectors, options.uniqueSelectors],
    // [cssDeclarationSorter, options.cssDeclarationSorter],
    [rawCache, options.rawCache],
  ];

  return {plugins};
}


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _commentRemover = __webpack_require__(245);

var _commentRemover2 = _interopRequireDefault(_commentRemover);

var _commentParser = __webpack_require__(246);

var _commentParser2 = _interopRequireDefault(_commentParser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const { space } = _postcss.list;

exports.default = (0, _postcss.plugin)("postcss-discard-comments", (opts = {}) => {
    const remover = new _commentRemover2.default(opts);
    const matcherCache = {};
    const replacerCache = {};

    function matchesComments(source) {
        if (matcherCache[source]) {
            return matcherCache[source];
        }

        const result = (0, _commentParser2.default)(source).filter(([type]) => type);

        matcherCache[source] = result;

        return result;
    }

    function replaceComments(source, separator = " ") {
        const key = source + "@|@" + separator;

        if (replacerCache[key]) {
            return replacerCache[key];
        }

        const parsed = (0, _commentParser2.default)(source).reduce((value, [type, start, end]) => {
            const contents = source.slice(start, end);

            if (!type) {
                return value + contents;
            }

            if (remover.canRemove(contents)) {
                return value + separator;
            }

            return `${value}/*${contents}*/`;
        }, "");

        const result = space(parsed).join(" ");

        replacerCache[key] = result;

        return result;
    }

    return css => {
        css.walk(node => {
            if (node.type === "comment" && remover.canRemove(node.text)) {
                node.remove();

                return;
            }

            if (node.raws.between) {
                node.raws.between = replaceComments(node.raws.between);
            }

            if (node.type === "decl") {
                if (node.raws.value && node.raws.value.raw) {
                    if (node.raws.value.value === node.value) {
                        node.value = replaceComments(node.raws.value.raw);
                    } else {
                        node.value = replaceComments(node.value);
                    }

                    node.raws.value = null;
                }

                if (node.raws.important) {
                    node.raws.important = replaceComments(node.raws.important);

                    const b = matchesComments(node.raws.important);

                    node.raws.important = b.length ? node.raws.important : "!important";
                }

                return;
            }

            if (node.type === "rule" && node.raws.selector && node.raws.selector.raw) {
                node.raws.selector.raw = replaceComments(node.raws.selector.raw, "");

                return;
            }

            if (node.type === "atrule") {
                if (node.raws.afterName) {
                    const commentsReplaced = replaceComments(node.raws.afterName);

                    if (!commentsReplaced.length) {
                        node.raws.afterName = commentsReplaced + " ";
                    } else {
                        node.raws.afterName = " " + commentsReplaced + " ";
                    }
                }

                if (node.raws.params && node.raws.params.raw) {
                    node.raws.params.raw = replaceComments(node.raws.params.raw);
                }
            }
        });
    };
});
module.exports = exports["default"];

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
function CommentRemover(options) {
    this.options = options;
}

CommentRemover.prototype.canRemove = function (comment) {
    const remove = this.options.remove;

    if (remove) {
        return remove(comment);
    } else {
        const isImportant = comment.indexOf('!') === 0;

        if (!isImportant) {
            return true;
        }

        if (this.options.removeAll || this._hasFirst) {
            return true;
        } else if (this.options.removeAllButFirst && !this._hasFirst) {
            this._hasFirst = true;
            return false;
        }
    }
};

exports.default = CommentRemover;
module.exports = exports['default'];

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = commentParser;
function commentParser(input) {
    const tokens = [];
    const length = input.length;
    let pos = 0;
    let next;

    while (pos < length) {
        next = input.indexOf('/*', pos);

        if (~next) {
            tokens.push([0, pos, next]);
            pos = next;

            next = input.indexOf('*/', pos + 2);
            tokens.push([1, pos + 2, next]);
            pos = next + 2;
        } else {
            tokens.push([0, pos, length]);
            pos = length;
        }
    }

    return tokens;
};
module.exports = exports['default'];

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _has = __webpack_require__(25);

var _has2 = _interopRequireDefault(_has);

var _browserslist = __webpack_require__(14);

var _browserslist2 = _interopRequireDefault(_browserslist);

var _caniuseApi = __webpack_require__(76);

var _fromInitial = __webpack_require__(960);

var _fromInitial2 = _interopRequireDefault(_fromInitial);

var _toInitial = __webpack_require__(961);

var _toInitial2 = _interopRequireDefault(_toInitial);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const initial = 'initial';

exports.default = (0, _postcss.plugin)('postcss-reduce-initial', () => {
    return (css, result) => {
        const resultOpts = result.opts || {};
        const browsers = (0, _browserslist2.default)(null, {
            stats: resultOpts.stats,
            path: __dirname,
            env: resultOpts.env
        });

        const initialSupport = (0, _caniuseApi.isSupported)('css-initial-value', browsers);

        css.walkDecls(decl => {
            const lowerCasedProp = decl.prop.toLowerCase();

            if (initialSupport && (0, _has2.default)(_toInitial2.default, lowerCasedProp) && decl.value.toLowerCase() === _toInitial2.default[lowerCasedProp]) {
                decl.value = initial;
                return;
            }

            if (decl.value.toLowerCase() !== initial || !_fromInitial2.default[lowerCasedProp]) {
                return;
            }

            decl.value = _fromInitial2.default[lowerCasedProp];
        });
    };
});
module.exports = exports['default'];

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(249);

module.exports = Function.prototype.bind || implementation;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


/***/ }),
/* 250 */
/***/ (function(module) {

module.exports = [{"name":"nodejs","version":"0.2.0","date":"2011-08-26","lts":false},{"name":"nodejs","version":"0.3.0","date":"2011-08-26","lts":false},{"name":"nodejs","version":"0.4.0","date":"2011-08-26","lts":false},{"name":"nodejs","version":"0.5.0","date":"2011-08-26","lts":false},{"name":"nodejs","version":"0.6.0","date":"2011-11-04","lts":false},{"name":"nodejs","version":"0.7.0","date":"2012-01-17","lts":false},{"name":"nodejs","version":"0.8.0","date":"2012-06-22","lts":false},{"name":"nodejs","version":"0.9.0","date":"2012-07-20","lts":false},{"name":"nodejs","version":"0.10.0","date":"2013-03-11","lts":false},{"name":"nodejs","version":"0.11.0","date":"2013-03-28","lts":false},{"name":"nodejs","version":"0.12.0","date":"2015-02-06","lts":false},{"name":"iojs","version":"1.0.0","date":"2015-01-14"},{"name":"iojs","version":"1.1.0","date":"2015-02-03"},{"name":"iojs","version":"1.2.0","date":"2015-02-11"},{"name":"iojs","version":"1.3.0","date":"2015-02-20"},{"name":"iojs","version":"1.5.0","date":"2015-03-06"},{"name":"iojs","version":"1.6.0","date":"2015-03-20"},{"name":"iojs","version":"2.0.0","date":"2015-05-04"},{"name":"iojs","version":"2.1.0","date":"2015-05-24"},{"name":"iojs","version":"2.2.0","date":"2015-06-01"},{"name":"iojs","version":"2.3.0","date":"2015-06-13"},{"name":"iojs","version":"2.4.0","date":"2015-07-17"},{"name":"iojs","version":"2.5.0","date":"2015-07-28"},{"name":"iojs","version":"3.0.0","date":"2015-08-04"},{"name":"iojs","version":"3.1.0","date":"2015-08-19"},{"name":"iojs","version":"3.2.0","date":"2015-08-25"},{"name":"iojs","version":"3.3.0","date":"2015-09-02"},{"name":"nodejs","version":"4.0.0","date":"2015-09-08","lts":false},{"name":"nodejs","version":"4.1.0","date":"2015-09-17","lts":false},{"name":"nodejs","version":"4.2.0","date":"2015-10-12","lts":"Argon"},{"name":"nodejs","version":"4.3.0","date":"2016-02-09","lts":"Argon"},{"name":"nodejs","version":"4.4.0","date":"2016-03-08","lts":"Argon"},{"name":"nodejs","version":"4.5.0","date":"2016-08-16","lts":"Argon"},{"name":"nodejs","version":"4.6.0","date":"2016-09-27","lts":"Argon"},{"name":"nodejs","version":"4.7.0","date":"2016-12-06","lts":"Argon"},{"name":"nodejs","version":"4.8.0","date":"2017-02-21","lts":"Argon"},{"name":"nodejs","version":"4.9.0","date":"2018-03-28","lts":"Argon"},{"name":"nodejs","version":"5.0.0","date":"2015-10-29","lts":false},{"name":"nodejs","version":"5.1.0","date":"2015-11-17","lts":false},{"name":"nodejs","version":"5.2.0","date":"2015-12-09","lts":false},{"name":"nodejs","version":"5.3.0","date":"2015-12-15","lts":false},{"name":"nodejs","version":"5.4.0","date":"2016-01-06","lts":false},{"name":"nodejs","version":"5.5.0","date":"2016-01-21","lts":false},{"name":"nodejs","version":"5.6.0","date":"2016-02-09","lts":false},{"name":"nodejs","version":"5.7.0","date":"2016-02-23","lts":false},{"name":"nodejs","version":"5.8.0","date":"2016-03-09","lts":false},{"name":"nodejs","version":"5.9.0","date":"2016-03-16","lts":false},{"name":"nodejs","version":"5.10.0","date":"2016-04-01","lts":false},{"name":"nodejs","version":"5.11.0","date":"2016-04-21","lts":false},{"name":"nodejs","version":"5.12.0","date":"2016-06-23","lts":false},{"name":"nodejs","version":"6.0.0","date":"2016-04-26","lts":false},{"name":"nodejs","version":"6.1.0","date":"2016-05-05","lts":false},{"name":"nodejs","version":"6.2.0","date":"2016-05-17","lts":false},{"name":"nodejs","version":"6.3.0","date":"2016-07-06","lts":false},{"name":"nodejs","version":"6.4.0","date":"2016-08-12","lts":false},{"name":"nodejs","version":"6.5.0","date":"2016-08-26","lts":false},{"name":"nodejs","version":"6.6.0","date":"2016-09-14","lts":false},{"name":"nodejs","version":"6.7.0","date":"2016-09-27","lts":false},{"name":"nodejs","version":"6.8.0","date":"2016-10-12","lts":false},{"name":"nodejs","version":"6.9.0","date":"2016-10-18","lts":"Boron"},{"name":"nodejs","version":"6.10.0","date":"2017-02-21","lts":"Boron"},{"name":"nodejs","version":"6.11.0","date":"2017-06-06","lts":"Boron"},{"name":"nodejs","version":"6.12.0","date":"2017-11-06","lts":"Boron"},{"name":"nodejs","version":"6.13.0","date":"2018-02-10","lts":"Boron"},{"name":"nodejs","version":"6.14.0","date":"2018-03-28","lts":"Boron"},{"name":"nodejs","version":"6.15.0","date":"2018-11-27","lts":"Boron"},{"name":"nodejs","version":"6.16.0","date":"2018-12-26","lts":"Boron"},{"name":"nodejs","version":"6.17.0","date":"2019-02-28","lts":"Boron"},{"name":"nodejs","version":"7.0.0","date":"2016-10-25","lts":false},{"name":"nodejs","version":"7.1.0","date":"2016-11-08","lts":false},{"name":"nodejs","version":"7.2.0","date":"2016-11-22","lts":false},{"name":"nodejs","version":"7.3.0","date":"2016-12-20","lts":false},{"name":"nodejs","version":"7.4.0","date":"2017-01-04","lts":false},{"name":"nodejs","version":"7.5.0","date":"2017-01-31","lts":false},{"name":"nodejs","version":"7.6.0","date":"2017-02-21","lts":false},{"name":"nodejs","version":"7.7.0","date":"2017-02-28","lts":false},{"name":"nodejs","version":"7.8.0","date":"2017-03-29","lts":false},{"name":"nodejs","version":"7.9.0","date":"2017-04-11","lts":false},{"name":"nodejs","version":"7.10.0","date":"2017-05-02","lts":false},{"name":"nodejs","version":"8.0.0","date":"2017-05-30","lts":false},{"name":"nodejs","version":"8.1.0","date":"2017-06-08","lts":false},{"name":"nodejs","version":"8.2.0","date":"2017-07-19","lts":false},{"name":"nodejs","version":"8.3.0","date":"2017-08-08","lts":false},{"name":"nodejs","version":"8.4.0","date":"2017-08-15","lts":false},{"name":"nodejs","version":"8.5.0","date":"2017-09-12","lts":false},{"name":"nodejs","version":"8.6.0","date":"2017-09-26","lts":false},{"name":"nodejs","version":"8.7.0","date":"2017-10-11","lts":false},{"name":"nodejs","version":"8.8.0","date":"2017-10-24","lts":false},{"name":"nodejs","version":"8.9.0","date":"2017-10-31","lts":"Carbon"},{"name":"nodejs","version":"8.10.0","date":"2018-03-06","lts":"Carbon"},{"name":"nodejs","version":"8.11.0","date":"2018-03-28","lts":"Carbon"},{"name":"nodejs","version":"8.12.0","date":"2018-09-10","lts":"Carbon"},{"name":"nodejs","version":"8.13.0","date":"2018-11-20","lts":"Carbon"},{"name":"nodejs","version":"8.14.0","date":"2018-11-27","lts":"Carbon"},{"name":"nodejs","version":"8.15.0","date":"2018-12-26","lts":"Carbon"},{"name":"nodejs","version":"8.16.0","date":"2019-04-16","lts":"Carbon"},{"name":"nodejs","version":"9.0.0","date":"2017-10-31","lts":false},{"name":"nodejs","version":"9.1.0","date":"2017-11-07","lts":false},{"name":"nodejs","version":"9.2.0","date":"2017-11-14","lts":false},{"name":"nodejs","version":"9.3.0","date":"2017-12-12","lts":false},{"name":"nodejs","version":"9.4.0","date":"2018-01-10","lts":false},{"name":"nodejs","version":"9.5.0","date":"2018-01-31","lts":false},{"name":"nodejs","version":"9.6.0","date":"2018-02-21","lts":false},{"name":"nodejs","version":"9.7.0","date":"2018-03-01","lts":false},{"name":"nodejs","version":"9.8.0","date":"2018-03-07","lts":false},{"name":"nodejs","version":"9.9.0","date":"2018-03-21","lts":false},{"name":"nodejs","version":"9.10.0","date":"2018-03-28","lts":false},{"name":"nodejs","version":"9.11.0","date":"2018-04-04","lts":false},{"name":"nodejs","version":"10.0.0","date":"2018-04-24","lts":false},{"name":"nodejs","version":"10.1.0","date":"2018-05-08","lts":false},{"name":"nodejs","version":"10.2.0","date":"2018-05-23","lts":false},{"name":"nodejs","version":"10.3.0","date":"2018-05-29","lts":false},{"name":"nodejs","version":"10.4.0","date":"2018-06-06","lts":false},{"name":"nodejs","version":"10.5.0","date":"2018-06-20","lts":false},{"name":"nodejs","version":"10.6.0","date":"2018-07-04","lts":false},{"name":"nodejs","version":"10.7.0","date":"2018-07-18","lts":false},{"name":"nodejs","version":"10.8.0","date":"2018-08-01","lts":false},{"name":"nodejs","version":"10.9.0","date":"2018-08-15","lts":false},{"name":"nodejs","version":"10.10.0","date":"2018-09-06","lts":false},{"name":"nodejs","version":"10.11.0","date":"2018-09-19","lts":false},{"name":"nodejs","version":"10.12.0","date":"2018-10-10","lts":false},{"name":"nodejs","version":"10.13.0","date":"2018-10-30","lts":"Dubnium"},{"name":"nodejs","version":"10.14.0","date":"2018-11-27","lts":"Dubnium"},{"name":"nodejs","version":"10.15.0","date":"2018-12-26","lts":"Dubnium"},{"name":"nodejs","version":"10.16.0","date":"2019-05-28","lts":"Dubnium"},{"name":"nodejs","version":"11.0.0","date":"2018-10-23","lts":false},{"name":"nodejs","version":"11.1.0","date":"2018-10-30","lts":false},{"name":"nodejs","version":"11.2.0","date":"2018-11-15","lts":false},{"name":"nodejs","version":"11.3.0","date":"2018-11-27","lts":false},{"name":"nodejs","version":"11.4.0","date":"2018-12-07","lts":false},{"name":"nodejs","version":"11.5.0","date":"2018-12-18","lts":false},{"name":"nodejs","version":"11.6.0","date":"2018-12-26","lts":false},{"name":"nodejs","version":"11.7.0","date":"2019-01-17","lts":false},{"name":"nodejs","version":"11.8.0","date":"2019-01-24","lts":false},{"name":"nodejs","version":"11.9.0","date":"2019-01-30","lts":false},{"name":"nodejs","version":"11.10.0","date":"2019-02-14","lts":false},{"name":"nodejs","version":"11.11.0","date":"2019-03-05","lts":false},{"name":"nodejs","version":"11.12.0","date":"2019-03-14","lts":false},{"name":"nodejs","version":"11.13.0","date":"2019-03-28","lts":false},{"name":"nodejs","version":"11.14.0","date":"2019-04-10","lts":false},{"name":"nodejs","version":"11.15.0","date":"2019-04-30","lts":false},{"name":"nodejs","version":"12.0.0","date":"2019-04-23","lts":false},{"name":"nodejs","version":"12.1.0","date":"2019-04-29","lts":false},{"name":"nodejs","version":"12.2.0","date":"2019-05-07","lts":false},{"name":"nodejs","version":"12.3.0","date":"2019-05-21","lts":false},{"name":"nodejs","version":"12.4.0","date":"2019-06-04","lts":false}];

/***/ }),
/* 251 */
/***/ (function(module, exports) {

module.exports={A:"ie",B:"edge",C:"firefox",D:"chrome",E:"safari",F:"opera",G:"ios_saf",H:"op_mini",I:"android",J:"bb",K:"op_mob",L:"and_chr",M:"and_ff",N:"ie_mob",O:"and_uc",P:"samsung",Q:"and_qq",R:"baidu",S:"kaios"};


/***/ }),
/* 252 */
/***/ (function(module, exports) {

module.exports={"0":"57","1":"58","2":"13","3":"66","4":"67","5":"12.1","6":"34","7":"59","8":"60","9":"61",A:"10",B:"11",C:"12",D:"7",E:"9",F:"4",G:"8",H:"17",I:"18",J:"15",K:"6",L:"46",M:"16",N:"5",O:"19",P:"20",Q:"21",R:"22",S:"23",T:"24",U:"25",V:"26",W:"27",X:"28",Y:"29",Z:"30",a:"31",b:"32",c:"33",d:"14",e:"35",f:"36",g:"37",h:"38",i:"39",j:"40",k:"41",l:"42",m:"43",n:"44",o:"45",p:"11.1",q:"47",r:"48",s:"49",t:"50",u:"51",v:"52",w:"53",x:"54",y:"55",z:"56",AB:"75",BB:"63",CB:"64",DB:"65",EB:"11.5",FB:"3",GB:"68",HB:"4.2-4.3",IB:"62",JB:"3.2",KB:"74",LB:"7.0-7.1",MB:"71",NB:"73",OB:"70",PB:"76",QB:"77",RB:"3.1",SB:"69",TB:"5.1",UB:"6.1",VB:"7.1",WB:"9.1",XB:"10.1",YB:"3.6",ZB:"3.5",aB:"TP",bB:"9.5-9.6",cB:"10.0-10.1",dB:"10.5",eB:"10.6",fB:"2",gB:"11.6",hB:"4.0-4.1",iB:"5.5",jB:"5.0-5.1",kB:"6.0-6.1",lB:"72",mB:"8.1-8.4",nB:"9.0-9.2",oB:"9.3",pB:"10.0-10.2",qB:"10.3",rB:"11.0-11.2",sB:"11.3-11.4",tB:"12.0-12.1",uB:"12.2",vB:"all",wB:"2.1",xB:"2.2",yB:"2.3",zB:"4.1","0B":"4.4","1B":"4.4.3-4.4.4","2B":"11.8","3B":"5.0-5.4","4B":"6.2-6.4","5B":"7.2-7.4","6B":"8.2","7B":"9.2","8B":"1.2","9B":"7.12",AC:"2.5"};


/***/ }),
/* 253 */
/***/ (function(module, exports) {

module.exports={A:{A:{K:0.0104109,D:0.00520546,G:0.11452,E:0.187396,A:0.05726,B:2.29561,iB:0.009298},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","iB","K","D","G","E","A","B","","",""],E:"IE",F:{iB:962323200,K:998870400,D:1161129600,G:1237420800,E:1300060800,A:1346716800,B:1381968000}},B:{A:{"2":0.020116,C:0.015087,d:0.035203,J:0.045261,M:0.110638,H:1.26731,I:0.724176,AB:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","C","2","d","J","M","H","I","AB","",""],E:"Edge",F:{"2":1447286400,C:1438128000,d:1470096000,J:1491868800,M:1508198400,H:1525046400,I:1542067200,AB:null},D:{"2":"ms",C:"ms",d:"ms",J:"ms",M:"ms",H:"ms",I:"ms"}},C:{A:{"0":0.030174,"1":0.020116,"2":0.004486,"3":3.39458,"4":0.10058,"6":0.004707,"7":0.020116,"8":0.196131,"9":0.025145,fB:0.004827,FB:0.004707,F:0.010058,N:0.004879,K:0.020136,D:0.005725,G:0.004725,E:0.00533,A:0.004283,B:0.005029,C:0.004471,d:0.00453,J:0.004827,M:0.004417,H:0.005029,I:0.004393,O:0.004443,P:0.004283,Q:0.008652,R:0.004393,S:0.004827,T:0.008786,U:0.004326,V:0.004317,W:0.004393,X:0.004418,Y:0.008834,Z:0.004725,a:0.010058,b:0.004471,c:0.004725,e:0.025145,f:0.004417,g:0.004783,h:0.015087,i:0.004783,j:0.005029,k:0.005029,l:0.0047,m:0.015087,n:0.010058,o:0.020116,L:0.005029,q:0.060348,r:0.080464,s:0.010058,t:0.015087,u:0.015087,v:0.246421,w:0.010058,x:0.015087,y:0.015087,z:0.05029,IB:0.025145,BB:0.035203,CB:0.060348,DB:0.241392,GB:0,ZB:0.008786,YB:0.009414},B:"moz",C:["","","","","fB","FB","ZB","YB","F","N","K","D","G","E","A","B","C","2","d","J","M","H","I","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","6","e","f","g","h","i","j","k","l","m","n","o","L","q","r","s","t","u","v","w","x","y","z","0","1","7","8","9","IB","BB","CB","DB","3","4","GB",""],E:"Firefox",F:{"0":1510617600,"1":1516665600,"2":1335225600,"3":1552953600,"4":null,"6":1417392000,"7":1520985600,"8":1525824000,"9":1529971200,fB:1161648000,FB:1213660800,ZB:1246320000,YB:1264032000,F:1300752000,N:1308614400,K:1313452800,D:1317081600,G:1317081600,E:1320710400,A:1324339200,B:1327968000,C:1331596800,d:1338854400,J:1342483200,M:1346112000,H:1349740800,I:1353628800,O:1357603200,P:1361232000,Q:1364860800,R:1368489600,S:1372118400,T:1375747200,U:1379376000,V:1386633600,W:1391472000,X:1395100800,Y:1398729600,Z:1402358400,a:1405987200,b:1409616000,c:1413244800,e:1421107200,f:1424736000,g:1428278400,h:1431475200,i:1435881600,j:1439251200,k:1442880000,l:1446508800,m:1450137600,n:1453852800,o:1457395200,L:1461628800,q:1465257600,r:1470096000,s:1474329600,t:1479168000,u:1485216000,v:1488844800,w:1492560000,x:1497312000,y:1502150400,z:1506556800,IB:1536105600,BB:1540252800,CB:1544486400,DB:1548720000,GB:null}},D:{A:{"0":0.070406,"1":0.075435,"2":0.004879,"3":0.115667,"4":0.160928,"6":0.015087,"7":0.035203,"8":0.030174,"9":0.311798,F:0.004706,N:0.004879,K:0.004879,D:0.005591,G:0.005591,E:0.005591,A:0.004534,B:0.005029,C:0.010424,d:0.004706,J:0.015087,M:0.004393,H:0.004393,I:0.008652,O:0.004418,P:0.004393,Q:0.004317,R:0.015087,S:0.008786,T:0.014481,U:0.005029,V:0.010058,W:0.004326,X:0.0047,Y:0.070406,Z:0.005029,a:0.015087,b:0.005029,c:0.015087,e:0.0047,f:0.010058,g:0.005029,h:0.025145,i:0.010058,j:0.035203,k:0.015087,l:0.005029,m:0.035203,n:0.005029,o:0.015087,L:0.010058,q:0.015087,r:0.045261,s:0.759379,t:0.010058,u:0.020116,v:0.010058,w:0.020116,x:0.045261,y:0.055319,z:0.065377,IB:0.070406,BB:0.367117,CB:0.070406,DB:0.160928,GB:0.115667,SB:0.20116,OB:0.226305,MB:0.457639,lB:1.81044,NB:27.9411,KB:0.070406,AB:0.035203,PB:0,QB:0},B:"webkit",C:["F","N","K","D","G","E","A","B","C","2","d","J","M","H","I","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","6","e","f","g","h","i","j","k","l","m","n","o","L","q","r","s","t","u","v","w","x","y","z","0","1","7","8","9","IB","BB","CB","DB","3","4","GB","SB","OB","MB","lB","NB","KB","AB","PB","QB"],E:"Chrome",F:{"0":1489017600,"1":1492560000,"2":1312243200,"3":1523923200,"4":1527552000,"6":1397001600,"7":1496707200,"8":1500940800,"9":1504569600,F:1264377600,N:1274745600,K:1283385600,D:1287619200,G:1291248000,E:1296777600,A:1299542400,B:1303862400,C:1307404800,d:1316131200,J:1316131200,M:1319500800,H:1323734400,I:1328659200,O:1332892800,P:1337040000,Q:1340668800,R:1343692800,S:1348531200,T:1352246400,U:1357862400,V:1361404800,W:1364428800,X:1369094400,Y:1374105600,Z:1376956800,a:1384214400,b:1389657600,c:1392940800,e:1400544000,f:1405468800,g:1409011200,h:1412640000,i:1416268800,j:1421798400,k:1425513600,l:1429401600,m:1432080000,n:1437523200,o:1441152000,L:1444780800,q:1449014400,r:1453248000,s:1456963200,t:1460592000,u:1464134400,v:1469059200,w:1472601600,x:1476230400,y:1480550400,z:1485302400,IB:1508198400,BB:1512518400,CB:1516752000,DB:1520294400,GB:1532390400,SB:1536019200,OB:1539648000,MB:1543968000,lB:1548720000,NB:1552348800,KB:1555977600,AB:null,PB:null,QB:null}},E:{A:{"5":0.809669,F:0,N:0.0047,K:0.004349,D:0.010058,G:0.040232,E:0.030174,A:0.035203,B:0.080464,C:1.19187,RB:0,JB:0.008692,TB:0.472726,UB:0.015087,VB:0.004283,WB:0.060348,XB:0.165957,p:0.306769,aB:0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","RB","JB","F","N","TB","K","UB","D","VB","G","E","WB","A","XB","B","p","C","5","aB","",""],E:"Safari",F:{"5":1553472000,RB:1205798400,JB:1226534400,F:1244419200,N:1275868800,TB:1311120000,K:1343174400,UB:1382400000,D:1382400000,VB:1410998400,G:1413417600,E:1443657600,WB:1458518400,A:1474329600,XB:1490572800,B:1505779200,p:1522281600,C:1537142400,aB:null}},F:{A:{"0":0.005029,"1":0.995742,"5":0.015087,"6":0.009758,E:0.0082,B:0.016581,C:0.004317,J:0.00685,M:0.00685,H:0.00685,I:0.005014,O:0.006015,P:0.004879,Q:0.006597,R:0.006597,S:0.013434,T:0.006702,U:0.006015,V:0.005595,W:0.004393,X:0.008652,Y:0.004879,Z:0.004879,a:0.005029,b:0.005152,c:0.005014,e:0.004879,f:0.015087,g:0.004283,h:0.004367,i:0.004534,j:0.004367,k:0.004227,l:0.004418,m:0.015087,n:0.004227,o:0.004725,L:0.004417,q:0.008942,r:0.004707,s:0.004827,t:0.004707,u:0.004707,v:0.004326,w:0.004783,x:0.014349,y:0.004725,z:0.015087,bB:0.00685,cB:0,dB:0.008392,eB:0.004706,p:0.006229,EB:0.004879,gB:0.008786},B:"webkit",C:["","","","","","","","","","","","","","","","","E","bB","cB","dB","eB","B","p","EB","gB","C","5","J","M","H","I","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","6","e","f","g","h","i","j","k","l","m","n","o","L","q","r","s","t","u","v","w","x","y","z","0","1","","",""],E:"Opera",F:{"0":1543363200,"1":1548201600,"5":1352073600,"6":1449100800,E:1150761600,bB:1223424000,cB:1251763200,dB:1267488000,eB:1277942400,B:1292457600,p:1302566400,EB:1309219200,gB:1323129600,C:1323129600,J:1372723200,M:1377561600,H:1381104000,I:1386288000,O:1390867200,P:1393891200,Q:1399334400,R:1401753600,S:1405987200,T:1409616000,U:1413331200,V:1417132800,W:1422316800,X:1425945600,Y:1430179200,Z:1433808000,a:1438646400,b:1442448000,c:1445904000,e:1454371200,f:1457308800,g:1462320000,h:1465344000,i:1470096000,j:1474329600,k:1477267200,l:1481587200,m:1486425600,n:1490054400,o:1494374400,L:1498003200,q:1502236800,r:1506470400,s:1510099200,t:1515024000,u:1517961600,v:1521676800,w:1525910400,x:1530144000,y:1534982400,z:1537833600},D:{"5":"o",E:"o",B:"o",C:"o",bB:"o",cB:"o",dB:"o",eB:"o",p:"o",EB:"o",gB:"o"}},G:{A:{G:0.0803608,JB:0.00521823,hB:0.00313094,HB:0.00104365,jB:0.0104365,kB:0.00521823,LB:0.0187856,mB:0.0407022,nB:0.0240039,oB:0.199336,pB:0.110627,qB:0.264043,rB:0.325618,sB:0.668977,tB:4.03891,uB:4.63275},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","JB","hB","HB","jB","kB","LB","G","mB","nB","oB","pB","qB","rB","sB","tB","uB","","",""],E:"iOS Safari",F:{JB:1270252800,hB:1283904000,HB:1299628800,jB:1331078400,kB:1359331200,LB:1394409600,G:1410912000,mB:1413763200,nB:1442361600,oB:1458518400,pB:1473724800,qB:1490572800,rB:1505779200,sB:1522281600,tB:1537142400,uB:1553472000}},H:{A:{vB:1.42128},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vB","","",""],E:"Opera Mini",F:{vB:1426464000}},I:{A:{"4":0,FB:0.000686519,F:0.0988588,wB:0.00480563,xB:0.00823823,yB:0.00480563,zB:0.0494294,HB:0.214194,"0B":0,"1B":0.300009},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wB","xB","yB","FB","F","zB","HB","0B","1B","4","","",""],E:"Android Browser",F:{"4":1494115200,wB:1256515200,xB:1274313600,yB:1291593600,FB:1298332800,F:1318896000,zB:1341792000,HB:1374624000,"0B":1386547200,"1B":1401667200}},J:{A:{D:0,A:0.024855},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","D","A","","",""],E:"Blackberry Browser",F:{D:1325376000,A:1359504000}},K:{A:{"5":0,A:0,B:0,C:0,L:0.0111391,p:0,EB:0},B:"o",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","p","EB","C","5","L","","",""],E:"Opera Mobile",F:{"5":1349740800,A:1287100800,B:1300752000,p:1314835200,EB:1318291200,C:1330300800,L:1474588800},D:{L:"webkit"}},L:{A:{KB:30.7713},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","KB","","",""],E:"Chrome for Android",F:{KB:1556150400}},M:{A:{"3":0.178956},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","3","","",""],E:"Firefox for Android",F:{"3":1552953600}},N:{A:{A:0.0115934,B:0.09942},B:"ms",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A","B","","",""],E:"IE Mobile",F:{A:1340150400,B:1353456000}},O:{A:{"2B":3.07208},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2B","","",""],E:"UC Browser for Android",F:{"2B":1471392000},D:{"2B":"webkit"}},P:{A:{F:0.522864,"3B":0.0522864,"4B":0.073201,"5B":0.250975,"6B":1.18167,"7B":1.34899},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","F","3B","4B","5B","6B","7B","","",""],E:"Samsung Internet",F:{F:1461024000,"3B":1481846400,"4B":1509408000,"5B":1528329600,"6B":1546128000,"7B":1554163200}},Q:{A:{"8B":0.134217},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","8B","","",""],E:"QQ Browser",F:{"8B":1483228800}},R:{A:{"9B":0},B:"webkit",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","9B","","",""],E:"Baidu Browser",F:{"9B":1491004800}},S:{A:{AC:0.402651},B:"moz",C:["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","AC","","",""],E:"KaiOS Browser",F:{AC:1527811200}}};


/***/ }),
/* 254 */
/***/ (function(module) {

module.exports = {"v0.10":{"start":"2013-03-11","end":"2016-10-31"},"v0.12":{"start":"2015-02-06","end":"2016-12-31"},"v4":{"start":"2015-09-08","lts":"2015-10-12","maintenance":"2017-04-01","end":"2018-04-30","codename":"Argon"},"v5":{"start":"2015-10-29","maintenance":"2016-04-30","end":"2016-06-30"},"v6":{"start":"2016-04-26","lts":"2016-10-18","maintenance":"2018-04-30","end":"2019-04-30","codename":"Boron"},"v7":{"start":"2016-10-25","maintenance":"2017-04-30","end":"2017-06-30"},"v8":{"start":"2017-05-30","lts":"2017-10-31","maintenance":"2019-01-01","end":"2019-12-31","codename":"Carbon"},"v9":{"start":"2017-10-01","maintenance":"2018-04-01","end":"2018-06-30"},"v10":{"start":"2018-04-24","lts":"2018-10-30","maintenance":"2020-04-01","end":"2021-04-01","codename":"Dubnium"},"v11":{"start":"2018-10-23","maintenance":"2019-04-22","end":"2019-06-01"},"v12":{"start":"2019-04-23","lts":"2019-10-22","maintenance":"2021-04-01","end":"2022-04-01","codename":""},"v13":{"start":"2019-10-22","maintenance":"2020-04-20","end":"2020-06-01"},"v14":{"start":"2020-04-21","lts":"2020-10-20","maintenance":"2022-04-01","end":"2023-04-01","codename":""}};

/***/ }),
/* 255 */
/***/ (function(module, exports) {

module.exports = {
	"6.0": "76",
	"5.0": "72",
	"4.2": "69",
	"4.1": "69",
	"4.0": "69",
	"3.1": "66",
	"3.0": "66",
	"2.1": "61",
	"2.0": "61",
	"1.8": "59",
	"1.7": "58",
	"1.6": "56",
	"1.5": "54",
	"1.4": "53",
	"1.3": "52",
	"1.2": "51",
	"1.1": "50",
	"1.0": "49",
	"0.37": "49",
	"0.36": "47",
	"0.35": "45",
	"0.34": "45",
	"0.33": "45",
	"0.32": "45",
	"0.31": "44",
	"0.30": "44",
	"0.29": "43",
	"0.28": "43",
	"0.27": "42",
	"0.26": "42",
	"0.25": "42",
	"0.24": "41",
	"0.23": "41",
	"0.22": "41",
	"0.21": "40",
	"0.20": "39"
};

/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

var region = __webpack_require__(74).default
var path = __webpack_require__(5)
var fs = __webpack_require__(13)

var BrowserslistError = __webpack_require__(73)

var IS_SECTION = /^\s*\[(.+)\]\s*$/
var CONFIG_PATTERN = /^browserslist-config-/
var SCOPED_CONFIG__PATTERN = /@[^/]+\/browserslist-config(-|$|\/)/
var TIME_TO_UPDATE_CANIUSE = 6 * 30 * 24 * 60 * 60 * 1000
var FORMAT = 'Browserslist config should be a string or an array ' +
             'of strings with browser queries'

var dataTimeChecked = false
var filenessCache = { }
var configCache = { }
function checkExtend (name) {
  var use = ' Use `dangerousExtend` option to disable.'
  if (!CONFIG_PATTERN.test(name) && !SCOPED_CONFIG__PATTERN.test(name)) {
    throw new BrowserslistError(
      'Browserslist config needs `browserslist-config-` prefix. ' + use)
  }
  if (name.replace(/^@[^/]+\//, '').indexOf('.') !== -1) {
    throw new BrowserslistError(
      '`.` not allowed in Browserslist config name. ' + use)
  }
  if (name.indexOf('node_modules') !== -1) {
    throw new BrowserslistError(
      '`node_modules` not allowed in Browserslist config.' + use)
  }
}

function isFile (file) {
  if (file in filenessCache) {
    return filenessCache[file]
  }
  var result = fs.existsSync(file) && fs.statSync(file).isFile()
  if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
    filenessCache[file] = result
  }
  return result
}

function eachParent (file, callback) {
  var loc = path.resolve(file)
  do {
    var result = callback(loc)
    if (typeof result !== 'undefined') return result
  } while (loc !== (loc = path.dirname(loc)))
  return undefined
}

function check (section) {
  if (Array.isArray(section)) {
    for (var i = 0; i < section.length; i++) {
      if (typeof section[i] !== 'string') {
        throw new BrowserslistError(FORMAT)
      }
    }
  } else if (typeof section !== 'string') {
    throw new BrowserslistError(FORMAT)
  }
}

function pickEnv (config, opts) {
  if (typeof config !== 'object') return config

  var name
  if (typeof opts.env === 'string') {
    name = opts.env
  } else if (process.env.BROWSERSLIST_ENV) {
    name = process.env.BROWSERSLIST_ENV
  } else if (true) {
    name = "production"
  } else {}

  return config[name] || config.defaults
}

function parsePackage (file) {
  var config = JSON.parse(fs.readFileSync(file))
  if (config.browserlist && !config.browserslist) {
    throw new BrowserslistError(
      '`browserlist` key instead of `browserslist` in ' + file)
  }
  var list = config.browserslist
  if (Array.isArray(list) || typeof list === 'string') {
    list = { defaults: list }
  }
  for (var i in list) {
    check(list[i])
  }

  return list
}

function latestReleaseTime (agents) {
  var latest = 0
  for (var name in agents) {
    var dates = agents[name].releaseDate || { }
    for (var key in dates) {
      if (latest < dates[key]) {
        latest = dates[key]
      }
    }
  }
  return latest * 1000
}

module.exports = {
  loadQueries: function loadQueries (context, name) {
    if (!context.dangerousExtend) checkExtend(name)
    // eslint-disable-next-line security/detect-non-literal-require
    var queries = __webpack_require__(75)(__webpack_require__(75).resolve(name, { paths: ['.'] }))
    if (!Array.isArray(queries)) {
      throw new BrowserslistError(
        '`' + name + '` config exports not an array of queries')
    }
    return queries
  },

  getStat: function getStat (opts, data) {
    var stats
    if (opts.stats) {
      stats = opts.stats
    } else if (process.env.BROWSERSLIST_STATS) {
      stats = process.env.BROWSERSLIST_STATS
    } else if (opts.path && path.resolve && fs.existsSync) {
      stats = eachParent(opts.path, function (dir) {
        var file = path.join(dir, 'browserslist-stats.json')
        return isFile(file) ? file : undefined
      })
    }

    if (typeof stats === 'string') {
      try {
        stats = JSON.parse(fs.readFileSync(stats))
      } catch (e) {
        throw new BrowserslistError('Can\'t read ' + stats)
      }
    }

    if (stats && 'dataByBrowser' in stats) {
      stats = stats.dataByBrowser
    }

    if (typeof stats !== 'object') return undefined

    var normalized = { }
    for (var i in stats) {
      var versions = Object.keys(stats[i])
      if (versions.length === 1 && data[i] && data[i].versions.length === 1) {
        var normal = Object.keys(data[i].versions)[0]
        normalized[i] = { }
        normalized[i][normal] = stats[i][versions[0]]
      } else {
        normalized[i] = stats[i]
      }
    }

    return normalized
  },

  loadConfig: function loadConfig (opts) {
    if (process.env.BROWSERSLIST) {
      return process.env.BROWSERSLIST
    } else if (opts.config || process.env.BROWSERSLIST_CONFIG) {
      var file = opts.config || process.env.BROWSERSLIST_CONFIG
      if (path.basename(file) === 'package.json') {
        return pickEnv(parsePackage(file), opts)
      } else {
        return pickEnv(module.exports.readConfig(file), opts)
      }
    } else if (opts.path) {
      return pickEnv(module.exports.findConfig(opts.path), opts)
    } else {
      return undefined
    }
  },

  loadCountry: function loadCountry (usage, country) {
    var code = country.replace(/[^\w-]/g, '')
    if (!usage[code]) {
      // eslint-disable-next-line security/detect-non-literal-require
      var compressed = __webpack_require__(257)("./" + code + ".js")
      var data = region(compressed)
      usage[country] = { }
      for (var i in data) {
        for (var j in data[i]) {
          usage[country][i + ' ' + j] = data[i][j]
        }
      }
    }
  },

  parseConfig: function parseConfig (string) {
    var result = { defaults: [] }
    var sections = ['defaults']

    string.toString()
      .replace(/#[^\n]*/g, '')
      .split(/\n|,/)
      .map(function (line) {
        return line.trim()
      })
      .filter(function (line) {
        return line !== ''
      })
      .forEach(function (line) {
        if (IS_SECTION.test(line)) {
          sections = line.match(IS_SECTION)[1].trim().split(' ')
          sections.forEach(function (section) {
            if (result[section]) {
              throw new BrowserslistError(
                'Duplicate section ' + section + ' in Browserslist config')
            }
            result[section] = []
          })
        } else {
          sections.forEach(function (section) {
            result[section].push(line)
          })
        }
      })

    return result
  },

  readConfig: function readConfig (file) {
    if (!isFile(file)) {
      throw new BrowserslistError('Can\'t read ' + file + ' config')
    }
    return module.exports.parseConfig(fs.readFileSync(file))
  },

  findConfig: function findConfig (from) {
    from = path.resolve(from)

    var cacheKey = isFile(from) ? path.dirname(from) : from
    if (cacheKey in configCache) {
      return configCache[cacheKey]
    }

    var resolved = eachParent(from, function (dir) {
      var config = path.join(dir, 'browserslist')
      var pkg = path.join(dir, 'package.json')
      var rc = path.join(dir, '.browserslistrc')

      var pkgBrowserslist
      if (isFile(pkg)) {
        try {
          pkgBrowserslist = parsePackage(pkg)
        } catch (e) {
          if (e.name === 'BrowserslistError') throw e
          console.warn(
            '[Browserslist] Could not parse ' + pkg + '. Ignoring it.')
        }
      }

      if (isFile(config) && pkgBrowserslist) {
        throw new BrowserslistError(
          dir + ' contains both browserslist and package.json with browsers')
      } else if (isFile(rc) && pkgBrowserslist) {
        throw new BrowserslistError(
          dir + ' contains both .browserslistrc and package.json with browsers')
      } else if (isFile(config) && isFile(rc)) {
        throw new BrowserslistError(
          dir + ' contains both .browserslistrc and browserslist')
      } else if (isFile(config)) {
        return module.exports.readConfig(config)
      } else if (isFile(rc)) {
        return module.exports.readConfig(rc)
      } else {
        return pkgBrowserslist
      }
    })
    if (!process.env.BROWSERSLIST_DISABLE_CACHE) {
      configCache[cacheKey] = resolved
    }
    return resolved
  },

  clearCaches: function clearCaches () {
    dataTimeChecked = false
    filenessCache = { }
    configCache = { }
  },

  oldDataWarning: function oldDataWarning (agentsObj) {
    if (dataTimeChecked) return
    dataTimeChecked = true
    if (process.env.BROWSERSLIST_IGNORE_OLD_DATA) return

    var latest = latestReleaseTime(agentsObj)
    var halfYearAgo = Date.now() - TIME_TO_UPDATE_CANIUSE

    if (latest !== 0 && latest < halfYearAgo) {
      var command = 'npm update'
      eachParent(__filename, function (dir) {
        var pckg = path.join(dir, 'package.json')
        var yarnLock = path.join(dir, 'yarn.lock')
        if (isFile(pckg) && isFile(yarnLock)) {
          command = 'yarn upgrade'
        }
      })
      console.warn(
        'Browserslist: caniuse-lite is outdated. ' +
        'Please run next command `' + command + '`'
      )
    }
  },

  currentNode: function currentNode () {
    return 'node ' + process.versions.node
  }
}


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./AD.js": 258,
	"./AE.js": 259,
	"./AF.js": 260,
	"./AG.js": 261,
	"./AI.js": 262,
	"./AL.js": 263,
	"./AM.js": 264,
	"./AN.js": 265,
	"./AO.js": 266,
	"./AR.js": 267,
	"./AS.js": 268,
	"./AT.js": 269,
	"./AU.js": 270,
	"./AW.js": 271,
	"./AX.js": 272,
	"./AZ.js": 273,
	"./BA.js": 274,
	"./BB.js": 275,
	"./BD.js": 276,
	"./BE.js": 277,
	"./BF.js": 278,
	"./BG.js": 279,
	"./BH.js": 280,
	"./BI.js": 281,
	"./BJ.js": 282,
	"./BM.js": 283,
	"./BN.js": 284,
	"./BO.js": 285,
	"./BR.js": 286,
	"./BS.js": 287,
	"./BT.js": 288,
	"./BW.js": 289,
	"./BY.js": 290,
	"./BZ.js": 291,
	"./CA.js": 292,
	"./CD.js": 293,
	"./CF.js": 294,
	"./CG.js": 295,
	"./CH.js": 296,
	"./CI.js": 297,
	"./CK.js": 298,
	"./CL.js": 299,
	"./CM.js": 300,
	"./CN.js": 301,
	"./CO.js": 302,
	"./CR.js": 303,
	"./CU.js": 304,
	"./CV.js": 305,
	"./CX.js": 306,
	"./CY.js": 307,
	"./CZ.js": 308,
	"./DE.js": 309,
	"./DJ.js": 310,
	"./DK.js": 311,
	"./DM.js": 312,
	"./DO.js": 313,
	"./DZ.js": 314,
	"./EC.js": 315,
	"./EE.js": 316,
	"./EG.js": 317,
	"./ER.js": 318,
	"./ES.js": 319,
	"./ET.js": 320,
	"./FI.js": 321,
	"./FJ.js": 322,
	"./FK.js": 323,
	"./FM.js": 324,
	"./FO.js": 325,
	"./FR.js": 326,
	"./GA.js": 327,
	"./GB.js": 328,
	"./GD.js": 329,
	"./GE.js": 330,
	"./GF.js": 331,
	"./GG.js": 332,
	"./GH.js": 333,
	"./GI.js": 334,
	"./GL.js": 335,
	"./GM.js": 336,
	"./GN.js": 337,
	"./GP.js": 338,
	"./GQ.js": 339,
	"./GR.js": 340,
	"./GT.js": 341,
	"./GU.js": 342,
	"./GW.js": 343,
	"./GY.js": 344,
	"./HK.js": 345,
	"./HN.js": 346,
	"./HR.js": 347,
	"./HT.js": 348,
	"./HU.js": 349,
	"./ID.js": 350,
	"./IE.js": 351,
	"./IL.js": 352,
	"./IM.js": 353,
	"./IN.js": 354,
	"./IQ.js": 355,
	"./IR.js": 356,
	"./IS.js": 357,
	"./IT.js": 358,
	"./JE.js": 359,
	"./JM.js": 360,
	"./JO.js": 361,
	"./JP.js": 362,
	"./KE.js": 363,
	"./KG.js": 364,
	"./KH.js": 365,
	"./KI.js": 366,
	"./KM.js": 367,
	"./KN.js": 368,
	"./KP.js": 369,
	"./KR.js": 370,
	"./KW.js": 371,
	"./KY.js": 372,
	"./KZ.js": 373,
	"./LA.js": 374,
	"./LB.js": 375,
	"./LC.js": 376,
	"./LI.js": 377,
	"./LK.js": 378,
	"./LR.js": 379,
	"./LS.js": 380,
	"./LT.js": 381,
	"./LU.js": 382,
	"./LV.js": 383,
	"./LY.js": 384,
	"./MA.js": 385,
	"./MC.js": 386,
	"./MD.js": 387,
	"./ME.js": 388,
	"./MG.js": 389,
	"./MH.js": 390,
	"./MK.js": 391,
	"./ML.js": 392,
	"./MM.js": 393,
	"./MN.js": 394,
	"./MO.js": 395,
	"./MP.js": 396,
	"./MQ.js": 397,
	"./MR.js": 398,
	"./MS.js": 399,
	"./MT.js": 400,
	"./MU.js": 401,
	"./MV.js": 402,
	"./MW.js": 403,
	"./MX.js": 404,
	"./MY.js": 405,
	"./MZ.js": 406,
	"./NA.js": 407,
	"./NC.js": 408,
	"./NE.js": 409,
	"./NF.js": 410,
	"./NG.js": 411,
	"./NI.js": 412,
	"./NL.js": 413,
	"./NO.js": 414,
	"./NP.js": 415,
	"./NR.js": 416,
	"./NU.js": 417,
	"./NZ.js": 418,
	"./OM.js": 419,
	"./PA.js": 420,
	"./PE.js": 421,
	"./PF.js": 422,
	"./PG.js": 423,
	"./PH.js": 424,
	"./PK.js": 425,
	"./PL.js": 426,
	"./PM.js": 427,
	"./PN.js": 428,
	"./PR.js": 429,
	"./PS.js": 430,
	"./PT.js": 431,
	"./PW.js": 432,
	"./PY.js": 433,
	"./QA.js": 434,
	"./RE.js": 435,
	"./RO.js": 436,
	"./RS.js": 437,
	"./RU.js": 438,
	"./RW.js": 439,
	"./SA.js": 440,
	"./SB.js": 441,
	"./SC.js": 442,
	"./SD.js": 443,
	"./SE.js": 444,
	"./SG.js": 445,
	"./SH.js": 446,
	"./SI.js": 447,
	"./SK.js": 448,
	"./SL.js": 449,
	"./SM.js": 450,
	"./SN.js": 451,
	"./SO.js": 452,
	"./SR.js": 453,
	"./ST.js": 454,
	"./SV.js": 455,
	"./SY.js": 456,
	"./SZ.js": 457,
	"./TC.js": 458,
	"./TD.js": 459,
	"./TG.js": 460,
	"./TH.js": 461,
	"./TJ.js": 462,
	"./TK.js": 463,
	"./TL.js": 464,
	"./TM.js": 465,
	"./TN.js": 466,
	"./TO.js": 467,
	"./TR.js": 468,
	"./TT.js": 469,
	"./TV.js": 470,
	"./TW.js": 471,
	"./TZ.js": 472,
	"./UA.js": 473,
	"./UG.js": 474,
	"./US.js": 475,
	"./UY.js": 476,
	"./UZ.js": 477,
	"./VA.js": 478,
	"./VC.js": 479,
	"./VE.js": 480,
	"./VG.js": 481,
	"./VI.js": 482,
	"./VN.js": 483,
	"./VU.js": 484,
	"./WF.js": 485,
	"./WS.js": 486,
	"./YE.js": 487,
	"./YT.js": 488,
	"./ZA.js": 489,
	"./ZM.js": 490,
	"./ZW.js": 491,
	"./alt-af.js": 492,
	"./alt-an.js": 493,
	"./alt-as.js": 494,
	"./alt-eu.js": 495,
	"./alt-na.js": 496,
	"./alt-oc.js": 497,
	"./alt-sa.js": 498,
	"./alt-ww.js": 499
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 257;

/***/ }),
/* 258 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006377,"35":0.006377,"36":0,"37":0,"38":0.057393,"39":0,"40":0,"41":0,"42":0,"43":0.006377,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.293342,"50":0.006377,"51":0.012754,"52":0,"53":0.006377,"54":0,"55":0.006377,"56":0,"57":0.038262,"58":0.082901,"59":0.012754,"60":0.006377,"61":0,"62":0.038262,"63":0.006377,"64":0.006377,"65":0.153048,"66":0.025508,"67":0.057393,"68":0.019131,"69":0.025508,"70":0.038262,"71":0.089278,"72":1.135106,"73":20.234221,"74":0.057393,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.006377,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.006377,"46":0,"47":0.006377,"48":0.06377,"49":0.006377,"50":0,"51":0.06377,"52":0.057393,"53":0.006377,"54":0.006377,"55":0,"56":0.006377,"57":0,"58":0.006377,"59":0,"60":0.031885,"61":0.012754,"62":0.031885,"63":0.006377,"64":0.012754,"65":0.076524,"66":4.495785,"67":0.019131,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0.006377,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.006377,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.586684,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006377},E:{"4":0.006377,"5":0,"6":0,"7":0,"8":0.006377,"9":0.012754,"10":0.012754,"11":0.089278,"12":2.863273,_:"0","3.1":0,"3.2":0,"5.1":0.031885,"6.1":0,"7.1":0,"9.1":0.038262,"10.1":1.179745,"11.1":0.771617,"12.1":2.015132},G:{"8":0.18226240578405,"3.2":0.011835221154808,"4.0-4.1":0.007101132692885,"4.2-4.3":0.0023670442309617,"5.0-5.1":0.023670442309617,"6.0-6.1":0.011835221154808,"7.0-7.1":0.04260679615731,"8.1-8.4":0.092314725007505,"9.0-9.2":0.054442017312118,"9.3":0.45210544811368,"10.0-10.2":0.25090668848194,"10.3":0.5988621904333,"11.0-11.2":0.73851780006004,"11.3-11.4":1.5172753520464,"12.0-12.1":9.1604611738217,"12.2":10.507309341239},I:{"3":0.0011241945564516,"4":0.16188401612903,_:"67","2.1":0.0078693618951613,"2.2":0.013490334677419,"2.3":0.0078693618951613,"4.1":0.080942008064516,"4.2-4.3":0.3507487016129,"4.4":0,"4.4.3-4.4.4":0.49127302116935},A:{"6":0.006377,"7":0,"8":0.019131,"9":0.006377,"10":0.012754,"11":1.409317,"5.5":0},B:{"12":0.006377,"13":0.006377,"14":0.019131,"15":0.006377,"16":0.057393,"17":0.905534,"18":0.554799},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.30948605857741,"5.0-5.4":0.06403159832636,"6.2-6.4":0.06403159832636,"7.2-7.4":0.021343866108787,"8.2":0.74703531380753,"9.2":1.3446635648536},N:{"10":0,"11":0.021738},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.199265},O:{"0":0.007246},Q:{"1.2":0.03623},H:{"0":0.030870201030928},L:{"0":32.669177}};


/***/ }),
/* 259 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.004789,"23":0.004789,"24":0.004789,"25":0,"26":0.004789,"27":0,"28":0,"29":0.071835,"30":0,"31":0,"32":0,"33":0.004789,"34":0.009578,"35":0.004789,"36":0,"37":0.004789,"38":0.033523,"39":0.004789,"40":0.004789,"41":0,"42":0,"43":0.014367,"44":0,"45":0,"46":0.004789,"47":0,"48":0.004789,"49":0.225083,"50":0.004789,"51":0.004789,"52":0.004789,"53":0,"54":0,"55":0.028734,"56":0.009578,"57":0.004789,"58":0.019156,"59":0.004789,"60":0.009578,"61":0.067046,"62":0.019156,"63":0.062257,"64":0.023945,"65":0.086202,"66":0.019156,"67":0.062257,"68":0.028734,"69":0.043101,"70":0.076624,"71":0.124514,"72":0.775818,"73":14.831533,"74":0.04789,"75":0.023945,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.004789,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.004789,"44":0,"45":0,"46":0,"47":0.004789,"48":0.062257,"49":0,"50":0.004789,"51":0.004789,"52":0.019156,"53":0,"54":0,"55":0.004789,"56":0.009578,"57":0.009578,"58":0,"59":0,"60":0.019156,"61":0.004789,"62":0.004789,"63":0.009578,"64":0.023945,"65":0.076624,"66":0.962589,"67":0.033523,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.014367,"38":0.004789,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.004789,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.340019,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.004789},E:{"4":0,"5":0,"6":0,"7":0,"8":0.04789,"9":0.009578,"10":0.014367,"11":0.043101,"12":0.852442,_:"0","3.1":0,"3.2":0,"5.1":0.033523,"6.1":0.004789,"7.1":0,"9.1":0.023945,"10.1":0.090991,"11.1":0.186771,"12.1":0.454955},G:{"8":0.11571108155709,"3.2":0.0075137065946162,"4.0-4.1":0.0045082239567697,"4.2-4.3":0.0015027413189232,"5.0-5.1":0.015027413189232,"6.0-6.1":0.0075137065946162,"7.0-7.1":0.027049343740618,"8.1-8.4":0.058606911438007,"9.0-9.2":0.034563050335235,"9.3":0.28702359191434,"10.0-10.2":0.15929057980586,"10.3":0.38019355368758,"11.0-11.2":0.46885529150405,"11.3-11.4":0.9632571854298,"12.0-12.1":5.815608904233,"12.2":6.6706687147003},I:{"3":0.00060341431451613,"4":0.086891661290323,_:"67","2.1":0.0042239002016129,"2.2":0.0072409717741935,"2.3":0.0042239002016129,"4.1":0.043445830645161,"4.2-4.3":0.18826526612903,"4.4":0,"4.4.3-4.4.4":0.26369205544355},A:{"6":0,"7":0,"8":0.019591363636364,"9":0.0048978409090909,"10":0.014693522727273,"11":0.60733227272727,"5.5":0},B:{"12":0.004789,"13":0.009578,"14":0.038312,"15":0.028734,"16":0.04789,"17":0.62257,"18":0.153248},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.42154180147059,"5.0-5.4":0.051407536764706,"6.2-6.4":0.11309658088235,"7.2-7.4":0.23647466911765,"8.2":1.3880034926471,"9.2":1.9843309191176},N:{"10":0,"11":0.026055},J:{"7":0,"10":0.026055},S:{"2.5":0},R:{_:"0"},M:{"0":0.125064},O:{"0":7.649748},Q:{"1.2":0.020844},H:{"0":2.5407206443299},L:{"0":40.799444}};


/***/ }),
/* 260 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002669,"12":0.002669,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.005338,"26":0,"27":0,"28":0,"29":0,"30":0.002669,"31":0.018683,"32":0,"33":0,"34":0,"35":0.002669,"36":0.002669,"37":0,"38":0,"39":0.002669,"40":0.002669,"41":0,"42":0,"43":0.013345,"44":0.002669,"45":0.002669,"46":0.002669,"47":0.002669,"48":0.010676,"49":0.018683,"50":0.002669,"51":0.002669,"52":0.010676,"53":0,"54":0.002669,"55":0.010676,"56":0.002669,"57":0.002669,"58":0.010676,"59":0.005338,"60":0.008007,"61":0.002669,"62":0.005338,"63":0.010676,"64":0.010676,"65":0.042704,"66":0.005338,"67":0.021352,"68":0.008007,"69":0.024021,"70":0.02669,"71":0.136119,"72":0.122774,"73":4.235703,"74":0.016014,"75":0.005338,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.010676,"25":0,"26":0,"27":0,"28":0,"29":0.008007,"30":0,"31":0,"32":0,"33":0.005338,"34":0,"35":0.002669,"36":0,"37":0,"38":0.002669,"39":0.002669,"40":0,"41":0.008007,"42":0,"43":0.013345,"44":0.005338,"45":0.005338,"46":0,"47":0.008007,"48":0.013345,"49":0.002669,"50":0.002669,"51":0,"52":0.005338,"53":0.010676,"54":0,"55":0.002669,"56":0.024021,"57":0.013345,"58":0.005338,"59":0.002669,"60":0.008007,"61":0.008007,"62":0.005338,"63":0.010676,"64":0.040035,"65":0.056049,"66":0.581842,"67":0.064056,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.002669,"19":0,"20":0,"21":0.002669,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.002669,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.021352,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.002669,"58":0.192168,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.002669},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.002669,"11":0.029359,"12":0.032028,_:"0","3.1":0,"3.2":0,"5.1":0.002669,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.008007,"12.1":0.042704},G:{"8":0.037703531972381,"3.2":0.0024482812969078,"4.0-4.1":0.0014689687781447,"4.2-4.3":0.00048965625938157,"5.0-5.1":0.0048965625938157,"6.0-6.1":0.0024482812969078,"7.0-7.1":0.0088138126688682,"8.1-8.4":0.019096594115881,"9.0-9.2":0.011262093965776,"9.3":0.093524345541879,"10.0-10.2":0.051903563494446,"10.3":0.12388303362354,"11.0-11.2":0.15277275292705,"11.3-11.4":0.31386966226358,"12.0-12.1":1.8949697238067,"12.2":2.1735841353948},I:{"3":0.0050683084677419,"4":0.72983641935484,_:"67","2.1":0.035478159274194,"2.2":0.060819701612903,"2.3":0.035478159274194,"4.1":0.36491820967742,"4.2-4.3":1.5813122419355,"4.4":0,"4.4.3-4.4.4":2.2148508004032},A:{"6":0.002669,"7":0,"8":0.029359,"9":0.016014,"10":0.010676,"11":0.288252,"5.5":0},B:{"12":0.013345,"13":0.008007,"14":0.021352,"15":0.010676,"16":0.122774,"17":0.104091,"18":0.058718},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.306770806391,"5.0-5.4":0.57417439285714,"6.2-6.4":0.26190410902256,"7.2-7.4":0.68497997744361,"8.2":1.1584220206767,"9.2":0.37270969360902},N:{"10":0,"11":0.021993},J:{"7":0,"10":0.007331},S:{"2.5":0},R:{_:"0"},M:{"0":0.087972},O:{"0":2.741794},Q:{"1.2":0},H:{"0":1.3395198161512},L:{"0":70.863923}};


/***/ }),
/* 261 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.004972,"23":0,"24":0,"25":0,"26":0.004972,"27":0,"28":0.004972,"29":0,"30":0,"31":0.004972,"32":0.004972,"33":0.009944,"34":0.004972,"35":0.009944,"36":0.014916,"37":0,"38":0,"39":0.004972,"40":0.004972,"41":0.009944,"42":0.004972,"43":0,"44":0.009944,"45":0.004972,"46":0.004972,"47":0.004972,"48":0.004972,"49":0.069608,"50":0.009944,"51":0.004972,"52":0.004972,"53":0.02486,"54":0.009944,"55":0.014916,"56":0,"57":0.004972,"58":0.004972,"59":0,"60":0.009944,"61":0.004972,"62":0.004972,"63":0.054692,"64":0,"65":0.094468,"66":0.014916,"67":0.014916,"68":0.009944,"69":0.029832,"70":0.054692,"71":0.07458,"72":0.924792,"73":11.868164,"74":0.069608,"75":0.004972,_:"76"},C:{"2":0,"3":0.004972,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.004972,"11":0,"12":0,"13":0,"14":0.004972,"15":0.004972,"16":0,"17":0,"18":0.004972,"19":0.004972,"20":0,"21":0.009944,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.004972,"28":0.004972,"29":0.004972,"30":0.004972,"31":0.009944,"32":0,"33":0,"34":0,"35":0.004972,"36":0.004972,"37":0.009944,"38":0,"39":0,"40":0,"41":0.009944,"42":0.004972,"43":0.004972,"44":0.004972,"45":0.014916,"46":0.004972,"47":0.004972,"48":0.009944,"49":0.009944,"50":0.009944,"51":0.019888,"52":0.04972,"53":0.014916,"54":0.014916,"55":0.004972,"56":0.004972,"57":0.004972,"58":0.004972,"59":0,"60":0.019888,"61":0,"62":0,"63":0.004972,"64":0,"65":0.044748,"66":1.630816,"67":0.039776,"68":0,"3.5":0.004972,"3.6":0},F:{"9":0,"11":0.004972,"12":0.004972,"15":0.004972,"16":0,"17":0,"18":0,"19":0.009944,"20":0.009944,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.014916,"29":0.004972,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.014916,"38":0,"39":0,"40":0,"41":0,"42":0.004972,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.178992,"9.5-9.6":0,"10.0-10.1":0.004972,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.004972,"12.1":0.009944},E:{"4":0,"5":0.004972,"6":0.004972,"7":0,"8":0.004972,"9":0.004972,"10":0.009944,"11":0.02486,"12":0.939708,_:"0","3.1":0,"3.2":0,"5.1":0.02486,"6.1":0.02486,"7.1":0,"9.1":0.019888,"10.1":0.054692,"11.1":0.09944,"12.1":0.482284},G:{"8":0.15115982267587,"3.2":0.0098155729010307,"4.0-4.1":0.0058893437406184,"4.2-4.3":0.0019631145802061,"5.0-5.1":0.019631145802061,"6.0-6.1":0.0098155729010307,"7.0-7.1":0.035336062443711,"8.1-8.4":0.07656146862804,"9.0-9.2":0.045151635344741,"9.3":0.37495488481937,"10.0-10.2":0.20809014550185,"10.3":0.49666798879215,"11.0-11.2":0.61249174902432,"11.3-11.4":1.2583564459121,"12.0-12.1":7.5972534253978,"12.2":8.7142656215351},I:{"3":0.0035941733870968,"4":0.51756096774194,_:"67","2.1":0.025159213709677,"2.2":0.043130080645161,"2.3":0.025159213709677,"4.1":0.25878048387097,"4.2-4.3":1.1213820967742,"4.4":0,"4.4.3-4.4.4":1.5706537701613},A:{"6":0,"7":0,"8":0.034804,"9":0.034804,"10":0.034804,"11":0.710996,"5.5":0},B:{"12":0.019888,"13":0.034804,"14":0.019888,"15":0.1243,"16":0.044748,"17":1.26786,"18":0.169048},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.80892955752212,"5.0-5.4":0.022470265486726,"6.2-6.4":0.089881061946903,"7.2-7.4":0.25840805309735,"8.2":1.5729185840708,"9.2":2.3256724778761},N:{"10":0.27030528,"11":0.15204672},J:{"7":0,"10":0.447492},S:{"2.5":0},R:{_:"0"},M:{"0":0.105588},O:{"0":0.17598},Q:{"1.2":0},H:{"0":2.0468797938144},L:{"0":43.269856}};


/***/ }),
/* 262 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.200421,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.056529,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.005139,"57":0,"58":0.056529,"59":0,"60":0.005139,"61":0,"62":0.005139,"63":0,"64":0,"65":0.015417,"66":0,"67":0,"68":0.005139,"69":0.046251,"70":0,"71":0.077085,"72":0.647514,"73":11.228715,"74":0.087363,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.005139,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.005139,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.005139,"49":0,"50":0.015417,"51":0.005139,"52":0.005139,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.020556,"66":0.791406,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0.010278,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.015417,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.678348,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.015417,"6":0,"7":0,"8":0.025695,"9":0.005139,"10":0.005139,"11":0.005139,"12":0.385425,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.005139,"10.1":0.015417,"11.1":0.292923,"12.1":0.292923},G:{"8":0.132427378565,"3.2":0.0085991804262984,"4.0-4.1":0.005159508255779,"4.2-4.3":0.0017198360852597,"5.0-5.1":0.017198360852597,"6.0-6.1":0.0085991804262984,"7.0-7.1":0.030957049534674,"8.1-8.4":0.067073607325128,"9.0-9.2":0.039556229960973,"9.3":0.3284886922846,"10.0-10.2":0.18230262503753,"10.3":0.4351185295707,"11.0-11.2":0.53658885860102,"11.3-11.4":1.1024149306515,"12.0-12.1":6.655765649955,"12.2":7.6343523824677},I:{"3":0.0067267691532258,"4":0.96865475806452,_:"67","2.1":0.047087384072581,"2.2":0.08072122983871,"2.3":0.047087384072581,"4.1":0.48432737903226,"4.2-4.3":2.0987519758065,"4.4":0,"4.4.3-4.4.4":2.9395981199597},A:{"6":0,"7":0,"8":0,"9":0.005139,"10":0.005139,"11":0.817101,"5.5":0},B:{"12":0.020556,"13":0.046251,"14":0.020556,"15":0.046251,"16":0.164448,"17":3.098817,"18":0.313479},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.14703932195122,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.090485736585366,"8.2":2.4996684731707,"9.2":1.9002004682927},N:{"10":0,"11":0.009722},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.014583},O:{"0":0.024305},Q:{"1.2":0},H:{"0":0.055224969072165},L:{"0":49.603278}};


/***/ }),
/* 263 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.005051,"19":0,"20":0,"21":0,"22":0.005051,"23":0,"24":0,"25":0,"26":0.005051,"27":0,"28":0,"29":0.646528,"30":0.010102,"31":0.010102,"32":0,"33":0,"34":0.005051,"35":0,"36":0,"37":0,"38":0.015153,"39":0,"40":0.005051,"41":0.030306,"42":0,"43":0.005051,"44":0.015153,"45":0.005051,"46":0.005051,"47":0,"48":0.005051,"49":1.116271,"50":0,"51":0.005051,"52":0.005051,"53":0.025255,"54":0.005051,"55":0.015153,"56":0.005051,"57":0.010102,"58":0.075765,"59":0.005051,"60":0.005051,"61":0.328315,"62":0.075765,"63":0.131326,"64":0.106071,"65":0.075765,"66":0.025255,"67":0.05051,"68":0.040408,"69":0.080816,"70":0.060612,"71":0.106071,"72":0.525304,"73":17.016819,"74":0.106071,"75":0.025255,_:"76"},C:{"2":0,"3":0.005051,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.005051,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.005051,"42":0,"43":0.005051,"44":0,"45":0,"46":0,"47":0,"48":0.030306,"49":0,"50":0.005051,"51":0,"52":0.055561,"53":0,"54":0,"55":0.005051,"56":0.010102,"57":0.025255,"58":0.030306,"59":0.020204,"60":0.030306,"61":0.010102,"62":0.015153,"63":0.005051,"64":0.005051,"65":0.116173,"66":1.085965,"67":0.020204,"68":0,"3.5":0,"3.6":0.005051},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.010102,"37":0,"38":0,"39":0,"40":0.010102,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.005051,"49":0.005051,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.005051,"56":0.010102,"57":0,"58":0.621273,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005051},E:{"4":0.005051,"5":0,"6":0.005051,"7":0,"8":0.005051,"9":0.010102,"10":0.010102,"11":0.045459,"12":0.272754,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.010102,"10.1":0.030306,"11.1":0.055561,"12.1":0.156581},G:{"8":0.18787855909136,"3.2":0.012199906434504,"4.0-4.1":0.0073199438607025,"4.2-4.3":0.0024399812869008,"5.0-5.1":0.024399812869008,"6.0-6.1":0.012199906434504,"7.0-7.1":0.043919663164215,"8.1-8.4":0.095159270189132,"9.0-9.2":0.056119569598719,"9.3":0.46603642579806,"10.0-10.2":0.25863801641149,"10.3":0.61731526558591,"11.0-11.2":0.76127416151306,"11.3-11.4":1.5640280049034,"12.0-12.1":9.4427275803062,"12.2":10.831076932553},I:{"3":0.0013593447580645,"4":0.19574564516129,_:"67","2.1":0.0095154133064516,"2.2":0.016312137096774,"2.3":0.0095154133064516,"4.1":0.097872822580645,"4.2-4.3":0.42411556451613,"4.4":0,"4.4.3-4.4.4":0.59403365927419},A:{"6":0,"7":0,"8":0.14036463157895,"9":0.023394105263158,"10":0.029242631578947,"11":0.25148663157895,"5.5":0},B:{"12":0.015153,"13":0.010102,"14":0.025255,"15":0.025255,"16":0.020204,"17":0.272754,"18":0.111122},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.62465330319149,"5.0-5.4":0.030720654255319,"6.2-6.4":0.12288261702128,"7.2-7.4":0.21504457978723,"8.2":1.3414685691489,"9.2":1.5155522765957},N:{"10":0.0113827,"11":0.2162713},J:{"7":0,"10":0.029694},S:{"2.5":0},R:{_:"0"},M:{"0":0.118776},O:{"0":0.103929},Q:{"1.2":0},H:{"0":0.27643821477663},L:{"0":42.566437}};


/***/ }),
/* 264 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.008236,"18":0.008236,"19":0,"20":0,"21":0.008236,"22":0,"23":0.008236,"24":0.008236,"25":0.008236,"26":0,"27":0,"28":0,"29":0,"30":0.008236,"31":0.016472,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.016472,"39":0.008236,"40":0.016472,"41":0.04118,"42":0,"43":0.008236,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.840072,"50":0.016472,"51":0.008236,"52":0.008236,"53":0.008236,"54":0.008236,"55":0.008236,"56":0.074124,"57":0.008236,"58":0.04118,"59":0.008236,"60":0.008236,"61":0.008236,"62":0.016472,"63":0.131776,"64":0.065888,"65":0.057652,"66":0.024708,"67":0.08236,"68":0.049416,"69":0.049416,"70":0.197664,"71":0.312968,"72":1.696616,"73":34.607672,"74":0.024708,"75":0.049416,_:"76"},C:{"2":0,"3":0.008236,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.032944,"39":0,"40":0,"41":0,"42":0.032944,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.008236,"49":0,"50":0.008236,"51":0,"52":17.188532,"53":0,"54":0,"55":0.008236,"56":0.008236,"57":0.016472,"58":0,"59":0,"60":0.024708,"61":0.049416,"62":0.008236,"63":0.008236,"64":0.016472,"65":0.074124,"66":1.52366,"67":0.008236,"68":0,"3.5":0.008236,"3.6":0.04118},F:{"9":0,"11":0,"12":0.008236,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.008236,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.024708,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.024708,"43":0,"44":0,"45":0,"46":0.008236,"47":0,"48":0,"49":0.016472,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.024708,"57":0,"58":1.021264,"9.5-9.6":0,"10.0-10.1":0,"10.5":0.008236,"10.6":0,"11.1":0.008236,"11.5":0,"11.6":0.008236,"12.1":0.032944},E:{"4":0,"5":0.008236,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.024708,"12":0.53534,_:"0","3.1":0,"3.2":0,"5.1":0.024708,"6.1":0,"7.1":0,"9.1":0.008236,"10.1":0.016472,"11.1":0.148248,"12.1":0.337676},G:{"8":0.061733457420194,"3.2":0.0040086660662464,"4.0-4.1":0.0024051996397478,"4.2-4.3":0.00080173321324927,"5.0-5.1":0.0080173321324927,"6.0-6.1":0.0040086660662464,"7.0-7.1":0.014431197838487,"8.1-8.4":0.031267595316722,"9.0-9.2":0.018439863904733,"9.3":0.15313104373061,"10.0-10.2":0.084983720604423,"10.3":0.20283850295207,"11.0-11.2":0.25014076253377,"11.3-11.4":0.51391098969279,"12.0-12.1":3.1027075352747,"12.2":3.5588937336135},I:{"3":0.0003984314516129,"4":0.057374129032258,_:"67","2.1":0.0027890201612903,"2.2":0.0047811774193548,"2.3":0.0027890201612903,"4.1":0.028687064516129,"4.2-4.3":0.12431061290323,"4.4":0,"4.4.3-4.4.4":0.17411454435484},A:{"6":0,"7":0,"8":0.034120571428571,"9":0.0085301428571429,"10":0.0085301428571429,"11":0.18766314285714,"5.5":0},B:{"12":0,"13":0,"14":0.008236,"15":0.016472,"16":0.032944,"17":0.387092,"18":0.16472},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.1599948,"5.0-5.4":0.029999025,"6.2-6.4":0.049998375,"7.2-7.4":0.09999675,"8.2":0.589980825,"9.2":0.669978225},N:{"10":0.042336,"11":0.042336},J:{"7":0,"10":0.001764},S:{"2.5":0},R:{_:"0"},M:{"0":0.033516},O:{"0":0.345744},Q:{"1.2":0.001764},H:{"0":0.17201424742268},L:{"0":20.508712}};


/***/ }),
/* 265 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.080201,"21":0.051037,"22":0.080201,"24":0.029164,"26":0.131238,"28":0.102074,"31":0.51037,"32":0.306222,"33":2.223755,"34":0.204148,"35":1.407163,"36":28.87236,"38":0.080201,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 23 25 27 29 30 37 39 40"},C:{"10":0.029164,"12":0.051037,"21":0.029164,"26":0.051037,"27":0.029164,"29":0.029164,"30":4.031923,"31":10.827135,"32":0.051037,_:"2 3 4 5 6 7 8 9 11 13 14 15 16 17 18 19 20 22 23 24 25 28 33 34 3.5 3.6"},F:{"21":0.051037,"23":0.051037,"24":0.051037,_:"9 11 12 15 16 17 18 19 20 22 25 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.539534},E:{"4":0,"5":0.233312,"6":0.102074,"7":6.05153,"8":0.029164,_:"3.1 3.2","5.1":0.765555,"6.1":0.561407},I:{"3":0,"4":0.648893454545,"2.1":0.00612163636364,"2.2":0.0428514545455,"2.3":0.832542545455,"4.1":1.62223363636,"4.2-4.3":1.69569327273,"4.4":1.279422,_:"4.4.3"},K:{"10":0,"11":0,"12":0.0000648307692308,_:"0","11.1":0,"11.5":0,"12.1":0.000356569230769},A:{"8":1.4582,"9":2.47894,"10":1.633184,"11":9.471009,_:"6 7 5.5"},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0.0939043474576,"6.0-6.1":0.473354567797,"7.0-7.1":8.93049508475},J:{"7":0.40838175,_:"10"},M:{"0":0.051471},N:{"10":0.09419193},H:{"5.0-7.0":0.0239596},L:{"0":8.88552}};


/***/ }),
/* 266 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.038941,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.033378,"21":0,"22":0,"23":0,"24":0,"25":0.005563,"26":0.050067,"27":0,"28":0,"29":0.044504,"30":0,"31":0,"32":0,"33":0.077882,"34":0,"35":0.011126,"36":0.150201,"37":0,"38":0.011126,"39":0.005563,"40":0.077882,"41":0.005563,"42":0.005563,"43":0.361595,"44":0,"45":0.011126,"46":0.016689,"47":0.011126,"48":0.005563,"49":0.239209,"50":0.011126,"51":0.011126,"52":0.016689,"53":0.033378,"54":0.016689,"55":0.205831,"56":0.027815,"57":0.038941,"58":0.094571,"59":0.005563,"60":0.027815,"61":0.016689,"62":0.016689,"63":0.372721,"64":0.016689,"65":0.311528,"66":0.038941,"67":0.094571,"68":0.094571,"69":0.211394,"70":0.133512,"71":0.272587,"72":0.700938,"73":15.337191,"74":0.11126,"75":0.022252,_:"76"},C:{"2":0,"3":0.005563,"4":0,"5":0.005563,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.005563,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.005563,"19":0,"20":0.005563,"21":0.005563,"22":0,"23":0,"24":0.005563,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005563,"32":0,"33":0,"34":0,"35":0.005563,"36":0.005563,"37":0,"38":0.005563,"39":0,"40":0,"41":0.027815,"42":0.005563,"43":0.011126,"44":0,"45":0.005563,"46":0,"47":0.038941,"48":0.011126,"49":0.005563,"50":0,"51":0,"52":0.038941,"53":0.005563,"54":0.005563,"55":0,"56":0.011126,"57":0.005563,"58":0.016689,"59":0.005563,"60":0.077882,"61":0.038941,"62":0.016689,"63":0.016689,"64":0.027815,"65":0.122386,"66":1.718967,"67":0.022252,"68":0.005563,"3.5":0,"3.6":0.005563},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.005563,"21":0,"22":0,"23":0.005563,"24":0,"25":0,"26":0,"27":0,"28":0.005563,"29":0,"30":0,"31":0,"32":0.005563,"33":0,"34":0,"35":0.033378,"36":0.016689,"37":0.005563,"38":0.005563,"39":0,"40":0.005563,"41":0,"42":0.011126,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.005563,"49":0.022252,"50":0,"51":0.005563,"52":0,"53":0.005563,"54":0.005563,"55":0,"56":0.005563,"57":0.027815,"58":1.769034,"9.5-9.6":0.005563,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0.005563,"11.6":0,"12.1":0.061193},E:{"4":0,"5":0,"6":0,"7":0,"8":0.011126,"9":0.005563,"10":0.016689,"11":0.061193,"12":0.695375,_:"0","3.1":0,"3.2":0,"5.1":0.005563,"6.1":0,"7.1":0,"9.1":0.038941,"10.1":0.105697,"11.1":0.189142,"12.1":0.422788},G:{"8":0.075745685179626,"3.2":0.00491855098569,"4.0-4.1":0.002951130591414,"4.2-4.3":0.000983710197138,"5.0-5.1":0.00983710197138,"6.0-6.1":0.00491855098569,"7.0-7.1":0.017706783548484,"8.1-8.4":0.038364697688382,"9.0-9.2":0.022625334534174,"9.3":0.18788864765336,"10.0-10.2":0.10427328089663,"10.3":0.24887867987591,"11.0-11.2":0.30691758150705,"11.3-11.4":0.63055823636546,"12.0-12.1":3.806958462924,"12.2":4.3666895650956},I:{"3":0.0053084606854839,"4":0.76441833870968,_:"67","2.1":0.037159224798387,"2.2":0.063701528225806,"2.3":0.037159224798387,"4.1":0.38220916935484,"4.2-4.3":1.656239733871,"4.4":0,"4.4.3-4.4.4":2.3197973195565},A:{"6":0,"7":0,"8":0.11173682857143,"9":0.023523542857143,"10":0.10585594285714,"11":1.1997006857143,"5.5":0},B:{"12":0.11126,"13":0.083445,"14":0.105697,"15":0.05563,"16":0.100134,"17":1.424128,"18":0.239209},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.75114784435798,"5.0-5.4":0.082317571984436,"6.2-6.4":0.12347635797665,"7.2-7.4":0.25724241245136,"8.2":0.89520359533074,"9.2":0.53506421789883},N:{"10":0.035092636363636,"11":0.093580363636364},J:{"7":0,"10":0.026622},S:{"2.5":0},R:{_:"0"},M:{"0":0.097614},O:{"0":1.060443},Q:{"1.2":0.168606},H:{"0":6.2379874484536},L:{"0":38.650343}};


/***/ }),
/* 267 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005414,"23":0,"24":0,"25":0,"26":0.005414,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.010828,"35":0.005414,"36":0.005414,"37":0,"38":0.021656,"39":0.005414,"40":0.005414,"41":0.005414,"42":0,"43":0.010828,"44":0.005414,"45":0.005414,"46":0.010828,"47":0.005414,"48":0.005414,"49":0.833756,"50":0.010828,"51":0.010828,"52":0.005414,"53":0.005414,"54":0.005414,"55":0.010828,"56":0.010828,"57":0.016242,"58":0.08121,"59":0.010828,"60":0.016242,"61":0.059554,"62":0.02707,"63":0.070382,"64":0.02707,"65":0.05414,"66":0.043312,"67":0.08121,"68":0.048726,"69":0.070382,"70":0.097452,"71":0.157006,"72":0.709234,"73":20.676066,"74":0.02707,"75":0.010828,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.005414,"39":0,"40":0.005414,"41":0,"42":0,"43":0.005414,"44":0,"45":0.005414,"46":0,"47":0.021656,"48":0.021656,"49":0.005414,"50":0.005414,"51":0.005414,"52":0.13535,"53":0.005414,"54":0.010828,"55":0.005414,"56":0.016242,"57":0.016242,"58":0.010828,"59":0.010828,"60":0.032484,"61":0.016242,"62":0.02707,"63":0.016242,"64":0.021656,"65":0.092038,"66":1.413054,"67":0.016242,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.010828,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.384394,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.016242},E:{"4":0,"5":0,"6":0,"7":0,"8":0.010828,"9":0.005414,"10":0.010828,"11":0.021656,"12":0.292356,_:"0","3.1":0,"3.2":0,"5.1":0.454776,"6.1":0.005414,"7.1":0,"9.1":0.016242,"10.1":0.043312,"11.1":0.075796,"12.1":0.194904},G:{"8":0.035860532772941,"3.2":0.002328606024217,"4.0-4.1":0.0013971636145302,"4.2-4.3":0.00046572120484339,"5.0-5.1":0.0046572120484339,"6.0-6.1":0.002328606024217,"7.0-7.1":0.008382981687181,"8.1-8.4":0.018163126988892,"9.0-9.2":0.010711587711398,"9.3":0.088952750125088,"10.0-10.2":0.049366447713399,"10.3":0.11782746482538,"11.0-11.2":0.14530501591114,"11.3-11.4":0.29852729230461,"12.0-12.1":1.8023410627439,"12.2":2.0673364282998},I:{"3":0.00048348588709677,"4":0.069621967741935,_:"67","2.1":0.0033844012096774,"2.2":0.0058018306451613,"2.3":0.0033844012096774,"4.1":0.034810983870968,"4.2-4.3":0.15084759677419,"4.4":0,"4.4.3-4.4.4":0.21128333266129},A:{"6":0.010828,"7":0.021656,"8":0.232802,"9":0.048726,"10":0.02707,"11":0.698406,"5.5":0},B:{"12":0.005414,"13":0.010828,"14":0.021656,"15":0.059554,"16":0.032484,"17":0.37898,"18":0.075796},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.40661429602888,"5.0-5.4":0.040661429602888,"6.2-6.4":0.10165357400722,"7.2-7.4":0.17281107581227,"8.2":1.2401736028881,"9.2":0.85389002166065},N:{"10":0.011060352941176,"11":0.36499164705882},J:{"7":0,"10":0.004586},S:{"2.5":0},R:{_:"0"},M:{"0":0.082548},O:{"0":0.059618},Q:{"1.2":0.009172},H:{"0":0.29957926804124},L:{"0":60.545918}};


/***/ }),
/* 268 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.054999,"39":0,"40":0,"41":0,"42":0.018333,"43":0,"44":0,"45":0,"46":0.018333,"47":0,"48":0.006111,"49":0.452214,"50":0,"51":0,"52":0.006111,"53":0.018333,"54":0.018333,"55":0.006111,"56":0.006111,"57":0,"58":0.207774,"59":0,"60":0,"61":0,"62":0.006111,"63":0.030555,"64":0.006111,"65":0.06111,"66":0.073332,"67":0.409437,"68":0.164997,"69":0.336105,"70":0.012222,"71":0.097776,"72":1.729413,"73":18.161892,"74":0.006111,"75":0.006111,_:"76"},C:{"2":0,"3":0,"4":0.018333,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.012222,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006111,"44":0,"45":0.006111,"46":0,"47":0.030555,"48":0.085554,"49":0,"50":0,"51":0,"52":0.018333,"53":0.006111,"54":0.024444,"55":0,"56":0,"57":0.024444,"58":0,"59":0,"60":0,"61":0,"62":0.006111,"63":0.006111,"64":0.006111,"65":0.54999,"66":2.493288,"67":0.006111,"68":0,"3.5":0,"3.6":0.012222},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.598878,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.006111,"5":0.097776,"6":0.036666,"7":0,"8":0,"9":0.006111,"10":0.006111,"11":0.018333,"12":0.287217,_:"0","3.1":0,"3.2":0,"5.1":0.018333,"6.1":0.012222,"7.1":0,"9.1":0.048888,"10.1":0.934983,"11.1":0.293328,"12.1":0.207774},G:{"8":0.15428429050335,"3.2":0.010018460422296,"4.0-4.1":0.0060110762533774,"4.2-4.3":0.0020036920844591,"5.0-5.1":0.020036920844591,"6.0-6.1":0.010018460422296,"7.0-7.1":0.036066457520264,"8.1-8.4":0.078143991293906,"9.0-9.2":0.04608491794256,"9.3":0.38270518813169,"10.0-10.2":0.21239136095267,"10.3":0.50693409736816,"11.0-11.2":0.62515193035125,"11.3-11.4":1.2843666261383,"12.0-12.1":7.7542883668568,"12.2":8.894389162914},I:{"3":0.0028824546370968,"4":0.41507346774194,_:"67","2.1":0.020177182459677,"2.2":0.034589455645161,"2.3":0.020177182459677,"4.1":0.20753673387097,"4.2-4.3":0.89932584677419,"4.4":0,"4.4.3-4.4.4":1.2596326764113},A:{"6":0,"7":0,"8":0.0065475,"9":0.0065475,"10":0.0196425,"11":0.4255875,"5.5":0},B:{"12":0,"13":0.006111,"14":0.054999,"15":0.042777,"16":0.06111,"17":0.812763,"18":1.888299},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.21322052398524,"5.0-5.4":0.022444265682657,"6.2-6.4":0.022444265682657,"7.2-7.4":0.17955412546125,"8.2":1.7955412546125,"9.2":0.80799356457565},N:{"10":0.015556,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.046668},O:{"0":0.478347},Q:{"1.2":0},H:{"0":0.78055303780069},L:{"0":39.192638}};


/***/ }),
/* 269 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.011872,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.005936,"33":0,"34":0.011872,"35":0,"36":0.005936,"37":0,"38":0.02968,"39":0,"40":0.011872,"41":0.005936,"42":0,"43":0.005936,"44":0.005936,"45":0,"46":0,"47":0.005936,"48":0,"49":0.219632,"50":0.005936,"51":0.011872,"52":0,"53":0.011872,"54":0,"55":0.011872,"56":0.017808,"57":0.403648,"58":0.041552,"59":0.011872,"60":0.005936,"61":0.201824,"62":0.02968,"63":0.094976,"64":0.023744,"65":0.035616,"66":0.017808,"67":0.047488,"68":0.05936,"69":0.05936,"70":0.106848,"71":0.124656,"72":0.937888,"73":12.614,"74":0.017808,"75":0.017808,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.011872,"11":0,"12":0.023744,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.005936,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005936,"32":0,"33":0,"34":0.005936,"35":0,"36":0,"37":0,"38":0.017808,"39":0,"40":0,"41":0.005936,"42":0,"43":0.005936,"44":0,"45":0.02968,"46":0.005936,"47":0.011872,"48":0.065296,"49":0.005936,"50":0.011872,"51":0.011872,"52":0.284928,"53":0.005936,"54":0.011872,"55":0.011872,"56":0.035616,"57":0.017808,"58":0.023744,"59":0.02968,"60":0.931952,"61":0.035616,"62":0.041552,"63":0.035616,"64":0.077168,"65":0.421456,"66":5.680752,"67":0.035616,"68":0,"3.5":0,"3.6":0.005936},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.005936,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.005936,"37":0,"38":0.005936,"39":0,"40":0.005936,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.005936,"52":0,"53":0,"54":0,"55":0,"56":0.005936,"57":0.005936,"58":0.765744,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005936},E:{"4":0,"5":0.005936,"6":0.005936,"7":0.005936,"8":0.011872,"9":0.100912,"10":0.02968,"11":0.077168,"12":1.400896,_:"0","3.1":0,"3.2":0,"5.1":0.011872,"6.1":0.011872,"7.1":0,"9.1":0.100912,"10.1":0.160272,"11.1":0.344288,"12.1":0.926016},G:{"8":0.15375219453618,"3.2":0.0099839087361153,"4.0-4.1":0.0059903452416692,"4.2-4.3":0.0019967817472231,"5.0-5.1":0.019967817472231,"6.0-6.1":0.0099839087361153,"7.0-7.1":0.035942071450015,"8.1-8.4":0.077874488141699,"9.0-9.2":0.04592598018613,"9.3":0.3813853137196,"10.0-10.2":0.21165886520564,"10.3":0.50518578204743,"11.0-11.2":0.62299590513359,"11.3-11.4":1.27993709997,"12.0-12.1":7.7275453617532,"12.2":8.8637141759231},I:{"3":0.00071825806451613,"4":0.10342916129032,_:"67","2.1":0.0050278064516129,"2.2":0.0086190967741935,"2.3":0.0050278064516129,"4.1":0.051714580645161,"4.2-4.3":0.22409651612903,"4.4":0,"4.4.3-4.4.4":0.31387877419355},A:{"6":0,"7":0,"8":0.029781643835616,"9":0.029781643835616,"10":0.071475945205479,"11":3.3474567671233,"5.5":0},B:{"12":0.005936,"13":0.011872,"14":0.041552,"15":0.08904,"16":0.142464,"17":1.81048,"18":0.480816},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.38084582101167,"5.0-5.4":0.04231620233463,"6.2-6.4":0.074053354085603,"7.2-7.4":0.28563436575875,"8.2":1.9677034085603,"9.2":2.687078848249},N:{"10":0.0094826666666667,"11":0.047413333333333},J:{"7":0,"10":0.024384},S:{"2.5":0},R:{_:"0"},M:{"0":0.516128},O:{"0":0.154432},Q:{"1.2":0.008128},H:{"0":0.22700442611684},L:{"0":35.777456}};


/***/ }),
/* 270 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005682,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.005682,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005682,"35":0,"36":0,"37":0,"38":0.022728,"39":0,"40":0.011364,"41":0,"42":0,"43":0,"44":0.005682,"45":0.005682,"46":0.005682,"47":0.005682,"48":0.005682,"49":0.238644,"50":0.005682,"51":0.005682,"52":0.011364,"53":0.017046,"54":0.017046,"55":0.039774,"56":0.039774,"57":0.045456,"58":0.022728,"59":0.02841,"60":0.022728,"61":0.05682,"62":0.034092,"63":0.346602,"64":0.051138,"65":0.11364,"66":0.073866,"67":0.14205,"68":0.176142,"69":0.181824,"70":0.19887,"71":0.346602,"72":1.784148,"73":14.94366,"74":0.034092,"75":0.011364,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.005682,"46":0,"47":0.005682,"48":0.022728,"49":0.005682,"50":0.005682,"51":0,"52":0.147732,"53":0.005682,"54":0.005682,"55":0,"56":0.017046,"57":0.022728,"58":0.005682,"59":0.005682,"60":0.062502,"61":0.011364,"62":0.011364,"63":0.02841,"64":0.068184,"65":0.147732,"66":1.687554,"67":0.022728,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.005682,"37":0.051138,"38":0,"39":0,"40":0.005682,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.187506,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.017046,"9":0.017046,"10":0.039774,"11":0.079548,"12":1.227312,_:"0","3.1":0,"3.2":0,"5.1":0.011364,"6.1":0.011364,"7.1":0,"9.1":0.073866,"10.1":0.176142,"11.1":0.31251,"12.1":0.744342},G:{"8":0.30746675592915,"3.2":0.019965373761633,"4.0-4.1":0.01197922425698,"4.2-4.3":0.0039930747523266,"5.0-5.1":0.039930747523266,"6.0-6.1":0.019965373761633,"7.0-7.1":0.071875345541879,"8.1-8.4":0.15572991534074,"9.0-9.2":0.091840719303512,"9.3":0.76267727769439,"10.0-10.2":0.42326592374662,"10.3":1.0102479123386,"11.0-11.2":1.2458393227259,"11.3-11.4":2.5595609162414,"12.0-12.1":15.453199291504,"12.2":17.725258825578},I:{"3":0.00064607258064516,"4":0.093034451612903,_:"67","2.1":0.0045225080645161,"2.2":0.0077528709677419,"2.3":0.0045225080645161,"4.1":0.046517225806452,"4.2-4.3":0.20157464516129,"4.4":0,"4.4.3-4.4.4":0.28233371774194},A:{"6":0,"7":0,"8":0.011790634812287,"9":0.029476587030717,"10":0.041267221843003,"11":1.644793556314,"5.5":0},B:{"12":0.005682,"13":0.011364,"14":0.045456,"15":0.039774,"16":0.08523,"17":1.056852,"18":0.914802},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.25509415384615,"5.0-5.4":0.05545525083612,"6.2-6.4":0.05545525083612,"7.2-7.4":0.17745680267559,"8.2":1.1645602675585,"9.2":1.6082022742475},N:{"10":0,"11":0.04318},J:{"7":0,"10":0.004318},S:{"2.5":0},R:{_:"0"},M:{"0":0.19431},O:{"0":0.332486},Q:{"1.2":0.164084},H:{"0":0.29024824398625},L:{"0":24.33437}};


/***/ }),
/* 271 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.009526,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.009526,"39":0,"40":0,"41":0,"42":0,"43":0.004763,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.14289,"50":0,"51":0,"52":0,"53":0.004763,"54":0.061919,"55":0.009526,"56":0,"57":0.004763,"58":0.004763,"59":0.009526,"60":0.004763,"61":0,"62":0.004763,"63":0.019052,"64":0.014289,"65":0.033341,"66":0.014289,"67":0.042867,"68":0.028578,"69":0.028578,"70":0.100023,"71":0.09526,"72":0.547745,"73":11.57409,"74":0.090497,"75":0.004763,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.009526,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.014289,"49":0,"50":0,"51":0.014289,"52":0.04763,"53":0,"54":0,"55":0,"56":0.004763,"57":0.004763,"58":0,"59":0,"60":0.004763,"61":0.019052,"62":0.009526,"63":0.004763,"64":0.014289,"65":0.052393,"66":0.852577,"67":0.004763,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.004763,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.271491,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.004763,"6":0,"7":0,"8":0.009526,"9":0.004763,"10":0.028578,"11":0.076208,"12":0.71445,_:"0","3.1":0,"3.2":0,"5.1":0.019052,"6.1":0,"7.1":0.009526,"9.1":0.019052,"10.1":0.052393,"11.1":0.257202,"12.1":0.457248},G:{"8":0.21468933033123,"3.2":0.013940865605924,"4.0-4.1":0.0083645193635545,"4.2-4.3":0.0027881731211848,"5.0-5.1":0.027881731211848,"6.0-6.1":0.013940865605924,"7.0-7.1":0.050187116181327,"8.1-8.4":0.10873875172621,"9.0-9.2":0.064127981787251,"9.3":0.5325410661463,"10.0-10.2":0.29554635084559,"10.3":0.70540779965976,"11.0-11.2":0.86991001380967,"11.3-11.4":1.7872189706795,"12.0-12.1":10.790229978985,"12.2":12.376700484939},I:{"3":0.00049925403225806,"4":0.071892580645161,_:"67","2.1":0.0034947782258065,"2.2":0.0059910483870968,"2.3":0.0034947782258065,"4.1":0.035946290322581,"4.2-4.3":0.15576725806452,"4.4":0,"4.4.3-4.4.4":0.21817401209677},A:{"6":0,"7":0,"8":0.009526,"9":0.009526,"10":0.04763,"11":2.500575,"5.5":0},B:{"12":0,"13":0.004763,"14":0.038104,"15":0.066682,"16":0.166705,"17":1.252669,"18":0.447722},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.33427513442623,"5.0-5.4":0.12939682622951,"6.2-6.4":0.24801058360656,"7.2-7.4":0.85186243934426,"8.2":3.7956402360656,"9.2":4.5073227803279},N:{"10":0,"11":0.010474},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.136162},O:{"0":0.062844},Q:{"1.2":0},H:{"0":0.11403522508591},L:{"0":36.341308}};


/***/ }),
/* 272 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.02986,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.005972,"47":0,"48":0,"49":0.203048,"50":0,"51":0,"52":0.005972,"53":0.005972,"54":0.005972,"55":0,"56":0.005972,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.005972,"63":0,"64":0,"65":0,"66":0.005972,"67":0,"68":0.02986,"69":0,"70":0.095552,"71":0.220964,"72":0.931632,"73":13.920732,"74":0.017916,"75":0.125412,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.005972,"44":0,"45":0,"46":0,"47":0.011944,"48":0,"49":0,"50":0.005972,"51":0,"52":0.047776,"53":0,"54":0,"55":0,"56":0.041804,"57":0,"58":0,"59":0,"60":0.02986,"61":0.137356,"62":0,"63":0.011944,"64":0,"65":0.143328,"66":2.920308,"67":0.017916,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.011944,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.698724,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.017916,"11":0.011944,"12":1.481056,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.077636,"10.1":0.459844,"11.1":0.131384,"12.1":4.461084},G:{"8":0.33779151806264,"3.2":0.021934514159912,"4.0-4.1":0.013160708495947,"4.2-4.3":0.0043869028319824,"5.0-5.1":0.043869028319824,"6.0-6.1":0.021934514159912,"7.0-7.1":0.078964250975683,"8.1-8.4":0.17108921044731,"9.0-9.2":0.10089876513559,"9.3":0.83789844090864,"10.0-10.2":0.46501170019013,"10.3":1.1098864164915,"11.0-11.2":1.3687136835785,"11.3-11.4":2.8120047153007,"12.0-12.1":16.977313959772,"12.2":19.47346167117},I:{"3":0.00021337096774194,"4":0.030725419354839,_:"67","2.1":0.0014935967741935,"2.2":0.0025604516129032,"2.3":0.0014935967741935,"4.1":0.015362709677419,"4.2-4.3":0.066571741935484,"4.4":0,"4.4.3-4.4.4":0.093243112903226},A:{"6":0,"7":0,"8":0,"9":0.005972,"10":0.08958,"11":1.958816,"5.5":0},B:{"12":0.011944,"13":0.005972,"14":0.155272,"15":0.023888,"16":0.023888,"17":2.14992,"18":0.310544},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.08197064978903,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.17565139240506,"8.2":1.0187780759494,"9.2":1.4988918818565},N:{"10":0,"11":0.02014},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.974776},O:{"0":0.527668},Q:{"1.2":0},H:{"0":0.24787426116838},L:{"0":18.343216}};


/***/ }),
/* 273 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0.005264,"8":0.005264,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.005264,"20":0,"21":0.010528,"22":0.015792,"23":0.015792,"24":0,"25":0.005264,"26":0.015792,"27":0,"28":0.005264,"29":0,"30":0.02632,"31":0,"32":0,"33":0,"34":0.005264,"35":0.005264,"36":0,"37":0.005264,"38":0.02632,"39":0.010528,"40":0.010528,"41":0.015792,"42":0.005264,"43":0.010528,"44":0.005264,"45":0.005264,"46":0.021056,"47":0.005264,"48":0.005264,"49":0.484288,"50":0.005264,"51":0.010528,"52":0.005264,"53":0.015792,"54":0.010528,"55":0.015792,"56":0.015792,"57":0.015792,"58":0.057904,"59":0.010528,"60":0.015792,"61":0.036848,"62":0.047376,"63":0.089488,"64":0.047376,"65":0.068432,"66":0.015792,"67":0.07896,"68":0.031584,"69":0.063168,"70":0.10528,"71":0.221088,"72":0.557984,"73":17.365936,"74":0.036848,"75":0.031584,_:"76"},C:{"2":0,"3":0.005264,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.005264,"16":0,"17":0,"18":0.005264,"19":0,"20":0.005264,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005264,"32":0,"33":0,"34":0,"35":0.005264,"36":0,"37":0,"38":0,"39":0.005264,"40":0.005264,"41":0.005264,"42":0.005264,"43":0.005264,"44":0.005264,"45":0.010528,"46":0.005264,"47":0.010528,"48":0.031584,"49":0.010528,"50":0.005264,"51":0.015792,"52":0.031584,"53":0.015792,"54":0.005264,"55":0.005264,"56":0.021056,"57":0.015792,"58":0.010528,"59":0.005264,"60":0.010528,"61":0.005264,"62":0,"63":0,"64":0,"65":0.036848,"66":0.494816,"67":0.005264,"68":0,"3.5":0.005264,"3.6":0.015792},F:{"9":0,"11":0,"12":0.010528,"15":0.005264,"16":0,"17":0,"18":0.010528,"19":0.005264,"20":0.005264,"21":0,"22":0.005264,"23":0.005264,"24":0,"25":0.005264,"26":0.005264,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.005264,"33":0,"34":0,"35":0,"36":0.021056,"37":0,"38":0,"39":0,"40":0.005264,"41":0.005264,"42":0.005264,"43":0.005264,"44":0,"45":0.010528,"46":0,"47":0,"48":0.010528,"49":0,"50":0.015792,"51":0.010528,"52":0,"53":0,"54":0,"55":0,"56":0.005264,"57":0.015792,"58":1.989792,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0.005264,"11.5":0,"11.6":0.005264,"12.1":0.042112},E:{"4":0,"5":0.005264,"6":0,"7":0,"8":0.005264,"9":0.005264,"10":0.005264,"11":0.021056,"12":0.242144,_:"0","3.1":0,"3.2":0,"5.1":1.584464,"6.1":0,"7.1":0,"9.1":0.015792,"10.1":0.02632,"11.1":0.031584,"12.1":0.152656},G:{"8":0.071531451215851,"3.2":0.0046448994296007,"4.0-4.1":0.0027869396577604,"4.2-4.3":0.00092897988592014,"5.0-5.1":0.0092897988592014,"6.0-6.1":0.0046448994296007,"7.0-7.1":0.016721637946563,"8.1-8.4":0.036230215550886,"9.0-9.2":0.021366537376163,"9.3":0.17743515821075,"10.0-10.2":0.098471867907535,"10.3":0.2350319111378,"11.0-11.2":0.28984172440708,"11.3-11.4":0.59547610687481,"12.0-12.1":3.595152158511,"12.2":4.1237417135995},I:{"3":0.0019900322580645,"4":0.28656464516129,_:"67","2.1":0.013930225806452,"2.2":0.023880387096774,"2.3":0.013930225806452,"4.1":0.14328232258065,"4.2-4.3":0.62089006451613,"4.4":0,"4.4.3-4.4.4":0.86964409677419},A:{"6":0,"7":0,"8":0.062499555555556,"9":0.045454222222222,"10":0.022727111111111,"11":0.22727111111111,"5.5":0},B:{"12":0.010528,"13":0.015792,"14":0.021056,"15":0.02632,"16":0.010528,"17":0.152656,"18":0.121072},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.2519159286872,"5.0-5.4":0.030534534846029,"6.2-6.4":0.32570170502431,"7.2-7.4":0.37659259643436,"8.2":2.3511591831442,"9.2":1.9440320518639},N:{"10":0.041736,"11":0.180856},J:{"7":0,"10":0.009472},S:{"2.5":0},R:{_:"0"},M:{"0":0.04736},O:{"0":0.4736},Q:{"1.2":0.004736},H:{"0":2.7440481649485},L:{"0":46.568752}};


/***/ }),
/* 274 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003697,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.003697,"23":0,"24":0,"25":0,"26":0.003697,"27":0,"28":0,"29":0.003697,"30":0,"31":0,"32":0,"33":0.125698,"34":0.003697,"35":0,"36":0,"37":0,"38":0.003697,"39":0.003697,"40":0,"41":0,"42":0,"43":0.007394,"44":0,"45":0,"46":0.003697,"47":0,"48":0,"49":0.336427,"50":0.003697,"51":0,"52":0,"53":0.003697,"54":0,"55":0,"56":0.003697,"57":0,"58":0.011091,"59":0.003697,"60":0.003697,"61":0.040667,"62":0.018485,"63":0.018485,"64":0.011091,"65":0.011091,"66":0.011091,"67":0.018485,"68":0.018485,"69":0.025879,"70":0.044364,"71":0.11091,"72":0.3697,"73":8.310856,"74":0.011091,"75":0.007394,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.003697,"15":0.007394,"16":0,"17":0.007394,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.003697,"43":0.003697,"44":0,"45":0.044364,"46":0.003697,"47":0.007394,"48":0.007394,"49":0,"50":0.003697,"51":0.007394,"52":0.155274,"53":0,"54":0,"55":0,"56":0.003697,"57":0.003697,"58":0,"59":0.007394,"60":0.03697,"61":0.011091,"62":0.003697,"63":0.007394,"64":0.007394,"65":0.059152,"66":1.305041,"67":0.018485,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.011091,"37":0,"38":0,"39":0,"40":0.003697,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.003697,"49":0,"50":0,"51":0.007394,"52":0,"53":0,"54":0,"55":0,"56":0.007394,"57":0.003697,"58":0.414064,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.011091,"6":0,"7":0,"8":0,"9":0.003697,"10":0.003697,"11":0.003697,"12":0.092425,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.011091,"11.1":0.014788,"12.1":0.07394},G:{"8":0.055510072850996,"3.2":0.0036045501851296,"4.0-4.1":0.0021627301110778,"4.2-4.3":0.00072091003702592,"5.0-5.1":0.0072091003702592,"6.0-6.1":0.0036045501851296,"7.0-7.1":0.012976380666467,"8.1-8.4":0.028115491444011,"9.0-9.2":0.016580930851596,"9.3":0.13769381707195,"10.0-10.2":0.076416463924747,"10.3":0.18239023936756,"11.0-11.2":0.22492393155209,"11.3-11.4":0.46210333373361,"12.0-12.1":2.7899218432903,"12.2":3.2001196543581},I:{"3":0.0010266985887097,"4":0.14784459677419,_:"67","2.1":0.0071868901209677,"2.2":0.012320383064516,"2.3":0.0071868901209677,"4.1":0.073922298387097,"4.2-4.3":0.32032995967742,"4.4":0,"4.4.3-4.4.4":0.44866728326613},A:{"6":0,"7":0,"8":0.007394,"9":0.003697,"10":0.011091,"11":0.399276,"5.5":0},B:{"12":0.003697,"13":0.007394,"14":0.014788,"15":0.051758,"16":0.014788,"17":0.199638,"18":0.103516},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.29550565,"5.0-5.4":0.0203797,"6.2-6.4":0.0815188,"7.2-7.4":0.17322745,"8.2":1.62018615,"9.2":2.70031025},N:{"10":0.011205333333333,"11":0.089642666666667},J:{"7":0,"10":0.006303},S:{"2.5":0},R:{_:"0"},M:{"0":0.113454},O:{"0":0.031515},Q:{"1.2":0},H:{"0":0.20288728865979},L:{"0":71.471306}};


/***/ }),
/* 275 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006521,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.013042,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.006521,"36":0.013042,"37":0.013042,"38":0,"39":0,"40":0,"41":0.006521,"42":0,"43":0,"44":0.006521,"45":0,"46":0,"47":0,"48":0.045647,"49":0.26084,"50":0.006521,"51":0.006521,"52":0.013042,"53":0,"54":0.097815,"55":0.039126,"56":0,"57":0,"58":0.039126,"59":0,"60":0,"61":3.566987,"62":0.006521,"63":0.013042,"64":0.006521,"65":0.071731,"66":0.006521,"67":0.13042,"68":0.091294,"69":0.078252,"70":0.026084,"71":0.163025,"72":1.330284,"73":19.419538,"74":0.045647,"75":0.006521,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.006521,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.097815,"49":0,"50":0.019563,"51":0.006521,"52":0.032605,"53":0.006521,"54":0,"55":0,"56":0,"57":0,"58":0.013042,"59":0,"60":0.039126,"61":0,"62":0.013042,"63":0.026084,"64":0.019563,"65":0.19563,"66":2.354081,"67":0.13042,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.006521,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.097815,"30":0,"31":0,"32":0,"33":0.039126,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1.095528,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006521},E:{"4":0.013042,"5":0,"6":0,"7":0,"8":0.639058,"9":0.006521,"10":0.039126,"11":0.026084,"12":0.860772,_:"0","3.1":0,"3.2":0,"5.1":0.019563,"6.1":0,"7.1":0,"9.1":0.019563,"10.1":0.052168,"11.1":0.476033,"12.1":0.867293},G:{"8":0.10714078044631,"3.2":0.0069571935354748,"4.0-4.1":0.0041743161212849,"4.2-4.3":0.001391438707095,"5.0-5.1":0.01391438707095,"6.0-6.1":0.0069571935354748,"7.0-7.1":0.025045896727709,"8.1-8.4":0.054266109576704,"9.0-9.2":0.032003090263184,"9.3":0.26576479305514,"10.0-10.2":0.14749250295207,"10.3":0.35203399289503,"11.0-11.2":0.43412887661363,"11.3-11.4":0.89191221124787,"12.0-12.1":5.3848677964575,"12.2":6.1765964207946},I:{"3":0.0025344929435484,"4":0.36496698387097,_:"67","2.1":0.017741450604839,"2.2":0.030413915322581,"2.3":0.017741450604839,"4.1":0.18248349193548,"4.2-4.3":0.7907617983871,"4.4":0,"4.4.3-4.4.4":1.1075734163306},A:{"6":0,"7":0,"8":0.019563,"9":0.019563,"10":0.026084,"11":1.336805,"5.5":0},B:{"12":0.006521,"13":0.026084,"14":0.032605,"15":0.228235,"16":0.189109,"17":2.262787,"18":1.199864},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.50399255623722,"5.0-5.4":0,"6.2-6.4":0.021912719836401,"7.2-7.4":0.1205199591002,"8.2":2.2570101431493,"9.2":2.4542246216769},N:{"10":0,"11":0.100891},J:{"7":0,"10":0.083496},S:{"2.5":0},R:{_:"0"},M:{"0":0.271362},O:{"0":0.086975},Q:{"1.2":0},H:{"0":0.30301970446735},L:{"0":35.18104}};


/***/ }),
/* 276 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002364,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.002364,"26":0,"27":0,"28":0.002364,"29":0,"30":0.002364,"31":0.002364,"32":0.002364,"33":0.004728,"34":0,"35":0,"36":0.002364,"37":0,"38":0,"39":0,"40":0.092196,"41":0,"42":0,"43":0.004728,"44":0,"45":0,"46":0.002364,"47":0,"48":0,"49":0.07092,"50":0,"51":0.002364,"52":0,"53":0,"54":0,"55":0.002364,"56":0.002364,"57":0,"58":0.004728,"59":0.002364,"60":0.002364,"61":0.021276,"62":0.004728,"63":0.01182,"64":0.007092,"65":0.016548,"66":0.004728,"67":0.007092,"68":0.004728,"69":0.014184,"70":0.01182,"71":0.02364,"72":0.066192,"73":3.007008,"74":0.014184,"75":0.01182,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.002364,"30":0.002364,"31":0,"32":0,"33":0,"34":0,"35":0.03546,"36":0.007092,"37":0,"38":0.002364,"39":0.002364,"40":0.007092,"41":0.002364,"42":0.002364,"43":0.01182,"44":0.004728,"45":0.002364,"46":0.002364,"47":0.014184,"48":0.009456,"49":0.004728,"50":0.002364,"51":0.004728,"52":0.040188,"53":0.002364,"54":0.002364,"55":0.002364,"56":0.009456,"57":0.004728,"58":0.002364,"59":0.002364,"60":0.016548,"61":0.004728,"62":0.004728,"63":0.004728,"64":0.007092,"65":0.030732,"66":0.652464,"67":0.146568,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0.002364,"16":0,"17":0,"18":0.002364,"19":0.002364,"20":0.002364,"21":0,"22":0.002364,"23":0,"24":0.004728,"25":0.002364,"26":0.004728,"27":0.004728,"28":0.014184,"29":0.004728,"30":0.007092,"31":0.004728,"32":0.014184,"33":0.007092,"34":0,"35":0.007092,"36":0.002364,"37":0.016548,"38":0.07092,"39":0.002364,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.004728,"46":0,"47":0,"48":0,"49":0.002364,"50":0,"51":0.009456,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.205668,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.009456},E:{"4":0,"5":0,"6":0,"7":0,"8":0.009456,"9":0,"10":0,"11":0.002364,"12":0.01182,_:"0","3.1":0,"3.2":0,"5.1":0.002364,"6.1":0,"7.1":0.004728,"9.1":0,"10.1":0.002364,"11.1":0.004728,"12.1":0.009456},G:{"8":0.0067989620734514,"3.2":0.00044149104373061,"4.0-4.1":0.00026489462623837,"4.2-4.3":0.000088298208746122,"5.0-5.1":0.00088298208746122,"6.0-6.1":0.00044149104373061,"7.0-7.1":0.0015893677574302,"8.1-8.4":0.0034436301410988,"9.0-9.2":0.0020308588011608,"9.3":0.016864957870509,"10.0-10.2":0.009359610127089,"10.3":0.022339446812769,"11.0-11.2":0.02754904112879,"11.3-11.4":0.056599151806264,"12.0-12.1":0.34171406784749,"12.2":0.39195574862404},I:{"3":0.0033231129032258,"4":0.47852825806452,_:"67","2.1":0.023261790322581,"2.2":0.03987735483871,"2.3":0.023261790322581,"4.1":0.23926412903226,"4.2-4.3":1.0368112258065,"4.4":0,"4.4.3-4.4.4":1.4522003387097},A:{"6":0,"7":0,"8":0.01726747826087,"9":0,"10":0.0024667826086957,"11":0.037001739130435,"5.5":0},B:{"12":0.007092,"13":0.004728,"14":0.01182,"15":0.004728,"16":0.007092,"17":0.044916,"18":0.018912},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.63908303649635,"5.0-5.4":0.020288350364964,"6.2-6.4":0.071009226277372,"7.2-7.4":0.13187427737226,"8.2":0.36519030656934,"9.2":0.16230680291971},N:{"10":0.021635333333333,"11":0.10817666666667},J:{"7":0,"10":0.007636},S:{"2.5":0},R:{_:"0"},M:{"0":0.106904},O:{"0":3.2453},Q:{"1.2":0.007636},H:{"0":4.98096804811},L:{"0":78.020804}};


/***/ }),
/* 277 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006411,"23":0,"24":0,"25":0,"26":0.006411,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006411,"35":0,"36":0.006411,"37":0,"38":0.019233,"39":0.006411,"40":0,"41":0.006411,"42":0,"43":0.012822,"44":0,"45":0,"46":0,"47":0.006411,"48":0.006411,"49":0.346194,"50":0.006411,"51":0.006411,"52":0.012822,"53":0.019233,"54":0.019233,"55":0.012822,"56":0.006411,"57":0.012822,"58":0.019233,"59":0.012822,"60":0.012822,"61":0.038466,"62":0.032055,"63":0.076932,"64":0.044877,"65":0.070521,"66":0.06411,"67":0.083343,"68":0.076932,"69":0.070521,"70":0.089754,"71":0.205152,"72":1.307844,"73":19.16889,"74":0.025644,"75":0.012822,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.006411,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.006411,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.012822,"46":0,"47":0.006411,"48":0.070521,"49":0,"50":0.012822,"51":0,"52":0.134631,"53":0,"54":0.025644,"55":0,"56":0.019233,"57":0.012822,"58":0.019233,"59":0.012822,"60":0.224385,"61":0.025644,"62":0.012822,"63":0.025644,"64":0.044877,"65":0.301317,"66":3.513228,"67":0.025644,"68":0,"3.5":0,"3.6":0.006411},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.006411,"32":0.006411,"33":0,"34":0,"35":0,"36":0.012822,"37":0,"38":0,"39":0,"40":0.006411,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.006411,"57":0.006411,"58":0.474414,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.006411,"6":0,"7":0,"8":0.019233,"9":0.012822,"10":0.032055,"11":0.12822,"12":1.827135,_:"0","3.1":0,"3.2":0,"5.1":0.012822,"6.1":0.025644,"7.1":0,"9.1":0.076932,"10.1":0.217974,"11.1":0.416715,"12.1":1.173213},G:{"8":0.17830547032923,"3.2":0.011578277294106,"4.0-4.1":0.0069469663764635,"4.2-4.3":0.0023156554588212,"5.0-5.1":0.023156554588212,"6.0-6.1":0.011578277294106,"7.0-7.1":0.041681798258781,"8.1-8.4":0.090310562894026,"9.0-9.2":0.053260075552887,"9.3":0.44229019263484,"10.0-10.2":0.24545947863504,"10.3":0.58586083108176,"11.0-11.2":0.72248450315221,"11.3-11.4":1.4843351491044,"12.0-12.1":8.9615866256379,"12.2":10.279194581707},I:{"3":0.00059785080645161,"4":0.086090516129032,_:"67","2.1":0.0041849556451613,"2.2":0.0071742096774194,"2.3":0.0041849556451613,"4.1":0.043045258064516,"4.2-4.3":0.1865294516129,"4.4":0,"4.4.3-4.4.4":0.26126080241935},A:{"6":0,"7":0,"8":0.038778097363083,"9":0.019389048681542,"10":0.051704129817444,"11":3.0763957241379,"5.5":0},B:{"12":0.006411,"13":0.012822,"14":0.044877,"15":0.076932,"16":0.173097,"17":2.449002,"18":0.57699},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.28194158571429,"5.0-5.4":0.021687814285714,"6.2-6.4":0.043375628571429,"7.2-7.4":0.1518147,"8.2":1.8326203071429,"9.2":2.2230009642857},N:{"10":0,"11":0.064602},J:{"7":0,"10":0.007178},S:{"2.5":0},R:{_:"0"},M:{"0":0.186628},O:{"0":0.064602},Q:{"1.2":0.010767},H:{"0":0.11552633333333},L:{"0":30.263671}};


/***/ }),
/* 278 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007821,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.002607,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.002607,"26":0,"27":0.002607,"28":0,"29":0.002607,"30":0,"31":0,"32":0,"33":0.010428,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.002607,"41":0,"42":0,"43":0.007821,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.031284,"50":0.002607,"51":0.005214,"52":0,"53":0,"54":0,"55":0.002607,"56":0.036498,"57":0,"58":0.007821,"59":0,"60":0.002607,"61":0,"62":0.002607,"63":0.007821,"64":0.007821,"65":0.015642,"66":0,"67":0.041712,"68":0.005214,"69":0.010428,"70":0.018249,"71":0.028677,"72":0.200739,"73":2.341086,"74":0.002607,"75":0.023463,_:"76"},C:{"2":0,"3":0.018249,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.002607,"21":0.002607,"22":0.005214,"23":0.002607,"24":0.007821,"25":0,"26":0,"27":0,"28":0,"29":0.007821,"30":0.002607,"31":0.002607,"32":0.005214,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.005214,"42":0.002607,"43":0.013035,"44":0,"45":0.002607,"46":0,"47":0.023463,"48":0.02607,"49":0.002607,"50":0.002607,"51":0,"52":0.02607,"53":0.002607,"54":0,"55":0.002607,"56":0.002607,"57":0.007821,"58":0,"59":0.002607,"60":0.02607,"61":0.010428,"62":0.005214,"63":0.015642,"64":0.02607,"65":0.135564,"66":1.540737,"67":0.054747,"68":0,"3.5":0,"3.6":0.002607},F:{"9":0,"11":0,"12":0,"15":0,"16":0.002607,"17":0.002607,"18":0.002607,"19":0.002607,"20":0.013035,"21":0,"22":0,"23":0.005214,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.002607,"31":0,"32":0.002607,"33":0.002607,"34":0,"35":0,"36":0.005214,"37":0,"38":0.002607,"39":0,"40":0,"41":0,"42":0.002607,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.002607,"50":0.007821,"51":0.002607,"52":0,"53":0,"54":0,"55":0.002607,"56":0,"57":0.005214,"58":0.646536,"9.5-9.6":0,"10.0-10.1":0,"10.5":0.007821,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.10428},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.002607,"11":0.002607,"12":0.070389,_:"0","3.1":0,"3.2":0,"5.1":0.013035,"6.1":0,"7.1":0,"9.1":0.002607,"10.1":0.039105,"11.1":0.088638,"12.1":0.036498},G:{"8":0.016268875612929,"3.2":0.001056420494346,"4.0-4.1":0.00063385229660763,"4.2-4.3":0.00021128409886921,"5.0-5.1":0.0021128409886921,"6.0-6.1":0.001056420494346,"7.0-7.1":0.0038031137796458,"8.1-8.4":0.0082400798558991,"9.0-9.2":0.0048595342739918,"9.3":0.040355262884019,"10.0-10.2":0.022396114480136,"10.3":0.05345487701391,"11.0-11.2":0.065920638847193,"11.3-11.4":0.13543310737516,"12.0-12.1":0.81766946262384,"12.2":0.93789011488042},I:{"3":0.0019845927419355,"4":0.28578135483871,_:"67","2.1":0.013892149193548,"2.2":0.023815112903226,"2.3":0.013892149193548,"4.1":0.14289067741935,"4.2-4.3":0.61919293548387,"4.4":0,"4.4.3-4.4.4":0.86726702822581},A:{"6":0,"7":0,"8":0.023463,"9":0.002607,"10":0.007821,"11":0.185097,"5.5":0},B:{"12":0.093852,"13":0.010428,"14":0.005214,"15":0.013035,"16":0.007821,"17":0.088638,"18":0.015642},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.33931320689655,"5.0-5.4":0.041128873563218,"6.2-6.4":0.061693310344828,"7.2-7.4":0.14395105747126,"8.2":0.23649102298851,"9.2":0.071975528735632},N:{"10":0.02402725,"11":0.07208175},J:{"7":0,"10":0.059144},S:{"2.5":0},R:{_:"0"},M:{"0":0.170039},O:{"0":3.755644},Q:{"1.2":0.022179},H:{"0":24.497251718213},L:{"0":50.558215}};


/***/ }),
/* 279 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005915,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005915,"23":0,"24":0,"25":0,"26":0.01183,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.005915,"34":0.01183,"35":0,"36":0,"37":0,"38":0.017745,"39":0,"40":0.01183,"41":0.005915,"42":0.005915,"43":0.017745,"44":0,"45":0,"46":0.01183,"47":0.017745,"48":0.005915,"49":0.763035,"50":0.01183,"51":0.005915,"52":0.005915,"53":0.01183,"54":0.005915,"55":0.01183,"56":0.017745,"57":0.029575,"58":0.053235,"59":0.01183,"60":0.01183,"61":0.254345,"62":0.017745,"63":0.08281,"64":0.05915,"65":0.04732,"66":0.053235,"67":0.053235,"68":0.053235,"69":0.088725,"70":0.100555,"71":0.183365,"72":0.91091,"73":19.146855,"74":0.02366,"75":0.017745,_:"76"},C:{"2":0.005915,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005915,"32":0,"33":0,"34":0.005915,"35":0,"36":0,"37":0.005915,"38":0.01183,"39":0.005915,"40":0,"41":0.005915,"42":0.005915,"43":0.017745,"44":0,"45":0.005915,"46":0,"47":0.03549,"48":0.112385,"49":0.01183,"50":0.017745,"51":0.017745,"52":0.680225,"53":0.029575,"54":0.005915,"55":0.01183,"56":0.053235,"57":0.029575,"58":0.01183,"59":0.017745,"60":0.408135,"61":0.183365,"62":0.029575,"63":0.041405,"64":0.112385,"65":0.360815,"66":5.31167,"67":0.05915,"68":0,"3.5":0,"3.6":0.005915},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005915,"32":0,"33":0,"34":0,"35":0,"36":0.029575,"37":0,"38":0.005915,"39":0,"40":0.01183,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.005915,"49":0,"50":0,"51":0.005915,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.005915,"58":1.12385,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005915},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.029575,"10":0.005915,"11":0.01183,"12":0.230685,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.005915,"10.1":0.017745,"11.1":0.04732,"12.1":0.18928},G:{"8":0.067833817672371,"3.2":0.0044047933553487,"4.0-4.1":0.0026428760132092,"4.2-4.3":0.00088095867106975,"5.0-5.1":0.0088095867106975,"6.0-6.1":0.0044047933553487,"7.0-7.1":0.015857256079255,"8.1-8.4":0.03435738817172,"9.0-9.2":0.020262049434604,"9.3":0.16826310617432,"10.0-10.2":0.093381619133393,"10.3":0.22288254378065,"11.0-11.2":0.27485910537376,"11.3-11.4":0.56469450815571,"12.0-12.1":3.4093100570399,"12.2":3.9105755408786},I:{"3":0.00078615927419355,"4":0.11320693548387,_:"67","2.1":0.0055031149193548,"2.2":0.0094339112903226,"2.3":0.0055031149193548,"4.1":0.056603467741935,"4.2-4.3":0.24528169354839,"4.4":0,"4.4.3-4.4.4":0.34355160282258},A:{"6":0,"7":0,"8":0.042131403508772,"9":0.036112631578947,"10":0.030093859649123,"11":1.6070121052632,"5.5":0},B:{"12":0.005915,"13":0.005915,"14":0.02366,"15":0.08281,"16":0.029575,"17":0.57967,"18":0.24843},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.26513162962963,"5.0-5.4":0.020394740740741,"6.2-6.4":0.050986851851852,"7.2-7.4":0.15296055555556,"8.2":1.1217107407407,"9.2":1.1421054814815},N:{"10":0.011438,"11":0.102942},J:{"7":0,"10":0.004085},S:{"2.5":0},R:{_:"0"},M:{"0":0.22059},O:{"0":0.07353},Q:{"1.2":0},H:{"0":0.26685157216495},L:{"0":50.364105}};


/***/ }),
/* 280 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.005337,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.005337,"30":0,"31":0,"32":0,"33":0.112077,"34":0.005337,"35":0,"36":0,"37":0,"38":0.010674,"39":0,"40":0,"41":0,"42":0,"43":0.016011,"44":0,"45":0,"46":0,"47":0.005337,"48":0,"49":0.357579,"50":0,"51":0.010674,"52":0.010674,"53":0.005337,"54":0,"55":0.005337,"56":0.016011,"57":0,"58":0.021348,"59":0.005337,"60":0.010674,"61":0.037359,"62":0.005337,"63":0.026685,"64":0.016011,"65":0.112077,"66":0.016011,"67":0.069381,"68":0.010674,"69":0.10674,"70":0.16011,"71":0.298872,"72":0.848583,"73":16.832898,"74":0.021348,"75":0.016011,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.005337,"48":0.058707,"49":0,"50":0,"51":0.005337,"52":0.021348,"53":0.005337,"54":0,"55":0,"56":0.005337,"57":0.005337,"58":0,"59":0.005337,"60":0.016011,"61":0.005337,"62":0.010674,"63":0,"64":0.021348,"65":0.149436,"66":1.088748,"67":0.058707,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.005337,"37":0.010674,"38":0.005337,"39":0,"40":0,"41":0,"42":0.010674,"43":0.016011,"44":0,"45":0.005337,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.010674,"52":0.005337,"53":0.010674,"54":0.016011,"55":0.016011,"56":0.021348,"57":0.005337,"58":0.085392,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":1.398294,"9":0,"10":0.074718,"11":0.096066,"12":1.579752,_:"0","3.1":0,"3.2":0,"5.1":0.016011,"6.1":0,"7.1":0,"9.1":0.048033,"10.1":0.282861,"11.1":0.421623,"12.1":0.736506},G:{"8":0.10099132913039,"3.2":0.0065578785149605,"4.0-4.1":0.0039347271089763,"4.2-4.3":0.0013115757029921,"5.0-5.1":0.013115757029921,"6.0-6.1":0.0065578785149605,"7.0-7.1":0.023608362653858,"8.1-8.4":0.051151452416692,"9.0-9.2":0.030166241168818,"9.3":0.25051095927149,"10.0-10.2":0.13902702451716,"10.3":0.331828652857,"11.0-11.2":0.40921161933353,"11.3-11.4":0.84072002561793,"12.0-12.1":5.0757979705794,"12.2":5.8220845455819},I:{"3":0.00040719153225806,"4":0.058635580645161,_:"67","2.1":0.0028503407258065,"2.2":0.0048862983870968,"2.3":0.0028503407258065,"4.1":0.029317790322581,"4.2-4.3":0.12704375806452,"4.4":0,"4.4.3-4.4.4":0.17794269959677},A:{"6":0,"7":0,"8":0.016559321917808,"9":0.022079095890411,"10":0.016559321917808,"11":0.75068926027397,"5.5":0},B:{"12":0.005337,"13":0.021348,"14":0.016011,"15":0.048033,"16":0.069381,"17":0.912627,"18":0.208143},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.76275698594025,"5.0-5.4":0.1017009314587,"6.2-6.4":0.2034018629174,"7.2-7.4":0.68139624077329,"8.2":2.2577606783831,"9.2":1.7797663005272},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.083934},O:{"0":5.031377},Q:{"1.2":0.004663},H:{"0":1.1257299226804},L:{"0":39.845066}};


/***/ }),
/* 281 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0.003713,"9":0,"10":0,"11":0,"12":0,"13":0.003713,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.241345,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.007426,"39":0,"40":0.007426,"41":0,"42":0.003713,"43":0.022278,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.267336,"50":0,"51":0.003713,"52":0.003713,"53":0,"54":0,"55":0.003713,"56":0,"57":0,"58":0.018565,"59":0.03713,"60":0.003713,"61":0,"62":0.081686,"63":0.089112,"64":0,"65":0.193076,"66":0.014852,"67":0.011139,"68":0.007426,"69":0.007426,"70":0.040843,"71":0.018565,"72":0.300753,"73":6.018773,"74":0.003713,"75":0,_:"76"},C:{"2":0,"3":0.003713,"4":0,"5":0,"6":0,"7":0.003713,"8":0,"9":0,"10":0.003713,"11":0.003713,"12":0.003713,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.003713,"21":0,"22":0.003713,"23":0,"24":0.003713,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.014852,"31":0.081686,"32":0,"33":0,"34":0.007426,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.137381,"43":0.018565,"44":0.003713,"45":0.018565,"46":0,"47":0.03713,"48":0.025991,"49":0,"50":0.007426,"51":0.011139,"52":0.044556,"53":0,"54":0.007426,"55":0,"56":0.018565,"57":0.007426,"58":0,"59":0,"60":0.029704,"61":0.003713,"62":0.011139,"63":0.014852,"64":0.051982,"65":0.174511,"66":2.246365,"67":0.07426,"68":0.003713,"3.5":0,"3.6":0.007426},F:{"9":0,"11":0,"12":0.003713,"15":0,"16":0.003713,"17":0,"18":0,"19":0.011139,"20":0.014852,"21":0.007426,"22":0,"23":0.025991,"24":0,"25":0,"26":0,"27":0.007426,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.003713,"39":0,"40":0,"41":0,"42":0.003713,"43":0,"44":0,"45":0.003713,"46":0,"47":0,"48":0,"49":0.011139,"50":0,"51":0.007426,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.946815,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.003713,"12.1":0.11139},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.018565,"11":0.471551,"12":0.055695,_:"0","3.1":0,"3.2":0,"5.1":0.022278,"6.1":0,"7.1":0,"9.1":0,"10.1":0.011139,"11.1":0.011139,"12.1":0.051982},G:{"8":0.027588630741519,"3.2":0.0017914695286701,"4.0-4.1":0.001074881717202,"4.2-4.3":0.00035829390573401,"5.0-5.1":0.0035829390573401,"6.0-6.1":0.0017914695286701,"7.0-7.1":0.0064492903032122,"8.1-8.4":0.013973462323627,"9.0-9.2":0.0082407598318823,"9.3":0.068434135995197,"10.0-10.2":0.037979154007805,"10.3":0.090648358150706,"11.0-11.2":0.11178769858901,"11.3-11.4":0.2296663935755,"12.0-12.1":1.3865974151906,"12.2":1.5904666475533},I:{"3":0.0012376683467742,"4":0.17822424193548,_:"67","2.1":0.0086636784274194,"2.2":0.01485202016129,"2.3":0.0086636784274194,"4.1":0.089112120967742,"4.2-4.3":0.38615252419355,"4.4":0,"4.4.3-4.4.4":0.54086106754032},A:{"6":0,"7":0,"8":0.063121,"9":0.018565,"10":0.022278,"11":0.226493,"5.5":0},B:{"12":0.018565,"13":0.018565,"14":0.014852,"15":0.033417,"16":0.029704,"17":0.271049,"18":0.155946},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.32163811464968,"5.0-5.4":0.070358337579618,"6.2-6.4":0.13066548407643,"7.2-7.4":0.36184287898089,"8.2":0.56286670063694,"9.2":0.13066548407643},N:{"10":0.020575636363636,"11":0.20575636363636},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.106879},O:{"0":2.13758},Q:{"1.2":0.119453},H:{"0":30.980812860825},L:{"0":31.168158}};


/***/ }),
/* 282 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.005118,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.030708,"23":0,"24":0,"25":0.005118,"26":0.005118,"27":0,"28":0,"29":0.010236,"30":0.020472,"31":0.005118,"32":0,"33":0.005118,"34":0,"35":0.005118,"36":0.010236,"37":0.061416,"38":0,"39":0,"40":0.010236,"41":0,"42":0,"43":0.040944,"44":0.010236,"45":0.005118,"46":0.010236,"47":0.010236,"48":0.005118,"49":0.138186,"50":0.005118,"51":0.005118,"52":0,"53":0.030708,"54":0,"55":0.005118,"56":0.035826,"57":0.005118,"58":0.158658,"59":0.005118,"60":0.005118,"61":0.005118,"62":0.040944,"63":0.107478,"64":0.030708,"65":0.194484,"66":0.046062,"67":0.097242,"68":0.035826,"69":0.112596,"70":0.15354,"71":0.475974,"72":0.951948,"73":13.342626,"74":0.015354,"75":0.005118,_:"76"},C:{"2":0,"3":0.010236,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.010236,"12":0,"13":0.005118,"14":0.005118,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.005118,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.005118,"31":0,"32":0.005118,"33":0.010236,"34":0,"35":0.005118,"36":0.015354,"37":0.005118,"38":0.005118,"39":0,"40":0.015354,"41":0.005118,"42":0.010236,"43":0.061416,"44":0,"45":0.07677,"46":0.005118,"47":0.030708,"48":0.040944,"49":0.005118,"50":0.015354,"51":0.005118,"52":0.066534,"53":0,"54":0,"55":0.005118,"56":0.010236,"57":0.030708,"58":0.020472,"59":0.015354,"60":0.081888,"61":0.020472,"62":0.020472,"63":0.056298,"64":0.035826,"65":0.327552,"66":3.24993,"67":0.337788,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0.005118,"16":0.010236,"17":0,"18":0,"19":0.005118,"20":0.061416,"21":0.005118,"22":0,"23":0.040944,"24":0,"25":0,"26":0,"27":0,"28":0.005118,"29":0.005118,"30":0.005118,"31":0,"32":0.010236,"33":0.005118,"34":0,"35":0,"36":0.005118,"37":0.010236,"38":0.015354,"39":0,"40":0,"41":0,"42":0,"43":0.015354,"44":0,"45":0.005118,"46":0.005118,"47":0,"48":0,"49":0.005118,"50":0.005118,"51":0.005118,"52":0,"53":0.005118,"54":0,"55":0,"56":0.005118,"57":0.02559,"58":1.837362,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0.005118,"11.1":0,"11.5":0,"11.6":0,"12.1":0.15354},E:{"4":0,"5":0.005118,"6":0,"7":0,"8":0.010236,"9":0.117714,"10":0,"11":0,"12":0.158658,_:"0","3.1":0,"3.2":0,"5.1":0.010236,"6.1":0,"7.1":0,"9.1":0.005118,"10.1":0.005118,"11.1":0.056298,"12.1":0.337788},G:{"8":0.021870696887821,"3.2":0.0014201751225858,"4.0-4.1":0.00085210507355149,"4.2-4.3":0.00028403502451716,"5.0-5.1":0.0028403502451716,"6.0-6.1":0.0014201751225858,"7.0-7.1":0.0051126304413089,"8.1-8.4":0.011077365956169,"9.0-9.2":0.0065328055638947,"9.3":0.054250689682778,"10.0-10.2":0.030107712598819,"10.3":0.071860861202842,"11.0-11.2":0.088618927649355,"11.3-11.4":0.1820664507155,"12.0-12.1":1.0992155448814,"12.2":1.2608314738317},I:{"3":0.000971875,"4":0.13995,_:"67","2.1":0.006803125,"2.2":0.0116625,"2.3":0.006803125,"4.1":0.069975,"4.2-4.3":0.303225,"4.4":0,"4.4.3-4.4.4":0.424709375},A:{"6":0,"7":0.0056155833333333,"8":0.1010805,"9":0.01684675,"10":0.022462333333333,"11":0.25831683333333,"5.5":0},B:{"12":0.10236,"13":0.030708,"14":0.035826,"15":0.020472,"16":0.056298,"17":0.209838,"18":0.092124},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.10207818181818,"5.0-5.4":0.020415636363636,"6.2-6.4":0,"7.2-7.4":0.040831272727273,"8.2":0.28581890909091,"9.2":0.224572},N:{"10":0.022974117647059,"11":0.17230588235294},J:{"7":0,"10":0.04882},S:{"2.5":0},R:{_:"0"},M:{"0":0.29292},O:{"0":2.655808},Q:{"1.2":0.02441},H:{"0":16.435697580756},L:{"0":38.932316}};


/***/ }),
/* 283 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.009182,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.009182,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.027546,"46":0,"47":0.009182,"48":0,"49":0.679468,"50":0,"51":0,"52":0,"53":0,"54":0.009182,"55":0,"56":0,"57":0.110184,"58":0.101002,"59":0.009182,"60":0.018364,"61":0.073456,"62":0.101002,"63":0.009182,"64":0.036728,"65":0.073456,"66":0.082638,"67":0.156094,"68":0.211186,"69":0.036728,"70":0.247914,"71":0.36728,"72":2.98415,"73":38.132846,"74":0.04591,"75":0.018364,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.009182,"39":0,"40":0,"41":0,"42":0,"43":0.009182,"44":0,"45":0,"46":0,"47":0,"48":0.036728,"49":0,"50":0,"51":0,"52":0.192822,"53":0,"54":0,"55":0.09182,"56":0.009182,"57":0,"58":0,"59":0,"60":0.04591,"61":0,"62":0,"63":0.036728,"64":0.036728,"65":0.22955,"66":2.277136,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.009182,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.055092,"58":0.110184,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.009182,"6":0,"7":0,"8":0,"9":0.036728,"10":0.04591,"11":0.128548,"12":1.762944,_:"0","3.1":0,"3.2":0,"5.1":0.009182,"6.1":0.009182,"7.1":0,"9.1":0.202004,"10.1":0.284642,"11.1":0.78047,"12.1":1.753762},G:{"8":0.14216997057941,"3.2":0.00923181627139,"4.0-4.1":0.005539089762834,"4.2-4.3":0.001846363254278,"5.0-5.1":0.01846363254278,"6.0-6.1":0.00923181627139,"7.0-7.1":0.033234538577004,"8.1-8.4":0.072008166916842,"9.0-9.2":0.042466354848394,"9.3":0.3526553815671,"10.0-10.2":0.19571450495347,"10.3":0.46712990333233,"11.0-11.2":0.57606533533473,"11.3-11.4":1.1835188459922,"12.0-12.1":7.1454257940558,"12.2":8.19600648574},I:{"3":0.000687875,"4":0.099054,_:"67","2.1":0.004815125,"2.2":0.0082545,"2.3":0.004815125,"4.1":0.049527,"4.2-4.3":0.214617,"4.4":0,"4.4.3-4.4.4":0.300601375},A:{"6":0,"7":0,"8":0.036728,"9":0.156094,"10":0.018364,"11":13.148624,"5.5":0},B:{"12":0.018364,"13":0.055092,"14":0.128548,"15":0.339734,"16":0.440736,"17":5.288832,"18":1.33139},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.11688937931034,"5.0-5.4":0.023377875862069,"6.2-6.4":0.011688937931034,"7.2-7.4":0.10520044137931,"8.2":0.6779584,"9.2":0.75978096551724},N:{"10":0,"11":0},J:{"7":0,"10":0.04908},S:{"2.5":0},R:{_:"0"},M:{"0":0.013906},O:{"0":0.003272},Q:{"1.2":0},H:{"0":0.013165302405498},L:{"0":4.872302}};


/***/ }),
/* 284 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.005245,"24":0,"25":0,"26":0.005245,"27":0,"28":0,"29":0,"30":0,"31":0.005245,"32":0,"33":0.005245,"34":0.01049,"35":0,"36":0.015735,"37":0,"38":0.026225,"39":0,"40":0,"41":0,"42":0,"43":0.005245,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.382885,"50":0.005245,"51":0,"52":0,"53":0.01049,"54":0.005245,"55":0,"56":0,"57":0.02098,"58":0.03147,"59":0.005245,"60":0.01049,"61":0.01049,"62":0.01049,"63":0.026225,"64":0.015735,"65":0.057695,"66":0.047205,"67":0.1049,"68":0.08392,"69":0.03147,"70":0.06294,"71":0.099655,"72":0.708075,"73":16.09166,"74":0.152105,"75":0.02098,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.005245,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.005245,"30":0,"31":0,"32":0.005245,"33":0.06294,"34":0.005245,"35":0,"36":0,"37":0.005245,"38":0,"39":0,"40":0.005245,"41":0,"42":0,"43":0.02098,"44":0.005245,"45":0,"46":0,"47":0.01049,"48":0.057695,"49":0.005245,"50":0,"51":0.005245,"52":0.07343,"53":0.01049,"54":0.005245,"55":0,"56":0.015735,"57":0.005245,"58":0,"59":0.015735,"60":0.01049,"61":0.06294,"62":0.026225,"63":0.01049,"64":0.015735,"65":0.13637,"66":2.323535,"67":0.131125,"68":0,"3.5":0,"3.6":0.005245},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.005245,"19":0.005245,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.005245,"34":0.005245,"35":0,"36":0,"37":0.1049,"38":0.015735,"39":0,"40":0,"41":0,"42":0,"43":0.01049,"44":0,"45":0,"46":0,"47":0,"48":0.005245,"49":0.005245,"50":0,"51":0.01049,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.37764,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.026225},E:{"4":0,"5":0,"6":0,"7":0,"8":0.01049,"9":0.01049,"10":0.026225,"11":0.131125,"12":0.87067,_:"0","3.1":0,"3.2":0,"5.1":0.51401,"6.1":0,"7.1":0,"9.1":0.015735,"10.1":0.30421,"11.1":0.30421,"12.1":0.414355},G:{"8":0.12852307865506,"3.2":0.0083456544581207,"4.0-4.1":0.0050073926748724,"4.2-4.3":0.0016691308916241,"5.0-5.1":0.016691308916241,"6.0-6.1":0.0083456544581207,"7.0-7.1":0.030044356049234,"8.1-8.4":0.065096104773341,"9.0-9.2":0.038390010507355,"9.3":0.31880400030021,"10.0-10.2":0.17692787451216,"10.3":0.42229011558091,"11.0-11.2":0.52076883818673,"11.3-11.4":1.0699129015311,"12.0-12.1":6.4595365505854,"12.2":7.4092720279195},I:{"3":0.00098711693548387,"4":0.14214483870968,_:"67","2.1":0.0069098185483871,"2.2":0.011845403225806,"2.3":0.0069098185483871,"4.1":0.071072419354839,"4.2-4.3":0.30798048387097,"4.4":0,"4.4.3-4.4.4":0.43137010080645},A:{"6":0,"7":0,"8":0.01049,"9":0.015735,"10":0.015735,"11":0.508765,"5.5":0},B:{"12":0.005245,"13":0.005245,"14":0.015735,"15":0.12588,"16":0.026225,"17":0.50352,"18":0.099655},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.98744599431818,"5.0-5.4":0.053088494318182,"6.2-6.4":0.15926548295455,"7.2-7.4":0.30791326704545,"8.2":1.1467114772727,"9.2":1.0830052840909},N:{"10":0,"11":0.023775},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.16167},O:{"0":2.32044},Q:{"1.2":0.023775},H:{"0":4.5827578865979},L:{"0":39.557685}};


/***/ }),
/* 285 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006599,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.006599,"22":0,"23":0.006599,"24":0,"25":0.006599,"26":0.006599,"27":0.013198,"28":0,"29":0.006599,"30":0.013198,"31":0.006599,"32":0,"33":0.013198,"34":0.013198,"35":0,"36":0.006599,"37":0,"38":0.026396,"39":0,"40":0.006599,"41":0,"42":0,"43":0.013198,"44":0.006599,"45":0.006599,"46":0.006599,"47":0,"48":0,"49":0.6599,"50":0.006599,"51":0.006599,"52":0.019797,"53":0.026396,"54":0.006599,"55":0.013198,"56":0.026396,"57":0.006599,"58":0.052792,"59":0.026396,"60":0.013198,"61":0.013198,"62":0.026396,"63":0.06599,"64":0.032995,"65":0.145178,"66":0.032995,"67":0.244163,"68":0.118782,"69":0.118782,"70":0.217767,"71":0.290356,"72":0.917261,"73":27.25387,"74":0.026396,"75":0.013198,_:"76"},C:{"2":0,"3":0.006599,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.006599,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006599,"37":0,"38":0,"39":0.006599,"40":0,"41":0,"42":0,"43":0.032995,"44":0.006599,"45":0.013198,"46":0.006599,"47":0.019797,"48":0.105584,"49":0.006599,"50":0.006599,"51":0.006599,"52":0.098985,"53":0.013198,"54":0.006599,"55":0.019797,"56":0.032995,"57":0.019797,"58":0.019797,"59":0.006599,"60":0.046193,"61":0.019797,"62":0.046193,"63":0.059391,"64":0.046193,"65":0.26396,"66":3.979197,"67":0.046193,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006599,"37":0,"38":0.006599,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.006599,"51":0.006599,"52":0,"53":0,"54":0.013198,"55":0,"56":0,"57":0.013198,"58":1.128429,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.013198},E:{"4":0,"5":0,"6":0,"7":0,"8":0.026396,"9":0.125381,"10":0.026396,"11":0.032995,"12":0.6599,_:"0","3.1":0,"3.2":0,"5.1":1.570562,"6.1":0,"7.1":0,"9.1":0.079188,"10.1":0.158376,"11.1":0.296955,"12.1":0.343148},G:{"8":0.023027361252877,"3.2":0.0014952831982388,"4.0-4.1":0.00089716991894326,"4.2-4.3":0.00029905663964775,"5.0-5.1":0.0029905663964775,"6.0-6.1":0.0014952831982388,"7.0-7.1":0.0053830195136596,"8.1-8.4":0.011663208946262,"9.0-9.2":0.0068783027118983,"9.3":0.057119818172721,"10.0-10.2":0.031700003802662,"10.3":0.075661329830882,"11.0-11.2":0.093305671570099,"11.3-11.4":0.19169530601421,"12.0-12.1":1.1573491954368,"12.2":1.3275124233964},I:{"3":0.0010386118951613,"4":0.14956011290323,_:"67","2.1":0.007270283266129,"2.2":0.012463342741935,"2.3":0.007270283266129,"4.1":0.074780056451613,"4.2-4.3":0.32404691129032,"4.4":0,"4.4.3-4.4.4":0.45387339818548},A:{"6":0,"7":0,"8":0.040071036144578,"9":0.020035518072289,"10":0.033392530120482,"11":0.46081691566265,"5.5":0},B:{"12":0.006599,"13":0.019797,"14":0.019797,"15":0.026396,"16":0.046193,"17":0.39594,"18":0.085787},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.5128151851852,"5.0-5.4":0.12102521481481,"6.2-6.4":0.19162325679012,"7.2-7.4":0.43367368641975,"8.2":1.1799958444444,"9.2":0.64546781234568},N:{"10":0,"11":0.051015},J:{"7":0,"10":0.003401},S:{"2.5":0},R:{_:"0"},M:{"0":0.139441},O:{"0":0.445531},Q:{"1.2":0.003401},H:{"0":0.99171290034364},L:{"0":44.938557}};


/***/ }),
/* 286 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.007669,"23":0,"24":0,"25":0,"26":0.007669,"27":0,"28":0,"29":0.038345,"30":0,"31":0,"32":0.007669,"33":0,"34":0.007669,"35":0,"36":0.069021,"37":0,"38":0.015338,"39":0,"40":0.007669,"41":0.007669,"42":0,"43":0.023007,"44":0,"45":0,"46":0.007669,"47":0.007669,"48":0.007669,"49":0.513823,"50":0.007669,"51":0.023007,"52":0.007669,"53":0.007669,"54":0.015338,"55":0.030676,"56":0.023007,"57":0.015338,"58":0.099697,"59":0.015338,"60":0.030676,"61":0.222401,"62":0.053683,"63":0.115035,"64":0.069021,"65":0.099697,"66":0.069021,"67":0.145711,"68":0.099697,"69":0.145711,"70":0.207063,"71":0.299091,"72":1.204033,"73":44.748615,"74":0.176387,"75":0.053683,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.007669,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.007669,"44":0,"45":0.015338,"46":0,"47":0.007669,"48":0.023007,"49":0.007669,"50":0.007669,"51":0.007669,"52":0.237739,"53":0.007669,"54":0.007669,"55":0.007669,"56":0.023007,"57":0.015338,"58":0.023007,"59":0.015338,"60":0.061352,"61":0.015338,"62":0.015338,"63":0.023007,"64":0.038345,"65":0.15338,"66":2.822192,"67":0.038345,"68":0.007669,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.007669,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.007669,"50":0.007669,"51":0,"52":0,"53":0,"54":0,"55":0.007669,"56":0.007669,"57":0.007669,"58":1.326737,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.007669},E:{"4":0,"5":0,"6":0,"7":0,"8":0.007669,"9":0.007669,"10":0.007669,"11":0.030676,"12":0.575175,_:"0","3.1":0,"3.2":0,"5.1":0.713217,"6.1":0.015338,"7.1":0,"9.1":0.015338,"10.1":0.069021,"11.1":0.145711,"12.1":0.452471},G:{"8":0.040731343340338,"3.2":0.0026448924246973,"4.0-4.1":0.0015869354548184,"4.2-4.3":0.00052897848493946,"5.0-5.1":0.0052897848493946,"6.0-6.1":0.0026448924246973,"7.0-7.1":0.0095216127289102,"8.1-8.4":0.020630160912639,"9.0-9.2":0.012166505153608,"9.3":0.10103489062344,"10.0-10.2":0.056071719403583,"10.3":0.13383155668968,"11.0-11.2":0.16504128730111,"11.3-11.4":0.33907520884619,"12.0-12.1":2.0471467367157,"12.2":2.3481354946463},I:{"3":0.00042157762096774,"4":0.060707177419355,_:"67","2.1":0.0029510433467742,"2.2":0.0050589314516129,"2.3":0.0029510433467742,"4.1":0.030353588709677,"4.2-4.3":0.13153221774194,"4.4":0,"4.4.3-4.4.4":0.1842294203629},A:{"6":0,"7":0,"8":0.039340974025974,"9":0.023604584415584,"10":0.01573638961039,"11":0.52716905194805,"5.5":0},B:{"12":0.007669,"13":0.007669,"14":0.023007,"15":0.038345,"16":0.053683,"17":0.736224,"18":0.30676},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.19509584810127,"5.0-5.4":0,"6.2-6.4":0.041072810126582,"7.2-7.4":0.082145620253165,"8.2":0.65716496202532,"9.2":0.64689675949367},N:{"10":0,"11":0.097902},J:{"7":0,"10":0.002331},S:{"2.5":0},R:{_:"0"},M:{"0":0.081585},O:{"0":0.13986},Q:{"1.2":0.002331},H:{"0":0.15889249484536},L:{"0":32.627865}};


/***/ }),
/* 287 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.005157,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.015471,"37":0,"38":0,"39":0,"40":0.010314,"41":0,"42":0.005157,"43":0,"44":0,"45":0,"46":0.005157,"47":0,"48":0,"49":0.288792,"50":0.010314,"51":0,"52":0,"53":0,"54":0.020628,"55":0.005157,"56":0,"57":0,"58":0.030942,"59":0.030942,"60":0,"61":0.015471,"62":0.005157,"63":0.118611,"64":0.005157,"65":0.05157,"66":0.010314,"67":0.139239,"68":0.010314,"69":0.036099,"70":0.041256,"71":0.232065,"72":1.263465,"73":12.149892,"74":0.020628,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.025785,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.005157,"46":0,"47":0,"48":0.056727,"49":0,"50":0,"51":0,"52":0.056727,"53":0,"54":0,"55":0,"56":0.010314,"57":0.005157,"58":0,"59":0.005157,"60":0.041256,"61":0.005157,"62":0,"63":0.005157,"64":0.005157,"65":0.113454,"66":1.08297,"67":0.015471,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.123768,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.005157,"9":0.005157,"10":0.010314,"11":0.05157,"12":0.639468,_:"0","3.1":0,"3.2":0,"5.1":0.036099,"6.1":0,"7.1":0,"9.1":0.030942,"10.1":0.113454,"11.1":0.278478,"12.1":0.495072},G:{"8":0.17872087581307,"3.2":0.011605251676173,"4.0-4.1":0.006963151005704,"4.2-4.3":0.0023210503352347,"5.0-5.1":0.023210503352347,"6.0-6.1":0.011605251676173,"7.0-7.1":0.041778906034224,"8.1-8.4":0.090520963074152,"9.0-9.2":0.053384157710397,"9.3":0.44332061402982,"10.0-10.2":0.24603133553487,"10.3":0.58722573481437,"11.0-11.2":0.72416770459322,"11.3-11.4":1.4877932648854,"12.0-12.1":8.9824647973582,"12.2":10.303142438107},I:{"3":0.00094374495967742,"4":0.13589927419355,_:"67","2.1":0.0066062147177419,"2.2":0.011324939516129,"2.3":0.0066062147177419,"4.1":0.067949637096774,"4.2-4.3":0.29444842741935,"4.4":0,"4.4.3-4.4.4":0.41241654737903},A:{"6":0,"7":0,"8":0.015471,"9":0.010314,"10":0.030942,"11":2.098899,"5.5":0},B:{"12":0.020628,"13":0.077355,"14":0.05157,"15":0.097983,"16":0.170181,"17":2.330964,"18":0.495072},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.412257715959,"5.0-5.4":0.054244436310395,"6.2-6.4":0.33631550512445,"7.2-7.4":0.58583991215227,"8.2":3.2112706295754,"9.2":2.8098618008785},N:{"10":0,"11":0.038744},J:{"7":0,"10":0.004843},S:{"2.5":0},R:{_:"0"},M:{"0":0.04843},O:{"0":0.092017},Q:{"1.2":0},H:{"0":0.14672126460481},L:{"0":41.071209}};


/***/ }),
/* 288 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0.003657,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.040227,"19":0,"20":0,"21":0.003657,"22":0.003657,"23":0,"24":0.003657,"25":0,"26":0,"27":0,"28":0,"29":0.007314,"30":0.007314,"31":0,"32":0.003657,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.003657,"39":0,"40":0.029256,"41":0.003657,"42":0,"43":0.010971,"44":0.003657,"45":0,"46":0.018285,"47":0,"48":0.003657,"49":0.080454,"50":0,"51":0.010971,"52":0,"53":0.003657,"54":0.003657,"55":0.014628,"56":0.003657,"57":0,"58":0.003657,"59":0.003657,"60":0.003657,"61":0,"62":0.007314,"63":0.010971,"64":0.003657,"65":0.175536,"66":0.025599,"67":0.014628,"68":0.03657,"69":0.021942,"70":0.113367,"71":0.062169,"72":0.325473,"73":9.10593,"74":0.047541,"75":0.062169,_:"76"},C:{"2":0,"3":0,"4":0,"5":0.003657,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.007314,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.003657,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.007314,"41":0,"42":0,"43":0.003657,"44":0.003657,"45":0,"46":0,"47":0.003657,"48":0.007314,"49":0,"50":0,"51":0,"52":0.043884,"53":0.003657,"54":0,"55":0.003657,"56":0.003657,"57":0,"58":0.003657,"59":0,"60":0.018285,"61":0.003657,"62":0.003657,"63":0.003657,"64":0.007314,"65":0.076797,"66":0.819168,"67":0.091425,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.003657,"35":0,"36":0,"37":0.054855,"38":0.032913,"39":0,"40":0,"41":0,"42":0,"43":0.003657,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.029256,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.003657,"58":0.486381,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.007314},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.007314,"10":0.003657,"11":0.007314,"12":0.091425,_:"0","3.1":0,"3.2":0,"5.1":0.003657,"6.1":0,"7.1":0,"9.1":0.003657,"10.1":0.03657,"11.1":0.025599,"12.1":0.10971},G:{"8":0.057040317822476,"3.2":0.0037039167417192,"4.0-4.1":0.0022223500450315,"4.2-4.3":0.00074078334834384,"5.0-5.1":0.0074078334834384,"6.0-6.1":0.0037039167417192,"7.0-7.1":0.013334100270189,"8.1-8.4":0.02889055058541,"9.0-9.2":0.017038017011908,"9.3":0.14148961953367,"10.0-10.2":0.078523034924447,"10.3":0.18741818713099,"11.0-11.2":0.23112440468328,"11.3-11.4":0.4748421262884,"12.0-12.1":2.8668315580907,"12.2":3.2883372832983},I:{"3":0.00045731552419355,"4":0.065853435483871,_:"67","2.1":0.0032012086693548,"2.2":0.0054877862903226,"2.3":0.0032012086693548,"4.1":0.032926717741935,"4.2-4.3":0.14268244354839,"4.4":0,"4.4.3-4.4.4":0.19984688407258},A:{"6":0,"7":0,"8":0.025599,"9":0.003657,"10":0.003657,"11":0.084111,"5.5":0},B:{"12":0.051198,"13":0.025599,"14":0.010971,"15":0.018285,"16":0.025599,"17":0.248676,"18":0.106053},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.9189829827586,"5.0-5.4":0.20341344827586,"6.2-6.4":0.30512017241379,"7.2-7.4":1.2611633793103,"8.2":1.4645768275862,"9.2":0.33563218965517},N:{"10":0.011532727272727,"11":0.11532727272727},J:{"7":0,"10":0.006343},S:{"2.5":0},R:{_:"0"},M:{"0":0.107831},O:{"0":4.414728},Q:{"1.2":0.025372},H:{"0":2.0237330601375},L:{"0":61.110829}};


/***/ }),
/* 289 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.007326,"18":0,"19":0,"20":0,"21":0,"22":0.029304,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.014652,"31":0,"32":0,"33":1.736262,"34":0,"35":0,"36":0.051282,"37":0,"38":0.007326,"39":0.014652,"40":0.03663,"41":0,"42":0,"43":0.117216,"44":0.007326,"45":0,"46":0.03663,"47":0.007326,"48":0.007326,"49":0.307692,"50":0.014652,"51":0.007326,"52":0.029304,"53":0.029304,"54":0.007326,"55":0.014652,"56":0.014652,"57":0.014652,"58":0.095238,"59":0.014652,"60":0.051282,"61":0.07326,"62":0.07326,"63":0.344322,"64":0.007326,"65":0.468864,"66":0.03663,"67":0.18315,"68":0.14652,"69":0.102564,"70":0.10989,"71":0.21978,"72":1.260072,"73":24.637338,"74":0.043956,"75":0.380952,_:"76"},C:{"2":0,"3":0,"4":0.007326,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.007326,"11":0,"12":0.007326,"13":0,"14":0.014652,"15":0,"16":0,"17":0,"18":0,"19":0.007326,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.007326,"26":0,"27":0,"28":0,"29":0.007326,"30":0,"31":0,"32":0.051282,"33":0,"34":0.021978,"35":0.014652,"36":0,"37":0.021978,"38":0.007326,"39":0,"40":0.029304,"41":0.007326,"42":0.03663,"43":0.043956,"44":0.021978,"45":0.014652,"46":0.03663,"47":0.095238,"48":0.124542,"49":0.029304,"50":0.03663,"51":0.007326,"52":0.117216,"53":0.014652,"54":0.007326,"55":0.007326,"56":0.07326,"57":0.007326,"58":0,"59":0.007326,"60":0.410256,"61":0.021978,"62":0.029304,"63":0.065934,"64":0.07326,"65":0.40293,"66":4.87179,"67":0.351648,"68":0.014652,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.007326,"23":0.007326,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.007326,"37":0.007326,"38":0.014652,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.007326,"52":0,"53":0,"54":0.014652,"55":0,"56":0.03663,"57":0.007326,"58":1.516482,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.014652},E:{"4":0,"5":0,"6":0.029304,"7":0,"8":0.388278,"9":0.007326,"10":0.051282,"11":0.043956,"12":0.864468,_:"0","3.1":0,"3.2":0,"5.1":0.058608,"6.1":0,"7.1":0.007326,"9.1":0.271062,"10.1":0.07326,"11.1":0.271062,"12.1":0.981684},G:{"8":0.037206634243971,"3.2":0.0024160152106475,"4.0-4.1":0.0014496091263885,"4.2-4.3":0.00048320304212949,"5.0-5.1":0.0048320304212949,"6.0-6.1":0.0024160152106475,"7.0-7.1":0.0086976547583308,"8.1-8.4":0.01884491864305,"9.0-9.2":0.011113669968978,"9.3":0.092291781046733,"10.0-10.2":0.051219522465726,"10.3":0.12225036965876,"11.0-11.2":0.1507593491444,"11.3-11.4":0.309733150005,"12.0-12.1":1.8699957730411,"12.2":2.1449383040128},I:{"3":0.0017880423387097,"4":0.25747809677419,_:"67","2.1":0.012516296370968,"2.2":0.021456508064516,"2.3":0.012516296370968,"4.1":0.1287390483871,"4.2-4.3":0.55786920967742,"4.4":0,"4.4.3-4.4.4":0.78137450201613},A:{"6":0,"7":2.593404,"8":0.139194,"9":0.490842,"10":0.087912,"11":1.919412,"5.5":0},B:{"12":0.388278,"13":0.205128,"14":0.117216,"15":0.234432,"16":0.315018,"17":1.42857,"18":0.161172},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.54112275862069,"5.0-5.4":0.020812413793103,"6.2-6.4":0.052031034482759,"7.2-7.4":0.10406206896552,"8.2":0.90534,"9.2":0.48909172413793},N:{"10":0.025403,"11":0.177821},J:{"7":0,"10":0.251356},S:{"2.5":0},R:{_:"0"},M:{"0":0.152418},O:{"0":0.81557},Q:{"1.2":0.10696},H:{"0":1.7442520378007},L:{"0":32.64498}};


/***/ }),
/* 290 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0.007967,"6":0,"7":0,"8":0,"9":0,"10":0.007967,"11":0.007967,"12":0.007967,"13":0,"14":0,"15":0.007967,"16":0.007967,"17":0.007967,"18":0.007967,"19":0.007967,"20":0.007967,"21":0.023901,"22":0.015934,"23":0.007967,"24":0.007967,"25":0.007967,"26":0.015934,"27":0.007967,"28":0.007967,"29":0,"30":0,"31":0.007967,"32":0,"33":0.007967,"34":0.007967,"35":0.007967,"36":0,"37":0.015934,"38":0.023901,"39":0.015934,"40":0.023901,"41":0.007967,"42":0.007967,"43":0.015934,"44":0.007967,"45":0.055769,"46":0.007967,"47":0.007967,"48":0.007967,"49":0.948073,"50":0.007967,"51":0.015934,"52":0,"53":0.015934,"54":0.015934,"55":0.015934,"56":0.055769,"57":0.031868,"58":0.039835,"59":0.031868,"60":0.007967,"61":0.366482,"62":0.047802,"63":0.143406,"64":0.167307,"65":0.071703,"66":0.127472,"67":0.095604,"68":0.143406,"69":0.199175,"70":0.135439,"71":0.278845,"72":1.43406,"73":36.88721,"74":0.095604,"75":0.055769,_:"76"},C:{"2":0.007967,"3":0.015934,"4":0.007967,"5":0,"6":0.047802,"7":0,"8":0,"9":0.047802,"10":0,"11":0,"12":0.007967,"13":0,"14":0,"15":0.007967,"16":0.007967,"17":0,"18":0,"19":0.007967,"20":0,"21":0.007967,"22":0,"23":0.047802,"24":0,"25":0,"26":0.087637,"27":0,"28":0.023901,"29":0.007967,"30":0,"31":0.071703,"32":0.007967,"33":0.07967,"34":0,"35":0.015934,"36":0.007967,"37":0,"38":0.031868,"39":0,"40":0,"41":0,"42":0,"43":0.007967,"44":0,"45":0.047802,"46":0.007967,"47":0.015934,"48":0.015934,"49":0.007967,"50":0.103571,"51":0.007967,"52":0.573624,"53":0.063736,"54":0,"55":0.015934,"56":0.151373,"57":0.047802,"58":0.063736,"59":0.063736,"60":0.15934,"61":0.047802,"62":0.007967,"63":0.071703,"64":0.071703,"65":0.286812,"66":3.099163,"67":0.039835,"68":0.007967,"3.5":0.127472,"3.6":0.095604},F:{"9":0,"11":0.015934,"12":0.023901,"15":0,"16":0.007967,"17":0,"18":0.007967,"19":0.007967,"20":0.007967,"21":0.007967,"22":0.031868,"23":0,"24":0,"25":0,"26":0.007967,"27":0.031868,"28":0.007967,"29":0,"30":0.007967,"31":0,"32":0.007967,"33":0.007967,"34":0.007967,"35":0.007967,"36":0.310713,"37":0.031868,"38":0.023901,"39":0.007967,"40":0,"41":0,"42":0.007967,"43":0.023901,"44":0,"45":0.015934,"46":0,"47":0,"48":0,"49":0.007967,"50":0.015934,"51":0.023901,"52":0.023901,"53":0.007967,"54":0.007967,"55":0.007967,"56":0.143406,"57":0.031868,"58":6.787884,"9.5-9.6":0,"10.0-10.1":0.007967,"10.5":0.007967,"10.6":0.007967,"11.1":0,"11.5":0.007967,"11.6":0.023901,"12.1":0.151373},E:{"4":0.023901,"5":0.015934,"6":0,"7":0,"8":0.007967,"9":0,"10":0.007967,"11":0.063736,"12":1.330489,_:"0","3.1":0,"3.2":0,"5.1":0.015934,"6.1":0,"7.1":0,"9.1":0.031868,"10.1":0.047802,"11.1":0.15934,"12.1":0.629393},G:{"8":0.041692768437907,"3.2":0.0027073226258381,"4.0-4.1":0.0016243935755029,"4.2-4.3":0.00054146452516762,"5.0-5.1":0.0054146452516762,"6.0-6.1":0.0027073226258381,"7.0-7.1":0.0097463614530171,"8.1-8.4":0.021117116481537,"9.0-9.2":0.012453684078855,"9.3":0.10341972430701,"10.0-10.2":0.057395239667767,"10.3":0.13699052486741,"11.0-11.2":0.1689369318523,"11.3-11.4":0.34707876063244,"12.0-12.1":2.0954677123987,"12.2":2.4035610272191},I:{"3":0.00053676915322581,"4":0.077294758064516,_:"67","2.1":0.0037573840725806,"2.2":0.0064412298387097,"2.3":0.0037573840725806,"4.1":0.038647379032258,"4.2-4.3":0.16747197580645,"4.4":0,"4.4.3-4.4.4":0.23456811995968},A:{"6":0,"7":0,"8":0.073030833333333,"9":0.016229074074074,"10":0.048687222222222,"11":0.30023787037037,"5.5":0},B:{"12":0.007967,"13":0.007967,"14":0.031868,"15":0.095604,"16":0.039835,"17":0.294779,"18":0.199175},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.074159322222222,"5.0-5.4":0.010594188888889,"6.2-6.4":0.031782566666667,"7.2-7.4":0.074159322222222,"8.2":0.37079661111111,"9.2":0.39198498888889},N:{"10":0.0111815,"11":0.0559075},J:{"7":0,"10":0.002033},S:{"2.5":0},R:{_:"0"},M:{"0":0.04066},O:{"0":0.262257},Q:{"1.2":0.008132},H:{"0":0.69289670103093},L:{"0":26.516562}};


/***/ }),
/* 291 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.005745,"34":0.01149,"35":0.005745,"36":0.028725,"37":0,"38":0.10341,"39":0,"40":0.005745,"41":0,"42":0,"43":0.005745,"44":0,"45":0.005745,"46":0,"47":0,"48":0.04596,"49":0.19533,"50":0.005745,"51":0.005745,"52":0,"53":0.005745,"54":0.005745,"55":0.074685,"56":0.005745,"57":0.005745,"58":0.017235,"59":0.005745,"60":0.01149,"61":0.086175,"62":0.18384,"63":0.02298,"64":0.143625,"65":0.074685,"66":0,"67":0.086175,"68":0.028725,"69":0.03447,"70":0.051705,"71":0.063195,"72":0.74685,"73":16.804125,"74":0.18384,"75":0.01149,_:"76"},C:{"2":0,"3":0.005745,"4":0,"5":0,"6":0,"7":0.005745,"8":0,"9":0,"10":0.01149,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.063195,"43":0,"44":0,"45":0,"46":0,"47":0.017235,"48":0.005745,"49":0.005745,"50":0.005745,"51":0.017235,"52":0.028725,"53":0.005745,"54":0,"55":0.005745,"56":0.01149,"57":0,"58":0.005745,"59":0.005745,"60":0.028725,"61":0.01149,"62":0.005745,"63":0.01149,"64":0.017235,"65":0.166605,"66":3.30912,"67":0.12639,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0.005745,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.05745,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.235545,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005745},E:{"4":0.005745,"5":0,"6":0,"7":0,"8":0.005745,"9":0.005745,"10":0.01149,"11":0.132135,"12":0.901965,_:"0","3.1":0.01149,"3.2":0,"5.1":0.05745,"6.1":0,"7.1":0,"9.1":0.10341,"10.1":0.05745,"11.1":0.18384,"12.1":0.878985},G:{"8":0.11556757630341,"3.2":0.0075043880716502,"4.0-4.1":0.0045026328429901,"4.2-4.3":0.00150087761433,"5.0-5.1":0.0150087761433,"6.0-6.1":0.0075043880716502,"7.0-7.1":0.027015797057941,"8.1-8.4":0.058534226958871,"9.0-9.2":0.034520185129591,"9.3":0.28666762433704,"10.0-10.2":0.15909302711898,"10.3":0.3797220364255,"11.0-11.2":0.46827381567097,"11.3-11.4":0.96206255078555,"12.0-12.1":5.8083963674572,"12.2":6.662395730011},I:{"3":0.0013467641129032,"4":0.19393403225806,_:"67","2.1":0.0094273487903226,"2.2":0.016161169354839,"2.3":0.0094273487903226,"4.1":0.096967016129032,"4.2-4.3":0.42019040322581,"4.4":0,"4.4.3-4.4.4":0.58853591733871},A:{"6":0.018639333333333,"7":0.012426222222222,"8":0.111836,"9":0.055918,"10":0.062131111111111,"11":0.57781933333333,"5.5":0},B:{"12":0.01149,"13":0.017235,"14":0.06894,"15":0.03447,"16":0.10341,"17":2.786325,"18":0.338955},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.44338130622837,"5.0-5.4":0.043256712802768,"6.2-6.4":0.032442534602076,"7.2-7.4":0.097327603806228,"8.2":1.3734006314879,"9.2":4.2607862110727},N:{"10":0.07659,"11":0.10212},J:{"7":0,"10":0.004255},S:{"2.5":0},R:{_:"0"},M:{"0":0.09361},O:{"0":0.45103},Q:{"1.2":0.00851},H:{"0":0.1651627233677},L:{"0":42.49568}};


/***/ }),
/* 292 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006289,"23":0,"24":0,"25":0.012578,"26":0,"27":0.018867,"28":0,"29":0,"30":0,"31":0.006289,"32":0.006289,"33":0,"34":0.006289,"35":0,"36":0.006289,"37":0,"38":0.012578,"39":0,"40":0.012578,"41":0.006289,"42":0,"43":0.006289,"44":0,"45":0.006289,"46":0.006289,"47":0.018867,"48":0.132069,"49":0.389918,"50":0.006289,"51":0.006289,"52":0.006289,"53":0.012578,"54":0.006289,"55":0.025156,"56":0.025156,"57":0.037734,"58":0.025156,"59":0.018867,"60":0.012578,"61":0.213826,"62":0.044023,"63":0.169803,"64":0.050312,"65":0.069179,"66":0.056601,"67":0.138358,"68":0.106913,"69":0.113202,"70":0.144647,"71":0.44023,"72":2.050214,"73":17.10608,"74":0.031445,"75":0.012578,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.012578,"39":0,"40":0,"41":0,"42":0,"43":0.012578,"44":0.050312,"45":0.031445,"46":0,"47":0.006289,"48":0.044023,"49":0,"50":0.006289,"51":0.006289,"52":0.245271,"53":0.006289,"54":0.006289,"55":0.006289,"56":0.031445,"57":0.012578,"58":0.006289,"59":0.006289,"60":0.100624,"61":0.018867,"62":0.018867,"63":0.025156,"64":0.075468,"65":0.220115,"66":2.421265,"67":0.025156,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006289,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.006289,"52":0,"53":0,"54":0,"55":0,"56":0.006289,"57":0,"58":0.301872,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.006289,"5":0.006289,"6":0,"7":0.113202,"8":0.018867,"9":0.031445,"10":0.031445,"11":0.069179,"12":1.301823,_:"0","3.1":0,"3.2":0,"5.1":0.012578,"6.1":0.012578,"7.1":0,"9.1":0.081757,"10.1":0.194959,"11.1":0.358473,"12.1":1.025107},G:{"8":0.26458509916942,"3.2":0.017180850595417,"4.0-4.1":0.01030851035725,"4.2-4.3":0.0034361701190834,"5.0-5.1":0.034361701190834,"6.0-6.1":0.017180850595417,"7.0-7.1":0.0618510621435,"8.1-8.4":0.13401063464425,"9.0-9.2":0.079031912738917,"9.3":0.65630849274492,"10.0-10.2":0.36423403262284,"10.3":0.86935104012809,"11.0-11.2":1.072085077154,"11.3-11.4":2.2025850463324,"12.0-12.1":13.297978360853,"12.2":15.253159158611},I:{"3":0.00068953931451613,"4":0.099293661290323,_:"67","2.1":0.0048267752016129,"2.2":0.0082744717741935,"2.3":0.0048267752016129,"4.1":0.049646830645161,"4.2-4.3":0.21513626612903,"4.4":0,"4.4.3-4.4.4":0.30132868044355},A:{"6":0.0063495876685934,"7":0.0063495876685934,"8":0.038097526011561,"9":0.057146289017341,"10":0.025398350674374,"11":3.1620946589595,"5.5":0},B:{"12":0.012578,"13":0.012578,"14":0.031445,"15":0.069179,"16":0.113202,"17":0.924483,"18":1.647718},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.21174328527607,"5.0-5.4":0.033433150306748,"6.2-6.4":0.044577533742331,"7.2-7.4":0.11144383435583,"8.2":1.2481709447853,"9.2":1.9837002515337},N:{"10":0,"11":0.014844},J:{"7":0,"10":0.081642},S:{"2.5":0},R:{_:"0"},M:{"0":0.200394},O:{"0":0.415632},Q:{"1.2":0.029688},H:{"0":0.10540005154639},L:{"0":22.817336}};


/***/ }),
/* 293 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.020826,"16":0.002314,"22":0.002314,"23":0.01157,"25":0.013884,"26":0.004628,"28":0.050908,"29":0.030082,"31":0.002314,"33":0.006942,"40":0.03471,"41":0.048594,"43":0.062478,"45":0.006942,"46":0.009256,"49":0.279994,"50":0.016198,"51":0.013884,"53":0.002314,"54":0.006942,"55":0.006942,"56":0.030082,"57":0.002314,"58":0.062478,"60":0.006942,"61":0.004628,"63":0.26611,"64":0.004628,"65":0.124956,"66":0.013884,"67":0.016198,"68":0.020826,"69":0.113386,"70":0.099502,"71":0.09256,"72":0.483626,"73":8.453042,"74":0.01157,"75":0.004628,_:"4 5 6 7 8 9 10 12 13 14 15 17 18 19 20 21 24 27 30 32 34 35 36 37 38 39 42 44 47 48 52 59 62 76"},C:{"3":0.113386,"4":0.002314,"16":0.002314,"20":0.006942,"21":0.006942,"22":0.002314,"26":0.002314,"29":0.013884,"30":0.002314,"31":0.002314,"32":0.002314,"33":0.004628,"34":0.004628,"35":0.009256,"37":0.032396,"38":0.013884,"40":0.004628,"41":0.009256,"42":0.004628,"43":0.030082,"44":0.004628,"45":0.009256,"47":0.157352,"48":0.039338,"49":0.01157,"50":0.002314,"51":0.002314,"52":0.02314,"54":0.01157,"55":0.002314,"56":0.016198,"57":0.009256,"59":0.013884,"60":0.078676,"61":0.016198,"62":0.06942,"63":0.118014,"64":0.12727,"65":0.282308,"66":2.957292,"67":0.108758,_:"2 5 6 7 8 9 10 11 12 13 14 15 17 18 19 23 24 25 27 28 36 39 46 53 58 68 3.5","3.6":0.002314},F:{"11":0.004628,"15":0.004628,"18":0.002314,"20":0.025454,"21":0.004628,"27":0.004628,"30":0.004628,"34":0.004628,"35":0.004628,"36":0.02314,"37":0.02314,"38":0.004628,"42":0.020826,"44":0.004628,"48":0.009256,"49":0.004628,"50":0.004628,"51":0.009256,"53":0.004628,"55":0.006942,"56":0.060164,"57":0.025454,"58":1.892852,_:"9 12 16 17 19 22 23 24 25 26 28 29 31 32 33 39 40 41 43 45 46 47 52 54 9.5-9.6 10.5 10.6 11.1","10.0-10.1":0,"11.5":0.002314,"11.6":0.004628,"12.1":0.004628},E:{"4":0,"6":0.030082,"8":0.13884,"9":0.240656,"10":0.05785,"11":0.180492,"12":0.298506,_:"0 5 7 3.1 3.2 6.1","5.1":0.02314,"7.1":0.004628,"9.1":0.009256,"10.1":0.136526,"11.1":0.074048,"12.1":0.321646},G:{"8":0.018655451816271,"3.2":0.0012113929750826,"4.0-4.1":0.00072683578504953,"4.2-4.3":0.00024227859501651,"5.0-5.1":0.0024227859501651,"6.0-6.1":0.0012113929750826,"7.0-7.1":0.0043610147102972,"8.1-8.4":0.009448865205644,"9.0-9.2":0.0055724076853798,"9.3":0.046275211648154,"10.0-10.2":0.02568153107175,"10.3":0.061296484539177,"11.0-11.2":0.075590921645152,"11.3-11.4":0.15530057940558,"12.0-12.1":0.9376181627139,"12.2":1.0754746832783},I:{"3":0.0022391673387097,"4":0.32244009677419,_:"67","2.1":0.015674171370968,"2.2":0.026870008064516,"2.3":0.015674171370968,"4.1":0.1612200483871,"4.2-4.3":0.69862020967742,"4.4":0,"4.4.3-4.4.4":0.97851612701613},A:{"7":0.0024118731117825,"8":0.25324667673716,"9":0.004823746223565,"10":0.094063051359517,"11":0.44137277945619,_:"6 5.5"},B:{"12":0.164294,"13":0.090246,"14":0.05785,"15":0.03471,"16":0.106444,"17":1.344434,"18":0.060164},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.5365888137931,"5.0-5.4":0.040497268965517,"6.2-6.4":0.091118855172414,"7.2-7.4":0.17211339310345,"8.2":0.48596722758621,"9.2":0.14174044137931},N:{"10":0.050161263157895,"11":0.18810473684211},J:{"7":0,"10":0.084546},S:{"2.5":0.007686},R:{_:"0"},M:{"0":0.11529},O:{"0":2.790018},Q:{"1.2":0.15372},H:{"0":46.955953020619},L:{"0":18.92562}};


/***/ }),
/* 294 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.059283,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.005646,"41":0,"42":0,"43":0.014115,"44":0,"45":0,"46":0.008469,"47":0,"48":0.005646,"49":0.002823,"50":0.002823,"51":0,"52":0,"53":0,"54":0.025407,"55":0,"56":0.008469,"57":0,"58":0.005646,"59":0,"60":0,"61":0,"62":0.002823,"63":0.223017,"64":0,"65":0,"66":0,"67":0.002823,"68":0,"69":0.014115,"70":0.039522,"71":0.002823,"72":0.208902,"73":2.887929,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005646,"12":0.008469,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.005646,"22":0,"23":0.002823,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.002823,"30":0,"31":0.002823,"32":0,"33":0.002823,"34":0.014115,"35":0.005646,"36":0,"37":0,"38":0.008469,"39":0.002823,"40":0,"41":0,"42":0,"43":0.011292,"44":0,"45":0.005646,"46":0,"47":0.042345,"48":0.002823,"49":0,"50":0.002823,"51":0.002823,"52":0.259716,"53":0.005646,"54":0.002823,"55":0,"56":0.011292,"57":0.002823,"58":0,"59":0.002823,"60":0.014115,"61":0,"62":0.008469,"63":0.014115,"64":0.039522,"65":0.019761,"66":0.863838,"67":0.025407,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.005646,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.002823,"29":0,"30":0.033876,"31":0,"32":0,"33":0.002823,"34":0,"35":0.014115,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0.047991,"54":0,"55":0,"56":0,"57":0.008469,"58":0.400866,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.059283},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.022584,"11":0,"12":0.005646,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0.022584,"9.1":0,"10.1":0,"11.1":0,"12.1":0.014115},G:{"8":0.039917222255579,"3.2":0.0025920274191934,"4.0-4.1":0.0015552164515161,"4.2-4.3":0.00051840548383869,"5.0-5.1":0.0051840548383869,"6.0-6.1":0.0025920274191934,"7.0-7.1":0.0093312987090964,"8.1-8.4":0.020217813869709,"9.0-9.2":0.01192332612829,"9.3":0.099015447413189,"10.0-10.2":0.054950981286901,"10.3":0.13115658741119,"11.0-11.2":0.16174251095767,"11.3-11.4":0.3322979151406,"12.0-12.1":2.0062292224557,"12.2":2.3012019427599},I:{"3":0.0028533044354839,"4":0.41087583870968,_:"67","2.1":0.019973131048387,"2.2":0.034239653225806,"2.3":0.019973131048387,"4.1":0.20543791935484,"4.2-4.3":0.89023098387097,"4.4":0,"4.4.3-4.4.4":1.2468940383065},A:{"6":0,"7":0,"8":0.16938,"9":0,"10":0.036699,"11":0.268185,"5.5":0},B:{"12":0.104451,"13":0.045168,"14":0.042345,"15":0.211725,"16":0.014115,"17":0.076221,"18":0.070575},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.66088208333333,"5.0-5.4":0.010167416666667,"6.2-6.4":0.040669666666667,"7.2-7.4":0.122009,"8.2":0.366027,"9.2":0.26435283333333},N:{"10":0,"11":0.172248},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.057416},O:{"0":4.571749},Q:{"1.2":0.186602},H:{"0":5.6735911426117},L:{"0":69.041423}};


/***/ }),
/* 295 */
/***/ (function(module, exports) {

module.exports={D:{"9":0.009964,"11":0.019928,"19":0.02491,"21":0.004982,"29":0.009964,"33":0.089676,"41":0.129532,"43":0.069748,"49":0.059784,"51":0.019928,"55":0.009964,"56":0.283974,"58":0.313866,"59":0.004982,"60":0.02491,"61":0.009964,"62":0.009964,"63":0.403542,"64":0.009964,"65":0.089676,"66":0.009964,"69":0.14946,"70":0.2491,"71":0.14946,"72":0.57293,"73":21.078842,"74":0.029892,"75":0.004982,_:"4 5 6 7 8 10 12 13 14 15 16 17 18 20 22 23 24 25 26 27 28 30 31 32 34 35 36 37 38 39 40 42 44 45 46 47 48 50 52 53 54 57 67 68 76"},C:{"3":0.194298,"9":0.004982,"19":0.014946,"21":0.004982,"22":0.009964,"39":0.084694,"43":0.019928,"45":0.019928,"47":0.089676,"48":0.234154,"49":0.034874,"50":0.009964,"52":0.104622,"54":0.004982,"55":0.019928,"56":0.034874,"57":0.019928,"58":0.059784,"59":0.02491,"60":0.378632,"61":0.009964,"62":1.429834,"63":0.039856,"64":0.04982,"65":1.300302,"66":7.717118,"67":0.04982,_:"2 4 5 6 7 8 10 11 12 13 14 15 16 17 18 20 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 44 46 51 53 68 3.5 3.6"},F:{"20":0.004982,"34":0.009964,"35":0.009964,"36":0.029892,"37":0.009964,"40":0.009964,"42":0.004982,"45":0.009964,"48":0.04982,"50":0.004982,"55":0.004982,"56":0.029892,"58":3.158588,_:"9 11 12 15 16 17 18 19 21 22 23 24 25 26 27 28 29 30 31 32 33 38 39 41 43 44 46 47 49 51 52 53 54 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.119568},E:{"4":0,"11":0.109604,"12":0.358704,_:"0 5 6 7 8 9 10 3.2 5.1 7.1","3.1":0.009964,"6.1":0.009964,"9.1":0.034874,"10.1":0.014946,"11.1":0.104622,"12.1":0.488236},G:{"8":0.035069759031322,"3.2":0.002277257079956,"4.0-4.1":0.0013663542479736,"4.2-4.3":0.00045545141599119,"5.0-5.1":0.0045545141599119,"6.0-6.1":0.002277257079956,"7.0-7.1":0.0081981254878415,"8.1-8.4":0.017762605223657,"9.0-9.2":0.010475382567797,"9.3":0.086991220454318,"10.0-10.2":0.048277850095067,"10.3":0.11522920824577,"11.0-11.2":0.14210084178925,"11.3-11.4":0.29194435765036,"12.0-12.1":1.7625969798859,"12.2":2.0217488355849},I:{"3":0.0035459858870968,"4":0.51062196774194,_:"67","2.1":0.024821901209677,"2.2":0.042551830645161,"2.3":0.024821901209677,"4.1":0.25531098387097,"4.2-4.3":1.1063475967742,"4.4":0,"4.4.3-4.4.4":1.5495958326613},A:{"8":0.095445176715177,"9":0.010046860706861,"10":0.22103093555094,"11":2.089747027027,_:"6 7 5.5"},B:{"12":0.089676,"13":0.064766,"14":0.059784,"15":0.064766,"16":0.069748,"17":3.41267,"18":0.184334},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.68987724675325,"5.0-5.4":0.061780051948052,"6.2-6.4":0.091118855172414,"7.2-7.4":0.49424041558442,"8.2":0.77225064935065,"9.2":0.36038363636364},N:{"10":0.02509,"11":0.07527},J:{"7":0,"10":0.130468},S:{"2.5":0.010036},R:{_:"0"},M:{"0":0.2509},O:{"0":4.551326},Q:{"1.2":0.040144},H:{"0":8.617802838488},L:{"0":27.493592}};


/***/ }),
/* 296 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006382,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006382,"35":0.006382,"36":0.006382,"37":0,"38":0.012764,"39":0,"40":0,"41":0.012764,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.006382,"48":0,"49":0.185078,"50":0.006382,"51":0.006382,"52":0.044674,"53":0.012764,"54":0.025528,"55":0.044674,"56":0.006382,"57":0.025528,"58":0.025528,"59":0.012764,"60":0.019146,"61":0.019146,"62":0.038292,"63":0.06382,"64":0.03191,"65":0.057438,"66":0.09573,"67":0.108494,"68":0.06382,"69":0.09573,"70":0.25528,"71":0.268044,"72":1.11685,"73":13.472402,"74":0.019146,"75":0.006382,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006382,"35":0,"36":0,"37":0,"38":0.019146,"39":0,"40":0,"41":0,"42":0,"43":0.006382,"44":0,"45":0.019146,"46":0,"47":0.006382,"48":0.102112,"49":0.006382,"50":0.012764,"51":0.006382,"52":0.178696,"53":0.012764,"54":0.019146,"55":0.006382,"56":0.019146,"57":0.019146,"58":0.012764,"59":0.012764,"60":0.408448,"61":0.03191,"62":0.025528,"63":0.051056,"64":0.076584,"65":0.376538,"66":4.869466,"67":0.03191,"68":0,"3.5":0,"3.6":0.006382},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006382,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.012764,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.006382,"58":0.548852,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006382},E:{"4":0,"5":0.006382,"6":0,"7":0.006382,"8":0.19146,"9":0.019146,"10":0.057438,"11":0.172314,"12":2.68044,_:"0","3.1":0,"3.2":0,"5.1":0.038292,"6.1":0.025528,"7.1":0,"9.1":0.146786,"10.1":0.325482,"11.1":0.682874,"12.1":1.933746},G:{"8":0.25165515560893,"3.2":0.016341243870709,"4.0-4.1":0.0098047463224257,"4.2-4.3":0.0032682487741419,"5.0-5.1":0.032682487741419,"6.0-6.1":0.016341243870709,"7.0-7.1":0.058828477934554,"8.1-8.4":0.12746170219153,"9.0-9.2":0.075169721805264,"9.3":0.6242355158611,"10.0-10.2":0.34643437005904,"10.3":0.8268669398579,"11.0-11.2":1.0196936175323,"11.3-11.4":2.094947464225,"12.0-12.1":12.648122755929,"12.2":14.507756308416},I:{"3":0.00044699193548387,"4":0.064366838709677,_:"67","2.1":0.0031289435483871,"2.2":0.0053639032258065,"2.3":0.0031289435483871,"4.1":0.032183419354839,"4.2-4.3":0.13946148387097,"4.4":0,"4.4.3-4.4.4":0.19533547580645},A:{"6":0,"7":0,"8":0.019146,"9":0.019146,"10":0.044674,"11":4.53122,"5.5":0},B:{"12":0.006382,"13":0.006382,"14":0.038292,"15":0.076584,"16":0.338246,"17":2.36134,"18":0.6382},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.24888550909091,"5.0-5.4":0.054105545454545,"6.2-6.4":0.032463327272727,"7.2-7.4":0.2380644,"8.2":1.7421985636364,"9.2":2.4455706545455},N:{"10":0,"11":0.03618},J:{"7":0,"10":0.01809},S:{"2.5":0},R:{_:"0"},M:{"0":0.322002},O:{"0":0.050652},Q:{"1.2":0.007236},H:{"0":0.14728741237113},L:{"0":20.581556}};


/***/ }),
/* 297 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00521,"12":0,"13":0.00521,"14":0.00521,"15":0,"16":0.00521,"17":0,"18":0,"19":0.00521,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.01042,"26":0.02084,"27":0,"28":0,"29":0,"30":0.00521,"31":0.00521,"32":0,"33":0.00521,"34":0,"35":0,"36":0.00521,"37":0,"38":0.00521,"39":0,"40":0.00521,"41":0.00521,"42":0,"43":0.04168,"44":0,"45":0,"46":0.01042,"47":0.00521,"48":0,"49":0.78671,"50":0.01042,"51":0.00521,"52":0,"53":0.01042,"54":0.00521,"55":0.01563,"56":0.01042,"57":0.02084,"58":0.04168,"59":0.01042,"60":0.01042,"61":0.01042,"62":0.02605,"63":0.09378,"64":0.05731,"65":0.29176,"66":0.02605,"67":0.11983,"68":0.07294,"69":0.09378,"70":0.14067,"71":0.27613,"72":0.75545,"73":15.1611,"74":0.02084,"75":0.03647,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.02605,"33":0.00521,"34":0.00521,"35":0,"36":0,"37":0,"38":0.01042,"39":0,"40":0,"41":0.00521,"42":0.00521,"43":0.02605,"44":0.00521,"45":0.01563,"46":0,"47":0.02605,"48":0.06252,"49":0.01042,"50":0.00521,"51":0.00521,"52":0.08857,"53":0.00521,"54":0.00521,"55":0,"56":0.02605,"57":0.01042,"58":0,"59":0,"60":0.05731,"61":0.01042,"62":0.02605,"63":0.03126,"64":0.03126,"65":0.21361,"66":3.2302,"67":0.09899,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.00521,"17":0,"18":0,"19":0,"20":0.01042,"21":0,"22":0,"23":0.00521,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.00521,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00521,"37":0,"38":0.01042,"39":0,"40":0.00521,"41":0,"42":0,"43":0,"44":0,"45":0.00521,"46":0,"47":0,"48":0,"49":0.01042,"50":0,"51":0.02605,"52":0,"53":0,"54":0.00521,"55":0.00521,"56":0.00521,"57":0.01042,"58":1.18788,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.02084},E:{"4":0,"5":0,"6":0.03647,"7":0,"8":0.01563,"9":0.00521,"10":0.02084,"11":0.06773,"12":0.59394,_:"0","3.1":0,"3.2":0,"5.1":0.03126,"6.1":0,"7.1":0,"9.1":0.04689,"10.1":0.07294,"11.1":0.11983,"12.1":0.28134},G:{"8":0.050937430201141,"3.2":0.0033076253377364,"4.0-4.1":0.0019845752026418,"4.2-4.3":0.00066152506754728,"5.0-5.1":0.0066152506754728,"6.0-6.1":0.0033076253377364,"7.0-7.1":0.011907451215851,"8.1-8.4":0.025799477634344,"9.0-9.2":0.015215076553588,"9.3":0.12635128790153,"10.0-10.2":0.070121657160012,"10.3":0.16736584208946,"11.0-11.2":0.20639582107475,"11.3-11.4":0.42403756829781,"12.0-12.1":2.560102011408,"12.2":2.9365097748424},I:{"3":0.0012744858870968,"4":0.18352596774194,_:"67","2.1":0.0089214012096774,"2.2":0.015293830645161,"2.3":0.0089214012096774,"4.1":0.091762983870968,"4.2-4.3":0.39763959677419,"4.4":0,"4.4.3-4.4.4":0.55695033266129},A:{"6":0,"7":0,"8":0.02605,"9":0,"10":0.01563,"11":0.16672,"5.5":0},B:{"12":0.04689,"13":0.02605,"14":0.03126,"15":0.0521,"16":0.04168,"17":0.39596,"18":0.14067},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.22175617391304,"5.0-5.4":0.03023947826087,"6.2-6.4":0.060478956521739,"7.2-7.4":0.22175617391304,"8.2":0.40319304347826,"9.2":0.22175617391304},N:{"10":0.022643636363636,"11":0.10189636363636},J:{"7":0,"10":0.07185},S:{"2.5":0},R:{_:"0"},M:{"0":0.29219},O:{"0":0.66102},Q:{"1.2":0.00958},H:{"0":7.4371745704467},L:{"0":50.29558}};


/***/ }),
/* 298 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.014806,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.029612,"45":0,"46":0,"47":0,"48":0,"49":0.310926,"50":0,"51":0,"52":0,"53":0.007403,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.066627,"61":0,"62":0.007403,"63":0,"64":0,"65":0.014806,"66":0.007403,"67":0,"68":0.022209,"69":0,"70":0.007403,"71":0.07403,"72":0.621852,"73":46.846184,"74":0.007403,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.007403,"44":0,"45":0,"46":0,"47":0,"48":0.007403,"49":0,"50":0,"51":0.007403,"52":0.007403,"53":0,"54":0,"55":0,"56":0.014806,"57":0,"58":0.007403,"59":0.007403,"60":0,"61":0.022209,"62":0,"63":0.014806,"64":0,"65":0.340538,"66":0.503404,"67":0.022209,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.007403,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.007403,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.007403,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.014806,"12":0.140657,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.022209,"10.1":0.007403,"11.1":0.066627,"12.1":0.066627},G:{"8":0.16935934634244,"3.2":0.010997360152106,"4.0-4.1":0.0065984160912639,"4.2-4.3":0.0021994720304213,"5.0-5.1":0.021994720304213,"6.0-6.1":0.010997360152106,"7.0-7.1":0.039590496547583,"8.1-8.4":0.08577940918643,"9.0-9.2":0.05058785669969,"9.3":0.42009915781047,"10.0-10.2":0.23314403522466,"10.3":0.55646642369659,"11.0-11.2":0.68623527349144,"11.3-11.4":1.4098615715001,"12.0-12.1":8.5119567577304,"12.2":9.7634563430401},I:{"3":0.00027205745967742,"4":0.039176274193548,_:"67","2.1":0.0019044022177419,"2.2":0.003264689516129,"2.3":0.0019044022177419,"4.1":0.019588137096774,"4.2-4.3":0.084881927419355,"4.4":0,"4.4.3-4.4.4":0.11888910987903},A:{"6":0,"7":0,"8":2.51702,"9":0,"10":0,"11":1.236301,"5.5":0},B:{"12":0.014806,"13":0.007403,"14":0.081433,"15":0,"16":0.014806,"17":0.185075,"18":0.118448},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.090874945945946,"5.0-5.4":0,"6.2-6.4":0.090874945945946,"7.2-7.4":0.35340256756757,"8.2":1.3631241891892,"9.2":0.71690235135135},N:{"10":0,"11":0.018179},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.322028},O:{"0":0.031164},Q:{"1.2":0.005194},H:{"0":0.073760154639175},L:{"0":19.065656}};


/***/ }),
/* 299 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006354,"23":0,"24":0,"25":0,"26":0.006354,"27":0,"28":0,"29":0,"30":0,"31":0.006354,"32":0,"33":0,"34":0.012708,"35":0,"36":0.006354,"37":0,"38":0.057186,"39":0,"40":0.038124,"41":0.006354,"42":0,"43":0.006354,"44":0,"45":0,"46":0.006354,"47":0,"48":0.006354,"49":0.54009,"50":0,"51":0.006354,"52":0,"53":0.025416,"54":0.006354,"55":0.006354,"56":0.012708,"57":0.019062,"58":0.038124,"59":0.006354,"60":0.006354,"61":0.012708,"62":0.03177,"63":0.06354,"64":0.038124,"65":0.076248,"66":0.044478,"67":0.228744,"68":0.069894,"69":0.088956,"70":0.203328,"71":0.247806,"72":1.219968,"73":27.220536,"74":0.019062,"75":0.012708,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.012708,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.006354,"46":0,"47":0.006354,"48":0.057186,"49":0,"50":0,"51":0.006354,"52":0.050832,"53":0,"54":0,"55":0.006354,"56":0.019062,"57":0.012708,"58":0.006354,"59":0.006354,"60":0.025416,"61":0.012708,"62":0.006354,"63":0.012708,"64":0.025416,"65":0.12708,"66":2.12859,"67":0.025416,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006354,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.006354,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.838728,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.050832,"9":0.006354,"10":0.03177,"11":0.076248,"12":1.296216,_:"0","3.1":0,"3.2":0,"5.1":0.298638,"6.1":0.006354,"7.1":0.006354,"9.1":0.044478,"10.1":0.152496,"11.1":0.343116,"12.1":0.679878},G:{"8":0.068627134193936,"3.2":0.0044563074151906,"4.0-4.1":0.0026737844491144,"4.2-4.3":0.00089126148303813,"5.0-5.1":0.0089126148303813,"6.0-6.1":0.0044563074151906,"7.0-7.1":0.016042706694686,"8.1-8.4":0.034759197838487,"9.0-9.2":0.020499014109877,"9.3":0.17023094326028,"10.0-10.2":0.094473717202041,"10.3":0.22548915520865,"11.0-11.2":0.2780735827079,"11.3-11.4":0.57129861062744,"12.0-12.1":3.4491819393576,"12.2":3.9563097232062},I:{"3":0.0003676310483871,"4":0.052938870967742,_:"67","2.1":0.0025734173387097,"2.2":0.0044115725806452,"2.3":0.0025734173387097,"4.1":0.026469435483871,"4.2-4.3":0.11470088709677,"4.4":0,"4.4.3-4.4.4":0.16065476814516},A:{"6":0,"7":0.0065169230769231,"8":0.032584615384615,"9":0.019550769230769,"10":0.019550769230769,"11":0.43011692307692,"5.5":0},B:{"12":0.006354,"13":0.012708,"14":0.006354,"15":0.012708,"16":0.044478,"17":0.482904,"18":0.108018},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.27411474033149,"5.0-5.4":0.020304795580111,"6.2-6.4":0.071066784530387,"7.2-7.4":0.19289555801105,"8.2":0.73097264088398,"9.2":0.54822948066298},N:{"10":0,"11":0.025522},J:{"7":0,"10":0.003646},S:{"2.5":0},R:{_:"0"},M:{"0":0.09115},O:{"0":0.032814},Q:{"1.2":0},H:{"0":0.13807189003436},L:{"0":48.828834}};


/***/ }),
/* 300 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.016912,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.02114,"20":0,"21":0,"22":0,"23":0.004228,"24":0,"25":0,"26":0.004228,"27":0.004228,"28":0,"29":0.004228,"30":0,"31":0.016912,"32":0,"33":0,"34":0,"35":0.004228,"36":0.008456,"37":0,"38":0,"39":0.004228,"40":0.012684,"41":0,"42":0,"43":0.050736,"44":0,"45":0.004228,"46":0.008456,"47":0,"48":0,"49":0.262136,"50":0.012684,"51":0,"52":0,"53":0.008456,"54":0,"55":0.025368,"56":0.016912,"57":0,"58":0.076104,"59":0,"60":0.004228,"61":0.008456,"62":0.012684,"63":0.1057,"64":0.016912,"65":0.109928,"66":0.016912,"67":0.06342,"68":0.016912,"69":0.050736,"70":0.046508,"71":0.076104,"72":0.431256,"73":6.7648,"74":0.004228,"75":0.012684,_:"76"},C:{"2":0.004228,"3":0.012684,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.004228,"22":0,"23":0.004228,"24":0,"25":0.008456,"26":0,"27":0,"28":0.004228,"29":0.004228,"30":0.004228,"31":0.004228,"32":0.004228,"33":0.004228,"34":0.004228,"35":0.004228,"36":0,"37":0.004228,"38":0.004228,"39":0.004228,"40":0.008456,"41":0.004228,"42":0.004228,"43":0.038052,"44":0.016912,"45":0.012684,"46":0.033824,"47":0.093016,"48":0.101472,"49":0.033824,"50":0.016912,"51":0.008456,"52":0.194488,"53":0.016912,"54":0.008456,"55":0.025368,"56":0.025368,"57":0.029596,"58":0.025368,"59":0.025368,"60":0.1057,"61":0.033824,"62":0.025368,"63":0.038052,"64":0.097244,"65":0.346696,"66":3.3824,"67":0.139524,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.004228,"17":0,"18":0,"19":0,"20":0.012684,"21":0,"22":0,"23":0.012684,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.008456,"34":0.004228,"35":0.004228,"36":0.004228,"37":0.004228,"38":0.004228,"39":0,"40":0,"41":0,"42":0.008456,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.012684,"49":0,"50":0,"51":0.004228,"52":0.004228,"53":0.004228,"54":0,"55":0,"56":0.008456,"57":0.008456,"58":1.276856,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.054964},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.004228,"10":0,"11":0.025368,"12":0.059192,_:"0","3.1":0,"3.2":0,"5.1":0.088788,"6.1":0,"7.1":0,"9.1":0.004228,"10.1":0.033824,"11.1":0.016912,"12.1":0.033824},G:{"8":0.029885246472531,"3.2":0.0019406004202942,"4.0-4.1":0.0011643602521765,"4.2-4.3":0.00038812008405884,"5.0-5.1":0.0038812008405884,"6.0-6.1":0.0019406004202942,"7.0-7.1":0.0069861615130591,"8.1-8.4":0.015136683278295,"9.0-9.2":0.0089267619333533,"9.3":0.074130936055239,"10.0-10.2":0.041140728910237,"10.3":0.098194381266887,"11.0-11.2":0.12109346622636,"11.3-11.4":0.24878497388172,"12.0-12.1":1.5020247253077,"12.2":1.7228650531372},I:{"3":0.0030574314516129,"4":0.44027012903226,_:"67","2.1":0.02140202016129,"2.2":0.036689177419355,"2.3":0.02140202016129,"4.1":0.22013506451613,"4.2-4.3":0.95391861290323,"4.4":0,"4.4.3-4.4.4":1.3360975443548},A:{"6":0,"7":0.0042783333333333,"8":0.07701,"9":0.0042783333333333,"10":0.017113333333333,"11":0.2567,"5.5":0},B:{"12":0.033824,"13":0.059192,"14":0.08456,"15":0.097244,"16":0.071876,"17":0.27482,"18":0.054964},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.64036528301887,"5.0-5.4":0.1524679245283,"6.2-6.4":0.060987169811321,"7.2-7.4":0.21345509433962,"8.2":0.43707471698113,"9.2":0.11180981132075},N:{"10":0.034632,"11":0.473304},J:{"7":0,"10":0.132756},S:{"2.5":0.011544},R:{_:"0"},M:{"0":0.392496},O:{"0":2.53968},Q:{"1.2":0.02886},H:{"0":9.5739033402062},L:{"0":54.668572}};


/***/ }),
/* 301 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.0181,"12":0.00905,"13":0,"14":0,"15":0,"16":0,"17":0.00905,"18":0,"19":0,"20":0,"21":0.004525,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.004525,"28":0,"29":0.004525,"30":0.0181,"31":0.049775,"32":0.004525,"33":0.004525,"34":0.004525,"35":0.004525,"36":0.104075,"37":0,"38":0.004525,"39":0.00905,"40":0.06335,"41":0.013575,"42":0.00905,"43":0.004525,"44":0.004525,"45":0.1448,"46":0.004525,"47":0.095025,"48":0.122175,"49":0.15385,"50":0.022625,"51":0.00905,"52":0.004525,"53":0.004525,"54":0.049775,"55":0.543,"56":0.5973,"57":0.33485,"58":0.0181,"59":0.022625,"60":0.00905,"61":0.1267,"62":0.28055,"63":4.773875,"64":0.0181,"65":0.0905,"66":0.040725,"67":0.158375,"68":0.131225,"69":0.945725,"70":0.248875,"71":0.230775,"72":0.538475,"73":2.248925,"74":0.031675,"75":0.013575,_:"76"},C:{"2":0,"3":0.004525,"4":0,"5":0,"6":0,"7":0,"8":0.08145,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.031675,"18":0,"19":0,"20":0,"21":0.004525,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.004525,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00905,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.0181,"44":0,"45":0.004525,"46":0,"47":0.004525,"48":0.013575,"49":0.004525,"50":0.004525,"51":0,"52":0.0362,"53":0.004525,"54":0.04525,"55":0.004525,"56":0.0181,"57":0.00905,"58":0.004525,"59":0.00905,"60":0.013575,"61":0.00905,"62":0.00905,"63":0.00905,"64":0.00905,"65":0.04525,"66":0.53395,"67":0.004525,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00905,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.004525,"57":0,"58":0.058825,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.004525,"5":0,"6":0,"7":0,"8":0.004525,"9":0.0181,"10":0.00905,"11":0.022625,"12":0.2715,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.013575,"10.1":0.02715,"11.1":0.06335,"12.1":0.17195},G:{"8":0.10980128339838,"3.2":0.0071299534674272,"4.0-4.1":0.0042779720804563,"4.2-4.3":0.0014259906934854,"5.0-5.1":0.014259906934854,"6.0-6.1":0.0071299534674272,"7.0-7.1":0.025667832482738,"8.1-8.4":0.055613637045932,"9.0-9.2":0.032797785950165,"9.3":0.27236422245572,"10.0-10.2":0.15115501350946,"10.3":0.36077564545182,"11.0-11.2":0.44490909636746,"11.3-11.4":0.91406003452417,"12.0-12.1":5.5185839837887,"12.2":6.3299726883819},I:{"3":0.0043154485887097,"4":0.62142459677419,_:"67","2.1":0.030208140120968,"2.2":0.051785383064516,"2.3":0.030208140120968,"4.1":0.3107122983871,"4.2-4.3":1.3464199596774,"4.4":0,"4.4.3-4.4.4":1.8858510332661},A:{"6":0.027684772727273,"7":0.0092282575757576,"8":0.47064113636364,"9":0.43372810606061,"10":0.18456515151515,"11":1.9194775757576,"5.5":0},B:{"12":0.004525,"13":0.00905,"14":0.013575,"15":0.00905,"16":0.0362,"17":0.51585,"18":0.1629},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.052420212765957,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.041936170212766,"8.2":0.31452127659574,"9.2":0.083872340425532},N:{"10":0.0082125,"11":0.0082125},J:{"7":0,"10":0.01095},S:{"2.5":0},R:{_:"0"},M:{"0":0.1095},O:{"0":10.878825},Q:{"1.2":5.940375},H:{"0":0.057017139175258},L:{"0":36.117325}};


/***/ }),
/* 302 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.023832,"23":0,"24":0,"25":0,"26":0.015888,"27":0,"28":0,"29":0,"30":0,"31":0.007944,"32":0,"33":0,"34":0.007944,"35":0,"36":0.007944,"37":0,"38":0.055608,"39":0.007944,"40":0,"41":0.007944,"42":0.007944,"43":0.007944,"44":0.007944,"45":0,"46":0.015888,"47":0,"48":0.007944,"49":0.365424,"50":0.007944,"51":0.023832,"52":0.007944,"53":0.03972,"54":0.007944,"55":0.007944,"56":0.023832,"57":0.023832,"58":0.095328,"59":0.031776,"60":0.023832,"61":0.087384,"62":0.063552,"63":0.111216,"64":0.087384,"65":0.11916,"66":0.111216,"67":0.262152,"68":0.174768,"69":0.214488,"70":0.325704,"71":0.452808,"72":1.533192,"73":48.434568,"74":0.047664,"75":0.007944,_:"76"},C:{"2":0,"3":0.007944,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.023832,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.007944,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.007944,"44":0,"45":0.007944,"46":0,"47":0.015888,"48":0.031776,"49":0.007944,"50":0.023832,"51":0.007944,"52":0.031776,"53":0.007944,"54":0.007944,"55":0,"56":0.007944,"57":0.007944,"58":0.007944,"59":0.015888,"60":0.031776,"61":0.007944,"62":0.015888,"63":0.015888,"64":0.023832,"65":0.135048,"66":1.94628,"67":0.031776,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.007944,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.802344,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.007944,"8":0.015888,"9":0.087384,"10":0.047664,"11":0.087384,"12":1.342536,_:"0","3.1":0,"3.2":0,"5.1":0.905616,"6.1":0.063552,"7.1":0,"9.1":0.03972,"10.1":0.1986,"11.1":0.35748,"12.1":0.778512},G:{"8":0.027291148604023,"3.2":0.0017721525067547,"4.0-4.1":0.0010632915040528,"4.2-4.3":0.00035443050135095,"5.0-5.1":0.0035443050135095,"6.0-6.1":0.0017721525067547,"7.0-7.1":0.006379749024317,"8.1-8.4":0.013822789552687,"9.0-9.2":0.0081519015310718,"9.3":0.067696225758031,"10.0-10.2":0.0375696331432,"10.3":0.089670916841789,"11.0-11.2":0.1105823164215,"11.3-11.4":0.22718995136596,"12.0-12.1":1.3716460402282,"12.2":1.5733169954968},I:{"3":0.00049639516129032,"4":0.071480903225806,_:"67","2.1":0.0034747661290323,"2.2":0.0059567419354839,"2.3":0.0034747661290323,"4.1":0.035740451612903,"4.2-4.3":0.15487529032258,"4.4":0,"4.4.3-4.4.4":0.21692468548387},A:{"6":0,"7":0,"8":0.032482133333333,"9":0.016241066666667,"10":0.016241066666667,"11":0.30045973333333,"5.5":0},B:{"12":0.007944,"13":0.007944,"14":0.023832,"15":0.023832,"16":0.047664,"17":0.500472,"18":0.135048},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.22616,"5.0-5.4":0.01028,"6.2-6.4":0.03084,"7.2-7.4":0.0514,"8.2":0.32896,"9.2":0.28784},N:{"10":0,"11":0.059624},J:{"7":0,"10":0.01028},S:{"2.5":0},R:{_:"0"},M:{"0":0.057568},O:{"0":1.992264},Q:{"1.2":0.002056},H:{"0":0.10900332646048},L:{"0":28.81508}};


/***/ }),
/* 303 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.007418,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.007418,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.022254,"36":0,"37":0,"38":0.014836,"39":0,"40":0.007418,"41":0.007418,"42":0,"43":0.022254,"44":0,"45":0,"46":0,"47":0.022254,"48":0,"49":0.808562,"50":0.007418,"51":0.007418,"52":0,"53":0,"54":0.014836,"55":0.007418,"56":0.007418,"57":0.007418,"58":0.03709,"59":0.007418,"60":0.014836,"61":0.022254,"62":0.059344,"63":0.044508,"64":0.044508,"65":0.11127,"66":0.029672,"67":0.200286,"68":0.051926,"69":0.081598,"70":0.096434,"71":0.252212,"72":1.364912,"73":32.794978,"74":0.051926,"75":0.022254,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.007418,"36":0,"37":0,"38":0,"39":0.007418,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.022254,"46":0,"47":0.014836,"48":0.081598,"49":0.007418,"50":0,"51":0.007418,"52":0.07418,"53":0.014836,"54":0,"55":0,"56":0.007418,"57":0.014836,"58":0.007418,"59":0.007418,"60":0.059344,"61":0.014836,"62":0.014836,"63":0.022254,"64":0.059344,"65":0.207704,"66":3.575476,"67":0.07418,"68":0.007418,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.007418,"37":0,"38":0.014836,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.534096,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0.014836,"7":0,"8":0.007418,"9":0.066762,"10":0.044508,"11":0.178032,"12":3.093306,_:"0","3.1":0,"3.2":0,"5.1":0.682456,"6.1":0,"7.1":0,"9.1":0.155778,"10.1":0.348646,"11.1":0.867906,"12.1":1.63196},G:{"8":0.074775160012008,"3.2":0.0048555298709096,"4.0-4.1":0.0029133179225458,"4.2-4.3":0.00097110597418193,"5.0-5.1":0.0097110597418193,"6.0-6.1":0.0048555298709096,"7.0-7.1":0.017479907535275,"8.1-8.4":0.037873132993095,"9.0-9.2":0.022335437406184,"9.3":0.18548124106875,"10.0-10.2":0.10293723326328,"10.3":0.24568981146803,"11.0-11.2":0.30298506394476,"11.3-11.4":0.62247892945062,"12.0-12.1":3.7581801200841,"12.2":4.3107394193936},I:{"3":0.00073630241935484,"4":0.1060275483871,_:"67","2.1":0.0051541169354839,"2.2":0.0088356290322581,"2.3":0.0051541169354839,"4.1":0.053013774193548,"4.2-4.3":0.22972635483871,"4.4":0,"4.4.3-4.4.4":0.32176415725806},A:{"6":0,"7":0,"8":0.007418,"9":0.007418,"10":0.014836,"11":1.950934,"5.5":0},B:{"12":0.014836,"13":0.014836,"14":0.029672,"15":0.03709,"16":0.081598,"17":1.172044,"18":0.200286},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.34845083076923,"5.0-5.4":0.010248553846154,"6.2-6.4":0.061491323076923,"7.2-7.4":0.16397686153846,"8.2":1.0760981538462,"9.2":1.0043582769231},N:{"10":0.010328,"11":0.020656},J:{"7":0,"10":0.005164},S:{"2.5":0},R:{_:"0"},M:{"0":0.126518},O:{"0":0.056804},Q:{"1.2":0.002582},H:{"0":0.50844992439863},L:{"0":31.555728}};


/***/ }),
/* 304 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006734,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.006734,"19":0,"20":0,"21":0,"22":0.006734,"23":0.006734,"24":0,"25":0,"26":0,"27":0.006734,"28":0,"29":0.013468,"30":0.006734,"31":0,"32":0,"33":0.006734,"34":0.026936,"35":0,"36":0.006734,"37":0,"38":0.020202,"39":0,"40":0.040404,"41":0,"42":0,"43":0.006734,"44":0.013468,"45":0,"46":0.026936,"47":0.013468,"48":0.013468,"49":0.074074,"50":0.013468,"51":0.020202,"52":0.026936,"53":0.087542,"54":0.040404,"55":0.020202,"56":0.013468,"57":0.026936,"58":0.074074,"59":0.006734,"60":0.026936,"61":0.013468,"62":0.026936,"63":0.154882,"64":0.020202,"65":0.040404,"66":0.013468,"67":0.047138,"68":0.080808,"69":0.060606,"70":0.255892,"71":0.20202,"72":0.693602,"73":6.484842,"74":0,"75":0.026936,_:"76"},C:{"2":0.006734,"3":0,"4":0.006734,"5":0.006734,"6":0,"7":0,"8":0.006734,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.013468,"16":0.006734,"17":0.020202,"18":0.006734,"19":0.006734,"20":0.006734,"21":0.006734,"22":0.006734,"23":0.040404,"24":0.013468,"25":0.026936,"26":0.047138,"27":0.013468,"28":0.020202,"29":0.013468,"30":0.03367,"31":0.020202,"32":0.026936,"33":0.127946,"34":0.208754,"35":0.114478,"36":0.047138,"37":0.074074,"38":0.161616,"39":0.074074,"40":0.3367,"41":0.141414,"42":0.141414,"43":0.40404,"44":0.074074,"45":0.491582,"46":0.289562,"47":0.63973,"48":0.356902,"49":0.579124,"50":0.50505,"51":0.127946,"52":1.259258,"53":0.249158,"54":1.420874,"55":0.148148,"56":0.855218,"57":1.353534,"58":0.444444,"59":1.508416,"60":1.21212,"61":0.693602,"62":0.949494,"63":0.895622,"64":1.474746,"65":3.643094,"66":10.599316,"67":0.289562,"68":0.06734,"3.5":0,"3.6":0.013468},F:{"9":0,"11":0,"12":0.006734,"15":0,"16":0,"17":0.006734,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.006734,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.013468,"30":0,"31":0.006734,"32":0,"33":0.006734,"34":0.006734,"35":0,"36":0.006734,"37":0,"38":0.020202,"39":0,"40":0,"41":0,"42":0.006734,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.006734,"50":0,"51":0,"52":0,"53":0.006734,"54":0.006734,"55":0.006734,"56":0.006734,"57":0.03367,"58":0.969696,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.013468,"12.1":0.013468},E:{"4":0,"5":0,"6":0,"7":0,"8":0.006734,"9":0.006734,"10":0,"11":0.03367,"12":0.16835,_:"0","3.1":0,"3.2":0,"5.1":0.087542,"6.1":0,"7.1":0,"9.1":0.013468,"10.1":0.013468,"11.1":0.040404,"12.1":0.013468},G:{"8":0.04516479575703,"3.2":0.0029327789452617,"4.0-4.1":0.001759667367157,"4.2-4.3":0.00058655578905234,"5.0-5.1":0.0058655578905234,"6.0-6.1":0.0029327789452617,"7.0-7.1":0.010558004202942,"8.1-8.4":0.022875675773041,"9.0-9.2":0.013490783148204,"9.3":0.112032155709,"10.0-10.2":0.062174913639548,"10.3":0.14839861463024,"11.0-11.2":0.18300540618433,"11.3-11.4":0.37598226078255,"12.0-12.1":2.2699709036325,"12.2":2.6037211476033},I:{"3":0.0013988346774194,"4":0.20143219354839,_:"67","2.1":0.0097918427419355,"2.2":0.016786016129032,"2.3":0.0097918427419355,"4.1":0.10071609677419,"4.2-4.3":0.43643641935484,"4.4":0,"4.4.3-4.4.4":0.61129075403226},A:{"6":0,"7":0,"8":0.087542,"9":0.006734,"10":0.175084,"11":0.53872,"5.5":0},B:{"12":0.047138,"13":0.047138,"14":0.040404,"15":0.047138,"16":0.195286,"17":0.296296,"18":0.141414},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.72268696551724,"5.0-5.4":0.20074637931034,"6.2-6.4":0.12044782758621,"7.2-7.4":0.34126884482759,"8.2":0.70261232758621,"9.2":0.24089565517241},N:{"10":0.012519666666667,"11":0.062598333333333},J:{"7":0,"10":0.006532},S:{"2.5":0},R:{_:"0"},M:{"0":1.214952},O:{"0":0.349462},Q:{"1.2":0.009798},H:{"0":0.55656680412371},L:{"0":41.001514}};


/***/ }),
/* 305 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.006401,"20":0.006401,"21":0,"22":0,"23":0,"24":0.006401,"25":0,"26":0.019203,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.019203,"34":0.012802,"35":0.012802,"36":0.121619,"37":0,"38":0.006401,"39":0,"40":0.051208,"41":0,"42":0,"43":0.313649,"44":0.006401,"45":0,"46":0.019203,"47":0,"48":0,"49":0.243238,"50":0.006401,"51":0,"52":0,"53":0.012802,"54":0.006401,"55":0.102416,"56":0.012802,"57":0.006401,"58":0.019203,"59":0.006401,"60":0.019203,"61":0.006401,"62":0,"63":0.025604,"64":0.089614,"65":0.236837,"66":0.06401,"67":0.070411,"68":0.089614,"69":0.057609,"70":0.390461,"71":0.441669,"72":1.888295,"73":24.739865,"74":0.153624,"75":0.032005,_:"76"},C:{"2":0,"3":0.006401,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.012802,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006401,"44":0,"45":0.006401,"46":0,"47":0,"48":0.038406,"49":0,"50":0.006401,"51":0.012802,"52":0.012802,"53":0,"54":0,"55":0.006401,"56":0.006401,"57":0.025604,"58":0.012802,"59":0,"60":0.006401,"61":0.025604,"62":0.012802,"63":0.012802,"64":0.012802,"65":0.134421,"66":2.515593,"67":0.051208,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.006401,"57":0.006401,"58":1.004957,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.006401,"9":0,"10":0,"11":0.083213,"12":1.446626,_:"0","3.1":0,"3.2":0,"5.1":0.019203,"6.1":0.006401,"7.1":0,"9.1":0.06401,"10.1":0.089614,"11.1":0.313649,"12.1":1.286601},G:{"8":0.084755563594516,"3.2":0.0055036080256179,"4.0-4.1":0.0033021648153708,"4.2-4.3":0.0011007216051236,"5.0-5.1":0.011007216051236,"6.0-6.1":0.0055036080256179,"7.0-7.1":0.019812988892225,"8.1-8.4":0.04292814259982,"9.0-9.2":0.025316596917842,"9.3":0.21023782657861,"10.0-10.2":0.1166764901431,"10.3":0.27848256609627,"11.0-11.2":0.34342514079856,"11.3-11.4":0.70556254888422,"12.0-12.1":4.2597926118283,"12.2":4.8861032051436},I:{"3":0.002174029233871,"4":0.31306020967742,_:"67","2.1":0.015218204637097,"2.2":0.026088350806452,"2.3":0.015218204637097,"4.1":0.15653010483871,"4.2-4.3":0.67829712096774,"4.4":0,"4.4.3-4.4.4":0.95005077520161},A:{"6":0,"7":0,"8":0.01933017218543,"9":0,"10":0,"11":0.95362182781457,"5.5":0},B:{"12":0.025604,"13":0.044807,"14":0.115218,"15":0.083213,"16":0.096015,"17":0.684907,"18":0.160025},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.54348517085427,"5.0-5.4":0.071781060301508,"6.2-6.4":0.11279880904523,"7.2-7.4":0.18457986934673,"8.2":0.60501179396985,"9.2":0.52297629648241},N:{"10":0.0518256,"11":0.2073024},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.086376},O:{"0":0.298717},Q:{"1.2":0.010797},H:{"0":0.17377233505155},L:{"0":42.755064}};


/***/ }),
/* 306 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":15,"54":0,"55":0,"56":0,"57":0,"58":40,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":5,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":15,"51":0,"52":0,"53":0,"54":0,"55":10,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":5,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0},G:{"8":0.07705393775643,"3.2":0.0050035024517162,"4.0-4.1":0.0030021014710297,"4.2-4.3":0.0010007004903432,"5.0-5.1":0.010007004903432,"6.0-6.1":0.0050035024517162,"7.0-7.1":0.018012608826178,"8.1-8.4":0.039027319123386,"9.0-9.2":0.023016111277895,"9.3":0.19113379365556,"10.0-10.2":0.10607425197638,"10.3":0.25317722405684,"11.0-11.2":0.31221855298709,"11.3-11.4":0.64144901431002,"12.0-12.1":3.8727108976283,"12.2":4.4421094766336},I:{"3":0,"4":0,_:"67","2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"5.5":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":0}};


/***/ }),
/* 307 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005861,"23":0,"24":0,"25":0.005861,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.017583,"39":0,"40":0,"41":0,"42":0.46888,"43":0.029305,"44":0,"45":0,"46":0.005861,"47":0.017583,"48":0,"49":0.87915,"50":0.023444,"51":0,"52":0.005861,"53":0.017583,"54":0.011722,"55":0.011722,"56":0.011722,"57":0.005861,"58":0.041027,"59":0.005861,"60":0,"61":0.023444,"62":0.005861,"63":0.492324,"64":0.046888,"65":0.152386,"66":0.017583,"67":0.046888,"68":0.023444,"69":0.041027,"70":0.128942,"71":0.181691,"72":0.849845,"73":21.128905,"74":0.017583,"75":0.011722,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.005861,"44":0,"45":0.005861,"46":0,"47":0.017583,"48":0.046888,"49":0,"50":0.005861,"51":0.005861,"52":0.076193,"53":0,"54":0,"55":0,"56":0.005861,"57":0.011722,"58":0.017583,"59":0.005861,"60":0.017583,"61":0.035166,"62":0.005861,"63":0.005861,"64":0.017583,"65":0.099637,"66":2.52023,"67":0.023444,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.005861,"37":0,"38":0.005861,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0.005861,"54":0,"55":0,"56":0,"57":0,"58":0.375104,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.005861,"9":0.011722,"10":0.017583,"11":0.099637,"12":0.715042,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.005861,"7.1":0,"9.1":0.023444,"10.1":0.134803,"11.1":0.228579,"12.1":0.82054},G:{"8":0.11087427489242,"3.2":0.0071996282397678,"4.0-4.1":0.0043197769438607,"4.2-4.3":0.0014399256479536,"5.0-5.1":0.014399256479536,"6.0-6.1":0.0071996282397678,"7.0-7.1":0.025918661663164,"8.1-8.4":0.056157100270189,"9.0-9.2":0.033118289902932,"9.3":0.27502579875913,"10.0-10.2":0.15263211868308,"10.3":0.36430118893225,"11.0-11.2":0.44925680216151,"11.3-11.4":0.92299234033824,"12.0-12.1":5.5725122575803,"12.2":6.3918299512659},I:{"3":0.0006965997983871,"4":0.10031037096774,_:"67","2.1":0.0048761985887097,"2.2":0.0083591975806452,"2.3":0.0048761985887097,"4.1":0.050155185483871,"4.2-4.3":0.21733913709677,"4.4":0,"4.4.3-4.4.4":0.30441411189516},A:{"6":0,"7":0,"8":0.083188387096774,"9":0.011884055299539,"10":0.0059420276497696,"11":1.1884055299539,"5.5":0},B:{"12":0.011722,"13":0.005861,"14":0.023444,"15":0.029305,"16":0.041027,"17":0.715042,"18":0.281328},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.19743516941176,"5.0-5.4":0.010391324705882,"6.2-6.4":0.072739272941176,"7.2-7.4":0.11430457176471,"8.2":1.6002640047059,"9.2":2.4211786564706},N:{"10":0.011037333333333,"11":0.022074666666667},J:{"7":0,"10":0.016556},S:{"2.5":0},R:{_:"0"},M:{"0":0.08278},O:{"0":1.957747},Q:{"1.2":0},H:{"0":0.28997179725086},L:{"0":41.291613}};


/***/ }),
/* 308 */
/***/ (function(module, exports) {

module.exports={D:{"4":0.007221,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007221,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.014442,"23":0,"24":0,"25":0,"26":0.007221,"27":0,"28":0,"29":0.021663,"30":0,"31":0,"32":0,"33":0,"34":0.007221,"35":0,"36":0.007221,"37":0.007221,"38":0.021663,"39":0.007221,"40":0.021663,"41":0.028884,"42":0,"43":0.021663,"44":0,"45":0.007221,"46":0.014442,"47":0.007221,"48":0,"49":0.657111,"50":0.007221,"51":0.007221,"52":0.007221,"53":0.028884,"54":0.064989,"55":0.115536,"56":0.028884,"57":0.021663,"58":0.028884,"59":0.028884,"60":0.021663,"61":0.101094,"62":0.057768,"63":0.093873,"64":0.064989,"65":0.064989,"66":0.050547,"67":0.086652,"68":0.093873,"69":0.101094,"70":0.129978,"71":0.274398,"72":1.761924,"73":25.627329,"74":0.057768,"75":0.014442,_:"76"},C:{"2":0,"3":0.007221,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.007221,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.007221,"32":0,"33":0,"34":0,"35":0.007221,"36":0.007221,"37":0,"38":0.007221,"39":0,"40":0,"41":0.014442,"42":0.007221,"43":0.007221,"44":0.007221,"45":0.057768,"46":0.007221,"47":0.014442,"48":0.209409,"49":0.028884,"50":0.028884,"51":0.028884,"52":0.426039,"53":0.036105,"54":0.014442,"55":0.014442,"56":0.093873,"57":0.064989,"58":0.021663,"59":0.028884,"60":0.274398,"61":0.043326,"62":0.036105,"63":0.050547,"64":0.086652,"65":0.375492,"66":6.520563,"67":0.050547,"68":0,"3.5":0,"3.6":0.014442},F:{"9":0,"11":0,"12":0.007221,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.043326,"37":0,"38":0.007221,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.007221,"49":0.007221,"50":0,"51":0.007221,"52":0.007221,"53":0,"54":0,"55":0,"56":0.007221,"57":0.036105,"58":2.159079,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.050547},E:{"4":0.007221,"5":0,"6":0,"7":0.007221,"8":0.007221,"9":0.036105,"10":0.021663,"11":0.050547,"12":1.148139,_:"0","3.1":0,"3.2":0,"5.1":0.007221,"6.1":0.007221,"7.1":0,"9.1":0.028884,"10.1":0.086652,"11.1":0.173304,"12.1":0.787089},G:{"8":0.078275728109677,"3.2":0.0050828394876413,"4.0-4.1":0.0030497036925848,"4.2-4.3":0.0010165678975283,"5.0-5.1":0.010165678975283,"6.0-6.1":0.0050828394876413,"7.0-7.1":0.018298222155509,"8.1-8.4":0.039646148003603,"9.0-9.2":0.02338106164315,"9.3":0.1941644684279,"10.0-10.2":0.107756197138,"10.3":0.25719167807465,"11.0-11.2":0.31716918402882,"11.3-11.4":0.65162002231562,"12.0-12.1":3.9341177634344,"12.2":4.512544897128},I:{"3":0.00086759778225806,"4":0.12493408064516,_:"67","2.1":0.0060731844758065,"2.2":0.010411173387097,"2.3":0.0060731844758065,"4.1":0.062467040322581,"4.2-4.3":0.27069050806452,"4.4":0,"4.4.3-4.4.4":0.37914023084677},A:{"6":0,"7":0.0073000620437956,"8":0.073000620437956,"9":0.036500310218978,"10":0.13870117883212,"11":3.7449318284672,"5.5":0},B:{"12":0.021663,"13":0.014442,"14":0.043326,"15":0.079431,"16":0.093873,"17":1.783587,"18":0.628227},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.20624539215686,"5.0-5.4":0.020624539215686,"6.2-6.4":0.041249078431373,"7.2-7.4":0.11343496568627,"8.2":0.88685518627451,"9.2":0.83529383823529},N:{"10":0.0244552,"11":0.0978208},J:{"7":0,"10":0.041685},S:{"2.5":0},R:{_:"0"},M:{"0":0.269563},O:{"0":0.161182},Q:{"1.2":0.016674},H:{"0":0.49725477835052},L:{"0":33.00373}};


/***/ }),
/* 309 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005799,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.023196,"23":0,"24":0.005799,"25":0,"26":0.005799,"27":0,"28":0,"29":0.028995,"30":0,"31":0,"32":0.005799,"33":0.005799,"34":0.011598,"35":0,"36":0,"37":0.005799,"38":0.017397,"39":0.005799,"40":0.011598,"41":0.017397,"42":0.005799,"43":0.011598,"44":0.005799,"45":0.005799,"46":0.005799,"47":0.005799,"48":0.005799,"49":0.40593,"50":0.005799,"51":0.017397,"52":0.017397,"53":0.017397,"54":0.069588,"55":0.05799,"56":0.023196,"57":0.023196,"58":0.028995,"59":0.034794,"60":0.023196,"61":0.318945,"62":0.081186,"63":0.168171,"64":0.086985,"65":0.353739,"66":0.052191,"67":0.052191,"68":0.05799,"69":0.075387,"70":0.081186,"71":0.591498,"72":0.661086,"73":10.171446,"74":0.023196,"75":0.011598,_:"76"},C:{"2":0,"3":0.005799,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.005799,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.011598,"23":0,"24":0.005799,"25":0,"26":0.040593,"27":0,"28":0,"29":0.005799,"30":0,"31":0.005799,"32":0,"33":0.005799,"34":0.011598,"35":0.005799,"36":0,"37":0.005799,"38":0.17397,"39":0.005799,"40":0.005799,"41":0.011598,"42":0.017397,"43":0.011598,"44":0.005799,"45":0.028995,"46":0.005799,"47":0.023196,"48":0.156573,"49":0.011598,"50":0.023196,"51":0.034794,"52":0.359538,"53":0.011598,"54":0.028995,"55":0.023196,"56":0.046392,"57":0.040593,"58":0.040593,"59":0.034794,"60":0.498714,"61":0.040593,"62":0.052191,"63":0.052191,"64":0.162372,"65":0.452322,"66":6.367302,"67":0.040593,"68":0,"3.5":0,"3.6":0.005799},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005799,"32":0.005799,"33":0,"34":0,"35":0,"36":0.017397,"37":0.005799,"38":0,"39":0,"40":0.005799,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.005799,"47":0.005799,"48":0.005799,"49":0.011598,"50":0.005799,"51":0.011598,"52":0,"53":0,"54":0,"55":0,"56":0.011598,"57":0.011598,"58":1.009026,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.017397},E:{"4":0,"5":0.005799,"6":0.005799,"7":0.005799,"8":0.075387,"9":0.011598,"10":0.023196,"11":0.063789,"12":1.038021,_:"0","3.1":0,"3.2":0,"5.1":0.023196,"6.1":0.017397,"7.1":0.005799,"9.1":0.046392,"10.1":0.110181,"11.1":0.23196,"12.1":0.724875},G:{"8":0.15023344941459,"3.2":0.0097554187931552,"4.0-4.1":0.0058532512758931,"4.2-4.3":0.001951083758631,"5.0-5.1":0.01951083758631,"6.0-6.1":0.0097554187931552,"7.0-7.1":0.035119507655359,"8.1-8.4":0.076092266586611,"9.0-9.2":0.044874926448514,"9.3":0.37265699789853,"10.0-10.2":0.20681487841489,"10.3":0.49362419093365,"11.0-11.2":0.60873813269289,"11.3-11.4":1.2506446892825,"12.0-12.1":7.5506941459021,"12.2":8.6608608045632},I:{"3":0.0009375,"4":0.135,_:"67","2.1":0.0065625,"2.2":0.01125,"2.3":0.0065625,"4.1":0.0675,"4.2-4.3":0.2925,"4.4":0,"4.4.3-4.4.4":0.4096875},A:{"6":0.04677461443299,"7":0.0058468268041237,"8":0.058468268041237,"9":0.035080960824742,"10":0.087702402061856,"11":2.6018379278351,"5.5":0},B:{"12":0.011598,"13":0.011598,"14":0.040593,"15":0.075387,"16":0.127578,"17":1.368564,"18":0.701679},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.42766578199052,"5.0-5.4":0.074841511848341,"6.2-6.4":0.064149867298578,"7.2-7.4":0.25659946919431,"8.2":2.3842367345972,"9.2":3.5603176350711},N:{"10":0.012603,"11":0.12603},J:{"7":0,"10":0.012603},S:{"2.5":0},R:{_:"0"},M:{"0":0.596542},O:{"0":0.239457},Q:{"1.2":0.012603},H:{"0":0.33408777319588},L:{"0":35.38104}};


/***/ }),
/* 310 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0.004481,"8":0,"9":0.008962,"10":0,"11":0.017924,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.008962,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.004481,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.004481,"32":0,"33":0,"34":0,"35":0.004481,"36":0.008962,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.035848,"44":0,"45":0.004481,"46":0.008962,"47":0.008962,"48":0,"49":0.112025,"50":0.004481,"51":0.008962,"52":0.008962,"53":0.017924,"54":0.008962,"55":0.013443,"56":0.008962,"57":0.004481,"58":0.026886,"59":0.004481,"60":0.013443,"61":0.013443,"62":0.017924,"63":0.094101,"64":0,"65":0.201645,"66":0.286784,"67":0.017924,"68":0.008962,"69":0.049291,"70":0.022405,"71":0.058253,"72":0.600454,"73":13.236874,"74":0.004481,"75":0.013443,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.004481,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.004481,"44":0,"45":0.004481,"46":0,"47":0.013443,"48":0,"49":0,"50":0,"51":0,"52":0.022405,"53":0,"54":0,"55":0,"56":0.004481,"57":0.008962,"58":0,"59":0,"60":0.058253,"61":0,"62":0.004481,"63":0,"64":0.022405,"65":0.040329,"66":0.932048,"67":0.076177,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.004481,"38":0,"39":0,"40":0,"41":0,"42":0.004481,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.004481,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.017924,"57":0,"58":0.219569,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.004481},E:{"4":0,"5":0,"6":0,"7":0,"8":1.124731,"9":0,"10":0.013443,"11":0,"12":0.152354,_:"0","3.1":0,"3.2":0,"5.1":0.049291,"6.1":0,"7.1":0,"9.1":0,"10.1":0.022405,"11.1":0.004481,"12.1":0.636302},G:{"8":0.056668424697288,"3.2":0.0036797678374862,"4.0-4.1":0.0022078607024917,"4.2-4.3":0.00073595356749725,"5.0-5.1":0.0073595356749725,"6.0-6.1":0.0036797678374862,"7.0-7.1":0.01324716421495,"8.1-8.4":0.028702189132393,"9.0-9.2":0.016926932052437,"9.3":0.14056713139197,"10.0-10.2":0.078011078154708,"10.3":0.1861962525768,"11.0-11.2":0.22961751305914,"11.3-11.4":0.47174623676574,"12.0-12.1":2.8481403062143,"12.2":3.2668978861203},I:{"3":0.0027326723790323,"4":0.39350482258065,_:"67","2.1":0.019128706653226,"2.2":0.032792068548387,"2.3":0.019128706653226,"4.1":0.19675241129032,"4.2-4.3":0.85259378225806,"4.4":0,"4.4.3-4.4.4":1.1941778296371},A:{"6":0,"7":0,"8":0.017924,"9":0.013443,"10":0,"11":0.22405,"5.5":0},B:{"12":0.053772,"13":0.017924,"14":0.013443,"15":0.040329,"16":0.013443,"17":0.394328,"18":0.206126},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.9951342087287,"5.0-5.4":0.18322661100569,"6.2-6.4":0.17304735483871,"7.2-7.4":0.59039685768501,"8.2":1.3334825578748,"9.2":1.0891804098672},N:{"10":0.077266,"11":0.011038},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.049671},O:{"0":2.295904},Q:{"1.2":0.369773},H:{"0":1.8026362628866},L:{"0":55.755179}};


/***/ }),
/* 311 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00712,"30":0,"31":0,"32":0,"33":0,"34":0.00712,"35":0,"36":0,"37":0,"38":0.02136,"39":0,"40":0,"41":0.00712,"42":0,"43":0.00712,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.19224,"50":0,"51":0,"52":0.00712,"53":0.00712,"54":0.00712,"55":0.00712,"56":0.00712,"57":0.02136,"58":0.02136,"59":0.12104,"60":0.01424,"61":0.02848,"62":0.05696,"63":0.05696,"64":0.02848,"65":0.06408,"66":0.06408,"67":0.09968,"68":0.0712,"69":0.11392,"70":0.15664,"71":0.4272,"72":3.5956,"73":26.3796,"74":0.02848,"75":0.00712,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00712,"46":0,"47":0.00712,"48":0.01424,"49":0.00712,"50":0.00712,"51":0,"52":0.04272,"53":0,"54":0.00712,"55":0.00712,"56":0.02848,"57":0.00712,"58":0.00712,"59":0,"60":0.06408,"61":0.00712,"62":0.00712,"63":0.00712,"64":0.02848,"65":0.17088,"66":2.0292,"67":0.00712,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.01424,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.32752,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.06408,"9":0.00712,"10":0.0712,"11":0.16376,"12":3.36776,_:"0","3.1":0,"3.2":0,"5.1":0.01424,"6.1":0.00712,"7.1":0,"9.1":0.1068,"10.1":0.31328,"11.1":0.6408,"12.1":1.59488},G:{"8":0.2288508115681,"3.2":0.014860442309617,"4.0-4.1":0.00891626538577,"4.2-4.3":0.0029720884619233,"5.0-5.1":0.029720884619233,"6.0-6.1":0.014860442309617,"7.0-7.1":0.05349759231462,"8.1-8.4":0.11591145001501,"9.0-9.2":0.068358034624237,"9.3":0.56766889622736,"10.0-10.2":0.31504137696387,"10.3":0.75193838086661,"11.0-11.2":0.92729160012008,"11.3-11.4":1.9051087040929,"12.0-12.1":11.501982347643,"12.2":13.193100682478},I:{"3":0.00030153225806452,"4":0.04342064516129,_:"67","2.1":0.0021107258064516,"2.2":0.0036183870967742,"2.3":0.0021107258064516,"4.1":0.021710322580645,"4.2-4.3":0.094078064516129,"4.4":0,"4.4.3-4.4.4":0.13176959677419},A:{"6":0,"7":0,"8":0.01424,"9":0.01424,"10":0.04272,"11":2.8836,"5.5":0},B:{"12":0.00712,"13":0.00712,"14":0.0356,"15":0.05696,"16":0.1424,"17":1.93664,"18":0.61232},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.054967741935484,"5.0-5.4":0.010993548387097,"6.2-6.4":0.021987096774194,"7.2-7.4":0.10993548387097,"8.2":0.78054193548387,"9.2":1.0663741935484},N:{"10":0,"11":0.02592},J:{"7":0,"10":0.0144},S:{"2.5":0},R:{_:"0"},M:{"0":0.12096},O:{"0":0.03456},Q:{"1.2":0.00576},H:{"0":0.10361072164948},L:{"0":19.33664}};


/***/ }),
/* 312 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005927,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.077051,"39":0,"40":0,"41":0,"42":0,"43":0.005927,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.243007,"50":0.005927,"51":0,"52":0.023708,"53":0.047416,"54":0.023708,"55":0,"56":0.011854,"57":0.106686,"58":0.082978,"59":0,"60":0.05927,"61":11.942905,"62":0,"63":0.160029,"64":0.005927,"65":0.053343,"66":0.094832,"67":0.065197,"68":0,"69":0.071124,"70":0.088905,"71":0.088905,"72":0.657897,"73":12.440773,"74":0.124467,"75":0.011854,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.071124,"49":0,"50":0,"51":0,"52":0.065197,"53":0.011854,"54":0,"55":0,"56":0,"57":0,"58":0.011854,"59":0,"60":0.023708,"61":0.005927,"62":0.017781,"63":0.017781,"64":0.023708,"65":0.106686,"66":0.859415,"67":0.005927,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.005927,"37":0.005927,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.005927,"50":0,"51":0.005927,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.444525,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.005927,"9":0,"10":0.077051,"11":0.005927,"12":0.397109,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.047416,"11.1":0.041489,"12.1":0.05927},G:{"8":0.050958319523667,"3.2":0.0033089817872511,"4.0-4.1":0.0019853890723506,"4.2-4.3":0.00066179635745022,"5.0-5.1":0.0066179635745022,"6.0-6.1":0.0033089817872511,"7.0-7.1":0.011912334434104,"8.1-8.4":0.025810057940558,"9.0-9.2":0.015221316221355,"9.3":0.12640310427299,"10.0-10.2":0.070150413889723,"10.3":0.1674344784349,"11.0-11.2":0.20648046352447,"11.3-11.4":0.42421146512559,"12.0-12.1":2.5611519033323,"12.2":2.9377140307215},I:{"3":0.0014039022177419,"4":0.20216191935484,_:"67","2.1":0.0098273155241935,"2.2":0.016846826612903,"2.3":0.0098273155241935,"4.1":0.10108095967742,"4.2-4.3":0.43801749193548,"4.4":0,"4.4.3-4.4.4":0.61350526915323},A:{"6":0,"7":0,"8":0.011854,"9":0.011854,"10":0.023708,"11":0.545284,"5.5":0},B:{"12":0.005927,"13":0.005927,"14":0.17781,"15":0.077051,"16":0.077051,"17":1.386918,"18":0.160029},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.51630611740042,"5.0-5.4":0.021073719077568,"6.2-6.4":0.084294876310273,"7.2-7.4":0.56899041509434,"8.2":1.5383814926625,"9.2":2.2970353794549},N:{"10":0,"11":0.248453},J:{"7":0,"10":0.097752},S:{"2.5":0},R:{_:"0"},M:{"0":0.069241},O:{"0":0.146628},Q:{"1.2":0},H:{"0":0.82519539862543},L:{"0":50.411212}};


/***/ }),
/* 313 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.007295,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.094835,"32":0,"33":0,"34":0.007295,"35":0,"36":0.007295,"37":0.007295,"38":0.01459,"39":0.007295,"40":0,"41":0.05836,"42":0.007295,"43":0.021885,"44":0.007295,"45":0,"46":0.007295,"47":0.021885,"48":0.007295,"49":1.06507,"50":0.007295,"51":0.007295,"52":0.007295,"53":0.036475,"54":0.021885,"55":0.01459,"56":0.007295,"57":0.007295,"58":0.05836,"59":0.01459,"60":0.02918,"61":0.124015,"62":0.1459,"63":0.27721,"64":0.153195,"65":0.240735,"66":0.08754,"67":0.196965,"68":0.109425,"69":0.13131,"70":0.182375,"71":0.386635,"72":1.787275,"73":34.06765,"74":0.02918,"75":0.007295,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.007295,"44":0,"45":0.007295,"46":0,"47":0.007295,"48":0.05836,"49":0,"50":0.021885,"51":0.007295,"52":0.094835,"53":0.007295,"54":0,"55":0.167785,"56":0.02918,"57":0.036475,"58":0.01459,"59":0.036475,"60":0.02918,"61":0.007295,"62":0.007295,"63":0.02918,"64":0.021885,"65":0.1459,"66":1.991535,"67":0.036475,"68":0,"3.5":0,"3.6":0.036475},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.007295,"50":0.007295,"51":0,"52":0.007295,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1.29851,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.007295},E:{"4":0,"5":0,"6":0,"7":0,"8":0.007295,"9":0.08754,"10":0.07295,"11":0.10213,"12":1.72162,_:"0","3.1":0,"3.2":0,"5.1":1.422525,"6.1":0,"7.1":0,"9.1":0.065655,"10.1":0.18967,"11.1":0.32098,"12.1":1.03589},G:{"8":0.073489384068848,"3.2":0.0047720379265486,"4.0-4.1":0.0028632227559292,"4.2-4.3":0.00095440758530972,"5.0-5.1":0.0095440758530972,"6.0-6.1":0.0047720379265486,"7.0-7.1":0.017179336535575,"8.1-8.4":0.037221895827079,"9.0-9.2":0.021951374462123,"9.3":0.18229184879416,"10.0-10.2":0.10116720404283,"10.3":0.24146511908336,"11.0-11.2":0.29777516661663,"11.3-11.4":0.61177526218353,"12.0-12.1":3.6935573551486,"12.2":4.2366152711898},I:{"3":0.00090345766129032,"4":0.13009790322581,_:"67","2.1":0.0063242036290323,"2.2":0.010841491935484,"2.3":0.0063242036290323,"4.1":0.065048951612903,"4.2-4.3":0.28187879032258,"4.4":0,"4.4.3-4.4.4":0.39481099798387},A:{"6":0,"7":0,"8":0.061095625,"9":0.022910859375,"10":0.022910859375,"11":0.38184765625,"5.5":0},B:{"12":0.01459,"13":0.01459,"14":0.021885,"15":0.04377,"16":0.036475,"17":1.0213,"18":0.24803},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.25187862318841,"5.0-5.4":0.050375724637681,"6.2-6.4":0.060450869565217,"7.2-7.4":0.08060115942029,"8.2":0.51383239130435,"9.2":0.43323123188406},N:{"10":0,"11":0.0541},J:{"7":0,"10":0.008115},S:{"2.5":0},R:{_:"0"},M:{"0":0.089265},O:{"0":0.089265},Q:{"1.2":0.002705},H:{"0":0.13572871993127},L:{"0":35.469855}};


/***/ }),
/* 314 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.010984,"12":0,"13":0.016476,"14":0,"15":0,"16":0,"17":0,"18":0.005492,"19":0.005492,"20":0.005492,"21":0.005492,"22":0.005492,"23":0,"24":0.005492,"25":0.005492,"26":0.016476,"27":0.005492,"28":0.005492,"29":0.225172,"30":0.010984,"31":0.060412,"32":0.010984,"33":0.049428,"34":0.010984,"35":0.005492,"36":0.010984,"37":0.005492,"38":0.016476,"39":0.010984,"40":0.060412,"41":0.005492,"42":0.010984,"43":0.35698,"44":0.005492,"45":0.016476,"46":0.016476,"47":0.010984,"48":0.021968,"49":1.059956,"50":0.02746,"51":0.021968,"52":0.021968,"53":0.016476,"54":0.038444,"55":0.043936,"56":0.021968,"57":0.016476,"58":0.104348,"59":0.010984,"60":0.016476,"61":0.829292,"62":0.05492,"63":0.24714,"64":0.093364,"65":0.159268,"66":0.049428,"67":0.093364,"68":0.065904,"69":0.115332,"70":0.159268,"71":0.362472,"72":0.763388,"73":15.40506,"74":0.02746,"75":0.016476,_:"76"},C:{"2":0,"3":0.005492,"4":0.005492,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.005492,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.005492,"27":0,"28":0,"29":0.005492,"30":0.005492,"31":0.005492,"32":0,"33":0.005492,"34":0.010984,"35":0.038444,"36":0.005492,"37":0.005492,"38":0.010984,"39":0.005492,"40":0.010984,"41":0.005492,"42":0.010984,"43":0.038444,"44":0.005492,"45":0.010984,"46":0.005492,"47":0.043936,"48":0.076888,"49":0.016476,"50":0.005492,"51":0.005492,"52":0.230664,"53":0.005492,"54":0.005492,"55":0.005492,"56":0.032952,"57":0.02746,"58":0.010984,"59":0.016476,"60":0.065904,"61":0.021968,"62":0.016476,"63":0.02746,"64":0.043936,"65":0.170252,"66":2.229752,"67":0.05492,"68":0,"3.5":0,"3.6":0.005492},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005492,"23":0,"24":0,"25":0.005492,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005492,"32":0,"33":0,"34":0.005492,"35":0,"36":0.021968,"37":0.08238,"38":0,"39":0,"40":0,"41":0,"42":0.010984,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.005492,"50":0.005492,"51":0.010984,"52":0.005492,"53":0,"54":0,"55":0,"56":0.005492,"57":0.005492,"58":1.504808,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005492},E:{"4":0.005492,"5":0,"6":0,"7":0.010984,"8":0.060412,"9":0.02746,"10":0.021968,"11":0.021968,"12":0.126316,_:"0","3.1":0,"3.2":0,"5.1":0.005492,"6.1":0,"7.1":0,"9.1":0.021968,"10.1":0.038444,"11.1":0.104348,"12.1":0.060412},G:{"8":0.015936757730411,"3.2":0.0010348543980787,"4.0-4.1":0.00062091263884719,"4.2-4.3":0.00020697087961573,"5.0-5.1":0.0020697087961573,"6.0-6.1":0.0010348543980787,"7.0-7.1":0.0037254758330832,"8.1-8.4":0.0080718643050135,"9.0-9.2":0.0047603302311618,"9.3":0.039531438006605,"10.0-10.2":0.021938913239267,"10.3":0.05236363254278,"11.0-11.2":0.064574914440108,"11.3-11.4":0.13266833383368,"12.0-12.1":0.80097730411288,"12.2":0.91874373461423},I:{"3":0.0028840322580645,"4":0.41530064516129,_:"67","2.1":0.020188225806452,"2.2":0.034608387096774,"2.3":0.020188225806452,"4.1":0.20765032258065,"4.2-4.3":0.89981806451613,"4.4":0,"4.4.3-4.4.4":1.2603220967742},A:{"6":0.0061470091743119,"7":0.0061470091743119,"8":0.13523420183486,"9":0.036882055045872,"10":0.061470091743119,"11":0.42414363302752,"5.5":0},B:{"12":0.021968,"13":0.010984,"14":0.016476,"15":0.016476,"16":0.021968,"17":0.170252,"18":0.060412},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.47883976,"5.0-5.4":0.09169272,"6.2-6.4":0.08150464,"7.2-7.4":0.3056424,"8.2":0.98824376,"9.2":0.60109672},N:{"10":0.013023111111111,"11":0.10418488888889},J:{"7":0,"10":0.009016},S:{"2.5":0},R:{_:"0"},M:{"0":0.166796},O:{"0":1.03684},Q:{"1.2":0.027048},H:{"0":0.76395108591065},L:{"0":60.054172}};


/***/ }),
/* 315 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.03222,"23":0,"24":0,"25":0,"26":0.008055,"27":0,"28":0,"29":0.008055,"30":0,"31":0.008055,"32":0,"33":0,"34":0.008055,"35":0,"36":0.008055,"37":0.008055,"38":0.104715,"39":0.008055,"40":0.008055,"41":0.008055,"42":0,"43":0.008055,"44":0,"45":0.008055,"46":0,"47":0.008055,"48":0.01611,"49":0.62829,"50":0.008055,"51":0.008055,"52":0.008055,"53":0.024165,"54":0.01611,"55":0.024165,"56":0.008055,"57":0.01611,"58":0.072495,"59":0.024165,"60":0.01611,"61":0.024165,"62":0.040275,"63":0.136935,"64":0.072495,"65":0.120825,"66":0.09666,"67":0.43497,"68":0.12888,"69":0.17721,"70":0.265815,"71":0.346365,"72":1.329075,"73":42.619005,"74":0.04833,"75":0.01611,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.008055,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.008055,"42":0,"43":0.024165,"44":0.008055,"45":0.03222,"46":0,"47":0.024165,"48":0.12888,"49":0.01611,"50":0.01611,"51":0.024165,"52":0.09666,"53":0.008055,"54":0.008055,"55":0.01611,"56":0.04833,"57":0.03222,"58":0.024165,"59":0.056385,"60":0.072495,"61":0.072495,"62":0.04833,"63":0.088605,"64":0.088605,"65":0.378585,"66":5.75127,"67":0.08055,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.008055,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.008055,"58":1.20825,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.008055,"8":0.01611,"9":0.09666,"10":0.104715,"11":0.17721,"12":1.91709,_:"0","3.1":0,"3.2":0,"5.1":1.796265,"6.1":0.024165,"7.1":0,"9.1":0.153045,"10.1":0.281925,"11.1":0.555795,"12.1":1.17603},G:{"8":0.034838435404783,"3.2":0.0022622360652457,"4.0-4.1":0.0013573416391474,"4.2-4.3":0.00045244721304913,"5.0-5.1":0.0045244721304913,"6.0-6.1":0.0022622360652457,"7.0-7.1":0.0081440498348844,"8.1-8.4":0.017645441308916,"9.0-9.2":0.01040628590013,"9.3":0.086417417692385,"10.0-10.2":0.047959404583208,"10.3":0.11446914490143,"11.0-11.2":0.14116353047133,"11.3-11.4":0.2900186635645,"12.0-12.1":1.7509707145002,"12.2":2.0084131787251},I:{"3":0.0007348185483871,"4":0.10581387096774,_:"67","2.1":0.0051437298387097,"2.2":0.0088178225806452,"2.3":0.0051437298387097,"4.1":0.052906935483871,"4.2-4.3":0.22926338709677,"4.4":0,"4.4.3-4.4.4":0.32111570564516},A:{"6":0.0082380681818182,"7":0,"8":0.032952272727273,"9":0.016476136363636,"10":0.024714204545455,"11":0.28009431818182,"5.5":0},B:{"12":0.01611,"13":0.01611,"14":0.06444,"15":0.040275,"16":0.04833,"17":0.61218,"18":0.17721},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.36642590673575,"5.0-5.4":0.010178497409326,"6.2-6.4":0.050892487046632,"7.2-7.4":0.10178497409326,"8.2":0.76338730569948,"9.2":0.67178082901554},N:{"10":0.011886111111111,"11":0.095088888888889},J:{"7":0,"10":0.00778},S:{"2.5":0},R:{_:"0"},M:{"0":0.083635},O:{"0":0.0778},Q:{"1.2":0.009725},H:{"0":0.1252152233677},L:{"0":27.082435}};


/***/ }),
/* 316 */
/***/ (function(module, exports) {

module.exports={D:{"4":0.007591,"5":0,"6":0.007591,"7":0,"8":0,"9":0,"10":0,"11":0.007591,"12":0.007591,"13":0,"14":0.007591,"15":0,"16":0,"17":0.015182,"18":0,"19":0,"20":0,"21":0.007591,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.007591,"28":0.007591,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.007591,"35":0,"36":0.007591,"37":0.007591,"38":0.015182,"39":0.007591,"40":0.007591,"41":0.045546,"42":0.007591,"43":0.022773,"44":0.022773,"45":0,"46":0.007591,"47":0.007591,"48":0.015182,"49":0.326413,"50":0,"51":0.015182,"52":0,"53":0.015182,"54":0,"55":0.030364,"56":0.037955,"57":0.015182,"58":0.083501,"59":0.068319,"60":0.022773,"61":0.007591,"62":0.015182,"63":0.053137,"64":0.053137,"65":0.07591,"66":0.030364,"67":0.091092,"68":0.098683,"69":0.129047,"70":0.235321,"71":0.258094,"72":1.935705,"73":32.254159,"74":0.113865,"75":0.030364,_:"76"},C:{"2":0,"3":0.007591,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.007591,"16":0.007591,"17":0,"18":0,"19":0,"20":0,"21":0.007591,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.007591,"28":0,"29":0,"30":0,"31":0.007591,"32":0.007591,"33":0.007591,"34":0,"35":0.007591,"36":0,"37":0.015182,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.007591,"46":0,"47":0.060728,"48":0.022773,"49":0,"50":0.015182,"51":0.015182,"52":0.242912,"53":0.007591,"54":0.007591,"55":0.015182,"56":0.129047,"57":0.015182,"58":0.007591,"59":0.015182,"60":0.334004,"61":0.015182,"62":0.022773,"63":0.060728,"64":0.098683,"65":0.288458,"66":4.182641,"67":0.022773,"68":0.015182,"3.5":0.007591,"3.6":0.022773},F:{"9":0,"11":0,"12":0.007591,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.015182,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.007591,"37":0,"38":0,"39":0,"40":0.007591,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.007591,"56":0.007591,"57":0,"58":0.956466,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.007591,"12.1":0.030364},E:{"4":0.007591,"5":0,"6":0,"7":0,"8":0.022773,"9":0,"10":0.015182,"11":0.083501,"12":3.059173,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.060728,"10.1":0.174593,"11.1":0.37955,"12.1":0.98683},G:{"8":0.11261913819674,"3.2":0.0073129310517362,"4.0-4.1":0.0043877586310417,"4.2-4.3":0.0014625862103472,"5.0-5.1":0.014625862103472,"6.0-6.1":0.0073129310517362,"7.0-7.1":0.02632655178625,"8.1-8.4":0.057040862203542,"9.0-9.2":0.033639482837987,"9.3":0.27935396617632,"10.0-10.2":0.15503413829681,"10.3":0.37003431121785,"11.0-11.2":0.45632689762834,"11.3-11.4":0.93751776083258,"12.0-12.1":5.6602086340438,"12.2":6.4924201877314},I:{"3":0.0005919627016129,"4":0.085242629032258,_:"67","2.1":0.0041437389112903,"2.2":0.0071035524193548,"2.3":0.0041437389112903,"4.1":0.042621314516129,"4.2-4.3":0.18469236290323,"4.4":0,"4.4.3-4.4.4":0.25868770060484},A:{"6":0.0076204987046632,"7":0.0076204987046632,"8":0.038102493523316,"9":0.068584488341969,"10":0.02286149611399,"11":5.7382355246114,"5.5":0},B:{"12":0,"13":0.007591,"14":0.022773,"15":0.030364,"16":0.159411,"17":1.108286,"18":0.470642},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.16562747826087,"5.0-5.4":0.041406869565217,"6.2-6.4":0.031055152173913,"7.2-7.4":0.17597919565217,"8.2":1.0662268913043,"9.2":1.3767784130435},N:{"10":0,"11":0.045771},J:{"7":0,"10":0.002409},S:{"2.5":0},R:{_:"0"},M:{"0":0.178266},O:{"0":0.026499},Q:{"1.2":0.004818},H:{"0":0.11859564948454},L:{"0":22.809395}};


/***/ }),
/* 317 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007766,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.007766,"20":0,"21":0,"22":0.007766,"23":0,"24":0.015532,"25":0,"26":0.085426,"27":0.007766,"28":0.007766,"29":0.007766,"30":0.015532,"31":0.031064,"32":0.007766,"33":0.093192,"34":0.007766,"35":0.015532,"36":0.007766,"37":0,"38":0.015532,"39":0,"40":0.046596,"41":0.007766,"42":0,"43":0.481492,"44":0.007766,"45":0.007766,"46":0.031064,"47":0.007766,"48":0.007766,"49":0.403832,"50":0.007766,"51":0.023298,"52":0.007766,"53":0.007766,"54":0.023298,"55":0.069894,"56":0.07766,"57":0.007766,"58":0.178618,"59":0.031064,"60":0.015532,"61":0.069894,"62":0.023298,"63":0.062128,"64":0.023298,"65":0.675642,"66":1.74735,"67":0.062128,"68":0.163086,"69":0.209682,"70":0.403832,"71":1.149368,"72":1.118304,"73":39.482344,"74":0.031064,"75":0.023298,_:"76"},C:{"2":0.007766,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.007766,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.007766,"16":0,"17":0,"18":0.007766,"19":0,"20":0,"21":0.007766,"22":0,"23":0.007766,"24":0,"25":0.007766,"26":0,"27":0,"28":0,"29":0,"30":0.015532,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.031064,"39":0.015532,"40":0.007766,"41":0.007766,"42":0.007766,"43":0.023298,"44":0.007766,"45":0.007766,"46":0,"47":0.031064,"48":0.046596,"49":0.015532,"50":0.007766,"51":0.015532,"52":0.636812,"53":0.007766,"54":0.007766,"55":0.007766,"56":0.015532,"57":0.007766,"58":0.11649,"59":0.007766,"60":0.132022,"61":0.007766,"62":0.015532,"63":0.015532,"64":0.023298,"65":0.100958,"66":4.07715,"67":0.139788,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.007766,"37":0.023298,"38":0,"39":0,"40":0,"41":0,"42":0.007766,"43":0.015532,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.264044,"57":0.007766,"58":2.228842,"9.5-9.6":0,"10.0-10.1":0.007766,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.007766},E:{"4":0,"5":0.007766,"6":0,"7":0,"8":0.007766,"9":0.007766,"10":0.023298,"11":0.023298,"12":0.19415,_:"0","3.1":0,"3.2":0,"5.1":0.473726,"6.1":0,"7.1":0,"9.1":0.046596,"10.1":0.054362,"11.1":0.062128,"12.1":0.264044},G:{"8":0.040661239667767,"3.2":0.0026403402381667,"4.0-4.1":0.0015842041429,"4.2-4.3":0.00052806804763334,"5.0-5.1":0.0052806804763334,"6.0-6.1":0.0026403402381667,"7.0-7.1":0.0095052248574002,"8.1-8.4":0.0205946538577,"9.0-9.2":0.012145565095567,"9.3":0.10086099709797,"10.0-10.2":0.055975213049134,"10.3":0.13360121605124,"11.0-11.2":0.1647572308616,"11.3-11.4":0.33849161853297,"12.0-12.1":2.043623344341,"12.2":2.3440940634444},I:{"3":0.0011570141129032,"4":0.16661003225806,_:"67","2.1":0.0080990987903226,"2.2":0.013884169354839,"2.3":0.0080990987903226,"4.1":0.083305016129032,"4.2-4.3":0.36098840322581,"4.4":0,"4.4.3-4.4.4":0.50561516733871},A:{"6":0,"7":0,"8":0.062379530364372,"9":0.031189765182186,"10":0.062379530364372,"11":1.7700191740891,"5.5":0},B:{"12":0.015532,"13":0.015532,"14":0.023298,"15":0.023298,"16":0.163086,"17":0.597982,"18":0.108724},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.28400625806452,"5.0-5.4":0.020286161290323,"6.2-6.4":0.030429241935484,"7.2-7.4":0.10143080645161,"8.2":0.42600938709677,"9.2":0.39558014516129},N:{"10":0.0125104,"11":0.0500416},J:{"7":0,"10":0.004468},S:{"2.5":0},R:{_:"0"},M:{"0":0.087126},O:{"0":0.341802},Q:{"1.2":0.004468},H:{"0":0.31302101718213},L:{"0":30.183474}};


/***/ }),
/* 318 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.04072,"28":0,"29":0,"30":0,"31":0,"32":0.057008,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.114016,"41":0,"42":0,"43":0.114016,"44":0,"45":0.04072,"46":0,"47":0,"48":0,"49":0,"50":1.311184,"51":0,"52":0.4072,"53":0,"54":6.319744,"55":0,"56":0,"57":0,"58":0,"59":0.741104,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0.04072,"69":0.089584,"70":0.114016,"71":0.871408,"72":0.77368,"73":1.514784,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0.57008,"5":0,"6":0,"7":0,"8":0,"9":0.276896,"10":0.016288,"11":0.36648,"12":0.016288,"13":0.089584,"14":0.073296,"15":0.716672,"16":0,"17":0,"18":0,"19":0.057008,"20":0,"21":0.073296,"22":0.016288,"23":2.386192,"24":0.390912,"25":0.016288,"26":0.04072,"27":0,"28":0,"29":0.146592,"30":0.016288,"31":0.16288,"32":0.057008,"33":0.146592,"34":0,"35":0.057008,"36":0.553792,"37":0.016288,"38":1.6288,"39":0,"40":3.102864,"41":0.293184,"42":1.807968,"43":1.091296,"44":0.439776,"45":0.16288,"46":1.807968,"47":1.197168,"48":0.920272,"49":0.390912,"50":0.130304,"51":0.317616,"52":1.58808,"53":4.617648,"54":0.219888,"55":0.057008,"56":0.594512,"57":4.96784,"58":0.146592,"59":0.187312,"60":0.276896,"61":1.8324,"62":8.086992,"63":0.594512,"64":2.36176,"65":4.60136,"66":1.677664,"67":0.317616,"68":0,"3.5":0,"3.6":0.016288},F:{"9":0,"11":0,"12":0,"15":0.016288,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.016288,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.016288,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.016288,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.04072,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.741104,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.016288,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.016288,"12.1":0.057008},G:{"8":0.017222233163214,"3.2":0.0011183268287801,"4.0-4.1":0.00067099609726809,"4.2-4.3":0.00022366536575603,"5.0-5.1":0.0022366536575603,"6.0-6.1":0.0011183268287801,"7.0-7.1":0.0040259765836085,"8.1-8.4":0.0087229492644851,"9.0-9.2":0.0051443034123887,"9.3":0.042720084859402,"10.0-10.2":0.023708528770139,"10.3":0.056587337536275,"11.0-11.2":0.069783594115881,"11.3-11.4":0.14336949944961,"12.0-12.1":0.86558496547583,"12.2":0.99285055859101},I:{"3":0.00053743548387097,"4":0.077390709677419,_:"67","2.1":0.0037620483870968,"2.2":0.0064492258064516,"2.3":0.0037620483870968,"4.1":0.03869535483871,"4.2-4.3":0.16767987096774,"4.4":0,"4.4.3-4.4.4":0.23485930645161},A:{"6":0,"7":0,"8":0.089584,"9":0,"10":0.219888,"11":0.236176,"5.5":0},B:{"12":0.016288,"13":0.146592,"14":0,"15":0.057008,"16":0.146592,"17":0.219888,"18":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":3.5698673322091,"5.0-5.4":0.14118119392917,"6.2-6.4":0.070590596964587,"7.2-7.4":0.50421854974705,"8.2":1.2807151163575,"9.2":0.41345921079258},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.892736},O:{"0":3.093952},Q:{"1.2":0},H:{"0":0.10894273539519},L:{"0":13.088752}};


/***/ }),
/* 319 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005657,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005657,"23":0,"24":0,"25":0.011314,"26":0,"27":0,"28":0,"29":0.045256,"30":0.005657,"31":0.005657,"32":0,"33":0,"34":0.005657,"35":0,"36":0,"37":0.005657,"38":0.016971,"39":0.005657,"40":0.005657,"41":0.005657,"42":0,"43":0.005657,"44":0.005657,"45":0.005657,"46":0.005657,"47":0.005657,"48":0.005657,"49":0.593985,"50":0.005657,"51":0.011314,"52":0.005657,"53":0.011314,"54":0.011314,"55":0.011314,"56":0.022628,"57":0.022628,"58":0.028285,"59":0.016971,"60":0.016971,"61":0.152739,"62":0.033942,"63":0.084855,"64":0.039599,"65":0.067884,"66":0.039599,"67":0.11314,"68":0.050913,"69":0.079198,"70":0.124454,"71":0.181024,"72":0.854207,"73":17.853492,"74":0.022628,"75":0.011314,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005657,"32":0.005657,"33":0,"34":0,"35":0.005657,"36":0,"37":0,"38":0.011314,"39":0.005657,"40":0.005657,"41":0.005657,"42":0.005657,"43":0.005657,"44":0,"45":0.022628,"46":0.016971,"47":0.011314,"48":0.084855,"49":0.011314,"50":0.011314,"51":0.016971,"52":0.220623,"53":0.005657,"54":0.005657,"55":0.028285,"56":0.022628,"57":0.028285,"58":0.016971,"59":0.011314,"60":0.096169,"61":0.016971,"62":0.016971,"63":0.028285,"64":0.073541,"65":0.192338,"66":2.845471,"67":0.022628,"68":0,"3.5":0,"3.6":0.005657},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.011314,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.005657,"58":0.424275,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005657},E:{"4":0,"5":0,"6":0.005657,"7":0.011314,"8":0.011314,"9":0.033942,"10":0.028285,"11":0.05657,"12":0.956033,_:"0","3.1":0,"3.2":0,"5.1":0.033942,"6.1":0.016971,"7.1":0,"9.1":0.05657,"10.1":0.124454,"11.1":0.231937,"12.1":0.593985},G:{"8":0.10965917282097,"3.2":0.0071207255078555,"4.0-4.1":0.0042724353047133,"4.2-4.3":0.0014241451015711,"5.0-5.1":0.014241451015711,"6.0-6.1":0.0071207255078555,"7.0-7.1":0.02563461182828,"8.1-8.4":0.055541658961273,"9.0-9.2":0.032755337336135,"9.3":0.27201171440008,"10.0-10.2":0.15095938076654,"10.3":0.36030871069749,"11.0-11.2":0.44433327169018,"11.3-11.4":0.91287701010708,"12.0-12.1":5.5114415430802,"12.2":6.3217801058741},I:{"3":0.00054832862903226,"4":0.078959322580645,_:"67","2.1":0.0038383004032258,"2.2":0.0065799435483871,"2.3":0.0038383004032258,"4.1":0.039479661290323,"4.2-4.3":0.17107853225806,"4.4":0,"4.4.3-4.4.4":0.2396196108871},A:{"6":0,"7":0.0057055579399142,"8":0.062761137339056,"9":0.028527789699571,"10":0.017116673819742,"11":1.2152838412017,"5.5":0},B:{"12":0.005657,"13":0.005657,"14":0.016971,"15":0.028285,"16":0.050913,"17":1.046545,"18":0.254565},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.21916462357414,"5.0-5.4":0.020872821292776,"6.2-6.4":0.041745642585551,"7.2-7.4":0.15654615969582,"8.2":1.0123318326996,"9.2":1.2941149201521},N:{"10":0,"11":0.047773},J:{"7":0,"10":0.004343},S:{"2.5":0},R:{_:"0"},M:{"0":0.208464},O:{"0":0.056459},Q:{"1.2":0.017372},H:{"0":0.1397968419244},L:{"0":50.131556}};


/***/ }),
/* 320 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.004422,"11":0.017688,"12":0,"13":0,"14":0.004422,"15":0,"16":0,"17":0,"18":0,"19":0.013266,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.004422,"26":0.039798,"27":0,"28":0,"29":0,"30":0.004422,"31":0.092862,"32":0.004422,"33":0.168036,"34":0.004422,"35":0,"36":0.004422,"37":0.004422,"38":0.004422,"39":0,"40":0.181302,"41":0,"42":0.004422,"43":0.866712,"44":0.004422,"45":0.004422,"46":0.013266,"47":0.004422,"48":0.004422,"49":0.048642,"50":0.008844,"51":0.017688,"52":0.004422,"53":0.026532,"54":0,"55":0.013266,"56":0.004422,"57":0.013266,"58":0.070752,"59":0.008844,"60":0.030954,"61":0.13266,"62":0.008844,"63":0.079596,"64":0.02211,"65":0.168036,"66":0.017688,"67":0.04422,"68":0.026532,"69":0.097284,"70":0.190146,"71":0.406824,"72":0.411246,"73":6.902742,"74":0.04422,"75":0.02211,_:"76"},C:{"2":0,"3":0.004422,"4":0.004422,"5":0.008844,"6":0.004422,"7":0,"8":0.004422,"9":0,"10":0.004422,"11":0.004422,"12":0.004422,"13":0,"14":0.004422,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.02211,"21":0,"22":0,"23":0.004422,"24":0.008844,"25":0.008844,"26":0.008844,"27":0.004422,"28":0.004422,"29":0.013266,"30":0.013266,"31":0.017688,"32":0.013266,"33":0.013266,"34":0.02211,"35":0.013266,"36":0.013266,"37":0.030954,"38":0.017688,"39":0.008844,"40":0.013266,"41":0.013266,"42":0.026532,"43":0.128238,"44":0.048642,"45":0.02211,"46":0.017688,"47":0.137082,"48":0.061908,"49":0.030954,"50":0.02211,"51":0.008844,"52":0.15477,"53":0.017688,"54":0.008844,"55":0.008844,"56":0.048642,"57":0.035376,"58":0.026532,"59":0.013266,"60":0.11055,"61":0.070752,"62":0.061908,"63":0.048642,"64":0.057486,"65":0.30954,"66":2.175624,"67":0.504108,"68":0.004422,"3.5":0,"3.6":0.004422},F:{"9":0,"11":0,"12":0.004422,"15":0.004422,"16":0.004422,"17":0.004422,"18":0.013266,"19":0.013266,"20":0.061908,"21":0.013266,"22":0.008844,"23":0.04422,"24":0,"25":0.008844,"26":0.004422,"27":0.004422,"28":0.017688,"29":0.030954,"30":0.030954,"31":0,"32":0.008844,"33":0.008844,"34":0.004422,"35":0.017688,"36":0.013266,"37":0.008844,"38":0.02211,"39":0,"40":0.004422,"41":0,"42":0.008844,"43":0.008844,"44":0,"45":0.008844,"46":0.004422,"47":0,"48":0.004422,"49":0.004422,"50":0.004422,"51":0.004422,"52":0.004422,"53":0.004422,"54":0,"55":0,"56":0.008844,"57":0.02211,"58":1.441572,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.097284},E:{"4":0,"5":0,"6":0,"7":0.004422,"8":0.123816,"9":0.013266,"10":0.026532,"11":0.017688,"12":0.137082,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.057486,"10.1":0.008844,"11.1":0.02211,"12.1":0.048642},G:{"8":0.018078703092165,"3.2":0.0011739417592315,"4.0-4.1":0.00070436505553888,"4.2-4.3":0.00023478835184629,"5.0-5.1":0.0023478835184629,"6.0-6.1":0.0011739417592315,"7.0-7.1":0.0042261903332333,"8.1-8.4":0.0091567457220054,"9.0-9.2":0.0054001320924647,"9.3":0.044844575202642,"10.0-10.2":0.024887565295707,"10.3":0.059401453017112,"11.0-11.2":0.073253965776043,"11.3-11.4":0.15049933353347,"12.0-12.1":0.90863092164515,"12.2":1.0422254938457},I:{"3":0.004773439516129,"4":0.68737529032258,_:"67","2.1":0.033414076612903,"2.2":0.057281274193548,"2.3":0.033414076612903,"4.1":0.34368764516129,"4.2-4.3":1.4893131290323,"4.4":0,"4.4.3-4.4.4":2.0859930685484},A:{"6":0,"7":0,"8":0.10788218181818,"9":0.0089901818181818,"10":0.026970545454545,"11":0.40006309090909,"5.5":0},B:{"12":0.114972,"13":0.141504,"14":0.04422,"15":0.030954,"16":0.252054,"17":0.33165,"18":0.08844},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.63983869811321,"5.0-5.4":0.2945289245283,"6.2-6.4":0.11171786792453,"7.2-7.4":0.26406041509434,"8.2":0.67030720754717,"9.2":0.17265488679245},N:{"10":0.033468,"11":0.078092},J:{"7":0,"10":0.005578},S:{"2.5":0.011156},R:{_:"0"},M:{"0":0.356992},O:{"0":3.441626},Q:{"1.2":0.039046},H:{"0":20.394797312715},L:{"0":32.389132}};


/***/ }),
/* 321 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006355,"35":0,"36":0,"37":0.02542,"38":0.019065,"39":0,"40":0.006355,"41":0.02542,"42":0,"43":0.019065,"44":0.006355,"45":0,"46":0,"47":0.01271,"48":0.006355,"49":0.33046,"50":0.006355,"51":0.006355,"52":0,"53":0.006355,"54":0.006355,"55":0.02542,"56":0.057195,"57":1.366325,"58":0.031775,"59":0.11439,"60":0.01271,"61":0.031775,"62":0.095325,"63":0.108035,"64":0.11439,"65":0.082615,"66":0.05084,"67":0.07626,"68":0.07626,"69":0.07626,"70":0.94054,"71":2.433965,"72":1.607815,"73":16.523,"74":0.03813,"75":0.006355,_:"76"},C:{"2":0,"3":0,"4":0.006355,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.006355,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006355,"35":0,"36":0,"37":0.01271,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.01271,"44":0,"45":0.01271,"46":0.006355,"47":0.006355,"48":0.031775,"49":0,"50":0.01271,"51":0.01271,"52":0.158875,"53":0,"54":0.01271,"55":0.006355,"56":0.03813,"57":0.031775,"58":0.01271,"59":0.019065,"60":0.39401,"61":0.019065,"62":0.03813,"63":0.05084,"64":0.06355,"65":0.29233,"66":4.84251,"67":0.05084,"68":0,"3.5":0.006355,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006355,"37":0,"38":0,"39":0,"40":0.006355,"41":0,"42":0,"43":0,"44":0.006355,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.01271,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.578305,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006355},E:{"4":0,"5":0.006355,"6":0,"7":0,"8":0.01271,"9":0.006355,"10":0.019065,"11":0.057195,"12":1.08035,_:"0","3.1":0,"3.2":0,"5.1":0.006355,"6.1":0.006355,"7.1":0,"9.1":0.03813,"10.1":0.15252,"11.1":0.20336,"12.1":0.83886},G:{"8":0.14408993895727,"3.2":0.0093564895426799,"4.0-4.1":0.0056138937256079,"4.2-4.3":0.001871297908536,"5.0-5.1":0.01871297908536,"6.0-6.1":0.0093564895426799,"7.0-7.1":0.033683362353648,"8.1-8.4":0.072980618432903,"9.0-9.2":0.043039851896327,"9.3":0.35741790053037,"10.0-10.2":0.19835757830481,"10.3":0.4734383708596,"11.0-11.2":0.58384494746322,"11.3-11.4":1.1995019593716,"12.0-12.1":7.2419229060342,"12.2":8.3066914159912},I:{"3":0.00043912298387097,"4":0.063233709677419,_:"67","2.1":0.0030738608870968,"2.2":0.0052694758064516,"2.3":0.0030738608870968,"4.1":0.03161685483871,"4.2-4.3":0.13700637096774,"4.4":0,"4.4.3-4.4.4":0.19189674395161},A:{"6":0.0064191919191919,"7":0,"8":0.038515151515152,"9":0.019257575757576,"10":0.019257575757576,"11":1.8230505050505,"5.5":0},B:{"12":0.01271,"13":0.006355,"14":0.044485,"15":0.06355,"16":0.095325,"17":1.34726,"18":0.362235},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.23589873786408,"5.0-5.4":0.04289067961165,"6.2-6.4":0.064336019417476,"7.2-7.4":0.46107480582524,"8.2":1.5118964563107,"9.2":0.99720830097087},N:{"10":0,"11":0.09477},J:{"7":0,"10":0.003645},S:{"2.5":0},R:{_:"0"},M:{"0":0.45927},O:{"0":0.083835},Q:{"1.2":0.003645},H:{"0":0.2967731443299},L:{"0":36.299525}};


/***/ }),
/* 322 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.010692,"19":0,"20":0,"21":0.235224,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005346,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.005346,"39":0.005346,"40":0,"41":0,"42":0.005346,"43":0.005346,"44":0,"45":0,"46":0.005346,"47":0,"48":0,"49":0.085536,"50":0.005346,"51":0,"52":0,"53":0.010692,"54":0,"55":0.005346,"56":0.010692,"57":0,"58":0.069498,"59":0.005346,"60":0.630828,"61":0.016038,"62":0.261954,"63":0.2673,"64":0.005346,"65":0.117612,"66":0.032076,"67":0.064152,"68":0.090882,"69":0.155034,"70":0.096228,"71":0.112266,"72":0.604098,"73":15.722586,"74":0.010692,"75":0.005346,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.005346,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.010692,"29":0.005346,"30":0,"31":0,"32":0,"33":0,"34":0.005346,"35":0,"36":0,"37":0,"38":0.005346,"39":0,"40":0,"41":0,"42":0,"43":0.021384,"44":0,"45":0.016038,"46":0,"47":0.02673,"48":0.283338,"49":0.005346,"50":0,"51":0,"52":0.032076,"53":0.005346,"54":0,"55":0.005346,"56":0.016038,"57":0.010692,"58":0.021384,"59":0,"60":0.433026,"61":0.016038,"62":0.010692,"63":0.042768,"64":0.02673,"65":0.18711,"66":2.86011,"67":0.171072,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0.048114,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.010692,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.005346,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.251262,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.005346,"10":0.010692,"11":0.064152,"12":0.411642,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.010692,"10.1":0.155034,"11.1":0.192456,"12.1":0.315414},G:{"8":0.062644111678175,"3.2":0.0040677994596217,"4.0-4.1":0.002440679675773,"4.2-4.3":0.00081355989192435,"5.0-5.1":0.0081355989192435,"6.0-6.1":0.0040677994596217,"7.0-7.1":0.014644078054638,"8.1-8.4":0.03172883578505,"9.0-9.2":0.01871187751426,"9.3":0.15538993935755,"10.0-10.2":0.086237348543981,"10.3":0.20583065265686,"11.0-11.2":0.2538306862804,"11.3-11.4":0.52149189072351,"12.0-12.1":3.1484767817472,"12.2":3.6113923602522},I:{"3":0.00062220967741935,"4":0.089598193548387,_:"67","2.1":0.0043554677419355,"2.2":0.0074665161290323,"2.3":0.0043554677419355,"4.1":0.044799096774194,"4.2-4.3":0.19412941935484,"4.4":0,"4.4.3-4.4.4":0.27190562903226},A:{"6":0,"7":0,"8":0.03335904,"9":0.01111968,"10":0.01111968,"11":0.5003856,"5.5":0},B:{"12":0.032076,"13":0.05346,"14":0.064152,"15":0.08019,"16":0.10692,"17":1.144044,"18":0.128304},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.2738842640449,"5.0-5.4":0.1638835505618,"6.2-6.4":0.30728165730337,"7.2-7.4":0.87063136235955,"8.2":2.7450494719101,"9.2":0.93208769382022},N:{"10":0.0111696,"11":0.0446784},J:{"7":0,"10":0.004654},S:{"2.5":0},R:{_:"0"},M:{"0":0.218738},O:{"0":2.010528},Q:{"1.2":0.111696},H:{"0":0.7798808556701},L:{"0":48.625052}};


/***/ }),
/* 323 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.078364,"50":0,"51":0,"52":0,"53":0.117546,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.548548,"72":0.078364,"73":3.611868,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.117546,"51":0,"52":0.078364,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.039182,"64":0,"65":0.078364,"66":0.865566,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.156728,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.039182,"9":0.39182,"10":0,"11":0.078364,"12":0.039182,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.039182,"10.1":0,"11.1":0.274274,"12.1":0},G:{"8":0.38878068227759,"3.2":0.025245498849194,"4.0-4.1":0.015147299309517,"4.2-4.3":0.0050490997698389,"5.0-5.1":0.050490997698389,"6.0-6.1":0.025245498849194,"7.0-7.1":0.0908837958571,"8.1-8.4":0.19691489102372,"9.0-9.2":0.11612929470629,"9.3":0.96437805603923,"10.0-10.2":0.53520457560292,"10.3":1.2774222417692,"11.0-11.2":1.5753191281897,"11.3-11.4":3.2364729524667,"12.0-12.1":19.540016109276,"12.2":22.412953878315},I:{"3":0.0001184939516129,"4":0.017063129032258,_:"67","2.1":0.00082945766129032,"2.2":0.0014219274193548,"2.3":0.00082945766129032,"4.1":0.008531564516129,"4.2-4.3":0.036970112903226,"4.4":0,"4.4.3-4.4.4":0.051781856854839},A:{"6":0,"7":0,"8":0.039182,"9":0,"10":0,"11":1.649206,"5.5":0},B:{"12":0,"13":0,"14":0.117546,"15":0,"16":0,"17":0.431002,"18":0.156728},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.57214226086957,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":1.1442845217391,"8.2":0.57214226086957,"9.2":1.0012489565217},N:{"10":0,"11":0.572982},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":35.469292}};


/***/ }),
/* 324 */
/***/ (function(module, exports) {

module.exports={D:{"5":0.016947,"40":0.011298,"45":0.011298,"46":0.011298,"49":0.220311,"54":0.344589,"55":0.355887,"56":0.011298,"57":0.039543,"59":0.11298,"60":0.016947,"62":0.016947,"63":0.016947,"65":0.011298,"67":0.355887,"68":0.011298,"69":0.11298,"70":0.305046,"71":0.084735,"72":5.123643,"73":27.668802,"74":0.016947,_:"4 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 41 42 43 44 47 48 50 51 52 53 58 61 64 66 75 76"},C:{"7":0.016947,"10":0.141225,"13":0.039543,"28":0.073437,"45":0.118629,"46":0.011298,"47":0.045192,"48":0.073437,"52":0.016947,"57":0.016947,"59":0.067788,"60":0.05649,"63":0.011298,"64":1.971501,"65":0.316344,"66":4.5192,"67":0.50841,_:"2 3 4 5 6 8 9 11 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 49 50 51 53 54 55 56 58 61 62 68 3.5 3.6"},F:{"58":0.73437,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},E:{"4":0,"9":0.016947,"10":0.67788,"12":0.762615,_:"0 5 6 7 8 11 3.1 3.2 6.1 7.1","5.1":0.090384,"9.1":0.028245,"10.1":0.039543,"11.1":0.101682,"12.1":0.372834},G:{"8":0.039518267787451,"3.2":0.0025661212848994,"4.0-4.1":0.0015396727709397,"4.2-4.3":0.00051322425697989,"5.0-5.1":0.0051322425697989,"6.0-6.1":0.0025661212848994,"7.0-7.1":0.0092380366256379,"8.1-8.4":0.020015746022216,"9.0-9.2":0.011804157910537,"9.3":0.098025833083158,"10.0-10.2":0.054401771239868,"10.3":0.12984573701591,"11.0-11.2":0.16012596817772,"11.3-11.4":0.32897674872411,"12.0-12.1":1.9861778745122,"12.2":2.2782024767337},I:{"3":0.00010962701612903,"4":0.015786290322581,_:"67","2.1":0.00076738911290323,"2.2":0.0013155241935484,"2.3":0.00076738911290323,"4.1":0.0078931451612903,"4.2-4.3":0.034203629032258,"4.4":0,"4.4.3-4.4.4":0.047907006048387},A:{"9":0.158172,"11":3.67185,_:"6 7 8 10 5.5"},B:{"12":0.028245,"13":0.073437,"14":0.220311,"15":0.197715,"16":0.118629,"17":1.63821,"18":0.101682},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.05842420212766,"5.0-5.4":0.011684840425532,"6.2-6.4":0.17527260638298,"7.2-7.4":0.035054521276596,"8.2":1.5307140957447,"9.2":0.38559973404255},N:{"10":0,"11":0.0609},J:{"7":0,"10":0},S:{_:"2.5"},R:{_:"0"},M:{"0":0.0348},O:{"0":0.80475},Q:{_:"1.2"},H:{"0":1.1490054123711},L:{"0":38.207532}};


/***/ }),
/* 325 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005633,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005633,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.022532,"34":0.011266,"35":0,"36":0,"37":0,"38":0.005633,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.315448,"50":0,"51":0,"52":0,"53":0.039431,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0.005633,"62":0.005633,"63":0,"64":0,"65":0.011266,"66":0.084495,"67":0.050697,"68":0.016899,"69":0.005633,"70":0.022532,"71":0.174623,"72":0.461906,"73":11.806768,"74":0.016899,"75":0.011266,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.005633,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.022532,"49":0,"50":0.011266,"51":0,"52":0.033798,"53":0,"54":0,"55":0,"56":0,"57":0.005633,"58":0,"59":0.005633,"60":0.326714,"61":0,"62":0.005633,"63":0.005633,"64":0.016899,"65":0.118293,"66":1.898321,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.005633,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.118293,"9.5-9.6":0,"10.0-10.1":0.005633,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.028165,"9":0,"10":0,"11":0.033798,"12":0.529502,_:"0","3.1":0,"3.2":0,"5.1":0.011266,"6.1":0.011266,"7.1":0,"9.1":0.140825,"10.1":0.16899,"11.1":0.214054,"12.1":0.456273},G:{"8":0.36243160282198,"3.2":0.023534519663765,"4.0-4.1":0.014120711798259,"4.2-4.3":0.0047069039327529,"5.0-5.1":0.047069039327529,"6.0-6.1":0.023534519663765,"7.0-7.1":0.084724270789553,"8.1-8.4":0.18356925337736,"9.0-9.2":0.10825879045332,"9.3":0.89901865115581,"10.0-10.2":0.49893181687181,"10.3":1.1908466949865,"11.0-11.2":1.4685540270189,"11.3-11.4":3.0171254208946,"12.0-12.1":18.215718219754,"12.2":20.89394655749},I:{"3":0.000089449596774194,"4":0.012880741935484,_:"67","2.1":0.00062614717741935,"2.2":0.0010733951612903,"2.3":0.00062614717741935,"4.1":0.0064403709677419,"4.2-4.3":0.027908274193548,"4.4":0,"4.4.3-4.4.4":0.039089473790323},A:{"6":0,"7":0.022532,"8":0.011266,"9":0.016899,"10":0.028165,"11":4.630326,"5.5":0},B:{"12":0.005633,"13":0.016899,"14":0.050697,"15":0.050697,"16":0.101394,"17":3.177012,"18":0.766088},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.24179926070039,"5.0-5.4":0.084629741245136,"6.2-6.4":0.14507955642023,"7.2-7.4":0.39896878015564,"8.2":2.2366431614786,"9.2":3.1071205},N:{"10":0,"11":0.074239},J:{"7":0,"10":0.008734},S:{"2.5":0},R:{_:"0"},M:{"0":0.13101},O:{"0":0},Q:{"1.2":0},H:{"0":0.057881508591065},L:{"0":17.135735}};


/***/ }),
/* 326 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.006188,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006188,"23":0,"24":0,"25":0,"26":0.006188,"27":0,"28":0.006188,"29":0.018564,"30":0,"31":0.006188,"32":0,"33":0,"34":0.012376,"35":0,"36":0.006188,"37":0,"38":0.037128,"39":0.006188,"40":0.012376,"41":0.018564,"42":0,"43":0.012376,"44":0.006188,"45":0.006188,"46":0.006188,"47":0.006188,"48":0.012376,"49":0.581672,"50":0.006188,"51":0.012376,"52":0.012376,"53":0.024752,"54":0.575484,"55":0.037128,"56":0.024752,"57":0.080444,"58":0.03094,"59":0.018564,"60":0.024752,"61":0.396032,"62":0.129948,"63":0.210392,"64":0.148512,"65":0.160888,"66":0.068068,"67":0.099008,"68":0.074256,"69":0.080444,"70":0.105196,"71":0.253708,"72":1.287104,"73":16.930368,"74":0.018564,"75":0.012376,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006188,"12":0.006188,"13":0,"14":0,"15":0.006188,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.006188,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.006188,"34":0,"35":0.006188,"36":0.006188,"37":0,"38":0.012376,"39":0,"40":0,"41":0,"42":0,"43":0.006188,"44":0,"45":0.043316,"46":0.012376,"47":0.012376,"48":0.198016,"49":0.006188,"50":0.018564,"51":0.012376,"52":0.396032,"53":0.012376,"54":0.012376,"55":0.012376,"56":0.049504,"57":0.068068,"58":0.037128,"59":0.037128,"60":0.377468,"61":0.049504,"62":0.03094,"63":0.03094,"64":0.06188,"65":0.321776,"66":4.467736,"67":0.03094,"68":0,"3.5":0,"3.6":0.006188},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.006188,"32":0,"33":0,"34":0,"35":0,"36":0.012376,"37":0.006188,"38":0,"39":0,"40":0.012376,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.006188,"50":0.006188,"51":0.006188,"52":0.006188,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.482664,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006188},E:{"4":0.012376,"5":0.006188,"6":0,"7":0.012376,"8":0.012376,"9":0.03094,"10":0.037128,"11":0.105196,"12":1.534624,_:"0","3.1":0,"3.2":0,"5.1":0.018564,"6.1":0.018564,"7.1":0,"9.1":0.074256,"10.1":0.179452,"11.1":0.383656,"12.1":0.952952},G:{"8":0.1466765780046,"3.2":0.009524453117182,"4.0-4.1":0.0057146718703092,"4.2-4.3":0.0019048906234364,"5.0-5.1":0.019048906234364,"6.0-6.1":0.009524453117182,"7.0-7.1":0.034288031221855,"8.1-8.4":0.07429073431402,"9.0-9.2":0.043812484339037,"9.3":0.36383410907635,"10.0-10.2":0.20191840608426,"10.3":0.48193732772941,"11.0-11.2":0.59432587451216,"11.3-11.4":1.2210348896227,"12.0-12.1":7.3719267126989,"12.2":8.4558094774342},I:{"3":0.00093994758064516,"4":0.1353524516129,_:"67","2.1":0.0065796330645161,"2.2":0.011279370967742,"2.3":0.0065796330645161,"4.1":0.067676225806452,"4.2-4.3":0.29326364516129,"4.4":0,"4.4.3-4.4.4":0.41075709274194},A:{"6":0,"7":0.0062935972696246,"8":0.088110361774744,"9":0.062935972696246,"10":0.075523167235495,"11":1.6111609010239,"5.5":0},B:{"12":0.012376,"13":0.012376,"14":0.03094,"15":0.055692,"16":0.105196,"17":1.33042,"18":0.488852},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.42255050847458,"5.0-5.4":0.10563762711864,"6.2-6.4":0.073946338983051,"7.2-7.4":0.23240277966102,"8.2":1.5211818305085,"9.2":1.3838529152542},N:{"10":0.0119125,"11":0.0833875},J:{"7":0,"10":0.01906},S:{"2.5":0},R:{_:"0"},M:{"0":0.293524},O:{"0":0.365952},Q:{"1.2":0.015248},H:{"0":0.23819105154639},L:{"0":36.0673}};


/***/ }),
/* 327 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.064526,"23":0,"24":0,"25":0.041481,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.004609,"32":0,"33":0,"34":0,"35":0,"36":0.050699,"37":0,"38":0.009218,"39":0,"40":0.004609,"41":0,"42":0,"43":0.013827,"44":0,"45":0.004609,"46":0.004609,"47":0,"48":0,"49":0.433246,"50":0.004609,"51":0,"52":0,"53":0,"54":0.004609,"55":0.027654,"56":0.004609,"57":0,"58":0.059917,"59":0.009218,"60":0.013827,"61":0.004609,"62":0.009218,"63":0.188969,"64":0.013827,"65":0.336457,"66":0.004609,"67":0.096789,"68":0.096789,"69":0.023045,"70":0.041481,"71":0.087571,"72":0.631433,"73":9.595938,"74":0,"75":0,_:"76"},C:{"2":0,"3":0.004609,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.004609,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.004609,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.009218,"42":0,"43":0.069135,"44":0.036872,"45":0.004609,"46":0,"47":0.009218,"48":0.331848,"49":0.004609,"50":0,"51":0,"52":0.069135,"53":0.013827,"54":0.013827,"55":0.004609,"56":0.018436,"57":0.023045,"58":0.004609,"59":0,"60":0.036872,"61":0.009218,"62":0.018436,"63":0.013827,"64":0.018436,"65":0.096789,"66":2.972805,"67":0.082962,"68":0.009218,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.004609,"15":0,"16":0.004609,"17":0,"18":0.004609,"19":0.009218,"20":0.069135,"21":0.004609,"22":0.004609,"23":0.009218,"24":0,"25":0,"26":0,"27":0,"28":0.018436,"29":0,"30":0.009218,"31":0,"32":0.004609,"33":0,"34":0,"35":0,"36":0,"37":0.004609,"38":0.009218,"39":0,"40":0,"41":0,"42":0.023045,"43":0,"44":0,"45":0.009218,"46":0,"47":0,"48":0.004609,"49":0,"50":0,"51":0.004609,"52":0,"53":0,"54":0.009218,"55":0,"56":0.009218,"57":0.009218,"58":1.391918,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.09218},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.009218,"10":0.013827,"11":0.036872,"12":0.341066,_:"0","3.1":0,"3.2":0,"5.1":0.078353,"6.1":0,"7.1":0.004609,"9.1":0.004609,"10.1":0.175142,"11.1":0.110616,"12.1":0.341066},G:{"8":0.03536593895727,"3.2":0.0022964895426799,"4.0-4.1":0.0013778937256079,"4.2-4.3":0.00045929790853598,"5.0-5.1":0.0045929790853598,"6.0-6.1":0.0022964895426799,"7.0-7.1":0.0082673623536476,"8.1-8.4":0.017912618432903,"9.0-9.2":0.010563851896327,"9.3":0.087725900530371,"10.0-10.2":0.048685578304813,"10.3":0.1162023708596,"11.0-11.2":0.14330094746322,"11.3-11.4":0.29440995937156,"12.0-12.1":1.7774829060342,"12.2":2.0388234159912},I:{"3":0.0017364868951613,"4":0.25005411290323,_:"67","2.1":0.012155408266129,"2.2":0.020837842741935,"2.3":0.012155408266129,"4.1":0.12502705645161,"4.2-4.3":0.54178391129032,"4.4":0,"4.4.3-4.4.4":0.75884477318548},A:{"6":0,"7":0,"8":0.075047861842105,"9":0.0050031907894737,"10":0.040025526315789,"11":0.64040842105263,"5.5":0},B:{"12":0.082962,"13":0.027654,"14":0.106007,"15":0.04609,"16":0.069135,"17":0.419419,"18":0.087571},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.2497391879699,"5.0-5.4":0.050802406015038,"6.2-6.4":0.16256769924812,"7.2-7.4":0.38609828571429,"8.2":1.300541593985,"9.2":0.90428282706767},N:{"10":0.023191471698113,"11":0.59138252830189},J:{"7":0,"10":0.204858},S:{"2.5":0},R:{_:"0"},M:{"0":0.070083},O:{"0":0.948816},Q:{"1.2":0.134775},H:{"0":7.7935797371134},L:{"0":51.774599}};


/***/ }),
/* 328 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005666,"23":0,"24":0,"25":0.011332,"26":0,"27":0,"28":0,"29":0.033996,"30":0,"31":0,"32":0,"33":0,"34":0.005666,"35":0.005666,"36":0,"37":0,"38":0.022664,"39":0.005666,"40":0.073658,"41":0.011332,"42":0,"43":0.011332,"44":0,"45":0.005666,"46":0.005666,"47":0.005666,"48":0,"49":0.19831,"50":0.005666,"51":0.005666,"52":0.005666,"53":0.011332,"54":0.022664,"55":0.022664,"56":0.033996,"57":0.016998,"58":0.022664,"59":0.039662,"60":0.011332,"61":0.118986,"62":0.033996,"63":0.090656,"64":0.039662,"65":0.079324,"66":0.067992,"67":0.090656,"68":0.096322,"69":0.096322,"70":0.090656,"71":0.203976,"72":1.308846,"73":15.196212,"74":0.033996,"75":0.011332,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.005666,"31":0,"32":0,"33":0,"34":0.005666,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.005666,"44":0,"45":0.011332,"46":0,"47":0.005666,"48":0.062326,"49":0.005666,"50":0.005666,"51":0.005666,"52":0.11332,"53":0,"54":0.005666,"55":0.005666,"56":0.016998,"57":0.016998,"58":0.005666,"59":0.011332,"60":0.067992,"61":0.011332,"62":0.005666,"63":0.022664,"64":0.039662,"65":0.147316,"66":1.801788,"67":0.022664,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005666,"32":0.005666,"33":0,"34":0,"35":0,"36":0.005666,"37":0,"38":0,"39":0,"40":0.005666,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.334294,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005666},E:{"4":0,"5":0.005666,"6":0,"7":0,"8":0.011332,"9":0.011332,"10":0.022664,"11":0.062326,"12":1.144532,_:"0","3.1":0,"3.2":0,"5.1":0.011332,"6.1":0.005666,"7.1":0,"9.1":0.067992,"10.1":0.14165,"11.1":0.271968,"12.1":0.759244},G:{"8":0.27049262423697,"3.2":0.017564456119284,"4.0-4.1":0.01053867367157,"4.2-4.3":0.0035128912238567,"5.0-5.1":0.035128912238567,"6.0-6.1":0.017564456119284,"7.0-7.1":0.063232042029421,"8.1-8.4":0.13700275773041,"9.0-9.2":0.080796498148704,"9.3":0.67096222375663,"10.0-10.2":0.37236646972881,"10.3":0.88876147963575,"11.0-11.2":1.0960220618433,"11.3-11.4":2.2517632744921,"12.0-12.1":13.594889036325,"12.2":15.5937241427},I:{"3":0.0010473245967742,"4":0.15081474193548,_:"67","2.1":0.0073312721774194,"2.2":0.01256789516129,"2.3":0.0073312721774194,"4.1":0.075407370967742,"4.2-4.3":0.32676527419355,"4.4":0,"4.4.3-4.4.4":0.45768084879032},A:{"6":0,"7":0.017088414893617,"8":0.022784553191489,"9":0.022784553191489,"10":0.034176829787234,"11":2.0449136489362,"5.5":0},B:{"12":0.011332,"13":0.016998,"14":0.045328,"15":0.08499,"16":0.124652,"17":1.631808,"18":0.889562},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.236544,"5.0-5.4":0.045056,"6.2-6.4":0.05632,"7.2-7.4":0.157696,"8.2":1.419264,"9.2":2.523136},N:{"10":0,"11":0.117018},J:{"7":0,"10":0.017336},S:{"2.5":0},R:{_:"0"},M:{"0":0.190696},O:{"0":0.10835},Q:{"1.2":0.013002},H:{"0":0.16002289690722},L:{"0":27.282952}};


/***/ }),
/* 329 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.1196,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.0046,"35":0,"36":0,"37":0,"38":0,"39":0.0046,"40":0,"41":0,"42":0.0046,"43":0.0046,"44":0,"45":0,"46":0.0046,"47":0,"48":0,"49":0.1104,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.0092,"56":0,"57":0.0092,"58":0.0276,"59":0.0046,"60":0,"61":0,"62":0.0092,"63":0.1012,"64":0,"65":0.069,"66":0.0138,"67":0.0276,"68":0.0184,"69":0.0092,"70":0.023,"71":0.0322,"72":0.5014,"73":11.8726,"74":0.0138,"75":0.023,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.0092,"52":0.0092,"53":0,"54":0,"55":0,"56":0.0046,"57":0.0138,"58":0,"59":0,"60":0.0276,"61":0.0046,"62":0,"63":0.0046,"64":0.0092,"65":0.4738,"66":1.3524,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.0046,"15":0,"16":0,"17":0.0046,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.0184,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.1748,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.0046,"10":0.023,"11":0.0046,"12":0.4048,_:"0","3.1":0,"3.2":0,"5.1":0.0092,"6.1":0,"7.1":0,"9.1":0.0184,"10.1":0.023,"11.1":0.0782,"12.1":0.8326},G:{"8":0.088128129690784,"3.2":0.0057226058240769,"4.0-4.1":0.0034335634944461,"4.2-4.3":0.0011445211648154,"5.0-5.1":0.011445211648154,"6.0-6.1":0.0057226058240769,"7.0-7.1":0.020601380966677,"8.1-8.4":0.044636325427799,"9.0-9.2":0.026323986790754,"9.3":0.21860354247974,"10.0-10.2":0.12131924347043,"10.3":0.28956385469829,"11.0-11.2":0.3570906034224,"11.3-11.4":0.73363806664665,"12.0-12.1":4.4292969078355,"12.2":5.0805294506154},I:{"3":0.0019635080645161,"4":0.28274516129032,_:"67","2.1":0.013744556451613,"2.2":0.023562096774194,"2.3":0.013744556451613,"4.1":0.14137258064516,"4.2-4.3":0.61261451612903,"4.4":0,"4.4.3-4.4.4":0.85805302419355},A:{"6":0,"7":0,"8":0.0138,"9":0.0092,"10":0.0046,"11":0.5014,"5.5":0},B:{"12":0,"13":0.0138,"14":0.0138,"15":0.0552,"16":0.1104,"17":1.15,"18":0.3818},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.69829551451187,"5.0-5.4":0.021486015831135,"6.2-6.4":0.075201055408971,"7.2-7.4":0.17188812664908,"8.2":1.2461889182058,"9.2":1.8585403693931},N:{"10":0,"11":0.0972},J:{"7":0,"10":0.0162},S:{"2.5":0},R:{_:"0"},M:{"0":0.108},O:{"0":0.1404},Q:{"1.2":0},H:{"0":0.27095567010309},L:{"0":60.7926}};


/***/ }),
/* 330 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007033,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.014066,"24":0,"25":0,"26":0,"27":0.007033,"28":0,"29":0.007033,"30":0,"31":0.014066,"32":0,"33":0,"34":0.007033,"35":0.007033,"36":0.007033,"37":0,"38":0.007033,"39":0.007033,"40":0.028132,"41":0.007033,"42":0,"43":0.007033,"44":0.007033,"45":0.007033,"46":0.014066,"47":0.007033,"48":0.007033,"49":1.033851,"50":0.007033,"51":0.014066,"52":0.007033,"53":0.007033,"54":0.021099,"55":0.028132,"56":0.028132,"57":0.021099,"58":0.07033,"59":0.028132,"60":0.014066,"61":0.654069,"62":0.07033,"63":0.105495,"64":0.056264,"65":0.126594,"66":0.147693,"67":0.091429,"68":0.182858,"69":0.084396,"70":0.14066,"71":0.288353,"72":1.188577,"73":32.77378,"74":0.063297,"75":0.07033,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.007033,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.007033,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.007033,"37":0,"38":0,"39":0,"40":0,"41":0.007033,"42":0,"43":0.014066,"44":0,"45":0,"46":0,"47":0.007033,"48":0.021099,"49":0,"50":0,"51":0,"52":0.077363,"53":0,"54":0,"55":0,"56":0.014066,"57":0.014066,"58":0.049231,"59":0,"60":0.021099,"61":0.014066,"62":0.007033,"63":0.007033,"64":0.021099,"65":0.077363,"66":1.294072,"67":0.042198,"68":0,"3.5":0,"3.6":0.014066},F:{"9":0,"11":0,"12":0.007033,"15":0,"16":0,"17":0,"18":0.007033,"19":0,"20":0,"21":0,"22":0.007033,"23":0,"24":0,"25":0,"26":0,"27":0.007033,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.049231,"37":0.007033,"38":0,"39":0.007033,"40":0.007033,"41":0,"42":0.021099,"43":0.021099,"44":0,"45":0.007033,"46":0.014066,"47":0.007033,"48":0.007033,"49":0,"50":0,"51":0.007033,"52":0,"53":0,"54":0,"55":0,"56":0.028132,"57":0.063297,"58":4.395625,"9.5-9.6":0,"10.0-10.1":0.007033,"10.5":0,"10.6":0,"11.1":0.007033,"11.5":0,"11.6":0.007033,"12.1":0.035165},E:{"4":0.007033,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.007033,"11":0.007033,"12":0.316485,_:"0","3.1":0,"3.2":0,"5.1":0.007033,"6.1":0,"7.1":0,"9.1":0.014066,"10.1":0.021099,"11.1":0.063297,"12.1":0.196924},G:{"8":0.071385541879316,"3.2":0.0046354247973582,"4.0-4.1":0.0027812548784149,"4.2-4.3":0.00092708495947163,"5.0-5.1":0.0092708495947163,"6.0-6.1":0.0046354247973582,"7.0-7.1":0.016687529270489,"8.1-8.4":0.036156313419394,"9.0-9.2":0.021322954067847,"9.3":0.17707322725908,"10.0-10.2":0.098271005703993,"10.3":0.23455249474632,"11.0-11.2":0.28925050735515,"11.3-11.4":0.59426145902131,"12.0-12.1":3.5878187931552,"12.2":4.1153301350946},I:{"3":0.00083735584677419,"4":0.12057924193548,_:"67","2.1":0.0058614909274194,"2.2":0.01004827016129,"2.3":0.0058614909274194,"4.1":0.060289620967742,"4.2-4.3":0.26125502419355,"4.4":0,"4.4.3-4.4.4":0.36592450504032},A:{"6":0,"7":0,"8":0.071078191489362,"9":0.014215638297872,"10":0.014215638297872,"11":0.56862553191489,"5.5":0},B:{"12":0.021099,"13":0.429013,"14":0.738465,"15":0.028132,"16":0.696267,"17":0.337584,"18":0.133627},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.4135998,"5.0-5.4":0.0100878,"6.2-6.4":0.0605268,"7.2-7.4":0.1311414,"8.2":0.5850924,"9.2":0.6657948},N:{"10":0.0130548,"11":0.1174932},J:{"7":0,"10":0.005934},S:{"2.5":0},R:{_:"0"},M:{"0":0.074175},O:{"0":0.180987},Q:{"1.2":0},H:{"0":0.41291769587629},L:{"0":36.601261}};


/***/ }),
/* 331 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.010998,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.005499,"40":0,"41":0,"42":0,"43":0.010998,"44":0,"45":0.005499,"46":0,"47":0,"48":0,"49":0.709371,"50":0,"51":0.005499,"52":0,"53":0.120978,"54":0,"55":0.005499,"56":0.010998,"57":0.21996,"58":0.038493,"59":0,"60":0.005499,"61":0,"62":0,"63":0.027495,"64":0.021996,"65":0.010998,"66":0.082485,"67":0.357435,"68":0.027495,"69":0.060489,"70":0.032994,"71":0.318942,"72":0.373932,"73":14.68233,"74":0.021996,"75":0.005499,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.005499,"37":0.010998,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.005499,"47":0.010998,"48":0.005499,"49":0.010998,"50":0.005499,"51":0.016497,"52":0.197964,"53":0.005499,"54":0,"55":0,"56":0,"57":0.005499,"58":0,"59":0,"60":0.038493,"61":0.005499,"62":0.082485,"63":0.016497,"64":0.082485,"65":0.38493,"66":3.662334,"67":0.005499,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.010998,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.021996,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.456417,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.010998,"12":1.215279,_:"0","3.1":0,"3.2":0,"5.1":0.016497,"6.1":0.005499,"7.1":0,"9.1":0.010998,"10.1":0.038493,"11.1":0.351936,"12.1":0.621387},G:{"8":0.089545220954668,"3.2":0.0058146247373161,"4.0-4.1":0.0034887748423897,"4.2-4.3":0.0011629249474632,"5.0-5.1":0.011629249474632,"6.0-6.1":0.0058146247373161,"7.0-7.1":0.020932649054338,"8.1-8.4":0.045354072951066,"9.0-9.2":0.026747273791654,"9.3":0.22211866496548,"10.0-10.2":0.1232700444311,"10.3":0.2942200117082,"11.0-11.2":0.36283258360853,"11.3-11.4":0.74543489132393,"12.0-12.1":4.5005195466827,"12.2":5.1622238417893},I:{"3":0.0011547570564516,"4":0.16628501612903,_:"67","2.1":0.0080832993951613,"2.2":0.013857084677419,"2.3":0.0080832993951613,"4.1":0.083142508064516,"4.2-4.3":0.3602842016129,"4.4":0,"4.4.3-4.4.4":0.50462883366935},A:{"6":0,"7":0,"8":0.010998,"9":0.005499,"10":0,"11":1.523223,"5.5":0},B:{"12":0.010998,"13":0.010998,"14":0.021996,"15":0.087984,"16":0.10998,"17":1.336257,"18":0.170469},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.57048700873362,"5.0-5.4":0.021129148471616,"6.2-6.4":0.19016233624454,"7.2-7.4":0.28524350436681,"8.2":2.2819480349345,"9.2":1.4896049672489},N:{"10":0,"11":0.009002},J:{"7":0,"10":0.04501},S:{"2.5":0},R:{_:"0"},M:{"0":0.054012},O:{"0":0.598633},Q:{"1.2":0.229551},H:{"0":0.35794550515464},L:{"0":49.563211}};


/***/ }),
/* 332 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006147,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.018441,"36":0,"37":0,"38":0.024588,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.006147,"45":0,"46":0,"47":0,"48":0,"49":0.165969,"50":0,"51":0.006147,"52":0,"53":0.030735,"54":0,"55":0.024588,"56":0,"57":0,"58":0.012294,"59":0.006147,"60":0,"61":0.067617,"62":0,"63":0.018441,"64":0.018441,"65":0.024588,"66":0.06147,"67":0.043029,"68":0.006147,"69":0.086058,"70":0.147528,"71":0.411849,"72":1.887129,"73":13.363578,"74":0.006147,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.006147,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.153675,"46":0,"47":0,"48":0.110646,"49":0.012294,"50":0.006147,"51":0,"52":0.030735,"53":0.006147,"54":0.006147,"55":0,"56":0.012294,"57":0.012294,"58":0,"59":0,"60":0.043029,"61":0.006147,"62":0.006147,"63":0.006147,"64":0.024588,"65":0.215145,"66":2.169891,"67":0.153675,"68":0.006147,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.147528,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.018441,"10":0.018441,"11":0.024588,"12":1.321605,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.012294,"7.1":0,"9.1":0.079911,"10.1":0.196704,"11.1":0.276615,"12.1":1.075725},G:{"8":0.3727238282798,"3.2":0.024202845992195,"4.0-4.1":0.014521707595317,"4.2-4.3":0.0048405691984389,"5.0-5.1":0.048405691984389,"6.0-6.1":0.024202845992195,"7.0-7.1":0.0871302455719,"8.1-8.4":0.18878219873912,"9.0-9.2":0.11133309156409,"9.3":0.92454871690183,"10.0-10.2":0.51310033503452,"10.3":1.224664007205,"11.0-11.2":1.5102575899129,"11.3-11.4":3.1028048561993,"12.0-12.1":18.733002797959,"12.2":21.48728667187},I:{"3":0.00086778931451613,"4":0.12496166129032,_:"67","2.1":0.0060745252016129,"2.2":0.010413471774194,"2.3":0.0060745252016129,"4.1":0.062480830645161,"4.2-4.3":0.27075026612903,"4.4":0,"4.4.3-4.4.4":0.37922393044355},A:{"6":0,"7":0,"8":0.006147,"9":0,"10":0,"11":5.298714,"5.5":0},B:{"12":0.006147,"13":0.043029,"14":0.036882,"15":0.012294,"16":0.104499,"17":1.893276,"18":0.823698},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.098681963369963,"5.0-5.4":0.012335245421245,"6.2-6.4":0.012335245421245,"7.2-7.4":0.16035819047619,"8.2":1.2088540512821,"9.2":1.8749573040293},N:{"10":0,"11":0.023118},J:{"7":0,"10":0.003853},S:{"2.5":0},R:{_:"0"},M:{"0":0.643451},O:{"0":0},Q:{"1.2":0},H:{"0":0.018238857388316},L:{"0":13.95039}};


/***/ }),
/* 333 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.002836,"11":0.002836,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.002836,"26":0,"27":0,"28":0,"29":0.002836,"30":0,"31":0,"32":0,"33":0.005672,"34":0.002836,"35":0,"36":0,"37":0,"38":0.002836,"39":0,"40":0.008508,"41":0,"42":0,"43":0.019852,"44":0.002836,"45":0.002836,"46":0.002836,"47":0.002836,"48":0,"49":0.04254,"50":0.011344,"51":0.002836,"52":0,"53":0,"54":0,"55":0.008508,"56":0.002836,"57":0.005672,"58":0.019852,"59":0.002836,"60":0.008508,"61":0.005672,"62":0.025524,"63":0.02836,"64":0.011344,"65":0.104932,"66":0.008508,"67":0.02836,"68":0.019852,"69":0.045376,"70":0.048212,"71":0.079408,"72":0.258076,"73":3.43156,"74":0.019852,"75":0.008508,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002836,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.002836,"22":0,"23":0.002836,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.002836,"30":0.002836,"31":0.002836,"32":0,"33":0,"34":0.002836,"35":0.002836,"36":0.002836,"37":0.002836,"38":0.002836,"39":0.002836,"40":0.002836,"41":0.002836,"42":0.002836,"43":0.01418,"44":0.011344,"45":0.005672,"46":0.002836,"47":0.019852,"48":0.01418,"49":0.005672,"50":0.005672,"51":0.002836,"52":0.022688,"53":0.002836,"54":0.002836,"55":0.002836,"56":0.01418,"57":0.011344,"58":0.005672,"59":0.005672,"60":0.02836,"61":0.017016,"62":0.019852,"63":0.017016,"64":0.02836,"65":0.124784,"66":0.924536,"67":0.187176,"68":0,"3.5":0,"3.6":0.002836},F:{"9":0,"11":0,"12":0.002836,"15":0.005672,"16":0.01418,"17":0.002836,"18":0.002836,"19":0.008508,"20":0.031196,"21":0.002836,"22":0.002836,"23":0.048212,"24":0.002836,"25":0,"26":0.002836,"27":0.002836,"28":0.005672,"29":0.002836,"30":0.005672,"31":0,"32":0.005672,"33":0.005672,"34":0,"35":0.002836,"36":0.002836,"37":0.002836,"38":0.022688,"39":0,"40":0,"41":0,"42":0.002836,"43":0.002836,"44":0,"45":0.005672,"46":0,"47":0.002836,"48":0,"49":0.005672,"50":0.002836,"51":0.017016,"52":0,"53":0,"54":0,"55":0,"56":0.005672,"57":0.005672,"58":0.575708,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.053884},E:{"4":0,"5":0,"6":0,"7":0,"8":0.002836,"9":0.005672,"10":0.002836,"11":0.01418,"12":0.138964,_:"0","3.1":0,"3.2":0,"5.1":0.051048,"6.1":0,"7.1":0,"9.1":0.008508,"10.1":0.01418,"11.1":0.031196,"12.1":0.068064},G:{"8":0.072874316421495,"3.2":0.0047320984689283,"4.0-4.1":0.002839259081357,"4.2-4.3":0.00094641969378565,"5.0-5.1":0.0094641969378565,"6.0-6.1":0.0047320984689283,"7.0-7.1":0.017035554488142,"8.1-8.4":0.03691036805764,"9.0-9.2":0.02176765295707,"9.3":0.18076616151306,"10.0-10.2":0.10032048754128,"10.3":0.23944418252777,"11.0-11.2":0.29528294446112,"11.3-11.4":0.6066550237166,"12.0-12.1":3.6626442149505,"12.2":4.2011570207145},I:{"3":0.00086843951612903,"4":0.12505529032258,_:"67","2.1":0.0060790766129032,"2.2":0.010421274193548,"2.3":0.0060790766129032,"4.1":0.06252764516129,"4.2-4.3":0.27095312903226,"4.4":0,"4.4.3-4.4.4":0.37950806854839},A:{"6":0,"7":0,"8":0.014623125,"9":0,"10":0.00584925,"11":0.073115625,"5.5":0},B:{"12":0.025524,"13":0.022688,"14":0.02836,"15":0.036868,"16":0.022688,"17":0.158816,"18":0.0709},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.700281,"5.0-5.4":0.09268425,"6.2-6.4":0.082386,"7.2-7.4":0.2265615,"8.2":0.60759675,"9.2":0.2677545},N:{"10":0.034211755102041,"11":0.52458024489796},J:{"7":0,"10":0.064476},S:{"2.5":0.007164},R:{_:"0"},M:{"0":0.365364},O:{"0":4.527648},Q:{"1.2":0.007164},H:{"0":28.764210865979},L:{"0":33.349696}};


/***/ }),
/* 334 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006553,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.032765,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.845337,"50":0.006553,"51":0,"52":0,"53":0.032765,"54":0,"55":0,"56":0,"57":0,"58":0.13106,"59":0,"60":0.078636,"61":0.006553,"62":0.013106,"63":0.019659,"64":0.163825,"65":0.032765,"66":0.019659,"67":0,"68":0.013106,"69":0.039318,"70":0.06553,"71":0.104848,"72":1.63825,"73":23.033795,"74":0.013106,"75":0.098295,_:"76"},C:{"2":0,"3":0.052424,"4":0.039318,"5":0.052424,"6":0.026212,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.06553,"41":0.052424,"42":0.072083,"43":0.06553,"44":0.085189,"45":0.072083,"46":0.045871,"47":0.13106,"48":0.078636,"49":0.058977,"50":0.06553,"51":0.078636,"52":0.190037,"53":0.06553,"54":0.039318,"55":0.06553,"56":0.078636,"57":0.058977,"58":0.045871,"59":0.085189,"60":0.052424,"61":0,"62":0,"63":0.019659,"64":0.039318,"65":0.104848,"66":2.16249,"67":0.06553,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.386627,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.019659,"6":0,"7":0,"8":0.026212,"9":0,"10":0.052424,"11":0.019659,"12":0.615982,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.039318,"10.1":0.124507,"11.1":0.13106,"12.1":0.635641},G:{"8":0.26951455548884,"3.2":0.017500945161613,"4.0-4.1":0.010500567096968,"4.2-4.3":0.0035001890323226,"5.0-5.1":0.035001890323226,"6.0-6.1":0.017500945161613,"7.0-7.1":0.063003402581807,"8.1-8.4":0.13650737226058,"9.0-9.2":0.08050434774342,"9.3":0.66853610517362,"10.0-10.2":0.3710200374262,"10.3":0.88554782517762,"11.0-11.2":1.0920589780847,"11.3-11.4":2.2436211697188,"12.0-12.1":13.545731555089,"12.2":15.53733911448},I:{"3":0.0006153377016129,"4":0.088608629032258,_:"67","2.1":0.0043073639112903,"2.2":0.0073840524193548,"2.3":0.0043073639112903,"4.1":0.044304314516129,"4.2-4.3":0.19198536290323,"4.4":0,"4.4.3-4.4.4":0.26890257560484},A:{"6":0.006553,"7":0,"8":0,"9":0.006553,"10":0,"11":2.22802,"5.5":0},B:{"12":0.006553,"13":0,"14":0.006553,"15":0.019659,"16":0.229355,"17":2.739154,"18":0.439051},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.16900589552239,"5.0-5.4":0,"6.2-6.4":0.011267059701493,"7.2-7.4":0.11267059701493,"8.2":0.72109182089552,"9.2":2.7604296268657},N:{"10":0,"11":0.010341},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.396405},O:{"0":0.548073},Q:{"1.2":0},H:{"0":0.022843778350515},L:{"0":18.455639}};


/***/ }),
/* 335 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005995,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005995,"35":0,"36":0,"37":0,"38":0.017985,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.005995,"48":0,"49":0.04796,"50":0,"51":0,"52":0.005995,"53":0.149875,"54":0.005995,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.03597,"61":0,"62":0,"63":0.017985,"64":0.017985,"65":0.005995,"66":0,"67":0.005995,"68":0.05995,"69":0.041965,"70":0.005995,"71":0.725395,"72":0.677435,"73":16.923885,"74":0.04796,"75":0.005995,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.005995,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.02398,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.01199,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.01199,"48":0.005995,"49":0,"50":0.005995,"51":0,"52":0.377685,"53":0,"54":0.005995,"55":0,"56":0,"57":0.029975,"58":0,"59":0,"60":0.041965,"61":0,"62":0.197835,"63":0,"64":0.005995,"65":0.113905,"66":1.73855,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.005995,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005995,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.017985,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.44363,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005995},E:{"4":0,"5":0,"6":0,"7":0,"8":0.089925,"9":0,"10":0.43164,"11":0.137885,"12":2.715735,_:"0","3.1":0,"3.2":0,"5.1":0.005995,"6.1":0.005995,"7.1":0,"9.1":0.149875,"10.1":0.089925,"11.1":0.101915,"12.1":0.39567},G:{"8":0.20907002551786,"3.2":0.013575975682978,"4.0-4.1":0.0081455854097869,"4.2-4.3":0.0027151951365956,"5.0-5.1":0.027151951365956,"6.0-6.1":0.013575975682978,"7.0-7.1":0.048873512458721,"8.1-8.4":0.10589261032723,"9.0-9.2":0.062449488141699,"9.3":0.51860227108976,"10.0-10.2":0.28781068447914,"10.3":0.68694436955869,"11.0-11.2":0.84714088261783,"11.3-11.4":1.7404400825578,"12.0-12.1":10.507805178625,"12.2":12.052751211348},I:{"3":0.00039931451612903,"4":0.057501290322581,_:"67","2.1":0.0027952016129032,"2.2":0.0047917741935484,"2.3":0.0027952016129032,"4.1":0.02875064516129,"4.2-4.3":0.12458612903226,"4.4":0,"4.4.3-4.4.4":0.17450044354839},A:{"6":0,"7":0,"8":0.03597,"9":0,"10":0,"11":3.555035,"5.5":0},B:{"12":0.005995,"13":0.14388,"14":0.077935,"15":0.43164,"16":0.07194,"17":1.876435,"18":0.329725},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.80568225469729,"5.0-5.4":0.044146972860125,"6.2-6.4":0.022073486430063,"7.2-7.4":0.27591858037578,"8.2":1.8983198329854,"9.2":2.2404588726514},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.03204},O:{"0":0.3204},Q:{"1.2":0},H:{"0":1.8806709278351},L:{"0":27.79231}};


/***/ }),
/* 336 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00786,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.00393,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00786,"27":0,"28":0,"29":0,"30":0.00393,"31":0,"32":0,"33":0.00786,"34":0,"35":0.00786,"36":0,"37":0.00393,"38":0.00393,"39":0.00393,"40":0.06288,"41":0,"42":0,"43":0.04716,"44":0,"45":0,"46":0,"47":0.00393,"48":0,"49":0.05502,"50":0.00786,"51":0.00393,"52":0.00393,"53":0.03144,"54":0.00393,"55":0.12183,"56":0.00393,"57":0,"58":0.01572,"59":0.00393,"60":0.16506,"61":0,"62":0.00393,"63":0.02358,"64":0.00786,"65":0.28296,"66":0.00393,"67":0.01965,"68":0.00393,"69":0.02751,"70":0.04323,"71":0.04716,"72":0.5895,"73":7.96218,"74":0.01572,"75":0.00393,_:"76"},C:{"2":0,"3":0.00393,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.00393,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00393,"24":0.00393,"25":0,"26":0,"27":0.01965,"28":0.00393,"29":0.00393,"30":0,"31":0,"32":0.00786,"33":0,"34":0.00393,"35":0.00393,"36":0,"37":0,"38":0.0393,"39":0,"40":0,"41":0.00393,"42":0.00393,"43":0.01179,"44":0.00786,"45":0.00786,"46":0,"47":0.01572,"48":0.01179,"49":0.01965,"50":0.01179,"51":0,"52":0.0393,"53":0.00393,"54":0.00393,"55":0.00393,"56":0.03537,"57":0.00393,"58":0,"59":0.02358,"60":0.03144,"61":0.00393,"62":0.00786,"63":0.01965,"64":0.03144,"65":0.14148,"66":1.81173,"67":0.56199,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0.00393,"16":0.00393,"17":0,"18":0.00393,"19":0.01179,"20":0.00786,"21":0,"22":0,"23":0.00786,"24":0,"25":0,"26":0,"27":0,"28":0.00393,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00393,"35":0,"36":0,"37":0.00393,"38":0.00786,"39":0,"40":0,"41":0,"42":0.00786,"43":0,"44":0,"45":0.00393,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.00786,"58":0.53841,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.12969},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00786,"9":0,"10":0.00393,"11":0,"12":0.19257,_:"0","3.1":0,"3.2":0,"5.1":0.01572,"6.1":0,"7.1":0,"9.1":0.00393,"10.1":0.05502,"11.1":0.08646,"12.1":0.03144},G:{"8":0.085667103972781,"3.2":0.0055627989592715,"4.0-4.1":0.0033376793755629,"4.2-4.3":0.0011125597918543,"5.0-5.1":0.011125597918543,"6.0-6.1":0.0055627989592715,"7.0-7.1":0.020026076253377,"8.1-8.4":0.043389831882318,"9.0-9.2":0.025588875212649,"9.3":0.21249892024417,"10.0-10.2":0.11793133793656,"10.3":0.28147762733914,"11.0-11.2":0.34711865505854,"11.3-11.4":0.71315082657861,"12.0-12.1":4.3056063944761,"12.2":4.9386529160412},I:{"3":0.0046909072580645,"4":0.67549064516129,_:"67","2.1":0.032836350806452,"2.2":0.056290887096774,"2.3":0.032836350806452,"4.1":0.33774532258065,"4.2-4.3":1.4635630645161,"4.4":0,"4.4.3-4.4.4":2.0499264717742},A:{"6":0.003979125,"7":0,"8":0.063666,"9":0.003979125,"10":0.003979125,"11":0.242726625,"5.5":0},B:{"12":0.05502,"13":0.0393,"14":0.09825,"15":0.04323,"16":0.07074,"17":0.4716,"18":0.10611},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.5581877434679,"5.0-5.4":0.15376852731591,"6.2-6.4":0.23577840855107,"7.2-7.4":0.30753705463183,"8.2":1.2096457482185,"9.2":0.85085251781473},N:{"10":0.025592432432432,"11":0.44786756756757},J:{"7":0,"10":0.02428},S:{"2.5":0},R:{_:"0"},M:{"0":0.0607},O:{"0":2.51905},Q:{"1.2":0.03035},H:{"0":7.2810484364261},L:{"0":48.0531}};


/***/ }),
/* 337 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.001475,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.001475,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.004425,"30":0,"31":0,"32":0,"33":0.004425,"34":0,"35":0,"36":0,"37":0.001475,"38":0,"39":0.001475,"40":0.045725,"41":0,"42":0,"43":0.013275,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.010325,"50":0,"51":0,"52":0,"53":0,"54":0.001475,"55":0.013275,"56":0.0118,"57":0,"58":0.001475,"59":0,"60":0.004425,"61":0,"62":0.001475,"63":0.045725,"64":0.001475,"65":0.033925,"66":0.001475,"67":0.007375,"68":0.007375,"69":0.0118,"70":0.007375,"71":0.0059,"72":0.0472,"73":0.87615,"74":0.001475,"75":0.001475,_:"76"},C:{"2":0,"3":0.00295,"4":0.004425,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.007375,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.001475,"31":0,"32":0.001475,"33":0.001475,"34":0,"35":0.00295,"36":0,"37":0,"38":0.001475,"39":0,"40":0.001475,"41":0,"42":0,"43":0.00295,"44":0,"45":0.001475,"46":0,"47":0.00295,"48":0,"49":0,"50":0,"51":0,"52":0.007375,"53":0,"54":0,"55":0,"56":0.001475,"57":0.001475,"58":0,"59":0.001475,"60":0.0177,"61":0.001475,"62":0.039825,"63":0.004425,"64":0.0059,"65":0.030975,"66":0.4189,"67":0.00295,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.001475,"17":0,"18":0,"19":0,"20":0.00885,"21":0,"22":0,"23":0.025075,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.001475,"33":0.001475,"34":0,"35":0,"36":0,"37":0.001475,"38":0.001475,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.0059,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.069325,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.019175},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.004425,"11":0.007375,"12":0.036875,_:"0","3.1":0,"3.2":0,"5.1":0.001475,"6.1":0,"7.1":0.004425,"9.1":0.00295,"10.1":0.001475,"11.1":0.007375,"12.1":0.0059},G:{"8":0.024297225557891,"3.2":0.0015777419193435,"4.0-4.1":0.00094664515160612,"4.2-4.3":0.00031554838386871,"5.0-5.1":0.0031554838386871,"6.0-6.1":0.0015777419193435,"7.0-7.1":0.0056798709096367,"8.1-8.4":0.01230638697088,"9.0-9.2":0.0072576128289803,"9.3":0.060269741318923,"10.0-10.2":0.033448128690083,"10.3":0.079833741118783,"11.0-11.2":0.098451095767037,"11.3-11.4":0.20226651405984,"12.0-12.1":1.2211722455719,"12.2":1.4007192759932},I:{"3":0.0013891381048387,"4":0.20003588709677,_:"67","2.1":0.009723966733871,"2.2":0.016669657258065,"2.3":0.009723966733871,"4.1":0.10001794354839,"4.2-4.3":0.43341108870968,"4.4":0,"4.4.3-4.4.4":0.60705335181452},A:{"6":0,"7":0,"8":0.006011320754717,"9":0.006011320754717,"10":0.013525471698113,"11":0.054101886792453,"5.5":0},B:{"12":0.0118,"13":0.0118,"14":0.00295,"15":0.001475,"16":0.0118,"17":0.03245,"18":0.007375},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.47058,"5.0-5.4":0.06138,"6.2-6.4":0.06138,"7.2-7.4":0.23529,"8.2":0.41943,"9.2":0.18414},N:{"10":0.010798333333333,"11":0.15117666666667},J:{"7":0,"10":0.008525},S:{"2.5":0},R:{_:"0"},M:{"0":0.042625},O:{"0":2.54045},Q:{"1.2":0.01705},H:{"0":29.144089390034},L:{"0":53.158025}};


/***/ }),
/* 338 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.006409,"34":0.006409,"35":0,"36":0,"37":0.012818,"38":0.025636,"39":0.019227,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.845988,"50":0,"51":0,"52":0.019227,"53":0.019227,"54":0.006409,"55":0,"56":0.006409,"57":0.012818,"58":0.019227,"59":0,"60":0,"61":0.025636,"62":0.044863,"63":0.237133,"64":0.025636,"65":0.108953,"66":0.006409,"67":0.19227,"68":0.012818,"69":0.012818,"70":0.076908,"71":0.115362,"72":1.031849,"73":16.580083,"74":0.006409,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.006409,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.012818,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.019227,"46":0,"47":0.006409,"48":0.230724,"49":0,"50":0.006409,"51":0,"52":0.249951,"53":0,"54":0,"55":0,"56":0.012818,"57":0.006409,"58":0,"59":0.012818,"60":0.102544,"61":0.012818,"62":0.006409,"63":0.019227,"64":0.038454,"65":0.314041,"66":4.319666,"67":0.012818,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006409,"37":0,"38":0,"39":0,"40":0.102544,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.083317,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.006409,"57":0,"58":0.781898,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.089726,"8":0.044863,"9":0.019227,"10":0.057681,"11":0.166634,"12":2.082925,_:"0","3.1":0,"3.2":0,"5.1":0.006409,"6.1":0.019227,"7.1":0,"9.1":0.179452,"10.1":0.166634,"11.1":0.410176,"12.1":1.320254},G:{"8":0.12747158520965,"3.2":0.0082773756629641,"4.0-4.1":0.0049664253977784,"4.2-4.3":0.0016554751325928,"5.0-5.1":0.016554751325928,"6.0-6.1":0.0082773756629641,"7.0-7.1":0.029798552386671,"8.1-8.4":0.06456353017112,"9.0-9.2":0.038075928049635,"9.3":0.31619575032523,"10.0-10.2":0.17548036405484,"10.3":0.41883520854598,"11.0-11.2":0.51650824136896,"11.3-11.4":1.061159559992,"12.0-12.1":6.4066887631342,"12.2":7.3486541135795},I:{"3":0.0010003709677419,"4":0.14405341935484,_:"67","2.1":0.0070025967741935,"2.2":0.012004451612903,"2.3":0.0070025967741935,"4.1":0.072026709677419,"4.2-4.3":0.31211574193548,"4.4":0,"4.4.3-4.4.4":0.43716211290323},A:{"6":0,"7":0,"8":0.006409,"9":0.025636,"10":0.012818,"11":4.960566,"5.5":0},B:{"12":0.019227,"13":0.025636,"14":0.044863,"15":0.070499,"16":0.083317,"17":1.800929,"18":0.499902},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.42588,"5.0-5.4":0.074529,"6.2-6.4":0.074529,"7.2-7.4":0.170352,"8.2":2.033577,"9.2":1.469286},N:{"10":0,"11":0.014364},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.147231},O:{"0":0.017955},Q:{"1.2":0},H:{"0":0.037396994845361},L:{"0":36.595076}};


/***/ }),
/* 339 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.051136,"19":0,"20":0,"21":0.019176,"22":0,"23":0.006392,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.019176,"39":0.03196,"40":0,"41":0,"42":0,"43":0.012784,"44":0,"45":0.178976,"46":0.006392,"47":0,"48":0.038352,"49":0.41548,"50":0,"51":0.057528,"52":0.006392,"53":0.006392,"54":0,"55":0.012784,"56":0.076704,"57":0.441048,"58":0.121448,"59":0.025568,"60":0.012784,"61":0.102272,"62":0.108664,"63":2.007088,"64":0.038352,"65":0.147016,"66":0.012784,"67":0.089488,"68":1.02272,"69":0.108664,"70":0.03196,"71":0.070312,"72":0.76704,"73":16.65116,"74":0.019176,"75":0.115056,_:"76"},C:{"2":0.006392,"3":0,"4":0.012784,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.012784,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.019176,"30":0.06392,"31":0.1598,"32":0.006392,"33":0,"34":0.006392,"35":0,"36":0,"37":0.006392,"38":0.006392,"39":0,"40":0,"41":0.012784,"42":0,"43":0.121448,"44":0.006392,"45":0,"46":0.012784,"47":0.166192,"48":0.006392,"49":0.012784,"50":0.025568,"51":0.006392,"52":0.108664,"53":0.019176,"54":0,"55":0.006392,"56":0.166192,"57":0.166192,"58":0,"59":0.03196,"60":0.019176,"61":0.038352,"62":0.051136,"63":0,"64":0.60724,"65":0.965192,"66":3.477248,"67":0.249288,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.089488,"17":0.006392,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.313208,"35":0,"36":0.051136,"37":0.140624,"38":0,"39":0.006392,"40":0.019176,"41":0.006392,"42":0,"43":0,"44":0,"45":0,"46":0.006392,"47":0,"48":0.204544,"49":0,"50":0.006392,"51":0.006392,"52":0,"53":0.006392,"54":0,"55":0,"56":0.044744,"57":0.121448,"58":0.198152,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.115056},E:{"4":0,"5":0,"6":0,"7":0,"8":0.012784,"9":0,"10":0.006392,"11":0.038352,"12":0.370736,_:"0","3.1":0,"3.2":0,"5.1":0.153408,"6.1":0,"7.1":0,"9.1":0.025568,"10.1":0.006392,"11.1":0.41548,"12.1":1.176128},G:{"8":0.039231056939858,"3.2":0.0025474712298609,"4.0-4.1":0.0015284827379165,"4.2-4.3":0.00050949424597218,"5.0-5.1":0.0050949424597218,"6.0-6.1":0.0025474712298609,"7.0-7.1":0.0091708964274993,"8.1-8.4":0.019870275592915,"9.0-9.2":0.01171836765736,"9.3":0.097313400980686,"10.0-10.2":0.054006390073051,"10.3":0.12890204423096,"11.0-11.2":0.15896220474332,"11.3-11.4":0.32658581166817,"12.0-12.1":1.9717427319123,"12.2":2.2616449578705},I:{"3":0.0048709193548387,"4":0.70141238709677,_:"67","2.1":0.034096435483871,"2.2":0.058451032258065,"2.3":0.034096435483871,"4.1":0.35070619354839,"4.2-4.3":1.5197268387097,"4.4":0,"4.4.3-4.4.4":2.1285917580645},A:{"6":0,"7":0,"8":0.13074545454545,"9":0.11113363636364,"10":0.058835454545455,"11":2.0004054545455,"5.5":0},B:{"12":0.230112,"13":0.03196,"14":0.038352,"15":0.057528,"16":0.230112,"17":2.166888,"18":0.172584},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.6358171881188,"5.0-5.4":0.15432237623762,"6.2-6.4":0.29835659405941,"7.2-7.4":0.3703737029703,"8.2":1.296307960396,"9.2":0.40123817821782},N:{"10":0,"11":0.082984},J:{"7":0,"10":0.007216},S:{"2.5":0},R:{_:"0"},M:{"0":0.07216},O:{"0":0.844272},Q:{"1.2":0.66748},H:{"0":1.4278133058419},L:{"0":40.009552}};


/***/ }),
/* 340 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.055032,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.233886,"23":0.006879,"24":0,"25":0,"26":0.013758,"27":0,"28":0,"29":0.082548,"30":0,"31":0,"32":0,"33":0,"34":0.041274,"35":0,"36":0.006879,"37":0,"38":0.110064,"39":0.006879,"40":0.013758,"41":0.006879,"42":0.048153,"43":0.034395,"44":0.027516,"45":0,"46":0.013758,"47":0.006879,"48":0.027516,"49":2.125611,"50":0.006879,"51":0.006879,"52":0.013758,"53":0.055032,"54":0.041274,"55":0.013758,"56":0.020637,"57":0.006879,"58":0.020637,"59":0.013758,"60":0.006879,"61":0.282039,"62":0.055032,"63":0.06879,"64":0.041274,"65":0.041274,"66":0.06879,"67":0.075669,"68":0.034395,"69":0.089427,"70":0.096306,"71":0.261402,"72":0.949302,"73":25.920072,"74":0.061911,"75":0.013758,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.020637,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.013758,"39":0,"40":0,"41":0,"42":0,"43":0.013758,"44":0,"45":0.006879,"46":0,"47":0.027516,"48":0.041274,"49":0.006879,"50":0.006879,"51":0.006879,"52":0.846117,"53":0.006879,"54":0.041274,"55":0.006879,"56":0.027516,"57":0.006879,"58":0.013758,"59":0.006879,"60":0.089427,"61":0.013758,"62":0.020637,"63":0.041274,"64":0.034395,"65":0.158217,"66":6.356196,"67":0.034395,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.055032,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.041274,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.350829,"32":0,"33":0,"34":0,"35":0,"36":0.089427,"37":0.034395,"38":0,"39":0,"40":0.261402,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.006879,"57":0,"58":0.667263,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.034395},E:{"4":0,"5":0,"6":0,"7":0,"8":0.144459,"9":0.006879,"10":0.006879,"11":0.027516,"12":0.302676,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.020637,"10.1":0.075669,"11.1":0.130701,"12.1":0.261402},G:{"8":0.058440164415091,"3.2":0.0037948158711098,"4.0-4.1":0.0022768895226659,"4.2-4.3":0.00075896317422196,"5.0-5.1":0.0075896317422196,"6.0-6.1":0.0037948158711098,"7.0-7.1":0.013661337135995,"8.1-8.4":0.029599563794656,"9.0-9.2":0.017456153007105,"9.3":0.14496196627639,"10.0-10.2":0.080450096467527,"10.3":0.19201768307815,"11.0-11.2":0.23679651035725,"11.3-11.4":0.48649539467627,"12.0-12.1":2.937187484239,"12.2":3.3690375303713},I:{"3":0.0016529677419355,"4":0.23802735483871,_:"67","2.1":0.011570774193548,"2.2":0.019835612903226,"2.3":0.011570774193548,"4.1":0.11901367741935,"4.2-4.3":0.51572593548387,"4.4":0,"4.4.3-4.4.4":0.72234690322581},A:{"6":0.027516,"7":0,"8":0.116943,"9":0.061911,"10":0.055032,"11":1.114398,"5.5":0},B:{"12":0.006879,"13":0.006879,"14":0.020637,"15":0.048153,"16":0.048153,"17":0.96306,"18":0.185733},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.70601181333333,"5.0-5.4":0.010382526666667,"6.2-6.4":0.09344274,"7.2-7.4":0.10382526666667,"8.2":0.99672256,"9.2":1.2043730933333},N:{"10":0,"11":0.131082},J:{"7":0,"10":0.003121},S:{"2.5":0},R:{_:"0"},M:{"0":0.118598},O:{"0":0.090509},Q:{"1.2":0.006242},H:{"0":0.46094274226804},L:{"0":38.489968}};


/***/ }),
/* 341 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006936,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006936,"35":0,"36":0.006936,"37":0,"38":0.027744,"39":0,"40":0.006936,"41":0,"42":0,"43":0,"44":0.006936,"45":0.020808,"46":0.006936,"47":0,"48":0,"49":0.55488,"50":0.006936,"51":0.006936,"52":0,"53":0.013872,"54":0,"55":0.020808,"56":0.041616,"57":0.006936,"58":0.03468,"59":0.03468,"60":0.013872,"61":0.027744,"62":0.03468,"63":0.027744,"64":0.03468,"65":0.048552,"66":0.055488,"67":0.187272,"68":0.06936,"69":0.131784,"70":0.083232,"71":0.27744,"72":1.186056,"73":30.83052,"74":0.020808,"75":0.013872,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006936,"44":0,"45":0.006936,"46":0,"47":0.006936,"48":0.048552,"49":0,"50":0,"51":0.006936,"52":0.090168,"53":0,"54":0.006936,"55":0,"56":0.006936,"57":0.027744,"58":0.006936,"59":0.006936,"60":0.020808,"61":0.027744,"62":0.013872,"63":0.027744,"64":0.041616,"65":0.124848,"66":2.87844,"67":0.041616,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006936,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.006936,"50":0,"51":0.006936,"52":0,"53":0,"54":0,"55":0,"56":0.006936,"57":0,"58":0.742152,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006936},E:{"4":0,"5":0,"6":0,"7":0,"8":0.006936,"9":0,"10":0.03468,"11":0.131784,"12":1.678512,_:"0","3.1":0,"3.2":0,"5.1":1.366392,"6.1":0.006936,"7.1":0,"9.1":0.055488,"10.1":0.298248,"11.1":0.5202,"12.1":0.950232},G:{"8":0.049861048333834,"3.2":0.0032377304112879,"4.0-4.1":0.0019426382467727,"4.2-4.3":0.00064754608225758,"5.0-5.1":0.0064754608225758,"6.0-6.1":0.0032377304112879,"7.0-7.1":0.011655829480636,"8.1-8.4":0.025254297208046,"9.0-9.2":0.014893559891924,"9.3":0.1236813017112,"10.0-10.2":0.068639884719304,"10.3":0.16382915881117,"11.0-11.2":0.20203437766437,"11.3-11.4":0.41507703872711,"12.0-12.1":2.5060033383368,"12.2":2.8744570591414},I:{"3":0.00062659677419355,"4":0.090229935483871,_:"67","2.1":0.0043861774193548,"2.2":0.0075191612903226,"2.3":0.0043861774193548,"4.1":0.045114967741935,"4.2-4.3":0.19549819354839,"4.4":0,"4.4.3-4.4.4":0.27382279032258},A:{"6":0.006936,"7":0,"8":0.041616,"9":0.013872,"10":0.006936,"11":1.07508,"5.5":0},B:{"12":0.020808,"13":0.020808,"14":0.013872,"15":0.090168,"16":0.048552,"17":0.582624,"18":0.10404},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.61492842748092,"5.0-5.4":0.060484763358779,"6.2-6.4":0.080646351145038,"7.2-7.4":0.28226222900763,"8.2":0.96775621374046,"9.2":0.63509001526718},N:{"10":0,"11":0.042896},J:{"7":0,"10":0.018384},S:{"2.5":0},R:{_:"0"},M:{"0":0.12256},O:{"0":0.24512},Q:{"1.2":0},H:{"0":0.61496901718213},L:{"0":41.331344}};


/***/ }),
/* 342 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.005282,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.036974,"39":0,"40":0,"41":0,"42":0,"43":0.005282,"44":0,"45":0,"46":0,"47":0,"48":0.015846,"49":0.274664,"50":0.005282,"51":0,"52":0,"53":0.084512,"54":0.042256,"55":0.02641,"56":0.005282,"57":0.010564,"58":0.005282,"59":0,"60":0.005282,"61":0.015846,"62":0,"63":0.691942,"64":0.05282,"65":0.010564,"66":0.015846,"67":0.042256,"68":0.05282,"69":0.031692,"70":0.02641,"71":0.116204,"72":0.834556,"73":13.97089,"74":0.015846,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.010564,"49":0,"50":0,"51":0,"52":0.031692,"53":0.005282,"54":0,"55":0,"56":0.010564,"57":0,"58":0,"59":0.005282,"60":0.042256,"61":0.010564,"62":0.005282,"63":0.005282,"64":0.021128,"65":0.153178,"66":1.484242,"67":0.05282,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005282,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.005282,"38":0.005282,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.142614,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.005282,"9":0,"10":0.010564,"11":0.116204,"12":1.061682,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.07923,"10.1":0.174306,"11.1":0.232408,"12.1":0.691942},G:{"8":0.28304153607525,"3.2":0.018379320524367,"4.0-4.1":0.01102759231462,"4.2-4.3":0.0036758641048734,"5.0-5.1":0.036758641048734,"6.0-6.1":0.018379320524367,"7.0-7.1":0.066165553887721,"8.1-8.4":0.14335870009006,"9.0-9.2":0.084544874412088,"9.3":0.70209004403082,"10.0-10.2":0.38964159511658,"10.3":0.92999361853297,"11.0-11.2":1.1468696007205,"11.3-11.4":2.3562288912239,"12.0-12.1":14.22559408586,"12.2":16.317160761533},I:{"3":0.00070522983870968,"4":0.10155309677419,_:"67","2.1":0.0049366088709677,"2.2":0.0084627580645161,"2.3":0.0049366088709677,"4.1":0.050776548387097,"4.2-4.3":0.22003170967742,"4.4":0,"4.4.3-4.4.4":0.30818543951613},A:{"6":0.0053546880733945,"7":0.0053546880733945,"8":0.021418752293578,"9":0.010709376146789,"10":0.010709376146789,"11":1.1137751192661,"5.5":0},B:{"12":0.005282,"13":0.042256,"14":0.010564,"15":0.021128,"16":0.095076,"17":0.750044,"18":1.051118},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.22372738229755,"5.0-5.4":0.067118214689266,"6.2-6.4":0.022372738229755,"7.2-7.4":0.29084559698682,"8.2":2.4274420979284,"9.2":2.9084559698682},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.250054},O:{"0":0.07077},Q:{"1.2":0},H:{"0":0.20100139175258},L:{"0":28.42959}};


/***/ }),
/* 343 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.002824,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.039536,"26":0.002824,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.01412,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.002824,"40":0.045184,"41":0,"42":0,"43":0.104488,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.005648,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0.002824,"60":0,"61":0.002824,"62":0,"63":0.033888,"64":0,"65":0.025416,"66":0.019768,"67":0.011296,"68":0.011296,"69":0,"70":0.036712,"71":0.132728,"72":0.093192,"73":3.202416,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002824,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.002824,"24":0,"25":0,"26":0,"27":0.011296,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.005648,"38":0.002824,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.002824,"45":0,"46":0,"47":0.002824,"48":0,"49":0,"50":0.008472,"51":0.002824,"52":0,"53":0,"54":0,"55":0,"56":0.002824,"57":0,"58":0,"59":0.045184,"60":0,"61":0.011296,"62":0.005648,"63":0.008472,"64":0,"65":0.1412,"66":0.93192,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.005648,"33":0,"34":0,"35":0,"36":0,"37":0.016944,"38":0.002824,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.002824,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0.002824,"54":0,"55":0,"56":0,"57":0,"58":0.581744,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.011296},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.002824,"10":0,"11":0,"12":0,_:"0","3.1":0,"3.2":0,"5.1":0.025416,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.107312,"12.1":0.022592},G:{"8":0.027780841789252,"3.2":0.0018039507655359,"4.0-4.1":0.0010823704593215,"4.2-4.3":0.00036079015310718,"5.0-5.1":0.0036079015310718,"6.0-6.1":0.0018039507655359,"7.0-7.1":0.0064942227559292,"8.1-8.4":0.01407081597118,"9.0-9.2":0.008298173521465,"9.3":0.06891091924347,"10.0-10.2":0.038243756229361,"10.3":0.091279908736115,"11.0-11.2":0.11256652776944,"11.3-11.4":0.2312664881417,"12.0-12.1":1.3962578925248,"12.2":1.6015474896428},I:{"3":0.0016973306451613,"4":0.24441561290323,_:"67","2.1":0.011881314516129,"2.2":0.020367967741935,"2.3":0.011881314516129,"4.1":0.12220780645161,"4.2-4.3":0.52956716129032,"4.4":0,"4.4.3-4.4.4":0.74173349193548},A:{"6":0,"7":0,"8":0.124256,"9":0.005648,"10":0.048008,"11":1.24256,"5.5":0},B:{"12":0.008472,"13":0.016944,"14":0.01412,"15":0.036712,"16":0.011296,"17":0.138376,"18":0.005648},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.4387393821138,"5.0-5.4":0.11145164227642,"6.2-6.4":0.070923772357724,"7.2-7.4":0.23303525203252,"8.2":1.1347803577236,"9.2":0.74976559349593},N:{"10":0,"11":0.07176},J:{"7":0,"10":0.007176},S:{"2.5":0},R:{_:"0"},M:{"0":0.03588},O:{"0":0.531024},Q:{"1.2":0.007176},H:{"0":12.683974556701},L:{"0":64.315736}};


/***/ }),
/* 344 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0.01335,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.00445,"28":0,"29":0.00445,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.0445,"39":0,"40":0,"41":0,"42":0,"43":0.01335,"44":0,"45":0.00445,"46":0.0089,"47":0.00445,"48":0,"49":0.0356,"50":0,"51":0,"52":0,"53":0.01335,"54":0,"55":0.01335,"56":0.00445,"57":0.00445,"58":0.03115,"59":0,"60":0.05785,"61":0.00445,"62":0.04005,"63":0.14685,"64":0.02225,"65":0.09345,"66":0.00445,"67":0.0445,"68":0.0089,"69":0.0178,"70":0.0534,"71":0.0712,"72":0.59185,"73":11.1517,"74":0.01335,"75":0.0178,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.00445,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00445,"50":0.00445,"51":0,"52":0.01335,"53":0,"54":0,"55":0,"56":0.0089,"57":0.01335,"58":0,"59":0,"60":0.01335,"61":0,"62":0,"63":0.01335,"64":0.00445,"65":0.0534,"66":1.2193,"67":0.0267,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.0089,"18":0,"19":0,"20":0,"21":0,"22":0.00445,"23":0,"24":0,"25":0,"26":0,"27":0.00445,"28":0,"29":0.00445,"30":0,"31":0,"32":0,"33":0.00445,"34":0,"35":0.00445,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.08455,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00445,"57":0,"58":0.8633,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.0089},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00445,"11":0.00445,"12":0.12905,_:"0","3.1":0,"3.2":0,"5.1":0.01335,"6.1":0,"7.1":0,"9.1":0.00445,"10.1":0.0178,"11.1":0.14685,"12.1":0.089},G:{"8":0.074679520664465,"3.2":0.0048493195236666,"4.0-4.1":0.0029095917141999,"4.2-4.3":0.00096986390473331,"5.0-5.1":0.0096986390473331,"6.0-6.1":0.0048493195236666,"7.0-7.1":0.0174575502852,"8.1-8.4":0.037824692284599,"9.0-9.2":0.022306869808866,"9.3":0.18524400580406,"10.0-10.2":0.10280557390173,"10.3":0.24537556789753,"11.0-11.2":0.30259753827679,"11.3-11.4":0.62168276293405,"12.0-12.1":3.7533733113179,"12.2":4.3052258731112},I:{"3":0.0021477822580645,"4":0.30928064516129,_:"67","2.1":0.015034475806452,"2.2":0.025773387096774,"2.3":0.015034475806452,"4.1":0.15464032258065,"4.2-4.3":0.67010806451613,"4.4":0,"4.4.3-4.4.4":0.93858084677419},A:{"6":0,"7":0,"8":0.0178,"9":0.00445,"10":0.0089,"11":0.3382,"5.5":0},B:{"12":0.0178,"13":0.0267,"14":0.0267,"15":0.0356,"16":0.0712,"17":0.8722,"18":0.19135},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.75884065155807,"5.0-5.4":0.05420290368272,"6.2-6.4":0.45530439093484,"7.2-7.4":0.33605800283286,"8.2":2.5041741501416,"9.2":3.5448699008499},N:{"10":0.0111,"11":0.0666},J:{"7":0,"10":0.0333},S:{"2.5":0},R:{_:"0"},M:{"0":0.12765},O:{"0":1.01565},Q:{"1.2":0.00555},H:{"0":2.0229368556701},L:{"0":55.4895}};


/***/ }),
/* 345 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006395,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.006395,"27":0,"28":0,"29":0,"30":0.006395,"31":0.006395,"32":0,"33":0,"34":0.019185,"35":0.01279,"36":0.006395,"37":0,"38":0.03837,"39":0.006395,"40":0.019185,"41":0,"42":0.006395,"43":0.006395,"44":0,"45":0.01279,"46":0.006395,"47":0.01279,"48":0.019185,"49":0.66508,"50":0.006395,"51":0.006395,"52":0.006395,"53":0.019185,"54":0.019185,"55":0.070345,"56":0.05116,"57":0.147085,"58":0.044765,"59":0.02558,"60":0.019185,"61":0.03837,"62":0.057555,"63":0.517995,"64":0.06395,"65":0.108715,"66":0.07674,"67":0.30696,"68":0.172665,"69":0.30696,"70":0.2558,"71":0.46044,"72":1.72665,"73":21.608705,"74":0.03837,"75":0.031975,_:"76"},C:{"2":0,"3":0,"4":0.01279,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006395,"35":0.006395,"36":0,"37":0,"38":0,"39":0,"40":0.006395,"41":0,"42":0.006395,"43":0.006395,"44":0.006395,"45":0.01279,"46":0.006395,"47":0.01279,"48":0.07674,"49":0.006395,"50":0.006395,"51":0.006395,"52":0.083135,"53":0.006395,"54":0.006395,"55":0.01279,"56":0.02558,"57":0.019185,"58":0.006395,"59":0.01279,"60":0.057555,"61":0.019185,"62":0.01279,"63":0.02558,"64":0.031975,"65":0.14069,"66":1.7906,"67":0.01279,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.185455,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.031975,"9":0.01279,"10":0.044765,"11":0.1279,"12":1.438875,_:"0","3.1":0,"3.2":0,"5.1":0.044765,"6.1":0.031975,"7.1":0,"9.1":0.08953,"10.1":0.211035,"11.1":0.35812,"12.1":0.863325},G:{"8":0.2311173531472,"3.2":0.015007620334234,"4.0-4.1":0.0090045722005404,"4.2-4.3":0.0030015240668468,"5.0-5.1":0.030015240668468,"6.0-6.1":0.015007620334234,"7.0-7.1":0.054027433203242,"8.1-8.4":0.11705943860702,"9.0-9.2":0.069035053537476,"9.3":0.57329109676774,"10.0-10.2":0.31816155108576,"10.3":0.75938558891224,"11.0-11.2":0.9364755088562,"11.3-11.4":1.9239769268488,"12.0-12.1":11.615898138697,"12.2":13.323765332733},I:{"3":0.00071961189516129,"4":0.10362411290323,_:"67","2.1":0.005037283266129,"2.2":0.0086353427419355,"2.3":0.005037283266129,"4.1":0.051812056451613,"4.2-4.3":0.22451891129032,"4.4":0,"4.4.3-4.4.4":0.31447039818548},A:{"6":0.0067711764705882,"7":0,"8":0.074482941176471,"9":0.054169411764706,"10":0.040627058823529,"11":2.0110394117647,"5.5":0},B:{"12":0.006395,"13":0.006395,"14":0.019185,"15":0.019185,"16":0.06395,"17":0.8953,"18":0.33254},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.30452123595506,"5.0-5.4":0.021751516853933,"6.2-6.4":0.054378792134831,"7.2-7.4":0.18488789325843,"8.2":1.5552334550562,"9.2":1.7509971067416},N:{"10":0,"11":0.010815},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.133385},O:{"0":0.41097},Q:{"1.2":0.155015},H:{"0":0.095563470790378},L:{"0":24.86118}};


/***/ }),
/* 346 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007124,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.007124,"22":0.007124,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.007124,"35":0,"36":0.007124,"37":0,"38":0.042744,"39":0,"40":0.007124,"41":0.007124,"42":0.007124,"43":0.007124,"44":0,"45":0.007124,"46":0,"47":0.007124,"48":0,"49":0.270712,"50":0.007124,"51":0.007124,"52":0.014248,"53":0.014248,"54":0,"55":0,"56":0.007124,"57":0.028496,"58":0.042744,"59":0.028496,"60":0.03562,"61":0.007124,"62":0.007124,"63":0.049868,"64":0.021372,"65":0.113984,"66":0.028496,"67":0.03562,"68":0.056992,"69":0.099736,"70":0.227968,"71":0.149604,"72":0.85488,"73":28.695472,"74":0.056992,"75":0.007124,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.007124,"16":0.007124,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.121108,"44":0,"45":0.263588,"46":0,"47":0.135356,"48":0.377572,"49":0,"50":0.121108,"51":0.242216,"52":1.047228,"53":0,"54":0.007124,"55":0.007124,"56":0.021372,"57":0.028496,"58":0.007124,"59":0.014248,"60":0.014248,"61":0.014248,"62":0.014248,"63":0.014248,"64":0.028496,"65":0.128232,"66":2.785484,"67":0.042744,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.007124,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.007124,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.007124,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1.189708,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.007124},E:{"4":0,"5":0,"6":0,"7":0,"8":0.007124,"9":0,"10":0.028496,"11":0.085488,"12":1.089972,_:"0","3.1":0,"3.2":0,"5.1":1.53166,"6.1":0.121108,"7.1":0,"9.1":0.021372,"10.1":0.085488,"11.1":0.256464,"12.1":0.776516},G:{"8":0.046762647853497,"3.2":0.0030365355749024,"4.0-4.1":0.0018219213449415,"4.2-4.3":0.00060730711498049,"5.0-5.1":0.0060730711498049,"6.0-6.1":0.0030365355749024,"7.0-7.1":0.010931528069649,"8.1-8.4":0.023684977484239,"9.0-9.2":0.013968063644551,"9.3":0.11599565896127,"10.0-10.2":0.064374554187932,"10.3":0.15364870009006,"11.0-11.2":0.18947981987391,"11.3-11.4":0.38928386070249,"12.0-12.1":2.3502785349745,"12.2":2.6958362833984},I:{"3":0.0020438991935484,"4":0.29432148387097,_:"67","2.1":0.014307294354839,"2.2":0.024526790322581,"2.3":0.014307294354839,"4.1":0.14716074193548,"4.2-4.3":0.6376965483871,"4.4":0,"4.4.3-4.4.4":0.89318394758065},A:{"6":0,"7":0,"8":0.11001425485961,"9":0.0084626349892009,"10":0.016925269978402,"11":3.7827978401728,"5.5":0},B:{"12":0.021372,"13":0.14248,"14":0.149604,"15":0.398944,"16":0.42744,"17":0.990236,"18":0.1781},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.40903111111111,"5.0-5.4":0.040903111111111,"6.2-6.4":0.061354666666667,"7.2-7.4":0.14316088888889,"8.2":0.75670755555556,"9.2":0.61354666666667},N:{"10":0,"11":0.739132},J:{"7":0,"10":0.008628},S:{"2.5":0},R:{_:"0"},M:{"0":0.11504},O:{"0":0.163932},Q:{"1.2":0},H:{"0":1.3668511202749},L:{"0":35.68158}};


/***/ }),
/* 347 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005723,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005723,"23":0,"24":0,"25":0,"26":0.005723,"27":0,"28":0,"29":0,"30":0,"31":0.005723,"32":0,"33":0,"34":0.011446,"35":0,"36":0,"37":0.005723,"38":0.017169,"39":0.011446,"40":0.005723,"41":0.011446,"42":0,"43":0.051507,"44":0.005723,"45":0.017169,"46":0.011446,"47":0.005723,"48":0.011446,"49":0.492178,"50":0.011446,"51":0.011446,"52":0.017169,"53":0.022892,"54":0.017169,"55":0.017169,"56":0.017169,"57":0.022892,"58":0.045784,"59":0.017169,"60":0.011446,"61":0.017169,"62":0.040061,"63":0.028615,"64":0.028615,"65":0.034338,"66":0.028615,"67":0.05723,"68":0.051507,"69":0.051507,"70":0.154521,"71":0.320488,"72":0.663868,"73":18.433783,"74":0.028615,"75":0.017169,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.005723,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005723,"32":0,"33":0,"34":0.005723,"35":0,"36":0,"37":0.005723,"38":0.005723,"39":0.005723,"40":0.005723,"41":0.005723,"42":0.005723,"43":0.005723,"44":0.011446,"45":0.011446,"46":0.005723,"47":0.011446,"48":0.040061,"49":0.005723,"50":0.011446,"51":0.017169,"52":0.303319,"53":0.017169,"54":0.011446,"55":0.017169,"56":0.034338,"57":0.017169,"58":0.005723,"59":0.040061,"60":0.074399,"61":0.011446,"62":0.017169,"63":0.028615,"64":0.028615,"65":0.188859,"66":4.149175,"67":0.040061,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0.005723,"12":0,"15":0.005723,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.005723,"26":0,"27":0,"28":0,"29":0,"30":0.005723,"31":0.005723,"32":0.011446,"33":0.005723,"34":0,"35":0.005723,"36":0.017169,"37":0,"38":0.005723,"39":0,"40":0.005723,"41":0,"42":0.005723,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.005723,"53":0,"54":0,"55":0,"56":0,"57":0.017169,"58":0.898511,"9.5-9.6":0,"10.0-10.1":0.005723,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.005723,"12.1":0.011446},E:{"4":0,"5":0,"6":0,"7":0.005723,"8":0.005723,"9":0.005723,"10":0.011446,"11":0.028615,"12":0.417779,_:"0","3.1":0,"3.2":0,"5.1":0.005723,"6.1":0,"7.1":0,"9.1":0.017169,"10.1":0.062953,"11.1":0.108737,"12.1":0.337657},G:{"8":0.065954464425098,"3.2":0.0042827574302011,"4.0-4.1":0.0025696544581207,"4.2-4.3":0.00085655148604023,"5.0-5.1":0.0085655148604023,"6.0-6.1":0.0042827574302011,"7.0-7.1":0.015417926748724,"8.1-8.4":0.033405507955569,"9.0-9.2":0.019700684178925,"9.3":0.16360133383368,"10.0-10.2":0.090794457520264,"10.3":0.21670752596818,"11.0-11.2":0.26724406364455,"11.3-11.4":0.54904950255179,"12.0-12.1":3.3148542509757,"12.2":3.8022320465326},I:{"3":0.00056870463709677,"4":0.081893467741935,_:"67","2.1":0.0039809324596774,"2.2":0.0068244556451613,"2.3":0.0039809324596774,"4.1":0.040946733870968,"4.2-4.3":0.17743584677419,"4.4":0,"4.4.3-4.4.4":0.24852392641129},A:{"6":0,"7":0,"8":0.045784,"9":0.040061,"10":0.017169,"11":1.442196,"5.5":0},B:{"12":0.011446,"13":0.011446,"14":0.028615,"15":0.091568,"16":0.045784,"17":0.892788,"18":0.291873},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.357435,"5.0-5.4":0.040849714285714,"6.2-6.4":0.16339885714286,"7.2-7.4":0.32679771428571,"8.2":1.6748382857143,"9.2":2.4407704285714},N:{"10":0.010623516129032,"11":0.31870548387097},J:{"7":0,"10":0.004277},S:{"2.5":0},R:{_:"0"},M:{"0":0.21385},O:{"0":0.098371},Q:{"1.2":0.004277},H:{"0":0.31988579553265},L:{"0":50.163418}};


/***/ }),
/* 348 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002551,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.002551,"30":0,"31":0,"32":0.002551,"33":0.020408,"34":0,"35":0.012755,"36":0.002551,"37":0,"38":0,"39":0,"40":0,"41":0.002551,"42":0,"43":0.002551,"44":0,"45":0,"46":0.002551,"47":0,"48":0,"49":0.10204,"50":0.002551,"51":0,"52":0,"53":0,"54":0.002551,"55":0.010204,"56":0.002551,"57":0.007653,"58":0.015306,"59":0.005102,"60":0.007653,"61":0,"62":0.002551,"63":0.012755,"64":0.015306,"65":0.135203,"66":0.005102,"67":0.015306,"68":0.005102,"69":0.02551,"70":0.02551,"71":0.058673,"72":0.150509,"73":3.13773,"74":0.002551,"75":0.002551,_:"76"},C:{"2":0,"3":0.007653,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.002551,"22":0,"23":0,"24":0,"25":0.002551,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.002551,"44":0.002551,"45":0.002551,"46":0,"47":0.015306,"48":0.005102,"49":0,"50":0.005102,"51":0,"52":0.022959,"53":0.022959,"54":0.005102,"55":0,"56":0.007653,"57":0,"58":0,"59":0.007653,"60":0.015306,"61":0.002551,"62":0.002551,"63":0.002551,"64":0.007653,"65":0.040816,"66":0.487241,"67":0.010204,"68":0.007653,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.007653,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.002551,"28":0.002551,"29":0.002551,"30":0.002551,"31":0.002551,"32":0,"33":0.007653,"34":0,"35":0,"36":0,"37":0,"38":0.002551,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.002551,"49":0,"50":0,"51":0.005102,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.002551,"58":0.403058,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0.002551,"11.6":0,"12.1":0.005102},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.020408,"12":0.181121,_:"0","3.1":0,"3.2":0,"5.1":0.183672,"6.1":0,"7.1":0,"9.1":0.005102,"10.1":0.017857,"11.1":0.061224,"12.1":0.109693},G:{"8":0.064695457019914,"3.2":0.0042010037025918,"4.0-4.1":0.0025206022215551,"4.2-4.3":0.00084020074051836,"5.0-5.1":0.0084020074051836,"6.0-6.1":0.0042010037025918,"7.0-7.1":0.015123613329331,"8.1-8.4":0.032767828880216,"9.0-9.2":0.019324617031922,"9.3":0.16047834143901,"10.0-10.2":0.089061278494946,"10.3":0.21257078735115,"11.0-11.2":0.26214263104173,"11.3-11.4":0.53856867467227,"12.0-12.1":3.2515768658061,"12.2":3.729651087161},I:{"3":0.0018793205645161,"4":0.27062216129032,_:"67","2.1":0.013155243951613,"2.2":0.022551846774194,"2.3":0.013155243951613,"4.1":0.13531108064516,"4.2-4.3":0.58634801612903,"4.4":0,"4.4.3-4.4.4":0.82126308669355},A:{"6":0,"7":0,"8":0.017857,"9":0.002551,"10":0.010204,"11":0.191325,"5.5":0},B:{"12":0.022959,"13":0.015306,"14":0.010204,"15":0.015306,"16":0.030612,"17":0.160713,"18":0.040816},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.75856788990826,"5.0-5.4":0.22251324770642,"6.2-6.4":0.060685431192661,"7.2-7.4":0.36411258715596,"8.2":0.60685431192661,"9.2":0.19217053211009},N:{"10":0.032661,"11":0.10887},J:{"7":0,"10":0.029796},S:{"2.5":0},R:{_:"0"},M:{"0":0.119184},O:{"0":0.305409},Q:{"1.2":0},H:{"0":3.6742128505155},L:{"0":75.262795}};


/***/ }),
/* 349 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.00602,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01204,"23":0,"24":0,"25":0.00602,"26":0.00602,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.02408,"35":0,"36":0,"37":0.00602,"38":0.05418,"39":0,"40":0.00602,"41":0.00602,"42":0,"43":0.00602,"44":0,"45":0,"46":0.00602,"47":0,"48":0.00602,"49":0.51772,"50":0.00602,"51":0,"52":0,"53":0.04214,"54":0.00602,"55":0.01806,"56":0.01204,"57":0.00602,"58":0.04816,"59":0.01806,"60":0.00602,"61":0.28896,"62":0.01204,"63":0.04214,"64":0.02408,"65":0.03612,"66":0.0602,"67":0.04816,"68":0.04214,"69":0.04214,"70":0.09632,"71":0.16254,"72":0.68628,"73":21.53354,"74":0.02408,"75":0.01806,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00602,"35":0.00602,"36":0,"37":0,"38":0.00602,"39":0,"40":0,"41":0,"42":0,"43":0.00602,"44":0,"45":0.01204,"46":0.01204,"47":0.02408,"48":0.0301,"49":0.00602,"50":0.01204,"51":0.01204,"52":0.2709,"53":0.01204,"54":0.00602,"55":0.01204,"56":0.03612,"57":0.02408,"58":0.01204,"59":0.01806,"60":0.12642,"61":0.02408,"62":0.04214,"63":0.04214,"64":0.04214,"65":0.26488,"66":5.46616,"67":0.01806,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.02408,"37":0.02408,"38":0.00602,"39":0,"40":0.00602,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00602,"50":0.00602,"51":0.00602,"52":0,"53":0,"54":0,"55":0,"56":0.00602,"57":0.00602,"58":1.36052,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01204},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.01204,"11":0.01806,"12":0.50568,_:"0","3.1":0,"3.2":0,"5.1":0.00602,"6.1":0,"7.1":0,"9.1":0.01204,"10.1":0.04214,"11.1":0.11438,"12.1":0.31906},G:{"8":0.096950805563895,"3.2":0.0062955068547984,"4.0-4.1":0.003777304112879,"4.2-4.3":0.0012591013709597,"5.0-5.1":0.012591013709597,"6.0-6.1":0.0062955068547984,"7.0-7.1":0.022663824677274,"8.1-8.4":0.049104953467427,"9.0-9.2":0.028959331532072,"9.3":0.2404883618533,"10.0-10.2":0.13346474532173,"10.3":0.3185526468528,"11.0-11.2":0.39283962773942,"11.3-11.4":0.80708397878515,"12.0-12.1":4.8727223056139,"12.2":5.58915098569},I:{"3":0.0004754435483871,"4":0.068463870967742,_:"67","2.1":0.0033281048387097,"2.2":0.0057053225806452,"2.3":0.0033281048387097,"4.1":0.034231935483871,"4.2-4.3":0.14833838709677,"4.4":0,"4.4.3-4.4.4":0.20776883064516},A:{"6":0,"7":0,"8":0.01204,"9":0.01806,"10":0.01204,"11":0.80668,"5.5":0},B:{"12":0.00602,"13":0.01204,"14":0.0301,"15":0.06622,"16":0.03612,"17":0.77056,"18":0.2709},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.38979381443299,"5.0-5.4":0.030773195876289,"6.2-6.4":0.051288659793814,"7.2-7.4":0.12309278350515,"8.2":1.0668041237113,"9.2":1.3232474226804},N:{"10":0,"11":0.13532},J:{"7":0,"10":0.01592},S:{"2.5":0},R:{_:"0"},M:{"0":0.24676},O:{"0":0.07562},Q:{"1.2":0.01592},H:{"0":0.48230487972509},L:{"0":45.21808}};


/***/ }),
/* 350 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.005044,"24":0,"25":0,"26":0,"27":0.005044,"28":0.005044,"29":0.02522,"30":0.005044,"31":0.02522,"32":0.010088,"33":0.020176,"34":0.005044,"35":0.005044,"36":0.005044,"37":0.005044,"38":0.005044,"39":0,"40":0.005044,"41":0.005044,"42":0.005044,"43":0.02522,"44":0.005044,"45":0.005044,"46":0.010088,"47":0.005044,"48":0.010088,"49":0.499356,"50":0.005044,"51":0.015132,"52":0.005044,"53":0.005044,"54":0.005044,"55":0.015132,"56":0.010088,"57":0.010088,"58":0.146276,"59":0.010088,"60":0.010088,"61":0.146276,"62":0.02522,"63":0.060528,"64":0.02522,"65":0.040352,"66":0.035308,"67":0.090792,"68":0.060528,"69":0.136188,"70":0.121056,"71":0.171496,"72":0.469092,"73":11.883664,"74":0.02522,"75":0.015132,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.005044,"31":0,"32":0,"33":0,"34":0.005044,"35":0.005044,"36":0.010088,"37":0.005044,"38":0.005044,"39":0.005044,"40":0.010088,"41":0.010088,"42":0.005044,"43":0.030264,"44":0.015132,"45":0.010088,"46":0.010088,"47":0.05044,"48":0.035308,"49":0.015132,"50":0.020176,"51":0.010088,"52":0.090792,"53":0.010088,"54":0.010088,"55":0.010088,"56":0.045396,"57":0.02522,"58":0.015132,"59":0.015132,"60":0.05044,"61":0.035308,"62":0.035308,"63":0.035308,"64":0.065572,"65":0.221936,"66":2.658188,"67":0.191672,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.010088,"29":0.005044,"30":0.005044,"31":0.005044,"32":0.015132,"33":0.015132,"34":0.005044,"35":0.010088,"36":0.005044,"37":0.2522,"38":0.005044,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.005044,"52":0,"53":0,"54":0,"55":0,"56":0.005044,"57":0.005044,"58":0.438828,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.010088},E:{"4":0,"5":0,"6":0,"7":0,"8":0.010088,"9":0.010088,"10":0.010088,"11":0.035308,"12":0.232024,_:"0","3.1":0,"3.2":0,"5.1":4.358016,"6.1":0,"7.1":0,"9.1":0.015132,"10.1":0.045396,"11.1":0.07566,"12.1":0.121056},G:{"8":0.02805959211448,"3.2":0.0018220514360052,"4.0-4.1":0.0010932308616031,"4.2-4.3":0.00036441028720104,"5.0-5.1":0.0036441028720104,"6.0-6.1":0.0018220514360052,"7.0-7.1":0.0065593851696187,"8.1-8.4":0.014212001200841,"9.0-9.2":0.0083814366056239,"9.3":0.069602364855399,"10.0-10.2":0.03862749044331,"10.3":0.092195802661863,"11.0-11.2":0.11369600960672,"11.3-11.4":0.23358699409587,"12.0-12.1":1.410267811468,"12.2":1.6176172648854},I:{"3":0.0050208669354839,"4":0.72300483870968,_:"67","2.1":0.035146068548387,"2.2":0.060250403225806,"2.3":0.035146068548387,"4.1":0.36150241935484,"4.2-4.3":1.566510483871,"4.4":0,"4.4.3-4.4.4":2.1941188508065},A:{"6":0,"7":0,"8":0.067500588235294,"9":0.0051923529411765,"10":0.010384705882353,"11":0.093462352941176,"5.5":0},B:{"12":0.005044,"13":0.005044,"14":0.015132,"15":0.010088,"16":0.020176,"17":0.211848,"18":0.05044},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.0099727272727,"5.0-5.4":0.050498636363636,"6.2-6.4":0.111097,"7.2-7.4":0.29289209090909,"8.2":0.777679,"9.2":0.42418854545455},N:{"10":0,"11":0.029736},J:{"7":0,"10":0.04956},S:{"2.5":0},R:{_:"0"},M:{"0":0.118944},O:{"0":4.083744},Q:{"1.2":0},H:{"0":3.016969257732},L:{"0":50.556032}};


/***/ }),
/* 351 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.004836,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.004836,"30":0,"31":0,"32":0,"33":0,"34":0.004836,"35":0,"36":0.004836,"37":0,"38":0.009672,"39":0,"40":0.294996,"41":0.062868,"42":0,"43":0.009672,"44":0.004836,"45":0.004836,"46":0.004836,"47":0,"48":0.004836,"49":0.198276,"50":0.004836,"51":0,"52":0,"53":0.004836,"54":0.014508,"55":0.02418,"56":0.014508,"57":0.029016,"58":0.014508,"59":0.357864,"60":0.014508,"61":0.014508,"62":0.029016,"63":0.077376,"64":0.019344,"65":0.043524,"66":0.033852,"67":0.087048,"68":0.038688,"69":0.04836,"70":0.058032,"71":0.174096,"72":1.030068,"73":11.441976,"74":0.019344,"75":0.009672,_:"76"},C:{"2":0,"3":0.009672,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.004836,"46":0.014508,"47":0,"48":0.043524,"49":0.004836,"50":0.009672,"51":0.004836,"52":0.638352,"53":0.004836,"54":0.02418,"55":0,"56":0.009672,"57":0.014508,"58":0,"59":0.004836,"60":0.125736,"61":0.009672,"62":0.033852,"63":0.009672,"64":0.02418,"65":0.116064,"66":1.18482,"67":0.009672,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.004836,"37":0.004836,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.004836,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.188604,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.004836,"6":0,"7":0,"8":0.198276,"9":0.004836,"10":0.02418,"11":0.033852,"12":0.498108,_:"0","3.1":0,"3.2":0,"5.1":0.009672,"6.1":0,"7.1":0,"9.1":0.033852,"10.1":0.07254,"11.1":0.130572,"12.1":0.333684},G:{"8":0.25921265205644,"3.2":0.016831990393275,"4.0-4.1":0.010099194235965,"4.2-4.3":0.0033663980786551,"5.0-5.1":0.033663980786551,"6.0-6.1":0.016831990393275,"7.0-7.1":0.060595165415791,"8.1-8.4":0.13128952506755,"9.0-9.2":0.077427155809066,"9.3":0.64298203302312,"10.0-10.2":0.35683819633744,"10.3":0.85169871389973,"11.0-11.2":1.0503162005404,"11.3-11.4":2.1578611684179,"12.0-12.1":13.027960564395,"12.2":14.94344107115},I:{"3":0.00062367741935484,"4":0.089809548387097,_:"67","2.1":0.0043657419354839,"2.2":0.0074841290322581,"2.3":0.0043657419354839,"4.1":0.044904774193548,"4.2-4.3":0.19458735483871,"4.4":0,"4.4.3-4.4.4":0.27254703225806},A:{"6":0,"7":0,"8":0.040320405063291,"9":0.13608136708861,"10":0.03528035443038,"11":0.98280987341772,"5.5":0},B:{"12":0.004836,"13":0.009672,"14":0.02418,"15":0.043524,"16":0.053196,"17":1.0881,"18":0.464256},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.19561178067885,"5.0-5.4":0.076071248041775,"6.2-6.4":0.054336605744125,"7.2-7.4":0.1738771383812,"8.2":1.6518328146214,"9.2":2.0104544125326},N:{"10":0,"11":0.041312},J:{"7":0,"10":0.005164},S:{"2.5":0},R:{_:"0"},M:{"0":0.211724},O:{"0":0.108444},Q:{"1.2":0.041312},H:{"0":0.11733459793814},L:{"0":37.740084}};


/***/ }),
/* 352 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005752,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005752,"23":0.005752,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.05752,"30":0,"31":0.040264,"32":0.011504,"33":0.005752,"34":0.005752,"35":0.005752,"36":0,"37":0.005752,"38":0.017256,"39":0.005752,"40":0.011504,"41":0.005752,"42":0,"43":0.011504,"44":0.005752,"45":0,"46":0,"47":0.005752,"48":0.005752,"49":0.54644,"50":0.005752,"51":0.011504,"52":0,"53":0.011504,"54":0.005752,"55":0.011504,"56":0.011504,"57":0.017256,"58":0.017256,"59":0.011504,"60":0.017256,"61":0.11504,"62":0.02876,"63":0.051768,"64":0.040264,"65":0.103536,"66":0.040264,"67":0.166808,"68":0.11504,"69":0.051768,"70":0.11504,"71":0.235832,"72":1.55304,"73":22.294752,"74":0.040264,"75":0.02876,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.005752,"25":0.011504,"26":0.02876,"27":0.005752,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.005752,"36":0.005752,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.005752,"46":0,"47":0.011504,"48":0.051768,"49":0.005752,"50":0.005752,"51":0,"52":0.092032,"53":0,"54":0.005752,"55":0,"56":0.011504,"57":0.023008,"58":0,"59":0.005752,"60":0.034512,"61":0.005752,"62":0.005752,"63":0.005752,"64":0.02876,"65":0.11504,"66":1.173408,"67":0.017256,"68":0,"3.5":0,"3.6":0.005752},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.005752,"37":0.005752,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.293352,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005752},E:{"4":0,"5":0,"6":0,"7":0.005752,"8":0.109288,"9":0,"10":0.011504,"11":0.02876,"12":0.368128,_:"0","3.1":0,"3.2":0,"5.1":0.005752,"6.1":0.155304,"7.1":0,"9.1":0.023008,"10.1":0.155304,"11.1":0.097784,"12.1":0.241584},G:{"8":0.10369555248674,"3.2":0.0067334774342039,"4.0-4.1":0.0040400864605224,"4.2-4.3":0.0013466954868408,"5.0-5.1":0.013466954868408,"6.0-6.1":0.0067334774342039,"7.0-7.1":0.024240518763134,"8.1-8.4":0.052521123986791,"9.0-9.2":0.030973996197338,"9.3":0.25721883798659,"10.0-10.2":0.14274972160512,"10.3":0.34071395817072,"11.0-11.2":0.42016899189433,"11.3-11.4":0.86323180706495,"12.0-12.1":5.2117115340739,"12.2":5.9779812660863},I:{"3":0.00038984677419355,"4":0.056137935483871,_:"67","2.1":0.0027289274193548,"2.2":0.0046781612903226,"2.3":0.0027289274193548,"4.1":0.028068967741935,"4.2-4.3":0.12163219354839,"4.4":0,"4.4.3-4.4.4":0.17036304032258},A:{"6":0,"7":0,"8":0.028851884984026,"9":0.02308150798722,"10":0.028851884984026,"11":1.7253427220447,"5.5":0},B:{"12":0,"13":0.005752,"14":0.017256,"15":0.011504,"16":0.02876,"17":0.684488,"18":0.281848},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.42129343737166,"5.0-5.4":0.061652698151951,"6.2-6.4":0.061652698151951,"7.2-7.4":0.39046708829569,"8.2":1.8906827433265,"9.2":2.1783953347023},N:{"10":0,"11":0.012744},J:{"7":0,"10":0.004248},S:{"2.5":0},R:{_:"0"},M:{"0":0.093456},O:{"0":0.08496},Q:{"1.2":0.004248},H:{"0":0.16489101030928},L:{"0":45.496064}};


/***/ }),
/* 353 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.006893,"34":0,"35":0,"36":0,"37":0,"38":0.006893,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.006893,"47":0.013786,"48":0,"49":0.130967,"50":0,"51":0,"52":0,"53":0.117181,"54":0.006893,"55":0.06893,"56":0.041358,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.006893,"63":0.337757,"64":0,"65":0,"66":0.020679,"67":0.096502,"68":0.020679,"69":0.062037,"70":0.048251,"71":0.303292,"72":9.071188,"73":18.466347,"74":0.020679,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0.006893,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.013786,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.006893,"43":0,"44":0,"45":0.006893,"46":0,"47":0,"48":0.020679,"49":0.020679,"50":0,"51":0.006893,"52":0.048251,"53":0,"54":0,"55":0,"56":0.806481,"57":0,"58":0,"59":0,"60":0.034465,"61":0,"62":0,"63":0.006893,"64":0.006893,"65":0.227469,"66":1.592283,"67":0.006893,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.006893,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.709979,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.013786,"6":0,"7":0,"8":0.062037,"9":0.020679,"10":0.013786,"11":0.020679,"12":0.834053,_:"0","3.1":0,"3.2":0,"5.1":0.034465,"6.1":0.013786,"7.1":0,"9.1":0.082716,"10.1":0.089609,"11.1":0.448045,"12.1":0.592798},G:{"8":0.26311756839788,"3.2":0.017085556389473,"4.0-4.1":0.010251333833684,"4.2-4.3":0.0034171112778945,"5.0-5.1":0.034171112778945,"6.0-6.1":0.017085556389473,"7.0-7.1":0.061508003002101,"8.1-8.4":0.13326733983789,"9.0-9.2":0.078593559391574,"9.3":0.65266825407785,"10.0-10.2":0.36221379545682,"10.3":0.86452915330732,"11.0-11.2":1.0661387187031,"11.3-11.4":2.1903683291304,"12.0-12.1":13.224220645452,"12.2":15.168556962574},I:{"3":0.0007811875,"4":0.112491,_:"67","2.1":0.0054683125,"2.2":0.00937425,"2.3":0.0054683125,"4.1":0.0562455,"4.2-4.3":0.2437305,"4.4":0,"4.4.3-4.4.4":0.3413789375},A:{"6":0,"7":0,"8":0,"9":0.30399897435897,"10":0.0069090675990676,"11":2.653081958042,"5.5":0},B:{"12":0,"13":0.020679,"14":0.158539,"15":0.909876,"16":0.103395,"17":2.026542,"18":1.564711},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.10259664084507,"5.0-5.4":0.022799253521127,"6.2-6.4":0.011399626760563,"7.2-7.4":0.056998133802817,"8.2":1.3223567042254,"9.2":1.7213436408451},N:{"10":0,"11":0.065247},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.730145},O:{"0":0.049712},Q:{"1.2":0},H:{"0":0.07942068556701},L:{"0":16.188425}};


/***/ }),
/* 354 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002939,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.002939,"26":0,"27":0.002939,"28":0.002939,"29":0.008817,"30":0.002939,"31":0.002939,"32":0.002939,"33":0.008817,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.002939,"44":0,"45":0,"46":0.002939,"47":0,"48":0.038207,"49":0.08817,"50":0.002939,"51":0.005878,"52":0.002939,"53":0.002939,"54":0.002939,"55":0.002939,"56":0.002939,"57":0.002939,"58":0.020573,"59":0.002939,"60":0.002939,"61":0.014695,"62":0.005878,"63":0.020573,"64":0.008817,"65":0.014695,"66":0.014695,"67":0.020573,"68":0.014695,"69":0.032329,"70":0.041146,"71":0.067597,"72":0.199852,"73":5.754562,"74":0.020573,"75":0.014695,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.014695,"32":0,"33":0,"34":0,"35":0.049963,"36":0,"37":0,"38":0.002939,"39":0,"40":0.002939,"41":0,"42":0.002939,"43":0.005878,"44":0.002939,"45":0.002939,"46":0,"47":0.096987,"48":0.005878,"49":0.002939,"50":0.002939,"51":0.002939,"52":0.038207,"53":0.002939,"54":0.002939,"55":0,"56":0.008817,"57":0.002939,"58":0.002939,"59":0.005878,"60":0.017634,"61":0.005878,"62":0.005878,"63":0.008817,"64":0.014695,"65":0.044085,"66":0.523142,"67":0.085231,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.002939,"29":0,"30":0.002939,"31":0,"32":0.002939,"33":0.002939,"34":0,"35":0.002939,"36":0.002939,"37":0.052902,"38":0.08817,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.002939,"46":0,"47":0,"48":0,"49":0.002939,"50":0.002939,"51":0.005878,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.126377,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005878},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.005878,"10":0.002939,"11":0.002939,"12":0.05878,_:"0","3.1":0,"3.2":0,"5.1":0.011756,"6.1":0,"7.1":0,"9.1":0.002939,"10.1":0.005878,"11.1":0.014695,"12.1":0.032329},G:{"8":0.01727418292805,"3.2":0.0011217001901331,"4.0-4.1":0.00067302011407986,"4.2-4.3":0.00022434003802662,"5.0-5.1":0.0022434003802662,"6.0-6.1":0.0011217001901331,"7.0-7.1":0.0040381206844791,"8.1-8.4":0.0087492614830381,"9.0-9.2":0.0051598208746122,"9.3":0.042848947263084,"10.0-10.2":0.023780044030822,"10.3":0.056758029620735,"11.0-11.2":0.069994091864305,"11.3-11.4":0.14380196437506,"12.0-12.1":0.86819594716301,"12.2":0.99584542880016},I:{"3":0.00050464717741935,"4":0.072669193548387,_:"67","2.1":0.0035325302419355,"2.2":0.0060557661290323,"2.3":0.0035325302419355,"4.1":0.036334596774194,"4.2-4.3":0.15744991935484,"4.4":0,"4.4.3-4.4.4":0.22053081653226},A:{"6":0,"7":0,"8":0.011756,"9":0.002939,"10":0.002939,"11":0.064658,"5.5":0},B:{"12":0.002939,"13":0.005878,"14":0.008817,"15":0.005878,"16":0.008817,"17":0.073475,"18":0.026451},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.87374733495146,"5.0-5.4":0.040172291262136,"6.2-6.4":0.090387655339806,"7.2-7.4":0.31133525728155,"8.2":0.51219671359223,"9.2":0.24103374757282},N:{"10":0.0105915,"11":0.0953235},J:{"7":0,"10":0.007061},S:{"2.5":3.205694},R:{_:"0"},M:{"0":0.105915},O:{"0":17.094681},Q:{"1.2":0},H:{"0":3.6365848522337},L:{"0":54.106528}};


/***/ }),
/* 355 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002925,"12":0,"13":0.00585,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00585,"23":0.002925,"24":0,"25":0.002925,"26":0.0117,"27":0,"28":0,"29":0.002925,"30":0.002925,"31":0.061425,"32":0.002925,"33":0.032175,"34":0.002925,"35":0,"36":0,"37":0,"38":0.020475,"39":0.002925,"40":0.014625,"41":0.002925,"42":0.002925,"43":0.114075,"44":0,"45":0.002925,"46":0,"47":0.002925,"48":0.002925,"49":0.04095,"50":0,"51":0.002925,"52":0.002925,"53":0.002925,"54":0.002925,"55":0.00585,"56":0.014625,"57":0.008775,"58":0.0117,"59":0.002925,"60":0.00585,"61":0.2691,"62":0.00585,"63":0.0468,"64":0.002925,"65":0.102375,"66":0.00585,"67":0.014625,"68":0.014625,"69":0.0702,"70":0.0585,"71":0.067275,"72":0.16965,"73":4.928625,"74":0.00585,"75":0.00585,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.002925,"41":0.002925,"42":0.002925,"43":0.00585,"44":0,"45":0,"46":0,"47":0.00585,"48":0.00585,"49":0,"50":0,"51":0.002925,"52":0.01755,"53":0.002925,"54":0,"55":0,"56":0.002925,"57":0.002925,"58":0,"59":0.002925,"60":0.0117,"61":0.002925,"62":0.002925,"63":0.002925,"64":0.008775,"65":0.0351,"66":0.52065,"67":0.026325,"68":0.002925,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00585,"57":0.002925,"58":0.307125,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.002925,"9":0,"10":0,"11":0.002925,"12":0.06435,_:"0","3.1":0,"3.2":0,"5.1":0.014625,"6.1":0,"7.1":0,"9.1":0,"10.1":0.002925,"11.1":0.008775,"12.1":0.049725},G:{"8":0.13409619733814,"3.2":0.0087075452816972,"4.0-4.1":0.0052245271690183,"4.2-4.3":0.0017415090563394,"5.0-5.1":0.017415090563394,"6.0-6.1":0.0087075452816972,"7.0-7.1":0.03134716301411,"8.1-8.4":0.067918853197238,"9.0-9.2":0.040054708295807,"9.3":0.33262822976083,"10.0-10.2":0.18459995997198,"10.3":0.44060179125388,"11.0-11.2":0.5433508255779,"11.3-11.4":1.1163073051136,"12.0-12.1":6.7396400480336,"12.2":7.7305587010908},I:{"3":0.0024185231854839,"4":0.34826733870968,_:"67","2.1":0.016929662298387,"2.2":0.029022278225806,"2.3":0.016929662298387,"4.1":0.17413366935484,"4.2-4.3":0.75457923387097,"4.4":0,"4.4.3-4.4.4":1.0568946320565},A:{"6":0,"7":0,"8":0.022080882352941,"9":0.0031544117647059,"10":0.0063088235294118,"11":0.12933088235294,"5.5":0},B:{"12":0.002925,"13":0.00585,"14":0.00585,"15":0.00585,"16":0.014625,"17":0.09945,"18":0.0468},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.1099564719359,"5.0-5.4":0.093360824742268,"6.2-6.4":0.17634822451317,"7.2-7.4":0.51867124856816,"8.2":3.3298694158076,"9.2":3.827793814433},N:{"10":0,"11":0.0283},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.106125},O:{"0":0.4528},Q:{"1.2":0.0283},H:{"0":0.26792611683849},L:{"0":59.6}};


/***/ }),
/* 356 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.015729,"13":0.408954,"21":0.005243,"22":0.005243,"23":0.005243,"24":0.010486,"25":0.115346,"26":0.005243,"29":0.225449,"31":0.057673,"32":0.047187,"33":0.026215,"34":0.010486,"35":0.005243,"38":0.031458,"39":0.010486,"40":0.010486,"42":0.010486,"43":0.010486,"44":0.015729,"45":0.005243,"46":0.010486,"47":0.010486,"48":0.015729,"49":0.671104,"50":0.015729,"51":0.015729,"52":0.010486,"53":0.010486,"54":0.026215,"55":0.036701,"56":0.020972,"57":0.020972,"58":0.099617,"59":0.015729,"60":0.036701,"61":0.057673,"62":0.125832,"63":0.173019,"64":0.089131,"65":0.083888,"66":0.057673,"67":0.083888,"68":0.083888,"69":0.193991,"70":0.162533,"71":0.335552,"72":1.829807,"73":27.483806,"74":0.041944,"75":0.020972,_:"4 5 6 7 8 9 10 12 14 15 16 17 18 19 20 27 28 30 36 37 41 76"},C:{"12":0.010486,"29":0.005243,"33":0.010486,"35":0.005243,"37":0.010486,"38":0.010486,"39":0.005243,"40":0.010486,"41":0.010486,"42":0.010486,"43":0.094374,"44":0.010486,"45":0.031458,"46":0.015729,"47":0.131075,"48":0.083888,"49":0.031458,"50":0.041944,"51":0.010486,"52":0.387982,"53":0.015729,"54":0.020972,"55":0.015729,"56":0.094374,"57":0.083888,"58":0.036701,"59":0.05243,"60":0.387982,"61":0.073402,"62":0.094374,"63":0.068159,"64":0.146804,"65":1.006656,"66":9.783438,"67":0.325066,_:"2 3 4 5 6 7 8 9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 34 36 68 3.5 3.6"},F:{"49":0.010486,"56":0.005243,"57":0.005243,"58":0.954226,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 50 51 52 53 54 55 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},E:{"4":0,"8":0.010486,"9":0.026215,"10":0.015729,"11":0.047187,"12":0.220206,_:"0 5 6 7 3.1 3.2 6.1 7.1","5.1":0.031458,"9.1":0.015729,"10.1":0.041944,"11.1":0.078645,"12.1":0.120589},G:{"8":0.035078412188532,"3.2":0.0022778189732813,"4.0-4.1":0.0013666913839688,"4.2-4.3":0.00045556379465626,"5.0-5.1":0.0045556379465626,"6.0-6.1":0.0022778189732813,"7.0-7.1":0.0082001483038127,"8.1-8.4":0.017766987991594,"9.0-9.2":0.010477967277094,"9.3":0.087012684779346,"10.0-10.2":0.048289762233564,"10.3":0.11525764004803,"11.0-11.2":0.14213590393275,"11.3-11.4":0.29201639237466,"12.0-12.1":1.7630318853197,"12.2":2.0222476844791},I:{"3":0.0018222379032258,"4":0.26240225806452,_:"67","2.1":0.012755665322581,"2.2":0.02186685483871,"2.3":0.012755665322581,"4.1":0.13120112903226,"4.2-4.3":0.56853822580645,"4.4":0,"4.4.3-4.4.4":0.79631796370968},A:{"6":0.074994548323471,"7":0.080351301775148,"8":0.55710235897436,"9":0.19284312426036,"10":0.182129617357,"11":1.6284530493097,_:"5.5"},B:{"12":0.036701,"13":0.020972,"14":0.047187,"15":0.041944,"16":0.05243,"17":0.435169,"18":0.173019},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.4672717580645,"5.0-5.4":0.48736232258065,"6.2-6.4":0.35536836021505,"7.2-7.4":1.2894794784946,"8.2":3.9293587258065,"9.2":0.91380435483871},N:{"10":0,"11":0.028542},J:{"7":0,"10":0.023785},S:{_:"2.5"},R:{_:"0"},M:{"0":0.918101},O:{"0":0.280663},Q:{_:"1.2"},H:{"0":1.4051295257732},L:{"0":29.852898}};


/***/ }),
/* 357 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.013542,"35":0,"36":0,"37":0,"38":0.047397,"39":0,"40":0,"41":0.013542,"42":0,"43":0.006771,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.243756,"50":0.006771,"51":0,"52":0,"53":0.006771,"54":0.013542,"55":0.013542,"56":0.013542,"57":0.020313,"58":0.13542,"59":0.006771,"60":0.230214,"61":0.345321,"62":0.013542,"63":0.013542,"64":0.027084,"65":0.054168,"66":0.047397,"67":0.115107,"68":0.040626,"69":0.040626,"70":0.128649,"71":0.345321,"72":2.329224,"73":24.619356,"74":0.054168,"75":0.006771,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.006771,"25":0.006771,"26":0,"27":0,"28":0,"29":0.006771,"30":0,"31":0.006771,"32":0.006771,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.013542,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.013542,"46":0.006771,"47":0.006771,"48":0.027084,"49":0.006771,"50":0.013542,"51":0.006771,"52":0.209901,"53":0,"54":0,"55":0,"56":0.006771,"57":0.006771,"58":0.013542,"59":0,"60":0.961482,"61":0.006771,"62":0.006771,"63":0.365634,"64":0.033855,"65":0.40626,"66":3.175599,"67":0.040626,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.528138,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.006771,"9":0.006771,"10":0.088023,"11":0.06771,"12":1.774002,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.006771,"7.1":0,"9.1":0.121878,"10.1":0.230214,"11.1":0.467199,"12.1":1.08336},G:{"8":0.1835707277094,"3.2":0.011920177123987,"4.0-4.1":0.0071521062743921,"4.2-4.3":0.0023840354247974,"5.0-5.1":0.023840354247974,"6.0-6.1":0.011920177123987,"7.0-7.1":0.042912637646352,"8.1-8.4":0.092977381567097,"9.0-9.2":0.054832814770339,"9.3":0.4553507661363,"10.0-10.2":0.25270775502852,"10.3":0.60316096247373,"11.0-11.2":0.74381905253678,"11.3-11.4":1.5281667072951,"12.0-12.1":9.2262170939658,"12.2":10.582733250675},I:{"3":0.00017462600806452,"4":0.02514614516129,_:"67","2.1":0.0012223820564516,"2.2":0.0020955120967742,"2.3":0.0012223820564516,"4.1":0.012573072580645,"4.2-4.3":0.054483314516129,"4.4":0,"4.4.3-4.4.4":0.076311565524194},A:{"6":0,"7":0,"8":0.013542,"9":0.047397,"10":0,"11":1.3542,"5.5":0},B:{"12":0,"13":0.013542,"14":0.033855,"15":0.047397,"16":0.06771,"17":1.645353,"18":0.589077},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.2049761734104,"5.0-5.4":0.14024685549133,"6.2-6.4":0.021576439306358,"7.2-7.4":0.11867041618497,"8.2":1.4024685549133,"9.2":1.8447855606936},N:{"10":0,"11":0},J:{"7":0,"10":0.003229},S:{"2.5":0},R:{_:"0"},M:{"0":0.435915},O:{"0":0.122702},Q:{"1.2":0},H:{"0":0.039741111683849},L:{"0":26.290446}};


/***/ }),
/* 358 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006088,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.012176,"23":0,"24":0,"25":0.024352,"26":0.006088,"27":0,"28":0,"29":0.109584,"30":0,"31":0.006088,"32":0,"33":0.006088,"34":0.012176,"35":0,"36":0.012176,"37":0,"38":0.036528,"39":0.006088,"40":0.012176,"41":0.024352,"42":0,"43":0.018264,"44":0.006088,"45":0.006088,"46":0.006088,"47":0.006088,"48":0.012176,"49":0.694032,"50":0.006088,"51":0.012176,"52":0.006088,"53":0.024352,"54":0.024352,"55":0.042616,"56":0.012176,"57":0.012176,"58":0.036528,"59":0.018264,"60":0.012176,"61":0.127848,"62":0.042616,"63":0.109584,"64":0.042616,"65":0.06088,"66":0.066968,"67":0.115672,"68":0.054792,"69":0.066968,"70":0.097408,"71":0.176552,"72":0.803616,"73":19.250256,"74":0.03044,"75":0.012176,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.006088,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006088,"35":0,"36":0,"37":0,"38":0.006088,"39":0,"40":0,"41":0.006088,"42":0.006088,"43":0.006088,"44":0,"45":0.012176,"46":0,"47":0.006088,"48":0.18264,"49":0.006088,"50":0.018264,"51":0.012176,"52":0.194816,"53":0.018264,"54":0.012176,"55":0.012176,"56":0.048704,"57":0.018264,"58":0.018264,"59":0.03044,"60":0.079144,"61":0.018264,"62":0.012176,"63":0.024352,"64":0.042616,"65":0.249608,"66":3.427544,"67":0.024352,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.012176,"37":0,"38":0,"39":0,"40":0.006088,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.006088,"50":0,"51":0.006088,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.468776,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006088},E:{"4":0,"5":0.012176,"6":0,"7":0.006088,"8":0.012176,"9":0.024352,"10":0.036528,"11":0.109584,"12":1.509824,_:"0","3.1":0,"3.2":0,"5.1":0.024352,"6.1":0.042616,"7.1":0.018264,"9.1":0.097408,"10.1":0.200904,"11.1":0.39572,"12.1":1.211512},G:{"8":0.12566270549385,"3.2":0.0081599159411588,"4.0-4.1":0.0048959495646953,"4.2-4.3":0.0016319831882318,"5.0-5.1":0.016319831882318,"6.0-6.1":0.0081599159411588,"7.0-7.1":0.029375697388172,"8.1-8.4":0.063647344341039,"9.0-9.2":0.037535613329331,"9.3":0.31170878895227,"10.0-10.2":0.17299021795257,"10.3":0.41289174662264,"11.0-11.2":0.50917875472831,"11.3-11.4":1.0461012236566,"12.0-12.1":6.3157749384569,"12.2":7.2443733725608},I:{"3":0.00077135483870968,"4":0.11107509677419,_:"67","2.1":0.0053994838709677,"2.2":0.0092562580645161,"2.3":0.0053994838709677,"4.1":0.055537548387097,"4.2-4.3":0.24066270967742,"4.4":0,"4.4.3-4.4.4":0.33708206451613},A:{"6":0,"7":0,"8":0.055446884462151,"9":0.024643059760956,"10":0.043125354581673,"11":1.4231367011952,"5.5":0},B:{"12":0.012176,"13":0.018264,"14":0.036528,"15":0.06088,"16":0.06088,"17":1.12628,"18":0.432248},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.47100063829787,"5.0-5.4":0.052333404255319,"6.2-6.4":0.073266765957447,"7.2-7.4":0.30353374468085,"8.2":1.5176687234043,"9.2":1.5176687234043},N:{"10":0.011736,"11":0.140832},J:{"7":0,"10":0.007824},S:{"2.5":0},R:{_:"0"},M:{"0":0.211248},O:{"0":0.207336},Q:{"1.2":0.027384},H:{"0":0.15184878350515},L:{"0":40.44516}};


/***/ }),
/* 359 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.005154,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005154,"35":0,"36":0,"37":0,"38":0.030924,"39":0.02577,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.767946,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.201006,"63":0.05154,"64":0,"65":0.010308,"66":0.005154,"67":0.262854,"68":0.041232,"69":0.010308,"70":0.05154,"71":0.201006,"72":0.788562,"73":10.431696,"74":0.020616,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.005154,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.02577,"44":0,"45":0,"46":0,"47":0,"48":0.015462,"49":0,"50":0,"51":0,"52":0.015462,"53":0.005154,"54":0,"55":0,"56":0.046386,"57":0,"58":0,"59":0,"60":0.015462,"61":0.005154,"62":0.005154,"63":0,"64":0.015462,"65":0.061848,"66":0.840102,"67":0.082464,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.005154,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.118542,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.005154,"6":0,"7":0.005154,"8":0.010308,"9":0.015462,"10":0.020616,"11":0.061848,"12":1.118418,_:"0","3.1":0,"3.2":0,"5.1":0.005154,"6.1":0.005154,"7.1":0,"9.1":0.113388,"10.1":0.355626,"11.1":0.520554,"12.1":0.881334},G:{"8":0.39216142379666,"3.2":0.025465027519263,"4.0-4.1":0.015279016511558,"4.2-4.3":0.0050930055038527,"5.0-5.1":0.050930055038527,"6.0-6.1":0.025465027519263,"7.0-7.1":0.091674099069349,"8.1-8.4":0.19862721465026,"9.0-9.2":0.11713912658861,"9.3":0.97276405123587,"10.0-10.2":0.53985858340839,"10.3":1.2885303924747,"11.0-11.2":1.589017717202,"11.3-11.4":3.2646165279696,"12.0-12.1":19.70993129991,"12.2":22.607851431602},I:{"3":0.0015185745967742,"4":0.21867474193548,_:"67","2.1":0.010630022177419,"2.2":0.01822289516129,"2.3":0.010630022177419,"4.1":0.10933737096774,"4.2-4.3":0.47379527419355,"4.4":0,"4.4.3-4.4.4":0.66361709879032},A:{"6":0,"7":0,"8":0.005154,"9":0.005154,"10":0.005154,"11":2.509998,"5.5":0},B:{"12":0.005154,"13":0.005154,"14":0.015462,"15":0.113388,"16":0.067002,"17":1.195728,"18":0.757638},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.38649624427481,"5.0-5.4":0,"6.2-6.4":0.012078007633588,"7.2-7.4":0.084546053435115,"8.2":1.0628646717557,"9.2":1.6184530229008},N:{"10":0,"11":0.033922},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.116304},O:{"0":0.009692},Q:{"1.2":0},H:{"0":0.045878797250859},L:{"0":20.38165}};


/***/ }),
/* 360 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.005074,"20":0,"21":0,"22":0.005074,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005074,"32":0,"33":0,"34":0,"35":0,"36":0.005074,"37":0.005074,"38":0.010148,"39":0.020296,"40":0.005074,"41":0,"42":0,"43":0.010148,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.263848,"50":0.005074,"51":0.005074,"52":0.010148,"53":0.02537,"54":0,"55":0.005074,"56":0.005074,"57":0.005074,"58":0.02537,"59":0.005074,"60":0.005074,"61":0.02537,"62":0.010148,"63":0.035518,"64":0.010148,"65":0.12685,"66":0.020296,"67":0.116702,"68":0.020296,"69":0.045666,"70":0.05074,"71":0.17759,"72":1.182242,"73":14.58775,"74":0.035518,"75":0.02537,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.010148,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.005074,"44":0,"45":0,"46":0,"47":0.005074,"48":0.015222,"49":0,"50":0,"51":0,"52":0.045666,"53":0,"54":0.005074,"55":0,"56":0.005074,"57":0.030444,"58":0,"59":0,"60":0.010148,"61":0.02537,"62":0.005074,"63":0.005074,"64":0.015222,"65":0.10148,"66":1.004652,"67":0.030444,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.005074,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.005074,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.005074,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.005074,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.38055,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.010148},E:{"4":0,"5":0,"6":0,"7":0,"8":0.005074,"9":0.005074,"10":0.005074,"11":0.020296,"12":0.93869,_:"0","3.1":0,"3.2":0,"5.1":0.060888,"6.1":0,"7.1":0,"9.1":0.015222,"10.1":0.086258,"11.1":0.20296,"12.1":0.613954},G:{"8":0.11223970919644,"3.2":0.0072882928049635,"4.0-4.1":0.0043729756829781,"4.2-4.3":0.0014576585609927,"5.0-5.1":0.014576585609927,"6.0-6.1":0.0072882928049635,"7.0-7.1":0.026237854097869,"8.1-8.4":0.056848683878715,"9.0-9.2":0.033526146902832,"9.3":0.2784127851496,"10.0-10.2":0.15451180746523,"10.3":0.36878761593115,"11.0-11.2":0.45478947102972,"11.3-11.4":0.93435913759632,"12.0-12.1":5.6411386310417,"12.2":6.4705463522466},I:{"3":0.0015681693548387,"4":0.22581638709677,_:"67","2.1":0.010977185483871,"2.2":0.018818032258065,"2.3":0.010977185483871,"4.1":0.11290819354839,"4.2-4.3":0.48926883870968,"4.4":0,"4.4.3-4.4.4":0.68529000806452},A:{"6":0,"7":0,"8":0.041873852631579,"9":0.015702694736842,"10":0.015702694736842,"11":0.42397275789474,"5.5":0},B:{"12":0.015222,"13":0.030444,"14":0.035518,"15":0.060888,"16":0.096406,"17":1.085836,"18":0.2537},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.35907880719794,"5.0-5.4":0.63366848329049,"6.2-6.4":0.073927989717224,"7.2-7.4":0.23234511053985,"8.2":1.3835095218509,"9.2":1.4257540874036},N:{"10":0.012588666666667,"11":0.10070933333333},J:{"7":0,"10":0.02463},S:{"2.5":0},R:{_:"0"},M:{"0":0.152706},O:{"0":0.596046},Q:{"1.2":0.019704},H:{"0":0.41506205154639},L:{"0":52.864616}};


/***/ }),
/* 361 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.005307,"27":0.005307,"28":0,"29":0.05307,"30":0,"31":0,"32":0,"33":0.010614,"34":0.010614,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.005307,"41":0,"42":0,"43":0.015921,"44":0,"45":0.015921,"46":0.005307,"47":0.005307,"48":0,"49":0.536007,"50":0.010614,"51":0.005307,"52":0,"53":0,"54":0.015921,"55":0.005307,"56":0.005307,"57":0,"58":0.047763,"59":0.005307,"60":0.010614,"61":0.084912,"62":0.031842,"63":0.037149,"64":0.026535,"65":0.127368,"66":0.037149,"67":0.100833,"68":0.047763,"69":0.090219,"70":0.111447,"71":0.180438,"72":0.732366,"73":18.993753,"74":0.042456,"75":0.031842,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.031842,"41":0,"42":0,"43":0,"44":0.010614,"45":0.005307,"46":0,"47":0.005307,"48":0.063684,"49":0,"50":0,"51":0,"52":0.026535,"53":0.005307,"54":0,"55":0,"56":0.005307,"57":0,"58":0.005307,"59":0.005307,"60":0.010614,"61":0.005307,"62":0.015921,"63":0.031842,"64":0.010614,"65":0.074298,"66":1.347978,"67":0.026535,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.005307,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.005307,"58":0.562542,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.005307,"8":0.005307,"9":0.005307,"10":0.021228,"11":0.047763,"12":0.578463,_:"0","3.1":0,"3.2":0,"5.1":0.026535,"6.1":0,"7.1":0,"9.1":0.026535,"10.1":0.116754,"11.1":0.228201,"12.1":0.382104},G:{"8":0.082171351746222,"3.2":0.005335802061443,"4.0-4.1":0.0032014812368658,"4.2-4.3":0.0010671604122886,"5.0-5.1":0.010671604122886,"6.0-6.1":0.005335802061443,"7.0-7.1":0.019208887421195,"8.1-8.4":0.041619256079255,"9.0-9.2":0.024544689482638,"9.3":0.20382763874712,"10.0-10.2":0.11311900370259,"10.3":0.26999158430902,"11.0-11.2":0.33295404863404,"11.3-11.4":0.68404982427699,"12.0-12.1":4.1299107955569,"12.2":4.7371250701491},I:{"3":0.00086406149193548,"4":0.12442485483871,_:"67","2.1":0.0060484304435484,"2.2":0.010368737903226,"2.3":0.0060484304435484,"4.1":0.062212427419355,"4.2-4.3":0.26958718548387,"4.4":0,"4.4.3-4.4.4":0.37759487197581},A:{"6":0.042456,"7":0,"8":0.037149,"9":0.005307,"10":0.031842,"11":0.329034,"5.5":0},B:{"12":0.005307,"13":0.010614,"14":0.015921,"15":0.021228,"16":0.026535,"17":0.573156,"18":0.191052},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.42805848484848,"5.0-5.4":0.050959343434343,"6.2-6.4":0.08153494949495,"7.2-7.4":0.3567154040404,"8.2":1.1720648989899,"9.2":0.93765191919192},N:{"10":0,"11":0.042237},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.084474},O:{"0":0.591318},Q:{"1.2":0.004693},H:{"0":0.33767021993127},L:{"0":55.537393}};


/***/ }),
/* 362 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006456,"35":0.012912,"36":0,"37":0,"38":0.006456,"39":0,"40":0.006456,"41":0.012912,"42":0,"43":0.012912,"44":0,"45":0.006456,"46":0.012912,"47":0.025824,"48":0.012912,"49":0.800544,"50":0.006456,"51":0.006456,"52":0.006456,"53":0.006456,"54":0.045192,"55":0.058104,"56":0.038736,"57":0.025824,"58":0.019368,"59":0.012912,"60":0.006456,"61":0.890928,"62":0.03228,"63":0.309888,"64":0.038736,"65":0.083928,"66":0.03228,"67":0.206592,"68":0.071016,"69":0.12912,"70":0.116208,"71":0.19368,"72":1.039416,"73":15.9786,"74":0.03228,"75":0.025824,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.006456,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006456,"44":0,"45":0.019368,"46":0,"47":0.006456,"48":0.206592,"49":0.006456,"50":0.006456,"51":0.006456,"52":0.329256,"53":0.012912,"54":0.006456,"55":0.012912,"56":0.109752,"57":0.025824,"58":0.012912,"59":0.019368,"60":0.103296,"61":0.012912,"62":0.012912,"63":0.012912,"64":0.025824,"65":0.167856,"66":2.698608,"67":0.019368,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.006456,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.006456,"52":0,"53":0,"54":0,"55":0,"56":0.006456,"57":0,"58":0.213048,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006456},E:{"4":0,"5":0.025824,"6":0,"7":0.006456,"8":0.019368,"9":0.03228,"10":0.06456,"11":0.142032,"12":1.168536,_:"0","3.1":0,"3.2":0,"5.1":0.025824,"6.1":0.103296,"7.1":0,"9.1":0.148488,"10.1":0.271152,"11.1":0.4842,"12.1":1.149168},G:{"8":0.315031264285,"3.2":0.020456575602922,"4.0-4.1":0.012273945361753,"4.2-4.3":0.0040913151205844,"5.0-5.1":0.040913151205844,"6.0-6.1":0.020456575602922,"7.0-7.1":0.073643672170519,"8.1-8.4":0.15956128970279,"9.0-9.2":0.094100247773441,"9.3":0.78144118803162,"10.0-10.2":0.43367940278195,"10.3":1.0351027255079,"11.0-11.2":1.2764903176223,"11.3-11.4":2.6225329922946,"12.0-12.1":15.833389516662,"12.2":18.161347820274},I:{"3":0.00085378225806452,"4":0.12294464516129,_:"67","2.1":0.0059764758064516,"2.2":0.010245387096774,"2.3":0.0059764758064516,"4.1":0.061472322580645,"4.2-4.3":0.26638006451613,"4.4":0,"4.4.3-4.4.4":0.37310284677419},A:{"6":0,"7":0.0065352589285714,"8":0.11763466071429,"9":0.065352589285714,"10":0.17645199107143,"11":5.4896175,"5.5":0},B:{"12":0.019368,"13":0.006456,"14":0.019368,"15":0.019368,"16":0.071016,"17":2.007816,"18":0.67788},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.052471844660194,"5.0-5.4":0.031483106796117,"6.2-6.4":0.010494368932039,"7.2-7.4":0.073460582524272,"8.2":0.47224660194175,"9.2":0.44076349514563},N:{"10":0,"11":0.010632},J:{"7":0,"10":0.007088},S:{"2.5":0},R:{_:"0"},M:{"0":0.127584},O:{"0":0.272888},Q:{"1.2":0.0886},H:{"0":0.11743305841924},L:{"0":17.850944}};


/***/ }),
/* 363 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003574,"12":0.003574,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.003574,"23":0,"24":0,"25":0.003574,"26":0.003574,"27":0,"28":0,"29":0,"30":0,"31":0.003574,"32":0,"33":0.003574,"34":0.003574,"35":0,"36":0.003574,"37":0,"38":0.010722,"39":0.003574,"40":0.003574,"41":0,"42":0,"43":0.003574,"44":0,"45":0,"46":0,"47":0.003574,"48":0,"49":0.096498,"50":0.007148,"51":0.003574,"52":0.003574,"53":0.003574,"54":0,"55":0.010722,"56":0.007148,"57":0.003574,"58":0.014296,"59":0.003574,"60":0.003574,"61":0.007148,"62":0.007148,"63":0.042888,"64":0.01787,"65":0.075054,"66":0.010722,"67":0.032166,"68":0.028592,"69":0.039314,"70":0.050036,"71":0.078628,"72":0.282346,"73":6.740564,"74":0.025018,"75":0.01787,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.003574,"31":0,"32":0.003574,"33":0.003574,"34":0.003574,"35":0,"36":0.007148,"37":0.003574,"38":0.003574,"39":0.003574,"40":0.003574,"41":0,"42":0.007148,"43":0.01787,"44":0.007148,"45":0.003574,"46":0.003574,"47":0.021444,"48":0.010722,"49":0.007148,"50":0.007148,"51":0,"52":0.075054,"53":0.007148,"54":0.003574,"55":0.003574,"56":0.010722,"57":0.014296,"58":0.003574,"59":0.003574,"60":0.03574,"61":0.021444,"62":0.010722,"63":0.01787,"64":0.025018,"65":0.121516,"66":1.669058,"67":0.218014,"68":0,"3.5":0,"3.6":0.003574},F:{"9":0,"11":0,"12":0.007148,"15":0.010722,"16":0.021444,"17":0.003574,"18":0.003574,"19":0.007148,"20":0.042888,"21":0.007148,"22":0.007148,"23":0.075054,"24":0.003574,"25":0,"26":0.003574,"27":0.003574,"28":0.007148,"29":0.007148,"30":0.007148,"31":0.003574,"32":0.010722,"33":0.007148,"34":0,"35":0.007148,"36":0.007148,"37":0.028592,"38":0.01787,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.003574,"46":0,"47":0,"48":0.003574,"49":0.003574,"50":0.003574,"51":0.010722,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.003574,"58":0.543248,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.28592},E:{"4":0,"5":0,"6":0,"7":0,"8":0.010722,"9":0.03574,"10":0.003574,"11":0.007148,"12":0.1787,_:"0","3.1":0,"3.2":0,"5.1":0.110794,"6.1":0,"7.1":0,"9.1":0.007148,"10.1":0.021444,"11.1":0.064332,"12.1":0.10722},G:{"8":0.017463427399179,"3.2":0.0011339887921545,"4.0-4.1":0.0006803932752927,"4.2-4.3":0.0002267977584309,"5.0-5.1":0.002267977584309,"6.0-6.1":0.0011339887921545,"7.0-7.1":0.0040823596517562,"8.1-8.4":0.0088451125788052,"9.0-9.2":0.0052163484439107,"9.3":0.043318371860302,"10.0-10.2":0.024040562393676,"10.3":0.057379832883018,"11.0-11.2":0.070760900630441,"11.3-11.4":0.14537736315421,"12.0-12.1":0.87770732512759,"12.2":1.0067552496748},I:{"3":0.001031064516129,"4":0.14847329032258,_:"67","2.1":0.0072174516129032,"2.2":0.012372774193548,"2.3":0.0072174516129032,"4.1":0.07423664516129,"4.2-4.3":0.32169212903226,"4.4":0,"4.4.3-4.4.4":0.45057519354839},A:{"6":0,"7":0,"8":0.015977882352941,"9":0.0039944705882353,"10":0.0039944705882353,"11":0.11184517647059,"5.5":0},B:{"12":0.021444,"13":0.01787,"14":0.021444,"15":0.01787,"16":0.025018,"17":0.235884,"18":0.064332},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.3748656350365,"5.0-5.4":0.02026300729927,"6.2-6.4":0.04052601459854,"7.2-7.4":0.2026300729927,"8.2":0.45591766423358,"9.2":0.29381360583942},N:{"10":0.055497272727273,"11":0.31078472727273},J:{"7":0,"10":0.038556},S:{"2.5":0},R:{_:"0"},M:{"0":0.212058},O:{"0":0.893214},Q:{"1.2":0.006426},H:{"0":32.480989886598},L:{"0":34.084882}};


/***/ }),
/* 364 */
/***/ (function(module, exports) {

module.exports={D:{"4":0.01555,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.007775,"11":0.023325,"12":0.007775,"13":0,"14":0,"15":0.007775,"16":0.007775,"17":0.023325,"18":0.007775,"19":0,"20":0.038875,"21":0.023325,"22":0,"23":0.01555,"24":0,"25":0.007775,"26":0.01555,"27":0,"28":0,"29":0,"30":0,"31":0.007775,"32":0,"33":0,"34":0,"35":0.023325,"36":0,"37":0,"38":0.023325,"39":0.007775,"40":0.0311,"41":0,"42":0.007775,"43":0,"44":0,"45":0.0622,"46":0,"47":0,"48":0,"49":0.3732,"50":0,"51":0.01555,"52":0,"53":0.007775,"54":0,"55":0.01555,"56":0.01555,"57":0.0622,"58":0.007775,"59":0.1555,"60":0.069975,"61":0.007775,"62":0.007775,"63":0.272125,"64":0.01555,"65":0.311,"66":0.01555,"67":0.163275,"68":0.069975,"69":0.23325,"70":0.35765,"71":0.163275,"72":13.17085,"73":32.9349,"74":0.007775,"75":0.0311,_:"76"},C:{"2":0,"3":0.01555,"4":0.01555,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.007775,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.007775,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.007775,"36":0.007775,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.01555,"44":0,"45":0,"46":0,"47":0,"48":0.01555,"49":0,"50":0,"51":0,"52":0.085525,"53":0,"54":0,"55":0,"56":0,"57":0.023325,"58":0,"59":0.023325,"60":0.01555,"61":0.01555,"62":0,"63":0.007775,"64":0.007775,"65":0.0622,"66":1.034075,"67":0.0311,"68":0,"3.5":0.007775,"3.6":0.07775},F:{"9":0,"11":0,"12":0.0622,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.007775,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.007775,"27":0.01555,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.023325,"37":0,"38":0.0622,"39":0,"40":0,"41":0,"42":0.0311,"43":0,"44":0,"45":0,"46":0.007775,"47":0.038875,"48":0.01555,"49":0,"50":0,"51":0.023325,"52":0,"53":0.007775,"54":0,"55":0,"56":0,"57":0.01555,"58":4.0119,"9.5-9.6":0,"10.0-10.1":0,"10.5":0.007775,"10.6":0,"11.1":0,"11.5":0,"11.6":0.038875,"12.1":0.085525},E:{"4":0.023325,"5":0.007775,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007775,"12":0.334325,_:"0","3.1":0,"3.2":0,"5.1":0.17105,"6.1":0,"7.1":0,"9.1":0,"10.1":0.007775,"11.1":0.038875,"12.1":0.241025},G:{"8":0.033799131892325,"3.2":0.0021947488241769,"4.0-4.1":0.0013168492945062,"4.2-4.3":0.00043894976483538,"5.0-5.1":0.0043894976483538,"6.0-6.1":0.0021947488241769,"7.0-7.1":0.0079010957670369,"8.1-8.4":0.01711904082858,"9.0-9.2":0.010095844591214,"9.3":0.083839405083558,"10.0-10.2":0.046528675072551,"10.3":0.11105429050335,"11.0-11.2":0.13695232662864,"11.3-11.4":0.28136679925948,"12.0-12.1":1.6987355899129,"12.2":1.9484980061043},I:{"3":0.00079004536290323,"4":0.11376653225806,_:"67","2.1":0.0055303175403226,"2.2":0.0094805443548387,"2.3":0.0055303175403226,"4.1":0.056883266129032,"4.2-4.3":0.24649415322581,"4.4":0,"4.4.3-4.4.4":0.34524982358871},A:{"6":0,"7":0,"8":0.04008984375,"9":0.00801796875,"10":0.00801796875,"11":0.20044921875,"5.5":0},B:{"12":0.0311,"13":0.007775,"14":0.01555,"15":0.01555,"16":0.01555,"17":1.018525,"18":0.101075},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.54546625766871,"5.0-5.4":0.030303680981595,"6.2-6.4":0.070708588957055,"7.2-7.4":0.16161963190184,"8.2":0.59597239263804,"9.2":0.24242944785276},N:{"10":0.011866666666667,"11":0.023733333333333},J:{"7":0,"10":0.002225},S:{"2.5":0},R:{_:"0"},M:{"0":0.03115},O:{"0":1.30385},Q:{"1.2":0.00445},H:{"0":0.40655184707904},L:{"0":28.496625}};


/***/ }),
/* 365 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007427,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.014854,"30":0,"31":0,"32":0.007427,"33":0.022281,"34":0.007427,"35":0,"36":0,"37":0,"38":0.014854,"39":0,"40":0.029708,"41":0.014854,"42":0,"43":0.051989,"44":0,"45":0.007427,"46":0,"47":0.007427,"48":0.066843,"49":4.909247,"50":0.007427,"51":0.014854,"52":0.007427,"53":0.014854,"54":0.007427,"55":0.051989,"56":0.066843,"57":0.007427,"58":0.029708,"59":0.029708,"60":0.07427,"61":0.089124,"62":0.245091,"63":0.757554,"64":0.22281,"65":0.430766,"66":0.059416,"67":0.237664,"68":0.111405,"69":0.141113,"70":0.267372,"71":0.29708,"72":0.720419,"73":29.529752,"74":0.126259,"75":0.267372,_:"76"},C:{"2":0,"3":0.007427,"4":0.007427,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.014854,"36":0.007427,"37":0,"38":0.007427,"39":0.007427,"40":0.014854,"41":0.022281,"42":0.007427,"43":0.029708,"44":0.007427,"45":0.007427,"46":0.022281,"47":0.044562,"48":0.103978,"49":0.014854,"50":0.022281,"51":0.022281,"52":0.07427,"53":0.014854,"54":0.007427,"55":0.014854,"56":0.096551,"57":0.066843,"58":0.126259,"59":0.133686,"60":0.103978,"61":0.089124,"62":0.111405,"63":0.193102,"64":0.22281,"65":0.51989,"66":5.369721,"67":0.683284,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.007427,"36":0,"37":0.103978,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.037135,"50":0.014854,"51":0.014854,"52":0,"53":0.007427,"54":0.007427,"55":0,"56":0.007427,"57":0,"58":1.121477,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.007427,"5":0,"6":0,"7":0.007427,"8":0.007427,"9":0,"10":0.037135,"11":0.118832,"12":0.727846,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.022281,"10.1":0.089124,"11.1":0.200529,"12.1":0.423339},G:{"8":0.12062918783148,"3.2":0.0078330641449014,"4.0-4.1":0.0046998384869409,"4.2-4.3":0.0015666128289803,"5.0-5.1":0.015666128289803,"6.0-6.1":0.0078330641449014,"7.0-7.1":0.028199030921645,"8.1-8.4":0.061097900330231,"9.0-9.2":0.036032095066547,"9.3":0.29922305033523,"10.0-10.2":0.16606095987191,"10.3":0.39635304573201,"11.0-11.2":0.48878320264185,"11.3-11.4":1.0041988233764,"12.0-12.1":6.0627916481537,"12.2":6.9541943478435},I:{"3":0.00092215927419355,"4":0.13279093548387,_:"67","2.1":0.0064551149193548,"2.2":0.011065911290323,"2.3":0.0064551149193548,"4.1":0.066395467741935,"4.2-4.3":0.28771369354839,"4.4":0,"4.4.3-4.4.4":0.40298360282258},A:{"6":0.0098793113207547,"7":0.0098793113207547,"8":0.24698278301887,"9":0.088913801886792,"10":0.088913801886792,"11":0.60263799056604,"5.5":0},B:{"12":0.014854,"13":0.014854,"14":0.029708,"15":0.044562,"16":0.653576,"17":0.750127,"18":0.311934},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.41685718787879,"5.0-5.4":0.050836242424242,"6.2-6.4":0.091505236363636,"7.2-7.4":0.16267597575758,"8.2":0.45752618181818,"9.2":0.49819517575758},N:{"10":0.0118358,"11":0.0473432},J:{"7":0,"10":0.002573},S:{"2.5":0},R:{_:"0"},M:{"0":0.095201},O:{"0":0.627812},Q:{"1.2":0.074617},H:{"0":0.83065900859107},L:{"0":23.801196}};


/***/ }),
/* 366 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.038768,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.009692,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.07269,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0.150226,"64":0.009692,"65":0.062998,"66":0,"67":0,"68":0,"69":0.261684,"70":0.84805,"71":0.038768,"72":0.445832,"73":10.544896,"74":0,"75":0.029076,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0.009692,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.04846,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.009692,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.009692,"44":0.019384,"45":0.058152,"46":0.082382,"47":0,"48":0,"49":0.07269,"50":0,"51":0,"52":0.009692,"53":0,"54":0,"55":0,"56":0.019384,"57":0,"58":0,"59":0.111458,"60":0,"61":0.184148,"62":0.009692,"63":0.009692,"64":0.009692,"65":0.174456,"66":1.032198,"67":0.203532,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.029076,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.407064,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.062998,_:"0","3.1":0,"3.2":0,"5.1":0.029076,"6.1":0,"7.1":0,"9.1":0,"10.1":0.009692,"11.1":0,"12.1":0.029076},G:{"8":0.058077479235465,"3.2":0.0037712648854198,"4.0-4.1":0.0022627589312519,"4.2-4.3":0.00075425297708396,"5.0-5.1":0.0075425297708396,"6.0-6.1":0.0037712648854198,"7.0-7.1":0.013576553587511,"8.1-8.4":0.029415866106274,"9.0-9.2":0.017347818472931,"9.3":0.14406231862304,"10.0-10.2":0.0799508155709,"10.3":0.19082600320224,"11.0-11.2":0.2353269288502,"11.3-11.4":0.48347615831082,"12.0-12.1":2.9189590213149,"12.2":3.3481289652757},I:{"3":0.0010197802419355,"4":0.14684835483871,_:"67","2.1":0.0071384616935484,"2.2":0.012237362903226,"2.3":0.0071384616935484,"4.1":0.073424177419355,"4.2-4.3":0.31817143548387,"4.4":0,"4.4.3-4.4.4":0.44564396572581},A:{"6":0,"7":0,"8":0.111458,"9":0.019384,"10":0.101766,"11":0.222916,"5.5":0},B:{"12":0.19384,"13":0.140534,"14":0.038768,"15":0.04846,"16":0.04846,"17":0.760822,"18":0.16961},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":3.126900244898,"5.0-5.4":0.41257711564626,"6.2-6.4":0.19543126530612,"7.2-7.4":0.78172506122449,"8.2":0.27143231292517,"9.2":0},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.061848},O:{"0":0.190698},Q:{"1.2":0.020616},H:{"0":0.25861213402062},L:{"0":66.66974}};


/***/ }),
/* 367 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.003414,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.006828,"26":0,"27":0,"28":0,"29":0.003414,"30":0,"31":0,"32":0,"33":0.010242,"34":0.006828,"35":0,"36":0,"37":0,"38":0.013656,"39":0,"40":0.023898,"41":0,"42":0,"43":0.112662,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.11949,"50":0,"51":0.003414,"52":0,"53":0.006828,"54":0,"55":0,"56":0.133146,"57":0.010242,"58":0.03414,"59":0.003414,"60":0.05121,"61":0,"62":0.023898,"63":0.023898,"64":0.006828,"65":0.1707,"66":0.010242,"67":0.003414,"68":0.023898,"69":0.013656,"70":0.054624,"71":0.013656,"72":0.225324,"73":5.762832,"74":0.013656,"75":0.020484,_:"76"},C:{"2":0,"3":0.003414,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.003414,"34":0,"35":0,"36":0,"37":0,"38":0.010242,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.027312,"46":0,"47":0.003414,"48":0.010242,"49":0,"50":0,"51":0,"52":0.03414,"53":0,"54":0,"55":0.010242,"56":0.020484,"57":0.010242,"58":0,"59":0.003414,"60":0.010242,"61":0,"62":0.01707,"63":0,"64":0.01707,"65":0.037554,"66":1.60458,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.003414,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.378954,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.071694},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.003414,"11":0.013656,"12":0.129732,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.013656,"10.1":0,"11.1":0.491616,"12.1":0.010242},G:{"8":0.016929690183128,"3.2":0.001099330531372,"4.0-4.1":0.00065959831882318,"4.2-4.3":0.00021986610627439,"5.0-5.1":0.0021986610627439,"6.0-6.1":0.001099330531372,"7.0-7.1":0.0039575899129391,"8.1-8.4":0.0085747781447013,"9.0-9.2":0.005056920444311,"9.3":0.041994426298409,"10.0-10.2":0.023305807265086,"10.3":0.055626124887421,"11.0-11.2":0.06859822515761,"11.3-11.4":0.14093417412189,"12.0-12.1":0.8508818312819,"12.2":0.97598564575203},I:{"3":0.0076068185483871,"4":1.0953818709677,_:"67","2.1":0.05324772983871,"2.2":0.091281822580645,"2.3":0.05324772983871,"4.1":0.54769093548387,"4.2-4.3":2.3733273870968,"4.4":0,"4.4.3-4.4.4":3.3241797056452},A:{"6":0,"7":0,"8":0.030726,"9":0.006828,"10":0.023898,"11":0.245808,"5.5":0},B:{"12":0.23898,"13":0.010242,"14":0.023898,"15":0.075108,"16":0.174114,"17":0.1707,"18":0.020484},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.0371216842105,"5.0-5.4":0.050839298245614,"6.2-6.4":0.27453221052632,"7.2-7.4":0.2236929122807,"8.2":1.240478877193,"9.2":0.07117501754386},N:{"10":0,"11":0.092204},J:{"7":0,"10":0.013172},S:{"2.5":0},R:{_:"0"},M:{"0":0.026344},O:{"0":4.386276},Q:{"1.2":0.026344},H:{"0":1.8830301924399},L:{"0":66.664222}};


/***/ }),
/* 368 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.017223,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.028705,"35":0,"36":0,"37":0,"38":0.022964,"39":0,"40":0,"41":0.005741,"42":0,"43":0.005741,"44":0,"45":0,"46":0,"47":0,"48":0.011482,"49":0.05741,"50":0,"51":0,"52":0.040187,"53":0.005741,"54":0,"55":0.005741,"56":0,"57":0,"58":0.005741,"59":0,"60":0,"61":0,"62":0.005741,"63":0.103338,"64":0.086115,"65":0.034446,"66":0,"67":0.022964,"68":0,"69":0.005741,"70":0.327237,"71":0.166489,"72":1.670631,"73":15.477736,"74":0.028705,"75":0.022964,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.005741,"30":0,"31":0.011482,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.034446,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.034446,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.246863,"53":0,"54":0.005741,"55":0,"56":0.005741,"57":0,"58":0,"59":0,"60":1.848602,"61":0,"62":0,"63":0,"64":0.05741,"65":0.051669,"66":0.361683,"67":0.040187,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.005741,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.28705,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.166489,"9":0.011482,"10":0.068892,"11":0.017223,"12":0.912819,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.269827,"11.1":0.183712,"12.1":0.637251},G:{"8":0.10993957980586,"3.2":0.0071389337536275,"4.0-4.1":0.0042833602521765,"4.2-4.3":0.0014277867507255,"5.0-5.1":0.014277867507255,"6.0-6.1":0.0071389337536275,"7.0-7.1":0.025700161513059,"8.1-8.4":0.055683683278295,"9.0-9.2":0.032839095266687,"9.3":0.27270726938857,"10.0-10.2":0.1513453955769,"10.3":0.36123004793355,"11.0-11.2":0.44546946622636,"11.3-11.4":0.91521130721505,"12.0-12.1":5.5255347253077,"12.2":6.3379453864705},I:{"3":0.0018619879032258,"4":0.26812625806452,_:"67","2.1":0.013033915322581,"2.2":0.02234385483871,"2.3":0.013033915322581,"4.1":0.13406312903226,"4.2-4.3":0.58094022580645,"4.4":0,"4.4.3-4.4.4":0.81368871370968},A:{"6":0,"7":0,"8":0,"9":0.091856,"10":0.022964,"11":0.843927,"5.5":0},B:{"12":0.005741,"13":0.051669,"14":0.264086,"15":0.005741,"16":0.045928,"17":3.295334,"18":1.590257},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.12122568292683,"5.0-5.4":0,"6.2-6.4":0.022041033259424,"7.2-7.4":0.044082066518847,"8.2":2.5788008913525,"9.2":2.2041033259424},N:{"10":0,"11":0.04259},J:{"7":0,"10":0.195914},S:{"2.5":0.004259},R:{_:"0"},M:{"0":0.459972},O:{"0":0.502562},Q:{"1.2":0},H:{"0":0.58062903092784},L:{"0":43.863022}};


/***/ }),
/* 369 */
/***/ (function(module, exports) {

module.exports={D:{"33":0.214596,"35":0.43714,"38":0.214596,"63":3.05998,"66":5.897416,"69":1.088876,"71":2.400296,"72":3.93426,"73":11.572288,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 36 37 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 64 65 67 68 70 74 75 76"},C:{"45":17.24716,"52":2.62284,"59":0.214596,"62":0.214596,"63":1.088876,"65":0.214596,"66":6.112012,"67":0.214596,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 48 49 50 51 53 54 55 56 57 58 60 61 64 68 3.5 3.6"},F:{"56":0.43714,"58":9.386588,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},E:{"4":0,"12":0.651736,_:"0 5 6 7 8 9 10 11 3.1 3.2 5.1 6.1 7.1 9.1 10.1 11.1","12.1":1.31142},G:{"8":0.044673345742019,"3.2":0.0029008666066246,"4.0-4.1":0.0017405199639748,"4.2-4.3":0.00058017332132493,"5.0-5.1":0.0058017332132493,"6.0-6.1":0.0029008666066246,"7.0-7.1":0.010443119783849,"8.1-8.4":0.022626759531672,"9.0-9.2":0.013343986390473,"9.3":0.11081310437306,"10.0-10.2":0.061498372060442,"10.3":0.14678385029521,"11.0-11.2":0.18101407625338,"11.3-11.4":0.37189109896928,"12.0-12.1":2.2452707535275,"12.2":2.5753893733614},I:{"3":0.00048634576612903,"4":0.070033790322581,_:"67","2.1":0.0034044203629032,"2.2":0.0058361491935484,"2.3":0.0034044203629032,"4.1":0.03501689516129,"4.2-4.3":0.15173987903226,"4.4":0,"4.4.3-4.4.4":0.21253309979839},A:{"11":5.460276,_:"6 7 8 9 10 5.5"},B:{"12":0.651736,"16":1.088876,"17":2.400296,_:"13 14 15 18"},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":3.126900244898,"5.0-5.4":0.41257711564626,"6.2-6.4":0.19543126530612,"7.2-7.4":0.78172506122449,"8.2":0.482455,"9.2":0},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{_:"2.5"},R:{_:"0"},M:{_:"0"},O:{_:"0"},Q:{_:"1.2"},H:{"0":0.68610766151203},L:{"0":13.694445}};


/***/ }),
/* 370 */
/***/ (function(module, exports) {

module.exports={D:{"31":0.066636,"34":0.005553,"42":0.022212,"47":0.011106,"48":0.005553,"49":1.293849,"50":0.016659,"53":0.005553,"55":0.016659,"56":0.016659,"57":0.05553,"58":0.011106,"59":0.133272,"60":0.011106,"61":0.016659,"62":0.049977,"63":0.310968,"64":0.05553,"65":0.061083,"66":0.038871,"67":0.083295,"68":0.05553,"69":0.066636,"70":0.099954,"71":0.133272,"72":0.627489,"73":30.81915,"74":0.027765,"75":0.022212,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 35 36 37 38 39 40 41 43 44 45 46 51 52 54 76"},C:{"48":0.011106,"52":0.194355,"56":0.016659,"57":0.005553,"59":0.005553,"60":0.005553,"63":0.005553,"64":0.005553,"65":0.027765,"66":0.533088,"67":0.011106,"68":0.011106,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 50 51 53 54 55 58 61 62 3.5 3.6"},F:{"51":0.005553,"58":0.266544,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 52 53 54 55 56 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},E:{"4":0,"8":0.099954,"9":0.05553,"10":0.016659,"11":0.061083,"12":0.671913,_:"0 5 6 7 3.1 3.2 5.1 6.1 7.1","9.1":0.038871,"10.1":0.138825,"11.1":0.16659,"12.1":0.449793},G:{"8":0.075950386670669,"3.2":0.0049318432903032,"4.0-4.1":0.0029591059741819,"4.2-4.3":0.00098636865806064,"5.0-5.1":0.0098636865806064,"6.0-6.1":0.0049318432903032,"7.0-7.1":0.017754635845092,"8.1-8.4":0.038468377664365,"9.0-9.2":0.022686479135395,"9.3":0.18839641368958,"10.0-10.2":0.10455507775443,"10.3":0.24955127048934,"11.0-11.2":0.30774702131492,"11.3-11.4":0.63226230981687,"12.0-12.1":3.8172467066947,"12.2":4.3784904731312},I:{"3":0.00053334072580645,"4":0.076801064516129,_:"67","2.1":0.0037333850806452,"2.2":0.0064000887096774,"2.3":0.0037333850806452,"4.1":0.038400532258065,"4.2-4.3":0.16640230645161,"4.4":0,"4.4.3-4.4.4":0.23306989717742},A:{"8":0.050058065693431,"9":0.072306094890511,"10":0.18354624087591,"11":13.40999959854,_:"6 7 5.5"},B:{"12":0.005553,"13":0.011106,"14":0.022212,"15":0.022212,"16":0.061083,"17":1.582605,"18":0.566406},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.28964041683367,"5.0-5.4":0.12413160721443,"6.2-6.4":0.072410104208417,"7.2-7.4":0.36205052104208,"8.2":1.9861057154309,"9.2":7.4892736352705},N:{"10":0.0433485,"11":0.0144495},J:{"7":0,"10":0.120042},S:{_:"2.5"},R:{_:"0"},M:{"0":0.075582},O:{"0":0.102258},Q:{"1.2":0.02223},H:{"0":0.56824005154639},L:{"0":19.619298}};


/***/ }),
/* 371 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00807,"39":0,"40":0,"41":0,"42":0,"43":0.020175,"44":0.00807,"45":0.004035,"46":0,"47":0,"48":0,"49":0.197715,"50":0,"51":0,"52":0,"53":0,"54":0.00807,"55":0.004035,"56":0.00807,"57":0.004035,"58":0.00807,"59":0,"60":0.004035,"61":0.012105,"62":0.004035,"63":0.028245,"64":0.020175,"65":0.04035,"66":0.00807,"67":0.05649,"68":0.00807,"69":0.06456,"70":0.036315,"71":0.092805,"72":0.55683,"73":9.06261,"74":0.012105,"75":0.020175,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.004035,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00807,"46":0,"47":0.012105,"48":0.07263,"49":0.004035,"50":0,"51":0.004035,"52":0.068595,"53":0,"54":0.00807,"55":0,"56":0.004035,"57":0.004035,"58":0,"59":0,"60":0.028245,"61":0.004035,"62":0.004035,"63":0.004035,"64":0.02421,"65":0.0807,"66":1.00068,"67":0.028245,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.004035,"38":0.00807,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00807,"52":0,"53":0,"54":0,"55":0,"56":0.004035,"57":0,"58":0.238065,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.004035,"8":0.03228,"9":0.480165,"10":0.01614,"11":0.068595,"12":0.730335,_:"0","3.1":0,"3.2":0,"5.1":0.03228,"6.1":0.012105,"7.1":0,"9.1":0.052455,"10.1":0.09684,"11.1":0.189645,"12.1":0.326835},G:{"8":0.16213951566096,"3.2":0.010528539977985,"4.0-4.1":0.0063171239867908,"4.2-4.3":0.0021057079955969,"5.0-5.1":0.021057079955969,"6.0-6.1":0.010528539977985,"7.0-7.1":0.037902743920745,"8.1-8.4":0.08212261182828,"9.0-9.2":0.048431283898729,"9.3":0.40219022715901,"10.0-10.2":0.22320504753327,"10.3":0.53274412288602,"11.0-11.2":0.65698089462624,"11.3-11.4":1.3497588251776,"12.0-12.1":8.1490899429601,"12.2":9.3472377924547},I:{"3":0.00031055443548387,"4":0.044719838709677,_:"67","2.1":0.0021738810483871,"2.2":0.0037266532258065,"2.3":0.0021738810483871,"4.1":0.022359919354839,"4.2-4.3":0.096892983870968,"4.4":0,"4.4.3-4.4.4":0.13571228830645},A:{"6":0,"7":0,"8":0.012196015037594,"9":0.0081306766917293,"10":0.012196015037594,"11":0.50816729323308,"5.5":0},B:{"12":0.00807,"13":0.00807,"14":0.012105,"15":0.03228,"16":0.052455,"17":0.45192,"18":0.30666},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.56424625407166,"5.0-5.4":0.092331205211726,"6.2-6.4":0.21543947882736,"7.2-7.4":0.80020377850163,"8.2":2.5339786319218,"9.2":2.0928406514658},N:{"10":0,"11":0.02386},J:{"7":0,"10":0.005965},S:{"2.5":0},R:{_:"0"},M:{"0":0.137195},O:{"0":6.746415},Q:{"1.2":0.02386},H:{"0":2.4452707817869},L:{"0":40.71316}};


/***/ }),
/* 372 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.019293,"37":0,"38":0.006431,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.147913,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.006431,"56":0.012862,"57":0.012862,"58":0.038586,"59":0,"60":0,"61":0,"62":0.006431,"63":0.019293,"64":0,"65":0.012862,"66":0,"67":0.019293,"68":0.102896,"69":0.025724,"70":0.12862,"71":0.501618,"72":1.787818,"73":22.604965,"74":0.012862,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.006431,"49":0,"50":0,"51":0,"52":0.012862,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.019293,"61":0,"62":0.006431,"63":0.090034,"64":0.006431,"65":0.102896,"66":1.684922,"67":0.025724,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.115758,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.006431,"9":0,"10":0.019293,"11":0.147913,"12":1.774956,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.006431,"7.1":0,"9.1":0.032155,"10.1":0.270102,"11.1":0.347274,"12.1":1.890714},G:{"8":0.2293487032923,"3.2":0.014892772941059,"4.0-4.1":0.0089356637646352,"4.2-4.3":0.0029785545882117,"5.0-5.1":0.029785545882117,"6.0-6.1":0.014892772941059,"7.0-7.1":0.053613982587811,"8.1-8.4":0.11616362894026,"9.0-9.2":0.06850675552887,"9.3":0.56890392634844,"10.0-10.2":0.31572678635045,"10.3":0.75357431081757,"11.0-11.2":0.92930903152207,"11.3-11.4":1.9092534910437,"12.0-12.1":11.527006256379,"12.2":13.221803817072},I:{"3":0.00055599798387097,"4":0.080063709677419,_:"67","2.1":0.0038919858870968,"2.2":0.0066719758064516,"2.3":0.0038919858870968,"4.1":0.04003185483871,"4.2-4.3":0.17347137096774,"4.4":0,"4.4.3-4.4.4":0.24297111895161},A:{"6":0,"7":0,"8":0,"9":0.006431,"10":0.025724,"11":1.41482,"5.5":0},B:{"12":0.019293,"13":0.006431,"14":0.270102,"15":0.12862,"16":0.212223,"17":3.164052,"18":0.38586},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.097577659663866,"5.0-5.4":0.032525886554622,"6.2-6.4":0.065051773109244,"7.2-7.4":0.05420981092437,"8.2":2.2768120588235,"9.2":2.6345968109244},N:{"10":0,"11":0.032121},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.189157},O:{"0":0.049966},Q:{"1.2":0},H:{"0":0.094609161512028},L:{"0":23.132765}};


/***/ }),
/* 373 */
/***/ (function(module, exports) {

module.exports={D:{"4":0.007829,"5":0,"6":0,"7":0,"8":0.007829,"9":0,"10":0.007829,"11":0.007829,"12":0.007829,"13":0.007829,"14":0.007829,"15":0.007829,"16":0.007829,"17":0.015658,"18":0.015658,"19":0.015658,"20":0.015658,"21":0.015658,"22":0.015658,"23":0.015658,"24":0.007829,"25":0.007829,"26":0.015658,"27":0.015658,"28":0.007829,"29":0.007829,"30":0.007829,"31":0.007829,"32":0,"33":0.007829,"34":0.007829,"35":0.015658,"36":0.007829,"37":0,"38":0.007829,"39":0.015658,"40":0.039145,"41":0.007829,"42":0.007829,"43":0.007829,"44":0.007829,"45":0.015658,"46":0.039145,"47":0.007829,"48":0.007829,"49":0.383621,"50":0.007829,"51":0.023487,"52":0,"53":0,"54":0.015658,"55":0.039145,"56":0.086119,"57":0.031316,"58":0.023487,"59":0.039145,"60":0.015658,"61":0.046974,"62":0.070461,"63":0.39145,"64":0.093948,"65":0.101777,"66":0.062632,"67":0.101777,"68":0.187896,"69":0.180067,"70":0.367963,"71":0.328818,"72":1.244811,"73":37.03117,"74":0.007829,"75":0.054803,_:"76"},C:{"2":0.007829,"3":0.015658,"4":0.007829,"5":0,"6":0.007829,"7":0,"8":0,"9":0,"10":0.007829,"11":0,"12":0.007829,"13":0,"14":0,"15":0.007829,"16":0.007829,"17":0,"18":0,"19":0.007829,"20":0,"21":0,"22":0.007829,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.007829,"32":0.007829,"33":0,"34":0.007829,"35":0.007829,"36":0.007829,"37":0,"38":0,"39":0,"40":0.007829,"41":0,"42":0,"43":0.023487,"44":0,"45":0.007829,"46":0.007829,"47":0.015658,"48":0.328818,"49":0.007829,"50":0.031316,"51":0.015658,"52":0.195725,"53":0.015658,"54":0.023487,"55":0.007829,"56":0.023487,"57":0.039145,"58":0.007829,"59":0.046974,"60":0.133093,"61":0.031316,"62":0.023487,"63":0.007829,"64":0.062632,"65":0.133093,"66":2.763637,"67":0.015658,"68":0.007829,"3.5":0.023487,"3.6":0.109606},F:{"9":0,"11":0.007829,"12":0.046974,"15":0,"16":0,"17":0,"18":0.007829,"19":0,"20":0.007829,"21":0,"22":0.007829,"23":0,"24":0,"25":0,"26":0.007829,"27":0.023487,"28":0,"29":0.007829,"30":0.015658,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.062632,"37":0.015658,"38":0,"39":0,"40":0,"41":0,"42":0.007829,"43":0.007829,"44":0.007829,"45":0.015658,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.007829,"52":0,"53":0.007829,"54":0,"55":0,"56":0.015658,"57":0.015658,"58":4.493846,"9.5-9.6":0,"10.0-10.1":0.007829,"10.5":0,"10.6":0.015658,"11.1":0.007829,"11.5":0.007829,"11.6":0.180067,"12.1":0.117435},E:{"4":0.007829,"5":0.039145,"6":0,"7":0,"8":0.007829,"9":0,"10":0.007829,"11":0.015658,"12":1.009941,_:"0","3.1":0.007829,"3.2":0,"5.1":0.062632,"6.1":0.007829,"7.1":0,"9.1":0.007829,"10.1":0.07829,"11.1":0.117435,"12.1":0.501056},G:{"8":0.059197666266386,"3.2":0.0038440043030121,"4.0-4.1":0.0023064025818073,"4.2-4.3":0.00076880086060242,"5.0-5.1":0.0076880086060242,"6.0-6.1":0.0038440043030121,"7.0-7.1":0.013838415490844,"8.1-8.4":0.029983233563494,"9.0-9.2":0.017682419793856,"9.3":0.14684096437506,"10.0-10.2":0.081492891223857,"10.3":0.19450661773241,"11.0-11.2":0.23986586850796,"11.3-11.4":0.49280135164615,"12.0-12.1":2.9752593305314,"12.2":3.4127070202142},I:{"3":0.00073820262096774,"4":0.10630117741935,_:"67","2.1":0.0051674183467742,"2.2":0.0088584314516129,"2.3":0.0051674183467742,"4.1":0.053150588709677,"4.2-4.3":0.23031921774194,"4.4":0,"4.4.3-4.4.4":0.3225945453629},A:{"6":0.0088457532467532,"7":0,"8":0.070766025974026,"9":0.035383012987013,"10":0.088457532467532,"11":0.47767067532468,"5.5":0},B:{"12":0.007829,"13":0.007829,"14":0.023487,"15":0.031316,"16":0.054803,"17":0.540201,"18":0.117435},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.28001280851064,"5.0-5.4":0.030001372340426,"6.2-6.4":0.060002744680851,"7.2-7.4":0.19000869148936,"8.2":0.79003613829787,"9.2":0.53002424468085},N:{"10":0.014473333333333,"11":0.028946666666667},J:{"7":0,"10":0.002171},S:{"2.5":0.002171},R:{_:"0"},M:{"0":0.030394},O:{"0":0.627419},Q:{"1.2":0.056446},H:{"0":0.38846352061856},L:{"0":24.670859}};


/***/ }),
/* 374 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.015684,"12":0,"13":0.003921,"14":0,"15":0,"16":0,"17":0,"18":0.003921,"19":0,"20":0.015684,"21":0,"22":0,"23":0,"24":0,"25":0.003921,"26":0.003921,"27":0,"28":0.003921,"29":0,"30":0,"31":0.007842,"32":0.003921,"33":0.380337,"34":0.003921,"35":0.003921,"36":0,"37":0.031368,"38":0.003921,"39":0.003921,"40":0.027447,"41":0.007842,"42":0.003921,"43":0.223497,"44":0.011763,"45":0.007842,"46":0.011763,"47":0.007842,"48":0.03921,"49":0.070578,"50":0.015684,"51":0.015684,"52":0.007842,"53":0.015684,"54":0.015684,"55":0.015684,"56":0.015684,"57":0.019605,"58":0.062736,"59":0.011763,"60":0.015684,"61":0.019605,"62":0.007842,"63":0.07842,"64":0.015684,"65":0.027447,"66":0.007842,"67":0.019605,"68":0.054894,"69":0.043131,"70":0.101946,"71":0.098025,"72":0.333285,"73":8.359572,"74":0.015684,"75":0.015684,_:"76"},C:{"2":0.003921,"3":0.007842,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.003921,"11":0.003921,"12":0.003921,"13":0,"14":0.003921,"15":0.003921,"16":0.003921,"17":0.003921,"18":0.003921,"19":0.003921,"20":0.007842,"21":0.003921,"22":0,"23":0,"24":0.003921,"25":0,"26":0,"27":0,"28":0,"29":0.003921,"30":0.003921,"31":0.007842,"32":0.003921,"33":0.003921,"34":0.003921,"35":0.003921,"36":0.003921,"37":0.003921,"38":0.007842,"39":0.007842,"40":0.011763,"41":0.007842,"42":0.007842,"43":0.015684,"44":0.015684,"45":0.011763,"46":0.003921,"47":0.043131,"48":0.011763,"49":0.011763,"50":0.015684,"51":0.023526,"52":0.03921,"53":0.031368,"54":0.011763,"55":0.015684,"56":0.015684,"57":0.019605,"58":0.007842,"59":0.003921,"60":0.031368,"61":0.003921,"62":0.011763,"63":0.003921,"64":0.011763,"65":0.086262,"66":1.250799,"67":0.148998,"68":0,"3.5":0,"3.6":0.003921},F:{"9":0,"11":0.003921,"12":0.007842,"15":0.007842,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.003921,"29":0,"30":0,"31":0,"32":0.003921,"33":0,"34":0.003921,"35":0,"36":0.003921,"37":0.070578,"38":0,"39":0,"40":0,"41":0.003921,"42":0,"43":0,"44":0,"45":0.003921,"46":0.003921,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.376416,"9.5-9.6":0,"10.0-10.1":0.003921,"10.5":0,"10.6":0,"11.1":0.003921,"11.5":0,"11.6":0.003921,"12.1":0.015684},E:{"4":0.003921,"5":0.003921,"6":0.03921,"7":0.003921,"8":0.003921,"9":0.003921,"10":0.007842,"11":0.043131,"12":0.23526,_:"0","3.1":0,"3.2":0,"5.1":0.003921,"6.1":0,"7.1":0,"9.1":0.023526,"10.1":0.023526,"11.1":0.050973,"12.1":0.148998},G:{"8":0.15159375963174,"3.2":0.0098437506254378,"4.0-4.1":0.0059062503752627,"4.2-4.3":0.0019687501250876,"5.0-5.1":0.019687501250876,"6.0-6.1":0.0098437506254378,"7.0-7.1":0.035437502251576,"8.1-8.4":0.076781254878415,"9.0-9.2":0.045281252877014,"9.3":0.37603127389172,"10.0-10.2":0.20868751325928,"10.3":0.49809378164715,"11.0-11.2":0.61425003902732,"11.3-11.4":1.2619688301811,"12.0-12.1":7.6190629840889,"12.2":8.7392818052637},I:{"3":0.00079658467741935,"4":0.11470819354839,_:"67","2.1":0.0055760927419355,"2.2":0.0095590161290323,"2.3":0.0055760927419355,"4.1":0.057354096774194,"4.2-4.3":0.24853441935484,"4.4":0,"4.4.3-4.4.4":0.34810750403226},A:{"6":0.0085495488721805,"7":0.0085495488721805,"8":0.12396845864662,"9":0.089770263157895,"10":0.059846842105263,"11":0.27786033834586,"5.5":0},B:{"12":0.011763,"13":0.031368,"14":0.015684,"15":0.015684,"16":0.015684,"17":0.188208,"18":0.090183},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.8429650574163,"5.0-5.4":0.091708550239234,"6.2-6.4":0.26493581180223,"7.2-7.4":0.88651598564593,"8.2":1.6507539043062,"9.2":0.65214969059011},N:{"10":0.16364010810811,"11":0.34091689189189},J:{"7":0,"10":0.006079},S:{"2.5":0},R:{_:"0"},M:{"0":0.091185},O:{"0":0.948324},Q:{"1.2":0.103343},H:{"0":0.76544219415808},L:{"0":52.457442}};


/***/ }),
/* 375 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.006874,"30":0.03437,"31":0.041244,"32":0.006874,"33":0,"34":0.006874,"35":0,"36":0.006874,"37":0.006874,"38":0.006874,"39":0,"40":0.006874,"41":0.006874,"42":0,"43":0.006874,"44":0.013748,"45":0.006874,"46":0.020622,"47":0.006874,"48":0,"49":0.44681,"50":0,"51":0.006874,"52":0,"53":0,"54":0.006874,"55":0.006874,"56":0.006874,"57":0.013748,"58":0.041244,"59":0.006874,"60":0.006874,"61":0.006874,"62":0.041244,"63":0.054992,"64":0.006874,"65":0.082488,"66":0.061866,"67":0.213094,"68":0.089362,"69":0.192472,"70":0.233716,"71":0.37807,"72":1.732248,"73":28.953288,"74":0.061866,"75":0.048118,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.006874,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006874,"44":0,"45":0,"46":0,"47":0.020622,"48":0.158102,"49":0,"50":0,"51":0,"52":0.048118,"53":0,"54":0,"55":0.020622,"56":0.013748,"57":0.03437,"58":0.013748,"59":0.006874,"60":0.054992,"61":0.130606,"62":0.013748,"63":0.041244,"64":0.061866,"65":0.288708,"66":3.141418,"67":0.10311,"68":0.006874,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.006874,"55":0,"56":0,"57":0,"58":0.659904,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0.006874,"7":0.041244,"8":0.419314,"9":0.082488,"10":0.185598,"11":0.219968,"12":1.416044,_:"0","3.1":0,"3.2":0,"5.1":0.61866,"6.1":0.054992,"7.1":0,"9.1":0.109984,"10.1":0.261212,"11.1":0.659904,"12.1":0.811132},G:{"8":0.092132699889923,"3.2":0.005982642849995,"4.0-4.1":0.003589585709997,"4.2-4.3":0.001196528569999,"5.0-5.1":0.01196528569999,"6.0-6.1":0.005982642849995,"7.0-7.1":0.021537514259982,"8.1-8.4":0.046664614229961,"9.0-9.2":0.027520157109977,"9.3":0.22853695686981,"10.0-10.2":0.12683202841989,"10.3":0.30272172820975,"11.0-11.2":0.37331691383969,"11.3-11.4":0.76697481336936,"12.0-12.1":4.6305655658961,"12.2":5.3113903222256},I:{"3":0.0010176149193548,"4":0.1465365483871,_:"67","2.1":0.0071233044354839,"2.2":0.012211379032258,"2.3":0.0071233044354839,"4.1":0.073268274193548,"4.2-4.3":0.31749585483871,"4.4":0,"4.4.3-4.4.4":0.44469771975806},A:{"6":0,"7":0,"8":0.048118,"9":0.013748,"10":0.013748,"11":0.907368,"5.5":0},B:{"12":0.027496,"13":0.020622,"14":0.075614,"15":0.041244,"16":0.123732,"17":1.47791,"18":0.261212},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.42800641509434,"5.0-5.4":0.04076251572327,"6.2-6.4":0.081525031446541,"7.2-7.4":0.28533761006289,"8.2":1.7120256603774,"9.2":2.3132727672956},N:{"10":0,"11":0.006252},J:{"7":0,"10":0.006252},S:{"2.5":0},R:{_:"0"},M:{"0":0.175056},O:{"0":0.628326},Q:{"1.2":0},H:{"0":0.31962544329897},L:{"0":31.18266}};


/***/ }),
/* 376 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.015567,"23":0,"24":0,"25":0,"26":0,"27":0.010378,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.031134,"40":0.005189,"41":0,"42":0.005189,"43":0,"44":0,"45":0,"46":0.005189,"47":0,"48":0,"49":0.114158,"50":0.005189,"51":0,"52":0,"53":0.067457,"54":0,"55":0,"56":0.010378,"57":0,"58":0.010378,"59":0,"60":0.005189,"61":0,"62":0.005189,"63":0.223127,"64":0.005189,"65":0.233505,"66":0,"67":0.025945,"68":0.005189,"69":0.015567,"70":0.083024,"71":0.05189,"72":0.908075,"73":16.117034,"74":0.077835,"75":0.005189,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.010378,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.005189,"49":0.005189,"50":0,"51":0.005189,"52":0.005189,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.010378,"61":0,"62":0,"63":0.010378,"64":0.005189,"65":0.10378,"66":1.022233,"67":0.057079,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.025945,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.005189,"58":0.352852,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.005189,"9":0,"10":0.010378,"11":0.005189,"12":0.451443,_:"0","3.1":0,"3.2":0,"5.1":0.005189,"6.1":0.005189,"7.1":0,"9.1":0.020756,"10.1":0.046701,"11.1":0.098591,"12.1":0.617491},G:{"8":0.077084928850195,"3.2":0.0050055148604023,"4.0-4.1":0.0030033089162414,"4.2-4.3":0.0010011029720805,"5.0-5.1":0.010011029720805,"6.0-6.1":0.0050055148604023,"7.0-7.1":0.018019853497448,"8.1-8.4":0.039043015911138,"9.0-9.2":0.02302536835785,"9.3":0.19121066766737,"10.0-10.2":0.10611691504053,"10.3":0.25327905193636,"11.0-11.2":0.3123441272891,"11.3-11.4":0.64170700510357,"12.0-12.1":3.8742685019514,"12.2":4.4438960930651},I:{"3":0.0019474344758065,"4":0.28043056451613,_:"67","2.1":0.013632041330645,"2.2":0.023369213709677,"2.3":0.013632041330645,"4.1":0.14021528225806,"4.2-4.3":0.60759955645161,"4.4":0,"4.4.3-4.4.4":0.85102886592742},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.705704,"5.5":0},B:{"12":0.015567,"13":0.020756,"14":0.041512,"15":0.025945,"16":0.108969,"17":1.162336,"18":0.275017},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.22694940175953,"5.0-5.4":0.032421343108504,"6.2-6.4":0.12968537243402,"7.2-7.4":0.10807114369501,"8.2":1.5886458123167,"9.2":1.5994529266862},N:{"10":0,"11":0.24055},J:{"7":0,"10":0.033677},S:{"2.5":0},R:{_:"0"},M:{"0":0.264605},O:{"0":0.216495},Q:{"1.2":0},H:{"0":0.99293418900344},L:{"0":56.473827}};


/***/ }),
/* 377 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.052934,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.007562,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.007562,"48":0,"49":0.18905,"50":0.105868,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.015124,"58":0.007562,"59":0,"60":0,"61":0.015124,"62":0.007562,"63":0,"64":0,"65":0.015124,"66":0.007562,"67":0,"68":0.143678,"69":0.022686,"70":0.052934,"71":0.552026,"72":0.801572,"73":16.553218,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.007562,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.007562,"49":0.060496,"50":0,"51":0,"52":0.090744,"53":0.030248,"54":0,"55":0,"56":0.022686,"57":0.007562,"58":0.007562,"59":0.007562,"60":0.22686,"61":0.007562,"62":0.030248,"63":0.007562,"64":0.022686,"65":0.915002,"66":7.085594,"67":0.015124,"68":0.007562,"3.5":0,"3.6":0},F:{"9":0,"11":0.007562,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.007562,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.423472,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.007562,"6":0,"7":0,"8":0,"9":0,"10":0.022686,"11":0.052934,"12":5.316086,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.098306,"10.1":0.128554,"11.1":1.187234,"12.1":1.39897},G:{"8":0.2072502041429,"3.2":0.013457805463825,"4.0-4.1":0.0080746832782948,"4.2-4.3":0.0026915610927649,"5.0-5.1":0.026915610927649,"6.0-6.1":0.013457805463825,"7.0-7.1":0.048448099669769,"8.1-8.4":0.10497088261783,"9.0-9.2":0.061905905133594,"9.3":0.5140881687181,"10.0-10.2":0.28530547583308,"10.3":0.68096495646953,"11.0-11.2":0.83976706094266,"11.3-11.4":1.7252906604623,"12.0-12.1":10.416341429,"12.2":11.947839690784},I:{"3":0.00024218548387097,"4":0.034874709677419,_:"67","2.1":0.0016952983870968,"2.2":0.0029062258064516,"2.3":0.0016952983870968,"4.1":0.01743735483871,"4.2-4.3":0.075561870967742,"4.4":0,"4.4.3-4.4.4":0.10583505645161},A:{"6":0,"7":0,"8":0.090744,"9":0.007562,"10":0.007562,"11":9.989402,"5.5":0},B:{"12":0.234422,"13":0.022686,"14":0.030248,"15":0.030248,"16":0.090744,"17":3.70538,"18":1.330912},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.17719423481781,"5.0-5.4":0.011074639676113,"6.2-6.4":0,"7.2-7.4":0.03322391902834,"8.2":0.89704581376518,"9.2":1.6168973927126},N:{"10":0,"11":0.01219},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.156032},O:{"0":3.220598},Q:{"1.2":0},H:{"0":0.0069244226804124},L:{"0":10.944844}};


/***/ }),
/* 378 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.008542,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.004271,"19":0,"20":0.004271,"21":0.004271,"22":0.004271,"23":0,"24":0,"25":0.004271,"26":0,"27":0,"28":0.004271,"29":0.004271,"30":0.008542,"31":0.098233,"32":0.004271,"33":0.004271,"34":0,"35":0.004271,"36":0.004271,"37":0,"38":0.004271,"39":0.004271,"40":0.017084,"41":0,"42":0.004271,"43":0.004271,"44":0.004271,"45":0,"46":0.004271,"47":0.004271,"48":0,"49":0.098233,"50":0,"51":0.004271,"52":0.004271,"53":0.004271,"54":0.004271,"55":0.008542,"56":0.004271,"57":0.004271,"58":0.038439,"59":0.012813,"60":0.004271,"61":0.034168,"62":0.012813,"63":0.038439,"64":0.021355,"65":0.132401,"66":0.012813,"67":0.046981,"68":0.029897,"69":0.111046,"70":0.059794,"71":0.093962,"72":0.392932,"73":12.091201,"74":0.029897,"75":0.012813,_:"76"},C:{"2":0,"3":0,"4":0,"5":0.004271,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.017084,"12":0.004271,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.004271,"32":0,"33":0,"34":0.004271,"35":0,"36":0,"37":0,"38":0.004271,"39":0,"40":0.004271,"41":0.004271,"42":0.004271,"43":0.017084,"44":0.004271,"45":0,"46":0,"47":0.012813,"48":0.004271,"49":0.004271,"50":0.004271,"51":0,"52":0.038439,"53":0.004271,"54":0.004271,"55":0.004271,"56":0.008542,"57":0.012813,"58":0.004271,"59":0.004271,"60":0.034168,"61":0.012813,"62":0.017084,"63":0.008542,"64":0.021355,"65":0.081149,"66":1.460682,"67":0.098233,"68":0,"3.5":0,"3.6":0.004271},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.004271,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.008542,"35":0,"36":0.004271,"37":0.111046,"38":0.017084,"39":0,"40":0,"41":0,"42":0,"43":0.004271,"44":0,"45":0.004271,"46":0,"47":0,"48":0.004271,"49":0.004271,"50":0.004271,"51":0.008542,"52":0,"53":0,"54":0,"55":0,"56":0.004271,"57":0.008542,"58":0.670547,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.004271},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.004271,"11":0.017084,"12":0.153756,_:"0","3.1":0,"3.2":0,"5.1":0.004271,"6.1":0,"7.1":0,"9.1":0.004271,"10.1":0.029897,"11.1":0.034168,"12.1":0.093962},G:{"8":0.045977691684179,"3.2":0.0029855643950766,"4.0-4.1":0.0017913386370459,"4.2-4.3":0.00059711287901531,"5.0-5.1":0.0059711287901531,"6.0-6.1":0.0029855643950766,"7.0-7.1":0.010748031822276,"8.1-8.4":0.023287402281597,"9.0-9.2":0.013733596217352,"9.3":0.11404855989192,"10.0-10.2":0.063293965175623,"10.3":0.15106955839087,"11.0-11.2":0.18629921825278,"11.3-11.4":0.38274935544881,"12.0-12.1":2.3108268417893,"12.2":2.650584069949},I:{"3":0.0022047056451613,"4":0.31747761290323,_:"67","2.1":0.015432939516129,"2.2":0.026456467741935,"2.3":0.015432939516129,"4.1":0.15873880645161,"4.2-4.3":0.68786816129032,"4.4":0,"4.4.3-4.4.4":0.96345636693548},A:{"6":0,"7":0,"8":0.03066358974359,"9":0.0043805128205128,"10":0.0087610256410256,"11":0.12703487179487,"5.5":0},B:{"12":0.012813,"13":0.025626,"14":0.046981,"15":0.029897,"16":0.029897,"17":0.243447,"18":0.064065},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":3.3690810046802,"5.0-5.4":0.15176040561622,"6.2-6.4":0.28328609048362,"7.2-7.4":0.69809786583463,"8.2":1.5176040561622,"9.2":0.46539857722309},N:{"10":0.02194085106383,"11":0.49366914893617},J:{"7":0,"10":0.017187},S:{"2.5":0},R:{_:"0"},M:{"0":0.126038},O:{"0":3.72385},Q:{"1.2":0.005729},H:{"0":4.3390776632302},L:{"0":52.066446}};


/***/ }),
/* 379 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00394,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00394,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00394,"27":0,"28":0,"29":0,"30":0,"31":0.00788,"32":0,"33":0,"34":0.00394,"35":0,"36":0.00394,"37":0.00788,"38":0.00394,"39":0,"40":0.00394,"41":0,"42":0,"43":0.03546,"44":0.00394,"45":0,"46":0,"47":0.00394,"48":0.00394,"49":0.04728,"50":0.01576,"51":0.00394,"52":0,"53":0.00394,"54":0,"55":0.00394,"56":0.01182,"57":0,"58":0.02758,"59":0.00394,"60":0.00394,"61":0.00394,"62":0.00394,"63":0.01182,"64":0.01182,"65":0.2167,"66":0.01182,"67":0.01182,"68":0.00394,"69":0.02364,"70":0.05122,"71":0.11032,"72":0.20094,"73":3.6445,"74":0.01182,"75":0.00394,_:"76"},C:{"2":0,"3":0,"4":0,"5":0.00394,"6":0,"7":0,"8":0,"9":0,"10":0.00788,"11":0,"12":0.00394,"13":0,"14":0.00394,"15":0.01182,"16":0,"17":0.00788,"18":0,"19":0.00394,"20":0,"21":0.00788,"22":0,"23":0,"24":0.04334,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.04728,"32":0,"33":0,"34":0.00788,"35":0,"36":0,"37":0.00394,"38":0.10244,"39":0,"40":0,"41":0,"42":0.01576,"43":0.03152,"44":0.01182,"45":0.09062,"46":0.00394,"47":0.02758,"48":0.00394,"49":0.00394,"50":0.00788,"51":0,"52":0.83134,"53":0,"54":0.00394,"55":0.00394,"56":0.01182,"57":0.00788,"58":0,"59":0,"60":5.03532,"61":0.00394,"62":0.02364,"63":0.00788,"64":0.00788,"65":0.04728,"66":1.05592,"67":0.16154,"68":0,"3.5":0,"3.6":0.01182},F:{"9":0,"11":0.00788,"12":0.00394,"15":0.00394,"16":0.00394,"17":0.00394,"18":0,"19":0.00394,"20":0.03546,"21":0,"22":0.00788,"23":0.0394,"24":0,"25":0,"26":0,"27":0.0197,"28":0.00394,"29":0.00394,"30":0.00394,"31":0,"32":0,"33":0.00394,"34":0,"35":0.00788,"36":0,"37":0.00788,"38":0.01576,"39":0,"40":0,"41":0,"42":0,"43":0.00394,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00394,"52":0,"53":0,"54":0,"55":0.00394,"56":0,"57":0.00394,"58":0.74466,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.17336},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00788,"12":0.05122,_:"0","3.1":0,"3.2":0,"5.1":0.00394,"6.1":0,"7.1":0,"9.1":0.01182,"10.1":0.00394,"11.1":0.01576,"12.1":0.02364},G:{"8":0.033655618933253,"3.2":0.0021854298008606,"4.0-4.1":0.0013112578805164,"4.2-4.3":0.00043708596017212,"5.0-5.1":0.0043708596017212,"6.0-6.1":0.0021854298008606,"7.0-7.1":0.0078675472830982,"8.1-8.4":0.017046352446713,"9.0-9.2":0.010052977083959,"9.3":0.083483418392875,"10.0-10.2":0.046331111778245,"10.3":0.11058274792355,"11.0-11.2":0.1363708195737,"11.3-11.4":0.28017210047033,"12.0-12.1":1.6915226658661,"12.2":1.940224577204},I:{"3":0.0016223790322581,"4":0.23362258064516,_:"67","2.1":0.011356653225806,"2.2":0.019468548387097,"2.3":0.011356653225806,"4.1":0.11681129032258,"4.2-4.3":0.50618225806452,"4.4":0,"4.4.3-4.4.4":0.70897963709677},A:{"6":0,"7":0,"8":0.02364,"9":0.07092,"10":0.02758,"11":0.44128,"5.5":0},B:{"12":0.08668,"13":0.08274,"14":0.01182,"15":0.04334,"16":0.04728,"17":0.65798,"18":0.05122},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.5080178313253,"5.0-5.4":0.093309397590361,"6.2-6.4":0.17625108433735,"7.2-7.4":0.22808963855422,"8.2":0.53912096385542,"9.2":0.17625108433735},N:{"10":0.035660769230769,"11":0.27339923076923},J:{"7":0,"10":0.01212},S:{"2.5":0.00606},R:{_:"0"},M:{"0":2.26644},O:{"0":4.35714},Q:{"1.2":0.01212},H:{"0":10.407310721649},L:{"0":52.21322}};


/***/ }),
/* 380 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.003278,"34":0.003278,"35":0.003278,"36":0.006556,"37":0,"38":0,"39":0,"40":0.006556,"41":0,"42":0,"43":0.039336,"44":0,"45":0,"46":0.039336,"47":0,"48":0,"49":0.039336,"50":0.003278,"51":0,"52":0.003278,"53":0,"54":0.003278,"55":0.01639,"56":0.003278,"57":0,"58":0.013112,"59":0.009834,"60":0.022946,"61":0.006556,"62":0.006556,"63":0.39336,"64":0.009834,"65":0.068838,"66":0.029502,"67":0.13112,"68":0.019668,"69":0.013112,"70":0.03278,"71":0.036058,"72":0.173734,"73":4.710486,"74":0.003278,"75":0.009834,_:"76"},C:{"2":0,"3":0.003278,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.006556,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.01639,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.003278,"41":0,"42":0,"43":0.009834,"44":0.003278,"45":0.003278,"46":0,"47":0.019668,"48":0,"49":0,"50":0,"51":0,"52":0.019668,"53":0,"54":0,"55":0.003278,"56":0.006556,"57":0,"58":0.003278,"59":0.006556,"60":0.01639,"61":0.006556,"62":0.006556,"63":0.009834,"64":0.003278,"65":0.039336,"66":0.727716,"67":0.045892,"68":0,"3.5":0,"3.6":0.003278},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.003278,"18":0.003278,"19":0.003278,"20":0.006556,"21":0.006556,"22":0.003278,"23":0,"24":0,"25":0.003278,"26":0.009834,"27":0,"28":0.013112,"29":0,"30":0.006556,"31":0.006556,"32":0.006556,"33":0.003278,"34":0,"35":0.006556,"36":0.003278,"37":0.003278,"38":0.006556,"39":0,"40":0.006556,"41":0,"42":0,"43":0,"44":0,"45":0.003278,"46":0,"47":0,"48":0,"49":0.003278,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.003278,"57":0.006556,"58":0.635932,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.144232},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.006556,"11":0,"12":0.088506,_:"0","3.1":0,"3.2":0,"5.1":0.029502,"6.1":0,"7.1":0,"9.1":0.003278,"10.1":0.009834,"11.1":0.01639,"12.1":0.022946},G:{"8":0.019674336035225,"3.2":0.0012775542880016,"4.0-4.1":0.00076653257280096,"4.2-4.3":0.00025551085760032,"5.0-5.1":0.0025551085760032,"6.0-6.1":0.0012775542880016,"7.0-7.1":0.0045991954368058,"8.1-8.4":0.0099649234464125,"9.0-9.2":0.0058767497248074,"9.3":0.048802573801661,"10.0-10.2":0.027084150905634,"10.3":0.064644246972881,"11.0-11.2":0.0797193875713,"11.3-11.4":0.16378245972181,"12.0-12.1":0.98882701891324,"12.2":1.1342126968878},I:{"3":0.0013446995967742,"4":0.19363674193548,_:"67","2.1":0.0094128971774194,"2.2":0.01613639516129,"2.3":0.0094128971774194,"4.1":0.096818370967742,"4.2-4.3":0.41954627419355,"4.4":0,"4.4.3-4.4.4":0.58763372379032},A:{"6":0,"7":0,"8":0.04917,"9":0.013112,"10":0.09834,"11":0.488422,"5.5":0},B:{"12":0.039336,"13":0.039336,"14":0.062282,"15":0.068838,"16":0.177012,"17":0.67199,"18":0.091784},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.8224481988304,"5.0-5.4":0.071268923976608,"6.2-6.4":0.18326294736842,"7.2-7.4":0.45815736842105,"8.2":0.63123904093567,"9.2":0.31561952046784},N:{"10":0.0420125,"11":0.7982375},J:{"7":0,"10":0.174772},S:{"2.5":0},R:{_:"0"},M:{"0":0.84025},O:{"0":2.366144},Q:{"1.2":0.03361},H:{"0":18.493654178694},L:{"0":50.187772}};


/***/ }),
/* 381 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.006987,"19":0,"20":0,"21":0.048909,"22":0,"23":0.013974,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.013974,"30":0,"31":0,"32":0,"33":0,"34":0.020961,"35":0,"36":0.006987,"37":0,"38":0.006987,"39":0,"40":0,"41":0.027948,"42":0.013974,"43":0.034935,"44":0.006987,"45":0,"46":0.006987,"47":0.006987,"48":0.020961,"49":0.531012,"50":0.006987,"51":0.006987,"52":0,"53":0.013974,"54":0.083844,"55":0.132753,"56":0.020961,"57":0.013974,"58":0.531012,"59":0.006987,"60":0.006987,"61":0.649791,"62":0.048909,"63":0.062883,"64":0.034935,"65":0.090831,"66":0.034935,"67":0.083844,"68":0.06987,"69":0.06987,"70":0.104805,"71":0.300441,"72":1.334517,"73":26.746236,"74":0.06987,"75":0.020961,_:"76"},C:{"2":0,"3":0.006987,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.006987,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.006987,"36":0,"37":0,"38":0.006987,"39":0,"40":0,"41":0,"42":0,"43":0.006987,"44":0,"45":0.013974,"46":0,"47":0.006987,"48":0.188649,"49":0.006987,"50":0.027948,"51":0.048909,"52":0.258519,"53":0.006987,"54":0.006987,"55":0.006987,"56":0.048909,"57":0.027948,"58":0.006987,"59":0.013974,"60":0.167688,"61":0.020961,"62":0.020961,"63":0.034935,"64":0.06987,"65":0.433194,"66":6.134586,"67":0.062883,"68":0,"3.5":0,"3.6":0.020961},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.006987,"33":0,"34":0,"35":0,"36":0.034935,"37":0,"38":0.006987,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.006987,"49":0.006987,"50":0,"51":0,"52":0,"53":0.006987,"54":0,"55":0,"56":0,"57":0.006987,"58":1.935399,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.013974},E:{"4":0.006987,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.027948,"11":0.027948,"12":1.159842,_:"0","3.1":0,"3.2":0,"5.1":0.006987,"6.1":0.153714,"7.1":0,"9.1":0.020961,"10.1":0.111792,"11.1":0.153714,"12.1":0.656778},G:{"8":0.070946365255679,"3.2":0.0046069068347844,"4.0-4.1":0.0027641441008706,"4.2-4.3":0.00092138136695687,"5.0-5.1":0.0092138136695687,"6.0-6.1":0.0046069068347844,"7.0-7.1":0.016584864605224,"8.1-8.4":0.035933873311318,"9.0-9.2":0.021191771440008,"9.3":0.17598384108876,"10.0-10.2":0.097666424897428,"10.3":0.23310948584009,"11.0-11.2":0.28747098649054,"11.3-11.4":0.59060545621935,"12.0-12.1":3.5657458901231,"12.2":4.0900118879215},I:{"3":0.0020565594758065,"4":0.29614456451613,_:"67","2.1":0.014395916330645,"2.2":0.024678713709677,"2.3":0.014395916330645,"4.1":0.14807228225806,"4.2-4.3":0.64164655645161,"4.4":0,"4.4.3-4.4.4":0.89871649092742},A:{"6":0.0072980650684932,"7":0,"8":0.14596130136986,"9":0.036490325342466,"10":0.13136517123288,"11":1.8099201369863,"5.5":0},B:{"12":0.006987,"13":0.013974,"14":0.062883,"15":0.041922,"16":0.076857,"17":1.278621,"18":0.517038},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.22406535211268,"5.0-5.4":0.030554366197183,"6.2-6.4":0.030554366197183,"7.2-7.4":0.15277183098592,"8.2":1.3647616901408,"9.2":1.8128923943662},N:{"10":0,"11":0.036156},J:{"7":0,"10":0.003013},S:{"2.5":0},R:{_:"0"},M:{"0":0.277196},O:{"0":0.114494},Q:{"1.2":0.003013},H:{"0":0.22249607216495},L:{"0":33.680812}};


/***/ }),
/* 382 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.018402,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.018402,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006134,"35":0,"36":0.006134,"37":0,"38":0.012268,"39":0,"40":0,"41":0.018402,"42":0,"43":0,"44":0.006134,"45":0,"46":0,"47":0,"48":0,"49":0.226958,"50":0,"51":0.006134,"52":0,"53":0,"54":0.012268,"55":0.012268,"56":0.012268,"57":0.006134,"58":0.018402,"59":0.067474,"60":0.006134,"61":1.31881,"62":0.018402,"63":0.049072,"64":0.024536,"65":0.079742,"66":0.018402,"67":0.067474,"68":0.079742,"69":0.09201,"70":0.098144,"71":0.220824,"72":1.079584,"73":12.323206,"74":0.018402,"75":0.012268,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.006134,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.110412,"39":0,"40":0,"41":0,"42":0.018402,"43":0.006134,"44":0.006134,"45":0.12268,"46":0.006134,"47":0.024536,"48":0.06134,"49":0,"50":0.006134,"51":0.006134,"52":0.39871,"53":0,"54":0.012268,"55":0.012268,"56":0.110412,"57":0.006134,"58":0.012268,"59":0.006134,"60":0.668606,"61":0.042938,"62":0.012268,"63":0.049072,"64":0.049072,"65":0.447782,"66":4.759984,"67":0.024536,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.006134,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.006134,"52":0.006134,"53":0,"54":0,"55":0,"56":0.018402,"57":0,"58":0.509122,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006134},E:{"4":0,"5":0,"6":0,"7":0.006134,"8":0.006134,"9":0.012268,"10":0.03067,"11":0.049072,"12":2.1469,_:"0","3.1":0,"3.2":0,"5.1":0.018402,"6.1":0.006134,"7.1":0,"9.1":0.141082,"10.1":0.165618,"11.1":0.282164,"12.1":1.275872},G:{"8":0.21101371880316,"3.2":0.013702189532673,"4.0-4.1":0.0082213137196037,"4.2-4.3":0.0027404379065346,"5.0-5.1":0.027404379065346,"6.0-6.1":0.013702189532673,"7.0-7.1":0.049327882317622,"8.1-8.4":0.10687707835485,"9.0-9.2":0.063030071850295,"9.3":0.5234236401481,"10.0-10.2":0.29048641809266,"10.3":0.69333079035325,"11.0-11.2":0.85501662683879,"11.3-11.4":1.7566206980887,"12.0-12.1":10.605494698289,"12.2":12.164803867107},I:{"3":0.00048896370967742,"4":0.070410774193548,_:"67","2.1":0.0034227459677419,"2.2":0.005867564516129,"2.3":0.0034227459677419,"4.1":0.035205387096774,"4.2-4.3":0.15255667741935,"4.4":0,"4.4.3-4.4.4":0.21367714112903},A:{"6":0,"7":0.791286,"8":1.613242,"9":0.024536,"10":0.018402,"11":2.772568,"5.5":0},B:{"12":0,"13":0.012268,"14":0.018402,"15":0.21469,"16":0.116546,"17":1.551902,"18":0.374174},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.37263702031603,"5.0-5.4":0.053233860045147,"6.2-6.4":0.053233860045147,"7.2-7.4":0.21293544018059,"8.2":1.8738318735892,"9.2":2.1506479458239},N:{"10":0,"11":0.011598},J:{"7":0,"10":0.007732},S:{"2.5":0},R:{_:"0"},M:{"0":0.467786},O:{"0":0.7732},Q:{"1.2":0.015464},H:{"0":0.42822924742268},L:{"0":26.637838}};


/***/ }),
/* 383 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.021795,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.007265,"23":0,"24":0,"25":0,"26":0.007265,"27":0.007265,"28":0,"29":0,"30":0,"31":0.01453,"32":0,"33":0,"34":0.007265,"35":0,"36":0,"37":0,"38":0.04359,"39":0,"40":0.02906,"41":0.036325,"42":0,"43":0.007265,"44":0.007265,"45":0.007265,"46":0.007265,"47":0.007265,"48":0.036325,"49":0.501285,"50":0.007265,"51":0.007265,"52":0.01453,"53":0.021795,"54":0.08718,"55":0.01453,"56":0.01453,"57":0.04359,"58":0.05812,"59":0.050855,"60":0.05812,"61":0.094445,"62":0.021795,"63":0.07265,"64":0.108975,"65":0.07265,"66":0.108975,"67":0.13077,"68":0.13077,"69":0.094445,"70":0.152565,"71":0.2906,"72":1.707275,"73":30.302315,"74":0.08718,"75":0.02906,_:"76"},C:{"2":0,"3":0.01453,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.007265,"13":0.007265,"14":0,"15":0,"16":0.01453,"17":0.007265,"18":0,"19":0.007265,"20":0.007265,"21":0.01453,"22":0.01453,"23":0.01453,"24":0.01453,"25":0.01453,"26":0.01453,"27":0.01453,"28":0.01453,"29":0.021795,"30":0.04359,"31":0.02906,"32":0.036325,"33":0.01453,"34":0.007265,"35":0.01453,"36":0.007265,"37":0.02906,"38":0.01453,"39":0,"40":0,"41":0,"42":0,"43":0.02906,"44":0,"45":0.021795,"46":0.007265,"47":0.01453,"48":0.04359,"49":0,"50":0.04359,"51":0.007265,"52":0.2906,"53":0.007265,"54":0.04359,"55":0.01453,"56":0.05812,"57":0.021795,"58":0.007265,"59":0.01453,"60":0.297865,"61":0.050855,"62":0.021795,"63":0.02906,"64":0.08718,"65":0.4359,"66":5.63764,"67":0.065385,"68":0.007265,"3.5":0.007265,"3.6":0.021795},F:{"9":0,"11":0,"12":0.021795,"15":0,"16":0,"17":0,"18":0.007265,"19":0,"20":0.007265,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.007265,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.007265,"36":0.07265,"37":0.007265,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.007265,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.007265,"52":0,"53":0,"54":0,"55":0,"56":0.01453,"57":0,"58":1.896165,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.036325},E:{"4":0.007265,"5":0,"6":0,"7":0,"8":0.050855,"9":0.01453,"10":0.01453,"11":0.08718,"12":1.39488,_:"0","3.1":0,"3.2":0,"5.1":0.007265,"6.1":0.007265,"7.1":0,"9.1":0.05812,"10.1":0.10171,"11.1":0.2906,"12.1":1.0171},G:{"8":0.092604501150806,"3.2":0.0060132792955069,"4.0-4.1":0.0036079675773041,"4.2-4.3":0.0012026558591014,"5.0-5.1":0.012026558591014,"6.0-6.1":0.0060132792955069,"7.0-7.1":0.021647805463825,"8.1-8.4":0.046903578504953,"9.0-9.2":0.027661084759332,"9.3":0.22970726908836,"10.0-10.2":0.12748152106475,"10.3":0.30427193235265,"11.0-11.2":0.37522862803963,"11.3-11.4":0.77090240568398,"12.0-12.1":4.6542781747223,"12.2":5.338589358551},I:{"3":0.00040253528225806,"4":0.057965080645161,_:"67","2.1":0.0028177469758065,"2.2":0.0048304233870968,"2.3":0.0028177469758065,"4.1":0.028982540322581,"4.2-4.3":0.12559100806452,"4.4":0,"4.4.3-4.4.4":0.17590791834677},A:{"6":0.01545387283237,"7":0.007726936416185,"8":0.13135791907514,"9":0.069542427745665,"10":0.069542427745665,"11":1.043136416185,"5.5":0},B:{"12":0.007265,"13":0.021795,"14":0.050855,"15":0.02906,"16":0.07265,"17":1.140605,"18":0.486755},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.13338934640523,"5.0-5.4":0.030782156862745,"6.2-6.4":0.030782156862745,"7.2-7.4":0.23599653594771,"8.2":1.3851970588235,"9.2":1.323632745098},N:{"10":0,"11":0.0547},J:{"7":0,"10":0.00547},S:{"2.5":0},R:{_:"0"},M:{"0":0.155895},O:{"0":0.101195},Q:{"1.2":0.002735},H:{"0":0.28223602233677},L:{"0":29.592715}};


/***/ }),
/* 384 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003527,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.010581,"31":0.017635,"32":0.003527,"33":0.017635,"34":0.003527,"35":0,"36":0,"37":0.003527,"38":0.014108,"39":0.007054,"40":0.003527,"41":0,"42":0,"43":0.137553,"44":0,"45":0,"46":0.003527,"47":0.007054,"48":0.003527,"49":0.21162,"50":0.007054,"51":0.003527,"52":0,"53":0,"54":0.010581,"55":0,"56":0,"57":0,"58":0.059959,"59":0.003527,"60":0.014108,"61":0.038797,"62":0.014108,"63":0.074067,"64":0.059959,"65":0.045851,"66":0.017635,"67":0.028216,"68":0.021162,"69":0.130499,"70":0.109337,"71":0.169296,"72":0.338592,"73":7.427862,"74":0.010581,"75":0.021162,_:"76"},C:{"2":0,"3":0.003527,"4":0,"5":0.003527,"6":0,"7":0.003527,"8":0,"9":0,"10":0,"11":0,"12":0.003527,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.003527,"35":0,"36":0.003527,"37":0,"38":0.003527,"39":0,"40":0,"41":0.003527,"42":0.003527,"43":0.003527,"44":0,"45":0.003527,"46":0,"47":0.010581,"48":0.007054,"49":0,"50":0.003527,"51":0,"52":0.21162,"53":0,"54":0.014108,"55":0.003527,"56":0.021162,"57":0.010581,"58":0.021162,"59":0.003527,"60":0.010581,"61":0.003527,"62":0.014108,"63":0.003527,"64":0.003527,"65":0.081121,"66":0.931128,"67":0.042324,"68":0,"3.5":0,"3.6":0.003527},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.007054,"18":0,"19":0,"20":0.003527,"21":0,"22":0.003527,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.007054,"31":0,"32":0,"33":0.003527,"34":0.003527,"35":0.003527,"36":0.003527,"37":0.017635,"38":0.003527,"39":0,"40":0,"41":0,"42":0,"43":0.003527,"44":0,"45":0,"46":0.014108,"47":0,"48":0,"49":0,"50":0,"51":0.003527,"52":0,"53":0.003527,"54":0.007054,"55":0.003527,"56":0.010581,"57":0.010581,"58":0.712454,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.024689},E:{"4":0,"5":0,"6":0,"7":0,"8":0.003527,"9":0,"10":0.007054,"11":0.003527,"12":0.088175,_:"0","3.1":0,"3.2":0,"5.1":0.007054,"6.1":0,"7.1":0,"9.1":0.007054,"10.1":0.007054,"11.1":0.042324,"12.1":0.042324},G:{"8":0.028297966176323,"3.2":0.0018375302711898,"4.0-4.1":0.0011025181627139,"4.2-4.3":0.00036750605423797,"5.0-5.1":0.0036750605423797,"6.0-6.1":0.0018375302711898,"7.0-7.1":0.0066151089762834,"8.1-8.4":0.014332736115281,"9.0-9.2":0.0084526392474732,"9.3":0.070193656359452,"10.0-10.2":0.038955641749224,"10.3":0.092979031722206,"11.0-11.2":0.11466188892225,"11.3-11.4":0.23557138076654,"12.0-12.1":1.4222484299009,"12.2":1.6313593747623},I:{"3":0.0035859879032258,"4":0.51638225806452,_:"67","2.1":0.025101915322581,"2.2":0.04303185483871,"2.3":0.025101915322581,"4.1":0.25819112903226,"4.2-4.3":1.1188282258065,"4.4":0,"4.4.3-4.4.4":1.5670767137097},A:{"6":0,"7":0.0036709591836735,"8":0.055064387755102,"9":0.014683836734694,"10":0.0073419183673469,"11":0.099115897959184,"5.5":0},B:{"12":0.007054,"13":0.010581,"14":0.007054,"15":0.007054,"16":0.014108,"17":0.098756,"18":0.063486},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.74196530659026,"5.0-5.4":0.050819541547278,"6.2-6.4":0.19311425787966,"7.2-7.4":0.37606460744986,"8.2":1.4331110716332,"9.2":0.75212921489971},N:{"10":0,"11":0.012946},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.077676},O:{"0":0.802652},Q:{"1.2":0},H:{"0":5.5521657010309},L:{"0":66.695316}};


/***/ }),
/* 385 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006237,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.006237,"20":0,"21":0,"22":0.006237,"23":0,"24":0.006237,"25":0.006237,"26":0.024948,"27":0,"28":0,"29":0.081081,"30":0.006237,"31":0.081081,"32":0.006237,"33":0.018711,"34":0.006237,"35":0.006237,"36":0,"37":0.006237,"38":0.012474,"39":0.006237,"40":0.018711,"41":0.012474,"42":0.012474,"43":0.106029,"44":0.006237,"45":0.006237,"46":0.018711,"47":0.006237,"48":0.024948,"49":1.378377,"50":0.006237,"51":0.006237,"52":0.006237,"53":0.006237,"54":0.087318,"55":0.049896,"56":0.018711,"57":0.012474,"58":0.087318,"59":0.006237,"60":0.018711,"61":0.767151,"62":0.06237,"63":0.143451,"64":0.074844,"65":0.168399,"66":0.049896,"67":0.193347,"68":0.074844,"69":0.112266,"70":0.180873,"71":0.37422,"72":1.135134,"73":22.253616,"74":0.049896,"75":0.018711,_:"76"},C:{"2":0,"3":0.006237,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.043659,"33":0,"34":0,"35":0.006237,"36":0.006237,"37":0.006237,"38":0.006237,"39":0,"40":0.012474,"41":0.006237,"42":0.012474,"43":0.031185,"44":0.012474,"45":0.012474,"46":0,"47":0.024948,"48":0.268191,"49":0.012474,"50":0.018711,"51":0.006237,"52":0.193347,"53":0.006237,"54":0.006237,"55":0.006237,"56":0.024948,"57":0.037422,"58":0.012474,"59":0.018711,"60":0.074844,"61":0.018711,"62":0.012474,"63":0.031185,"64":0.043659,"65":0.199584,"66":3.006234,"67":0.068607,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.006237,"31":0.006237,"32":0,"33":0,"34":0,"35":0,"36":0.024948,"37":0.043659,"38":0,"39":0,"40":0,"41":0,"42":0.006237,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.006237,"50":0.006237,"51":0.006237,"52":0,"53":0,"54":0,"55":0.006237,"56":0.006237,"57":0.006237,"58":1.802493,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006237},E:{"4":0.006237,"5":0,"6":0,"7":0.012474,"8":0.056133,"9":0.130977,"10":0.068607,"11":0.143451,"12":0.604989,_:"0","3.1":0,"3.2":0,"5.1":0.074844,"6.1":0,"7.1":0,"9.1":0.037422,"10.1":0.12474,"11.1":0.18711,"12.1":0.299376},G:{"8":0.039686322425698,"3.2":0.0025770339237466,"4.0-4.1":0.001546220354248,"4.2-4.3":0.00051540678474932,"5.0-5.1":0.0051540678474932,"6.0-6.1":0.0025770339237466,"7.0-7.1":0.0092773221254878,"8.1-8.4":0.020100864605224,"9.0-9.2":0.011854356049234,"9.3":0.098442695887121,"10.0-10.2":0.054633119183428,"10.3":0.13039791654158,"11.0-11.2":0.16080691684179,"11.3-11.4":0.33037574902432,"12.0-12.1":1.9946242569799,"12.2":2.2878907175023},I:{"3":0.0024307570564516,"4":0.35002901612903,_:"67","2.1":0.017015299395161,"2.2":0.029169084677419,"2.3":0.017015299395161,"4.1":0.17501450806452,"4.2-4.3":0.7583962016129,"4.4":0,"4.4.3-4.4.4":1.0622408336694},A:{"6":0.0066555906040268,"7":0.0066555906040268,"8":0.13311181208054,"9":0.026622362416107,"10":0.12645622147651,"11":0.69218142281879,"5.5":0},B:{"12":0.012474,"13":0.018711,"14":0.024948,"15":0.043659,"16":0.024948,"17":0.230769,"18":0.081081},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.5492808571429,"5.0-5.4":0.091733734962406,"6.2-6.4":0.23443065601504,"7.2-7.4":0.42809076315789,"8.2":1.9162157969925,"9.2":1.2027311917293},N:{"10":0.023832333333333,"11":0.19065866666667},J:{"7":0,"10":0.018815},S:{"2.5":0},R:{_:"0"},M:{"0":0.146757},O:{"0":0.297277},Q:{"1.2":0.007526},H:{"0":0.7517012766323},L:{"0":43.586097}};


/***/ }),
/* 386 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.119055,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.007937,"48":0,"49":0.206362,"50":0,"51":0,"52":0,"53":0.007937,"54":0,"55":0,"56":0.015874,"57":0.015874,"58":0.015874,"59":0,"60":0,"61":0,"62":0.055559,"63":0.07937,"64":0.007937,"65":0.039685,"66":0.023811,"67":0.174614,"68":0.071433,"69":0.07937,"70":0.357165,"71":0.07937,"72":1.254046,"73":28.152539,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.023811,"44":0,"45":0,"46":0,"47":0,"48":0.039685,"49":0,"50":0.007937,"51":0,"52":0.452409,"53":0,"54":0.007937,"55":0,"56":0,"57":0,"58":0,"59":0,"60":2.127116,"61":0,"62":0,"63":0.007937,"64":0.007937,"65":0.420661,"66":4.52409,"67":0,"68":0.015874,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.007937,"39":0.007937,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.023811,"57":0,"58":0.920692,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.007937,"9":0.071433,"10":0.261921,"11":0.190488,"12":5.508278,_:"0","3.1":0,"3.2":0,"5.1":0.150803,"6.1":0.269858,"7.1":0,"9.1":0.15874,"10.1":0.253984,"11.1":1.793762,"12.1":4.158988},G:{"8":0.216529694286,"3.2":0.014060369758831,"4.0-4.1":0.0084362218552987,"4.2-4.3":0.0028120739517662,"5.0-5.1":0.028120739517662,"6.0-6.1":0.014060369758831,"7.0-7.1":0.050617331131792,"8.1-8.4":0.10967088411888,"9.0-9.2":0.064677700890623,"9.3":0.53710612478735,"10.0-10.2":0.29807983888722,"10.3":0.71145470979686,"11.0-11.2":0.87736707295107,"11.3-11.4":1.8025394030822,"12.0-12.1":10.882726193335,"12.2":12.48279627189},I:{"3":0.00022896572580645,"4":0.032971064516129,_:"67","2.1":0.0016027600806452,"2.2":0.0027475887096774,"2.3":0.0016027600806452,"4.1":0.016485532258065,"4.2-4.3":0.071437306451613,"4.4":0,"4.4.3-4.4.4":0.10005802217742},A:{"6":0,"7":0,"8":0.007937,"9":0,"10":0.015874,"11":2.341415,"5.5":0},B:{"12":0,"13":0,"14":0,"15":0.039685,"16":0.095244,"17":1.66677,"18":1.007999},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.12420147311828,"5.0-5.4":0.011291043010753,"6.2-6.4":0,"7.2-7.4":0.011291043010753,"8.2":0.30485816129032,"9.2":0.59842527956989},N:{"10":0,"11":0.014441},J:{"7":0,"10":0.002063},S:{"2.5":0},R:{_:"0"},M:{"0":0.175355},O:{"0":1.151154},Q:{"1.2":0},H:{"0":0.19726462714777},L:{"0":9.844474}};


/***/ }),
/* 387 */
/***/ (function(module, exports) {

module.exports={D:{"4":0.00557,"11":0.00557,"12":0.00557,"15":0.01114,"17":0.01114,"18":0.01114,"21":0.01671,"22":0.02228,"23":0.03899,"24":0.00557,"25":0.01114,"26":0.01671,"27":0.01114,"29":0.01114,"31":0.00557,"33":0.02785,"34":0.01114,"36":0.00557,"37":0.01114,"38":0.01671,"39":0.01114,"40":0.02785,"41":0.01671,"42":0.00557,"43":0.01671,"45":0.00557,"46":0.00557,"47":0.01671,"48":0.00557,"49":0.86335,"50":0.00557,"51":0.00557,"52":0.00557,"53":0.02785,"54":0.01671,"55":0.02228,"56":0.02228,"57":0.02785,"58":0.08355,"59":0.02785,"60":0.03899,"61":0.02785,"62":0.04456,"63":0.12254,"64":0.02785,"65":0.09469,"66":0.02785,"67":0.09469,"68":0.15596,"69":0.16153,"70":0.22837,"71":0.27293,"72":4.03825,"73":35.05758,"74":0.06127,"75":0.03342,_:"5 6 7 8 9 10 13 14 16 19 20 28 30 32 35 44 76"},C:{"3":0.01114,"4":0.00557,"10":0.02785,"16":0.01114,"17":0.01114,"18":0.00557,"22":0.00557,"24":0.01671,"25":0.00557,"30":0.01114,"31":0.01114,"35":0.01671,"38":0.02228,"43":0.02785,"45":0.03899,"46":0.00557,"47":0.01671,"48":0.01671,"49":0.01114,"50":0.01671,"51":0.00557,"52":0.21166,"53":0.01114,"54":0.00557,"56":0.03342,"57":0.05013,"58":0.01114,"59":0.01671,"60":1.67657,"61":0.02785,"62":0.03899,"63":0.02228,"64":0.06684,"65":0.20609,"66":2.4508,"67":0.08912,_:"2 5 6 7 8 9 11 12 13 14 15 19 20 21 23 26 27 28 29 32 33 34 36 37 39 40 41 42 44 55 68","3.5":0.01671,"3.6":0.1671},F:{"11":0.00557,"12":0.02785,"21":0.00557,"22":0.01114,"27":0.03342,"36":0.05013,"38":0.01671,"52":0.00557,"54":0.00557,"55":0.02228,"56":0.00557,"57":0.02228,"58":1.68214,_:"9 15 16 17 18 19 20 23 24 25 26 28 29 30 31 32 33 34 35 37 39 40 41 42 43 44 45 46 47 48 49 50 51 53 9.5-9.6 11.5","10.0-10.1":0,"10.5":0.01114,"10.6":0.01114,"11.1":0.00557,"11.6":0.02228,"12.1":0.06684},E:{"4":0,"5":0.02228,"8":0.01671,"9":0.00557,"11":0.1114,"12":0.71296,_:"0 6 7 10 3.2 6.1 7.1","3.1":0.00557,"5.1":0.01671,"9.1":0.04456,"10.1":0.07798,"11.1":0.08355,"12.1":0.55143},G:{"8":0.044638363254278,"3.2":0.0028985950165116,"4.0-4.1":0.0017391570099069,"4.2-4.3":0.00057971900330231,"5.0-5.1":0.0057971900330231,"6.0-6.1":0.0028985950165116,"7.0-7.1":0.010434942059442,"8.1-8.4":0.02260904112879,"9.0-9.2":0.013333537075953,"9.3":0.11072632963074,"10.0-10.2":0.061450214350045,"10.3":0.14666890783548,"11.0-11.2":0.18087232903032,"11.3-11.4":0.37159988111678,"12.0-12.1":2.2435125427799,"12.2":2.573372655659},I:{"3":0.0040762872983871,"4":0.58698537096774,_:"67","2.1":0.02853401108871,"2.2":0.048915447580645,"2.3":0.02853401108871,"4.1":0.29349268548387,"4.2-4.3":1.2718016370968,"4.4":0,"4.4.3-4.4.4":1.7813375493952},A:{"8":0.051721428571429,"9":0.13217698412698,"10":0.022987301587302,"11":0.51721428571429,_:"6 7 5.5"},B:{"12":0.00557,"13":0.01114,"14":0.01671,"15":0.01114,"16":0.04456,"17":0.88006,"18":0.18381},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.44375395751634,"5.0-5.4":0.051599297385621,"6.2-6.4":0.11351845424837,"7.2-7.4":0.20639718954248,"8.2":1.2383831372549,"9.2":1.1042249640523},N:{"10":0,"11":0.057577},J:{"7":0,"10":0},S:{_:"2.5"},R:{_:"0"},M:{"0":0.429613},O:{"0":1.395135},Q:{"1.2":0.022145},H:{"0":0.4780123814433},L:{"0":29.776071}};


/***/ }),
/* 388 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00508,"11":0.00508,"12":0,"13":0,"14":0.00508,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01524,"23":0,"24":0,"25":0,"26":0.00508,"27":0,"28":0,"29":0.32512,"30":0.00508,"31":0.00508,"32":0,"33":0.00508,"34":0.01524,"35":0.00508,"36":0,"37":0,"38":0.0254,"39":0,"40":0.01016,"41":0,"42":0,"43":0.01524,"44":0,"45":0,"46":0.03048,"47":0,"48":0,"49":0.54356,"50":0.01016,"51":0,"52":0.01524,"53":0.00508,"54":0,"55":0.00508,"56":0.01524,"57":0.01524,"58":0.03556,"59":0.00508,"60":0.03048,"61":1.1176,"62":0.0254,"63":0.06096,"64":0.0762,"65":0.05588,"66":0.07112,"67":0.02032,"68":0.0254,"69":0.03556,"70":0.12192,"71":0.1524,"72":0.48768,"73":12.82192,"74":0.00508,"75":0.01524,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00508,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.00508,"40":0.00508,"41":0,"42":0.00508,"43":0,"44":0,"45":0.00508,"46":0,"47":0,"48":0.01524,"49":0.00508,"50":0,"51":0,"52":0.2032,"53":0,"54":0,"55":0,"56":0.01524,"57":0.04064,"58":0,"59":0,"60":0.03556,"61":0.00508,"62":0.01016,"63":0.03556,"64":0.00508,"65":0.1016,"66":2.04216,"67":0.0254,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00508,"27":0,"28":0,"29":0,"30":0,"31":0.00508,"32":0,"33":0,"34":0,"35":0,"36":0.02032,"37":0.00508,"38":0,"39":0,"40":0.01016,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":4.3688,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00508},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00508,"11":0.00508,"12":0.18796,_:"0","3.1":0,"3.2":0,"5.1":0.00508,"6.1":0,"7.1":0,"9.1":0.0254,"10.1":0.01016,"11.1":0.06604,"12.1":0.11684},G:{"8":0.073457059941959,"3.2":0.0047699389572701,"4.0-4.1":0.0028619633743621,"4.2-4.3":0.00095398779145402,"5.0-5.1":0.0095398779145402,"6.0-6.1":0.0047699389572701,"7.0-7.1":0.017171780246172,"8.1-8.4":0.037205523866707,"9.0-9.2":0.021941719203442,"9.3":0.18221166816772,"10.0-10.2":0.10112270589413,"10.3":0.24135891123787,"11.0-11.2":0.29764419093365,"11.3-11.4":0.61150617432203,"12.0-12.1":3.691932752927,"12.2":4.2347518062644},I:{"3":0.00085987903225806,"4":0.12382258064516,_:"67","2.1":0.0060191532258065,"2.2":0.010318548387097,"2.3":0.0060191532258065,"4.1":0.061911290322581,"4.2-4.3":0.26828225806452,"4.4":0,"4.4.3-4.4.4":0.37576713709677},A:{"6":0,"7":0.005128380952381,"8":0.087182476190476,"9":0.015385142857143,"10":0.005128380952381,"11":0.42565561904762,"5.5":0},B:{"12":0.00508,"13":0.0254,"14":0.01016,"15":0.03556,"16":0.01016,"17":0.16764,"18":0.1016},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.73378285714286,"5.0-5.4":0.050957142857143,"6.2-6.4":0.11210571428571,"7.2-7.4":0.37708285714286,"8.2":1.9669457142857,"9.2":2.0382857142857},N:{"10":0,"11":0.15252},J:{"7":0,"10":0.00984},S:{"2.5":0},R:{_:"0"},M:{"0":0.16728},O:{"0":0.09348},Q:{"1.2":0},H:{"0":0.37729298969072},L:{"0":55.714}};


/***/ }),
/* 389 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005018,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005018,"35":0.002509,"36":0,"37":0,"38":0.002509,"39":0,"40":0.002509,"41":0,"42":0.002509,"43":0.005018,"44":0,"45":0.002509,"46":0.002509,"47":0.005018,"48":0.002509,"49":0.087815,"50":0,"51":0,"52":0,"53":0,"54":0.002509,"55":0.002509,"56":0.007527,"57":0.005018,"58":0.015054,"59":0.002509,"60":0,"61":0.12545,"62":0.002509,"63":0.030108,"64":0.012545,"65":0.017563,"66":0.005018,"67":0.022581,"68":0.005018,"69":0.035126,"70":0.032617,"71":0.05018,"72":0.110396,"73":2.639468,"74":0.005018,"75":0.005018,_:"76"},C:{"2":0.005018,"3":0.012545,"4":0,"5":0,"6":0.002509,"7":0,"8":0,"9":0,"10":0.002509,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.002509,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.002509,"30":0.007527,"31":0,"32":0.062725,"33":0.002509,"34":0.002509,"35":0.005018,"36":0.002509,"37":0.002509,"38":0.002509,"39":0,"40":0.002509,"41":0.002509,"42":0.002509,"43":0.020072,"44":0.007527,"45":0.002509,"46":0.005018,"47":0.017563,"48":0.047671,"49":0.005018,"50":0.005018,"51":0.002509,"52":0.062725,"53":0.007527,"54":0.002509,"55":0.002509,"56":0.012545,"57":0.012545,"58":0.007527,"59":0.02509,"60":0.045162,"61":0.017563,"62":0.015054,"63":0.015054,"64":0.015054,"65":0.07527,"66":1.126541,"67":0.022581,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.002509,"15":0.002509,"16":0.002509,"17":0.005018,"18":0.007527,"19":0.005018,"20":0.015054,"21":0,"22":0,"23":0.002509,"24":0,"25":0,"26":0,"27":0.002509,"28":0.002509,"29":0.002509,"30":0.002509,"31":0,"32":0,"33":0.002509,"34":0.002509,"35":0.010036,"36":0.002509,"37":0.007527,"38":0.005018,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.005018,"52":0,"53":0.005018,"54":0,"55":0,"56":0.002509,"57":0.002509,"58":0.298571,"9.5-9.6":0,"10.0-10.1":0.002509,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.017563},E:{"4":0,"5":0,"6":0.002509,"7":0.017563,"8":0,"9":0.002509,"10":0.002509,"11":0.02509,"12":0.045162,_:"0","3.1":0,"3.2":0,"5.1":0.002509,"6.1":0,"7.1":0,"9.1":0.002509,"10.1":0.002509,"11.1":0.020072,"12.1":0.02509},G:{"8":0.0067224706294406,"3.2":0.00043652406684679,"4.0-4.1":0.00026191444010808,"4.2-4.3":0.000087304813369359,"5.0-5.1":0.00087304813369359,"6.0-6.1":0.00043652406684679,"7.0-7.1":0.0015714866406485,"8.1-8.4":0.003404887721405,"9.0-9.2":0.0020080107074952,"9.3":0.016675219353547,"10.0-10.2":0.009254310217152,"10.3":0.022088117782448,"11.0-11.2":0.02723910177124,"11.3-11.4":0.055962385369759,"12.0-12.1":0.33786962773942,"12.2":0.38754606654658},I:{"3":0.0054450252016129,"4":0.78408362903226,_:"67","2.1":0.03811517641129,"2.2":0.065340302419355,"2.3":0.03811517641129,"4.1":0.39204181451613,"4.2-4.3":1.6988478629032,"4.4":0,"4.4.3-4.4.4":2.3794760131048},A:{"6":0,"7":0,"8":0.032617,"9":0.005018,"10":0.002509,"11":0.055198,"5.5":0},B:{"12":0.002509,"13":0.007527,"14":0.022581,"15":0.010036,"16":0.007527,"17":0.065234,"18":0.020072},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.2404088372093,"5.0-5.4":0.010452558139535,"6.2-6.4":0.010452558139535,"7.2-7.4":0.031357674418605,"8.2":0.10452558139535,"9.2":0.052262790697674},N:{"10":0.012050739130435,"11":0.26511626086957},J:{"7":0,"10":0.052437},S:{"2.5":0},R:{_:"0"},M:{"0":0.29964},O:{"0":10.622238},Q:{"1.2":0.022473},H:{"0":42.74345293299},L:{"0":8.77509}};


/***/ }),
/* 390 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1.11755,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.210738,"56":0,"57":0.03193,"58":0,"59":0,"60":0,"61":14.164148,"62":0,"63":0.153264,"64":0,"65":0.210738,"66":0.019158,"67":0.121334,"68":0.019158,"69":0,"70":0.006386,"71":0,"72":0.485336,"73":16.067176,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006386,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.012772,"51":0,"52":0.019158,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.006386,"61":0,"62":0,"63":0.019158,"64":0.076632,"65":0.146878,"66":0.913198,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.019158,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.070246,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.019158,"10":0,"11":0,"12":0.466178,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.006386,"11.1":0.67053,"12.1":0.114948},G:{"8":0.11720041088762,"3.2":0.007610416291404,"4.0-4.1":0.0045662497748424,"4.2-4.3":0.0015220832582808,"5.0-5.1":0.015220832582808,"6.0-6.1":0.007610416291404,"7.0-7.1":0.027397498649054,"8.1-8.4":0.059361247072951,"9.0-9.2":0.035007914940458,"9.3":0.29071790233163,"10.0-10.2":0.16134082537776,"10.3":0.38508706434504,"11.0-11.2":0.47488997658361,"11.3-11.4":0.97565536855799,"12.0-12.1":5.8904622095467,"12.2":6.7565275835085},I:{"3":0.0039550362903226,"4":0.56952522580645,_:"67","2.1":0.027685254032258,"2.2":0.047460435483871,"2.3":0.027685254032258,"4.1":0.28476261290323,"4.2-4.3":1.2339713225806,"4.4":0,"4.4.3-4.4.4":1.728350858871},A:{"6":0,"7":0,"8":0.006386,"9":0,"10":0,"11":0.83018,"5.5":0},B:{"12":0.051088,"13":0.038316,"14":0,"15":0,"16":0.012772,"17":0.657758,"18":0.22351},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.17134023963134,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.010708764976959,"8.2":1.0173326728111,"9.2":1.1244203225806},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0.484276},Q:{"1.2":0},H:{"0":0.15054607560137},L:{"0":39.097996}};


/***/ }),
/* 391 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006166,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.012332,"23":0,"24":0,"25":0,"26":0.012332,"27":0,"28":0.006166,"29":0,"30":0,"31":0.006166,"32":0,"33":0,"34":0.012332,"35":0,"36":0,"37":0,"38":0.024664,"39":0,"40":0,"41":0.03083,"42":0,"43":0.018498,"44":0,"45":0,"46":0.006166,"47":0.006166,"48":0.012332,"49":2.910352,"50":0.012332,"51":0.06166,"52":0,"53":0.043162,"54":0.006166,"55":0.024664,"56":0.012332,"57":0.018498,"58":0.055494,"59":0.036996,"60":0.024664,"61":0.086324,"62":0.15415,"63":0.302134,"64":0.203478,"65":0.252806,"66":0.073992,"67":0.376126,"68":0.080158,"69":0.117154,"70":0.055494,"71":0.110988,"72":0.690592,"73":23.634278,"74":0.049328,"75":0.018498,_:"76"},C:{"2":0.006166,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.073992,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.006166,"39":0,"40":0.006166,"41":0.006166,"42":0,"43":0.012332,"44":0,"45":0,"46":0,"47":0.006166,"48":0.012332,"49":0.012332,"50":0.012332,"51":0.055494,"52":0.450118,"53":0.006166,"54":0.018498,"55":0.006166,"56":0.03083,"57":0.09249,"58":0.049328,"59":0.06166,"60":0.147984,"61":0.160316,"62":0.03083,"63":0.03083,"64":0.049328,"65":0.160316,"66":2.595886,"67":0.043162,"68":0.006166,"3.5":0,"3.6":0.018498},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.012332,"31":0.006166,"32":0,"33":0,"34":0,"35":0,"36":0.03083,"37":0.006166,"38":0,"39":0,"40":0.012332,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.012332,"49":0.018498,"50":0.006166,"51":0.03083,"52":0,"53":0.012332,"54":0.012332,"55":0,"56":0.018498,"57":0,"58":0.807746,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006166},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.006166,"10":0.006166,"11":0.06166,"12":0.228142,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.006166,"10.1":0.018498,"11.1":0.147984,"12.1":0.21581},G:{"8":0.061214976883819,"3.2":0.0039749984989493,"4.0-4.1":0.0023849990993696,"4.2-4.3":0.00079499969978985,"5.0-5.1":0.0079499969978985,"6.0-6.1":0.0039749984989493,"7.0-7.1":0.014309994596217,"8.1-8.4":0.031004988291804,"9.0-9.2":0.018284993095167,"9.3":0.15184494265986,"10.0-10.2":0.084269968177724,"10.3":0.20113492404683,"11.0-11.2":0.24803990633443,"11.3-11.4":0.5095948075653,"12.0-12.1":3.0766488381867,"12.2":3.5290036673672},I:{"3":0.00074580846774194,"4":0.10739641935484,_:"67","2.1":0.0052206592741935,"2.2":0.0089497016129032,"2.3":0.0052206592741935,"4.1":0.053698209677419,"4.2-4.3":0.23269224193548,"4.4":0,"4.4.3-4.4.4":0.32591830040323},A:{"6":0.006166,"7":0,"8":0.086324,"9":0.06166,"10":0.049328,"11":0.480948,"5.5":0},B:{"12":0.006166,"13":0.018498,"14":0.018498,"15":0.06166,"16":0.049328,"17":0.357628,"18":0.160316},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.20530451612903,"5.0-5.4":0.041060903225806,"6.2-6.4":0.11291748387097,"7.2-7.4":0.11291748387097,"8.2":0.78015716129032,"9.2":0.9751964516129},N:{"10":0,"11":0.049842},J:{"7":0,"10":0.007668},S:{"2.5":0},R:{_:"0"},M:{"0":0.107352},O:{"0":0.069012},Q:{"1.2":0},H:{"0":0.18874874226804},L:{"0":49.868418}};


/***/ }),
/* 392 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.010725,"26":0,"27":0,"28":0,"29":0.002145,"30":0.002145,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.015015,"41":0,"42":0,"43":0.006435,"44":0,"45":0.002145,"46":0,"47":0,"48":0,"49":0.0858,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.00429,"56":0,"57":0,"58":0.00429,"59":0,"60":0.002145,"61":0.002145,"62":0.006435,"63":0.0429,"64":0,"65":0.01716,"66":0.002145,"67":0.00429,"68":0.002145,"69":0.00429,"70":0.015015,"71":0.01716,"72":0.12012,"73":1.54011,"74":0.006435,"75":0.002145,_:"76"},C:{"2":0,"3":0.156585,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00429,"23":0,"24":0,"25":0.002145,"26":0,"27":0,"28":0.002145,"29":0,"30":0,"31":0.002145,"32":0.002145,"33":0,"34":0.006435,"35":0.00429,"36":0,"37":0,"38":0.002145,"39":0.002145,"40":0,"41":0,"42":0,"43":0.00429,"44":0,"45":0,"46":0,"47":0.010725,"48":0.002145,"49":0.002145,"50":0,"51":0,"52":0.010725,"53":0,"54":0,"55":0,"56":0.006435,"57":0.015015,"58":0,"59":0.006435,"60":0.006435,"61":0.002145,"62":0.010725,"63":0.006435,"64":0.00429,"65":0.08151,"66":1.04247,"67":0.019305,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.002145,"15":0,"16":0.00429,"17":0,"18":0,"19":0,"20":0.00858,"21":0,"22":0,"23":0.01287,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.002145,"31":0,"32":0,"33":0.002145,"34":0.002145,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.002145,"56":0,"57":0.006435,"58":0.18876,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01287},E:{"4":0,"5":0,"6":0,"7":0,"8":0.002145,"9":0,"10":0.006435,"11":0.002145,"12":0.09438,_:"0","3.1":0,"3.2":0,"5.1":0.00858,"6.1":0,"7.1":0,"9.1":0.006435,"10.1":0.045045,"11.1":0.040755,"12.1":0.03861},G:{"8":0.030561787751426,"3.2":0.0019845316721705,"4.0-4.1":0.0011907190033023,"4.2-4.3":0.0003969063344341,"5.0-5.1":0.003969063344341,"6.0-6.1":0.0019845316721705,"7.0-7.1":0.0071443140198139,"8.1-8.4":0.01547934704293,"9.0-9.2":0.0091288456919844,"9.3":0.075809109876914,"10.0-10.2":0.042072071450015,"10.3":0.10041730261183,"11.0-11.2":0.12383477634344,"11.3-11.4":0.25441696037226,"12.0-12.1":1.53602751426,"12.2":1.761867218553},I:{"3":0.0014285584677419,"4":0.20571241935484,_:"67","2.1":0.0099999092741935,"2.2":0.017142701612903,"2.3":0.0099999092741935,"4.1":0.10285620967742,"4.2-4.3":0.44571024193548,"4.4":0,"4.4.3-4.4.4":0.62428005040323},A:{"6":0,"7":0,"8":0.00858,"9":0.00858,"10":0.03861,"11":0.160875,"5.5":0},B:{"12":0.01287,"13":0.015015,"14":0.010725,"15":0.00858,"16":0.023595,"17":0.122265,"18":0.01287},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.54892588235294,"5.0-5.4":0.12198352941176,"6.2-6.4":0.081322352941176,"7.2-7.4":0.28462823529412,"8.2":0.79289294117647,"9.2":0.24396705882353},N:{"10":0.031006578947368,"11":0.16536842105263},J:{"7":0,"10":0.03142},S:{"2.5":0.007855},R:{_:"0"},M:{"0":0.086405},O:{"0":12.47374},Q:{"1.2":0.01571},H:{"0":10.113784879725},L:{"0":58.85745}};


/***/ }),
/* 393 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003663,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.021978,"23":0,"24":0.003663,"25":0.003663,"26":0.003663,"27":0.003663,"28":0.007326,"29":0.010989,"30":0,"31":0.062271,"32":0.018315,"33":0.003663,"34":0,"35":0.003663,"36":0,"37":0.025641,"38":0.007326,"39":0.003663,"40":0.003663,"41":0,"42":0,"43":0.007326,"44":0,"45":0,"46":0.003663,"47":0,"48":0,"49":0.058608,"50":0.007326,"51":0,"52":0,"53":0.007326,"54":0,"55":0.007326,"56":0.003663,"57":0.003663,"58":0.032967,"59":0,"60":0.021978,"61":0.051282,"62":0.010989,"63":0.043956,"64":0.010989,"65":0.018315,"66":0.007326,"67":0.032967,"68":0.03663,"69":0.043956,"70":0.054945,"71":0.091575,"72":0.161172,"73":5.597064,"74":0.010989,"75":0.010989,_:"76"},C:{"2":0.003663,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.003663,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.003663,"22":0,"23":0,"24":0,"25":0.003663,"26":0.003663,"27":0.003663,"28":0,"29":0.007326,"30":0.007326,"31":0,"32":0,"33":0.003663,"34":0.007326,"35":0.007326,"36":0.014652,"37":0.018315,"38":0.014652,"39":0.014652,"40":0.014652,"41":0.032967,"42":0.021978,"43":0.040293,"44":0.021978,"45":0.010989,"46":0.010989,"47":0.076923,"48":0.029304,"49":0.021978,"50":0.029304,"51":0.003663,"52":0.029304,"53":0.021978,"54":0.010989,"55":0.018315,"56":0.065934,"57":0.084249,"58":0.032967,"59":0.051282,"60":0.098901,"61":0.054945,"62":0.095238,"63":0.040293,"64":0.095238,"65":0.278388,"66":3.128202,"67":0.597069,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.003663,"35":0,"36":0,"37":0.124542,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.32967,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.003663,"8":0.007326,"9":0.003663,"10":0.010989,"11":0.018315,"12":0.234432,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.010989,"10.1":0.029304,"11.1":0.062271,"12.1":0.131868},G:{"8":0.044407910337236,"3.2":0.002883630541379,"4.0-4.1":0.0017301783248274,"4.2-4.3":0.00057672610827579,"5.0-5.1":0.0057672610827579,"6.0-6.1":0.002883630541379,"7.0-7.1":0.010381069948964,"8.1-8.4":0.022492318222756,"9.0-9.2":0.013264700490343,"9.3":0.11015468668068,"10.0-10.2":0.061132967477234,"10.3":0.14591170539378,"11.0-11.2":0.17993854578205,"11.3-11.4":0.36968143540478,"12.0-12.1":2.2319300390273,"12.2":2.5600871946362},I:{"3":0.0037326824596774,"4":0.53750627419355,_:"67","2.1":0.026128777217742,"2.2":0.044792189516129,"2.3":0.026128777217742,"4.1":0.26875313709677,"4.2-4.3":1.1645969274194,"4.4":0,"4.4.3-4.4.4":1.631182234879},A:{"6":0,"7":0,"8":0.011343483870968,"9":0.0037811612903226,"10":0.0037811612903226,"11":0.098310193548387,"5.5":0},B:{"12":0.007326,"13":0.007326,"14":0.010989,"15":0.010989,"16":0.021978,"17":0.175824,"18":0.062271},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.5249831026616,"5.0-5.4":0.070670802281369,"6.2-6.4":0.080766631178707,"7.2-7.4":0.28268320912548,"8.2":1.0499662053232,"9.2":0.64613304942966},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.747766},O:{"0":4.645021},Q:{"1.2":0.06337},H:{"0":0.95991395189003},L:{"0":65.190486}};


/***/ }),
/* 394 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.02328,"24":0,"25":0.00776,"26":0.00776,"27":0.06984,"28":0,"29":0,"30":0.00776,"31":0.00776,"32":0,"33":0,"34":0,"35":0,"36":0.02328,"37":0,"38":0.00776,"39":0,"40":0.00776,"41":0,"42":0,"43":0.00776,"44":0,"45":0,"46":0.00776,"47":0.00776,"48":0,"49":0.17072,"50":0.00776,"51":0.00776,"52":0.00776,"53":0,"54":0.03104,"55":0.01552,"56":0.00776,"57":0.06208,"58":0.04656,"59":0.01552,"60":0.24056,"61":0.00776,"62":0.00776,"63":0.14744,"64":0.03104,"65":0.62856,"66":0.06208,"67":0.13968,"68":0.1552,"69":0.33368,"70":0.18624,"71":0.2716,"72":1.10968,"73":44.65104,"74":0.08536,"75":0.06208,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.00776,"39":0,"40":0,"41":0.04656,"42":0,"43":0,"44":0.00776,"45":0.00776,"46":0,"47":0.00776,"48":0.00776,"49":0.00776,"50":0,"51":0,"52":0.06208,"53":0,"54":0,"55":0,"56":0.00776,"57":0.00776,"58":0,"59":0.00776,"60":0.13968,"61":0.01552,"62":0.05432,"63":0.00776,"64":0.05432,"65":0.16296,"66":4.35336,"67":0.14744,"68":0.00776,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.01552,"58":2.4832,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01552,"12":0.45784,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.00776,"10.1":0.03104,"11.1":0.10088,"12.1":0.2716},G:{"8":0.075538132692885,"3.2":0.004905073551486,"4.0-4.1":0.0029430441308916,"4.2-4.3":0.00098101471029721,"5.0-5.1":0.0098101471029721,"6.0-6.1":0.004905073551486,"7.0-7.1":0.01765826478535,"8.1-8.4":0.038259573701591,"9.0-9.2":0.022563338336836,"9.3":0.18737380966677,"10.0-10.2":0.1039875592915,"10.3":0.24819672170519,"11.0-11.2":0.30607658961273,"11.3-11.4":0.62883042930051,"12.0-12.1":3.7965269288502,"12.2":4.3547242990093},I:{"3":0.0027174193548387,"4":0.39130838709677,_:"67","2.1":0.019021935483871,"2.2":0.032609032258065,"2.3":0.019021935483871,"4.1":0.19565419354839,"4.2-4.3":0.84783483870968,"4.4":0,"4.4.3-4.4.4":1.1875122580645},A:{"6":0,"7":0,"8":0.08536,"9":0.01552,"10":0.00776,"11":0.24832,"5.5":0},B:{"12":0.00776,"13":0.06984,"14":0.02328,"15":0.02328,"16":0.04656,"17":1.00104,"18":0.20176},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.65244496350365,"5.0-5.4":0.11213897810219,"6.2-6.4":0.050972262773723,"7.2-7.4":0.20388905109489,"8.2":0.99905635036496,"9.2":0.77477839416058},N:{"10":0,"11":0},J:{"7":0,"10":0.0112},S:{"2.5":0},R:{_:"0"},M:{"0":0.05824},O:{"0":0.22848},Q:{"1.2":0.01568},H:{"0":0.086948178694158},L:{"0":22.58192}};


/***/ }),
/* 395 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.011416,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005708,"23":0,"24":0,"25":0,"26":0.022832,"27":0,"28":0,"29":0,"30":0,"31":0.005708,"32":0,"33":0,"34":0.017124,"35":0,"36":0,"37":0,"38":0.022832,"39":0,"40":0.02854,"41":0,"42":0,"43":0,"44":0,"45":0.005708,"46":0,"47":0.011416,"48":0.005708,"49":0.296816,"50":0.005708,"51":0.005708,"52":0.005708,"53":0.011416,"54":0.022832,"55":0.062788,"56":0.074204,"57":0.08562,"58":0.022832,"59":0.022832,"60":0.011416,"61":2.043464,"62":0.11416,"63":0.59934,"64":0.165532,"65":0.154116,"66":0.1427,"67":0.1427,"68":0.234028,"69":0.279692,"70":0.331064,"71":0.479472,"72":1.187264,"73":14.601064,"74":0.017124,"75":0.005708,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005708,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.005708,"47":0.011416,"48":0.005708,"49":0,"50":0,"51":0,"52":0.039956,"53":0,"54":0,"55":0,"56":0.005708,"57":0.005708,"58":0,"59":0.005708,"60":0.017124,"61":0.017124,"62":0.005708,"63":0.011416,"64":0.017124,"65":0.068496,"66":1.221512,"67":0.039956,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.011416,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.017124,"57":0,"58":0.097036,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.017124,"9":0.005708,"10":0.034248,"11":0.125576,"12":1.164432,_:"0","3.1":0,"3.2":0,"5.1":0.005708,"6.1":0,"7.1":0,"9.1":0.074204,"10.1":0.159824,"11.1":0.302524,"12.1":0.690668},G:{"8":0.36313542119484,"3.2":0.023580222155509,"4.0-4.1":0.014148133293305,"4.2-4.3":0.0047160444311018,"5.0-5.1":0.047160444311018,"6.0-6.1":0.023580222155509,"7.0-7.1":0.084888799759832,"8.1-8.4":0.18392573281297,"9.0-9.2":0.10846902191534,"9.3":0.90076448634044,"10.0-10.2":0.49990070969679,"10.3":1.1931592410687,"11.0-11.2":1.4714058625038,"11.3-11.4":3.0229844803362,"12.0-12.1":18.251091948364,"12.2":20.934521229661},I:{"3":0.00086586290322581,"4":0.12468425806452,_:"67","2.1":0.0060610403225806,"2.2":0.01039035483871,"2.3":0.0060610403225806,"4.1":0.062342129032258,"4.2-4.3":0.27014922580645,"4.4":0,"4.4.3-4.4.4":0.37838208870968},A:{"6":0,"7":0,"8":0.069111971223022,"9":0.069111971223022,"10":0.10680941007194,"11":1.501614647482,"5.5":0},B:{"12":0.005708,"13":0.005708,"14":0,"15":0.022832,"16":0.119868,"17":0.679252,"18":0.176948},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.30117105494506,"5.0-5.4":0.011154483516484,"6.2-6.4":0.044617934065934,"7.2-7.4":0.1338538021978,"8.2":0.70273246153846,"9.2":0.83658626373626},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.154512},O:{"0":0.40774},Q:{"1.2":0.253228},H:{"0":0.081267766323024},L:{"0":19.060816}};


/***/ }),
/* 396 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.407745,"50":0,"51":0,"52":0,"53":0.33579,"54":0,"55":0,"56":0,"57":0,"58":0.01599,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.01599,"65":0.01599,"66":0,"67":0,"68":0.023985,"69":0.06396,"70":0,"71":0.471705,"72":1.367145,"73":29.32566,"74":0,"75":0.01599,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.007995,"47":0.20787,"48":0.007995,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0.007995,"65":0.12792,"66":1.559025,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.07995,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007995,"12":12.528165,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.007995,"10.1":0.06396,"11.1":5.108805,"12.1":3.10206},G:{"8":0.12675176273391,"3.2":0.0082306339437606,"4.0-4.1":0.0049383803662564,"4.2-4.3":0.0016461267887521,"5.0-5.1":0.016461267887521,"6.0-6.1":0.0082306339437606,"7.0-7.1":0.029630282197538,"8.1-8.4":0.064198944761333,"9.0-9.2":0.037860916141299,"9.3":0.31441021665166,"10.0-10.2":0.17448943960773,"10.3":0.41647007755429,"11.0-11.2":0.51359155809066,"11.3-11.4":1.0551672715901,"12.0-12.1":6.3705106724707,"12.2":7.3071568152707},I:{"3":0.00071729334677419,"4":0.10329024193548,_:"67","2.1":0.0050210534274194,"2.2":0.0086075201612903,"2.3":0.0050210534274194,"4.1":0.051645120967742,"4.2-4.3":0.22379552419355,"4.4":0,"4.4.3-4.4.4":0.31345719254032},A:{"6":0,"7":0,"8":0,"9":0.0080423076923077,"10":0,"11":1.3511076923077,"5.5":0},B:{"12":0.007995,"13":0,"14":0,"15":0,"16":0,"17":1.015365,"18":0.19188},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.21174299065421,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.01058714953271,"8.2":0.8257976635514,"9.2":1.2175221962617},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0.058145},Q:{"1.2":0.046115},H:{"0":0.055047929553265},L:{"0":21.05366}};


/***/ }),
/* 397 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01162,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.00581,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.00581,"32":0,"33":0,"34":0.01162,"35":0,"36":0,"37":0,"38":0.08715,"39":0.02905,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.01743,"47":0.01162,"48":0,"49":0.30793,"50":0,"51":0,"52":0,"53":0.01743,"54":0.01162,"55":0,"56":0.00581,"57":0,"58":0.01162,"59":0,"60":0,"61":0,"62":0.00581,"63":0.16849,"64":0.01743,"65":0.02905,"66":0.00581,"67":0.05229,"68":0.03486,"69":0.07553,"70":0.26145,"71":0.09877,"72":1.07485,"73":16.76766,"74":0.03486,"75":0.03486,_:"76"},C:{"2":0,"3":0,"4":0.00581,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.00581,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00581,"35":0,"36":0,"37":0,"38":0.00581,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.01162,"45":0,"46":0.18011,"47":0.00581,"48":0.24983,"49":0,"50":0.01743,"51":0.00581,"52":0.02324,"53":0,"54":0,"55":0,"56":0.01743,"57":0.00581,"58":0,"59":0.02324,"60":0.12201,"61":0.03486,"62":0,"63":0.01162,"64":0.02905,"65":0.48804,"66":2.71908,"67":0.01162,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.01743,"32":0,"33":0,"34":0,"35":0,"36":0.01162,"37":0,"38":0,"39":0,"40":0.04067,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.38927,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.00581,"6":0,"7":0.02324,"8":0.00581,"9":0.01743,"10":0.01743,"11":0.06972,"12":1.42926,_:"0","3.1":0,"3.2":0,"5.1":0.00581,"6.1":0,"7.1":0,"9.1":0.0581,"10.1":0.11039,"11.1":0.62748,"12.1":1.08647},G:{"8":0.10883067347143,"3.2":0.0070669268487942,"4.0-4.1":0.0042401561092765,"4.2-4.3":0.0014133853697588,"5.0-5.1":0.014133853697588,"6.0-6.1":0.0070669268487942,"7.0-7.1":0.025440936655659,"8.1-8.4":0.055122029420594,"9.0-9.2":0.032507863504453,"9.3":0.26995660562394,"10.0-10.2":0.14981884919444,"10.3":0.35758649854898,"11.0-11.2":0.44097623536476,"11.3-11.4":0.90598002201541,"12.0-12.1":5.4698013809667,"12.2":6.2740176563595},I:{"3":0.0014159677419355,"4":0.20389935483871,_:"67","2.1":0.0099117741935484,"2.2":0.016991612903226,"2.3":0.0099117741935484,"4.1":0.10194967741935,"4.2-4.3":0.44178193548387,"4.4":0,"4.4.3-4.4.4":0.61877790322581},A:{"6":0,"7":0,"8":0.01162,"9":0.00581,"10":0.00581,"11":0.89474,"5.5":0},B:{"12":0.01743,"13":0.04067,"14":0.03486,"15":0.07553,"16":0.19754,"17":2.38791,"18":0.31955},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.69439922945205,"5.0-5.4":0.085464520547945,"6.2-6.4":0.12819678082192,"7.2-7.4":0.36322421232877,"8.2":2.8416953082192,"9.2":2.1259299486301},N:{"10":0,"11":0.01676},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.1257},O:{"0":0.01257},Q:{"1.2":0.02514},H:{"0":0.13487192439863},L:{"0":42.20992}};


/***/ }),
/* 398 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.002393,"10":0,"11":0,"12":0,"13":0,"14":0.002393,"15":0,"16":0,"17":0.002393,"18":0,"19":0,"20":0,"21":0,"22":0.021537,"23":0.002393,"24":0,"25":0.002393,"26":0.002393,"27":0.004786,"28":0,"29":0.009572,"30":0,"31":0,"32":0,"33":0.011965,"34":0.002393,"35":0,"36":0,"37":0,"38":0.002393,"39":0.002393,"40":0.014358,"41":0,"42":0,"43":0.064611,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.076576,"50":0.007179,"51":0,"52":0,"53":0,"54":0.002393,"55":0.011965,"56":0.002393,"57":0,"58":0.011965,"59":0,"60":0,"61":0,"62":0.002393,"63":0.02393,"64":0.004786,"65":0.064611,"66":0.011965,"67":0.009572,"68":0.007179,"69":0.02393,"70":0.021537,"71":0.162724,"72":0.150759,"73":2.981678,"74":0.007179,"75":0,_:"76"},C:{"2":0,"3":0.021537,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007179,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.007179,"23":0,"24":0,"25":0.002393,"26":0,"27":0,"28":0,"29":0.002393,"30":0.002393,"31":0,"32":0.002393,"33":0,"34":0.002393,"35":0,"36":0.007179,"37":0.002393,"38":0,"39":0,"40":0,"41":0.002393,"42":0,"43":0.009572,"44":0,"45":0.007179,"46":0,"47":0.02393,"48":0.009572,"49":0.002393,"50":0,"51":0,"52":0.052646,"53":0,"54":0,"55":0,"56":0.052646,"57":0,"58":0,"59":0,"60":0.007179,"61":0,"62":0.009572,"63":0,"64":0.011965,"65":0.086148,"66":0.504923,"67":0.004786,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.004786,"17":0,"18":0,"19":0.002393,"20":0.002393,"21":0,"22":0,"23":0.002393,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.002393,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.004786,"37":0,"38":0,"39":0,"40":0,"41":0.002393,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.002393,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.102899,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.021537},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.014358,"11":0.004786,"12":0.04786,_:"0","3.1":0,"3.2":0,"5.1":0.014358,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0.019144,"12.1":0.038288},G:{"8":0.050501358851196,"3.2":0.0032793090163114,"4.0-4.1":0.0019675854097869,"4.2-4.3":0.00065586180326228,"5.0-5.1":0.0065586180326228,"6.0-6.1":0.0032793090163114,"7.0-7.1":0.011805512458721,"8.1-8.4":0.025578610327229,"9.0-9.2":0.015084821475033,"9.3":0.1252696044231,"10.0-10.2":0.069521351145802,"10.3":0.16593303622536,"11.0-11.2":0.20462888261783,"11.3-11.4":0.42040741589112,"12.0-12.1":2.538185178625,"12.2":2.9113705446813},I:{"3":0.0035800997983871,"4":0.51553437096774,_:"67","2.1":0.02506069858871,"2.2":0.042961197580645,"2.3":0.02506069858871,"4.1":0.25776718548387,"4.2-4.3":1.1169911370968,"4.4":0,"4.4.3-4.4.4":1.5645036118952},A:{"6":0,"7":0,"8":0.08869190990991,"9":0.010434342342342,"10":0.062606054054054,"11":0.12782069369369,"5.5":0},B:{"12":0.004786,"13":0.007179,"14":0.021537,"15":0.009572,"16":0.004786,"17":0.093327,"18":0.014358},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.5030639160584,"5.0-5.4":0.1424507919708,"6.2-6.4":0.24420135766423,"7.2-7.4":0.60032833759124,"8.2":1.5873088248175,"9.2":0.49857777189781},N:{"10":0,"11":0.053249},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.273852},O:{"0":1.376867},Q:{"1.2":0.015214},H:{"0":2.8519191958763},L:{"0":71.74439}};


/***/ }),
/* 399 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.098501,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.068193,"63":0,"64":0,"65":0.068193,"66":0,"67":0,"68":0.098501,"69":0,"70":0,"71":0,"72":1.750287,"73":25.807262,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.068193,"49":0,"50":0,"51":0,"52":0.068193,"53":0,"54":0.045462,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.068193,"66":15.502542,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.636468,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.045462,"12":0.310657,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.068193,"10.1":0.022731,"11.1":0.022731,"12.1":2.704989},G:{"8":0.053843781447013,"3.2":0.0034963494446112,"4.0-4.1":0.0020978096667667,"4.2-4.3":0.00069926988892225,"5.0-5.1":0.0069926988892225,"6.0-6.1":0.0034963494446112,"7.0-7.1":0.0125868580006,"8.1-8.4":0.027271525667968,"9.0-9.2":0.016083207445212,"9.3":0.13356054878415,"10.0-10.2":0.074122608225758,"10.3":0.17691528189733,"11.0-11.2":0.21817220534374,"11.3-11.4":0.44823199879916,"12.0-12.1":2.7061744701291,"12.2":3.1040590369258},I:{"3":0.0019553548387097,"4":0.28157109677419,_:"67","2.1":0.013687483870968,"2.2":0.023464258064516,"2.3":0.013687483870968,"4.1":0.1407855483871,"4.2-4.3":0.61007070967742,"4.4":0,"4.4.3-4.4.4":0.85449006451613},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":1.59117,"5.5":0},B:{"12":0,"13":0.424312,"14":0.121232,"15":0,"16":0.401581,"17":1.871519,"18":0.143963},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.032524795620438,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0.097574386861314,"9.2":1.3551998175182},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.067844},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":36.450033}};


/***/ }),
/* 400 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.013662,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.040986,"37":0,"38":0.013662,"39":0.006831,"40":0,"41":0,"42":0,"43":0.006831,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.430353,"50":0,"51":0,"52":0,"53":0,"54":0.006831,"55":0,"56":0.027324,"57":0.006831,"58":0.013662,"59":0,"60":0.027324,"61":0.239085,"62":0.020493,"63":0.06831,"64":0.109296,"65":0.027324,"66":0.020493,"67":0.122958,"68":0.06831,"69":0.129789,"70":0.061479,"71":0.225423,"72":1.625778,"73":27.064422,"74":0.061479,"75":0.027324,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.020493,"48":0.020493,"49":0,"50":0.006831,"51":0,"52":0.034155,"53":0,"54":0,"55":0,"56":0.13662,"57":0,"58":0,"59":0,"60":0.013662,"61":0.006831,"62":0.006831,"63":0.020493,"64":0.020493,"65":0.157113,"66":1.796553,"67":0.013662,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006831,"37":0,"38":0,"39":0,"40":0.006831,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.020493,"50":0.013662,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.485001,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.006831,"8":0.034155,"9":0,"10":0.020493,"11":0.075141,"12":1.393524,_:"0","3.1":0,"3.2":0,"5.1":0.006831,"6.1":0,"7.1":0,"9.1":0.054648,"10.1":0.081972,"11.1":0.177606,"12.1":0.874368},G:{"8":0.10834041779245,"3.2":0.0070350920644451,"4.0-4.1":0.0042210552386671,"4.2-4.3":0.001407018412889,"5.0-5.1":0.01407018412889,"6.0-6.1":0.0070350920644451,"7.0-7.1":0.025326331432002,"8.1-8.4":0.054873718102672,"9.0-9.2":0.032361423496448,"9.3":0.2687405168618,"10.0-10.2":0.14914395176624,"10.3":0.35597565846092,"11.0-11.2":0.43898974482138,"11.3-11.4":0.90189880266186,"12.0-12.1":5.4451612578805,"12.2":6.2457547348144},I:{"3":0.00069996572580645,"4":0.10079506451613,_:"67","2.1":0.0048997600806452,"2.2":0.0083995887096774,"2.3":0.0048997600806452,"4.1":0.050397532258065,"4.2-4.3":0.21838930645161,"4.4":0,"4.4.3-4.4.4":0.30588502217742},A:{"6":0,"7":0,"8":0.0068691620111732,"9":0.013738324022346,"10":0.0068691620111732,"11":1.2021033519553,"5.5":0},B:{"12":0,"13":0.020493,"14":0.027324,"15":0.095634,"16":0.06831,"17":1.618947,"18":0.34155},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.21027943925234,"5.0-5.4":0,"6.2-6.4":0.052569859813084,"7.2-7.4":0.11565369158879,"8.2":1.345788411215,"9.2":1.6506935981308},N:{"10":0,"11":0.028521},J:{"7":0,"10":0.003169},S:{"2.5":0},R:{_:"0"},M:{"0":0.152112},O:{"0":0.183802},Q:{"1.2":0.012676},H:{"0":0.11400776975945},L:{"0":34.669516}};


/***/ }),
/* 401 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005926,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.005926,"22":0.011852,"23":0,"24":0,"25":0,"26":0.047408,"27":0.005926,"28":0,"29":0,"30":0,"31":0.011852,"32":0,"33":0,"34":0.011852,"35":0,"36":0.005926,"37":0,"38":0.017778,"39":0.035556,"40":0.011852,"41":0,"42":0.005926,"43":0.02963,"44":0.017778,"45":0,"46":0.005926,"47":0.005926,"48":0.005926,"49":0.604452,"50":0.023704,"51":0.005926,"52":0.005926,"53":0.071112,"54":0.005926,"55":0.011852,"56":0.011852,"57":0.005926,"58":0.017778,"59":0.023704,"60":0.005926,"61":0.005926,"62":0.005926,"63":0.05926,"64":0.047408,"65":0.171854,"66":0.023704,"67":0.077038,"68":0.065186,"69":0.077038,"70":0.106668,"71":0.165928,"72":0.722972,"73":21.973608,"74":0.05926,"75":0.017778,_:"76"},C:{"2":0,"3":0,"4":0.011852,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.005926,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.005926,"40":0.005926,"41":0,"42":0.005926,"43":0.011852,"44":0,"45":0.005926,"46":0,"47":0.005926,"48":0.094816,"49":0.005926,"50":0,"51":0.011852,"52":0.077038,"53":0.005926,"54":0.005926,"55":0.005926,"56":0.017778,"57":0.02963,"58":0.011852,"59":0.005926,"60":0.130372,"61":0.005926,"62":0.065186,"63":0.017778,"64":0.017778,"65":0.154076,"66":2.542254,"67":0.112594,"68":0,"3.5":0,"3.6":0.005926},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005926,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.005926,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.011852,"37":0.005926,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.017778,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.634082,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005926},E:{"4":0,"5":0,"6":0,"7":0,"8":0.094816,"9":0,"10":0.011852,"11":0.106668,"12":1.131866,_:"0","3.1":0,"3.2":0,"5.1":0.02963,"6.1":0.011852,"7.1":0.005926,"9.1":0.100742,"10.1":0.154076,"11.1":0.361486,"12.1":0.77038},G:{"8":0.055121905934154,"3.2":0.0035793445411788,"4.0-4.1":0.0021476067247073,"4.2-4.3":0.00071586890823577,"5.0-5.1":0.0071586890823577,"6.0-6.1":0.0035793445411788,"7.0-7.1":0.012885640348244,"8.1-8.4":0.027918887421195,"9.0-9.2":0.016464984889423,"9.3":0.13673096147303,"10.0-10.2":0.075882104272991,"10.3":0.18111483378365,"11.0-11.2":0.22335109936956,"11.3-11.4":0.45887197017913,"12.0-12.1":2.7704126748724,"12.2":3.1777420836586},I:{"3":0.00091098790322581,"4":0.13118225806452,_:"67","2.1":0.0063769153225806,"2.2":0.01093185483871,"2.3":0.0063769153225806,"4.1":0.065591129032258,"4.2-4.3":0.28422822580645,"4.4":0,"4.4.3-4.4.4":0.39810171370968},A:{"6":0,"7":0,"8":0.035556,"9":0.023704,"10":0.017778,"11":0.604452,"5.5":0},B:{"12":0.017778,"13":0.023704,"14":0.023704,"15":0.041482,"16":0.05926,"17":0.82964,"18":0.189632},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.73047115217391,"5.0-5.4":0.061729956521739,"6.2-6.4":0.14403656521739,"7.2-7.4":0.37037973913043,"8.2":2.119395173913,"9.2":2.2531434130435},N:{"10":0.0114072,"11":0.1026648},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.109998},O:{"0":1.48701},Q:{"1.2":0.028518},H:{"0":1.407805},L:{"0":44.20119}};


/***/ }),
/* 402 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.004246,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.004246,"31":0.016984,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.004246,"47":0.004246,"48":0,"49":0.186824,"50":0.016984,"51":0.004246,"52":0.008492,"53":0.008492,"54":0.008492,"55":0.012738,"56":0.008492,"57":0.004246,"58":0.12738,"59":0.012738,"60":0.004246,"61":0.089166,"62":0,"63":0.06369,"64":0.046706,"65":0.161348,"66":0.008492,"67":0.025476,"68":0.004246,"69":0.046706,"70":0.04246,"71":0.123134,"72":0.568964,"73":12.474748,"74":0.029722,"75":0.012738,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.008492,"45":0.004246,"46":0,"47":0.004246,"48":0.004246,"49":0.004246,"50":0.004246,"51":0.004246,"52":0.016984,"53":0.004246,"54":0,"55":0.008492,"56":0.012738,"57":0.02123,"58":0.008492,"59":0.008492,"60":0.012738,"61":0.016984,"62":0.025476,"63":0.04246,"64":0.012738,"65":0.152856,"66":1.031778,"67":0.123134,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.038214,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.004246,"52":0,"53":0,"54":0,"55":0,"56":0.008492,"57":0,"58":0.157102,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.004246},E:{"4":0,"5":0,"6":0,"7":0,"8":0.004246,"9":0,"10":0.04246,"11":0.008492,"12":0.27599,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.004246,"10.1":0.008492,"11.1":0.050952,"12.1":0.16984},G:{"8":0.13855076253377,"3.2":0.0089968027619334,"4.0-4.1":0.00539808165716,"4.2-4.3":0.0017993605523867,"5.0-5.1":0.017993605523867,"6.0-6.1":0.0089968027619334,"7.0-7.1":0.03238848994296,"8.1-8.4":0.07017506154308,"9.0-9.2":0.041385292704893,"9.3":0.34367786550585,"10.0-10.2":0.19073221855299,"10.3":0.45523821975383,"11.0-11.2":0.56140049234464,"11.3-11.4":1.1533901140799,"12.0-12.1":6.9635253377364,"12.2":7.9873614920444},I:{"3":0.00041634677419355,"4":0.059953935483871,_:"67","2.1":0.0029144274193548,"2.2":0.0049961612903226,"2.3":0.0029144274193548,"4.1":0.029976967741935,"4.2-4.3":0.12990019354839,"4.4":0,"4.4.3-4.4.4":0.18194354032258},A:{"6":0,"7":0,"8":0.008492,"9":0.008492,"10":0.004246,"11":0.161348,"5.5":0},B:{"12":0.008492,"13":0.008492,"14":0.016984,"15":0.025476,"16":0.059444,"17":0.271744,"18":0.080674},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.52247233333333,"5.0-5.4":0.071711888888889,"6.2-6.4":0.071711888888889,"7.2-7.4":0.50198322222222,"8.2":1.659618,"9.2":1.0449446666667},N:{"10":0,"11":0.034524},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.379764},O:{"0":2.025408},Q:{"1.2":0.017262},H:{"0":0.79533725773196},L:{"0":54.262632}};


/***/ }),
/* 403 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.012987,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.034632,"21":0,"22":0,"23":0,"24":0,"25":0.004329,"26":0,"27":0,"28":0.004329,"29":0,"30":0,"31":0.004329,"32":0,"33":0.004329,"34":0,"35":0.004329,"36":0,"37":0,"38":0,"39":0.004329,"40":0.012987,"41":0,"42":0.008658,"43":0.017316,"44":0.004329,"45":0.004329,"46":0.021645,"47":0.004329,"48":0.004329,"49":0.047619,"50":0.017316,"51":0.012987,"52":0.012987,"53":0.012987,"54":0.004329,"55":0.038961,"56":0.004329,"57":0.004329,"58":0.021645,"59":0.004329,"60":0.021645,"61":0.004329,"62":0.008658,"63":0.047619,"64":0.056277,"65":0.038961,"66":0.025974,"67":0.095238,"68":0.025974,"69":0.151515,"70":0.134199,"71":0.082251,"72":0.415584,"73":6.999993,"74":0.008658,"75":0.008658,_:"76"},C:{"2":0,"3":0.004329,"4":0,"5":0,"6":0.004329,"7":0,"8":0,"9":0,"10":0,"11":0.004329,"12":0.004329,"13":0,"14":0.004329,"15":0.004329,"16":0,"17":0,"18":0.008658,"19":0.004329,"20":0,"21":0.004329,"22":0,"23":0.004329,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.004329,"32":0,"33":0,"34":0.004329,"35":0.004329,"36":0,"37":0,"38":0,"39":0.017316,"40":0,"41":0.004329,"42":0.017316,"43":0.017316,"44":0.017316,"45":0.012987,"46":0.012987,"47":0.034632,"48":0.051948,"49":0.021645,"50":0.004329,"51":0.004329,"52":0.082251,"53":0.008658,"54":0.017316,"55":0.004329,"56":0.077922,"57":0.069264,"58":0.021645,"59":0.008658,"60":0.069264,"61":0.069264,"62":0.017316,"63":0.017316,"64":0.034632,"65":0.571428,"66":2.376621,"67":0.21645,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.004329,"15":0,"16":0.004329,"17":0,"18":0.004329,"19":0,"20":0.017316,"21":0.004329,"22":0,"23":0.004329,"24":0,"25":0,"26":0,"27":0.004329,"28":0.030303,"29":0.012987,"30":0.004329,"31":0,"32":0.004329,"33":0.004329,"34":0.04329,"35":0.160173,"36":0.008658,"37":0.056277,"38":0.008658,"39":0,"40":0,"41":0,"42":0.017316,"43":0,"44":0.004329,"45":0.008658,"46":0.021645,"47":0,"48":0,"49":0.004329,"50":0,"51":0.04329,"52":0.004329,"53":0.004329,"54":0.004329,"55":0,"56":0.008658,"57":0.017316,"58":0.861471,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0.004329,"11.1":0,"11.5":0,"11.6":0,"12.1":0.155844},E:{"4":0,"5":0,"6":0,"7":0.004329,"8":0.004329,"9":0,"10":0.017316,"11":0.099567,"12":0.151515,_:"0","3.1":0,"3.2":0,"5.1":0.675324,"6.1":0,"7.1":0.004329,"9.1":0.008658,"10.1":0.008658,"11.1":0.038961,"12.1":0.177489},G:{"8":0.02755495817072,"3.2":0.0017892829980987,"4.0-4.1":0.0010735697988592,"4.2-4.3":0.00035785659961973,"5.0-5.1":0.0035785659961973,"6.0-6.1":0.0017892829980987,"7.0-7.1":0.0064414187931552,"8.1-8.4":0.01395640738517,"9.0-9.2":0.0082307017912539,"9.3":0.068350610527369,"10.0-10.2":0.037932799559692,"10.3":0.090537719703793,"11.0-11.2":0.11165125908136,"11.3-11.4":0.22938608035625,"12.0-12.1":1.3849050405284,"12.2":1.588525445712},I:{"3":0.0011822721774194,"4":0.17024719354839,_:"67","2.1":0.0082759052419355,"2.2":0.014187266129032,"2.3":0.0082759052419355,"4.1":0.085123596774194,"4.2-4.3":0.36886891935484,"4.4":0,"4.4.3-4.4.4":0.51665294153226},A:{"6":0,"7":0,"8":0.064935,"9":0.017316,"10":0.051948,"11":0.593073,"5.5":0},B:{"12":0.411255,"13":0.069264,"14":0.08658,"15":0.103896,"16":0.17316,"17":0.610389,"18":0.151515},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.4074630697674,"5.0-5.4":0.081592062015504,"6.2-6.4":0.091791069767442,"7.2-7.4":0.56094542635659,"8.2":1.3360700155039,"9.2":0.46915435658915},N:{"10":0.065808527472527,"11":0.93228747252747},J:{"7":0,"10":0.141775},S:{"2.5":0},R:{_:"0"},M:{"0":0.232511},O:{"0":7.077408},Q:{"1.2":0.124762},H:{"0":12.794175503436},L:{"0":39.899792}};


/***/ }),
/* 404 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.006706,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.013412,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.020118,"30":0,"31":0,"32":0,"33":0,"34":0.006706,"35":0,"36":0.006706,"37":0,"38":0.020118,"39":0,"40":0,"41":0.006706,"42":0,"43":0.006706,"44":0.006706,"45":0,"46":0.006706,"47":0.006706,"48":0.006706,"49":0.516362,"50":0.006706,"51":0.013412,"52":0.006706,"53":0.006706,"54":0.006706,"55":0.013412,"56":0.013412,"57":0.013412,"58":0.053648,"59":0.013412,"60":0.013412,"61":0.107296,"62":0.026824,"63":0.06706,"64":0.03353,"65":0.087178,"66":0.046942,"67":0.194474,"68":0.073766,"69":0.093884,"70":0.13412,"71":0.23471,"72":1.046136,"73":28.983332,"74":0.026824,"75":0.013412,_:"76"},C:{"2":0,"3":0,"4":0.140826,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006706,"44":0,"45":0.006706,"46":0,"47":0.013412,"48":0.053648,"49":0,"50":0.006706,"51":0.006706,"52":0.06706,"53":0.006706,"54":0.006706,"55":0,"56":0.006706,"57":0.013412,"58":0.006706,"59":0.006706,"60":0.03353,"61":0.013412,"62":0.013412,"63":0.013412,"64":0.03353,"65":0.13412,"66":2.239804,"67":0.020118,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.697424,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006706},E:{"4":0,"5":0,"6":0,"7":0.006706,"8":0.154238,"9":0.060354,"10":0.046942,"11":0.114002,"12":1.528968,_:"0","3.1":0,"3.2":0,"5.1":0.90531,"6.1":0.013412,"7.1":0,"9.1":0.080472,"10.1":0.23471,"11.1":0.388948,"12.1":0.898604},G:{"8":0.076204587611328,"3.2":0.0049483498448914,"4.0-4.1":0.0029690099069349,"4.2-4.3":0.00098966996897829,"5.0-5.1":0.0098966996897828,"6.0-6.1":0.0049483498448914,"7.0-7.1":0.017814059441609,"8.1-8.4":0.038597128790153,"9.0-9.2":0.022762409286501,"9.3":0.18902696407485,"10.0-10.2":0.1049050167117,"10.3":0.25038650215151,"11.0-11.2":0.30877703032122,"11.3-11.4":0.63437845011508,"12.0-12.1":3.830022779946,"12.2":4.3931449922946},I:{"3":0.00052288508064516,"4":0.075295451612903,_:"67","2.1":0.0036601955645161,"2.2":0.0062746209677419,"2.3":0.0036601955645161,"4.1":0.037647725806452,"4.2-4.3":0.16314014516129,"4.4":0,"4.4.3-4.4.4":0.22850078024194},A:{"6":0,"7":0,"8":0.040515416666667,"9":0.027010277777778,"10":0.033762847222222,"11":0.87108145833333,"5.5":0},B:{"12":0.013412,"13":0.026824,"14":0.03353,"15":0.053648,"16":0.073766,"17":1.066254,"18":0.254828},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.25226202531646,"5.0-5.4":0.020180962025316,"6.2-6.4":0.040361924050633,"7.2-7.4":0.080723848101266,"8.2":0.56506693670886,"9.2":0.63570030379747},N:{"10":0,"11":0.092232},J:{"7":0,"10":0.006588},S:{"2.5":0},R:{_:"0"},M:{"0":0.079056},O:{"0":0.075762},Q:{"1.2":0},H:{"0":0.25572080412371},L:{"0":43.312714}};


/***/ }),
/* 405 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005807,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005807,"23":0,"24":0,"25":0,"26":0.005807,"27":0,"28":0,"29":0,"30":0.005807,"31":0.005807,"32":0.005807,"33":0.011614,"34":0.005807,"35":0,"36":0.005807,"37":0.005807,"38":0.029035,"39":0.005807,"40":0,"41":0,"42":0,"43":0.005807,"44":0.029035,"45":0,"46":0.011614,"47":0.005807,"48":0.005807,"49":0.836208,"50":0.011614,"51":0.017421,"52":0.005807,"53":0.029035,"54":0.005807,"55":0.017421,"56":0.023228,"57":0.017421,"58":0.075491,"59":0.011614,"60":0.017421,"61":0.127754,"62":0.052263,"63":0.092912,"64":0.034842,"65":0.110333,"66":0.063877,"67":0.162596,"68":0.127754,"69":0.185824,"70":0.17421,"71":0.238087,"72":0.894278,"73":22.391792,"74":0.052263,"75":0.05807,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005807,"35":0,"36":0,"37":0.005807,"38":0.005807,"39":0.005807,"40":0,"41":0,"42":0,"43":0.005807,"44":0,"45":0.005807,"46":0,"47":0.017421,"48":0.05807,"49":0.005807,"50":0.005807,"51":0.005807,"52":0.110333,"53":0.005807,"54":0.005807,"55":0.005807,"56":0.017421,"57":0.011614,"58":0.005807,"59":0.005807,"60":0.023228,"61":0.011614,"62":0.011614,"63":0.017421,"64":0.034842,"65":0.121947,"66":1.85824,"67":0.098719,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.005807,"37":0.145175,"38":0.005807,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.005807,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.284543,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005807},E:{"4":0,"5":0,"6":0,"7":0.011614,"8":0.023228,"9":0.011614,"10":0.023228,"11":0.05807,"12":0.603928,_:"0","3.1":0,"3.2":0,"5.1":0.272929,"6.1":0.011614,"7.1":0,"9.1":0.034842,"10.1":0.11614,"11.1":0.203245,"12.1":0.336806},G:{"8":0.11243598869208,"3.2":0.0073010382267587,"4.0-4.1":0.0043806229360552,"4.2-4.3":0.0014602076453517,"5.0-5.1":0.014602076453517,"6.0-6.1":0.0073010382267587,"7.0-7.1":0.026283737616331,"8.1-8.4":0.056948098168718,"9.0-9.2":0.03358477584309,"9.3":0.27889966026218,"10.0-10.2":0.15478201040729,"10.3":0.36943253427399,"11.0-11.2":0.45558478534974,"11.3-11.4":0.93599310067047,"12.0-12.1":5.6510035875113,"12.2":6.4818617377164},I:{"3":0.00066367842741935,"4":0.095569693548387,_:"67","2.1":0.0046457489919355,"2.2":0.0079641411290323,"2.3":0.0046457489919355,"4.1":0.047784846774194,"4.2-4.3":0.20706766935484,"4.4":0,"4.4.3-4.4.4":0.29002747278226},A:{"6":0,"7":0,"8":0.047340876190476,"9":0.023670438095238,"10":0.017752828571429,"11":0.53258485714286,"5.5":0},B:{"12":0,"13":0.005807,"14":0.005807,"15":0.011614,"16":0.029035,"17":0.40649,"18":0.092912},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.58398368965517,"5.0-5.4":0.052141400862069,"6.2-6.4":0.08342624137931,"7.2-7.4":0.19813732327586,"8.2":0.82383413362069,"9.2":0.6778382112069},N:{"10":0,"11":0.016772},J:{"7":0,"10":0.004193},S:{"2.5":0},R:{_:"0"},M:{"0":0.121597},O:{"0":1.769446},Q:{"1.2":0.016772},H:{"0":1.3298366065292},L:{"0":43.755296}};


/***/ }),
/* 406 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003097,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.012388,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.024776,"34":0,"35":0,"36":0.027873,"37":0,"38":0.003097,"39":0,"40":0.043358,"41":0,"42":0.003097,"43":0.136268,"44":0.003097,"45":0,"46":0.006194,"47":0.003097,"48":0.003097,"49":0.040261,"50":0.003097,"51":0.003097,"52":0,"53":0.009291,"54":0,"55":0.052649,"56":0.003097,"57":0.009291,"58":0.015485,"59":0.003097,"60":0.012388,"61":0.003097,"62":0.006194,"63":0.080522,"64":0.003097,"65":0.071231,"66":0.012388,"67":0.034067,"68":0.018582,"69":0.040261,"70":0.040261,"71":0.055746,"72":0.219887,"73":4.391546,"74":0.018582,"75":0.018582,_:"76"},C:{"2":0,"3":0.003097,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.003097,"31":0.003097,"32":0,"33":0,"34":0,"35":0,"36":0.003097,"37":0,"38":0,"39":0,"40":0,"41":0.003097,"42":0.003097,"43":0.009291,"44":0.003097,"45":0.006194,"46":0,"47":0.015485,"48":0.006194,"49":0,"50":0,"51":0,"52":0.024776,"53":0.003097,"54":0,"55":0.006194,"56":0.006194,"57":0.012388,"58":0.006194,"59":0.003097,"60":0.024776,"61":0.006194,"62":0.009291,"63":0.012388,"64":0.024776,"65":0.071231,"66":0.882645,"67":0.027873,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0.003097,"20":0.006194,"21":0.003097,"22":0.003097,"23":0.009291,"24":0,"25":0,"26":0.003097,"27":0,"28":0.003097,"29":0,"30":0.003097,"31":0,"32":0.006194,"33":0.003097,"34":0,"35":0.003097,"36":0.003097,"37":0.003097,"38":0.015485,"39":0,"40":0,"41":0,"42":0.003097,"43":0,"44":0,"45":0.009291,"46":0,"47":0,"48":0,"49":0.003097,"50":0,"51":0.009291,"52":0,"53":0,"54":0,"55":0,"56":0.003097,"57":0.003097,"58":0.693728,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.003097,"12.1":0.077425},E:{"4":0,"5":0.003097,"6":0,"7":0,"8":0.006194,"9":0.009291,"10":0.003097,"11":0.06194,"12":0.170335,_:"0","3.1":0,"3.2":0,"5.1":0.21679,"6.1":0,"7.1":0.003097,"9.1":0.006194,"10.1":0.006194,"11.1":0.037164,"12.1":0.049552},G:{"8":0.029413622435705,"3.2":0.001909975482838,"4.0-4.1":0.0011459852897028,"4.2-4.3":0.0003819950965676,"5.0-5.1":0.003819950965676,"6.0-6.1":0.001909975482838,"7.0-7.1":0.0068759117382168,"8.1-8.4":0.014897808766136,"9.0-9.2":0.0087858872210547,"9.3":0.072961063444411,"10.0-10.2":0.040491480236165,"10.3":0.096644759431602,"11.0-11.2":0.11918247012909,"11.3-11.4":0.24485885689983,"12.0-12.1":1.4783210237166,"12.2":1.6956762336636},I:{"3":0.0011729284274194,"4":0.16890169354839,_:"67","2.1":0.0082104989919355,"2.2":0.014075141129032,"2.3":0.0082104989919355,"4.1":0.084450846774194,"4.2-4.3":0.36595366935484,"4.4":0,"4.4.3-4.4.4":0.51256972278226},A:{"6":0,"7":0,"8":0.064168057553957,"9":0.0096252086330935,"10":0.025667223021583,"11":0.34650751079137,"5.5":0},B:{"12":0.03097,"13":0.021679,"14":0.018582,"15":0.018582,"16":0.037164,"17":0.192014,"18":0.065037},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.2912858,"5.0-5.4":0.102483,"6.2-6.4":0.0819864,"7.2-7.4":0.2152143,"8.2":0.6558912,"9.2":0.3176973},N:{"10":0.10916372093023,"11":0.36024027906977},J:{"7":0,"10":0.283023},S:{"2.5":0},R:{_:"0"},M:{"0":0.096642},O:{"0":1.387503},Q:{"1.2":0.048321},H:{"0":24.625064783505},L:{"0":42.859385}};


/***/ }),
/* 407 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005737,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.005737,"22":0,"23":0,"24":0,"25":0.005737,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.034422,"37":0.005737,"38":0.040159,"39":0.005737,"40":0.005737,"41":0,"42":0,"43":0.022948,"44":0.005737,"45":0,"46":0.005737,"47":0.045896,"48":0.011474,"49":0.109003,"50":0,"51":0,"52":0,"53":0.022948,"54":0,"55":0.005737,"56":0.017211,"57":0.040159,"58":0.063107,"59":0,"60":0.028685,"61":0.011474,"62":0.005737,"63":0.183584,"64":0.005737,"65":0.120477,"66":0.045896,"67":0.022948,"68":0.05737,"69":0.126214,"70":0.218006,"71":0.149162,"72":0.579437,"73":14.893252,"74":0.045896,"75":0.034422,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005737,"12":0.005737,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005737,"35":0,"36":0,"37":0,"38":0,"39":0.005737,"40":0,"41":0,"42":0,"43":0.034422,"44":0.017211,"45":0.005737,"46":0,"47":0.022948,"48":0.022948,"49":0.005737,"50":0.022948,"51":0.005737,"52":0.045896,"53":0,"54":0,"55":0,"56":0.011474,"57":0.011474,"58":0.137688,"59":0,"60":0.120477,"61":0.103266,"62":0.005737,"63":0.017211,"64":0.011474,"65":0.160636,"66":2.885711,"67":0.166373,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.005737,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.011474,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005737,"35":0,"36":0,"37":0,"38":0.005737,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.011474,"50":0,"51":0.011474,"52":0,"53":0,"54":0,"55":0,"56":0.005737,"57":0.005737,"58":1.526042,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.017211},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.5737,"10":0.017211,"11":0.045896,"12":0.636807,_:"0","3.1":0,"3.2":0,"5.1":0.080318,"6.1":0,"7.1":0,"9.1":0.028685,"10.1":0.022948,"11.1":0.160636,"12.1":0.390116},G:{"8":0.049755784949465,"3.2":0.0032308951265886,"4.0-4.1":0.0019385370759532,"4.2-4.3":0.00064617902531772,"5.0-5.1":0.0064617902531772,"6.0-6.1":0.0032308951265886,"7.0-7.1":0.011631222455719,"8.1-8.4":0.025200981987391,"9.0-9.2":0.014862117582308,"9.3":0.12342019383568,"10.0-10.2":0.068494976683679,"10.3":0.16348329340538,"11.0-11.2":0.20160785589913,"11.3-11.4":0.41420075522866,"12.0-12.1":2.5007128279796,"12.2":2.8683886933854},I:{"3":0.0015286885080645,"4":0.22013114516129,_:"67","2.1":0.010700819556452,"2.2":0.018344262096774,"2.3":0.010700819556452,"4.1":0.11006557258065,"4.2-4.3":0.47695081451613,"4.4":0,"4.4.3-4.4.4":0.66803687802419},A:{"6":0,"7":0,"8":0.057623849557522,"9":0.046099079646018,"10":0.046099079646018,"11":2.4547759911504,"5.5":0},B:{"12":0.091792,"13":0.091792,"14":0.074581,"15":0.103266,"16":0.195058,"17":1.944843,"18":0.298324},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.1687274439024,"5.0-5.4":0.020503990243902,"6.2-6.4":0.10251995121951,"7.2-7.4":0.34856783414634,"8.2":1.691579195122,"9.2":0.87141958536585},N:{"10":0.12207681818182,"11":0.14649218181818},J:{"7":0,"10":0.059682},S:{"2.5":0},R:{_:"0"},M:{"0":0.302673},O:{"0":0.818496},Q:{"1.2":0.017052},H:{"0":4.6130714072165},L:{"0":45.416787}};


/***/ }),
/* 408 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.014274,"23":0,"24":0,"25":0,"26":0.007137,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.007137,"35":0,"36":0.085644,"37":0,"38":0.064233,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.014274,"47":0,"48":0,"49":0.192699,"50":0,"51":0,"52":0,"53":0.192699,"54":0.007137,"55":0,"56":0.021411,"57":0.014274,"58":0.035685,"59":0,"60":0,"61":0,"62":0,"63":0.007137,"64":0.028548,"65":0.42822,"66":0,"67":0.385398,"68":0.014274,"69":0.021411,"70":0.035685,"71":0.064233,"72":0.799344,"73":21.725028,"74":0.007137,"75":0.149877,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.07137,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.007137,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.007137,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.007137,"40":0,"41":0.007137,"42":0,"43":0.014274,"44":0,"45":0.742248,"46":0.014274,"47":0.007137,"48":0.42822,"49":0,"50":0,"51":0.007137,"52":0.264069,"53":0.028548,"54":0,"55":0.007137,"56":0.007137,"57":0.014274,"58":0,"59":0.014274,"60":0.435357,"61":0.007137,"62":0.035685,"63":0.049959,"64":0.049959,"65":0.264069,"66":10.812555,"67":0.021411,"68":0,"3.5":0.007137,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.306891,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.028548,"5":0.049959,"6":0,"7":0,"8":0,"9":0.007137,"10":0.07137,"11":0.299754,"12":1.441674,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.021411,"7.1":0,"9.1":0.228384,"10.1":0.249795,"11.1":0.463905,"12.1":1.241838},G:{"8":0.12007775903132,"3.2":0.007797257079956,"4.0-4.1":0.0046783542479736,"4.2-4.3":0.0015594514159912,"5.0-5.1":0.015594514159912,"6.0-6.1":0.007797257079956,"7.0-7.1":0.028070125487841,"8.1-8.4":0.060818605223657,"9.0-9.2":0.035867382567797,"9.3":0.29785522045432,"10.0-10.2":0.16530185009507,"10.3":0.39454120824577,"11.0-11.2":0.48654884178925,"11.3-11.4":0.99960835765036,"12.0-12.1":6.0350769798859,"12.2":6.9224048355849},I:{"3":0.00099083064516129,"4":0.14267961290323,_:"67","2.1":0.006935814516129,"2.2":0.011889967741935,"2.3":0.006935814516129,"4.1":0.071339806451613,"4.2-4.3":0.30913916129032,"4.4":0,"4.4.3-4.4.4":0.43299299193548},A:{"6":0,"7":0,"8":0.028677763636364,"9":0.0071694409090909,"10":0,"11":1.5414297954545,"5.5":0},B:{"12":0.007137,"13":0.021411,"14":0.042822,"15":0.057096,"16":0.049959,"17":2.597868,"18":0.456768},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.95674118974359,"5.0-5.4":0.010872058974359,"6.2-6.4":0.065232353846154,"7.2-7.4":0.26092941538462,"8.2":1.4024956076923,"9.2":1.543832374359},N:{"10":0,"11":0.137424},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.157465},O:{"0":0.02863},Q:{"1.2":0},H:{"0":0.032526041237113},L:{"0":28.031409}};


/***/ }),
/* 409 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002114,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.002114,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.002114,"34":0,"35":0,"36":0,"37":0,"38":0.004228,"39":0,"40":0.029596,"41":0,"42":0,"43":0.023254,"44":0,"45":0.014798,"46":0,"47":0,"48":0.002114,"49":0.033824,"50":0.002114,"51":0,"52":0,"53":0.002114,"54":0,"55":0.04228,"56":0.008456,"57":0.004228,"58":0,"59":0,"60":0.002114,"61":0,"62":0.002114,"63":0.329784,"64":0,"65":0.012684,"66":0.004228,"67":0.050736,"68":0.008456,"69":0.061306,"70":0.006342,"71":0.01057,"72":0.194488,"73":1.18384,"74":0,"75":0,_:"76"},C:{"2":0,"3":0.004228,"4":0,"5":0,"6":0,"7":0,"8":0.006342,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.002114,"26":0,"27":0,"28":0,"29":0,"30":0.004228,"31":0,"32":0.01057,"33":0,"34":0,"35":0.002114,"36":0,"37":0,"38":0,"39":0,"40":0.006342,"41":0,"42":0.002114,"43":0.016912,"44":0.002114,"45":0.006342,"46":0,"47":0.019026,"48":0.029596,"49":0.002114,"50":0.002114,"51":0,"52":0.006342,"53":0,"54":0.004228,"55":0,"56":0.004228,"57":0.002114,"58":0,"59":0.004228,"60":0.008456,"61":0.004228,"62":0.008456,"63":0.006342,"64":0.014798,"65":0.048622,"66":0.610946,"67":0.038052,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0.004228,"17":0.002114,"18":0,"19":0.004228,"20":0.016912,"21":0,"22":0,"23":0.01057,"24":0,"25":0,"26":0,"27":0,"28":0.002114,"29":0,"30":0.008456,"31":0,"32":0.004228,"33":0.002114,"34":0,"35":0,"36":0.004228,"37":0.002114,"38":0.004228,"39":0.002114,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.008456,"57":0,"58":0.13741,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.038052},E:{"4":0,"5":0,"6":0,"7":0,"8":0.002114,"9":0,"10":0,"11":0.004228,"12":0.035938,_:"0","3.1":0,"3.2":0,"5.1":0.006342,"6.1":0,"7.1":0,"9.1":0.048622,"10.1":0,"11.1":0.012684,"12.1":0.002114},G:{"8":0.016453851295907,"3.2":0.0010684319023316,"4.0-4.1":0.00064105914139898,"4.2-4.3":0.00021368638046633,"5.0-5.1":0.0021368638046633,"6.0-6.1":0.0010684319023316,"7.0-7.1":0.0038463548483939,"8.1-8.4":0.0083337688381867,"9.0-9.2":0.0049147867507255,"9.3":0.040814098669068,"10.0-10.2":0.022650756329431,"10.3":0.054062654257981,"11.0-11.2":0.066670150705494,"11.3-11.4":0.13697296987892,"12.0-12.1":0.82696629240468,"12.2":0.94855384289002},I:{"3":0.0038146512096774,"4":0.54930977419355,_:"67","2.1":0.026702558467742,"2.2":0.045775814516129,"2.3":0.026702558467742,"4.1":0.27465488709677,"4.2-4.3":1.1901711774194,"4.4":0,"4.4.3-4.4.4":1.667002578629},A:{"6":0,"7":0,"8":0.028874146341463,"9":0,"10":0.008662243902439,"11":0.4359996097561,"5.5":0},B:{"12":0.014798,"13":0.008456,"14":0.004228,"15":0.006342,"16":0.016912,"17":0.145866,"18":0.054964},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.3605536036036,"5.0-5.4":0.030904594594595,"6.2-6.4":0.051507657657658,"7.2-7.4":0.18542756756757,"8.2":0.43266432432432,"9.2":0.082412252252252},N:{"10":0.075355111111111,"11":0.26374288888889},J:{"7":0,"10":0.031544},S:{"2.5":0},R:{_:"0"},M:{"0":0.110404},O:{"0":5.606946},Q:{"1.2":0.244466},H:{"0":12.736919786942},L:{"0":64.6875}};


/***/ }),
/* 410 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0.139984,"72":0,"73":48.898161,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.069992,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.209976,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":10.944999,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.559936,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":2.808429,"10.1":0,"11.1":0.34996,"12.1":0},G:{"8":0.12880630581407,"3.2":0.0083640458320825,"4.0-4.1":0.0050184274992495,"4.2-4.3":0.0016728091664165,"5.0-5.1":0.016728091664165,"6.0-6.1":0.0083640458320825,"7.0-7.1":0.030110564995497,"8.1-8.4":0.065239557490243,"9.0-9.2":0.038474610827579,"9.3":0.31950655078555,"10.0-10.2":0.17731777164015,"10.3":0.42322071910337,"11.0-11.2":0.52191645992195,"11.3-11.4":1.072270675673,"12.0-12.1":6.4737714740318,"12.2":7.4255998897228},I:{"3":0.00014111290322581,"4":0.020320258064516,_:"67","2.1":0.00098779032258065,"2.2":0.0016933548387097,"2.3":0.00098779032258065,"4.1":0.010160129032258,"4.2-4.3":0.044027225806452,"4.4":0,"4.4.3-4.4.4":0.061666338709677},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":4.068285,"5.5":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0.489944,"17":2.388477,"18":0.34996},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0.42731358778626,"9.2":3.7710424122137},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":3.93885}};


/***/ }),
/* 411 */
/***/ (function(module, exports) {

module.exports={D:{"4":0.002962,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002962,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.01481,"24":0.002962,"25":0,"26":0.002962,"27":0.002962,"28":0,"29":0.020734,"30":0.002962,"31":0.002962,"32":0,"33":0.002962,"34":0.002962,"35":0,"36":0,"37":0.002962,"38":0,"39":0,"40":0.01481,"41":0,"42":0,"43":0.002962,"44":0,"45":0,"46":0,"47":0.032582,"48":0,"49":0.047392,"50":0.005924,"51":0.002962,"52":0,"53":0.002962,"54":0.002962,"55":0.011848,"56":0.005924,"57":0.002962,"58":0.032582,"59":0.002962,"60":0.005924,"61":0.01481,"62":0.020734,"63":0.071088,"64":0.026658,"65":0.065164,"66":0.017772,"67":0.023696,"68":0.020734,"69":0.056278,"70":0.05924,"71":0.07405,"72":0.284352,"73":3.975004,"74":0.020734,"75":0.01481,_:"76"},C:{"2":0,"3":0.002962,"4":0.002962,"5":0.002962,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002962,"12":0,"13":0.002962,"14":0,"15":0.005924,"16":0,"17":0,"18":0,"19":0.002962,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.002962,"36":0.002962,"37":0,"38":0.002962,"39":0,"40":0.002962,"41":0.002962,"42":0.002962,"43":0.068126,"44":0.005924,"45":0.005924,"46":0.005924,"47":0.032582,"48":0.008886,"49":0.008886,"50":0.008886,"51":0.002962,"52":0.032582,"53":0.005924,"54":0.005924,"55":0.008886,"56":0.01481,"57":0.017772,"58":0.008886,"59":0.017772,"60":0.020734,"61":0.01481,"62":0.023696,"63":0.020734,"64":0.02962,"65":0.127366,"66":0.924144,"67":0.100708,"68":0,"3.5":0,"3.6":0.005924},F:{"9":0,"11":0,"12":0.005924,"15":0.011848,"16":0.005924,"17":0.002962,"18":0.002962,"19":0.017772,"20":0.065164,"21":0.002962,"22":0.002962,"23":0.077012,"24":0.002962,"25":0,"26":0.002962,"27":0.005924,"28":0.01481,"29":0.002962,"30":0.01481,"31":0,"32":0.008886,"33":0.005924,"34":0.002962,"35":0.002962,"36":0.005924,"37":0.002962,"38":0.017772,"39":0,"40":0,"41":0,"42":0.002962,"43":0.002962,"44":0,"45":0.002962,"46":0,"47":0.005924,"48":0.002962,"49":0.01481,"50":0.005924,"51":0.01481,"52":0,"53":0,"54":0,"55":0,"56":0.002962,"57":0.002962,"58":0.364326,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.31101},E:{"4":0.002962,"5":0,"6":0,"7":0,"8":0.002962,"9":0,"10":0.002962,"11":0.017772,"12":0.071088,_:"0","3.1":0,"3.2":0,"5.1":0.038506,"6.1":0,"7.1":0.002962,"9.1":0.005924,"10.1":0.008886,"11.1":0.01481,"12.1":0.032582},G:{"8":0.031560907635345,"3.2":0.0020494095867107,"4.0-4.1":0.0012296457520264,"4.2-4.3":0.00040988191734214,"5.0-5.1":0.0040988191734214,"6.0-6.1":0.0020494095867107,"7.0-7.1":0.0073778745121585,"8.1-8.4":0.015985394776343,"9.0-9.2":0.0094272840988692,"9.3":0.078287446212349,"10.0-10.2":0.043447483238267,"10.3":0.10370012508756,"11.0-11.2":0.12788315821075,"11.3-11.4":0.26273430901631,"12.0-12.1":1.5862430201141,"12.2":1.8194658310818},I:{"3":0.0009236935483871,"4":0.13301187096774,_:"67","2.1":0.0064658548387097,"2.2":0.011084322580645,"2.3":0.0064658548387097,"4.1":0.066505935483871,"4.2-4.3":0.28819238709677,"4.4":0,"4.4.3-4.4.4":0.40365408064516},A:{"6":0.0033441935483871,"7":0,"8":0.056851290322581,"9":0.010032580645161,"10":0.016720967741935,"11":0.12039096774194,"5.5":0},B:{"12":0.020734,"13":0.011848,"14":0.01481,"15":0.020734,"16":0.023696,"17":0.151062,"18":0.038506},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.21727569230769,"5.0-5.4":0.062078769230769,"6.2-6.4":0.031039384615385,"7.2-7.4":0.20692923076923,"8.2":0.48628369230769,"9.2":0.20692923076923},N:{"10":0.057583636363636,"11":0.32246836363636},J:{"7":0,"10":0.31671},S:{"2.5":0.007038},R:{_:"0"},M:{"0":0.591192},O:{"0":4.377636},Q:{"1.2":0.028152},H:{"0":31.010177752577},L:{"0":35.343466}};


/***/ }),
/* 412 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.006619,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.026476,"39":0,"40":0.006619,"41":0,"42":0,"43":0.006619,"44":0.006619,"45":0.006619,"46":0.006619,"47":0,"48":0.006619,"49":0.26476,"50":0.006619,"51":0,"52":0.006619,"53":0,"54":0,"55":0.006619,"56":0.013238,"57":0,"58":0.033095,"59":0.006619,"60":0.013238,"61":0.013238,"62":0.006619,"63":0.026476,"64":0.039714,"65":0.033095,"66":0.052952,"67":0.178713,"68":0.052952,"69":0.092666,"70":0.178713,"71":0.258141,"72":1.998938,"73":29.997308,"74":0.019857,"75":0.019857,_:"76"},C:{"2":0,"3":0.019857,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.006619,"41":0,"42":0,"43":0.019857,"44":0.013238,"45":0,"46":0,"47":0.019857,"48":0.013238,"49":0,"50":0.006619,"51":0.006619,"52":0.046333,"53":0.006619,"54":0,"55":0,"56":0.026476,"57":0.006619,"58":0.006619,"59":0.006619,"60":0.039714,"61":0.039714,"62":0.013238,"63":0.013238,"64":0.059571,"65":0.152237,"66":2.488744,"67":0.026476,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.013238,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.006619,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.019857,"37":0.006619,"38":0.006619,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.006619,"58":0.972993,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.013238},E:{"4":0,"5":0,"6":0,"7":0,"8":0.006619,"9":0,"10":0.013238,"11":0.013238,"12":0.569234,_:"0","3.1":0,"3.2":0,"5.1":1.634893,"6.1":0,"7.1":0,"9.1":0,"10.1":0.112523,"11.1":0.086047,"12.1":0.635424},G:{"8":0.034253187631342,"3.2":0.0022242329630742,"4.0-4.1":0.0013345397778445,"4.2-4.3":0.00044484659261483,"5.0-5.1":0.0044484659261483,"6.0-6.1":0.0022242329630742,"7.0-7.1":0.0080072386670669,"8.1-8.4":0.017349017111978,"9.0-9.2":0.010231471630141,"9.3":0.084965699189433,"10.0-10.2":0.047153738817172,"10.3":0.11254618793155,"11.0-11.2":0.13879213689583,"11.3-11.4":0.28514666586611,"12.0-12.1":1.7215563134194,"12.2":1.9746740246172},I:{"3":0.0010923135080645,"4":0.15729314516129,_:"67","2.1":0.0076461945564516,"2.2":0.013107762096774,"2.3":0.0076461945564516,"4.1":0.078646572580645,"4.2-4.3":0.34080181451613,"4.4":0,"4.4.3-4.4.4":0.47734100302419},A:{"6":0,"7":0,"8":0.058969272727273,"9":0.022113477272727,"10":0.029484636363636,"11":0.21376361363636,"5.5":0},B:{"12":0.013238,"13":0.019857,"14":0.019857,"15":0.026476,"16":0.039714,"17":0.456711,"18":0.112523},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.5866932,"5.0-5.4":0.050577,"6.2-6.4":0.101154,"7.2-7.4":0.2933466,"8.2":0.8901552,"9.2":0.556347},N:{"10":0.013101375,"11":0.091709625},J:{"7":0,"10":0.013524},S:{"2.5":0},R:{_:"0"},M:{"0":0.071001},O:{"0":1.392972},Q:{"1.2":0},H:{"0":0.79382626804124},L:{"0":44.50547}};


/***/ }),
/* 413 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.006037,"14":0,"15":0.006037,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.006037,"25":0,"26":0,"27":0,"28":0,"29":0.018111,"30":0,"31":0,"32":0,"33":0,"34":0.006037,"35":0,"36":0,"37":0.006037,"38":0.006037,"39":0,"40":0.012074,"41":0.012074,"42":0,"43":0.006037,"44":0,"45":0,"46":0,"47":0.006037,"48":0.012074,"49":0.229406,"50":0.006037,"51":0.006037,"52":0.012074,"53":0.006037,"54":0.012074,"55":0.024148,"56":0.012074,"57":0.162999,"58":0.024148,"59":0.024148,"60":0.018111,"61":0.156962,"62":0.036222,"63":0.090555,"64":0.054333,"65":0.12074,"66":0.066407,"67":0.12074,"68":0.084518,"69":0.072444,"70":0.114703,"71":0.325998,"72":1.660175,"73":17.14508,"74":0.042259,"75":0.012074,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.006037,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.006037,"36":0,"37":0,"38":0.006037,"39":0,"40":0,"41":0.006037,"42":0,"43":0,"44":0,"45":0.006037,"46":0,"47":0.006037,"48":0.132814,"49":0.030185,"50":0.012074,"51":0.006037,"52":0.096592,"53":0.006037,"54":0.006037,"55":0.006037,"56":0.06037,"57":0.06037,"58":0.006037,"59":0.006037,"60":0.175073,"61":0.018111,"62":0.012074,"63":0.018111,"64":0.036222,"65":0.235443,"66":2.402726,"67":0.030185,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006037,"37":0.006037,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.006037,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.006037,"57":0,"58":0.338072,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.006037,"6":0,"7":0.006037,"8":0.006037,"9":0.006037,"10":0.024148,"11":0.06037,"12":1.611879,_:"0","3.1":0,"3.2":0,"5.1":0.012074,"6.1":0,"7.1":0,"9.1":0.042259,"10.1":0.126777,"11.1":0.295813,"12.1":0.911587},G:{"8":0.19307819733814,"3.2":0.012537545281697,"4.0-4.1":0.0075225271690183,"4.2-4.3":0.0025075090563394,"5.0-5.1":0.025075090563394,"6.0-6.1":0.012537545281697,"7.0-7.1":0.04513516301411,"8.1-8.4":0.097792853197238,"9.0-9.2":0.057672708295807,"9.3":0.47893422976083,"10.0-10.2":0.26579595997198,"10.3":0.63439979125388,"11.0-11.2":0.7823428255779,"11.3-11.4":1.6073133051136,"12.0-12.1":9.7040600480336,"12.2":11.130832701091},I:{"3":0.00059419858870968,"4":0.085564596774194,_:"67","2.1":0.0041593901209677,"2.2":0.0071303830645161,"2.3":0.0041593901209677,"4.1":0.042782298387097,"4.2-4.3":0.18538995967742,"4.4":0,"4.4.3-4.4.4":0.25966478326613},A:{"6":0.0062231629955947,"7":0.0062231629955947,"8":0.049785303964758,"9":0.043562140969163,"10":0.043562140969163,"11":2.6759600881057,"5.5":0},B:{"12":0.006037,"13":0.012074,"14":0.030185,"15":0.06037,"16":0.090555,"17":1.841285,"18":0.573515},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.21617874213836,"5.0-5.4":0.043235748427673,"6.2-6.4":0.043235748427673,"7.2-7.4":0.15132511949686,"8.2":1.7942835597484,"9.2":2.907604081761},N:{"10":0,"11":0.047556},J:{"7":0,"10":0.019815},S:{"2.5":0},R:{_:"0"},M:{"0":0.261558},O:{"0":0.51519},Q:{"1.2":0.011889},H:{"0":0.29264916494845},L:{"0":30.127072}};


/***/ }),
/* 414 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006349,"35":0,"36":0,"37":0,"38":0.019047,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.006349,"48":0,"49":0.209517,"50":0.006349,"51":0.006349,"52":0.006349,"53":0.006349,"54":0.019047,"55":0.006349,"56":0.038094,"57":0.006349,"58":0.025396,"59":0.019047,"60":0.006349,"61":0.038094,"62":0.044443,"63":0.050792,"64":0.057141,"65":0.031745,"66":0.101584,"67":0.158725,"68":0.114282,"69":0.101584,"70":0.158725,"71":0.330148,"72":2.838003,"73":18.234328,"74":0.114282,"75":0.006349,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.012698,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.006349,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.006349,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.006349,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.019047,"49":0,"50":0,"51":0.006349,"52":0.025396,"53":0,"54":0,"55":0.006349,"56":0.012698,"57":0.006349,"58":0.006349,"59":0.006349,"60":0.06349,"61":0.006349,"62":0.006349,"63":0.012698,"64":0.025396,"65":0.171423,"66":1.872955,"67":0.012698,"68":0,"3.5":0,"3.6":0.038094},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006349,"37":0,"38":0.006349,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.006349,"52":0,"53":0,"54":0,"55":0.006349,"56":0,"57":0,"58":0.882511,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006349},E:{"4":0,"5":0,"6":0,"7":0,"8":0.012698,"9":0.006349,"10":0.031745,"11":0.050792,"12":1.415827,_:"0","3.1":0,"3.2":0,"5.1":0.006349,"6.1":0,"7.1":0,"9.1":0.082537,"10.1":0.222215,"11.1":0.260309,"12.1":0.812672},G:{"8":0.22319422805964,"3.2":0.014493131692185,"4.0-4.1":0.0086958790153107,"4.2-4.3":0.0028986263384369,"5.0-5.1":0.028986263384369,"6.0-6.1":0.014493131692185,"7.0-7.1":0.052175274091864,"8.1-8.4":0.11304642719904,"9.0-9.2":0.066668405784049,"9.3":0.55363763064145,"10.0-10.2":0.30725439187431,"10.3":0.73335246362454,"11.0-11.2":0.90437141759231,"11.3-11.4":1.8580194829381,"12.0-12.1":11.217683929751,"12.2":12.867002316321},I:{"3":0.00029714213709677,"4":0.042788467741935,_:"67","2.1":0.0020799949596774,"2.2":0.0035657056451613,"2.3":0.0020799949596774,"4.1":0.021394233870968,"4.2-4.3":0.092708346774194,"4.4":0,"4.4.3-4.4.4":0.12985111391129},A:{"6":0,"7":0,"8":0.006349,"9":0.006349,"10":0.006349,"11":5.009361,"5.5":0},B:{"12":0.006349,"13":0.019047,"14":0.076188,"15":0.088886,"16":0.19047,"17":2.34913,"18":0.431732},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.11860882,"5.0-5.4":0.04313048,"6.2-6.4":0.02156524,"7.2-7.4":0.08626096,"8.2":1.01356628,"9.2":1.95165422},N:{"10":0,"11":0.018255},J:{"7":0,"10":0.018255},S:{"2.5":0},R:{_:"0"},M:{"0":0.120483},O:{"0":0.062067},Q:{"1.2":0.003651},H:{"0":0.22813104123711},L:{"0":27.466207}};


/***/ }),
/* 415 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003448,"12":0.006896,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.003448,"23":0,"24":0,"25":0,"26":0,"27":0.003448,"28":0,"29":0,"30":0.006896,"31":0.006896,"32":0.024136,"33":0.006896,"34":0,"35":0,"36":0.003448,"37":0,"38":0,"39":0,"40":0.003448,"41":0,"42":0,"43":0.006896,"44":0,"45":0,"46":0,"47":0.003448,"48":0,"49":0.058616,"50":0,"51":0.003448,"52":0,"53":0.003448,"54":0,"55":0.010344,"56":0.006896,"57":0.003448,"58":0.024136,"59":0,"60":0.003448,"61":0.013792,"62":0.003448,"63":0.010344,"64":0.003448,"65":0.058616,"66":0.010344,"67":0.024136,"68":0.01724,"69":0.024136,"70":0.031032,"71":0.06896,"72":0.220672,"73":8.285544,"74":0.044824,"75":0.037928,_:"76"},C:{"2":0,"3":0.003448,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.003448,"33":0,"34":0,"35":0,"36":0,"37":0.003448,"38":0,"39":0,"40":0,"41":0.003448,"42":0,"43":0.006896,"44":0.003448,"45":0.003448,"46":0,"47":0.013792,"48":0.010344,"49":0.003448,"50":0.003448,"51":0.003448,"52":0.037928,"53":0,"54":0,"55":0,"56":0.010344,"57":0.006896,"58":0.003448,"59":0.003448,"60":0.031032,"61":0.013792,"62":0.006896,"63":0.006896,"64":0.013792,"65":0.044824,"66":0.937856,"67":0.15516,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.024136,"38":0.006896,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.003448,"52":0,"53":0,"54":0.003448,"55":0,"56":0,"57":0,"58":0.382728,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01724},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.003448,"11":0.003448,"12":0.058616,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.003448,"10.1":0.006896,"11.1":0.010344,"12.1":0.037928},G:{"8":0.040727197838487,"3.2":0.0026446232362654,"4.0-4.1":0.0015867739417592,"4.2-4.3":0.00052892464725308,"5.0-5.1":0.0052892464725308,"6.0-6.1":0.0026446232362654,"7.0-7.1":0.0095206436505554,"8.1-8.4":0.02062806124287,"9.0-9.2":0.012165266886821,"9.3":0.10102460762534,"10.0-10.2":0.056066012608826,"10.3":0.13381793575503,"11.0-11.2":0.16502448994296,"11.3-11.4":0.33904069888922,"12.0-12.1":2.0469383848694,"12.2":2.3478965091564},I:{"3":0.0012315806451613,"4":0.17734761290323,_:"67","2.1":0.008621064516129,"2.2":0.014778967741935,"2.3":0.008621064516129,"4.1":0.088673806451613,"4.2-4.3":0.38425316129032,"4.4":0,"4.4.3-4.4.4":0.53820074193548},A:{"6":0,"7":0,"8":0.010344,"9":0.003448,"10":0.003448,"11":0.048272,"5.5":0},B:{"12":0.010344,"13":0.006896,"14":0.006896,"15":0.006896,"16":0.013792,"17":0.158608,"18":0.048272},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.60669,"5.0-5.4":0.020223,"6.2-6.4":0.0707805,"7.2-7.4":0.1516725,"8.2":0.707805,"9.2":0.546021},N:{"10":0.009828,"11":0.029484},J:{"7":0,"10":0.006552},S:{"2.5":0},R:{_:"0"},M:{"0":0.058968},O:{"0":2.712528},Q:{"1.2":0.006552},H:{"0":4.0071446597938},L:{"0":69.72764}};


/***/ }),
/* 416 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.293694,"68":0,"69":0.009474,"70":0,"71":0,"72":0.018948,"73":6.549692,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.009474,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.03158,"50":0,"51":0,"52":0.018948,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.009474,"66":0.132636,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.123162,"38":0.009474,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.009474,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.041054,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.041054},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.041054,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0},G:{"8":0.059294838987291,"3.2":0.003850314219954,"4.0-4.1":0.0023101885319724,"4.2-4.3":0.00077006284399079,"5.0-5.1":0.0077006284399079,"6.0-6.1":0.003850314219954,"7.0-7.1":0.013861131191834,"8.1-8.4":0.030032450915641,"9.0-9.2":0.017711445411788,"9.3":0.14708200320224,"10.0-10.2":0.081626661463024,"10.3":0.19482589952967,"11.0-11.2":0.24025960732513,"11.3-11.4":0.4936102829981,"12.0-12.1":2.9801432062444,"12.2":3.4183089644751},I:{"3":0.00034752016129032,"4":0.050042903225806,_:"67","2.1":0.0024326411290323,"2.2":0.0041702419354839,"2.3":0.0024326411290323,"4.1":0.025021451612903,"4.2-4.3":0.10842629032258,"4.4":0,"4.4.3-4.4.4":0.15186631048387},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.385276,"5.5":0},B:{"12":0,"13":0.101056,"14":0.009474,"15":0,"16":0.11053,"17":0.375802,"18":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.3814139072165,"5.0-5.4":0.47453149484536,"6.2-6.4":0.031635432989691,"7.2-7.4":1.8664905463918,"8.2":0.3374446185567,"9.2":0},N:{"10":0,"11":0.03421},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":2.94206},Q:{"1.2":0},H:{"0":6.4646084467354},L:{"0":64.643474}};


/***/ }),
/* 417 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":3.776815,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.840275,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.415715,"68":0,"69":0,"70":0,"71":0,"72":5.44852,"73":25.783175,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.627995,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":2.308545,"66":16.77012,"67":0.627995,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.627995,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.627995,"10.1":0,"11.1":0,"12.1":0},G:{"8":0.014048319823877,"3.2":0.00091222855999199,"4.0-4.1":0.0005473371359952,"4.2-4.3":0.0001824457119984,"5.0-5.1":0.001824457119984,"6.0-6.1":0.00091222855999199,"7.0-7.1":0.0032840228159712,"8.1-8.4":0.0071153827679376,"9.0-9.2":0.0041962513759632,"9.3":0.034847130991694,"10.0-10.2":0.01933924547183,"10.3":0.046158765135595,"11.0-11.2":0.0569230621435,"11.3-11.4":0.11694770139097,"12.0-12.1":0.7060649054338,"12.2":0.80987651556089},I:{"3":0,"4":0,_:"67","2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},A:{"6":0,"7":0,"8":0.21228,"9":0,"10":0.21228,"11":7.544785,"5.5":0},B:{"12":3.776815,"13":0.21228,"14":0.627995,"15":0.840275,"16":0,"17":3.564535,"18":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":23.34812}};


/***/ }),
/* 418 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006006,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.018018,"30":0,"31":0,"32":0,"33":0.006006,"34":0.006006,"35":0,"36":0,"37":0,"38":0.012012,"39":0,"40":0.024024,"41":0,"42":0.006006,"43":0.012012,"44":0,"45":0.012012,"46":0,"47":0.006006,"48":0.012012,"49":0.282282,"50":0.006006,"51":0.006006,"52":0.006006,"53":0.012012,"54":0.018018,"55":0.042042,"56":0.024024,"57":0.042042,"58":0.03003,"59":0.03003,"60":0.012012,"61":0.036036,"62":0.078078,"63":0.516516,"64":0.042042,"65":0.054054,"66":0.066066,"67":0.132132,"68":0.174174,"69":0.222222,"70":0.204204,"71":0.432432,"72":2.156154,"73":17.663646,"74":0.048048,"75":0.012012,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.006006,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006006,"44":0,"45":0.006006,"46":0,"47":0,"48":0.018018,"49":0,"50":0,"51":0,"52":0.096096,"53":0,"54":0.006006,"55":0,"56":0.024024,"57":0.006006,"58":0.006006,"59":0.018018,"60":0.102102,"61":0.006006,"62":0.006006,"63":0.012012,"64":0.048048,"65":0.156156,"66":2.090088,"67":0.012012,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006006,"37":0.012012,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.318318,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.012012,"9":0.006006,"10":0.024024,"11":0.078078,"12":0.996996,_:"0","3.1":0,"3.2":0,"5.1":0.012012,"6.1":0.006006,"7.1":0,"9.1":0.06006,"10.1":0.126126,"11.1":0.21021,"12.1":0.78078},G:{"8":0.23578073451416,"3.2":0.015310437306114,"4.0-4.1":0.0091862623836686,"4.2-4.3":0.0030620874612229,"5.0-5.1":0.030620874612229,"6.0-6.1":0.015310437306114,"7.0-7.1":0.055117574302011,"8.1-8.4":0.11942141098769,"9.0-9.2":0.070428011608126,"9.3":0.58485870509357,"10.0-10.2":0.32458127088962,"10.3":0.77470812768938,"11.0-11.2":0.95537128790153,"11.3-11.4":1.9627980626439,"12.0-12.1":11.850278474932,"12.2":13.592606240368},I:{"3":0.00092711693548387,"4":0.13350483870968,_:"67","2.1":0.0064898185483871,"2.2":0.011125403225806,"2.3":0.0064898185483871,"4.1":0.066752419354839,"4.2-4.3":0.28926048387097,"4.4":0,"4.4.3-4.4.4":0.40515010080645},A:{"6":0,"7":0,"8":0.0061886148648649,"9":0.024754459459459,"10":0.0061886148648649,"11":1.7946983108108,"5.5":0},B:{"12":0.006006,"13":0.012012,"14":0.024024,"15":0.042042,"16":0.072072,"17":1.429428,"18":0.348348},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.24332676923077,"5.0-5.4":0.022120615384615,"6.2-6.4":0.033180923076923,"7.2-7.4":0.099542769230769,"8.2":1.0507292307692,"9.2":1.7143476923077},N:{"10":0,"11":0.051922},J:{"7":0,"10":0.023964},S:{"2.5":0},R:{_:"0"},M:{"0":0.247628},O:{"0":0.49925},Q:{"1.2":0.123814},H:{"0":0.20796936426117},L:{"0":29.771368}};


/***/ }),
/* 419 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.018585,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.007434,"31":0,"32":0.029736,"33":0.033453,"34":0.003717,"35":0,"36":0,"37":0,"38":0.007434,"39":0,"40":0.003717,"41":0,"42":0,"43":0.007434,"44":0.003717,"45":0,"46":0.003717,"47":0,"48":0.003717,"49":0.096642,"50":0,"51":0,"52":0,"53":0,"54":0.003717,"55":0.007434,"56":0.011151,"57":0.011151,"58":0.014868,"59":0,"60":0.007434,"61":0.003717,"62":0.003717,"63":0.026019,"64":0.003717,"65":0.018585,"66":0.029736,"67":0.022302,"68":0.014868,"69":0.044604,"70":0.044604,"71":0.063189,"72":0.312228,"73":6.772374,"74":0.022302,"75":0.014868,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.003717,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.007434,"44":0,"45":0.003717,"46":0,"47":0.003717,"48":0.011151,"49":0,"50":0,"51":0.003717,"52":0.007434,"53":0.003717,"54":0.003717,"55":0,"56":0.003717,"57":0,"58":0.018585,"59":0,"60":0.003717,"61":0.003717,"62":0,"63":0.003717,"64":0.011151,"65":0.03717,"66":0.494361,"67":0.026019,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.007434,"38":0.007434,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.003717,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.204435,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.003717},E:{"4":0,"5":0,"6":0.029736,"7":0.018585,"8":0.014868,"9":0.085491,"10":0.011151,"11":0.055755,"12":0.397719,_:"0","3.1":0,"3.2":0,"5.1":0.330813,"6.1":0,"7.1":0,"9.1":0.033453,"10.1":0.118944,"11.1":0.167265,"12.1":0.215586},G:{"8":0.068988825377764,"3.2":0.004479793855699,"4.0-4.1":0.0026878763134194,"4.2-4.3":0.0008959587711398,"5.0-5.1":0.008959587711398,"6.0-6.1":0.004479793855699,"7.0-7.1":0.016127257880516,"8.1-8.4":0.034942392074452,"9.0-9.2":0.020607051736215,"9.3":0.1711281252877,"10.0-10.2":0.094971629740819,"10.3":0.22667756909837,"11.0-11.2":0.27953913659562,"11.3-11.4":0.57430957230061,"12.0-12.1":3.467360444311,"12.2":3.9771609850896},I:{"3":0.00068485584677419,"4":0.098619241935484,_:"67","2.1":0.0047939909274194,"2.2":0.0082182701612903,"2.3":0.0047939909274194,"4.1":0.049309620967742,"4.2-4.3":0.21367502419355,"4.4":0,"4.4.3-4.4.4":0.29928200504032},A:{"6":0,"7":0,"8":0.018585,"9":0.029736,"10":0.014868,"11":1.546272,"5.5":0},B:{"12":0.014868,"13":0.018585,"14":0.022302,"15":0.022302,"16":0.055755,"17":0.490644,"18":0.07434},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.224070011658,"5.0-5.4":0.091046529792746,"6.2-6.4":0.27313958937824,"7.2-7.4":0.56651174093264,"8.2":2.812326142487,"9.2":2.8426749857513},N:{"10":0.010471666666667,"11":0.020943333333333},J:{"7":0,"10":0.012566},S:{"2.5":0},R:{_:"0"},M:{"0":0.12566},O:{"0":0.747677},Q:{"1.2":0.050264},H:{"0":0.27957190893471},L:{"0":65.55033}};


/***/ }),
/* 420 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00704,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.83776,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.01408,"39":0,"40":0,"41":0,"42":0,"43":0.00704,"44":0,"45":0,"46":0.01408,"47":0.04224,"48":0,"49":0.69696,"50":0.00704,"51":0.00704,"52":0.00704,"53":0.02816,"54":0.00704,"55":0.01408,"56":0.01408,"57":0.02816,"58":0.0704,"59":0.00704,"60":0.04224,"61":0.00704,"62":0.04224,"63":0.13376,"64":0.11968,"65":0.13376,"66":0.0352,"67":0.26752,"68":0.05632,"69":0.1056,"70":0.11968,"71":0.20416,"72":1.18272,"73":28.336,"74":0.01408,"75":0.00704,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.00704,"46":0,"47":0.00704,"48":0.04928,"49":0,"50":0,"51":0,"52":0.04928,"53":0.00704,"54":0.00704,"55":0.00704,"56":0.00704,"57":0.06336,"58":0.02112,"59":0.00704,"60":0.01408,"61":0.00704,"62":0.02112,"63":0.00704,"64":0.01408,"65":0.18304,"66":2.52736,"67":0.0352,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00704,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.39424,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00704},E:{"4":0,"5":0,"6":0,"7":0.00704,"8":0.01408,"9":0.16896,"10":0.07744,"11":0.09152,"12":2.1824,_:"0","3.1":0,"3.2":0,"5.1":2.20352,"6.1":0,"7.1":0,"9.1":0.12672,"10.1":0.2816,"11.1":0.95744,"12.1":1.45024},G:{"8":0.077674067847493,"3.2":0.0050437706394476,"4.0-4.1":0.0030262623836686,"4.2-4.3":0.0010087541278895,"5.0-5.1":0.010087541278895,"6.0-6.1":0.0050437706394476,"7.0-7.1":0.018157574302011,"8.1-8.4":0.039341410987691,"9.0-9.2":0.023201344941459,"9.3":0.1926720384269,"10.0-10.2":0.10692793755629,"10.3":0.25521479435605,"11.0-11.2":0.31473128790153,"11.3-11.4":0.64661139597718,"12.0-12.1":3.9038784749325,"12.2":4.4778595737016},I:{"3":0.00060475806451613,"4":0.087085161290323,_:"67","2.1":0.0042333064516129,"2.2":0.0072570967741935,"2.3":0.0042333064516129,"4.1":0.043542580645161,"4.2-4.3":0.18868451612903,"4.4":0,"4.4.3-4.4.4":0.26427927419355},A:{"6":0,"7":0,"8":0.02816,"9":0.0352,"10":0.01408,"11":0.64064,"5.5":0},B:{"12":0.01408,"13":0.01408,"14":0.04224,"15":0.04928,"16":0.11968,"17":1.13344,"18":0.27456},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.58308932642487,"5.0-5.4":0.030688911917098,"6.2-6.4":0.092066735751295,"7.2-7.4":0.37849658031088,"8.2":1.6060530569948,"9.2":1.258245388601},N:{"10":0,"11":0.02368},J:{"7":0,"10":0.00296},S:{"2.5":0},R:{_:"0"},M:{"0":0.148},O:{"0":0.09472},Q:{"1.2":0.0296},H:{"0":0.22698927835052},L:{"0":35.44344}};


/***/ }),
/* 421 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.008015,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.01603,"23":0,"24":0.008015,"25":0,"26":0.01603,"27":0,"28":0,"29":0.01603,"30":0,"31":0.008015,"32":0,"33":0.008015,"34":0.024045,"35":0,"36":0,"37":0,"38":0.120225,"39":0.1603,"40":0.008015,"41":0,"42":0,"43":0.008015,"44":0.008015,"45":0,"46":0.008015,"47":0.008015,"48":0.008015,"49":0.62517,"50":0.01603,"51":0.01603,"52":0.008015,"53":0.040075,"54":0.008015,"55":0.01603,"56":0.01603,"57":0.01603,"58":0.088165,"59":0.024045,"60":0.03206,"61":0.03206,"62":0.072135,"63":0.12824,"64":0.072135,"65":0.09618,"66":0.088165,"67":0.19236,"68":0.168315,"69":0.19236,"70":0.3206,"71":0.49693,"72":1.42667,"73":50.36626,"74":0.06412,"75":0.024045,_:"76"},C:{"2":0,"3":0.008015,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.008015,"42":0,"43":0.008015,"44":0,"45":0.008015,"46":0,"47":0.01603,"48":0.01603,"49":0.008015,"50":0,"51":0.008015,"52":0.06412,"53":0,"54":0,"55":0,"56":0.01603,"57":0.024045,"58":0.008015,"59":0.008015,"60":0.01603,"61":0.01603,"62":0.008015,"63":0.024045,"64":0.040075,"65":0.11221,"66":1.787345,"67":0.024045,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.008015,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.008015,"57":0.008015,"58":0.921725,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.008015,"9":0.040075,"10":0.03206,"11":0.08015,"12":0.665245,_:"0","3.1":0,"3.2":0,"5.1":1.37858,"6.1":0,"7.1":0,"9.1":0.040075,"10.1":0.088165,"11.1":0.216405,"12.1":0.3206},G:{"8":0.023931951365956,"3.2":0.0015540228159712,"4.0-4.1":0.00093241368958271,"4.2-4.3":0.00031080456319424,"5.0-5.1":0.0031080456319424,"6.0-6.1":0.0015540228159712,"7.0-7.1":0.0055944821374962,"8.1-8.4":0.012121377964575,"9.0-9.2":0.0071485049534674,"9.3":0.059363671570099,"10.0-10.2":0.032945283698589,"10.3":0.078633554488142,"11.0-11.2":0.096971023716602,"11.3-11.4":0.19922572500751,"12.0-12.1":1.2028136595617,"12.2":1.3796614560192},I:{"3":0.00051290322580645,"4":0.073858064516129,_:"67","2.1":0.0035903225806452,"2.2":0.0061548387096774,"2.3":0.0035903225806452,"4.1":0.036929032258065,"4.2-4.3":0.16002580645161,"4.4":0,"4.4.3-4.4.4":0.22413870967742},A:{"6":0,"7":0,"8":0.048964363636364,"9":0.0081607272727273,"10":0.024482181818182,"11":0.36723272727273,"5.5":0},B:{"12":0.008015,"13":0.01603,"14":0.024045,"15":0.024045,"16":0.04809,"17":0.472885,"18":0.14427},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.33917033333333,"5.0-5.4":0.020555777777778,"6.2-6.4":0.030833666666667,"7.2-7.4":0.082223111111111,"8.2":0.277503,"9.2":0.17472411111111},N:{"10":0.011059285714286,"11":0.066355714285714},J:{"7":0,"10":0.00397},S:{"2.5":0},R:{_:"0"},M:{"0":0.057565},O:{"0":0.04764},Q:{"1.2":0.001985},H:{"0":0.20671967353952},L:{"0":31.3607}};


/***/ }),
/* 422 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.052648,"39":0,"40":0.006581,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.381698,"50":0,"51":0,"52":0,"53":0.013162,"54":0,"55":0.098715,"56":0,"57":0,"58":0.026324,"59":0,"60":0.006581,"61":0.006581,"62":0.019743,"63":0.171106,"64":0.032905,"65":0.125039,"66":0.013162,"67":0.315888,"68":0.052648,"69":0.375117,"70":0.322469,"71":0.157944,"72":0.750234,"73":17.446231,"74":0.026324,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.013162,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.013162,"32":0.032905,"33":0,"34":0.032905,"35":0,"36":0,"37":0,"38":0.06581,"39":0.118458,"40":0,"41":0.13162,"42":0,"43":0.013162,"44":0,"45":0.013162,"46":0,"47":0.157944,"48":0.085553,"49":0.171106,"50":0,"51":0.006581,"52":0.125039,"53":0.006581,"54":0.006581,"55":0.006581,"56":0.467251,"57":0.144782,"58":0.013162,"59":0.098715,"60":0.434346,"61":0.085553,"62":0.078972,"63":0.026324,"64":0.250078,"65":0.348793,"66":7.232519,"67":0.078972,"68":0,"3.5":0.032905,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006581,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.006581,"57":0,"58":0.467251,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.026324,"5":0,"6":0,"7":0,"8":0,"9":0.013162,"10":0.039486,"11":0.210592,"12":1.362267,_:"0","3.1":0,"3.2":0,"5.1":0.006581,"6.1":0,"7.1":0,"9.1":0.06581,"10.1":0.204011,"11.1":0.565966,"12.1":1.928233},G:{"8":0.14939489452617,"3.2":0.0097009671770239,"4.0-4.1":0.0058205803062143,"4.2-4.3":0.0019401934354048,"5.0-5.1":0.019401934354048,"6.0-6.1":0.0097009671770239,"7.0-7.1":0.034923481837286,"8.1-8.4":0.075667543980787,"9.0-9.2":0.04462444901431,"9.3":0.37057694616231,"10.0-10.2":0.20566050415291,"10.3":0.49086893915741,"11.0-11.2":0.60534035184629,"11.3-11.4":1.2436639920945,"12.0-12.1":7.5085485950165,"12.2":8.6125186597618},I:{"3":0.00079447883064516,"4":0.1144049516129,_:"67","2.1":0.0055613518145161,"2.2":0.0095337459677419,"2.3":0.0055613518145161,"4.1":0.057202475806452,"4.2-4.3":0.24787739516129,"4.4":0,"4.4.3-4.4.4":0.34718724899194},A:{"6":0,"7":0,"8":0,"9":0.026324,"10":0.072391,"11":1.38201,"5.5":0},B:{"12":0.006581,"13":0.006581,"14":0.013162,"15":0.118458,"16":0.06581,"17":1.046379,"18":0.631776},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.37511022686567,"5.0-5.4":0.022065307462687,"6.2-6.4":0.06619592238806,"7.2-7.4":0.36407757313433,"8.2":1.4121796776119,"9.2":1.4563102925373},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.194883},O:{"0":0.516269},Q:{"1.2":0.051285},H:{"0":0.061500878006873},L:{"0":32.609552}};


/***/ }),
/* 423 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00929,"12":0.004645,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.013935,"27":0,"28":0,"29":0.004645,"30":0.004645,"31":0,"32":0,"33":0,"34":0.02787,"35":0,"36":0,"37":0,"38":0.004645,"39":0,"40":0.06503,"41":0.004645,"42":0,"43":0.00929,"44":0.004645,"45":0,"46":0.013935,"47":0.004645,"48":0,"49":0.11148,"50":0.00929,"51":0.004645,"52":0.00929,"53":0.00929,"54":0.004645,"55":0.088255,"56":0.023225,"57":0.00929,"58":0.01858,"59":0.013935,"60":0.00929,"61":0.00929,"62":0.013935,"63":0.032515,"64":0.00929,"65":0.03716,"66":0.069675,"67":0.05574,"68":0.02787,"69":0.08361,"70":0.171865,"71":0.17651,"72":0.49237,"73":7.54348,"74":0.004645,"75":0.013935,_:"76"},C:{"2":0,"3":0,"4":0,"5":0.004645,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.01858,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00929,"29":0.004645,"30":0.01858,"31":0,"32":0.004645,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.004645,"39":0,"40":0.013935,"41":0,"42":0.004645,"43":0.013935,"44":0.023225,"45":0.013935,"46":0.004645,"47":0.72462,"48":0.01858,"49":0.06503,"50":0.004645,"51":0,"52":0.013935,"53":0.013935,"54":0.004645,"55":0.004645,"56":0.032515,"57":0.013935,"58":0.02787,"59":0.01858,"60":0.05574,"61":0.01858,"62":0.07432,"63":0.13935,"64":0.041805,"65":0.14864,"66":1.80226,"67":0.08361,"68":0,"3.5":0.004645,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.004645,"21":0.004645,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.004645,"29":0,"30":0,"31":0,"32":0,"33":0.004645,"34":0,"35":0,"36":0,"37":0.153285,"38":0.08361,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00929,"50":0,"51":0.0929,"52":0,"53":0,"54":0,"55":0,"56":0.00929,"57":0.004645,"58":0.64101,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.023225},E:{"4":0,"5":0,"6":0.004645,"7":0,"8":0.01858,"9":0,"10":0,"11":0.023225,"12":0.11148,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.07432,"11.1":0.023225,"12.1":0.04645},G:{"8":0.019996845291704,"3.2":0.0012984964475133,"4.0-4.1":0.00077909786850796,"4.2-4.3":0.00025969928950265,"5.0-5.1":0.0025969928950265,"6.0-6.1":0.0012984964475133,"7.0-7.1":0.0046745872110477,"8.1-8.4":0.010128272290603,"9.0-9.2":0.005973083658561,"9.3":0.049602564295007,"10.0-10.2":0.027528124687281,"10.3":0.065703920244171,"11.0-11.2":0.081026178324827,"11.3-11.4":0.1664672445712,"12.0-12.1":1.0050362503753,"12.2":1.1528051461023},I:{"3":0.0049523034274194,"4":0.71313169354839,_:"67","2.1":0.034666123991935,"2.2":0.059427641129032,"2.3":0.034666123991935,"4.1":0.35656584677419,"4.2-4.3":1.5451186693548,"4.4":0,"4.4.3-4.4.4":2.1641565977823},A:{"6":0,"7":0,"8":0.16997421176471,"9":0.037772047058824,"10":0.12748065882353,"11":1.6714130823529,"5.5":0},B:{"12":0.143995,"13":0.10219,"14":0.097545,"15":0.199735,"16":0.190445,"17":0.469145,"18":0.116125},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.6072515789474,"5.0-5.4":0.18545210526316,"6.2-6.4":0.17514921052632,"7.2-7.4":0.63877947368421,"8.2":0.66968815789474,"9.2":0.24726947368421},N:{"10":0.12075525,"11":0.09879975},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.19278},O:{"0":4.51962},Q:{"1.2":0.39627},H:{"0":3.7009306701031},L:{"0":54.366235}};


/***/ }),
/* 424 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.006017,"23":0,"24":0,"25":0,"26":0.006017,"27":0.006017,"28":0.006017,"29":0.006017,"30":0.012034,"31":0.072204,"32":0.006017,"33":0.030085,"34":0.006017,"35":0.006017,"36":0.006017,"37":0,"38":0.018051,"39":0.006017,"40":0.006017,"41":0.006017,"42":0.006017,"43":0.012034,"44":0.006017,"45":0.006017,"46":0.018051,"47":0.006017,"48":0.018051,"49":0.547547,"50":0.012034,"51":0.024068,"52":0.006017,"53":0.018051,"54":0.018051,"55":0.018051,"56":0.024068,"57":0.018051,"58":0.126357,"59":0.042119,"60":0.042119,"61":0.066187,"62":0.042119,"63":0.108306,"64":0.072204,"65":0.162459,"66":0.108306,"67":0.204578,"68":0.144408,"69":0.234663,"70":0.288816,"71":0.463309,"72":1.420012,"73":24.224442,"74":0.096272,"75":0.06017,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.006017,"39":0,"40":0,"41":0,"42":0,"43":0.012034,"44":0,"45":0.012034,"46":0,"47":0.036102,"48":0.018051,"49":0.006017,"50":0.006017,"51":0.006017,"52":0.048136,"53":0.006017,"54":0.006017,"55":0.006017,"56":0.090255,"57":0.012034,"58":0.006017,"59":0.012034,"60":0.036102,"61":0.018051,"62":0.018051,"63":0.018051,"64":0.030085,"65":0.114323,"66":1.401961,"67":0.066187,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006017,"37":0.138391,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.006017,"57":0.006017,"58":0.415173,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.012034},E:{"4":0,"5":0,"6":0,"7":0.018051,"8":0.012034,"9":0.012034,"10":0.024068,"11":0.042119,"12":0.379071,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.006017,"7.1":0,"9.1":0.024068,"10.1":0.066187,"11.1":0.126357,"12.1":0.204578},G:{"8":0.082449447112979,"3.2":0.0053538602021415,"4.0-4.1":0.0032123161212849,"4.2-4.3":0.0010707720404283,"5.0-5.1":0.010707720404283,"6.0-6.1":0.0053538602021415,"7.0-7.1":0.019273896727709,"8.1-8.4":0.041760109576704,"9.0-9.2":0.024627756929851,"9.3":0.20451745972181,"10.0-10.2":0.1135018362854,"10.3":0.27090532622836,"11.0-11.2":0.33408087661363,"11.3-11.4":0.68636487791454,"12.0-12.1":4.1438877964575,"12.2":4.7531570874612},I:{"3":0.00075348387096774,"4":0.10850167741935,_:"67","2.1":0.0052743870967742,"2.2":0.0090418064516129,"2.3":0.0052743870967742,"4.1":0.054250838709677,"4.2-4.3":0.23508696774194,"4.4":0,"4.4.3-4.4.4":0.3292724516129},A:{"6":0.006222125,"7":0,"8":0.049777,"9":0.01244425,"10":0.018666375,"11":0.46043725,"5.5":0},B:{"12":0.012034,"13":0.018051,"14":0.024068,"15":0.036102,"16":0.048136,"17":0.463309,"18":0.126357},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.41487898477157,"5.0-5.4":0.031115923857868,"6.2-6.4":0.072603822335025,"7.2-7.4":0.18669554314721,"8.2":0.74678217258883,"9.2":0.59120255329949},N:{"10":0,"11":0.043813},J:{"7":0,"10":0.011949},S:{"2.5":0},R:{_:"0"},M:{"0":0.099575},O:{"0":1.027614},Q:{"1.2":0.015932},H:{"0":1.4442344312715},L:{"0":46.906651}};


/***/ }),
/* 425 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003355,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.003355,"26":0.003355,"27":0.003355,"28":0,"29":0.023485,"30":0.003355,"31":0.00671,"32":0.003355,"33":0.010065,"34":0.003355,"35":0.003355,"36":0,"37":0,"38":0.003355,"39":0,"40":0.010065,"41":0.003355,"42":0.003355,"43":0.030195,"44":0.003355,"45":0.003355,"46":0.00671,"47":0.003355,"48":0.003355,"49":0.24156,"50":0.003355,"51":0.003355,"52":0.003355,"53":0.003355,"54":0.003355,"55":0.00671,"56":0.00671,"57":0.003355,"58":0.02013,"59":0.003355,"60":0.003355,"61":0.38247,"62":0.01342,"63":0.03355,"64":0.01342,"65":0.04026,"66":0.010065,"67":0.02013,"68":0.016775,"69":0.04697,"70":0.04697,"71":0.090585,"72":0.231495,"73":7.162925,"74":0.04026,"75":0.03355,_:"76"},C:{"2":0,"3":0.003355,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.003355,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.003355,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.003355,"38":0.003355,"39":0,"40":0.003355,"41":0.003355,"42":0.003355,"43":0.00671,"44":0.003355,"45":0.00671,"46":0,"47":0.010065,"48":0.01342,"49":0.003355,"50":0.003355,"51":0.003355,"52":0.030195,"53":0,"54":0,"55":0.003355,"56":0.010065,"57":0.00671,"58":0.003355,"59":0.003355,"60":0.01342,"61":0.003355,"62":0.00671,"63":0.010065,"64":0.00671,"65":0.030195,"66":0.533445,"67":0.06039,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.01342,"19":0.003355,"20":0,"21":0,"22":0.003355,"23":0,"24":0.003355,"25":0,"26":0,"27":0,"28":0.003355,"29":0.003355,"30":0.003355,"31":0,"32":0.00671,"33":0.003355,"34":0,"35":0.003355,"36":0.003355,"37":0.05368,"38":0.057035,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00671,"52":0,"53":0,"54":0,"55":0,"56":0.003355,"57":0,"58":0.338855,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00671},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00671,"11":0.003355,"12":0.04026,_:"0","3.1":0,"3.2":0,"5.1":0.02013,"6.1":0,"7.1":0,"9.1":0.003355,"10.1":0.010065,"11.1":0.01342,"12.1":0.030195},G:{"8":0.022905361753227,"3.2":0.001487361152807,"4.0-4.1":0.00089241669168418,"4.2-4.3":0.00029747223056139,"5.0-5.1":0.0029747223056139,"6.0-6.1":0.001487361152807,"7.0-7.1":0.0053545001501051,"8.1-8.4":0.011601416991894,"9.0-9.2":0.006841861302912,"9.3":0.056817196037226,"10.0-10.2":0.031532056439508,"10.3":0.075260474332032,"11.0-11.2":0.092811335935155,"11.3-11.4":0.19067969978985,"12.0-12.1":1.1512175322726,"12.2":1.320479231462},I:{"3":0.0031098991935484,"4":0.44782548387097,_:"67","2.1":0.021769294354839,"2.2":0.037318790322581,"2.3":0.021769294354839,"4.1":0.22391274193548,"4.2-4.3":0.9702885483871,"4.4":0,"4.4.3-4.4.4":1.3590259475806},A:{"6":0,"7":0,"8":0.045972567567568,"9":0.0035363513513514,"10":0.010609054054054,"11":0.070727027027027,"5.5":0},B:{"12":0.010065,"13":0.00671,"14":0.016775,"15":0.010065,"16":0.01342,"17":0.09394,"18":0.030195},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.0965644055944,"5.0-5.4":0.10153374125874,"6.2-6.4":0.091380367132867,"7.2-7.4":0.25383435314685,"8.2":0.84273005244755,"9.2":0.51782208041958},N:{"10":0.012117352941176,"11":0.19387764705882},J:{"7":0,"10":0.033225},S:{"2.5":0.006645},R:{_:"0"},M:{"0":0.059805},O:{"0":6.598485},Q:{"1.2":0.006645},H:{"0":3.7117234536082},L:{"0":64.88324}};


/***/ }),
/* 426 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003599,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.003599,"23":0,"24":0,"25":0,"26":0.003599,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.003599,"35":0,"36":0,"37":0,"38":0.007198,"39":0.003599,"40":0.007198,"41":0,"42":0.003599,"43":0.007198,"44":0,"45":0,"46":0.017995,"47":0,"48":0,"49":0.194346,"50":0.003599,"51":0.003599,"52":0.003599,"53":0.007198,"54":0.003599,"55":0.007198,"56":0.007198,"57":0.007198,"58":0.021594,"59":0.010797,"60":0.003599,"61":0.089975,"62":0.007198,"63":0.025193,"64":0.021594,"65":0.014396,"66":0.010797,"67":0.017995,"68":0.046787,"69":0.025193,"70":0.039589,"71":0.082777,"72":0.313113,"73":6.578972,"74":0.010797,"75":0.007198,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.003599,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.003599,"39":0,"40":0,"41":0,"42":0,"43":0.003599,"44":0,"45":0.003599,"46":0,"47":0.007198,"48":0.010797,"49":0.003599,"50":0.003599,"51":0.003599,"52":0.140361,"53":0.003599,"54":0.003599,"55":0.003599,"56":0.010797,"57":0.007198,"58":0.003599,"59":0.003599,"60":0.046787,"61":0.014396,"62":0.010797,"63":0.021594,"64":0.025193,"65":0.129564,"66":2.073024,"67":0.007198,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.007198,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.003599,"33":0,"34":0,"35":0,"36":0.025193,"37":0,"38":0.010797,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.003599,"50":0,"51":0.003599,"52":0,"53":0,"54":0,"55":0.010797,"56":0.010797,"57":0.003599,"58":0.978928,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.003599},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.003599,"11":0.007198,"12":0.158356,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.003599,"10.1":0.010797,"11.1":0.032391,"12.1":0.097173},G:{"8":0.016770411988392,"3.2":0.001088987791454,"4.0-4.1":0.00065339267487241,"4.2-4.3":0.0002177975582908,"5.0-5.1":0.002177975582908,"6.0-6.1":0.001088987791454,"7.0-7.1":0.0039203560492345,"8.1-8.4":0.0084941047733413,"9.0-9.2":0.0050093438406885,"9.3":0.041599333633543,"10.0-10.2":0.023086541178825,"10.3":0.055102782247573,"11.0-11.2":0.067952838186731,"11.3-11.4":0.13960823486441,"12.0-12.1":0.84287655058541,"12.2":0.96680336125288},I:{"3":0.0013121411290323,"4":0.18894832258065,_:"67","2.1":0.0091849879032258,"2.2":0.015745693548387,"2.3":0.0091849879032258,"4.1":0.094474161290323,"4.2-4.3":0.40938803225806,"4.4":0,"4.4.3-4.4.4":0.5734056733871},A:{"6":0,"7":0,"8":0.007198,"9":0.003599,"10":0.010797,"11":0.219539,"5.5":0},B:{"12":0.003599,"13":0.007198,"14":0.025193,"15":0.046787,"16":0.025193,"17":0.32391,"18":0.082777},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.70944416666667,"5.0-5.4":0.09121425,"6.2-6.4":0.15202375,"7.2-7.4":0.46620616666667,"8.2":2.1688721666667,"9.2":1.6418565},N:{"10":0.011072,"11":0.398592},J:{"7":0,"10":0.012802},S:{"2.5":0},R:{_:"0"},M:{"0":0.179228},O:{"0":0.044807},Q:{"1.2":0},H:{"0":0.78780692439863},L:{"0":74.767732}};


/***/ }),
/* 427 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.070227,"50":0,"51":0,"52":0.046818,"53":0,"54":0.015606,"55":0.015606,"56":0.031212,"57":0.397953,"58":0.015606,"59":0,"60":0,"61":0,"62":0,"63":0.015606,"64":0.273105,"65":0.015606,"66":0.015606,"67":0,"68":0.187272,"69":0,"70":2.481354,"71":0.444771,"72":0.85833,"73":22.987638,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0.054621,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.031212,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.015606,"41":0,"42":0,"43":0.015606,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.070227,"51":0,"52":0.358938,"53":0,"54":0.031212,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.733482,"61":0,"62":0,"63":1.147041,"64":0,"65":0.616437,"66":7.069518,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1.178253,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.117045,"11":0,"12":2.793474,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.218484,"10.1":1.623024,"11.1":0.460377,"12.1":2.091204},G:{"8":0.22761592204543,"3.2":0.014780254678275,"4.0-4.1":0.0088681528069649,"4.2-4.3":0.002956050935655,"5.0-5.1":0.02956050935655,"6.0-6.1":0.014780254678275,"7.0-7.1":0.053208916841789,"8.1-8.4":0.11528598649054,"9.0-9.2":0.067989171520064,"9.3":0.5646057287101,"10.0-10.2":0.31334139917943,"10.3":0.7478808867207,"11.0-11.2":0.92228789192435,"11.3-11.4":1.8948286497548,"12.0-12.1":11.439917120985,"12.2":13.121910103372},I:{"3":0.0014704828629032,"4":0.21174953225806,_:"67","2.1":0.010293380040323,"2.2":0.017645794354839,"2.3":0.010293380040323,"4.1":0.10587476612903,"4.2-4.3":0.45879065322581,"4.4":0,"4.4.3-4.4.4":0.64260101108871},A:{"6":0,"7":0,"8":0.015606,"9":0,"10":0,"11":0.686664,"5.5":0},B:{"12":0.054621,"13":0,"14":0,"15":0,"16":0,"17":3.011958,"18":0.413559},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0.16271115151515,"9.2":0.25032484848485},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.046137},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":17.561125}};


/***/ }),
/* 428 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":16,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":8,"53":0,"54":16,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":16,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":24,"10.1":0,"11.1":0,"12.1":0},G:{"8":0,"3.2":0,"4.0-4.1":0,"4.2-4.3":0,"5.0-5.1":0,"6.0-6.1":0,"7.0-7.1":0,"8.1-8.4":0,"9.0-9.2":0,"9.3":0,"10.0-10.2":0,"10.3":0,"11.0-11.2":0,"11.3-11.4":0,"12.0-12.1":0,"12.2":0},I:{"3":0,"4":0,_:"67","2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"5.5":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":20},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":0}};


/***/ }),
/* 429 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.004275,"26":0.0171,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.004275,"37":0,"38":0.004275,"39":0,"40":0,"41":0,"42":0.004275,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.149625,"50":0,"51":0,"52":0,"53":0.0684,"54":0,"55":0,"56":0.004275,"57":0,"58":0.012825,"59":0,"60":0.004275,"61":0.004275,"62":0.004275,"63":0.00855,"64":0.004275,"65":0.029925,"66":0.021375,"67":0.047025,"68":0.00855,"69":0.0171,"70":0.021375,"71":0.07695,"72":0.636975,"73":8.7039,"74":0.021375,"75":0.00855,_:"76"},C:{"2":0,"3":0,"4":0.004275,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.004275,"48":0.0171,"49":0.00855,"50":0.004275,"51":0.004275,"52":0.072675,"53":0.004275,"54":0.004275,"55":0.004275,"56":0.004275,"57":0.004275,"58":0,"59":0.012825,"60":0.038475,"61":0.004275,"62":0.004275,"63":0.00855,"64":0.012825,"65":0.123975,"66":0.9747,"67":0.00855,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.175275,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.012825,"8":0.004275,"9":0.004275,"10":0.038475,"11":0.09405,"12":1.235475,_:"0","3.1":0,"3.2":0,"5.1":0.106875,"6.1":0,"7.1":0,"9.1":0.0342,"10.1":0.14535,"11.1":0.2736,"12.1":0.611325},G:{"8":0.18484507655359,"3.2":0.012002927048934,"4.0-4.1":0.0072017562293606,"4.2-4.3":0.0024005854097869,"5.0-5.1":0.024005854097869,"6.0-6.1":0.012002927048934,"7.0-7.1":0.043210537376163,"8.1-8.4":0.093622830981687,"9.0-9.2":0.055213464425098,"9.3":0.45851181326929,"10.0-10.2":0.25446205343741,"10.3":0.60734810867607,"11.0-11.2":0.7489826478535,"11.3-11.4":1.5387752476734,"12.0-12.1":9.2902655358751,"12.2":10.656198634044},I:{"3":0.00056537298387097,"4":0.081413709677419,_:"67","2.1":0.0039576108870968,"2.2":0.0067844758064516,"2.3":0.0039576108870968,"4.1":0.04070685483871,"4.2-4.3":0.17639637096774,"4.4":0,"4.4.3-4.4.4":0.24706799395161},A:{"6":0,"7":0,"8":0.00855,"9":0.012825,"10":0.00855,"11":0.859275,"5.5":0},B:{"12":0.021375,"13":0.012825,"14":0.064125,"15":0.0342,"16":0.17955,"17":1.47915,"18":0.346275},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.61606761006289,"5.0-5.4":0.062650943396226,"6.2-6.4":0.11486006289308,"7.2-7.4":0.53253301886792,"8.2":1.8064355345912,"9.2":1.8482028301887},N:{"10":0,"11":0.017175},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.19465},O:{"0":0.040075},Q:{"1.2":0},H:{"0":0.05420060137457},L:{"0":50.815525}};


/***/ }),
/* 430 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.034725,"30":0,"31":0.23613,"32":0,"33":0.006945,"34":0,"35":0,"36":0.006945,"37":0.020835,"38":0.006945,"39":0,"40":0.006945,"41":0.034725,"42":0,"43":0.034725,"44":0,"45":0.006945,"46":0.020835,"47":0.006945,"48":0.006945,"49":0.51393,"50":0,"51":0.006945,"52":0.006945,"53":0.006945,"54":0.006945,"55":0.01389,"56":0.01389,"57":0.062505,"58":0.090285,"59":0,"60":0.006945,"61":1.00008,"62":0.020835,"63":0.12501,"64":0.05556,"65":0.159735,"66":0.02778,"67":0.05556,"68":0.09723,"69":0.31947,"70":0.354195,"71":0.59727,"72":1.243155,"73":34.245795,"74":0.02778,"75":0.01389,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.006945,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.006945,"42":0,"43":0.006945,"44":0,"45":0,"46":0,"47":0.01389,"48":0,"49":0,"50":0,"51":0,"52":0.062505,"53":0.006945,"54":0,"55":0,"56":0.01389,"57":0.02778,"58":0.006945,"59":0.006945,"60":0.048615,"61":0.01389,"62":0.01389,"63":0.006945,"64":0.020835,"65":0.1389,"66":2.368245,"67":0.02778,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0.006945,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.006945,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.020835,"50":0,"51":0.006945,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1.590405,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0.006945,"7":0,"8":0,"9":0,"10":0.006945,"11":0.09723,"12":1.16676,_:"0","3.1":0,"3.2":0,"5.1":0.01389,"6.1":0,"7.1":0,"9.1":0.01389,"10.1":0.229185,"11.1":0.173625,"12.1":0.743115},G:{"8":0.03767298008606,"3.2":0.0024462974081857,"4.0-4.1":0.0014677784449114,"4.2-4.3":0.00048925948163715,"5.0-5.1":0.0048925948163715,"6.0-6.1":0.0024462974081857,"7.0-7.1":0.0088066706694686,"8.1-8.4":0.019081119783849,"9.0-9.2":0.011252968077654,"9.3":0.093448560992695,"10.0-10.2":0.051861505053537,"10.3":0.1237826488542,"11.0-11.2":0.15264895827079,"11.3-11.4":0.31361532772941,"12.0-12.1":1.8934341939358,"12.2":2.1718228389873},I:{"3":0.0013137701612903,"4":0.18918290322581,_:"67","2.1":0.0091963911290323,"2.2":0.015765241935484,"2.3":0.0091963911290323,"4.1":0.094591451612903,"4.2-4.3":0.40989629032258,"4.4":0,"4.4.3-4.4.4":0.57411756048387},A:{"6":0,"7":0,"8":0.049745581395349,"9":0.007106511627907,"10":0.007106511627907,"11":0.24162139534884,"5.5":0},B:{"12":0.01389,"13":0.02778,"14":0.01389,"15":0.01389,"16":0.06945,"17":0.51393,"18":0.201405},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.41448018181818,"5.0-5.4":0.040437090909091,"6.2-6.4":0.080874181818182,"7.2-7.4":0.15163909090909,"8.2":1.0715829090909,"9.2":1.0210365454545},N:{"10":0,"11":0.009165},J:{"7":0,"10":0.015275},S:{"2.5":0},R:{_:"0"},M:{"0":0.088595},O:{"0":0.09776},Q:{"1.2":0},H:{"0":0.43094921821306},L:{"0":40.07586}};


/***/ }),
/* 431 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.007373,"22":0.007373,"23":0,"24":0,"25":0,"26":0.007373,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.007373,"35":0,"36":0.058984,"37":0.007373,"38":0.022119,"39":0.007373,"40":0.036865,"41":0.022119,"42":0,"43":0.117968,"44":0,"45":0,"46":0.007373,"47":0,"48":0.007373,"49":0.752046,"50":0.007373,"51":0.007373,"52":0.007373,"53":0.022119,"54":0.007373,"55":0.022119,"56":0.022119,"57":0.014746,"58":0.036865,"59":0.007373,"60":0.014746,"61":0.331785,"62":0.022119,"63":0.066357,"64":0.044238,"65":0.088476,"66":0.044238,"67":0.125341,"68":0.103222,"69":0.066357,"70":0.132714,"71":0.272801,"72":1.40087,"73":34.019022,"74":0.088476,"75":0.022119,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.014746,"36":0,"37":0.007373,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.007373,"44":0,"45":0.014746,"46":0,"47":0.007373,"48":0.066357,"49":0.007373,"50":0.007373,"51":0.007373,"52":0.235936,"53":0.007373,"54":0.007373,"55":0.007373,"56":0.022119,"57":0.014746,"58":0.007373,"59":0.022119,"60":0.117968,"61":0.007373,"62":0.014746,"63":0.029492,"64":0.036865,"65":0.22119,"66":3.708619,"67":0.044238,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.014746,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.007373,"50":0,"51":0.007373,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.980609,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.007373,"8":0.007373,"9":0.022119,"10":0.022119,"11":0.07373,"12":1.681044,_:"0","3.1":0,"3.2":0,"5.1":0.014746,"6.1":0.110595,"7.1":0,"9.1":0.07373,"10.1":0.169579,"11.1":0.398142,"12.1":1.268156},G:{"8":0.084607280996698,"3.2":0.0054939792854999,"4.0-4.1":0.0032963875712999,"4.2-4.3":0.0010987958571,"5.0-5.1":0.010987958571,"6.0-6.1":0.0054939792854999,"7.0-7.1":0.019778325427799,"8.1-8.4":0.042853038426899,"9.0-9.2":0.025272304713299,"9.3":0.20987000870609,"10.0-10.2":0.1164723608526,"10.3":0.27799535184629,"11.0-11.2":0.34282430741519,"11.3-11.4":0.70432814440108,"12.0-12.1":4.2523399669769,"12.2":4.8775548096668},I:{"3":0.00043654032258065,"4":0.062861806451613,_:"67","2.1":0.0030557822580645,"2.2":0.0052384838709677,"2.3":0.0030557822580645,"4.1":0.031430903225806,"4.2-4.3":0.13620058064516,"4.4":0,"4.4.3-4.4.4":0.19076812096774},A:{"6":0.0074477263513514,"7":0,"8":0.044686358108108,"9":0.037238631756757,"10":0.037238631756757,"11":2.077915652027,"5.5":0},B:{"12":0.007373,"13":0.007373,"14":0.036865,"15":0.058984,"16":0.088476,"17":1.629433,"18":0.493991},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.12308267647059,"5.0-5.4":0.010256889705882,"6.2-6.4":0.030770669117647,"7.2-7.4":0.051284448529412,"8.2":0.50258759558824,"9.2":0.67695472058824},N:{"10":0,"11":0.044659},J:{"7":0,"10":0.002627},S:{"2.5":0},R:{_:"0"},M:{"0":0.128723},O:{"0":0.246938},Q:{"1.2":0.018389},H:{"0":0.09948295532646},L:{"0":32.789979}};


/***/ }),
/* 432 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.004709,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.004709,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.014127,"42":0,"43":0,"44":0,"45":0.004709,"46":0,"47":0,"48":0,"49":0.32963,"50":0,"51":0,"52":0,"53":0.028254,"54":0,"55":0,"56":0.004709,"57":0.028254,"58":0.014127,"59":0,"60":0.018836,"61":0,"62":0.009418,"63":0.160106,"64":0,"65":0.004709,"66":0,"67":0,"68":0.018836,"69":0.042381,"70":0,"71":0.065926,"72":0.649842,"73":15.125308,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.004709,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.009418,"43":0,"44":0,"45":0.004709,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0.004709,"55":0,"56":0,"57":0.004709,"58":0.037672,"59":0.004709,"60":0.014127,"61":0,"62":0.004709,"63":0,"64":0,"65":0.084762,"66":0.871165,"67":0.080053,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.061217,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.051799,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.004709,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.211905,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.004709,"9":0,"10":0,"11":0.04709,"12":0.842911,_:"0","3.1":0,"3.2":0,"5.1":0.004709,"6.1":0,"7.1":0,"9.1":0.117725,"10.1":0.014127,"11.1":0.103598,"12.1":0.306085},G:{"8":0.11693686330431,"3.2":0.0075933028119684,"4.0-4.1":0.004555981687181,"4.2-4.3":0.0015186605623937,"5.0-5.1":0.015186605623937,"6.0-6.1":0.0075933028119684,"7.0-7.1":0.027335890123086,"8.1-8.4":0.059227761933353,"9.0-9.2":0.034929192935055,"9.3":0.29006416741719,"10.0-10.2":0.16097801961373,"10.3":0.3842211222856,"11.0-11.2":0.47382209546683,"11.3-11.4":0.97346142049435,"12.0-12.1":5.8772163764635,"12.2":6.7413342364655},I:{"3":0.00085162802419355,"4":0.12263443548387,_:"67","2.1":0.0059613961693548,"2.2":0.010219536290323,"2.3":0.0059613961693548,"4.1":0.061317217741935,"4.2-4.3":0.26570794354839,"4.4":0,"4.4.3-4.4.4":0.37216144657258},A:{"6":0,"7":0,"8":0.042717357142857,"9":0,"10":0.009492746031746,"11":0.5458328968254,"5.5":0},B:{"12":0.023545,"13":0.004709,"14":0.018836,"15":0.018836,"16":0.028254,"17":0.640424,"18":0.447355},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.312312,"5.0-5.4":0.104104,"6.2-6.4":0.104104,"7.2-7.4":0.2706704,"8.2":1.0202192,"9.2":2.0404384},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.301587},O:{"0":0.708994},Q:{"1.2":0},H:{"0":0.49089934364261},L:{"0":55.165115}};


/***/ }),
/* 433 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003591,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.007182,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.003591,"40":0,"41":0.003591,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.003591,"49":0.086184,"50":0,"51":0,"52":0,"53":0,"54":0.003591,"55":0,"56":0.003591,"57":0,"58":0.014364,"59":0,"60":0.007182,"61":0.003591,"62":0.007182,"63":0.010773,"64":0.003591,"65":0.010773,"66":0.007182,"67":0.021546,"68":0.025137,"69":0.025137,"70":0.046683,"71":0.086184,"72":0.25137,"73":9.286326,"74":0.010773,"75":0.007182,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.003591,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.003591,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.003591,"44":0,"45":0,"46":0,"47":0.007182,"48":0.003591,"49":0,"50":0,"51":0,"52":0.053865,"53":0.003591,"54":0,"55":0,"56":0.003591,"57":0.007182,"58":0.003591,"59":0.003591,"60":0.007182,"61":0.007182,"62":0.003591,"63":0.010773,"64":0.010773,"65":0.043092,"66":0.728973,"67":0.007182,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.003591,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.183141,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.079002,"10":0,"11":0.014364,"12":0.193914,_:"0","3.1":0,"3.2":0,"5.1":0.427329,"6.1":0,"7.1":0,"9.1":0.003591,"10.1":0.025137,"11.1":0.043092,"12.1":0.100548},G:{"8":0.029773202341639,"3.2":0.0019333248273792,"4.0-4.1":0.0011599948964275,"4.2-4.3":0.00038666496547583,"5.0-5.1":0.0038666496547583,"6.0-6.1":0.0019333248273792,"7.0-7.1":0.006959969378565,"8.1-8.4":0.015079933653557,"9.0-9.2":0.0088932942059442,"9.3":0.073853008405884,"10.0-10.2":0.040986486340438,"10.3":0.097826236265386,"11.0-11.2":0.12063946922846,"11.3-11.4":0.24785224287001,"12.0-12.1":1.4963934163915,"12.2":1.7164057817472},I:{"3":0.00092017943548387,"4":0.13250583870968,_:"67","2.1":0.0064412560483871,"2.2":0.011042153225806,"2.3":0.0064412560483871,"4.1":0.066252919354839,"4.2-4.3":0.28709598387097,"4.4":0,"4.4.3-4.4.4":0.40211841330645},A:{"6":0,"7":0,"8":0.007182,"9":0.003591,"10":0.003591,"11":0.050274,"5.5":0},B:{"12":0.003591,"13":0.003591,"14":0.007182,"15":0.007182,"16":0.010773,"17":0.093366,"18":0.053865},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.1792990134228,"5.0-5.4":0.12095374496644,"6.2-6.4":0.17135113870246,"7.2-7.4":0.43341758612975,"8.2":1.632875557047,"9.2":0.96762995973154},N:{"10":0,"11":0.044863},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.038454},O:{"0":0.06409},Q:{"1.2":0},H:{"0":0.33371949312715},L:{"0":76.145728}};


/***/ }),
/* 434 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.003994,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.003994,"30":0,"31":0,"32":0,"33":0,"34":0.007988,"35":0,"36":0.003994,"37":0,"38":0.01997,"39":0.003994,"40":0,"41":0.003994,"42":0.007988,"43":0.015976,"44":0,"45":0,"46":0.003994,"47":0.003994,"48":0,"49":0.295556,"50":0.011982,"51":0,"52":0.003994,"53":0.003994,"54":0.007988,"55":0.007988,"56":0.007988,"57":0.003994,"58":0.01997,"59":0.003994,"60":0.003994,"61":0.01997,"62":0.035946,"63":0.05991,"64":0.015976,"65":0.043934,"66":0.015976,"67":0.047928,"68":0.015976,"69":0.03994,"70":0.083874,"71":0.067898,"72":0.447328,"73":9.909114,"74":0.035946,"75":0.01997,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.003994,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.007988,"41":0.007988,"42":0.003994,"43":0.007988,"44":0.003994,"45":0.003994,"46":0,"47":0.003994,"48":0.003994,"49":0,"50":0.007988,"51":0,"52":0.011982,"53":0,"54":0.015976,"55":0,"56":0.003994,"57":0.007988,"58":0.003994,"59":0,"60":0.027958,"61":0.003994,"62":0.003994,"63":0.003994,"64":0.007988,"65":0.043934,"66":0.65901,"67":0.027958,"68":0.003994,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.003994,"31":0.003994,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.011982,"38":0.007988,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.003994,"50":0,"51":0.003994,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.343484,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.007988,"9":0.003994,"10":0.027958,"11":0.023964,"12":0.563154,_:"0","3.1":0,"3.2":0,"5.1":0.007988,"6.1":0,"7.1":0,"9.1":0.027958,"10.1":0.043934,"11.1":0.05991,"12.1":0.247628},G:{"8":0.095299508856199,"3.2":0.0061882797958571,"4.0-4.1":0.0037129678775143,"4.2-4.3":0.0012376559591714,"5.0-5.1":0.012376559591714,"6.0-6.1":0.0061882797958571,"7.0-7.1":0.022277807265086,"8.1-8.4":0.048268582407685,"9.0-9.2":0.028466087060943,"9.3":0.23639228820174,"10.0-10.2":0.13119153167217,"10.3":0.31312695767037,"11.0-11.2":0.38614865926148,"11.3-11.4":0.79333746982888,"12.0-12.1":4.7897285619934,"12.2":5.4939548027619},I:{"3":0.00035690927419355,"4":0.051394935483871,_:"67","2.1":0.0024983649193548,"2.2":0.0042829112903226,"2.3":0.0024983649193548,"4.1":0.025697467741935,"4.2-4.3":0.11135569354839,"4.4":0,"4.4.3-4.4.4":0.15596935282258},A:{"6":0,"7":0,"8":0.024405732718894,"9":0.024405732718894,"10":0.012202866359447,"11":0.82165966820276,"5.5":0},B:{"12":0.003994,"13":0.007988,"14":0.015976,"15":0.027958,"16":0.03994,"17":0.431352,"18":0.115826},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.58820626271186,"5.0-5.4":0.030424461864407,"6.2-6.4":0.15212230932203,"7.2-7.4":0.27382015677966,"8.2":1.5617890423729,"9.2":2.1804197669492},N:{"10":0.033033,"11":0.033033},J:{"7":0,"10":0.012012},S:{"2.5":0},R:{_:"0"},M:{"0":0.09009},O:{"0":12.58257},Q:{"1.2":0.006006},H:{"0":1.2111377628866},L:{"0":45.691188}};


/***/ }),
/* 435 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0.025908,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.012954,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.012954,"30":0,"31":0,"32":0,"33":0,"34":0.110109,"35":0,"36":0,"37":0,"38":0.051816,"39":0.012954,"40":0.006477,"41":0,"42":0,"43":0,"44":0.025908,"45":0,"46":0,"47":0.006477,"48":0.012954,"49":0.336804,"50":0.012954,"51":0,"52":0.006477,"53":0.174879,"54":0.116586,"55":0.058293,"56":0.019431,"57":0.006477,"58":0.032385,"59":0.025908,"60":0,"61":0.077724,"62":0.051816,"63":0.136017,"64":0.012954,"65":0.077724,"66":0.019431,"67":0.090678,"68":0.090678,"69":0.071247,"70":0.174879,"71":0.142494,"72":0.978027,"73":19.482816,"74":0.012954,"75":0.045339,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0.006477,"9":0,"10":0,"11":0,"12":0,"13":0.006477,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.012954,"32":0.019431,"33":0,"34":0,"35":0,"36":0.006477,"37":0,"38":0.006477,"39":0,"40":0,"41":0.025908,"42":0.006477,"43":0.012954,"44":0.006477,"45":0.006477,"46":0,"47":0.032385,"48":0.174879,"49":0.077724,"50":0.019431,"51":0.006477,"52":0.459867,"53":0.006477,"54":0.012954,"55":0.032385,"56":0.110109,"57":0.032385,"58":0.006477,"59":0.012954,"60":0.19431,"61":0.032385,"62":0.103632,"63":0.032385,"64":0.142494,"65":0.233172,"66":5.175123,"67":0.265557,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.006477,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.025908,"32":0,"33":0,"34":0,"35":0,"36":0.006477,"37":0,"38":0,"39":0,"40":0.025908,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.6477,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.012954,"5":0.038862,"6":0,"7":0,"8":0.019431,"9":0.006477,"10":0.06477,"11":0.025908,"12":1.68402,_:"0","3.1":0,"3.2":0,"5.1":0.012954,"6.1":0.012954,"7.1":0,"9.1":0.090678,"10.1":0.310896,"11.1":0.718947,"12.1":1.191768},G:{"8":0.10398557580306,"3.2":0.006752310117082,"4.0-4.1":0.0040513860702492,"4.2-4.3":0.0013504620234164,"5.0-5.1":0.013504620234164,"6.0-6.1":0.006752310117082,"7.0-7.1":0.024308316421495,"8.1-8.4":0.052668018913239,"9.0-9.2":0.031060626538577,"9.3":0.25793824647253,"10.0-10.2":0.14314897448214,"10.3":0.34166689192435,"11.0-11.2":0.42134415130591,"11.3-11.4":0.86564615700991,"12.0-12.1":5.2262880306214,"12.2":5.9947009219454},I:{"3":0.00074173286290323,"4":0.10680953225806,_:"67","2.1":0.0051921300403226,"2.2":0.0089007943548387,"2.3":0.0051921300403226,"4.1":0.053404766129032,"4.2-4.3":0.23142065322581,"4.4":0,"4.4.3-4.4.4":0.32413726108871},A:{"6":0,"7":0,"8":0.032385,"9":0.025908,"10":0.025908,"11":1.107567,"5.5":0},B:{"12":0.006477,"13":0.019431,"14":0.032385,"15":0.110109,"16":0.077724,"17":1.787652,"18":0.369189},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.47950020884521,"5.0-5.4":0.031966680589681,"6.2-6.4":0.095900041769042,"7.2-7.4":0.22376676412776,"8.2":1.6196451498771,"9.2":1.8860341547912},N:{"10":0,"11":0.028184},J:{"7":0,"10":0.003523},S:{"2.5":0.003523},R:{_:"0"},M:{"0":0.172627},O:{"0":0.056368},Q:{"1.2":0},H:{"0":0.12007255670103},L:{"0":38.620559}};


/***/ }),
/* 436 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005646,"23":0,"24":0,"25":0,"26":0.005646,"27":0,"28":0,"29":0.361344,"30":0.005646,"31":0,"32":0,"33":0,"34":0.005646,"35":0,"36":0,"37":0.011292,"38":0.016938,"39":0.005646,"40":0.005646,"41":0.016938,"42":0,"43":0.011292,"44":0,"45":0,"46":0.011292,"47":0,"48":0.005646,"49":0.76221,"50":0.005646,"51":0.011292,"52":0.005646,"53":0.016938,"54":0.005646,"55":0.016938,"56":0.005646,"57":0.005646,"58":0.050814,"59":0.016938,"60":0.011292,"61":0.242778,"62":0.045168,"63":0.090336,"64":0.062106,"65":0.05646,"66":0.033876,"67":0.062106,"68":0.062106,"69":0.067752,"70":0.090336,"71":0.203256,"72":0.767856,"73":19.22463,"74":0.033876,"75":0.016938,_:"76"},C:{"2":0,"3":0.005646,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.005646,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0.005646,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.005646,"33":0,"34":0,"35":0.005646,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.005646,"43":0.011292,"44":0,"45":0.016938,"46":0.005646,"47":0.016938,"48":0.033876,"49":0.005646,"50":0.011292,"51":0.005646,"52":0.259716,"53":0.005646,"54":0.005646,"55":0.005646,"56":0.02823,"57":0.02823,"58":0.016938,"59":0.016938,"60":0.073398,"61":0.011292,"62":0.016938,"63":0.033876,"64":0.062106,"65":0.19761,"66":3.297264,"67":0.039522,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.022584,"37":0,"38":0,"39":0,"40":0.005646,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.005646,"49":0.005646,"50":0,"51":0.005646,"52":0,"53":0,"54":0,"55":0,"56":0.005646,"57":0.005646,"58":1.343748,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005646},E:{"4":0,"5":0,"6":0,"7":0.050814,"8":0.005646,"9":0,"10":0.011292,"11":0.016938,"12":0.271008,_:"0","3.1":0,"3.2":0,"5.1":0.005646,"6.1":0,"7.1":0,"9.1":0.005646,"10.1":0.022584,"11.1":0.05646,"12.1":0.208902},G:{"8":0.09259371359952,"3.2":0.0060125788051636,"4.0-4.1":0.0036075472830982,"4.2-4.3":0.0012025157610327,"5.0-5.1":0.012025157610327,"6.0-6.1":0.0060125788051636,"7.0-7.1":0.021645283698589,"8.1-8.4":0.046898114680276,"9.0-9.2":0.027657862503753,"9.3":0.22968051035725,"10.0-10.2":0.12746667066947,"10.3":0.30423648754128,"11.0-11.2":0.37518491744221,"11.3-11.4":0.77081260282198,"12.0-12.1":4.6537359951966,"12.2":5.3379674632243},I:{"3":0.00055848588709677,"4":0.080421967741935,_:"67","2.1":0.0039094012096774,"2.2":0.0067018306451613,"2.3":0.0039094012096774,"4.1":0.040210983870968,"4.2-4.3":0.17424759677419,"4.4":0,"4.4.3-4.4.4":0.24405833266129},A:{"6":0,"7":0,"8":0.08009792,"9":0.01144256,"10":0.0286064,"11":0.73804512,"5.5":0},B:{"12":0.005646,"13":0.011292,"14":0.022584,"15":0.039522,"16":0.033876,"17":0.570246,"18":0.276654},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.39751655648536,"5.0-5.4":0.050963661087866,"6.2-6.4":0.11212005439331,"7.2-7.4":0.31597469874477,"8.2":2.0181609790795,"9.2":1.9773900502092},N:{"10":0,"11":0.08708},J:{"7":0,"10":0.013062},S:{"2.5":0},R:{_:"0"},M:{"0":0.230762},O:{"0":0.091434},Q:{"1.2":0.004354},H:{"0":0.31740061512027},L:{"0":47.813378}};


/***/ }),
/* 437 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005644,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.011288,"23":0,"24":0,"25":0,"26":0.011288,"27":0.005644,"28":0,"29":0.005644,"30":0,"31":0.005644,"32":0,"33":0.022576,"34":0.011288,"35":0,"36":0.005644,"37":0.005644,"38":0.016932,"39":0,"40":0.005644,"41":0,"42":0,"43":0.016932,"44":0,"45":0,"46":0.011288,"47":0,"48":0.011288,"49":1.179596,"50":0.005644,"51":0.005644,"52":0.005644,"53":0.011288,"54":0,"55":0.011288,"56":0.016932,"57":0.005644,"58":0.39508,"59":0.005644,"60":0.011288,"61":0.08466,"62":0.033864,"63":0.067728,"64":0.033864,"65":0.073372,"66":0.022576,"67":0.05644,"68":0.050796,"69":0.067728,"70":0.107236,"71":0.191896,"72":0.615196,"73":18.343,"74":0.045152,"75":0.022576,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005644,"35":0.005644,"36":0,"37":0,"38":0.005644,"39":0.005644,"40":0,"41":0.005644,"42":0.005644,"43":0.011288,"44":0,"45":0.011288,"46":0,"47":0.02822,"48":0.045152,"49":0.011288,"50":0.045152,"51":0.011288,"52":0.4233,"53":0.005644,"54":0.005644,"55":0.011288,"56":0.062084,"57":0.016932,"58":0.02822,"59":0.022576,"60":0.067728,"61":0.022576,"62":0.016932,"63":0.033864,"64":0.039508,"65":0.208828,"66":4.074968,"67":0.073372,"68":0,"3.5":0,"3.6":0.005644},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.062084,"37":0,"38":0,"39":0,"40":0.005644,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.011288,"49":0.005644,"50":0,"51":0.011288,"52":0,"53":0,"54":0.005644,"55":0,"56":0.005644,"57":0.022576,"58":1.676268,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.016932},E:{"4":0,"5":0,"6":0,"7":0.005644,"8":0,"9":0,"10":0.005644,"11":0.005644,"12":0.203184,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.005644,"10.1":0.02822,"11.1":0.05644,"12.1":0.163676},G:{"8":0.049216260982688,"3.2":0.0031958611027719,"4.0-4.1":0.0019175166616632,"4.2-4.3":0.00063917222055439,"5.0-5.1":0.0063917222055439,"6.0-6.1":0.0031958611027719,"7.0-7.1":0.011505099969979,"8.1-8.4":0.024927716601621,"9.0-9.2":0.014700961072751,"9.3":0.12208189412589,"10.0-10.2":0.067752255378765,"10.3":0.16171057180026,"11.0-11.2":0.19942173281297,"11.3-11.4":0.40970939337536,"12.0-12.1":2.4735964935455,"12.2":2.8372854870409},I:{"3":0.00098518951612903,"4":0.14186729032258,_:"67","2.1":0.0068963266129032,"2.2":0.011822274193548,"2.3":0.0068963266129032,"4.1":0.07093364516129,"4.2-4.3":0.30737912903226,"4.4":0,"4.4.3-4.4.4":0.43052781854839},A:{"6":0,"7":0,"8":0.07002386440678,"9":0.011670644067797,"10":0.017505966101695,"11":0.58936752542373,"5.5":0},B:{"12":0.005644,"13":0.011288,"14":0.039508,"15":0.095948,"16":0.022576,"17":0.344284,"18":0.146744},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.32594356886228,"5.0-5.4":0.020371473053892,"6.2-6.4":0.081485892215569,"7.2-7.4":0.18334325748503,"8.2":1.2630313293413,"9.2":1.5278604790419},N:{"10":0.0115434,"11":0.2193246},J:{"7":0,"10":0.02178},S:{"2.5":0},R:{_:"0"},M:{"0":0.139392},O:{"0":0.052272},Q:{"1.2":0.004356},H:{"0":0.56086119587629},L:{"0":54.482044}};


/***/ }),
/* 438 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.007996,"12":0,"13":0,"14":0,"15":0.007996,"16":0,"17":0.007996,"18":0.007996,"19":0.007996,"20":0,"21":0.007996,"22":0.007996,"23":0.007996,"24":0.007996,"25":0.007996,"26":0.007996,"27":0.007996,"28":0.007996,"29":0.591704,"30":0,"31":0,"32":0,"33":0.007996,"34":0.007996,"35":0.007996,"36":0.007996,"37":0,"38":0.015992,"39":0.007996,"40":0.023988,"41":0.047976,"42":0.007996,"43":0.023988,"44":0.015992,"45":0.055972,"46":0.007996,"47":0.015992,"48":0.055972,"49":1.223388,"50":0.015992,"51":0.127936,"52":0.015992,"53":0.015992,"54":0.031984,"55":0.047976,"56":0.071964,"57":0.03998,"58":0.047976,"59":0.055972,"60":0.071964,"61":1.503248,"62":0.103948,"63":0.23988,"64":0.143928,"65":0.167916,"66":0.087956,"67":0.15992,"68":0.151924,"69":0.183908,"70":0.231884,"71":0.407796,"72":1.51924,"73":29.889048,"74":0.047976,"75":0.055972,_:"76"},C:{"2":0,"3":0.007996,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.007996,"13":0,"14":0,"15":0.007996,"16":0.007996,"17":0,"18":0,"19":0.007996,"20":0,"21":0.007996,"22":0.007996,"23":0,"24":0.007996,"25":0.007996,"26":0.007996,"27":0,"28":0,"29":0,"30":0.007996,"31":0.007996,"32":0.007996,"33":0,"34":0,"35":0.007996,"36":0.007996,"37":0,"38":0.007996,"39":0.015992,"40":0.007996,"41":0.007996,"42":0.007996,"43":0.015992,"44":0.007996,"45":0.03998,"46":0.031984,"47":0.031984,"48":0.103948,"49":0.015992,"50":0.03998,"51":0.023988,"52":0.415792,"53":0.015992,"54":0.023988,"55":0.015992,"56":0.07996,"57":0.063968,"58":0.031984,"59":0.031984,"60":0.151924,"61":0.063968,"62":0.031984,"63":0.063968,"64":0.07996,"65":0.303848,"66":3.270364,"67":0.047976,"68":0,"3.5":0.015992,"3.6":0.03998},F:{"9":0,"11":0,"12":0.015992,"15":0,"16":0,"17":0,"18":0.007996,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.007996,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.007996,"35":0.007996,"36":0.11994,"37":0.015992,"38":0.007996,"39":0.007996,"40":0,"41":0.007996,"42":0.007996,"43":0.007996,"44":0,"45":0.007996,"46":0.007996,"47":0.007996,"48":0.007996,"49":0.015992,"50":0.007996,"51":0.007996,"52":0.007996,"53":0.015992,"54":0.007996,"55":0.007996,"56":0.047976,"57":0.031984,"58":4.365816,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0.007996,"11.1":0,"11.5":0,"11.6":0.015992,"12.1":0.087956},E:{"4":0.007996,"5":0.007996,"6":0,"7":0,"8":0.007996,"9":0.007996,"10":0.015992,"11":0.071964,"12":1.247376,_:"0","3.1":0,"3.2":0,"5.1":0.031984,"6.1":0,"7.1":0,"9.1":0.023988,"10.1":0.087956,"11.1":0.23988,"12.1":0.71964},G:{"8":0.066669008706094,"3.2":0.0043291564094866,"4.0-4.1":0.002597493845692,"4.2-4.3":0.00086583128189733,"5.0-5.1":0.0086583128189733,"6.0-6.1":0.0043291564094866,"7.0-7.1":0.015584963074152,"8.1-8.4":0.033767419993996,"9.0-9.2":0.019914119483639,"9.3":0.16537377484239,"10.0-10.2":0.091778115881117,"10.3":0.21905531432002,"11.0-11.2":0.27013935995197,"11.3-11.4":0.55499785169619,"12.0-12.1":3.3507670609427,"12.2":3.8434250603422},I:{"3":0.00083309677419355,"4":0.11996593548387,_:"67","2.1":0.0058316774193548,"2.2":0.0099971612903226,"2.3":0.0058316774193548,"4.1":0.059982967741935,"4.2-4.3":0.25992619354839,"4.4":0,"4.4.3-4.4.4":0.36406329032258},A:{"6":0.017094896551724,"7":0.017094896551724,"8":0.16240151724138,"9":0.051284689655172,"10":0.094021931034483,"11":0.89748206896552,"5.5":0},B:{"12":0.007996,"13":0.015992,"14":0.03998,"15":0.047976,"16":0.055972,"17":0.775612,"18":0.255872},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.12278353846154,"5.0-5.4":0.020463923076923,"6.2-6.4":0.040927846153846,"7.2-7.4":0.081855692307692,"8.2":0.43997434615385,"9.2":0.35811865384615},N:{"10":0.010878857142857,"11":0.065273142857143},J:{"7":0,"10":0.016032},S:{"2.5":0},R:{_:"0"},M:{"0":0.122244},O:{"0":0.527052},Q:{"1.2":0.016032},H:{"0":0.47051991752577},L:{"0":21.149724}};


/***/ }),
/* 439 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.008776,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.004388,"20":0,"21":0,"22":0.035104,"23":0,"24":0,"25":0.004388,"26":0,"27":0,"28":0.004388,"29":0,"30":0,"31":0,"32":0,"33":0.008776,"34":0.008776,"35":0.008776,"36":0,"37":0,"38":0,"39":0,"40":0.02194,"41":0.004388,"42":0,"43":0.1097,"44":0,"45":0,"46":0.013164,"47":0.004388,"48":0.004388,"49":0.035104,"50":0.004388,"51":0.004388,"52":0,"53":0.004388,"54":0,"55":0.017552,"56":0.004388,"57":0,"58":0.061432,"59":0.004388,"60":0.052656,"61":0.004388,"62":0.052656,"63":0.1097,"64":0.013164,"65":0.201848,"66":0.013164,"67":0.04388,"68":0.008776,"69":0.078984,"70":0.15358,"71":0.17552,"72":0.425636,"73":9.535124,"74":0.026328,"75":0.026328,_:"76"},C:{"2":0,"3":0.004388,"4":0.004388,"5":0,"6":0.004388,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.004388,"13":0.004388,"14":0.004388,"15":0,"16":0,"17":0,"18":0.004388,"19":0,"20":0.008776,"21":0.004388,"22":0.004388,"23":0.004388,"24":0,"25":0.004388,"26":0,"27":0.004388,"28":0,"29":0,"30":0.008776,"31":0.013164,"32":0,"33":0,"34":0.004388,"35":0.008776,"36":0,"37":0.008776,"38":0.004388,"39":0.004388,"40":0.078984,"41":0.008776,"42":0.004388,"43":0.02194,"44":0.02194,"45":0.008776,"46":0.004388,"47":0.06582,"48":0.02194,"49":0.013164,"50":0.013164,"51":0.004388,"52":0.026328,"53":0.004388,"54":0.004388,"55":0,"56":0.008776,"57":0.017552,"58":0.004388,"59":0.017552,"60":0.039492,"61":0.008776,"62":0.017552,"63":0.026328,"64":0.039492,"65":0.193072,"66":2.290536,"67":0.298384,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0.004388,"12":0,"15":0.004388,"16":0.013164,"17":0,"18":0.004388,"19":0.013164,"20":0.052656,"21":0,"22":0.004388,"23":0.070208,"24":0,"25":0,"26":0,"27":0,"28":0.004388,"29":0,"30":0.004388,"31":0,"32":0.008776,"33":0.004388,"34":0.004388,"35":0,"36":0.004388,"37":0.061432,"38":0.017552,"39":0,"40":0,"41":0,"42":0.004388,"43":0.004388,"44":0,"45":0.008776,"46":0,"47":0,"48":0,"49":0.004388,"50":0.004388,"51":0.013164,"52":0,"53":0,"54":0,"55":0,"56":0.013164,"57":0.04388,"58":1.097,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.004388,"12.1":0.08776},E:{"4":0,"5":0,"6":0,"7":0,"8":0.004388,"9":0,"10":0.013164,"11":0.030716,"12":0.381756,_:"0","3.1":0,"3.2":0,"5.1":0.013164,"6.1":0,"7.1":0.004388,"9.1":0.004388,"10.1":0.162356,"11.1":0.057044,"12.1":0.1097},G:{"8":0.028106348443911,"3.2":0.0018250875612929,"4.0-4.1":0.0010950525367757,"4.2-4.3":0.00036501751225858,"5.0-5.1":0.0036501751225858,"6.0-6.1":0.0018250875612929,"7.0-7.1":0.0065703152206545,"8.1-8.4":0.014235682978085,"9.0-9.2":0.0083954027819474,"9.3":0.069718344841389,"10.0-10.2":0.03869185629941,"10.3":0.092349430601421,"11.0-11.2":0.11388546382468,"11.3-11.4":0.23397622535775,"12.0-12.1":1.4126177724407,"12.2":1.6203127369158},I:{"3":0.0017984516129032,"4":0.25897703225806,_:"67","2.1":0.012589161290323,"2.2":0.021581419354839,"2.3":0.012589161290323,"4.1":0.12948851612903,"4.2-4.3":0.56111690322581,"4.4":0,"4.4.3-4.4.4":0.78592335483871},A:{"6":0,"7":0,"8":0.044290093457944,"9":0.0044290093457944,"10":0.022145046728972,"11":0.40303985046729,"5.5":0},B:{"12":0.078984,"13":0.127252,"14":0.070208,"15":0.035104,"16":0.162356,"17":0.57044,"18":0.144804},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.36258723178808,"5.0-5.4":0.070503072847682,"6.2-6.4":0.040287470198675,"7.2-7.4":0.24172482119205,"8.2":0.58416831788079,"9.2":0.22158108609272},N:{"10":0.022448,"11":0.134688},J:{"7":0,"10":0.067344},S:{"2.5":0.274988},R:{_:"0"},M:{"0":0.16836},O:{"0":3.25496},Q:{"1.2":0.011224},H:{"0":19.408677725086},L:{"0":38.503908}};


/***/ }),
/* 440 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.00389,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.0389,"30":0.00389,"31":0.01556,"32":0,"33":0.00389,"34":0.00389,"35":0,"36":0,"37":0,"38":0.00389,"39":0,"40":0.00389,"41":0.00389,"42":0,"43":0.02334,"44":0,"45":0,"46":0,"47":0.00778,"48":0.00389,"49":0.15171,"50":0,"51":0.00389,"52":0.01556,"53":0.00389,"54":0.02334,"55":0.01167,"56":0.00778,"57":0,"58":0.01945,"59":0.00389,"60":0.00778,"61":0.03501,"62":0.01167,"63":0.05057,"64":0.01556,"65":0.03501,"66":0.01167,"67":0.02723,"68":0.02334,"69":0.04279,"70":0.05446,"71":0.10892,"72":0.51737,"73":9.47604,"74":0.02723,"75":0.01945,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00389,"44":0,"45":0,"46":0,"47":0.00389,"48":0.02723,"49":0,"50":0,"51":0,"52":0.01945,"53":0,"54":0.00389,"55":0,"56":0.01167,"57":0.00389,"58":0.00389,"59":0,"60":0.01167,"61":0.00389,"62":0.00389,"63":0.00389,"64":0.00778,"65":0.05446,"66":0.77022,"67":0.01945,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.00389,"38":0.00389,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.00389,"49":0.00389,"50":0,"51":0.00389,"52":0,"53":0.00389,"54":0.00389,"55":0,"56":0.01167,"57":0.01167,"58":0.05446,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.01167,"9":0.05057,"10":0.01945,"11":0.03501,"12":0.5446,_:"0","3.1":0,"3.2":0,"5.1":0.13615,"6.1":0,"7.1":0,"9.1":0.01556,"10.1":0.05835,"11.1":0.12448,"12.1":0.2723},G:{"8":0.15387463324327,"3.2":0.0099918593015111,"4.0-4.1":0.0059951155809066,"4.2-4.3":0.0019983718603022,"5.0-5.1":0.019983718603022,"6.0-6.1":0.0099918593015111,"7.0-7.1":0.03597069348544,"8.1-8.4":0.077936502551786,"9.0-9.2":0.045962552786951,"9.3":0.38168902531772,"10.0-10.2":0.21182741719203,"10.3":0.50558808065646,"11.0-11.2":0.62349202041429,"11.3-11.4":1.2809563624537,"12.0-12.1":7.7336990993696,"12.2":8.8707726878815},I:{"3":0.00090616935483871,"4":0.13048838709677,_:"67","2.1":0.006343185483871,"2.2":0.010874032258065,"2.3":0.006343185483871,"4.1":0.065244193548387,"4.2-4.3":0.28272483870968,"4.4":0,"4.4.3-4.4.4":0.39599600806452},A:{"6":0,"7":0,"8":0.01556,"9":0.00778,"10":0.02334,"11":0.45513,"5.5":0},B:{"12":0.01556,"13":0.00778,"14":0.01556,"15":0.03501,"16":0.03112,"17":0.39289,"18":0.10503},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.61176855345912,"5.0-5.4":0.071372997903564,"6.2-6.4":0.19372670859539,"7.2-7.4":0.45882641509434,"8.2":1.7333442348008,"9.2":1.7945210901468},N:{"10":0,"11":0.01222},J:{"7":0,"10":0.01222},S:{"2.5":0},R:{_:"0"},M:{"0":0.09165},O:{"0":2.85337},Q:{"1.2":0.00611},H:{"0":0.10990651202749},L:{"0":53.61284}};


/***/ }),
/* 441 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0.003742,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.003742,"33":0.014968,"34":0.011226,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.003742,"41":0,"42":0,"43":0.003742,"44":0,"45":0,"46":0,"47":0.014968,"48":0,"49":0.07484,"50":0.014968,"51":0,"52":0,"53":0,"54":0,"55":0.041162,"56":0.003742,"57":0,"58":0.007484,"59":0,"60":0,"61":0,"62":0.003742,"63":0.086066,"64":0,"65":0,"66":0.007484,"67":0.003742,"68":0.007484,"69":0.007484,"70":0.01871,"71":0.033678,"72":0.22452,"73":5.583064,"74":0.026194,"75":0,_:"76"},C:{"2":0,"3":0.007484,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.003742,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.003742,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.014968,"47":0,"48":0.007484,"49":0,"50":0,"51":0,"52":0.01871,"53":0,"54":0,"55":0,"56":0.026194,"57":0,"58":0.014968,"59":0,"60":0.01871,"61":0.09355,"62":0.014968,"63":0,"64":0.007484,"65":0.138454,"66":0.733432,"67":0.127228,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0.011226,"20":0,"21":0,"22":0.003742,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.003742,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.048646,"38":0.003742,"39":0,"40":0,"41":0,"42":0,"43":0.007484,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.179616,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.089808},E:{"4":0,"5":0,"6":0,"7":0,"8":0.01871,"9":0,"10":0.014968,"11":0.003742,"12":0.05613,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.029936,"7.1":0,"9.1":0,"10.1":0.014968,"11.1":0.145938,"12.1":0.172132},G:{"8":0.024750664865406,"3.2":0.0016071860302212,"4.0-4.1":0.00096431161813269,"4.2-4.3":0.00032143720604423,"5.0-5.1":0.0032143720604423,"6.0-6.1":0.0016071860302212,"7.0-7.1":0.0057858697087962,"8.1-8.4":0.012536051035725,"9.0-9.2":0.0073930557390173,"9.3":0.061394506354448,"10.0-10.2":0.034072343840688,"10.3":0.08132361312919,"11.0-11.2":0.1002884082858,"11.3-11.4":0.20604124907435,"12.0-12.1":1.2439619873912,"12.2":1.4268597576303},I:{"3":0.0026830745967742,"4":0.38636274193548,_:"67","2.1":0.018781522177419,"2.2":0.03219689516129,"2.3":0.018781522177419,"4.1":0.19318137096774,"4.2-4.3":0.83711927419355,"4.4":0,"4.4.3-4.4.4":1.1725035987903},A:{"6":0,"7":0,"8":0.044904,"9":0.022452,"10":0.03742,"11":2.144166,"5.5":0},B:{"12":0.05613,"13":0.033678,"14":0.026194,"15":0.849434,"16":0.194584,"17":0.419104,"18":0.029936},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.1192387631579,"5.0-5.4":0.41975260526316,"6.2-6.4":0.389039,"7.2-7.4":0.84974307894737,"8.2":0.69617505263158,"9.2":0.1945195},N:{"10":0,"11":0.131418},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.143934},O:{"0":8.398236},Q:{"1.2":0.175224},H:{"0":8.2945381443299},L:{"0":50.920594}};


/***/ }),
/* 442 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.041526,"13":0.339129,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.006921,"24":0.006921,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.006921,"31":0.020763,"32":0,"33":0,"34":0.020763,"35":0,"36":0,"37":0,"38":0.013842,"39":0.131499,"40":0.290682,"41":0.034605,"42":0,"43":0.027684,"44":0,"45":0,"46":0,"47":0.006921,"48":0.062289,"49":2.346219,"50":0.006921,"51":0,"52":0.076131,"53":0,"54":0.006921,"55":0.006921,"56":0.083052,"57":0.166104,"58":0.394497,"59":0.013842,"60":0.145341,"61":0.249156,"62":2.747637,"63":1.287306,"64":0.982782,"65":0.55368,"66":0.020763,"67":0.034605,"68":0.013842,"69":0.615969,"70":0.055368,"71":0.089973,"72":0.685179,"73":16.776504,"74":0.020763,"75":0.020763,_:"76"},C:{"2":0,"3":0.006921,"4":0.06921,"5":0.055368,"6":0.055368,"7":0,"8":0,"9":0,"10":0.006921,"11":0,"12":0,"13":0.013842,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.083052,"25":0,"26":0,"27":0,"28":0,"29":0.006921,"30":0,"31":0.020763,"32":0,"33":0,"34":0,"35":0.124578,"36":0.013842,"37":0,"38":0.055368,"39":0,"40":0,"41":0,"42":0,"43":0.006921,"44":0,"45":0.041526,"46":0,"47":0.117657,"48":0.013842,"49":0.013842,"50":0.013842,"51":0.013842,"52":0.636732,"53":0,"54":0.006921,"55":0,"56":0.006921,"57":0.027684,"58":0.173025,"59":0.006921,"60":3.813471,"61":0.006921,"62":0.020763,"63":0.020763,"64":0.027684,"65":0.325287,"66":5.488353,"67":0.567522,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006921,"37":0.013842,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.013842,"45":0,"46":0,"47":0,"48":0,"49":0.006921,"50":0.006921,"51":0.055368,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.055368,"58":0.712863,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006921},E:{"4":0.006921,"5":0,"6":0,"7":0,"8":0.041526,"9":0,"10":0.020763,"11":0.006921,"12":0.27684,_:"0","3.1":0,"3.2":0,"5.1":0.034605,"6.1":0,"7.1":0.027684,"9.1":0,"10.1":0.173025,"11.1":0.020763,"12.1":0.283761},G:{"8":0.061407873711598,"3.2":0.0039875242669869,"4.0-4.1":0.0023925145601921,"4.2-4.3":0.00079750485339738,"5.0-5.1":0.0079750485339738,"6.0-6.1":0.0039875242669869,"7.0-7.1":0.014355087361153,"8.1-8.4":0.031102689282498,"9.0-9.2":0.01834261162814,"9.3":0.1523234269989,"10.0-10.2":0.084535514460122,"10.3":0.20176872790954,"11.0-11.2":0.24882151425998,"11.3-11.4":0.51120061102772,"12.0-12.1":3.0863437826479,"12.2":3.540124044231},I:{"3":0.00063521673387097,"4":0.091471209677419,_:"67","2.1":0.0044465171370968,"2.2":0.0076226008064516,"2.3":0.0044465171370968,"4.1":0.04573560483871,"4.2-4.3":0.19818762096774,"4.4":0,"4.4.3-4.4.4":0.27758971270161},A:{"6":0.0220606875,"7":0.08824275,"8":0.2573746875,"9":0.2426675625,"10":0.132364125,"11":1.2574591875,"5.5":0},B:{"12":0.339129,"13":0.06921,"14":0.200709,"15":0.110736,"16":0.103815,"17":0.62289,"18":0.103815},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.2964648687664,"5.0-5.4":0.051114632545932,"6.2-6.4":0.94050923884514,"7.2-7.4":0.38847120734908,"8.2":1.1449677690289,"9.2":1.0734072834646},N:{"10":0.01154625,"11":0.03463875},J:{"7":0,"10":0.03079},S:{"2.5":0},R:{_:"0"},M:{"0":0.76975},O:{"0":1.881269},Q:{"1.2":0.098528},H:{"0":0.55093467525773},L:{"0":32.047796}};


/***/ }),
/* 443 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0.00256,"6":0,"7":0,"8":0,"9":0.00256,"10":0,"11":0.00512,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00256,"23":0,"24":0,"25":0.00256,"26":0.01024,"27":0.00256,"28":0.14848,"29":0.01024,"30":0.00256,"31":0.00256,"32":0.00256,"33":0.01536,"34":0.00256,"35":0,"36":0.00256,"37":0.00256,"38":0.00512,"39":0,"40":0.01792,"41":0,"42":0,"43":0.10496,"44":0.00256,"45":0.00256,"46":0.00768,"47":0.00512,"48":0.00256,"49":0.0128,"50":0.00512,"51":0.00256,"52":0.00256,"53":0.00256,"54":0,"55":0.00768,"56":0.00768,"57":0.01536,"58":0.02304,"59":0.00256,"60":0.00512,"61":0.00256,"62":0.00512,"63":0.05632,"64":0.00768,"65":0.03072,"66":0.00768,"67":0.01792,"68":0.00768,"69":0.07168,"70":0.04864,"71":0.0512,"72":0.12032,"73":1.56416,"74":0.01536,"75":0.00256,_:"76"},C:{"2":0,"3":0.00512,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.00256,"12":0,"13":0.00256,"14":0,"15":0.00256,"16":0.00256,"17":0,"18":0.00256,"19":0.00256,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00256,"27":0.00256,"28":0,"29":0,"30":0.00512,"31":0,"32":0.00256,"33":0.00256,"34":0.00512,"35":0.00256,"36":0.00256,"37":0.00256,"38":0.00256,"39":0.00256,"40":0.00768,"41":0.00512,"42":0.00256,"43":0.01024,"44":0.00768,"45":0.01024,"46":0,"47":0.03584,"48":0.01536,"49":0.00512,"50":0.00512,"51":0.00256,"52":0.08704,"53":0.00256,"54":0.00512,"55":0.00768,"56":0.01024,"57":0.00512,"58":0.00256,"59":0.00256,"60":0.06144,"61":0.01024,"62":0.01024,"63":0.01024,"64":0.07424,"65":0.12288,"66":1.43872,"67":0.06656,"68":0,"3.5":0,"3.6":0.00512},F:{"9":0,"11":0,"12":0.06912,"15":0.00256,"16":0.00512,"17":0.00256,"18":0,"19":0.00512,"20":0.0128,"21":0,"22":0,"23":0.01024,"24":0,"25":0,"26":0,"27":0,"28":0.00256,"29":0,"30":0.00256,"31":0,"32":0.00256,"33":0.00256,"34":0,"35":0.00512,"36":0.00512,"37":0.00768,"38":0.01536,"39":0,"40":0,"41":0,"42":0.00512,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00512,"50":0,"51":0.00512,"52":0,"53":0,"54":0,"55":0,"56":0.00256,"57":0.00512,"58":0.48896,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0.00256,"11.1":0.00256,"11.5":0.01536,"11.6":0.00512,"12.1":0.05888},E:{"4":0,"5":0,"6":0,"7":0.01024,"8":0.09728,"9":0,"10":0.01024,"11":0.01024,"12":0.04864,_:"0","3.1":0,"3.2":0,"5.1":0.00768,"6.1":0,"7.1":0,"9.1":0.01792,"10.1":0.03072,"11.1":0.01536,"12.1":0.0384},G:{"8":0.054566516561593,"3.2":0.0035432802962073,"4.0-4.1":0.0021259681777244,"4.2-4.3":0.00070865605924147,"5.0-5.1":0.0070865605924147,"6.0-6.1":0.0035432802962073,"7.0-7.1":0.012755809066346,"8.1-8.4":0.027637586310417,"9.0-9.2":0.016299089362554,"9.3":0.13535330731512,"10.0-10.2":0.075117542279596,"10.3":0.17928998298809,"11.0-11.2":0.22110069048334,"11.3-11.4":0.45424853397378,"12.0-12.1":2.7424989492645,"12.2":3.1457242469729},I:{"3":0.006001935483871,"4":0.86427870967742,_:"67","2.1":0.042013548387097,"2.2":0.072023225806452,"2.3":0.042013548387097,"4.1":0.43213935483871,"4.2-4.3":1.8726038709677,"4.4":0,"4.4.3-4.4.4":2.6228458064516},A:{"6":0,"7":0,"8":0.08291296969697,"9":0.0051820606060606,"10":0.0077730909090909,"11":0.33165187878788,"5.5":0},B:{"12":0.01792,"13":0.01792,"14":0.0128,"15":0.01536,"16":0.01792,"17":0.10496,"18":0.0256},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.6598883801296,"5.0-5.4":0.2216573650108,"6.2-6.4":0.26195870410367,"7.2-7.4":0.46346539956803,"8.2":0.80602678185745,"9.2":0.25188336933045},N:{"10":0.023382857142857,"11":0.058457142857143},J:{"7":0,"10":0.01488},S:{"2.5":0},R:{_:"0"},M:{"0":0.13392},O:{"0":14.85768},Q:{"1.2":0.02976},H:{"0":12.263101443299},L:{"0":39.15576}};


/***/ }),
/* 444 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005788,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.011576,"30":0,"31":0,"32":0,"33":0,"34":0.011576,"35":0,"36":0,"37":0,"38":0.023152,"39":0,"40":0,"41":0.011576,"42":0,"43":0,"44":0,"45":0,"46":0.005788,"47":0.005788,"48":0,"49":0.138912,"50":0.005788,"51":0.02894,"52":0.040516,"53":0.011576,"54":0.017364,"55":0.017364,"56":0.05788,"57":0.005788,"58":0.011576,"59":0.034728,"60":0.011576,"61":0.081032,"62":0.017364,"63":0.034728,"64":0.017364,"65":0.034728,"66":0.034728,"67":0.092608,"68":0.046304,"69":0.081032,"70":0.092608,"71":0.382008,"72":2.7493,"73":13.202428,"74":0.05788,"75":0.005788,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.005788,"42":0,"43":0,"44":0,"45":0.005788,"46":0,"47":0.011576,"48":0.023152,"49":0,"50":0.005788,"51":0,"52":0.05788,"53":0,"54":0,"55":0,"56":0.017364,"57":0.005788,"58":0.005788,"59":0.005788,"60":0.138912,"61":0.005788,"62":0.011576,"63":0.011576,"64":0.023152,"65":0.162064,"66":1.62064,"67":0.017364,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.005788,"33":0,"34":0,"35":0,"36":0.005788,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.254672,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.005788,"8":0.017364,"9":0.005788,"10":0.167852,"11":0.133124,"12":2.43096,_:"0","3.1":0,"3.2":0,"5.1":0.005788,"6.1":0,"7.1":0,"9.1":0.138912,"10.1":0.619316,"11.1":0.480404,"12.1":1.556972},G:{"8":0.30922938016612,"3.2":0.020079829880917,"4.0-4.1":0.01204789792855,"4.2-4.3":0.0040159659761833,"5.0-5.1":0.040159659761833,"6.0-6.1":0.020079829880917,"7.0-7.1":0.0722873875713,"8.1-8.4":0.15662267307115,"9.0-9.2":0.092367217452217,"9.3":0.76704950145102,"10.0-10.2":0.42569239347543,"10.3":1.0160393919744,"11.0-11.2":1.2529813845692,"11.3-11.4":2.5742341907335,"12.0-12.1":15.541788327829,"12.2":17.826872968278},I:{"3":0.00033479838709677,"4":0.048210967741935,_:"67","2.1":0.0023435887096774,"2.2":0.0040175806451613,"2.3":0.0023435887096774,"4.1":0.024105483870968,"4.2-4.3":0.10445709677419,"4.4":0,"4.4.3-4.4.4":0.14630689516129},A:{"6":0,"7":0,"8":0.0058042584269663,"9":0.011608516853933,"10":0.011608516853933,"11":2.0372947078652,"5.5":0},B:{"12":0.005788,"13":0.011576,"14":0.040516,"15":0.121548,"16":0.416736,"17":1.933192,"18":0.503556},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.22973286575342,"5.0-5.4":0.04375864109589,"6.2-6.4":0.032818980821918,"7.2-7.4":0.16409490410959,"8.2":1.2580609315068,"9.2":2.2645096767123},N:{"10":0,"11":0.016848},J:{"7":0,"10":0.02106},S:{"2.5":0},R:{_:"0"},M:{"0":0.202176},O:{"0":0.037908},Q:{"1.2":0.004212},H:{"0":0.15950597938144},L:{"0":22.09262}};


/***/ }),
/* 445 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005123,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005123,"23":0,"24":0,"25":0,"26":0.005123,"27":0,"28":0,"29":0.066599,"30":0,"31":0,"32":0,"33":0,"34":0.030738,"35":0,"36":0.005123,"37":0,"38":0.046107,"39":0,"40":0.020492,"41":0.010246,"42":0,"43":0.005123,"44":0,"45":0.005123,"46":0.005123,"47":0,"48":0.005123,"49":0.691605,"50":0.005123,"51":0.005123,"52":0.010246,"53":0.030738,"54":0.025615,"55":0.030738,"56":0.030738,"57":0.061476,"58":0.030738,"59":0.010246,"60":0.015369,"61":0.435455,"62":0.030738,"63":0.128075,"64":0.030738,"65":0.087091,"66":0.035861,"67":0.107583,"68":0.071722,"69":0.087091,"70":0.092214,"71":0.245904,"72":1.224397,"73":13.990913,"74":0.030738,"75":0.010246,_:"76"},C:{"2":0.005123,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.005123,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.005123,"35":0.005123,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.005123,"46":0,"47":0.005123,"48":0.066599,"49":0.010246,"50":0.010246,"51":0.005123,"52":0.107583,"53":0.005123,"54":0.005123,"55":0,"56":0.015369,"57":0.015369,"58":0.005123,"59":0.010246,"60":0.046107,"61":0.010246,"62":0.030738,"63":0.010246,"64":0.015369,"65":0.107583,"66":1.260258,"67":0.010246,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.005123,"33":0,"34":0,"35":0,"36":0,"37":0.128075,"38":0.010246,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.005123,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.179305,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.035861},E:{"4":0,"5":0,"6":0,"7":0.005123,"8":0.040984,"9":0.005123,"10":0.025615,"11":0.05123,"12":0.76845,_:"0","3.1":0,"3.2":0,"5.1":0.097337,"6.1":0,"7.1":0,"9.1":0.035861,"10.1":0.107583,"11.1":0.184428,"12.1":0.46107},G:{"8":0.2117937049935,"3.2":0.013752837986591,"4.0-4.1":0.0082517027919544,"4.2-4.3":0.0027505675973181,"5.0-5.1":0.027505675973181,"6.0-6.1":0.013752837986591,"7.0-7.1":0.049510216751726,"8.1-8.4":0.10727213629541,"9.0-9.2":0.063263054738317,"9.3":0.52535841108776,"10.0-10.2":0.29156016531572,"10.3":0.69589360212148,"11.0-11.2":0.85817709036325,"11.3-11.4":1.7631138298809,"12.0-12.1":10.644696601621,"12.2":12.209769564495},I:{"3":0.00059227822580645,"4":0.085288064516129,_:"67","2.1":0.0041459475806452,"2.2":0.0071073387096774,"2.3":0.0041459475806452,"4.1":0.042644032258065,"4.2-4.3":0.18479080645161,"4.4":0,"4.4.3-4.4.4":0.25882558467742},A:{"6":0,"7":0,"8":0.02093554978355,"9":0.0418710995671,"10":0.0418710995671,"11":1.1043502510823,"5.5":0},B:{"12":0,"13":0.005123,"14":0.015369,"15":0.015369,"16":0.035861,"17":0.712097,"18":0.174182},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.3330343006993,"5.0-5.4":0.032229125874126,"6.2-6.4":0.032229125874126,"7.2-7.4":0.19337475524476,"8.2":1.2999080769231,"9.2":2.7179896153846},N:{"10":0.0121925,"11":0.0121925},J:{"7":0,"10":0.126802},S:{"2.5":0},R:{_:"0"},M:{"0":0.302374},O:{"0":1.41433},Q:{"1.2":0.063401},H:{"0":1.2097138728522},L:{"0":32.855249}};


/***/ }),
/* 446 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.08358,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.259098,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.175518,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.601776,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":2.239944,"65":0,"66":0,"67":0.601776,"68":0.685356,"69":0.601776,"70":5.68344,"71":0,"72":0.685356,"73":38.170986,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.08358,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1.37907,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0},G:{"8":0.029532447313119,"3.2":0.0019176913839688,"4.0-4.1":0.0011506148303813,"4.2-4.3":0.00038353827679376,"5.0-5.1":0.0038353827679376,"6.0-6.1":0.0019176913839688,"7.0-7.1":0.0069036889822876,"8.1-8.4":0.014957992794956,"9.0-9.2":0.0088213803662564,"9.3":0.073255810867607,"10.0-10.2":0.040655057340138,"10.3":0.09703518402882,"11.0-11.2":0.11966394235965,"11.3-11.4":0.2458480354248,"12.0-12.1":1.4842931311918,"12.2":1.7025264106875},I:{"3":0,"4":0,_:"67","2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},A:{"6":0,"7":0.342678,"8":0.342678,"9":0.685356,"10":0,"11":12.921468,"5.5":0},B:{"12":1.203552,"13":1.119972,"14":0,"15":0,"16":0.175518,"17":0,"18":0.342678},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0.105088},Q:{"1.2":0},H:{"0":0},L:{"0":27.551688}};


/***/ }),
/* 447 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.040248,"30":0,"31":0,"32":0,"33":0,"34":0.006708,"35":0,"36":0.013416,"37":0.013416,"38":0.006708,"39":0,"40":0.006708,"41":0.006708,"42":0,"43":0.013416,"44":0,"45":0,"46":0.114036,"47":0.006708,"48":0,"49":0.389064,"50":0.006708,"51":0.006708,"52":0.006708,"53":0.006708,"54":0.006708,"55":0.013416,"56":0.026832,"57":0.013416,"58":0.020124,"59":0.026832,"60":0.020124,"61":0.576888,"62":0.026832,"63":0.053664,"64":0.013416,"65":0.046956,"66":0.046956,"67":0.060372,"68":0.040248,"69":0.073788,"70":0.120744,"71":0.207948,"72":1.1739,"73":24.242712,"74":0.087204,"75":0.020124,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.013416,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.006708,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006708,"44":0,"45":0.006708,"46":0,"47":0.013416,"48":0.026832,"49":0,"50":0.03354,"51":0.013416,"52":0.288444,"53":0.006708,"54":0.026832,"55":0.06708,"56":0.020124,"57":0.03354,"58":0.013416,"59":0.10062,"60":0.140868,"61":0.040248,"62":0.013416,"63":0.06708,"64":0.053664,"65":0.321984,"66":6.84216,"67":0.060372,"68":0.006708,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.006708,"33":0,"34":0,"35":0,"36":0.013416,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.006708,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.013416,"58":0.791544,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006708},E:{"4":0,"5":0,"6":0,"7":0.006708,"8":0.013416,"9":0.046956,"10":0.03354,"11":0.046956,"12":1.026324,_:"0","3.1":0,"3.2":0,"5.1":0.006708,"6.1":0.006708,"7.1":0,"9.1":0.040248,"10.1":0.087204,"11.1":0.1677,"12.1":0.563472},G:{"8":0.072456098468928,"3.2":0.0047049414590213,"4.0-4.1":0.0028229648754128,"4.2-4.3":0.00094098829180426,"5.0-5.1":0.0094098829180426,"6.0-6.1":0.0047049414590213,"7.0-7.1":0.016937789252477,"8.1-8.4":0.036698543380366,"9.0-9.2":0.021642730711498,"9.3":0.17972876373461,"10.0-10.2":0.099744758931252,"10.3":0.23807003782648,"11.0-11.2":0.29358834704293,"11.3-11.4":0.60317349504653,"12.0-12.1":3.6416246892825,"12.2":4.1770470273191},I:{"3":0.00078329032258065,"4":0.11279380645161,_:"67","2.1":0.0054830322580645,"2.2":0.0093994838709677,"2.3":0.0054830322580645,"4.1":0.056396903225806,"4.2-4.3":0.24438658064516,"4.4":0,"4.4.3-4.4.4":0.34229787096774},A:{"6":0.006708,"7":0,"8":0.020124,"9":0.013416,"10":0.020124,"11":2.944812,"5.5":0},B:{"12":0.006708,"13":0.040248,"14":0.040248,"15":0.060372,"16":0.073788,"17":1.220856,"18":0.389064},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.15313858895706,"5.0-5.4":0.030627717791411,"6.2-6.4":0.030627717791411,"7.2-7.4":0.17355706748466,"8.2":1.245527190184,"9.2":1.6947337177914},N:{"10":0,"11":0.079008},J:{"7":0,"10":0.009876},S:{"2.5":0},R:{_:"0"},M:{"0":0.204104},O:{"0":0.026336},Q:{"1.2":0},H:{"0":0.17141591065292},L:{"0":39.687992}};


/***/ }),
/* 448 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.013298,"22":0.013298,"29":0.073139,"34":0.026596,"37":0.013298,"38":0.053192,"39":0.006649,"41":0.019947,"43":0.026596,"44":0.006649,"46":0.006649,"47":0.013298,"48":0.013298,"49":0.917562,"52":0.006649,"53":0.053192,"55":0.019947,"56":0.013298,"57":0.006649,"58":0.093086,"59":0.013298,"61":0.026596,"62":0.053192,"63":0.119682,"64":0.06649,"65":0.039894,"66":0.033245,"67":0.093086,"68":0.126331,"69":0.059841,"70":0.113033,"71":0.226066,"72":1.615707,"73":37.872704,"74":0.053192,"75":0.019947,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 30 31 32 33 35 36 40 42 45 50 51 54 60 76"},C:{"2":0.013298,"13":0.006649,"33":0.006649,"38":0.013298,"39":0.013298,"41":0.006649,"43":0.026596,"45":0.019947,"47":0.026596,"48":0.026596,"49":0.086437,"50":0.026596,"51":0.013298,"52":0.445483,"53":0.013298,"54":0.006649,"55":0.006649,"56":0.073139,"57":0.046543,"58":0.026596,"59":0.013298,"60":0.246013,"61":0.046543,"62":0.019947,"63":0.053192,"64":0.106384,"65":0.418887,"66":9.022693,"67":0.053192,"68":0.006649,_:"3 4 5 6 7 8 9 10 11 12 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36 37 40 42 44 46 3.5","3.6":0.033245},F:{"36":0.059841,"48":0.006649,"57":0.013298,"58":3.357745,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 49 50 51 52 53 54 55 56 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.039894},E:{"4":0,"8":0.019947,"9":0.013298,"10":0.013298,"11":0.039894,"12":1.788581,_:"0 5 6 7 3.1 3.2 5.1 6.1 7.1","9.1":0.026596,"10.1":0.126331,"11.1":0.26596,"12.1":1.236714},G:{"8":0.043262703892725,"3.2":0.0028092664865406,"4.0-4.1":0.0016855598919243,"4.2-4.3":0.00056185329730812,"5.0-5.1":0.0056185329730812,"6.0-6.1":0.0028092664865406,"7.0-7.1":0.010113359351546,"8.1-8.4":0.021912278595017,"9.0-9.2":0.012922625838087,"9.3":0.10731397978585,"10.0-10.2":0.05955644951466,"10.3":0.14214888421895,"11.0-11.2":0.17529822876013,"11.3-11.4":0.3601479635745,"12.0-12.1":2.1743722605824,"12.2":2.4940667867507},I:{"3":0.00033790322580645,"4":0.048658064516129,_:"67","2.1":0.0023653225806452,"2.2":0.0040548387096774,"2.3":0.0023653225806452,"4.1":0.024329032258065,"4.2-4.3":0.10542580645161,"4.4":0,"4.4.3-4.4.4":0.14766370967742},A:{"8":0.087627592286501,"9":0.020221752066116,"10":0.026962336088154,"11":2.3120203195592,_:"6 7 5.5"},B:{"12":0.013298,"13":0.019947,"14":0.026596,"15":0.046543,"16":0.139629,"17":1.482727,"18":0.638304},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.30513553667954,"5.0-5.4":0.04208766023166,"6.2-6.4":0.031565745173745,"7.2-7.4":0.1367848957529,"8.2":1.1468887413127,"9.2":1.0627134208494},N:{"10":0.0121925,"11":0.046928},J:{"7":0,"10":0.013408},S:{_:"2.5"},R:{_:"0"},M:{"0":0.177656},O:{"0":0.087152},Q:{_:"1.2"},H:{"0":0.35225373195876},L:{"0":25.234232}};


/***/ }),
/* 449 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003268,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.003268,"23":0,"24":0,"25":0,"26":0.022876,"27":0,"28":0,"29":0.003268,"30":0,"31":0,"32":0,"33":0.022876,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.055556,"41":0,"42":0,"43":0.09804,"44":0,"45":0,"46":0,"47":0.003268,"48":0,"49":0.009804,"50":0,"51":0,"52":0.009804,"53":0.006536,"54":0,"55":0.022876,"56":0,"57":0,"58":0.035948,"59":0.003268,"60":0.104576,"61":0,"62":0.003268,"63":0.137256,"64":0.009804,"65":0.3268,"66":0.006536,"67":0.022876,"68":0.003268,"69":0.029412,"70":0.03268,"71":0.075164,"72":0.199348,"73":4.29742,"74":0.019608,"75":0.006536,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0.003268,"7":0,"8":0,"9":0,"10":0,"11":0.003268,"12":0.019608,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.003268,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.003268,"27":0.003268,"28":0,"29":0.003268,"30":0.003268,"31":0,"32":0,"33":0.006536,"34":0.003268,"35":0,"36":0,"37":0.003268,"38":0,"39":0,"40":0.006536,"41":0,"42":0,"43":0.013072,"44":0.006536,"45":0.01634,"46":0,"47":0.013072,"48":0.013072,"49":0.003268,"50":0.003268,"51":0,"52":0.003268,"53":0,"54":0,"55":0.003268,"56":0.009804,"57":0.003268,"58":0.003268,"59":0.003268,"60":0.03268,"61":0,"62":0.006536,"63":0.003268,"64":0.026144,"65":0.052288,"66":1.0621,"67":0.127452,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.009804,"15":0.003268,"16":0.01634,"17":0.006536,"18":0.003268,"19":0.003268,"20":0.186276,"21":0.003268,"22":0.003268,"23":0.101308,"24":0,"25":0,"26":0.003268,"27":0,"28":0.003268,"29":0.003268,"30":0.009804,"31":0,"32":0.003268,"33":0.006536,"34":0.003268,"35":0.003268,"36":0.003268,"37":0.019608,"38":0.009804,"39":0.003268,"40":0.003268,"41":0,"42":0.003268,"43":0,"44":0,"45":0.045752,"46":0,"47":0,"48":0,"49":0.006536,"50":0,"51":0.01634,"52":0,"53":0.003268,"54":0.003268,"55":0,"56":0.003268,"57":0.013072,"58":1.179748,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0.006536,"12.1":0.810464},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.003268,"10":0,"11":0.026144,"12":0.052288,_:"0","3.1":0,"3.2":0,"5.1":0.17974,"6.1":0.003268,"7.1":0,"9.1":0.003268,"10.1":0.01634,"11.1":0.022876,"12.1":0.183008},G:{"8":0.0224463668568,"3.2":0.0014575562894026,"4.0-4.1":0.00087453377364155,"4.2-4.3":0.00029151125788052,"5.0-5.1":0.0029151125788052,"6.0-6.1":0.0014575562894026,"7.0-7.1":0.0052472026418493,"8.1-8.4":0.01136893905734,"9.0-9.2":0.0067047589312519,"9.3":0.055678650255179,"10.0-10.2":0.030900193335335,"10.3":0.073752348243771,"11.0-11.2":0.090951512458721,"11.3-11.4":0.18685871630141,"12.0-12.1":1.1281485679976,"12.2":1.2940184737316},I:{"3":0.0020491370967742,"4":0.29507574193548,_:"67","2.1":0.014343959677419,"2.2":0.02458964516129,"2.3":0.014343959677419,"4.1":0.14753787096774,"4.2-4.3":0.63933077419355,"4.4":0,"4.4.3-4.4.4":0.89547291129032},A:{"6":0,"7":0,"8":0.050770714285714,"9":0,"10":0.020308285714286,"11":0.20985228571429,"5.5":0},B:{"12":0.101308,"13":0.068628,"14":0.039216,"15":0.039216,"16":0.04902,"17":0.45752,"18":0.0817},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.30782612903226,"5.0-5.4":0.061565225806452,"6.2-6.4":0.010260870967742,"7.2-7.4":0.082086967741935,"8.2":0.49252180645161,"9.2":0.318087},N:{"10":0.052894285714286,"11":0.16926171428571},J:{"7":0,"10":0.060588},S:{"2.5":0},R:{_:"0"},M:{"0":0.087516},O:{"0":3.992076},Q:{"1.2":0.10098},H:{"0":35.264147690722},L:{"0":27.531348}};


/***/ }),
/* 450 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.007923,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1.457832,"50":0,"51":0,"52":0.007923,"53":0.015846,"54":0,"55":0,"56":0.007923,"57":0,"58":0.015846,"59":0.007923,"60":0,"61":0,"62":0.007923,"63":0,"64":0.007923,"65":0,"66":0.126768,"67":0.348612,"68":0,"69":0,"70":0.039615,"71":0.07923,"72":0.285228,"73":35.708961,"74":0,"75":0.007923,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.023769,"35":0,"36":0,"37":0,"38":0.007923,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.015846,"49":0,"50":0.007923,"51":0.015846,"52":0.07923,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.023769,"61":0.007923,"62":0,"63":0.166383,"64":0.15846,"65":0.118845,"66":4.072422,"67":0.007923,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.007923,"57":0,"58":0.245613,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.007923,"11":0.301074,"12":4.769646,_:"0","3.1":0,"3.2":0,"5.1":0.007923,"6.1":0,"7.1":0,"9.1":0.007923,"10.1":0.134691,"11.1":0.570456,"12.1":3.9615},G:{"8":0.11003862493746,"3.2":0.007145365255679,"4.0-4.1":0.0042872191534074,"4.2-4.3":0.0014290730511358,"5.0-5.1":0.014290730511358,"6.0-6.1":0.007145365255679,"7.0-7.1":0.025723314920444,"8.1-8.4":0.055733848994296,"9.0-9.2":0.032868680176123,"9.3":0.27295295276694,"10.0-10.2":0.15148174342039,"10.3":0.36155548193736,"11.0-11.2":0.44587079195437,"11.3-11.4":0.91603582577804,"12.0-12.1":5.5305127078955,"12.2":6.3436552739918},I:{"3":0.00055257661290323,"4":0.079571032258065,_:"67","2.1":0.0038680362903226,"2.2":0.0066309193548387,"2.3":0.0038680362903226,"4.1":0.039785516129032,"4.2-4.3":0.17240390322581,"4.4":0,"4.4.3-4.4.4":0.24147597983871},A:{"6":0,"7":0,"8":0.427842,"9":0.007923,"10":0,"11":1.410294,"5.5":0},B:{"12":0,"13":0,"14":0.015846,"15":0.007923,"16":0.039615,"17":1.402371,"18":4.444803},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.20752247863248,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0.05188061965812,"8.2":0.54993456837607,"9.2":1.6186753333333},N:{"10":0,"11":0.072695},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.093465},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":19.834707}};


/***/ }),
/* 451 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0.003863,"9":0,"10":0,"11":0.007726,"12":0,"13":0,"14":0,"15":0,"16":0.003863,"17":0.003863,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.007726,"27":0,"28":0.003863,"29":0.011589,"30":0.007726,"31":0.003863,"32":0.003863,"33":0.003863,"34":0,"35":0,"36":0,"37":0,"38":0.003863,"39":0,"40":0.003863,"41":0.003863,"42":0,"43":0.023178,"44":0,"45":0,"46":0.003863,"47":0.007726,"48":0,"49":0.216328,"50":0.003863,"51":0,"52":0,"53":0.007726,"54":0,"55":0.007726,"56":0.015452,"57":0,"58":0.034767,"59":0.007726,"60":0.011589,"61":0.007726,"62":0.015452,"63":0.034767,"64":0.007726,"65":0.197013,"66":0.019315,"67":0.073397,"68":0.023178,"69":0.057945,"70":0.084986,"71":0.092712,"72":0.332218,"73":7.540576,"74":0.007726,"75":0.011589,_:"76"},C:{"2":0,"3":0.003863,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.003863,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.007726,"33":0,"34":0,"35":0.007726,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.011589,"44":0,"45":0.007726,"46":0,"47":0.023178,"48":0.030904,"49":0.003863,"50":0.007726,"51":0.015452,"52":0.046356,"53":0.003863,"54":0.003863,"55":0.003863,"56":0.011589,"57":0.015452,"58":0.003863,"59":0.003863,"60":0.03863,"61":0.007726,"62":0.015452,"63":0.015452,"64":0.019315,"65":0.084986,"66":1.711309,"67":0.030904,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.003863,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.003863,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.015452,"57":0.003863,"58":0.482875,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.003863},E:{"4":0,"5":0,"6":0,"7":0.003863,"8":0.166109,"9":0.088849,"10":0.015452,"11":0.054082,"12":0.266547,_:"0","3.1":0,"3.2":0,"5.1":0.027041,"6.1":0,"7.1":0,"9.1":0.030904,"10.1":0.054082,"11.1":0.11589,"12.1":0.189287},G:{"8":0.076227279995997,"3.2":0.0049498233763635,"4.0-4.1":0.0029698940258181,"4.2-4.3":0.00098996467527269,"5.0-5.1":0.0098996467527269,"6.0-6.1":0.0049498233763635,"7.0-7.1":0.017819364154908,"8.1-8.4":0.038608622335635,"9.0-9.2":0.022769187531272,"9.3":0.18908325297708,"10.0-10.2":0.10493625557891,"10.3":0.25046106284399,"11.0-11.2":0.30886897868508,"11.3-11.4":0.6345673568498,"12.0-12.1":3.8311632933053,"12.2":4.3944531935355},I:{"3":0.0015208245967742,"4":0.21899874193548,_:"67","2.1":0.010645772177419,"2.2":0.01824989516129,"2.3":0.010645772177419,"4.1":0.10949937096774,"4.2-4.3":0.47449727419355,"4.4":0,"4.4.3-4.4.4":0.66460034879032},A:{"6":0,"7":0,"8":0.011589,"9":0.011589,"10":0.027041,"11":0.432656,"5.5":0},B:{"12":0.050219,"13":0.030904,"14":0.042493,"15":0.061808,"16":0.034767,"17":0.397889,"18":0.096575},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.0476801964736,"5.0-5.4":0.10171652392947,"6.2-6.4":0.193261395466,"7.2-7.4":0.48823931486146,"8.2":1.4240313350126,"9.2":0.78321723425693},N:{"10":0.01135345,"11":0.44278455},J:{"7":0,"10":0.024548},S:{"2.5":0},R:{_:"0"},M:{"0":0.147288},O:{"0":0.319124},Q:{"1.2":0.006137},H:{"0":0.70302392955326},L:{"0":66.550203}};


/***/ }),
/* 452 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.00305,"10":0,"11":0.00305,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.00305,"21":0.00305,"22":0,"23":0,"24":0.0122,"25":0,"26":0.35685,"27":0,"28":0,"29":0,"30":0.00305,"31":0.00305,"32":0,"33":0.0915,"34":0.00305,"35":0,"36":0.0122,"37":0,"38":0.00305,"39":0,"40":0.01525,"41":0.0061,"42":0,"43":0.3538,"44":0,"45":0.0183,"46":0.00305,"47":0,"48":0,"49":0.0305,"50":0.00305,"51":0.00915,"52":0,"53":0,"54":0.0305,"55":0.00305,"56":0.05795,"57":0.0061,"58":0.02135,"59":0,"60":0.00305,"61":0.00305,"62":0.00915,"63":0.01525,"64":0.0061,"65":0.0305,"66":0.00305,"67":0.01525,"68":0.00915,"69":0.02135,"70":0.0305,"71":0.0427,"72":0.14945,"73":5.5144,"74":0.01525,"75":0.00305,_:"76"},C:{"2":0,"3":0.0427,"4":0.00305,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.00305,"25":0,"26":0,"27":0,"28":0,"29":0.00915,"30":0,"31":0,"32":0.00305,"33":0.00305,"34":0,"35":0,"36":0,"37":0.0061,"38":0,"39":0.0061,"40":0,"41":0,"42":0,"43":0.0183,"44":0.0061,"45":0,"46":0.00305,"47":0.00915,"48":0.0061,"49":0,"50":0.00305,"51":0,"52":0.00915,"53":0,"54":0,"55":0,"56":0.00305,"57":0,"58":0,"59":0.00305,"60":0.0061,"61":0,"62":0,"63":0.0061,"64":0.01525,"65":0.03355,"66":0.3843,"67":0.08845,"68":0,"3.5":0,"3.6":0.0793},F:{"9":0,"11":0,"12":0,"15":0,"16":0.0061,"17":0,"18":0,"19":0.0122,"20":0.0061,"21":0,"22":0.00305,"23":0.00915,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.00305,"30":0,"31":0,"32":0.00305,"33":0,"34":0,"35":0,"36":0,"37":0.0061,"38":0.0061,"39":0,"40":0,"41":0,"42":0.00915,"43":0,"44":0,"45":0.00305,"46":0,"47":0,"48":0.0061,"49":0,"50":0.00915,"51":0.01525,"52":0.00305,"53":0,"54":0,"55":0,"56":0.00915,"57":0.00305,"58":0.4209,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.02135},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.0183,_:"0","3.1":0,"3.2":0,"5.1":0.00305,"6.1":0,"7.1":0,"9.1":0,"10.1":0.0244,"11.1":0.00305,"12.1":0.0427},G:{"8":0.01834538677074,"3.2":0.0011912588812169,"4.0-4.1":0.00071475532873011,"4.2-4.3":0.00023825177624337,"5.0-5.1":0.0023825177624337,"6.0-6.1":0.0011912588812169,"7.0-7.1":0.0042885319723807,"8.1-8.4":0.0092918192734914,"9.0-9.2":0.0054797908535975,"9.3":0.045506089262484,"10.0-10.2":0.025254688281797,"10.3":0.060277699389573,"11.0-11.2":0.074334554187932,"11.3-11.4":0.152719388572,"12.0-12.1":0.92203437406184,"12.2":1.0575996347443},I:{"3":0.00099833669354839,"4":0.14376048387097,_:"67","2.1":0.0069883568548387,"2.2":0.011980040322581,"2.3":0.0069883568548387,"4.1":0.071880241935484,"4.2-4.3":0.3114810483871,"4.4":0,"4.4.3-4.4.4":0.43627313508065},A:{"6":0,"7":0,"8":0.0061,"9":0,"10":0.0061,"11":0.08845,"5.5":0},B:{"12":0.0549,"13":0.0183,"14":0.03355,"15":0.00915,"16":0.0244,"17":0.1525,"18":0.26535},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.1861726941748,"5.0-5.4":0.1520734223301,"6.2-6.4":0.22304101941748,"7.2-7.4":0.50691140776699,"8.2":1.4801813106796,"9.2":0.62857014563107},N:{"10":0,"11":0.0139},J:{"7":0,"10":0.00695},S:{"2.5":0},R:{_:"0"},M:{"0":0.14595},O:{"0":9.174},Q:{"1.2":0.03475},H:{"0":12.060793556701},L:{"0":53.1754}};


/***/ }),
/* 453 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00531,"19":0,"20":0,"21":0,"22":0.00531,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.01062,"32":0,"33":0,"34":0,"35":0,"36":0.00531,"37":0,"38":0.00531,"39":0,"40":0.00531,"41":0.00531,"42":0,"43":0.01593,"44":0,"45":0.00531,"46":0,"47":0,"48":0,"49":0.96642,"50":0.00531,"51":0.00531,"52":0.00531,"53":0,"54":0,"55":0.00531,"56":0.00531,"57":0.06903,"58":0.02124,"59":0,"60":0.02124,"61":0.39294,"62":0.01062,"63":0.24426,"64":0.12213,"65":0.20178,"66":0.29205,"67":0.01062,"68":0.0531,"69":0.58941,"70":0.02124,"71":0.17523,"72":0.81774,"73":15.39369,"74":0.02124,"75":0.01062,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.00531,"36":0,"37":0,"38":0,"39":0.01062,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.00531,"48":0.00531,"49":0,"50":0,"51":0,"52":0.04248,"53":0,"54":0,"55":0.00531,"56":0,"57":0,"58":0.00531,"59":0,"60":0.00531,"61":0,"62":0.00531,"63":0,"64":0.12744,"65":0.09027,"66":1.85319,"67":0.56286,"68":0.01593,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.00531,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.01062,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.00531,"58":0.55224,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.00531,"11":0.01062,"12":0.17523,_:"0","3.1":0,"3.2":0,"5.1":0.01593,"6.1":0,"7.1":0,"9.1":0.08496,"10.1":0.1062,"11.1":0.04248,"12.1":0.22833},G:{"8":0.086199777844491,"3.2":0.0055973881717202,"4.0-4.1":0.0033584329030321,"4.2-4.3":0.001119477634344,"5.0-5.1":0.01119477634344,"6.0-6.1":0.0055973881717202,"7.0-7.1":0.020150597418193,"8.1-8.4":0.043659627739418,"9.0-9.2":0.025747985589913,"9.3":0.21382022815971,"10.0-10.2":0.11866462924047,"10.3":0.28322784148904,"11.0-11.2":0.34927702191534,"11.3-11.4":0.71758516361453,"12.0-12.1":4.3323784449114,"12.2":4.9693612188532},I:{"3":0.0017210987903226,"4":0.24783822580645,_:"67","2.1":0.012047691532258,"2.2":0.020653185483871,"2.3":0.012047691532258,"4.1":0.12391911290323,"4.2-4.3":0.53698282258065,"4.4":0,"4.4.3-4.4.4":0.75212017137097},A:{"6":0,"7":0,"8":0.027235161290323,"9":0.010894064516129,"10":0.05991735483871,"11":0.74624341935484,"5.5":0},B:{"12":0.02124,"13":0.02655,"14":0.03186,"15":0.20178,"16":0.17523,"17":1.05669,"18":0.24426},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.3519271741511,"5.0-5.4":0.15480082146769,"6.2-6.4":0.27864147864184,"7.2-7.4":0.50568268346112,"8.2":3.7152197152245,"9.2":3.4159381270537},N:{"10":0,"11":0.07973},J:{"7":0,"10":0.0469},S:{"2.5":0},R:{_:"0"},M:{"0":0.12194},O:{"0":0.94738},Q:{"1.2":0.02345},H:{"0":0.43957871134021},L:{"0":43.60051}};


/***/ }),
/* 454 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0.004927,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.004927,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.029562,"34":0,"35":0,"36":0,"37":0,"38":0.029562,"39":0,"40":0.408941,"41":0,"42":0.019708,"43":1.882114,"44":0.019708,"45":0,"46":0.009854,"47":0,"48":0,"49":0.270985,"50":0,"51":0,"52":0,"53":0.014781,"54":0,"55":0,"56":0.029562,"57":0,"58":0.118248,"59":0,"60":0.04927,"61":0,"62":0,"63":0.009854,"64":0,"65":0.625729,"66":0.009854,"67":0.044343,"68":0.073905,"69":0.059124,"70":0.128102,"71":0.039416,"72":0.413868,"73":10.780276,"74":0.009854,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.009854,"41":0,"42":0,"43":0.059124,"44":0,"45":0,"46":0,"47":0.24635,"48":0.004927,"49":0.009854,"50":0,"51":0,"52":0.009854,"53":0,"54":0,"55":0,"56":0,"57":0.004927,"58":0,"59":0,"60":0,"61":0.004927,"62":0,"63":0.009854,"64":0.004927,"65":0.009854,"66":0.763685,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0.004927,"47":0.034489,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.714415,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.019708},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.009854,"10":0,"11":0,"12":0.463138,_:"0","3.1":0,"3.2":0,"5.1":0.078832,"6.1":0,"7.1":0,"9.1":0.004927,"10.1":0.014781,"11.1":0,"12.1":0.068978},G:{"8":0.048399728109677,"3.2":0.0031428394876413,"4.0-4.1":0.0018857036925848,"4.2-4.3":0.00062856789752827,"5.0-5.1":0.0062856789752827,"6.0-6.1":0.0031428394876413,"7.0-7.1":0.011314222155509,"8.1-8.4":0.024514148003603,"9.0-9.2":0.01445706164315,"9.3":0.1200564684279,"10.0-10.2":0.066628197137997,"10.3":0.15902767807465,"11.0-11.2":0.19611318402882,"11.3-11.4":0.40291202231562,"12.0-12.1":2.4325577634344,"12.2":2.790212897128},I:{"3":0.00127821875,"4":0.1840635,_:"67","2.1":0.00894753125,"2.2":0.015338625,"2.3":0.00894753125,"4.1":0.09203175,"4.2-4.3":0.39880425,"4.4":0,"4.4.3-4.4.4":0.55858159375},A:{"6":0,"7":0,"8":0.029562,"9":0.004927,"10":0,"11":0.832663,"5.5":0},B:{"12":0.064051,"13":0.029562,"14":0.014781,"15":0.113321,"16":0.059124,"17":1.4781,"18":0.226642},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.33859414285714,"5.0-5.4":0.010260428571429,"6.2-6.4":0.10260428571429,"7.2-7.4":0.34885457142857,"8.2":0.33859414285714,"9.2":0.22572942857143},N:{"10":0,"11":0.172482},J:{"7":0,"10":0.010146},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":5.88468},Q:{"1.2":0},H:{"0":1.700187185567},L:{"0":56.10674}};


/***/ }),
/* 455 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.00756,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00756,"35":0,"36":0,"37":0,"38":0.02268,"39":0,"40":0.00756,"41":0.00756,"42":0,"43":0.01512,"44":0,"45":0,"46":0.00756,"47":0,"48":0.00756,"49":0.67284,"50":0.00756,"51":0.00756,"52":0,"53":0.02268,"54":0.00756,"55":0.01512,"56":0.01512,"57":0.03024,"58":0.0378,"59":0.00756,"60":0.02268,"61":0.02268,"62":0.03024,"63":0.12852,"64":0.02268,"65":0.06804,"66":0.09828,"67":0.19656,"68":0.06804,"69":0.10584,"70":0.27972,"71":0.29484,"72":1.67832,"73":38.80548,"74":0.02268,"75":0.01512,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.00756,"35":0,"36":0.00756,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00756,"44":0,"45":0.01512,"46":0,"47":0.04536,"48":0.12852,"49":0,"50":0.00756,"51":0.01512,"52":0.13608,"53":0.00756,"54":0.00756,"55":0,"56":0.01512,"57":0.00756,"58":0.00756,"59":0.00756,"60":0.05292,"61":0.01512,"62":0.02268,"63":0.0378,"64":0.03024,"65":0.18144,"66":3.54564,"67":0.0378,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00756,"37":0,"38":0.00756,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00756,"52":0,"53":0.00756,"54":0,"55":0,"56":0,"57":0,"58":1.14912,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.00756},E:{"4":0,"5":0,"6":0,"7":0,"8":0.00756,"9":0,"10":0.06048,"11":0.1512,"12":1.1718,_:"0","3.1":0,"3.2":0,"5.1":1.31544,"6.1":0,"7.1":0,"9.1":0.02268,"10.1":0.20412,"11.1":0.43092,"12.1":0.69552},G:{"8":0.033113159211448,"3.2":0.0021502051436005,"4.0-4.1":0.0012901230861603,"4.2-4.3":0.0004300410287201,"5.0-5.1":0.004300410287201,"6.0-6.1":0.0021502051436005,"7.0-7.1":0.0077407385169619,"8.1-8.4":0.016771600120084,"9.0-9.2":0.0098909436605624,"9.3":0.08213783648554,"10.0-10.2":0.045584349044331,"10.3":0.10880038026619,"11.0-11.2":0.13417280096067,"11.3-11.4":0.27565629940959,"12.0-12.1":1.6642587811468,"12.2":1.9089521264885},I:{"3":0.00094596774193548,"4":0.13621935483871,_:"67","2.1":0.0066217741935484,"2.2":0.011351612903226,"2.3":0.0066217741935484,"4.1":0.068109677419355,"4.2-4.3":0.29514193548387,"4.4":0,"4.4.3-4.4.4":0.41338790322581},A:{"6":0,"7":0,"8":0.01512,"9":0.01512,"10":0.03024,"11":0.3402,"5.5":0},B:{"12":0.01512,"13":0.01512,"14":0.02268,"15":0.04536,"16":0.04536,"17":0.69552,"18":0.2646},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.39934196531792,"5.0-5.4":0.051197687861272,"6.2-6.4":0.040958150289017,"7.2-7.4":0.13311398843931,"8.2":0.66556994219653,"9.2":0.48125826589595},N:{"10":0.009272,"11":0.037088},J:{"7":0,"10":0.00732},S:{"2.5":0},R:{_:"0"},M:{"0":0.07808},O:{"0":0.23424},Q:{"1.2":0},H:{"0":0.31878474226804},L:{"0":36.26432}};


/***/ }),
/* 456 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.008534,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.004267,"28":0,"29":0,"30":0,"31":0.017068,"32":0.004267,"33":0.012801,"34":0,"35":0,"36":0.008534,"37":0,"38":0.004267,"39":0,"40":0.008534,"41":0.008534,"42":0,"43":0.102408,"44":0,"45":0,"46":0.008534,"47":0.004267,"48":0.004267,"49":0.081073,"50":0.004267,"51":0.008534,"52":0.004267,"53":0.004267,"54":0,"55":0.021335,"56":0.004267,"57":0.004267,"58":0.029869,"59":0.004267,"60":0.021335,"61":0.034136,"62":0.004267,"63":0.025602,"64":0.012801,"65":0.046937,"66":0.017068,"67":0.089607,"68":0.055471,"69":0.132277,"70":0.192015,"71":0.307224,"72":0.490705,"73":10.586427,"74":0.017068,"75":0.004267,_:"76"},C:{"2":0,"3":0.004267,"4":0,"5":0,"6":0.008534,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.004267,"32":0,"33":0,"34":0,"35":0.004267,"36":0.004267,"37":0.004267,"38":0.004267,"39":0.008534,"40":0,"41":0,"42":0.008534,"43":0.021335,"44":0.004267,"45":0.004267,"46":0,"47":0.029869,"48":0.034136,"49":0.004267,"50":0.008534,"51":0.004267,"52":0.081073,"53":0.012801,"54":0.012801,"55":0.004267,"56":0.021335,"57":0.021335,"58":0.008534,"59":0.008534,"60":0.076806,"61":0.012801,"62":0.025602,"63":0.029869,"64":0.051204,"65":0.136544,"66":2.611404,"67":0.046937,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.004267,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.008534,"50":0,"51":0.004267,"52":0,"53":0.008534,"54":0,"55":0,"56":0.008534,"57":0,"58":0.704055,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.008534},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.012801,"11":0.012801,"12":0.034136,_:"0","3.1":0,"3.2":0,"5.1":0.217617,"6.1":0,"7.1":0,"9.1":0.004267,"10.1":0.038403,"11.1":0.038403,"12.1":0.034136},G:{"8":0.013689787851496,"3.2":0.00088894726308416,"4.0-4.1":0.0005333683578505,"4.2-4.3":0.00017778945261683,"5.0-5.1":0.0017778945261683,"6.0-6.1":0.00088894726308416,"7.0-7.1":0.003200210147103,"8.1-8.4":0.0069337886520564,"9.0-9.2":0.0040891574101871,"9.3":0.033957785449815,"10.0-10.2":0.018845681977384,"10.3":0.044980731512058,"11.0-11.2":0.055470309216452,"11.3-11.4":0.11396303912739,"12.0-12.1":0.68804518162714,"12.2":0.78920738016612},I:{"3":0.010229540322581,"4":1.4730538064516,_:"67","2.1":0.071606782258065,"2.2":0.12275448387097,"2.3":0.071606782258065,"4.1":0.73652690322581,"4.2-4.3":3.1916165806452,"4.4":0,"4.4.3-4.4.4":4.4703091209677},A:{"6":0,"7":0,"8":0.043475094339623,"9":0.013042528301887,"10":0.0086950188679245,"11":0.16520535849057,"5.5":0},B:{"12":0.004267,"13":0.004267,"14":0.012801,"15":0.008534,"16":0.051204,"17":0.25602,"18":0.119476},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.8356137892074,"5.0-5.4":0.081132101180438,"6.2-6.4":0.27382084148398,"7.2-7.4":0.72004739797639,"8.2":1.937028915683,"9.2":1.1662739544688},N:{"10":0,"11":0.022932},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.103194},O:{"0":1.542177},Q:{"1.2":0},H:{"0":1.4437506494845},L:{"0":57.077428}};


/***/ }),
/* 457 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.003973,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.003973,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.003973,"33":0.003973,"34":0,"35":0,"36":0,"37":0,"38":0.003973,"39":0,"40":0.003973,"41":0,"42":0,"43":0.003973,"44":0,"45":0,"46":0.007946,"47":0.003973,"48":0,"49":0.015892,"50":0.003973,"51":0.003973,"52":0.003973,"53":0.003973,"54":0,"55":0.139055,"56":0.011919,"57":0,"58":0.003973,"59":0.003973,"60":0.011919,"61":0.003973,"62":0.007946,"63":0.7946,"64":0.007946,"65":0.023838,"66":0,"67":0.043703,"68":0.023838,"69":0.059595,"70":0.067541,"71":0.147001,"72":0.290029,"73":7.087832,"74":0.003973,"75":0.003973,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.003973,"10":0.003973,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.011919,"27":0,"28":0,"29":0,"30":0,"31":0.019865,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.023838,"39":0,"40":0,"41":0.023838,"42":0,"43":0.003973,"44":0.003973,"45":0.007946,"46":0,"47":0.003973,"48":0.007946,"49":0.091379,"50":0,"51":0,"52":0.011919,"53":0,"54":0,"55":0.003973,"56":0.003973,"57":0.003973,"58":0.003973,"59":0,"60":0.139055,"61":0,"62":0,"63":0.035757,"64":0.023838,"65":0.071514,"66":1.168062,"67":0.051649,"68":0,"3.5":0,"3.6":0.003973},F:{"9":0,"11":0,"12":0,"15":0,"16":0.003973,"17":0.007946,"18":0.015892,"19":0.007946,"20":0.015892,"21":0.023838,"22":0.007946,"23":0.003973,"24":0.003973,"25":0,"26":0.015892,"27":0,"28":0.015892,"29":0.011919,"30":0.011919,"31":0.003973,"32":0.011919,"33":0.007946,"34":0,"35":0.027811,"36":0,"37":0.035757,"38":0.023838,"39":0,"40":0,"41":0,"42":0.003973,"43":0,"44":0,"45":0.019865,"46":0,"47":0.003973,"48":0,"49":0,"50":0,"51":0.071514,"52":0.003973,"53":0,"54":0,"55":0,"56":0.003973,"57":0.003973,"58":1.617011,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.659518},E:{"4":0,"5":0,"6":0.015892,"7":0,"8":0,"9":0,"10":0.071514,"11":0.003973,"12":0.123163,_:"0","3.1":0,"3.2":0,"5.1":0.123163,"6.1":0,"7.1":0,"9.1":0.007946,"10.1":0.031784,"11.1":0.083433,"12.1":0.107271},G:{"8":0.017902742719904,"3.2":0.0011625157610327,"4.0-4.1":0.00069750945661963,"4.2-4.3":0.00023250315220654,"5.0-5.1":0.0023250315220654,"6.0-6.1":0.0011625157610327,"7.0-7.1":0.0041850567397178,"8.1-8.4":0.0090676229360552,"9.0-9.2":0.0053475725007505,"9.3":0.04440810207145,"10.0-10.2":0.024645334133894,"10.3":0.058823297508256,"11.0-11.2":0.072540983488442,"11.3-11.4":0.1490345205644,"12.0-12.1":0.89978719903933,"12.2":1.0320814926449},I:{"3":0.0010976723790323,"4":0.15806482258065,_:"67","2.1":0.0076837066532258,"2.2":0.013172068548387,"2.3":0.0076837066532258,"4.1":0.079032411290323,"4.2-4.3":0.34247378225806,"4.4":0,"4.4.3-4.4.4":0.4796828296371},A:{"6":0,"7":0,"8":0.103298,"9":0.03973,"10":0.087406,"11":0.782681,"5.5":0},B:{"12":0.087406,"13":0.063568,"14":0.051649,"15":0.067541,"16":0.059595,"17":0.441003,"18":0.055622},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.94133330232558,"5.0-5.4":0.22510144186047,"6.2-6.4":0.040927534883721,"7.2-7.4":0.14324637209302,"8.2":1.5450144418605,"9.2":1.0641159069767},N:{"10":0.072324,"11":0.24108},J:{"7":0,"10":0.132594},S:{"2.5":0},R:{_:"0"},M:{"0":0.024108},O:{"0":1.735776},Q:{"1.2":0},H:{"0":31.782276443299},L:{"0":25.972458}};


/***/ }),
/* 458 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.015858,"48":0,"49":0.074004,"50":0.005286,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.005286,"57":0.031716,"58":0.015858,"59":0.05286,"60":0.005286,"61":0,"62":0,"63":0.015858,"64":0,"65":0.137436,"66":0.005286,"67":0.010572,"68":0.021144,"69":0.005286,"70":0.005286,"71":0.10572,"72":1.168206,"73":14.002614,"74":0.13215,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.047574,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.005286,"50":0.02643,"51":0,"52":0.021144,"53":0,"54":0,"55":0,"56":0.243156,"57":0,"58":0,"59":0,"60":0.010572,"61":0,"62":0,"63":0.005286,"64":0,"65":0.10572,"66":0.814044,"67":0.005286,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.015858,"39":0.005286,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.005286,"58":0.544458,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.005286,"9":0.031716,"10":0,"11":0.015858,"12":1.316214,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.047574,"7.1":0,"9.1":0.021144,"10.1":0.2643,"11.1":0.153294,"12.1":0.42288},G:{"8":0.2409248245772,"3.2":0.01564446912839,"4.0-4.1":0.0093866814770339,"4.2-4.3":0.003128893825678,"5.0-5.1":0.03128893825678,"6.0-6.1":0.01564446912839,"7.0-7.1":0.056320088862204,"8.1-8.4":0.12202685920144,"9.0-9.2":0.071964557990593,"9.3":0.59761872070449,"10.0-10.2":0.33166274552187,"10.3":0.79161013789653,"11.0-11.2":0.97621487361153,"11.3-11.4":2.0056209422596,"12.0-12.1":12.108819105374,"12.2":13.889159692185},I:{"3":0.00063337096774194,"4":0.091205419354839,_:"67","2.1":0.0044335967741935,"2.2":0.0076004516129032,"2.3":0.0044335967741935,"4.1":0.045602709677419,"4.2-4.3":0.19761174193548,"4.4":0,"4.4.3-4.4.4":0.27678311290323},A:{"6":0,"7":0,"8":0.005286,"9":0,"10":0.005286,"11":1.654518,"5.5":0},B:{"12":0.021144,"13":0.10572,"14":0.089862,"15":0.031716,"16":0.021144,"17":2.309982,"18":0.454596},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.076679778688525,"5.0-5.4":0,"6.2-6.4":0.032862762295082,"7.2-7.4":0.087634032786885,"8.2":3.5163155655738,"9.2":1.6321838606557},N:{"10":0,"11":0.004714},J:{"7":0,"10":0.018856},S:{"2.5":0},R:{_:"0"},M:{"0":0.160276},O:{"0":0.056568},Q:{"1.2":0},H:{"0":0.080332391752577},L:{"0":34.902238}};


/***/ }),
/* 459 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0.004795,"9":0,"10":0,"11":0.004795,"12":0,"13":0,"14":0,"15":0,"16":0.004795,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.00959,"29":0,"30":0.01918,"31":0,"32":0.004795,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.02877,"41":0,"42":0.004795,"43":0.043155,"44":0.01918,"45":0.004795,"46":0,"47":0.023975,"48":0.00959,"49":0.091105,"50":0.004795,"51":0.004795,"52":0,"53":0.004795,"54":0.01918,"55":0.05754,"56":0.023975,"57":0,"58":0.187005,"59":0,"60":0.014385,"61":0,"62":0.004795,"63":3.418835,"64":0,"65":0.052745,"66":0,"67":0.01918,"68":0.052745,"69":0.196595,"70":0.01918,"71":0.052745,"72":0.925435,"73":7.8638,"74":0,"75":0,_:"76"},C:{"2":0,"3":0.311675,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.004795,"15":0.004795,"16":0.004795,"17":0,"18":0.033565,"19":0,"20":0.004795,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.02877,"31":0.00959,"32":0.023975,"33":0,"34":0,"35":0.004795,"36":0,"37":0.00959,"38":0.01918,"39":0,"40":0.01918,"41":0,"42":0.004795,"43":0.01918,"44":0,"45":0.004795,"46":0,"47":0.062335,"48":0.014385,"49":0,"50":0.023975,"51":0.004795,"52":0.014385,"53":0.004795,"54":0,"55":0.014385,"56":0.014385,"57":0.00959,"58":0,"59":0.004795,"60":0.436345,"61":0.004795,"62":0.00959,"63":0.00959,"64":0.06713,"65":0.23016,"66":1.414525,"67":1.64948,"68":0,"3.5":0,"3.6":0.014385},F:{"9":0,"11":0,"12":0.00959,"15":0.00959,"16":0.004795,"17":0,"18":0,"19":0.004795,"20":0.254135,"21":0.00959,"22":0,"23":0.03836,"24":0.004795,"25":0,"26":0.00959,"27":0.004795,"28":0.00959,"29":0,"30":0.023975,"31":0,"32":0,"33":0.00959,"34":0.00959,"35":0,"36":0.00959,"37":0.033565,"38":0.148645,"39":0,"40":0,"41":0.02877,"42":0.014385,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.004795,"52":0,"53":0.004795,"54":0.100695,"55":0,"56":0,"57":0,"58":0.94941,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.29729},E:{"4":0,"5":0,"6":0,"7":0,"8":0.004795,"9":0,"10":0.004795,"11":0.014385,"12":0.0959,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0.00959,"9.1":0.02877,"10.1":0.187005,"11.1":0.01918,"12.1":0.30688},G:{"8":0.022330269688782,"3.2":0.0014500175122586,"4.0-4.1":0.00087001050735515,"4.2-4.3":0.00029000350245172,"5.0-5.1":0.0029000350245172,"6.0-6.1":0.0014500175122586,"7.0-7.1":0.0052200630441309,"8.1-8.4":0.011310136595617,"9.0-9.2":0.0066700805563895,"9.3":0.055390668968278,"10.0-10.2":0.030740371259882,"10.3":0.073370886120284,"11.0-11.2":0.090481092764935,"11.3-11.4":0.18589224507155,"12.0-12.1":1.1223135544881,"12.2":1.2873255473832},I:{"3":0.0071465524193548,"4":1.0291035483871,_:"67","2.1":0.050025866935484,"2.2":0.085758629032258,"2.3":0.050025866935484,"4.1":0.51455177419355,"4.2-4.3":2.2297243548387,"4.4":0,"4.4.3-4.4.4":3.1230434072581},A:{"6":0,"7":0,"8":0.24930965189873,"9":0.008042246835443,"10":0.10454920886076,"11":0.90877389240506,"5.5":0},B:{"12":0.110285,"13":0.033565,"14":0.004795,"15":0.01918,"16":0.14385,"17":0.513065,"18":0.004795},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.74318057692308,"5.0-5.4":0.060257884615385,"6.2-6.4":0.050214903846154,"7.2-7.4":0.31133240384615,"8.2":0.2611175,"9.2":0.14060173076923},N:{"10":0.02082,"11":0.17697},J:{"7":0,"10":0.192585},S:{"2.5":0},R:{_:"0"},M:{"0":0.08328},O:{"0":5.17377},Q:{"1.2":0.098895},H:{"0":18.819106778351},L:{"0":27.330815}};


/***/ }),
/* 460 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.010904,"12":0,"13":0,"14":0,"15":0,"16":0.005452,"17":0,"18":0,"19":0.005452,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.348928,"27":0,"28":0.010904,"29":0.059972,"30":0.005452,"31":0.010904,"32":0.010904,"33":0.005452,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.005452,"40":0.021808,"41":0,"42":0,"43":0.201724,"44":0,"45":0.02726,"46":0.010904,"47":0.005452,"48":0.016356,"49":0.201724,"50":0.092684,"51":0.010904,"52":0,"53":0,"54":0,"55":0.038164,"56":0.005452,"57":0,"58":0.05452,"59":0.032712,"60":0.032712,"61":0.010904,"62":0.098136,"63":0.119944,"64":0.065424,"65":0.359832,"66":0.021808,"67":0.092684,"68":0.043616,"69":0.250792,"70":0.125396,"71":0.746924,"72":1.161276,"73":9.851764,"74":0.016356,"75":0.005452,_:"76"},C:{"2":0,"3":0.021808,"4":0,"5":0,"6":0,"7":0.005452,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.005452,"21":0,"22":0,"23":0.005452,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.005452,"30":0.005452,"31":0,"32":0.005452,"33":0,"34":0.010904,"35":0.005452,"36":0.005452,"37":0.005452,"38":0,"39":0,"40":0.010904,"41":0,"42":0.010904,"43":0.043616,"44":0.010904,"45":0.010904,"46":0.010904,"47":0.10904,"48":0.021808,"49":0.076328,"50":0.016356,"51":0.005452,"52":0.278052,"53":0.010904,"54":0.02726,"55":0.02726,"56":0.038164,"57":0.125396,"58":0.021808,"59":0.016356,"60":0.19082,"61":0.010904,"62":0.038164,"63":0.169012,"64":0.114492,"65":0.512488,"66":7.03308,"67":0.343476,"68":0.005452,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.005452,"15":0.010904,"16":0.005452,"17":0.010904,"18":0,"19":0.005452,"20":0.005452,"21":0,"22":0.005452,"23":0.005452,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.005452,"31":0,"32":0.005452,"33":0.005452,"34":0,"35":0,"36":0.010904,"37":0,"38":0.010904,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.010904,"52":0,"53":0.005452,"54":0,"55":0,"56":0.005452,"57":0.010904,"58":1.919104,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.092684},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.975908,"10":0,"11":0,"12":0.174464,_:"0","3.1":0,"3.2":0,"5.1":0.065424,"6.1":0,"7.1":0,"9.1":0.005452,"10.1":0.010904,"11.1":0.02726,"12.1":0.201724},G:{"8":0.01784448994296,"3.2":0.0011587331131792,"4.0-4.1":0.00069523986790754,"4.2-4.3":0.00023174662263585,"5.0-5.1":0.0023174662263585,"6.0-6.1":0.0011587331131792,"7.0-7.1":0.0041714392074452,"8.1-8.4":0.009038118282798,"9.0-9.2":0.0053301723206244,"9.3":0.044263604923446,"10.0-10.2":0.0245651419994,"10.3":0.058631895526869,"11.0-11.2":0.072304946262384,"11.3-11.4":0.14854958510958,"12.0-12.1":0.89685942960072,"12.2":1.0287232578805},I:{"3":0.0029330362903226,"4":0.42235722580645,_:"67","2.1":0.020531254032258,"2.2":0.035196435483871,"2.3":0.020531254032258,"4.1":0.21117861290323,"4.2-4.3":0.91510732258065,"4.4":0,"4.4.3-4.4.4":1.281736858871},A:{"6":0,"7":0,"8":0.059972,"9":0.005452,"10":0.02726,"11":0.223532,"5.5":0},B:{"12":0.059972,"13":0.043616,"14":0.049068,"15":0.130848,"16":0.070876,"17":0.719664,"18":0.147204},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.2612027027027,"5.0-5.4":0.041792432432432,"6.2-6.4":0.11492918918919,"7.2-7.4":0.073136756756757,"8.2":0.50150918918919,"9.2":0.16716972972973},N:{"10":0.043380923076923,"11":0.37958307692308},J:{"7":0,"10":0.072768},S:{"2.5":0},R:{_:"0"},M:{"0":0.436608},O:{"0":2.70606},Q:{"1.2":0.040932},H:{"0":10.174493340206},L:{"0":41.773068}};


/***/ }),
/* 461 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.004449,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.004449,"23":0,"24":0,"25":0.004449,"26":0,"27":0,"28":0,"29":0.008898,"30":0,"31":0.004449,"32":0,"33":0,"34":0.013347,"35":0,"36":0,"37":0,"38":0.013347,"39":0,"40":0.004449,"41":0.004449,"42":0,"43":0.048939,"44":0,"45":0,"46":0.004449,"47":0.004449,"48":0.004449,"49":0.631758,"50":0.004449,"51":0.008898,"52":0.004449,"53":0.017796,"54":0.004449,"55":0.004449,"56":0.008898,"57":0.013347,"58":0.040041,"59":0.013347,"60":0.008898,"61":0.035592,"62":0.013347,"63":0.031143,"64":0.013347,"65":0.035592,"66":0.026694,"67":0.066735,"68":0.031143,"69":0.053388,"70":0.075633,"71":0.08898,"72":0.306981,"73":13.476021,"74":0.04449,"75":0.022245,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.004449,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.004449,"39":0,"40":0,"41":0,"42":0,"43":0.004449,"44":0,"45":0,"46":0,"47":0.004449,"48":0.013347,"49":0.004449,"50":0.004449,"51":0.004449,"52":0.035592,"53":0.004449,"54":0.013347,"55":0.057837,"56":0.226899,"57":0.008898,"58":0.008898,"59":0.004449,"60":0.013347,"61":0.013347,"62":0.008898,"63":0.004449,"64":0.013347,"65":0.075633,"66":1.103352,"67":0.017796,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.102327,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.160164,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.004449,"9":0.004449,"10":0.022245,"11":0.035592,"12":0.364818,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.013347,"10.1":0.062286,"11.1":0.102327,"12.1":0.235797},G:{"8":0.1348659969979,"3.2":0.0087575322725908,"4.0-4.1":0.0052545193635545,"4.2-4.3":0.0017515064545182,"5.0-5.1":0.017515064545182,"6.0-6.1":0.0087575322725908,"7.0-7.1":0.031527116181327,"8.1-8.4":0.068308751726208,"9.0-9.2":0.040284648453918,"9.3":0.33453773281297,"10.0-10.2":0.18565968417893,"10.3":0.4431311329931,"11.0-11.2":0.54647001380967,"11.3-11.4":1.1227156373461,"12.0-12.1":6.7783299789853,"12.2":7.7749371516061},I:{"3":0.0002766622983871,"4":0.039839370967742,_:"67","2.1":0.0019366360887097,"2.2":0.0033199475806452,"2.3":0.0019366360887097,"4.1":0.019919685483871,"4.2-4.3":0.086318637096774,"4.4":0,"4.4.3-4.4.4":0.12090142439516},A:{"6":0,"7":0,"8":0.0315322875,"9":0.01801845,"10":0.0135138375,"11":0.297304425,"5.5":0},B:{"12":0.004449,"13":0.004449,"14":0.008898,"15":0.008898,"16":0.013347,"17":0.213552,"18":0.213552},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.48464641390728,"5.0-5.4":0.041246503311258,"6.2-6.4":0.061869754966887,"7.2-7.4":0.26810227152318,"8.2":1.1858369701987,"9.2":1.0724090860927},N:{"10":0.014802666666667,"11":0.029605333333333},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.094367},O:{"0":0.477386},Q:{"1.2":0.005551},H:{"0":0.65691602233677},L:{"0":56.969648}};


/***/ }),
/* 462 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0.005771,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.011542,"15":0.011542,"16":0.005771,"17":0.005771,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.005771,"24":0,"25":0,"26":0.046168,"27":0,"28":0.023084,"29":0,"30":0,"31":1.361956,"32":0,"33":0.005771,"34":0.017313,"35":0.011542,"36":0.005771,"37":0.023084,"38":0.005771,"39":0,"40":0.011542,"41":0.005771,"42":0,"43":0,"44":0.086565,"45":0.196214,"46":0,"47":0.190443,"48":0,"49":1.131116,"50":0,"51":0.011542,"52":0,"53":0,"54":0.017313,"55":0.080794,"56":0.017313,"57":0.005771,"58":0.103878,"59":0.080794,"60":0.005771,"61":0,"62":0.028855,"63":0.375115,"64":0,"65":0.005771,"66":0.005771,"67":0.05771,"68":0.080794,"69":0.046168,"70":0.138504,"71":0.248153,"72":0.652123,"73":18.270986,"74":0.005771,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.011542,"18":0,"19":0,"20":0,"21":0,"22":0.005771,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.005771,"44":0,"45":0,"46":0,"47":0.005771,"48":0.086565,"49":0,"50":0,"51":0,"52":0.023084,"53":0,"54":0,"55":0,"56":0,"57":0.011542,"58":0,"59":0.005771,"60":0.005771,"61":0.011542,"62":0.178901,"63":0.051939,"64":0.005771,"65":0.196214,"66":0.854108,"67":0.080794,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0.011542,"15":0,"16":0.005771,"17":0.011542,"18":0.005771,"19":0,"20":0.005771,"21":0.011542,"22":0.005771,"23":0,"24":0,"25":0.005771,"26":0,"27":0.005771,"28":0.005771,"29":0,"30":0.011542,"31":0.178901,"32":0,"33":0.005771,"34":0,"35":0.011542,"36":0.086565,"37":0.034626,"38":0.011542,"39":0,"40":0,"41":0,"42":0.005771,"43":0,"44":0,"45":0,"46":0.005771,"47":0,"48":0,"49":0.005771,"50":0,"51":0.005771,"52":0,"53":0,"54":0,"55":0,"56":0.046168,"57":0.034626,"58":2.487301,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.05771},E:{"4":0,"5":0,"6":0,"7":0.005771,"8":0,"9":0,"10":0,"11":0,"12":0.103878,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.005771,"11.1":0.034626,"12.1":0.034626},G:{"8":0.031392344441109,"3.2":0.0020384639247473,"4.0-4.1":0.0012230783548484,"4.2-4.3":0.00040769278494946,"5.0-5.1":0.0040769278494946,"6.0-6.1":0.0020384639247473,"7.0-7.1":0.0073384701290904,"8.1-8.4":0.015900018613029,"9.0-9.2":0.0093769340538377,"9.3":0.077869321925348,"10.0-10.2":0.043215435204643,"10.3":0.10314627459221,"11.0-11.2":0.12720014890423,"11.3-11.4":0.26133107515261,"12.0-12.1":1.5777710777544,"12.2":1.8097482723907},I:{"3":0.0028446794354839,"4":0.40963383870968,_:"67","2.1":0.019912756048387,"2.2":0.034136153225806,"2.3":0.019912756048387,"4.1":0.20481691935484,"4.2-4.3":0.88753998387097,"4.4":0,"4.4.3-4.4.4":1.2431249133065},A:{"6":0,"7":0,"8":0.046168,"9":0.069252,"10":0.017313,"11":0.271237,"5.5":0},B:{"12":0.005771,"13":0.069252,"14":0.017313,"15":0.011542,"16":0.011542,"17":0.132733,"18":0.098107},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":3.0932092553957,"5.0-5.4":0.25271317446043,"6.2-6.4":0.27293022841727,"7.2-7.4":0.79857363129496,"8.2":0.8794418471223,"9.2":0.32347286330935},N:{"10":0.041350222222222,"11":0.14472577777778},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.050748},O:{"0":3.505841},Q:{"1.2":0.579373},H:{"0":9.132540032646},L:{"0":28.723035}};


/***/ }),
/* 463 */
/***/ (function(module, exports) {

module.exports={D:{"73":60.789706,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 74 75 76"},C:{_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 3.5 3.6"},F:{_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},E:{"4":0,_:"0 5 6 7 8 9 10 11 12 3.1 3.2 5.1 6.1 7.1 9.1 10.1 11.1 12.1"},G:{"8":0.10575879495647,"3.2":0.0068674542179526,"4.0-4.1":0.0041204725307715,"4.2-4.3":0.0013734908435905,"5.0-5.1":0.013734908435905,"6.0-6.1":0.0068674542179526,"7.0-7.1":0.024722835184629,"8.1-8.4":0.05356614290003,"9.0-9.2":0.031590289402582,"9.3":0.26233675112579,"10.0-10.2":0.14559002942059,"10.3":0.3474931834284,"11.0-11.2":0.42852914320024,"11.3-11.4":0.88040763074152,"12.0-12.1":5.3154095646953,"12.2":6.0969258546983},I:{"3":0,"4":0,_:"67","2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},A:{_:"6 7 8 9 10 11 5.5"},B:{_:"12 13 14 15 16 17 18"},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":5.882745,"5.0-5.4":0.041792432432432,"6.2-6.4":0.11492918918919,"7.2-7.4":0.073136756756757,"8.2":0.50150918918919,"9.2":0.16716972972973},N:{"10":0.043380923076923,"11":0.37958307692308},J:{"7":0,"10":0},S:{_:"2.5"},R:{_:"0"},M:{_:"0"},O:{_:"0"},Q:{_:"1.2"},H:{"0":0},L:{"0":19.605588}};


/***/ }),
/* 464 */
/***/ (function(module, exports) {

module.exports={D:{"4":0.008602,"5":0,"6":0.004301,"7":0.012903,"8":0,"9":0,"10":0.004301,"11":0.012903,"12":0,"13":0,"14":0,"15":0,"16":0.004301,"17":0,"18":0,"19":0.004301,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.008602,"27":0.004301,"28":0,"29":0.004301,"30":0.038709,"31":0.012903,"32":0.004301,"33":0.012903,"34":0.004301,"35":0.004301,"36":0,"37":0.004301,"38":0.017204,"39":0,"40":0.481712,"41":0,"42":0.193545,"43":0.425799,"44":0.004301,"45":0.008602,"46":0.004301,"47":0.012903,"48":0.017204,"49":0.034408,"50":0,"51":0.004301,"52":0,"53":0.004301,"54":0,"55":0.047311,"56":0.004301,"57":0,"58":0.503217,"59":0.021505,"60":0.012903,"61":0,"62":0.047311,"63":0.124729,"64":0,"65":0.021505,"66":0.004301,"67":0.094622,"68":0.021505,"69":0.055913,"70":0.025806,"71":0.068816,"72":0.318274,"73":5.660116,"74":0.012903,"75":0.021505,_:"76"},C:{"2":0,"3":0,"4":0.111826,"5":0.021505,"6":0.025806,"7":0.012903,"8":0.017204,"9":0,"10":0.021505,"11":0.012903,"12":0.017204,"13":0.012903,"14":0,"15":0.008602,"16":0.017204,"17":0.004301,"18":0.025806,"19":0.025806,"20":0.004301,"21":0.030107,"22":0.008602,"23":0.008602,"24":0.008602,"25":0.004301,"26":0.004301,"27":0.008602,"28":0.004301,"29":0.012903,"30":0.008602,"31":0.004301,"32":0.025806,"33":0.012903,"34":0.017204,"35":0.047311,"36":0.012903,"37":0,"38":0.017204,"39":0.004301,"40":0.034408,"41":0.030107,"42":0.012903,"43":0.103224,"44":0.064515,"45":0.034408,"46":0.025806,"47":0.111826,"48":0.034408,"49":0.038709,"50":0.004301,"51":0.004301,"52":0.04301,"53":0.012903,"54":0.008602,"55":0.008602,"56":0.051612,"57":0.030107,"58":0.008602,"59":0.017204,"60":0.030107,"61":0.098923,"62":0.064515,"63":0.04301,"64":0.073117,"65":0.266662,"66":2.447269,"67":0.184943,"68":0,"3.5":0.004301,"3.6":0.012903},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.004301,"19":0,"20":0.008602,"21":0.004301,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.004301,"31":0,"32":0.004301,"33":0,"34":0,"35":0,"36":0,"37":0.098923,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.004301,"48":0,"49":0,"50":0,"51":0.060214,"52":0,"53":0,"54":0.004301,"55":0,"56":0,"57":0.034408,"58":0.378488,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.038709},E:{"4":0,"5":0,"6":0.021505,"7":0,"8":0,"9":0,"10":0.038709,"11":0.034408,"12":0.176341,_:"0","3.1":0,"3.2":0,"5.1":1.440835,"6.1":0.004301,"7.1":0,"9.1":0.021505,"10.1":0.073117,"11.1":0.275264,"12.1":0.038709},G:{"8":0.021672930251176,"3.2":0.0014073331331932,"4.0-4.1":0.00084439987991594,"4.2-4.3":0.00028146662663865,"5.0-5.1":0.0028146662663865,"6.0-6.1":0.0014073331331932,"7.0-7.1":0.0050663992794956,"8.1-8.4":0.010977198438907,"9.0-9.2":0.0064737324126889,"9.3":0.053760125687982,"10.0-10.2":0.029835462423697,"10.3":0.071211056539578,"11.0-11.2":0.087817587511258,"11.3-11.4":0.18042010767537,"12.0-12.1":1.0892758450916,"12.2":1.249430355649},I:{"3":0.0054369546370968,"4":0.78292146774194,_:"67","2.1":0.038058682459677,"2.2":0.065243455645161,"2.3":0.038058682459677,"4.1":0.39146073387097,"4.2-4.3":1.6963298467742,"4.4":0,"4.4.3-4.4.4":2.3759491764113},A:{"6":0,"7":0,"8":0.107525,"9":0.012903,"10":0.030107,"11":0.283866,"5.5":0},B:{"12":0.090321,"13":0.017204,"14":0.081719,"15":0.064515,"16":0.012903,"17":0.365585,"18":0.055913},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":3.3875207957245,"5.0-5.4":0.070784016627078,"6.2-6.4":0.091008021377672,"7.2-7.4":0.3438080807601,"8.2":0.3235840760095,"9.2":0.040448009501188},N:{"10":0,"11":0.045592},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.085485},O:{"0":1.19679},Q:{"1.2":0.039893},H:{"0":5.6328445979381},L:{"0":57.865802}};


/***/ }),
/* 465 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0.290752,"9":0,"10":0,"11":0.015104,"12":0.011328,"13":0,"14":0,"15":0.011328,"16":0.015104,"17":0,"18":0.003776,"19":0,"20":0,"21":0,"22":0.003776,"23":0,"24":0.003776,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.045312,"32":0.003776,"33":0.007552,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.011328,"40":0.003776,"41":0,"42":0.003776,"43":0,"44":0,"45":0,"46":0.022656,"47":0.011328,"48":0.003776,"49":0.2832,"50":0,"51":0.007552,"52":0.003776,"53":0,"54":0.003776,"55":0.01888,"56":0.030208,"57":0.045312,"58":0.011328,"59":0,"60":0.003776,"61":0.003776,"62":0.011328,"63":0.252992,"64":0.011328,"65":0.003776,"66":0.003776,"67":0.003776,"68":0.011328,"69":0.052864,"70":0.05664,"71":0.426688,"72":0.26432,"73":7.015808,"74":0.007552,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0.003776,"15":0,"16":0,"17":0.003776,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.003776,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.064192,"49":0,"50":0.003776,"51":0.026432,"52":0.03776,"53":0.003776,"54":0,"55":0,"56":0.158592,"57":0.052864,"58":0,"59":0,"60":0,"61":0.003776,"62":0,"63":0.011328,"64":0.030208,"65":0.049088,"66":0.079296,"67":0,"68":0,"3.5":0,"3.6":0.003776},F:{"9":0,"11":0,"12":0,"15":0.003776,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.011328,"24":0,"25":0,"26":0,"27":0,"28":0.003776,"29":0,"30":0.003776,"31":0,"32":0,"33":0,"34":0,"35":0.015104,"36":0.007552,"37":0,"38":0,"39":0,"40":0.011328,"41":0,"42":0,"43":0.003776,"44":0.003776,"45":0.003776,"46":0.003776,"47":0.003776,"48":0,"49":0.003776,"50":0.015104,"51":0.007552,"52":0,"53":0.011328,"54":0.003776,"55":0,"56":0.007552,"57":0.022656,"58":0.052864,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.007552},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.007552,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0.015104},G:{"8":0.03228140818573,"3.2":0.0020961953367357,"4.0-4.1":0.0012577172020414,"4.2-4.3":0.00041923906734714,"5.0-5.1":0.0041923906734714,"6.0-6.1":0.0020961953367357,"7.0-7.1":0.0075463032122486,"8.1-8.4":0.016350323626539,"9.0-9.2":0.0096424985489843,"9.3":0.080074661863304,"10.0-10.2":0.044439341138797,"10.3":0.10606748403883,"11.0-11.2":0.13080258901231,"11.3-11.4":0.26873224216952,"12.0-12.1":1.6224551906334,"12.2":1.861002219954},I:{"3":0.0066902258064516,"4":0.96339251612903,_:"67","2.1":0.046831580645161,"2.2":0.080282709677419,"2.3":0.046831580645161,"4.1":0.48169625806452,"4.2-4.3":2.0873504516129,"4.4":0,"4.4.3-4.4.4":2.9236286774194},A:{"6":0,"7":0,"8":0.11635826086957,"9":0.023271652173913,"10":0.13575130434783,"11":0.4382827826087,"5.5":0},B:{"12":0.003776,"13":0.015104,"14":0.003776,"15":0.003776,"16":0.003776,"17":0.03776,"18":0.003776},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":6.647407788173,"5.0-5.4":0.14450886496028,"6.2-6.4":0.39223834774934,"7.2-7.4":0.59867958340688,"8.2":2.6837360635481,"9.2":1.2283253521624},N:{"10":0.1914620952381,"11":0.2815619047619},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.043568},O:{"0":1.842304},Q:{"1.2":0.068464},H:{"0":0.70709773195876},L:{"0":54.217104}};


/***/ }),
/* 466 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.008012,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.008012,"28":0,"29":0.008012,"30":0,"31":0.016024,"32":0.008012,"33":0.008012,"34":0,"35":0,"36":0,"37":0,"38":0.016024,"39":0.008012,"40":0.048072,"41":0.024036,"42":0.016024,"43":0.056084,"44":0,"45":0.008012,"46":0.016024,"47":0.008012,"48":0.008012,"49":1.754628,"50":0.008012,"51":0.056084,"52":0.024036,"53":0.016024,"54":0.024036,"55":0.016024,"56":0.024036,"57":0.008012,"58":0.128192,"59":0.024036,"60":0.048072,"61":0.953428,"62":0.096144,"63":0.144216,"64":0.096144,"65":0.344516,"66":0.144216,"67":0.344516,"68":0.08012,"69":0.256384,"70":0.232348,"71":0.408612,"72":2.36354,"73":45.660388,"74":0.416624,"75":0.032048,_:"76"},C:{"2":0,"3":0.008012,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.008012,"33":0.008012,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0.008012,"42":0.008012,"43":0.008012,"44":0,"45":0,"46":0,"47":0.008012,"48":0.144216,"49":0,"50":0.016024,"51":0,"52":0.096144,"53":0,"54":0.008012,"55":0.008012,"56":0.016024,"57":0.024036,"58":0.016024,"59":0.016024,"60":0.056084,"61":0.024036,"62":0.032048,"63":0.008012,"64":0.048072,"65":0.128192,"66":2.451672,"67":0.016024,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.016024,"37":0.008012,"38":0.008012,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.008012,"50":0,"51":0,"52":0.008012,"53":0,"54":0,"55":0,"56":0.032048,"57":0.008012,"58":2.171252,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0.008012,"7":0.008012,"8":0.024036,"9":0,"10":0.048072,"11":0.032048,"12":0.504756,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.024036,"7.1":0,"9.1":0.048072,"10.1":0.176264,"11.1":0.16024,"12.1":0.328492},G:{"8":0.021284701691184,"3.2":0.0013821234864405,"4.0-4.1":0.0008292740918643,"4.2-4.3":0.0002764246972881,"5.0-5.1":0.002764246972881,"6.0-6.1":0.0013821234864405,"7.0-7.1":0.0049756445511858,"8.1-8.4":0.010780563194236,"9.0-9.2":0.0063577680376263,"9.3":0.052797117182027,"10.0-10.2":0.029301017912539,"10.3":0.06993544841389,"11.0-11.2":0.086244505553888,"11.3-11.4":0.17718823096167,"12.0-12.1":1.069763578505,"12.2":1.2270492312619},I:{"3":0.00093179838709677,"4":0.13417896774194,_:"67","2.1":0.0065225887096774,"2.2":0.011181580645161,"2.3":0.0065225887096774,"4.1":0.067089483870968,"4.2-4.3":0.29072109677419,"4.4":0,"4.4.3-4.4.4":0.40719589516129},A:{"6":0,"7":0,"8":0.13521621917808,"9":0.01690202739726,"10":0.042255068493151,"11":0.42255068493151,"5.5":0},B:{"12":0.016024,"13":0.016024,"14":0.032048,"15":0.024036,"16":0.032048,"17":0.392588,"18":0.216324},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.53066346666667,"5.0-5.4":0.020410133333333,"6.2-6.4":0.040820266666667,"7.2-7.4":0.1224608,"8.2":0.59189386666667,"9.2":0.37758746666667},N:{"10":0.012212,"11":0.073272},J:{"7":0,"10":0.007952},S:{"2.5":0},R:{_:"0"},M:{"0":0.065604},O:{"0":0.28826},Q:{"1.2":0},H:{"0":0.42723896219931},L:{"0":28.982644}};


/***/ }),
/* 467 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.09972,"43":0,"44":0,"45":0,"46":0.00554,"47":0,"48":0,"49":0.01108,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0.01108,"56":0.04432,"57":0.1385,"58":0.06648,"59":0.01662,"60":0,"61":0.01662,"62":0,"63":0.03324,"64":0.01108,"65":0.0554,"66":0.03324,"67":0.0831,"68":0.14404,"69":0.04432,"70":0.06094,"71":0.14404,"72":0.7756,"73":14.39292,"74":0.01662,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00554,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.01108,"35":0,"36":0,"37":0.01662,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.00554,"44":0,"45":0,"46":0,"47":0.00554,"48":0.04432,"49":0,"50":0.00554,"51":0,"52":0.3324,"53":0.00554,"54":0,"55":0.00554,"56":0.01108,"57":0,"58":0,"59":0.00554,"60":0.03324,"61":0,"62":0.00554,"63":0.02216,"64":0.03324,"65":0.23268,"66":2.8531,"67":0.28808,"68":0,"3.5":0,"3.6":0.03878},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.01662,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.00554,"57":0,"58":1.25204,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.0277,"11":0.01108,"12":0.09418,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0.12742,"9.1":0,"10.1":0.15512,"11.1":0.39888,"12.1":0.01662},G:{"8":0.096007665365756,"3.2":0.0062342639847894,"4.0-4.1":0.0037405583908736,"4.2-4.3":0.0012468527969579,"5.0-5.1":0.012468527969579,"6.0-6.1":0.0062342639847894,"7.0-7.1":0.022443350345242,"8.1-8.4":0.048627259081357,"9.0-9.2":0.028677614330031,"9.3":0.23814888421895,"10.0-10.2":0.13216639647753,"10.3":0.31545375763034,"11.0-11.2":0.38901807265086,"11.3-11.4":0.79923264285,"12.0-12.1":4.825320324227,"12.2":5.534779565696},I:{"3":0.00430625,"4":0.6201,_:"67","2.1":0.03014375,"2.2":0.051675,"2.3":0.03014375,"4.1":0.31005,"4.2-4.3":1.34355,"4.4":0,"4.4.3-4.4.4":1.88183125},A:{"6":0,"7":0,"8":0.32207962174941,"9":0.066637163120567,"10":0.21101768321513,"11":1.7492255319149,"5.5":0},B:{"12":0.01108,"13":0.13296,"14":0.0831,"15":0.11634,"16":0.15512,"17":2.3268,"18":0.20498},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.31234340836013,"5.0-5.4":0.12493736334405,"6.2-6.4":1.5513055948553,"7.2-7.4":0.083291575562701,"8.2":0.62468681672026,"9.2":0.54139524115756},N:{"10":0,"11":0.04906},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.00892},O:{"0":4.04076},Q:{"1.2":0.01338},H:{"0":0.37579714776632},L:{"0":43.63516}};


/***/ }),
/* 468 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.004008,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.048096,"23":0,"24":0,"25":0,"26":0.012024,"27":0,"28":0,"29":0.028056,"30":0,"31":0,"32":0,"33":0,"34":0.024048,"35":0,"36":0,"37":0,"38":0.032064,"39":0.004008,"40":0.004008,"41":0,"42":0.004008,"43":0.008016,"44":0.004008,"45":0.008016,"46":0.008016,"47":0.004008,"48":0.008016,"49":0.396792,"50":0.004008,"51":0.004008,"52":0.004008,"53":0.008016,"54":0.004008,"55":0.012024,"56":0.016032,"57":0.008016,"58":0.02004,"59":0.012024,"60":0.012024,"61":0.14028,"62":0.04008,"63":0.088176,"64":0.04008,"65":0.064128,"66":0.02004,"67":0.04008,"68":0.028056,"69":0.084168,"70":0.1002,"71":0.14028,"72":0.396792,"73":10.60116,"74":0.02004,"75":0.004008,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.004008,"46":0,"47":0.004008,"48":0.016032,"49":0,"50":0.004008,"51":0.004008,"52":0.028056,"53":0,"54":0.008016,"55":0,"56":0.004008,"57":0.012024,"58":0.008016,"59":0.008016,"60":0.008016,"61":0.004008,"62":0.004008,"63":0.004008,"64":0.004008,"65":0.024048,"66":0.472944,"67":0.008016,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.012024,"32":0.004008,"33":0,"34":0,"35":0,"36":0.004008,"37":0,"38":0,"39":0,"40":0.016032,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.004008,"49":0.004008,"50":0,"51":0.008016,"52":0.004008,"53":0,"54":0,"55":0,"56":0.004008,"57":0.004008,"58":0.492984,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.004008,"9":0.008016,"10":0.004008,"11":0.012024,"12":0.188376,_:"0","3.1":0,"3.2":0,"5.1":0.02004,"6.1":0,"7.1":0,"9.1":0.008016,"10.1":0.024048,"11.1":0.044088,"12.1":0.156312},G:{"8":0.10310100430301,"3.2":0.0066948704092865,"4.0-4.1":0.0040169222455719,"4.2-4.3":0.0013389740818573,"5.0-5.1":0.013389740818573,"6.0-6.1":0.0066948704092865,"7.0-7.1":0.024101533473431,"8.1-8.4":0.052219989192435,"9.0-9.2":0.030796403882718,"9.3":0.25574404963474,"10.0-10.2":0.14193125267687,"10.3":0.3387604427099,"11.0-11.2":0.41775991353948,"11.3-11.4":0.85828238647053,"12.0-12.1":5.1818296967878,"12.2":5.9437059493646},I:{"3":0.00242875,"4":0.34974,_:"67","2.1":0.01700125,"2.2":0.029145,"2.3":0.01700125,"4.1":0.17487,"4.2-4.3":0.75777,"4.4":0,"4.4.3-4.4.4":1.06136375},A:{"6":0,"7":0,"8":0.0322644,"9":0.0161322,"10":0.0161322,"11":0.5807592,"5.5":0},B:{"12":0.004008,"13":0.004008,"14":0.016032,"15":0.012024,"16":0.028056,"17":0.272544,"18":0.064128},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.5301,"5.0-5.4":0.16321066666667,"6.2-6.4":0.22441466666667,"7.2-7.4":0.66304333333333,"8.2":3.1724073333333,"9.2":2.815384},N:{"10":0.011523076923077,"11":0.13827692307692},J:{"7":0,"10":0.005992},S:{"2.5":0},R:{_:"0"},M:{"0":0.083888},O:{"0":0.143808},Q:{"1.2":0},H:{"0":0.57295668728522},L:{"0":54.300824}};


/***/ }),
/* 469 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.005261,"23":0,"24":0,"25":0,"26":0.005261,"27":0,"28":0,"29":0.005261,"30":0,"31":0.010522,"32":0,"33":0,"34":0.005261,"35":0.005261,"36":0.005261,"37":0.005261,"38":0.015783,"39":0,"40":0,"41":0.021044,"42":0,"43":0.005261,"44":0.005261,"45":0,"46":0.005261,"47":0,"48":0.015783,"49":0.21044,"50":0.005261,"51":0.005261,"52":0,"53":0.042088,"54":0.031566,"55":0.015783,"56":0.005261,"57":0,"58":0.026305,"59":0.005261,"60":0.015783,"61":0.005261,"62":0.042088,"63":0.031566,"64":0.036827,"65":0.131525,"66":0.021044,"67":0.042088,"68":0.036827,"69":0.073654,"70":0.068393,"71":0.15783,"72":0.99959,"73":15.330554,"74":0.026305,"75":0.015783,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.005261,"41":0,"42":0.005261,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0.042088,"49":0,"50":0,"51":0.005261,"52":0.031566,"53":0.005261,"54":0.005261,"55":0.010522,"56":0.099959,"57":0,"58":0,"59":0.005261,"60":0.036827,"61":0,"62":0.026305,"63":0.015783,"64":0.010522,"65":0.084176,"66":1.288945,"67":0.015783,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0.005261,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.010522,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.005261,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.399836,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.005261},E:{"4":0,"5":0,"6":0,"7":0,"8":0.010522,"9":0.005261,"10":0.015783,"11":0.036827,"12":0.810194,_:"0","3.1":0,"3.2":0,"5.1":0.063132,"6.1":0,"7.1":0,"9.1":0.021044,"10.1":0.147308,"11.1":0.189396,"12.1":0.636581},G:{"8":0.10760090803562,"3.2":0.0069870719503653,"4.0-4.1":0.0041922431702192,"4.2-4.3":0.0013974143900731,"5.0-5.1":0.013974143900731,"6.0-6.1":0.0069870719503653,"7.0-7.1":0.025153459021315,"8.1-8.4":0.054499161212849,"9.0-9.2":0.03214053097168,"9.3":0.26690614850395,"10.0-10.2":0.14812592534774,"10.3":0.35354584068848,"11.0-11.2":0.43599328970279,"11.3-11.4":0.89574262403683,"12.0-12.1":5.4079936895827,"12.2":6.2031224775343},I:{"3":0.0015621693548387,"4":0.22495238709677,_:"67","2.1":0.010935185483871,"2.2":0.018746032258065,"2.3":0.010935185483871,"4.1":0.11247619354839,"4.2-4.3":0.48739683870968,"4.4":0,"4.4.3-4.4.4":0.68266800806452},A:{"6":0.005261,"7":0,"8":0.005261,"9":0.015783,"10":0.010522,"11":0.73654,"5.5":0},B:{"12":0.010522,"13":0.010522,"14":0.042088,"15":0.026305,"16":0.073654,"17":1.199508,"18":0.247267},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.37930880478088,"5.0-5.4":0.032512183266932,"6.2-6.4":0.065024366533865,"7.2-7.4":0.23842267729084,"8.2":2.0699423346614,"9.2":2.6551616334661},N:{"10":0.011509,"11":0.069054},J:{"7":0,"10":0.071085},S:{"2.5":0},R:{_:"0"},M:{"0":0.123214},O:{"0":0.104258},Q:{"1.2":0.004739},H:{"0":0.42173842955326},L:{"0":50.798424}};


/***/ }),
/* 470 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.17604,"53":0.266016,"54":0,"55":0.089976,"56":0.089976,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0.089976,"73":6.490008,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.17604,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":2.75796,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.089976,"8":0,"9":0,"10":0,"11":0,"12":0.266016,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.266016,"10.1":0,"11.1":0,"12.1":0},G:{"8":0.012616503552487,"3.2":0.0008192534774342,"4.0-4.1":0.00049155208646052,"4.2-4.3":0.00016385069548684,"5.0-5.1":0.0016385069548684,"6.0-6.1":0.0008192534774342,"7.0-7.1":0.0029493125187631,"8.1-8.4":0.0063901771239868,"9.0-9.2":0.0037685659961973,"9.3":0.031295482837987,"10.0-10.2":0.017368173721605,"10.3":0.041454225958171,"11.0-11.2":0.051121416991894,"11.3-11.4":0.10502829580706,"12.0-12.1":0.63410219153407,"12.2":0.72733323726609},I:{"3":0,"4":0,_:"67","2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":1.067976,"5.5":0},B:{"12":0,"13":2.488032,"14":0.089976,"15":0,"16":0,"17":0,"18":0.089976},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":1.619408},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0},Q:{"1.2":0},H:{"0":0.43804310652921},L:{"0":80.632544}};


/***/ }),
/* 471 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.004848,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.004848,"23":0,"24":0.004848,"25":0,"26":0.009696,"27":0,"28":0,"29":0.043632,"30":0,"31":0.004848,"32":0,"33":0,"34":0.009696,"35":0,"36":0,"37":0,"38":0.033936,"39":0.004848,"40":0,"41":0.004848,"42":0,"43":0.004848,"44":0,"45":0.004848,"46":0.004848,"47":0.004848,"48":0.009696,"49":0.494496,"50":0.004848,"51":0.009696,"52":0,"53":0.019392,"54":0.004848,"55":0.014544,"56":0.009696,"57":0.009696,"58":0.02424,"59":0.009696,"60":0.014544,"61":0.305424,"62":0.014544,"63":0.058176,"64":0.038784,"65":0.029088,"66":0.029088,"67":0.067872,"68":0.067872,"69":0.092112,"70":0.092112,"71":0.179376,"72":0.7272,"73":14.485824,"74":0.02424,"75":0.009696,_:"76"},C:{"2":0,"3":0,"4":0.014544,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0.004848,"48":0.009696,"49":0,"50":0.004848,"51":0.004848,"52":0.043632,"53":0,"54":0,"55":0,"56":0.019392,"57":0.004848,"58":0,"59":0.004848,"60":0.009696,"61":0.004848,"62":0.004848,"63":0.004848,"64":0.014544,"65":0.053328,"66":0.736896,"67":0.009696,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.004848,"37":0.111504,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.087264,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0.004848,"8":0.004848,"9":0.019392,"10":0.014544,"11":0.02424,"12":0.358752,_:"0","3.1":0,"3.2":0,"5.1":0.019392,"6.1":0,"7.1":0,"9.1":0.02424,"10.1":0.053328,"11.1":0.092112,"12.1":0.198768},G:{"8":0.29065263124187,"3.2":0.018873547483238,"4.0-4.1":0.011324128489943,"4.2-4.3":0.0037747094966477,"5.0-5.1":0.037747094966477,"6.0-6.1":0.018873547483238,"7.0-7.1":0.067944770939658,"8.1-8.4":0.14721367036926,"9.0-9.2":0.086818318422896,"9.3":0.7209695138597,"10.0-10.2":0.40011920664465,"10.3":0.95500150265186,"11.0-11.2":1.1777093629541,"11.3-11.4":2.4195887873511,"12.0-12.1":14.608125752026,"12.2":16.755935455619},I:{"3":0.00034732258064516,"4":0.050014451612903,_:"67","2.1":0.0024312580645161,"2.2":0.0041678709677419,"2.3":0.0024312580645161,"4.1":0.025007225806452,"4.2-4.3":0.10836464516129,"4.4":0,"4.4.3-4.4.4":0.15177996774194},A:{"6":0,"7":0,"8":0.049167659574468,"9":0.019667063829787,"10":0.034417361702128,"11":1.2832759148936,"5.5":0},B:{"12":0,"13":0.004848,"14":0.004848,"15":0.004848,"16":0.014544,"17":0.382992,"18":0.116352},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.35451957894737,"5.0-5.4":0.033236210526316,"6.2-6.4":0.066472421052632,"7.2-7.4":0.33236210526316,"8.2":1.3516058947368,"9.2":0.80874778947368},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.072128},O:{"0":0.066976},Q:{"1.2":0.010304},H:{"0":0.9218627628866},L:{"0":35.046368}};


/***/ }),
/* 472 */
/***/ (function(module, exports) {

module.exports={D:{"9":0.00427,"11":0.00854,"21":0.05978,"22":0.00854,"24":0.00427,"25":0.00427,"27":0.00854,"29":0.00854,"31":0.00427,"32":0.00427,"33":0.02989,"36":0.05978,"38":0.09394,"40":0.01281,"43":0.09394,"46":0.00854,"48":0.00427,"49":0.13237,"50":0.00427,"51":0.00854,"53":0.02562,"55":0.15799,"56":0.02562,"57":0.01281,"58":0.19215,"59":0.00854,"60":0.0427,"61":0.00854,"62":0.02989,"63":0.12383,"64":0.02562,"65":0.39284,"66":0.01708,"67":0.10675,"68":0.06405,"69":0.10248,"70":0.10675,"71":0.23058,"72":0.93513,"73":17.70342,"74":0.10675,"75":0.02562,_:"4 5 6 7 8 10 12 13 14 15 16 17 18 19 20 23 26 28 30 34 35 37 39 41 42 44 45 47 52 54 76"},C:{"4":0.01281,"5":0.00427,"6":0.01281,"10":0.00854,"11":0.00854,"13":0.00854,"14":0.00854,"15":0.00854,"16":0.00427,"17":0.01281,"18":0.01281,"19":0.00854,"20":0.00854,"21":0.01708,"22":0.00427,"23":0.03416,"24":0.00427,"26":0.01708,"27":0.00427,"28":0.00854,"29":0.00854,"30":0.02562,"31":0.01281,"32":0.01708,"33":0.01708,"34":0.03416,"35":0.01281,"36":0.03843,"37":0.02562,"38":0.02989,"39":0.00854,"40":0.02135,"41":0.02135,"42":0.02562,"43":0.11956,"44":0.05551,"45":0.0427,"46":0.02562,"47":0.10675,"48":0.11102,"49":0.02562,"50":0.00854,"51":0.00854,"52":0.11102,"53":0.00854,"54":0.02135,"55":0.00854,"56":0.02989,"57":0.0427,"58":0.03416,"59":0.01281,"60":0.19215,"61":0.02989,"62":0.03416,"63":0.02989,"64":0.08113,"65":0.44408,"66":5.48695,"67":0.67466,_:"2 3 7 8 9 12 25 68 3.5","3.6":0.01281},F:{"15":0.00427,"36":0.02562,"42":0.01281,"49":0.00854,"51":0.00854,"56":0.01281,"57":0.02989,"58":3.00608,_:"9 11 12 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 43 44 45 46 47 48 50 52 53 54 55 9.5-9.6 10.5 10.6 11.1 11.5","10.0-10.1":0,"11.6":0.00854,"12.1":0.00427},E:{"4":0.00854,"8":0.99491,"9":0.28182,"10":0.1281,"11":0.22204,"12":0.60634,_:"0 5 6 7 3.1 3.2 6.1","5.1":0.31598,"7.1":0.00427,"9.1":0.04697,"10.1":0.1281,"11.1":0.4697,"12.1":0.38857},G:{"8":0.023488814169919,"3.2":0.0015252476733714,"4.0-4.1":0.00091514860402282,"4.2-4.3":0.00030504953467427,"5.0-5.1":0.0030504953467427,"6.0-6.1":0.0015252476733714,"7.0-7.1":0.0054908916241369,"8.1-8.4":0.011896931852297,"9.0-9.2":0.0070161392975083,"9.3":0.058264461122786,"10.0-10.2":0.032335250675473,"10.3":0.077177532272591,"11.0-11.2":0.095175454818373,"11.3-11.4":0.19553675172621,"12.0-12.1":1.1805416991894,"12.2":1.3541148844191},I:{"3":0.00098773185483871,"4":0.14223338709677,_:"67","2.1":0.006914122983871,"2.2":0.011852782258065,"2.3":0.006914122983871,"4.1":0.071116693548387,"4.2-4.3":0.30817233870968,"4.4":0,"4.4.3-4.4.4":0.43163882056452},A:{"8":0.44318467741935,"9":0.022383064516129,"10":0.062672580645161,"11":0.58195967741935,_:"6 7 5.5"},B:{"12":0.18361,"13":0.08113,"14":0.05124,"15":0.11529,"16":0.12383,"17":0.91378,"18":0.83692},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.70153176470588,"5.0-5.4":0.070153176470588,"6.2-6.4":0.060131294117647,"7.2-7.4":0.59129105882353,"8.2":0.681488,"9.2":0.45098470588235},N:{"10":0.0440064,"11":0.2310336},J:{"7":0,"10":0.02865},S:{_:"2.5"},R:{_:"0"},M:{"0":0.30369},O:{"0":3.10566},Q:{"1.2":0.01719},H:{"0":16.778887268041},L:{"0":30.22913}};


/***/ }),
/* 473 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.008314,"12":0.008314,"13":0,"14":0.008314,"15":0.008314,"16":0,"17":0.008314,"18":0.008314,"19":0.008314,"20":0.008314,"21":0.008314,"22":0.008314,"23":0.008314,"24":0.008314,"25":0.008314,"26":0.008314,"27":0.008314,"28":0,"29":0.116396,"30":0,"31":0.008314,"32":0,"33":0,"34":0.008314,"35":0.008314,"36":0,"37":0,"38":0.016628,"39":0.008314,"40":0.016628,"41":0.016628,"42":0.008314,"43":0.016628,"44":0,"45":0.049884,"46":0.024942,"47":0.008314,"48":0.008314,"49":1.139018,"50":0.008314,"51":0.033256,"52":0.016628,"53":0.008314,"54":0.016628,"55":0.024942,"56":0.058198,"57":0.04157,"58":0.049884,"59":0.049884,"60":0.058198,"61":0.681748,"62":0.099768,"63":0.149652,"64":0.091454,"65":0.133024,"66":0.074826,"67":0.174594,"68":0.199536,"69":0.257734,"70":0.315932,"71":0.482212,"72":1.920534,"73":41.90256,"74":0.058198,"75":0.058198,_:"76"},C:{"2":0,"3":0.008314,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.008314,"13":0,"14":0.024942,"15":0.008314,"16":0.016628,"17":0,"18":0,"19":0,"20":0.008314,"21":0.008314,"22":0.008314,"23":0,"24":0.008314,"25":0,"26":0.008314,"27":0,"28":0.008314,"29":0,"30":0.008314,"31":0.008314,"32":0.008314,"33":0,"34":0,"35":0.008314,"36":0.008314,"37":0,"38":0.008314,"39":0,"40":0,"41":0,"42":0,"43":0.016628,"44":0,"45":0.058198,"46":0.016628,"47":0.058198,"48":0.066512,"49":0.016628,"50":0.033256,"51":0.016628,"52":0.448956,"53":0.016628,"54":0.024942,"55":0.008314,"56":0.058198,"57":0.049884,"58":0.024942,"59":0.049884,"60":0.266048,"61":0.074826,"62":0.033256,"63":0.033256,"64":0.049884,"65":0.282676,"66":3.541764,"67":0.049884,"68":0.008314,"3.5":0.016628,"3.6":0.049884},F:{"9":0,"11":0,"12":0.016628,"15":0,"16":0,"17":0,"18":0.008314,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.008314,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.191222,"37":0.016628,"38":0,"39":0,"40":0.008314,"41":0,"42":0.016628,"43":0.008314,"44":0,"45":0,"46":0,"47":0.008314,"48":0.016628,"49":0.008314,"50":0.008314,"51":0.016628,"52":0.008314,"53":0.008314,"54":0.008314,"55":0.033256,"56":0.024942,"57":0.04157,"58":5.096482,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0.008314,"11.1":0,"11.5":0.008314,"11.6":0.024942,"12.1":0.881284},E:{"4":0.008314,"5":0.008314,"6":0,"7":0,"8":0.008314,"9":0,"10":0.008314,"11":0.099768,"12":1.2471,_:"0","3.1":0,"3.2":0,"5.1":0.008314,"6.1":0,"7.1":0,"9.1":0.024942,"10.1":0.091454,"11.1":0.232792,"12.1":0.70669},G:{"8":0.054141487040929,"3.2":0.0035156809766837,"4.0-4.1":0.0021094085860102,"4.2-4.3":0.00070313619533674,"5.0-5.1":0.0070313619533674,"6.0-6.1":0.0035156809766837,"7.0-7.1":0.012656451516061,"8.1-8.4":0.027422311618133,"9.0-9.2":0.016172132492745,"9.3":0.13429901330932,"10.0-10.2":0.074532436705694,"10.3":0.17789345742019,"11.0-11.2":0.21937849294506,"11.3-11.4":0.45071030121085,"12.0-12.1":2.7211370759532,"12.2":3.1212215710998},I:{"3":0.00059176411290323,"4":0.085214032258064,_:"67","2.1":0.0041423487903226,"2.2":0.0071011693548387,"2.3":0.0041423487903226,"4.1":0.042607016129032,"4.2-4.3":0.18463040322581,"4.4":0,"4.4.3-4.4.4":0.25860091733871},A:{"6":0,"7":0,"8":0.066854845360825,"9":0.025070567010309,"10":0.041784278350515,"11":1.4875203092784,"5.5":0},B:{"12":0.008314,"13":0.008314,"14":0.04157,"15":0.024942,"16":0.033256,"17":0.274362,"18":0.174594},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.11428345945946,"5.0-5.4":0.010389405405405,"6.2-6.4":0.031168216216216,"7.2-7.4":0.031168216216216,"8.2":0.30129275675676,"9.2":0.28051394594595},N:{"10":0.0131508,"11":0.0526032},J:{"7":0,"10":0.011802},S:{"2.5":0.003372},R:{_:"0"},M:{"0":0.094416},O:{"0":0.369234},Q:{"1.2":0.005058},H:{"0":0.59538106185567},L:{"0":20.484284}};


/***/ }),
/* 474 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.009328,"12":0,"13":0.009328,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.009328,"20":0,"21":0,"22":0.004664,"23":0,"24":0.004664,"25":0.02332,"26":0,"27":0,"28":0.004664,"29":0,"30":0,"31":0.004664,"32":0,"33":0.004664,"34":0.004664,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.004664,"41":0,"42":0,"43":0.018656,"44":0,"45":0,"46":0,"47":0,"48":0.004664,"49":0.107272,"50":0.004664,"51":0,"52":0,"53":0,"54":0.004664,"55":0.009328,"56":0.009328,"57":0,"58":0.055968,"59":0.004664,"60":0.009328,"61":0,"62":0.018656,"63":0.079288,"64":0.018656,"65":0.125928,"66":0.013992,"67":0.032648,"68":0.027984,"69":0.083952,"70":0.06996,"71":0.107272,"72":0.471064,"73":10.326096,"74":0.04664,"75":0.009328,_:"76"},C:{"2":0,"3":0.004664,"4":0,"5":0.004664,"6":0,"7":0.004664,"8":0.004664,"9":0,"10":0,"11":0,"12":0,"13":0.004664,"14":0.004664,"15":0.009328,"16":0.004664,"17":0.004664,"18":0.004664,"19":0,"20":0.004664,"21":0.004664,"22":0.004664,"23":0.004664,"24":0.009328,"25":0.004664,"26":0.004664,"27":0.009328,"28":0,"29":0,"30":0.009328,"31":0.004664,"32":0.009328,"33":0.004664,"34":0.004664,"35":0.009328,"36":0.009328,"37":0.027984,"38":0.02332,"39":0.013992,"40":0.013992,"41":0.004664,"42":0.013992,"43":0.065296,"44":0.032648,"45":0.018656,"46":0.018656,"47":0.1166,"48":0.130592,"49":0.060632,"50":0.041976,"51":0.004664,"52":0.144584,"53":0.004664,"54":0.009328,"55":0.02332,"56":0.037312,"57":0.013992,"58":0.013992,"59":0.02332,"60":0.107272,"61":0.02332,"62":0.065296,"63":0.037312,"64":0.06996,"65":0.363792,"66":3.208832,"67":0.65296,"68":0.004664,"3.5":0,"3.6":0.004664},F:{"9":0,"11":0,"12":0,"15":0,"16":0.013992,"17":0,"18":0.004664,"19":0.009328,"20":0.037312,"21":0,"22":0.004664,"23":0.055968,"24":0,"25":0,"26":0,"27":0,"28":0.013992,"29":0.004664,"30":0.018656,"31":0,"32":0.009328,"33":0.004664,"34":0.004664,"35":0.004664,"36":0.009328,"37":0.009328,"38":0.130592,"39":0,"40":0,"41":0,"42":0.02332,"43":0,"44":0,"45":0.004664,"46":0,"47":0,"48":0.004664,"49":0.004664,"50":0.004664,"51":0.013992,"52":0,"53":0.004664,"54":0,"55":0.004664,"56":0.009328,"57":0.013992,"58":1.156672,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.18656},E:{"4":0,"5":0,"6":0,"7":0,"8":0.009328,"9":0.004664,"10":0.009328,"11":0.055968,"12":0.242528,_:"0","3.1":0,"3.2":0,"5.1":0.051304,"6.1":0,"7.1":0,"9.1":0.009328,"10.1":0.041976,"11.1":0.055968,"12.1":0.107272},G:{"8":0.025302355648954,"3.2":0.001643010107075,"4.0-4.1":0.00098580606424497,"4.2-4.3":0.00032860202141499,"5.0-5.1":0.0032860202141499,"6.0-6.1":0.001643010107075,"7.0-7.1":0.0059148363854698,"8.1-8.4":0.012815478835185,"9.0-9.2":0.0075578464925448,"9.3":0.062762986090263,"10.0-10.2":0.034831814269989,"10.3":0.083136311417993,"11.0-11.2":0.10252383068148,"11.3-11.4":0.21063389572701,"12.0-12.1":1.271689822876,"12.2":1.4586643730611},I:{"3":0.0013872258064516,"4":0.19976051612903,_:"67","2.1":0.0097105806451613,"2.2":0.016646709677419,"2.3":0.0097105806451613,"4.1":0.099880258064516,"4.2-4.3":0.4328144516129,"4.4":0,"4.4.3-4.4.4":0.60621767741935},A:{"6":0,"7":0,"8":0.056694857142857,"9":0.0047245714285714,"10":0.023622857142857,"11":0.27874971428571,"5.5":0},B:{"12":0.079288,"13":0.055968,"14":0.051304,"15":0.04664,"16":0.051304,"17":0.391776,"18":0.144584},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.31219357746479,"5.0-5.4":0.090636845070423,"6.2-6.4":0.030212281690141,"7.2-7.4":0.19134445070423,"8.2":0.57403335211268,"9.2":0.23162749295775},N:{"10":0.07925912195122,"11":0.38497287804878},J:{"7":0,"10":0.042688},S:{"2.5":0.069368},R:{_:"0"},M:{"0":0.250792},O:{"0":3.185592},Q:{"1.2":0.048024},H:{"0":19.742356508591},L:{"0":35.163576}};


/***/ }),
/* 475 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.0543,"16":0,"17":0,"18":0.00543,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.04344,"30":0,"31":0.01086,"32":0.01086,"33":0.00543,"34":0.00543,"35":0.00543,"36":0,"37":0.01086,"38":0.00543,"39":0.00543,"40":0.03801,"41":0.01629,"42":0.00543,"43":0.01086,"44":0.00543,"45":0.01086,"46":0.01086,"47":0.01086,"48":0.03258,"49":0.24435,"50":0.01086,"51":0.02172,"52":0.01086,"53":0.01086,"54":0.02172,"55":0.02172,"56":0.05973,"57":0.07602,"58":0.02715,"59":0.03258,"60":0.02715,"61":0.23892,"62":0.03801,"63":0.11403,"64":0.04887,"65":0.12489,"66":0.07059,"67":0.1086,"68":0.07059,"69":0.10317,"70":0.17376,"71":0.46155,"72":2.03082,"73":12.02202,"74":0.04887,"75":0.02172,_:"76"},C:{"2":0,"3":0,"4":0.01086,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01086,"12":0,"13":0,"14":0,"15":0.00543,"16":0.00543,"17":0.01086,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.00543,"27":0.00543,"28":0,"29":0,"30":0.00543,"31":0.01086,"32":0.00543,"33":0.00543,"34":0,"35":0.00543,"36":0.00543,"37":0,"38":0.00543,"39":0,"40":0.00543,"41":0.00543,"42":0.00543,"43":0.00543,"44":0.01086,"45":0.01086,"46":0.00543,"47":0.01086,"48":0.03801,"49":0.00543,"50":0.01629,"51":0.01629,"52":0.09774,"53":0.01086,"54":0.01629,"55":0.01086,"56":0.02715,"57":0.02172,"58":0.01086,"59":0.01086,"60":0.11403,"61":0.01629,"62":0.01629,"63":0.03801,"64":0.03801,"65":0.20091,"66":1.60728,"67":0.01086,"68":0,"3.5":0,"3.6":0.00543},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.00543,"37":0.00543,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0.00543,"52":0,"53":0,"54":0,"55":0,"56":0.00543,"57":0,"58":0.17376,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.01086},E:{"4":0,"5":0.00543,"6":0,"7":0.00543,"8":0.02715,"9":0.02172,"10":0.03258,"11":0.0543,"12":0.96111,_:"0","3.1":0,"3.2":0,"5.1":0.02172,"6.1":0.00543,"7.1":0,"9.1":0.04887,"10.1":0.13575,"11.1":0.26607,"12.1":0.73305},G:{"8":0.29109706294406,"3.2":0.018902406684679,"4.0-4.1":0.011341444010808,"4.2-4.3":0.0037804813369359,"5.0-5.1":0.037804813369359,"6.0-6.1":0.018902406684679,"7.0-7.1":0.068048664064845,"8.1-8.4":0.1474387721405,"9.0-9.2":0.086951070749525,"9.3":0.72207193535475,"10.0-10.2":0.4007310217152,"10.3":0.95646177824477,"11.0-11.2":1.179510177124,"11.3-11.4":2.4232885369759,"12.0-12.1":14.630462773942,"12.2":16.781556654658},I:{"3":0.0008321875,"4":0.119835,_:"67","2.1":0.0058253125,"2.2":0.00998625,"2.3":0.0058253125,"4.1":0.0599175,"4.2-4.3":0.2596425,"4.4":0,"4.4.3-4.4.4":0.3636659375},A:{"6":0.0054741463414634,"7":0,"8":0.1040087804878,"9":0.45435414634146,"10":0.038319024390244,"11":2.091123902439,"5.5":0},B:{"12":0.01086,"13":0.01086,"14":0.03258,"15":0.03801,"16":0.09774,"17":1.04256,"18":1.09686},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.13100666666667,"5.0-5.4":0.032751666666667,"6.2-6.4":0.032751666666667,"7.2-7.4":0.15284111111111,"8.2":0.87337777777778,"9.2":1.3319011111111},N:{"10":0.01371,"11":0.04113},J:{"7":0,"10":0.02742},S:{"2.5":0.00457},R:{_:"0"},M:{"0":0.24678},O:{"0":0.23307},Q:{"1.2":0.01371},H:{"0":0.15575690721649},L:{"0":29.47569}};


/***/ }),
/* 476 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0.018741,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.018741,"27":0,"28":0.012494,"29":0.006247,"30":0,"31":0,"32":0,"33":0,"34":0.006247,"35":0,"36":0.006247,"37":0,"38":0.006247,"39":0,"40":0,"41":0.018741,"42":0.006247,"43":0.024988,"44":0,"45":0,"46":0.012494,"47":0.006247,"48":0.056223,"49":0.580971,"50":0,"51":0,"52":0.006247,"53":0,"54":0.006247,"55":0.012494,"56":0.012494,"57":0.031235,"58":0.056223,"59":0.006247,"60":0.012494,"61":0.024988,"62":0.049976,"63":0.074964,"64":0.012494,"65":0.049976,"66":0.068717,"67":0.137434,"68":1.493033,"69":0.143681,"70":0.12494,"71":0.206151,"72":1.149448,"73":25.537736,"74":0.037482,"75":0.012494,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.006247,"21":0,"22":0,"23":0,"24":0,"25":0.018741,"26":0,"27":0.006247,"28":0.006247,"29":0.006247,"30":0,"31":0,"32":0.018741,"33":0.012494,"34":0,"35":0,"36":0,"37":0,"38":0.018741,"39":0.006247,"40":0.012494,"41":0,"42":0,"43":0.006247,"44":0,"45":0.012494,"46":0,"47":0.024988,"48":0.024988,"49":0.006247,"50":0.024988,"51":0.006247,"52":0.212398,"53":0.024988,"54":0.006247,"55":0.006247,"56":0.006247,"57":0.049976,"58":0.006247,"59":0.018741,"60":0.162422,"61":0.018741,"62":0.024988,"63":0.031235,"64":0.024988,"65":0.162422,"66":2.18645,"67":0.018741,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.006247,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0.006247,"58":0.787122,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006247},E:{"4":0,"5":0,"6":0,"7":0,"8":0.018741,"9":0.149928,"10":0.012494,"11":0.031235,"12":0.574724,_:"0","3.1":0,"3.2":0,"5.1":0.387314,"6.1":0,"7.1":0,"9.1":0.012494,"10.1":0.06247,"11.1":0.137434,"12.1":0.337338},G:{"8":0.062948089462624,"3.2":0.0040875382767938,"4.0-4.1":0.0024525229660763,"4.2-4.3":0.00081750765535875,"5.0-5.1":0.0081750765535875,"6.0-6.1":0.0040875382767938,"7.0-7.1":0.014715137796458,"8.1-8.4":0.031882798558991,"9.0-9.2":0.018802676073251,"9.3":0.15614396217352,"10.0-10.2":0.086655811468028,"10.3":0.20682943680576,"11.0-11.2":0.25506238847193,"11.3-11.4":0.52402240708496,"12.0-12.1":3.1637546262384,"12.2":3.6289164821375},I:{"3":0.00048638508064516,"4":0.070039451612903,_:"67","2.1":0.0034046955645161,"2.2":0.0058366209677419,"2.3":0.0034046955645161,"4.1":0.035019725806452,"4.2-4.3":0.15175214516129,"4.4":0,"4.4.3-4.4.4":0.21255028024194},A:{"6":0,"7":0,"8":0.019058644067797,"9":0.012705762711864,"10":0.012705762711864,"11":0.33034983050847,"5.5":0},B:{"12":0.018741,"13":0.012494,"14":0.024988,"15":0.049976,"16":0.031235,"17":0.412302,"18":0.106199},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.28330338461538,"5.0-5.4":0.020235956043956,"6.2-6.4":0.10117978021978,"7.2-7.4":0.19224158241758,"8.2":1.2849832087912,"9.2":0.88026408791209},N:{"10":0,"11":0.240192},J:{"7":0,"10":0.003753},S:{"2.5":0},R:{_:"0"},M:{"0":0.153873},O:{"0":0.018765},Q:{"1.2":0},H:{"0":0.099486742268041},L:{"0":48.999196}};


/***/ }),
/* 477 */
/***/ (function(module, exports) {

module.exports={D:{"4":0.006259,"5":0,"6":0,"7":0,"8":0,"9":0.006259,"10":0,"11":0.006259,"12":0.012518,"13":0,"14":0,"15":0,"16":0.012518,"17":0.012518,"18":0.006259,"19":0,"20":0.006259,"21":0.006259,"22":0,"23":0.018777,"24":0.006259,"25":0,"26":0.006259,"27":0.018777,"28":0.100144,"29":0.006259,"30":0.050072,"31":0.006259,"32":0,"33":0,"34":0,"35":0.012518,"36":0.006259,"37":0,"38":0.006259,"39":0.068849,"40":0.018777,"41":0.219065,"42":0,"43":0.006259,"44":0.006259,"45":0,"46":0.006259,"47":0.006259,"48":0.006259,"49":0.663454,"50":0.006259,"51":0.018777,"52":0,"53":0.006259,"54":0.006259,"55":0.018777,"56":0.031295,"57":0.018777,"58":0.012518,"59":0.031295,"60":0.037554,"61":0.087626,"62":0.037554,"63":0.200288,"64":0.050072,"65":0.18777,"66":0.056331,"67":0.200288,"68":0.137698,"69":0.150216,"70":0.237842,"71":0.194029,"72":0.675972,"73":25.711972,"74":0.025036,"75":0.018777,_:"76"},C:{"2":0,"3":0.006259,"4":0.006259,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.012518,"11":0,"12":0.006259,"13":0,"14":0,"15":0,"16":0.006259,"17":0,"18":0,"19":0.006259,"20":0,"21":0.006259,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0.006259,"31":0.018777,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.006259,"44":0,"45":0,"46":0,"47":0.012518,"48":0.025036,"49":0,"50":0.006259,"51":0,"52":0.087626,"53":0,"54":0.006259,"55":0,"56":0.018777,"57":0.018777,"58":0,"59":0.093885,"60":0.112662,"61":0.006259,"62":0.006259,"63":0.025036,"64":0.006259,"65":0.200288,"66":1.808851,"67":0.043813,"68":0,"3.5":0.012518,"3.6":0.018777},F:{"9":0,"11":0,"12":0.012518,"15":0,"16":0,"17":0,"18":0.006259,"19":0,"20":0.012518,"21":0.031295,"22":0,"23":0,"24":0,"25":0,"26":0.006259,"27":0.006259,"28":0,"29":0,"30":0.012518,"31":0,"32":0.006259,"33":0.006259,"34":0.006259,"35":0.006259,"36":0.06259,"37":0.031295,"38":0.012518,"39":0,"40":0.006259,"41":0.012518,"42":0.018777,"43":0.006259,"44":0.018777,"45":0.025036,"46":0.012518,"47":0,"48":0.031295,"49":0.100144,"50":0.006259,"51":0.043813,"52":0.012518,"53":0.256619,"54":0.087626,"55":0.219065,"56":0.100144,"57":0.882519,"58":0.419353,"9.5-9.6":0,"10.0-10.1":0.006259,"10.5":0,"10.6":0.012518,"11.1":0,"11.5":0.012518,"11.6":0.018777,"12.1":0.093885},E:{"4":0.006259,"5":0.018777,"6":0,"7":0,"8":0,"9":0,"10":0.006259,"11":0.012518,"12":0.143957,_:"0","3.1":0,"3.2":0,"5.1":0.006259,"6.1":0,"7.1":0,"9.1":0.012518,"10.1":0.018777,"11.1":0.043813,"12.1":0.112662},G:{"8":0.039112887020915,"3.2":0.002539797858501,"4.0-4.1":0.0015238787151006,"4.2-4.3":0.00050795957170019,"5.0-5.1":0.0050795957170019,"6.0-6.1":0.002539797858501,"7.0-7.1":0.0091432722906034,"8.1-8.4":0.019810423296307,"9.0-9.2":0.011683070149104,"9.3":0.097020278194736,"10.0-10.2":0.05384371460022,"10.3":0.12851377164015,"11.0-11.2":0.15848338637046,"11.3-11.4":0.32560208545982,"12.0-12.1":1.9658035424797,"12.2":2.2548325387771},I:{"3":0.0025028991935484,"4":0.36041748387097,_:"67","2.1":0.017520294354839,"2.2":0.030034790322581,"2.3":0.017520294354839,"4.1":0.18020874193548,"4.2-4.3":0.7809045483871,"4.4":0,"4.4.3-4.4.4":1.0937669475806},A:{"6":0,"7":0,"8":0.0528032,"9":0.033002,"10":0.0264016,"11":0.2508152,"5.5":0},B:{"12":0.006259,"13":0.006259,"14":0.018777,"15":0.012518,"16":0.043813,"17":0.18777,"18":0.118921},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.9872058392857,"5.0-5.4":0.23200880357143,"6.2-6.4":0.353056875,"7.2-7.4":0.65567705357143,"8.2":0.94820989285714,"9.2":0.34296953571429},N:{"10":0.024583714285714,"11":0.061459285714286},J:{"7":0,"10":0.003741},S:{"2.5":0},R:{_:"0"},M:{"0":0.03741},O:{"0":9.041997},Q:{"1.2":0.089784},H:{"0":0.57376141237113},L:{"0":29.22336}};


/***/ }),
/* 478 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.616785,"50":0,"51":0,"52":0.028467,"53":0.028467,"54":0,"55":0,"56":0.018978,"57":0,"58":0.037956,"59":0,"60":0,"61":0,"62":0.018978,"63":0,"64":0,"65":0,"66":0,"67":0.113868,"68":0,"69":0.037956,"70":0,"71":0,"72":0.56934,"73":51.961764,"74":0,"75":0.265692,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.009489,"45":0.009489,"46":0.018978,"47":0,"48":0,"49":0,"50":0,"51":0.066423,"52":0.370071,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0.208758,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0.303648,"66":8.302875,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.360582,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0.009489,"5":0,"6":0,"7":0.085401,"8":0,"9":0.075912,"10":0,"11":0,"12":1.812399,_:"0","3.1":0,"3.2":0.018978,"5.1":0.09489,"6.1":0,"7.1":0,"9.1":0.151824,"10.1":0.180291,"11.1":1.23357,"12.1":0.9489},G:{"8":0.04442063194236,"3.2":0.0028844566196337,"4.0-4.1":0.0017306739717802,"4.2-4.3":0.00057689132392675,"5.0-5.1":0.0057689132392675,"6.0-6.1":0.0028844566196337,"7.0-7.1":0.010384043830681,"8.1-8.4":0.022498761633143,"9.0-9.2":0.013268500450315,"9.3":0.11018624287001,"10.0-10.2":0.061150480336235,"10.3":0.14595350495347,"11.0-11.2":0.17999009306515,"11.3-11.4":0.36978733863705,"12.0-12.1":2.2325694235965,"12.2":2.5608205869108},I:{"3":0.0001589435483871,"4":0.022887870967742,_:"67","2.1":0.0011126048387097,"2.2":0.0019073225806452,"2.3":0.0011126048387097,"4.1":0.011443935483871,"4.2-4.3":0.049590387096774,"4.4":0,"4.4.3-4.4.4":0.069458330645161},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":13.426935,"5.5":0},B:{"12":0,"13":0,"14":0,"15":0.170802,"16":0.009489,"17":2.116047,"18":1.651086},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0.021376833333333,"9.2":0.10688416666667},N:{"10":0,"11":0.011753},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":8.318192}};


/***/ }),
/* 479 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.021693,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.007231,"39":0,"40":0,"41":0.007231,"42":0,"43":0.021693,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.180775,"50":0.007231,"51":0,"52":0,"53":0.057848,"54":0,"55":0.007231,"56":0,"57":0.007231,"58":0.028924,"59":0.007231,"60":0,"61":18.663211,"62":0.007231,"63":0.028924,"64":0.007231,"65":0.130158,"66":0,"67":0.101234,"68":0.390474,"69":0.021693,"70":0.021693,"71":0.07231,"72":1.496817,"73":18.909065,"74":0.050617,"75":0.224161,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0.007231,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0.007231,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.007231,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.007231,"46":0,"47":0,"48":0.188006,"49":0,"50":0.014462,"51":0.007231,"52":0.014462,"53":0.014462,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0.007231,"63":0,"64":0.014462,"65":0.303702,"66":1.171422,"67":0.043386,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0.007231,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.036155,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0.007231,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.484477,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.007231},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.007231,"10":0,"11":0.014462,"12":0.744793,_:"0","3.1":0,"3.2":0,"5.1":0.014462,"6.1":0,"7.1":0,"9.1":0.036155,"10.1":0.028924,"11.1":0.043386,"12.1":0.347088},G:{"8":0.069264015811068,"3.2":0.004497663364355,"4.0-4.1":0.002698598018613,"4.2-4.3":0.00089953267287101,"5.0-5.1":0.0089953267287101,"6.0-6.1":0.004497663364355,"7.0-7.1":0.016191588111678,"8.1-8.4":0.035081774241969,"9.0-9.2":0.020689251476033,"9.3":0.17181074051836,"10.0-10.2":0.095350463324327,"10.3":0.22758176623637,"11.0-11.2":0.28065419393576,"11.3-11.4":0.57660044331032,"12.0-12.1":3.4811914440108,"12.2":3.9930255348744},I:{"3":0.0021847540322581,"4":0.31460458064516,_:"67","2.1":0.015293278225806,"2.2":0.026217048387097,"2.3":0.015293278225806,"4.1":0.15730229032258,"4.2-4.3":0.68164325806452,"4.4":0,"4.4.3-4.4.4":0.95473751209677},A:{"6":0,"7":0,"8":0.007231,"9":0.014462,"10":0,"11":0.397705,"5.5":0},B:{"12":0.014462,"13":0.021693,"14":0.021693,"15":0.036155,"16":0.043386,"17":1.800519,"18":0.325395},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.45740170334928,"5.0-5.4":0,"6.2-6.4":0.11979568421053,"7.2-7.4":0.35938705263158,"8.2":0.57719738755981,"9.2":0.7623361722488},N:{"10":0,"11":0.160602},J:{"7":0,"10":0.013845},S:{"2.5":0},R:{_:"0"},M:{"0":0.232596},O:{"0":0.107991},Q:{"1.2":0},H:{"0":0.24642196907216},L:{"0":36.776091}};


/***/ }),
/* 480 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0.007879,"7":0,"8":0,"9":0,"10":0,"11":0.015758,"12":0.007879,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.007879,"22":0,"23":0,"24":0,"25":0,"26":0.007879,"27":0.007879,"28":0,"29":0.141822,"30":0,"31":0.007879,"32":0.007879,"33":0.015758,"34":0.007879,"35":0,"36":0.015758,"37":0.015758,"38":0,"39":0.007879,"40":0.007879,"41":0.023637,"42":0.015758,"43":0.023637,"44":0.007879,"45":0.015758,"46":0.031516,"47":0.015758,"48":0.015758,"49":1.946113,"50":0.015758,"51":0.031516,"52":0.015758,"53":0.015758,"54":0.007879,"55":0.023637,"56":0.015758,"57":0.015758,"58":0.110306,"59":0.015758,"60":0.031516,"61":0.370313,"62":0.110306,"63":0.260007,"64":0.110306,"65":0.204854,"66":0.126064,"67":0.252128,"68":0.212733,"69":0.291523,"70":0.441224,"71":0.685473,"72":1.717622,"73":39.513185,"74":0.039395,"75":0.023637,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0.015758,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.039395,"28":0.007879,"29":0.007879,"30":0,"31":0.015758,"32":0,"33":0,"34":0.023637,"35":0,"36":0.007879,"37":0.007879,"38":0.023637,"39":0.007879,"40":0.015758,"41":0.023637,"42":0.007879,"43":0.039395,"44":0.007879,"45":0.039395,"46":0.007879,"47":0.047274,"48":0.204854,"49":0.015758,"50":0.023637,"51":0.023637,"52":0.693352,"53":0.007879,"54":0.007879,"55":0.007879,"56":0.039395,"57":0.047274,"58":0.031516,"59":0.039395,"60":0.173338,"61":0.070911,"62":0.031516,"63":0.055153,"64":0.118185,"65":0.354555,"66":4.207386,"67":0.07879,"68":0,"3.5":0,"3.6":0.031516},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0.023637,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0.007879,"33":0.007879,"34":0,"35":0,"36":0.015758,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.007879,"46":0,"47":0,"48":0.007879,"49":0.007879,"50":0.007879,"51":0.007879,"52":0.007879,"53":0,"54":0,"55":0,"56":0.007879,"57":0.007879,"58":1.883081,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.023637},E:{"4":0,"5":0.007879,"6":0,"7":0,"8":0,"9":0,"10":0.031516,"11":0.047274,"12":0.338797,_:"0","3.1":0,"3.2":0,"5.1":0.362434,"6.1":0,"7.1":0.007879,"9.1":0.039395,"10.1":0.070911,"11.1":0.149701,"12.1":0.252128},G:{"8":0.025324161913339,"3.2":0.0016444260982688,"4.0-4.1":0.00098665565896127,"4.2-4.3":0.00032888521965376,"5.0-5.1":0.0032888521965376,"6.0-6.1":0.0016444260982688,"7.0-7.1":0.0059199339537676,"8.1-8.4":0.012826523566497,"9.0-9.2":0.0075643600520364,"9.3":0.062817076953868,"10.0-10.2":0.034861833283298,"10.3":0.083207960572401,"11.0-11.2":0.10261218853197,"11.3-11.4":0.21081542579806,"12.0-12.1":1.27278580006,"12.2":1.459921490043},I:{"3":0.0019965423387097,"4":0.28750209677419,_:"67","2.1":0.013975796370968,"2.2":0.023958508064516,"2.3":0.013975796370968,"4.1":0.1437510483871,"4.2-4.3":0.62292120967742,"4.4":0,"4.4.3-4.4.4":0.87248900201613},A:{"6":0,"7":0.0081226804123711,"8":0.16245360824742,"9":0.048736082474227,"10":0.032490721649485,"11":0.53609690721649,"5.5":0},B:{"12":0.015758,"13":0.015758,"14":0.015758,"15":0.023637,"16":0.015758,"17":0.323039,"18":0.063032},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.091588636363636,"5.0-5.4":0.010176515151515,"6.2-6.4":0.030529545454545,"7.2-7.4":0.091588636363636,"8.2":0.44776666666667,"9.2":0.335825},N:{"10":0.036306529411765,"11":0.16943047058824},J:{"7":0,"10":0.156954},S:{"2.5":0},R:{_:"0"},M:{"0":0.123018},O:{"0":0.08484},Q:{"1.2":0.012726},H:{"0":1.2409599278351},L:{"0":30.913664}};


/***/ }),
/* 481 */
/***/ (function(module, exports) {

module.exports={D:{"36":0.005977,"38":0.017931,"47":0.005977,"49":0.143448,"51":0.005977,"52":0.017931,"58":0.245057,"59":0.017931,"60":0.017931,"63":0.161379,"64":2.062065,"65":3.801372,"66":0.011954,"67":0.101609,"68":0.017931,"69":0.053793,"71":0.089655,"72":3.837234,"73":25.187078,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 39 40 41 42 43 44 45 46 48 50 53 54 55 56 57 61 62 70 74 75 76"},C:{"52":0.005977,"54":0.023908,"57":0.424367,"61":0.334712,"62":0.029885,"65":0.047816,"66":7.345733,"67":0.011954,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 53 55 56 58 59 60 63 64 68 3.5 3.6"},F:{"54":0.029885,"58":0.394482,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 55 56 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},E:{"4":0,"10":0.011954,"11":0.137471,"12":2.45057,_:"0 5 6 7 8 9 3.1 3.2 5.1 6.1 7.1","9.1":0.167356,"10.1":0.914481,"11.1":0.591723,"12.1":0.364597},G:{"8":0.067005056339438,"3.2":0.0043509776843791,"4.0-4.1":0.0026105866106274,"4.2-4.3":0.00087019553687581,"5.0-5.1":0.0087019553687581,"6.0-6.1":0.0043509776843791,"7.0-7.1":0.015663519663765,"8.1-8.4":0.033937625938157,"9.0-9.2":0.020014497348144,"9.3":0.16620734754328,"10.0-10.2":0.092240726908836,"10.3":0.22015947082958,"11.0-11.2":0.27150100750525,"11.3-11.4":0.5577953391374,"12.0-12.1":3.3676567277094,"12.2":3.8627979881917},I:{"3":0.000044620967741935,"4":0.0064254193548387,_:"67","2.1":0.00031234677419355,"2.2":0.00053545161290323,"2.3":0.00031234677419355,"4.1":0.0032127096774194,"4.2-4.3":0.013921741935484,"4.4":0,"4.4.3-4.4.4":0.019499362903226},A:{"8":0.011954,"11":3.64597,_:"6 7 9 10 5.5"},B:{"12":0.029885,"13":0.041839,"14":0.041839,"15":0.400459,"16":0.830803,"17":3.968728,"18":0.400459},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.11818712690355,"5.0-5.4":0,"6.2-6.4":0.13967569543147,"7.2-7.4":0.032232852791878,"8.2":0.66614562436548,"9.2":1.1603827005076},N:{"10":0,"11":0.097902},J:{"7":0,"10":0.036216},S:{_:"2.5"},R:{_:"0"},M:{"0":0.128768},O:{"0":0.639816},Q:{_:"1.2"},H:{"0":0.026667642611684},L:{"0":29.509208}};


/***/ }),
/* 482 */
/***/ (function(module, exports) {

module.exports={D:{"22":0.009622,"38":0.038488,"43":0.009622,"47":0.014433,"49":0.067354,"53":0.168385,"55":0.091409,"58":0.043299,"60":0.009622,"63":0.052921,"65":0.101031,"66":0.033677,"67":0.038488,"68":0.04811,"69":0.178007,"70":0.129897,"71":0.125086,"72":1.414434,"73":24.651564,"74":0.019244,"75":0.004811,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39 40 41 42 44 45 46 48 50 51 52 54 56 57 59 61 62 64 76"},C:{"48":0.057732,"52":0.057732,"57":0.009622,"60":0.009622,"62":0.14433,"63":0.004811,"64":0.057732,"65":0.28866,"66":2.809624,"67":0.043299,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 49 50 51 53 54 55 56 58 59 61 68 3.5 3.6"},F:{"58":0.692784,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},E:{"4":0,"8":0.028866,"9":0.014433,"10":0.019244,"11":0.134708,"12":1.948455,_:"0 5 6 7 3.1 3.2 5.1 6.1 7.1","9.1":0.081787,"10.1":0.115464,"11.1":0.659107,"12.1":0.86598},G:{"8":0.18803765235665,"3.2":0.012210237166016,"4.0-4.1":0.0073261422996097,"4.2-4.3":0.0024420474332032,"5.0-5.1":0.024420474332032,"6.0-6.1":0.012210237166016,"7.0-7.1":0.043956853797658,"8.1-8.4":0.095239849894926,"9.0-9.2":0.056167090963675,"9.3":0.46643105974182,"10.0-10.2":0.25885702791954,"10.3":0.61783800060042,"11.0-11.2":0.76191879915941,"11.3-11.4":1.5653524046833,"12.0-12.1":9.4507235664965,"12.2":10.840248555989},I:{"3":0.00014126008064516,"4":0.020341451612903,_:"67","2.1":0.00098882056451613,"2.2":0.0016951209677419,"2.3":0.00098882056451613,"4.1":0.010170725806452,"4.2-4.3":0.04407314516129,"4.4":0,"4.4.3-4.4.4":0.061730655241935},A:{"10":0.004811,"11":3.584195,_:"6 7 8 9 5.5"},B:{"12":0.019244,"13":0.076976,"14":0.04811,"15":0.110653,"16":0.091409,"17":6.470795,"18":0.9622},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.88910800681431,"5.0-5.4":0.010043419354839,"6.2-6.4":0.13336620102215,"7.2-7.4":0.13336620102215,"8.2":2.3894777683135,"9.2":2.9785118228279},N:{"10":0.011529,"11":0.03114},J:{"7":0,"10":0.00519},S:{_:"2.5"},R:{_:"0"},M:{"0":0.17127},O:{"0":0.42558},Q:{_:"1.2"},H:{"0":0.42256587628866},L:{"0":20.850574}};


/***/ }),
/* 483 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.008677,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1.058594,"30":0,"31":0,"32":0,"33":0,"34":0.008677,"35":0,"36":0,"37":0,"38":0.008677,"39":0,"40":0.008677,"41":0.034708,"42":0,"43":0.017354,"44":0,"45":0,"46":0.026031,"47":0.008677,"48":0.008677,"49":4.702934,"50":0.008677,"51":0.017354,"52":0.017354,"53":0.008677,"54":0.043385,"55":0.034708,"56":0.034708,"57":0.199571,"58":0.078093,"59":0.008677,"60":0.008677,"61":0.572682,"62":0.078093,"63":0.17354,"64":0.08677,"65":0.121478,"66":0.052062,"67":0.104124,"68":0.112801,"69":0.138832,"70":0.234279,"71":0.251633,"72":1.093302,"73":40.69513,"74":0.121478,"75":0.060739,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0.008677,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0.008677,"43":0.008677,"44":0,"45":0.008677,"46":0,"47":0.008677,"48":0.043385,"49":0.008677,"50":0.034708,"51":0,"52":0.156186,"53":0.008677,"54":0.008677,"55":0,"56":0.026031,"57":0.026031,"58":0.026031,"59":0.008677,"60":0.026031,"61":0.008677,"62":0.008677,"63":0.026031,"64":0.034708,"65":0.156186,"66":1.761431,"67":0.17354,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.043385,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1.492444,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.008677,"50":0,"51":0.008677,"52":0,"53":0,"54":0,"55":0,"56":0.008677,"57":0.026031,"58":0.676806,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0.026031,"10":0.034708,"11":0.060739,"12":0.893731,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.017354,"10.1":0.17354,"11.1":0.216925,"12.1":0.537974},G:{"8":0.074476090563394,"3.2":0.0048361097768438,"4.0-4.1":0.0029016658661063,"4.2-4.3":0.00096722195536876,"5.0-5.1":0.0096722195536876,"6.0-6.1":0.0048361097768438,"7.0-7.1":0.017409995196638,"8.1-8.4":0.037721656259382,"9.0-9.2":0.022246104973481,"9.3":0.18473939347543,"10.0-10.2":0.10252552726909,"10.3":0.2447071547083,"11.0-11.2":0.30177325007505,"11.3-11.4":0.61998927339137,"12.0-12.1":3.7431489672771,"12.2":4.2934982598819},I:{"3":0.00034462802419355,"4":0.049626435483871,_:"67","2.1":0.0024123961693548,"2.2":0.0041355362903226,"2.3":0.0024123961693548,"4.1":0.024813217741935,"4.2-4.3":0.10752394354839,"4.4":0,"4.4.3-4.4.4":0.15060244657258},A:{"6":0,"7":0,"8":0.15601913461538,"9":0.027532788461538,"10":0.036710384615385,"11":0.25697269230769,"5.5":0},B:{"12":0.008677,"13":0.008677,"14":0.034708,"15":0.017354,"16":0.034708,"17":0.390465,"18":0.190894},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.10043419354839,"5.0-5.4":0.010043419354839,"6.2-6.4":0.020086838709677,"7.2-7.4":0.060260516129032,"8.2":0.36156309677419,"9.2":0.38164993548387},N:{"10":0.011529,"11":0.069174},J:{"7":0,"10":0.01323},S:{"2.5":0},R:{_:"0"},M:{"0":0.067473},O:{"0":0.416745},Q:{"1.2":0.007938},H:{"0":0.16282902061856},L:{"0":12.787696}};


/***/ }),
/* 484 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.041868,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0.018608,"41":0,"42":0.009304,"43":0,"44":0,"45":0.009304,"46":0,"47":0.13956,"48":0,"49":0.027912,"50":0,"51":0,"52":0.009304,"53":0,"54":0,"55":0.02326,"56":0.041868,"57":0.004652,"58":0.274468,"59":0.004652,"60":0.004652,"61":0.004652,"62":0,"63":0.027912,"64":0.013956,"65":0.041868,"66":0.004652,"67":0.009304,"68":0.004652,"69":0.055824,"70":0.065128,"71":0.027912,"72":0.818752,"73":9.5366,"74":0.004652,"75":0.1163,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.004652,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.004652,"32":0,"33":0,"34":0.106996,"35":0,"36":0,"37":0,"38":0.027912,"39":0.004652,"40":0.02326,"41":0,"42":0,"43":0.041868,"44":0.013956,"45":0,"46":0,"47":0.065128,"48":0.055824,"49":0.004652,"50":0.009304,"51":0,"52":0.009304,"53":0,"54":0.032564,"55":0,"56":0.009304,"57":0.004652,"58":0.195384,"59":0.02326,"60":0.060476,"61":0.009304,"62":0.009304,"63":0.027912,"64":0.027912,"65":0.832708,"66":3.316876,"67":0.051172,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.30238,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.032564,"9":0.004652,"10":0.004652,"11":0.027912,"12":0.074432,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0.074432,"10.1":0.018608,"11.1":0.060476,"12.1":0.2326},G:{"8":0.03834210107075,"3.2":0.0024897468227759,"4.0-4.1":0.0014938480936656,"4.2-4.3":0.00049794936455519,"5.0-5.1":0.0049794936455519,"6.0-6.1":0.0024897468227759,"7.0-7.1":0.0089630885619934,"8.1-8.4":0.019420025217652,"9.0-9.2":0.011452835384769,"9.3":0.095108328630041,"10.0-10.2":0.05278263264285,"10.3":0.12598118923246,"11.0-11.2":0.15536020174122,"11.3-11.4":0.31918554267988,"12.0-12.1":1.9270640408286,"12.2":2.2103972292605},I:{"3":0.002073435483871,"4":0.29857470967742,_:"67","2.1":0.014514048387097,"2.2":0.024881225806452,"2.3":0.014514048387097,"4.1":0.14928735483871,"4.2-4.3":0.64691187096774,"4.4":0,"4.4.3-4.4.4":0.90609130645161},A:{"6":0,"7":0,"8":0.213992,"9":0.027912,"10":0.027912,"11":0.972268,"5.5":0},B:{"12":0.051172,"13":0.190732,"14":0.018608,"15":0.055824,"16":0.251208,"17":0.525676,"18":0.102344},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.64150875167785,"5.0-5.4":0.13671497986577,"6.2-6.4":0.06309922147651,"7.2-7.4":0.15774805369128,"8.2":0.31549610738255,"9.2":0.25239688590604},N:{"10":0,"11":0.016044},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.21392},O:{"0":1.353044},Q:{"1.2":0.117656},H:{"0":0.10632595876289},L:{"0":68.357348}};


/***/ }),
/* 485 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0.100776,"32":0,"33":0.050388,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.500004,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0.151164,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0.100776,"68":0,"69":0.201552,"70":0,"71":0.25194,"72":0.050388,"73":4.701588,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0.050388,"53":0,"54":0,"55":0.151164,"56":0,"57":0,"58":0,"59":0,"60":0.60078,"61":0,"62":0,"63":0,"64":0.151164,"65":0.050388,"66":6.953544,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.651168,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0.050388,"9":0,"10":0,"11":0,"12":0.751944,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0,"11.1":0,"12.1":0},G:{"8":0.10476715700991,"3.2":0.0068030621435005,"4.0-4.1":0.0040818372861003,"4.2-4.3":0.0013606124287001,"5.0-5.1":0.013606124287001,"6.0-6.1":0.0068030621435005,"7.0-7.1":0.024491023716602,"8.1-8.4":0.053063884719304,"9.0-9.2":0.031294085860102,"9.3":0.25987697388172,"10.0-10.2":0.14422491744221,"10.3":0.34423494446112,"11.0-11.2":0.42451107775443,"11.3-11.4":0.87215256679676,"12.0-12.1":5.2655700990693,"12.2":6.0397585709997},I:{"3":0.0017152862903226,"4":0.24700122580645,_:"67","2.1":0.012007004032258,"2.2":0.020583435483871,"2.3":0.012007004032258,"4.1":0.12350061290323,"4.2-4.3":0.53516932258065,"4.4":0,"4.4.3-4.4.4":0.74958010887097},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"5.5":0},B:{"12":0,"13":0,"14":0,"15":0,"16":0,"17":0.100776,"18":0.201552},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0.18384626804124,"6.2-6.4":0,"7.2-7.4":0,"8.2":2.0081669278351,"9.2":0.55153880412371},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.18372},O:{"0":4.207188},Q:{"1.2":0},H:{"0":0},L:{"0":59.771032}};


/***/ }),
/* 486 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.004795,"25":0.033565,"26":0,"27":0.004795,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0.014385,"38":0.004795,"39":0,"40":0.004795,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.26852,"50":0,"51":0,"52":0.004795,"53":0.01918,"54":0,"55":0,"56":0,"57":0,"58":0.02877,"59":0.004795,"60":0,"61":0.04795,"62":0.01918,"63":0,"64":0.004795,"65":0.091105,"66":0.004795,"67":0.00959,"68":0.20139,"69":0.110285,"70":0.004795,"71":0.07672,"72":1.27547,"73":8.961855,"74":0.004795,"75":0.00959,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.004795,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.004795,"30":0.004795,"31":0.004795,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0.04795,"44":0.004795,"45":0.004795,"46":0,"47":0.07672,"48":0.004795,"49":0,"50":0.00959,"51":0.00959,"52":0.014385,"53":0,"54":0,"55":0,"56":0,"57":0.014385,"58":0,"59":0,"60":0.01918,"61":0,"62":0,"63":0.01918,"64":0.004795,"65":0.35483,"66":2.747535,"67":0.081515,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0.02877,"36":0,"37":0.00959,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0.004795,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0.810355,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.014385},E:{"4":0,"5":0.043155,"6":0,"7":0,"8":0,"9":0,"10":0.004795,"11":0.014385,"12":0.03836,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.004795,"7.1":0,"9.1":0.004795,"10.1":0.00959,"11.1":0,"12.1":0.08631},G:{"8":0.067525370759532,"3.2":0.0043847643350345,"4.0-4.1":0.0026308586010207,"4.2-4.3":0.0008769528670069,"5.0-5.1":0.008769528670069,"6.0-6.1":0.0043847643350345,"7.0-7.1":0.015785151606124,"8.1-8.4":0.034201161813269,"9.0-9.2":0.020169915941159,"9.3":0.16749799759832,"10.0-10.2":0.092957003902732,"10.3":0.22186907535275,"11.0-11.2":0.27360929450615,"11.3-11.4":0.56212678775143,"12.0-12.1":3.3938075953167,"12.2":3.8927937766437},I:{"3":0.0052999243951613,"4":0.76318911290323,_:"67","2.1":0.037099470766129,"2.2":0.063599092741935,"2.3":0.037099470766129,"4.1":0.38159455645161,"4.2-4.3":1.6535764112903,"4.4":0,"4.4.3-4.4.4":2.3160669606855},A:{"6":0,"7":0,"8":0.05754,"9":0,"10":0.03836,"11":0.311675,"5.5":0},B:{"12":0.02877,"13":0.26852,"14":0.03836,"15":0.081515,"16":0.20139,"17":0.71925,"18":0.07672},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.79769143548387,"5.0-5.4":0.10359629032258,"6.2-6.4":0.24863109677419,"7.2-7.4":1.2638747419355,"8.2":3.4186775806452,"9.2":0.59049885483871},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0.026025},O:{"0":2.47758},Q:{"1.2":0.005205},H:{"0":3.0699930670103},L:{"0":50.348145}};


/***/ }),
/* 487 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.002039,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.006117,"22":0,"23":0.002039,"24":0,"25":0.014273,"26":0.010195,"27":0,"28":0.002039,"29":0.012234,"30":0.010195,"31":0.006117,"32":0.002039,"33":0.10195,"34":0,"35":0,"36":0.002039,"37":0,"38":0.002039,"39":0.004078,"40":0.002039,"41":0,"42":0,"43":0.014273,"44":0,"45":0,"46":0.004078,"47":0.002039,"48":0.004078,"49":0.036702,"50":0,"51":0.006117,"52":0.004078,"53":0.006117,"54":0.004078,"55":0.008156,"56":0.004078,"57":0.002039,"58":0.004078,"59":0.002039,"60":0.006117,"61":0.004078,"62":0.006117,"63":0.016312,"64":0.008156,"65":0.008156,"66":0.012234,"67":0.018351,"68":0.016312,"69":0.030585,"70":0.048936,"71":0.065248,"72":0.134574,"73":2.149106,"74":0.002039,"75":0.004078,_:"76"},C:{"2":0,"3":0.016312,"4":0.004078,"5":0,"6":0,"7":0,"8":0.006117,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.002039,"27":0,"28":0.002039,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0.002039,"35":0,"36":0.004078,"37":0,"38":0.002039,"39":0,"40":0.002039,"41":0.002039,"42":0,"43":0.008156,"44":0.004078,"45":0.004078,"46":0.004078,"47":0.010195,"48":0.004078,"49":0.004078,"50":0.006117,"51":0,"52":0.018351,"53":0,"54":0.002039,"55":0.004078,"56":0.012234,"57":0.004078,"58":0.004078,"59":0.004078,"60":0.010195,"61":0.004078,"62":0.006117,"63":0.006117,"64":0.012234,"65":0.059131,"66":0.395566,"67":0.008156,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0.002039,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0.002039,"30":0.002039,"31":0,"32":0,"33":0,"34":0.002039,"35":0,"36":0.002039,"37":0.002039,"38":0,"39":0,"40":0.002039,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.002039,"57":0.004078,"58":0.032624,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.006117},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0.004078,"11":0,"12":0.006117,_:"0","3.1":0,"3.2":0,"5.1":0.014273,"6.1":0,"7.1":0,"9.1":0.002039,"10.1":0.006117,"11.1":0.004078,"12.1":0.004078},G:{"8":0.013354241068748,"3.2":0.00086715851095767,"4.0-4.1":0.0005202951065746,"4.2-4.3":0.00017343170219153,"5.0-5.1":0.0017343170219153,"6.0-6.1":0.00086715851095767,"7.0-7.1":0.0031217706394476,"8.1-8.4":0.0067638363854698,"9.0-9.2":0.0039889291504053,"9.3":0.033125455118583,"10.0-10.2":0.018383760432303,"10.3":0.043878220654458,"11.0-11.2":0.054110691083759,"11.3-11.4":0.11116972110477,"12.0-12.1":0.67118068748124,"12.2":0.76986332602822},I:{"3":0.030558353830645,"4":4.4004029516129,_:"67","2.1":0.21390847681452,"2.2":0.36670024596774,"2.3":0.21390847681452,"4.1":2.2002014758065,"4.2-4.3":9.5342063951613,"4.4":0,"4.4.3-4.4.4":13.354000623992},A:{"6":0,"7":0,"8":0.0086357647058824,"9":0.0021589411764706,"10":0.0021589411764706,"11":0.023748352941176,"5.5":0},B:{"12":0.002039,"13":0.006117,"14":0.002039,"15":0.004078,"16":0.014273,"17":0.022429,"18":0.012234},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.91636918454936,"5.0-5.4":0.13236443776824,"6.2-6.4":0.081455038626609,"7.2-7.4":0.21381947639485,"8.2":0.71273158798283,"9.2":0.31563827467811},N:{"10":0.007961,"11":0.007961},J:{"7":0,"10":0.007961},S:{"2.5":0},R:{_:"0"},M:{"0":0.206986},O:{"0":2.117626},Q:{"1.2":0},H:{"0":1.1305440721649},L:{"0":57.107791}};


/***/ }),
/* 488 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.020739,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.020739,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0.006913,"46":0,"47":0,"48":0,"49":0.103695,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0.020739,"57":0,"58":0.110608,"59":0,"60":0,"61":0,"62":0,"63":0.041478,"64":0,"65":0.200477,"66":0.006913,"67":0.089869,"68":0.034565,"69":0.020739,"70":0.145173,"71":1.299644,"72":1.195949,"73":21.865819,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0.089869,"39":0,"40":0,"41":0,"42":0,"43":0.013826,"44":0.006913,"45":0.027652,"46":0.006913,"47":0.027652,"48":0.006913,"49":0.020739,"50":0.013826,"51":0.020739,"52":0.082956,"53":0.020739,"54":0,"55":0,"56":0.428606,"57":1.389513,"58":0.006913,"59":0.062217,"60":0.193564,"61":0.048391,"62":0.076043,"63":0.034565,"64":0.145173,"65":0.158999,"66":5.516574,"67":0.020739,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0.034565,"37":0,"38":0,"39":0,"40":0.013826,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1.583077,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0.006913,"6":0,"7":0,"8":0,"9":0,"10":0.027652,"11":0.006913,"12":0.670561,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0.186651,"7.1":0,"9.1":0.020739,"10.1":1.963292,"11.1":0.103695,"12.1":0.891777},G:{"8":0.055580916241369,"3.2":0.0036091504052837,"4.0-4.1":0.0021654902431702,"4.2-4.3":0.00072183008105674,"5.0-5.1":0.0072183008105674,"6.0-6.1":0.0036091504052837,"7.0-7.1":0.012992941459021,"8.1-8.4":0.028151373161213,"9.0-9.2":0.016602091864305,"9.3":0.13786954548184,"10.0-10.2":0.076513988592014,"10.3":0.18262301050736,"11.0-11.2":0.2252109852897,"11.3-11.4":0.46269308195737,"12.0-12.1":2.7934824136896,"12.2":3.2042037298109},I:{"3":0.0017241864919355,"4":0.24828285483871,_:"67","2.1":0.012069305443548,"2.2":0.020690237903226,"2.3":0.012069305443548,"4.1":0.12414142741935,"4.2-4.3":0.53794618548387,"4.4":0,"4.4.3-4.4.4":0.75346949697581},A:{"6":0,"7":0.013826,"8":0.006913,"9":0,"10":0.013826,"11":0.96782,"5.5":0},B:{"12":0.006913,"13":0.027652,"14":0.082956,"15":0.186651,"16":0.103695,"17":2.516332,"18":0.324911},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.15809356343284,"5.0-5.4":0.073776996268657,"6.2-6.4":0.11593527985075,"7.2-7.4":0.34780583955224,"8.2":0.87478438432836,"9.2":1.2542089365672},N:{"10":0,"11":0.037044},J:{"7":0,"10":0.003087},S:{"2.5":0},R:{_:"0"},M:{"0":0.138915},O:{"0":0.222264},Q:{"1.2":0.003087},H:{"0":0.18412204639175},L:{"0":41.645336}};


/***/ }),
/* 489 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.01504,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0.00376,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0.01128,"29":0,"30":0,"31":0.00376,"32":0,"33":0,"34":0,"35":0,"36":0.00376,"37":0,"38":0.00376,"39":0,"40":0.01128,"41":0.00376,"42":0,"43":0.00376,"44":0.00376,"45":0,"46":0.01128,"47":0.00376,"48":0.00376,"49":0.11656,"50":0.00376,"51":0,"52":0,"53":0,"54":0.00376,"55":0.0376,"56":0.00752,"57":0.00376,"58":0.02256,"59":0.00752,"60":0.01128,"61":0.01504,"62":0.00752,"63":0.0376,"64":0.0188,"65":0.03384,"66":0.02256,"67":0.04136,"68":0.03008,"69":0.02632,"70":0.04512,"71":0.094,"72":0.34592,"73":6.95976,"74":0.01504,"75":0.01504,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.00376,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0.00376,"34":0,"35":0,"36":0.00376,"37":0,"38":0,"39":0.00376,"40":0.00376,"41":0.00376,"42":0,"43":0.00376,"44":0.00376,"45":0.00376,"46":0,"47":0.00376,"48":0.01504,"49":0,"50":0.00376,"51":0,"52":0.04888,"53":0,"54":0,"55":0,"56":0.00752,"57":0.00376,"58":0.00376,"59":0.00376,"60":0.02256,"61":0.00752,"62":0.00376,"63":0.01128,"64":0.01128,"65":0.0752,"66":0.79336,"67":0.0376,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0.01504,"25":0.01128,"26":0.06016,"27":0.00376,"28":0.04512,"29":0.00752,"30":0.0188,"31":0.01504,"32":0.04888,"33":0.0188,"34":0,"35":0.06768,"36":0.00752,"37":0.00752,"38":0.188,"39":0.00376,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0.00376,"50":0,"51":0.01128,"52":0,"53":0,"54":0,"55":0,"56":0.00376,"57":0.00376,"58":0.24816,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.0376},E:{"4":0,"5":0,"6":0,"7":0.00376,"8":0.02632,"9":0.01128,"10":0.00752,"11":0.02632,"12":0.30832,_:"0","3.1":0,"3.2":0,"5.1":0.0752,"6.1":0,"7.1":0.00376,"9.1":0.0188,"10.1":0.04136,"11.1":0.07144,"12.1":0.188},G:{"8":0.093087937556289,"3.2":0.0060446712698889,"4.0-4.1":0.0036268027619334,"4.2-4.3":0.0012089342539778,"5.0-5.1":0.012089342539778,"6.0-6.1":0.0060446712698889,"7.0-7.1":0.0217608165716,"8.1-8.4":0.047148435905134,"9.0-9.2":0.027805487841489,"9.3":0.23090644250976,"10.0-10.2":0.12814703092165,"10.3":0.30586036625638,"11.0-11.2":0.37718748724107,"11.3-11.4":0.77492685679976,"12.0-12.1":4.678575562894,"12.2":5.3664591534074},I:{"3":0.00049645161290323,"4":0.071489032258065,_:"67","2.1":0.0034751612903226,"2.2":0.0059574193548387,"2.3":0.0034751612903226,"4.1":0.035744516129032,"4.2-4.3":0.15489290322581,"4.4":0,"4.4.3-4.4.4":0.21694935483871},A:{"6":0,"7":0.0037720512820513,"8":0.037720512820513,"9":0.018860256410256,"10":0.03017641025641,"11":1.0863507692308,"5.5":0},B:{"12":0.0188,"13":0.02256,"14":0.03384,"15":0.04512,"16":0.06392,"17":0.54896,"18":0.18048},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":2.0628590928726,"5.0-5.4":0.2052596112311,"6.2-6.4":0.25657451403888,"7.2-7.4":0.93393123110151,"8.2":3.2328388768898,"9.2":2.8120566738661},N:{"10":0.02496,"11":0.17472},J:{"7":0,"10":0.2496},S:{"2.5":0},R:{_:"0"},M:{"0":0.19968},O:{"0":0.6864},Q:{"1.2":0.00624},H:{"0":6.4688536082474},L:{"0":50.80744}};


/***/ }),
/* 490 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005872,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0.002936,"22":0,"23":0,"24":0,"25":0.002936,"26":0,"27":0,"28":0,"29":0.002936,"30":0,"31":0,"32":0,"33":0.002936,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0.005872,"40":0.005872,"41":0,"42":0,"43":0.01468,"44":0,"45":0.005872,"46":0.002936,"47":0,"48":0,"49":0.017616,"50":0.011744,"51":0.002936,"52":0,"53":0,"54":0,"55":0.008808,"56":0.002936,"57":0.011744,"58":0.032296,"59":0.002936,"60":0.005872,"61":0.005872,"62":0.002936,"63":0.064592,"64":0.011744,"65":0.070464,"66":0.008808,"67":0.008808,"68":0.01468,"69":0.05872,"70":0.032296,"71":0.061656,"72":0.182032,"73":2.81856,"74":0.026424,"75":0,_:"76"},C:{"2":0,"3":0.002936,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0.002936,"13":0.002936,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0.002936,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0.002936,"28":0,"29":0,"30":0,"31":0.002936,"32":0,"33":0,"34":0,"35":0,"36":0.002936,"37":0,"38":0,"39":0,"40":0,"41":0.002936,"42":0,"43":0.008808,"44":0.002936,"45":0.002936,"46":0,"47":0.011744,"48":0.008808,"49":0.002936,"50":0.002936,"51":0,"52":0.011744,"53":0.002936,"54":0.002936,"55":0.002936,"56":0.011744,"57":0.005872,"58":0.002936,"59":0.002936,"60":0.026424,"61":0.008808,"62":0.017616,"63":0.002936,"64":0.011744,"65":0.067528,"66":0.739872,"67":0.046976,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0.002936,"12":0.002936,"15":0.005872,"16":0.005872,"17":0.002936,"18":0.002936,"19":0.011744,"20":0.055784,"21":0.002936,"22":0.002936,"23":0.049912,"24":0,"25":0,"26":0.002936,"27":0.002936,"28":0.011744,"29":0.002936,"30":0.01468,"31":0,"32":0.005872,"33":0.002936,"34":0.002936,"35":0.008808,"36":0.008808,"37":0.011744,"38":0.026424,"39":0.002936,"40":0,"41":0,"42":0.005872,"43":0,"44":0,"45":0.002936,"46":0,"47":0,"48":0,"49":0.01468,"50":0.002936,"51":0.026424,"52":0,"53":0,"54":0,"55":0,"56":0.008808,"57":0.011744,"58":0.85144,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0.005872,"11.5":0.002936,"11.6":0.002936,"12.1":0.270112},E:{"4":0,"5":0,"6":0,"7":0,"8":0.005872,"9":0.002936,"10":0.002936,"11":0.032296,"12":0.10276,_:"0","3.1":0,"3.2":0,"5.1":0.005872,"6.1":0.002936,"7.1":0.005872,"9.1":0.017616,"10.1":0.005872,"11.1":0.023488,"12.1":0.061656},G:{"8":0.024500254978485,"3.2":0.0015909256479536,"4.0-4.1":0.00095455538877214,"4.2-4.3":0.00031818512959071,"5.0-5.1":0.0031818512959071,"6.0-6.1":0.0015909256479536,"7.0-7.1":0.0057273323326328,"8.1-8.4":0.012409220054038,"9.0-9.2":0.0073182579805864,"9.3":0.060773359751826,"10.0-10.2":0.033727623736616,"10.3":0.080500837786451,"11.0-11.2":0.099273760432303,"11.3-11.4":0.20395666806765,"12.0-12.1":1.2313764515161,"12.2":1.4124237902532},I:{"3":0.0023074435483871,"4":0.33227187096774,_:"67","2.1":0.01615210483871,"2.2":0.027689322580645,"2.3":0.01615210483871,"4.1":0.16613593548387,"4.2-4.3":0.71992238709677,"4.4":0,"4.4.3-4.4.4":1.0083528306452},A:{"6":0,"7":0,"8":0.0546096,"9":0.0060677333333333,"10":0.039440266666667,"11":0.2639464,"5.5":0},B:{"12":0.0734,"13":0.05872,"14":0.070464,"15":0.067528,"16":0.041104,"17":0.314152,"18":0.111568},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.88817704109589,"5.0-5.4":0.15313397260274,"6.2-6.4":0.24501435616438,"7.2-7.4":0.27564115068493,"8.2":1.0311020821918,"9.2":0.38793939726027},N:{"10":0.091608926315789,"11":0.99624707368421},J:{"7":0,"10":0.254304},S:{"2.5":0},R:{_:"0"},M:{"0":0.127152},O:{"0":5.432216},Q:{"1.2":0.028256},H:{"0":29.840690666667},L:{"0":32.768288}};


/***/ }),
/* 491 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0.005399,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0.005399,"27":0,"28":0,"29":0.005399,"30":0,"31":0.005399,"32":0.010798,"33":0.005399,"34":0.005399,"35":0,"36":0.010798,"37":0,"38":0.010798,"39":0,"40":0.026995,"41":0,"42":0.005399,"43":0.037793,"44":0,"45":0,"46":0.037793,"47":0,"48":0,"49":0.156571,"50":0.005399,"51":0.005399,"52":0.005399,"53":0,"54":0.005399,"55":0.059389,"56":0.005399,"57":0.037793,"58":0.064788,"59":0.005399,"60":0.016197,"61":0.010798,"62":0.010798,"63":0.113379,"64":0.048591,"65":0.210561,"66":0.021596,"67":0.048591,"68":0.026995,"69":0.113379,"70":0.102581,"71":0.242955,"72":0.550698,"73":12.57967,"74":0.064788,"75":0.016197,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0.005399,"24":0,"25":0.005399,"26":0,"27":0.005399,"28":0,"29":0,"30":0.005399,"31":0.010798,"32":0,"33":0.005399,"34":0,"35":0.005399,"36":0.005399,"37":0,"38":0.005399,"39":0,"40":0.016197,"41":0.010798,"42":0.005399,"43":0.026995,"44":0.005399,"45":0.016197,"46":0.010798,"47":0.037793,"48":0.021596,"49":0.005399,"50":0.005399,"51":0.005399,"52":0.102581,"53":0.005399,"54":0.010798,"55":0.005399,"56":0.016197,"57":0.05399,"58":0.010798,"59":0.021596,"60":0.070187,"61":0.021596,"62":0.026995,"63":0.026995,"64":0.070187,"65":0.296945,"66":3.234001,"67":0.291546,"68":0.005399,"3.5":0,"3.6":0.005399},F:{"9":0,"11":0,"12":0.005399,"15":0,"16":0.005399,"17":0.005399,"18":0.005399,"19":0,"20":0.016197,"21":0.005399,"22":0.005399,"23":0,"24":0,"25":0,"26":0.010798,"27":0,"28":0.021596,"29":0.005399,"30":0.005399,"31":0,"32":0.010798,"33":0.010798,"34":0.016197,"35":0.005399,"36":0.010798,"37":0.010798,"38":0.037793,"39":0,"40":0.005399,"41":0,"42":0.010798,"43":0.005399,"44":0,"45":0.010798,"46":0,"47":0.005399,"48":0.010798,"49":0.005399,"50":0.005399,"51":0.026995,"52":0,"53":0.005399,"54":0.005399,"55":0.005399,"56":0.048591,"57":0.037793,"58":2.769687,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0.48591},E:{"4":0,"5":0.005399,"6":0.005399,"7":0,"8":0.091783,"9":0.010798,"10":0.016197,"11":0.037793,"12":0.367132,_:"0","3.1":0,"3.2":0,"5.1":0.383329,"6.1":0,"7.1":0.005399,"9.1":0.048591,"10.1":0.080985,"11.1":0.124177,"12.1":0.151172},G:{"8":0.03815697898529,"3.2":0.0024777259081357,"4.0-4.1":0.0014866355448814,"4.2-4.3":0.00049554518162714,"5.0-5.1":0.0049554518162714,"6.0-6.1":0.0024777259081357,"7.0-7.1":0.0089198132692885,"8.1-8.4":0.019326262083458,"9.0-9.2":0.011397539177424,"9.3":0.094649129690784,"10.0-10.2":0.052527789252477,"10.3":0.12537293095167,"11.0-11.2":0.15461009666767,"11.3-11.4":0.317644461423,"12.0-12.1":1.917759852897,"12.2":2.1997250612429},I:{"3":0.0028386824596774,"4":0.40877027419355,_:"67","2.1":0.019870777217742,"2.2":0.034064189516129,"2.3":0.019870777217742,"4.1":0.20438513709677,"4.2-4.3":0.88566892741935,"4.4":0,"4.4.3-4.4.4":1.240504234879},A:{"6":0,"7":0,"8":0.075586,"9":0.010798,"10":0.059389,"11":0.777456,"5.5":0},B:{"12":0.183566,"13":0.151172,"14":0.183566,"15":0.188965,"16":0.16197,"17":1.047406,"18":0.264551},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":1.0764951767241,"5.0-5.4":0.041805637931034,"6.2-6.4":0.062708456896552,"7.2-7.4":0.19857678017241,"8.2":0.63753597844828,"9.2":0.40760496982759},N:{"10":0.069628466666667,"11":0.97479853333333},J:{"7":0,"10":0.096621},S:{"2.5":0},R:{_:"0"},M:{"0":0.133429},O:{"0":1.70237},Q:{"1.2":0.023005},H:{"0":16.495905218213},L:{"0":28.944157}};


/***/ }),
/* 492 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.010712,"22":0.005356,"23":0.005356,"24":0.010712,"26":0.05356,"28":0.016068,"29":0.042848,"30":0.010712,"31":0.032136,"32":0.005356,"33":0.064272,"34":0.005356,"35":0.005356,"36":0.010712,"38":0.016068,"40":0.037492,"41":0.005356,"43":0.305292,"44":0.005356,"45":0.005356,"46":0.016068,"47":0.016068,"48":0.010712,"49":0.626652,"50":0.016068,"51":0.016068,"52":0.005356,"53":0.010712,"54":0.02678,"55":0.058916,"56":0.05356,"57":0.016068,"58":0.139256,"59":0.021424,"60":0.02678,"61":0.235664,"62":0.048204,"63":0.155324,"64":0.05356,"65":0.444548,"66":0.8034,"67":0.112476,"68":0.117832,"69":0.182104,"70":0.289224,"71":0.706992,"72":1.189032,"73":31.370092,"74":0.064272,"75":0.037492,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 25 27 37 39 42 76"},C:{"3":0.010712,"25":0.005356,"30":0.010712,"32":0.005356,"33":0.005356,"34":0.005356,"35":0.010712,"36":0.005356,"38":0.021424,"39":0.010712,"40":0.010712,"41":0.010712,"42":0.010712,"43":0.048204,"44":0.010712,"45":0.016068,"46":0.005356,"47":0.05356,"48":0.091052,"49":0.016068,"50":0.016068,"51":0.010712,"52":0.4017,"53":0.010712,"54":0.005356,"55":0.005356,"56":0.032136,"57":0.02678,"58":0.058916,"59":0.016068,"60":0.144612,"61":0.021424,"62":0.021424,"63":0.02678,"64":0.048204,"65":0.21424,"66":4.081272,"67":0.230308,_:"2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 26 27 28 29 31 37 68 3.5","3.6":0.005356},F:{"36":0.010712,"42":0.005356,"43":0.005356,"51":0.005356,"56":0.128544,"57":0.010712,"58":2.099552,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 44 45 46 47 48 49 50 52 53 54 55 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.010712},E:{"4":0,"7":0.005356,"8":0.058916,"9":0.042848,"10":0.032136,"11":0.064272,"12":0.498108,_:"0 5 6 3.1 3.2 6.1 7.1","5.1":0.305292,"9.1":0.048204,"10.1":0.091052,"11.1":0.149968,"12.1":0.358852},G:{"8":0.03091724527169,"3.2":0.0020076133293305,"4.0-4.1":0.0012045679975983,"4.2-4.3":0.00040152266586611,"5.0-5.1":0.0040152266586611,"6.0-6.1":0.0020076133293305,"7.0-7.1":0.0072274079855899,"8.1-8.4":0.015659383968778,"9.0-9.2":0.0092350213149204,"9.3":0.076690829180426,"10.0-10.2":0.042561402581807,"10.3":0.10158523446412,"11.0-11.2":0.12527507175023,"11.3-11.4":0.25737602882017,"12.0-12.1":1.5538927169018,"12.2":1.7823591137796},I:{"3":0.00085670564516129,"4":0.12336561290323,_:"67","2.1":0.005996939516129,"2.2":0.010280467741935,"2.3":0.005996939516129,"4.1":0.061682806451613,"4.2-4.3":0.26729216129032,"4.4":0,"4.4.3-4.4.4":0.37438036693548},A:{"7":0.010862873239437,"8":0.1194916056338,"9":0.038020056338028,"10":0.076040112676056,"11":1.6837453521127,_:"6 5.5"},B:{"12":0.05356,"13":0.042848,"14":0.042848,"15":0.048204,"16":0.149968,"17":0.862316,"18":0.24102},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.8256,"5.0-5.4":0.08256,"6.2-6.4":0.1032,"7.2-7.4":0.3612,"8.2":1.20744,"9.2":0.94944},N:{"10":0.024039529411765,"11":0.18029647058824},J:{"7":0,"10":0.09288},S:{_:"2.5"},R:{_:"0"},M:{"0":0.195048},O:{"0":1.490724},Q:{"1.2":0.013932},H:{"0":8.9427640824742},L:{"0":28.572796}};


/***/ }),
/* 493 */
/***/ (function(module, exports) {

module.exports={D:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0.398722,"70":0,"71":0,"72":0,"73":19.996922,"74":0,"75":0,_:"76"},C:{"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":3.000552,"66":5.595624,"67":0,"68":0,"3.5":0,"3.6":0},F:{"9":0,"11":0,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1.398906,"9.5-9.6":0,"10.0-10.1":0,"10.5":0,"10.6":0,"11.1":0,"11.5":0,"11.6":0,"12.1":0},E:{"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,_:"0","3.1":0,"3.2":0,"5.1":0,"6.1":0,"7.1":0,"9.1":0,"10.1":0.398722,"11.1":0,"12.1":0},G:{"8":0.40122896167317,"3.2":0.026053828680076,"4.0-4.1":0.015632297208046,"4.2-4.3":0.0052107657360152,"5.0-5.1":0.052107657360152,"6.0-6.1":0.026053828680076,"7.0-7.1":0.093793783248274,"8.1-8.4":0.20321986370459,"9.0-9.2":0.11984761192835,"9.3":0.99525625557891,"10.0-10.2":0.55234116801761,"10.3":1.3183237312118,"11.0-11.2":1.6257589096367,"11.3-11.4":3.3401008367858,"12.0-12.1":20.165663398379,"12.2":23.130589102172},I:{"3":0,"4":0,_:"67","2.1":0,"2.2":0,"2.3":0,"4.1":0,"4.2-4.3":0,"4.4":0,"4.4.3-4.4.4":0},A:{"6":0,"7":0,"8":0,"9":0,"10":0,"11":9.7991,"5.5":0},B:{"12":0,"13":0,"14":2.39909,"15":0,"16":0.398722,"17":0.797444,"18":0.398722},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0,"5.0-5.4":0,"6.2-6.4":0,"7.2-7.4":0,"8.2":0,"9.2":0},N:{"10":0,"11":0},J:{"7":0,"10":0},S:{"2.5":0},R:{_:"0"},M:{"0":0},O:{"0":0},Q:{"1.2":0},H:{"0":0},L:{"0":3.332776}};


/***/ }),
/* 494 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.008314,"13":0.004157,"22":0.016628,"25":0.004157,"26":0.008314,"27":0.004157,"28":0.004157,"29":0.062355,"30":0.008314,"31":0.029099,"32":0.008314,"33":0.020785,"34":0.016628,"36":0.012471,"38":0.024942,"39":0.004157,"40":0.020785,"41":0.008314,"42":0.008314,"43":0.029099,"44":0.008314,"45":0.020785,"46":0.008314,"47":0.016628,"48":0.062355,"49":0.839714,"50":0.012471,"51":0.016628,"52":0.008314,"53":0.016628,"54":0.016628,"55":0.078983,"56":0.08314,"57":0.062355,"58":0.087297,"59":0.020785,"60":0.020785,"61":0.261891,"62":0.070669,"63":0.640178,"64":0.049884,"65":0.108082,"66":0.058198,"67":0.137181,"68":0.095611,"69":0.257734,"70":0.203693,"71":0.299304,"72":1.022622,"73":24.646853,"74":0.070669,"75":0.045727,_:"4 5 6 7 8 9 10 12 14 15 16 17 18 19 20 21 23 24 35 37 76"},C:{"8":0.008314,"31":0.016628,"35":0.058198,"36":0.004157,"38":0.004157,"40":0.008314,"41":0.004157,"42":0.004157,"43":0.020785,"44":0.008314,"45":0.008314,"46":0.004157,"47":0.116396,"48":0.045727,"49":0.008314,"50":0.012471,"51":0.008314,"52":0.153809,"53":0.008314,"54":0.016628,"55":0.016628,"56":0.070669,"57":0.020785,"58":0.016628,"59":0.016628,"60":0.058198,"61":0.020785,"62":0.020785,"63":0.020785,"64":0.04157,"65":0.153809,"66":2.253094,"67":0.178751,_:"2 3 4 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 37 39 68 3.5 3.6"},F:{"36":0.004157,"43":0.033256,"56":0.004157,"57":0.008314,"58":0.627707,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 44 45 46 47 48 49 50 51 52 53 54 55 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.008314},E:{"4":0,"7":0.004157,"8":0.024942,"9":0.024942,"10":0.024942,"11":0.049884,"12":0.569509,_:"0 5 6 3.1 3.2 7.1","5.1":0.806458,"6.1":0.008314,"9.1":0.029099,"10.1":0.091454,"11.1":0.153809,"12.1":0.357502},G:{"8":0.053747803062144,"3.2":0.0034901170819574,"4.0-4.1":0.0020940702491744,"4.2-4.3":0.00069802341639147,"5.0-5.1":0.0069802341639147,"6.0-6.1":0.0034901170819574,"7.0-7.1":0.012564421495047,"8.1-8.4":0.027222913239267,"9.0-9.2":0.016054538577004,"9.3":0.13332247253077,"10.0-10.2":0.073990482137496,"10.3":0.17659992434704,"11.0-11.2":0.21778330591414,"11.3-11.4":0.44743300990693,"12.0-12.1":2.701350621435,"12.2":3.0985259453618},I:{"3":0.0011307096774194,"4":0.16282219354839,_:"67","2.1":0.0079149677419355,"2.2":0.013568516129032,"2.3":0.0079149677419355,"4.1":0.081411096774194,"4.2-4.3":0.35278141935484,"4.4":0,"4.4.3-4.4.4":0.49412012903226},A:{"8":0.11033456157635,"9":0.055167280788177,"10":0.055167280788177,"11":1.6458238768473,_:"6 7 5.5"},B:{"12":0.012471,"13":0.012471,"14":0.020785,"15":0.020785,"16":0.054041,"17":0.636021,"18":0.220321},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.80314445251397,"5.0-5.4":0.060998312849162,"6.2-6.4":0.1016638547486,"7.2-7.4":0.33549072067039,"8.2":1.1793007150838,"9.2":1.1589679441341},N:{"10":0,"11":0.081788},J:{"7":0,"10":0.017526},S:{"2.5":0.958088},R:{_:"0"},M:{"0":0.11684},O:{"0":6.817614},Q:{"1.2":0.297942},H:{"0":2.0685297388316},L:{"0":36.934869}};


/***/ }),
/* 495 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.00561,"22":0.02805,"25":0.00561,"26":0.00561,"29":0.10098,"33":0.00561,"34":0.01683,"36":0.00561,"38":0.03927,"39":0.00561,"40":0.03927,"41":0.02244,"42":0.00561,"43":0.02244,"44":0.00561,"45":0.01122,"46":0.01122,"47":0.00561,"48":0.01683,"49":0.88638,"50":0.00561,"51":0.02244,"52":0.01122,"53":0.02805,"54":0.1122,"55":0.04488,"56":0.03366,"57":0.06732,"58":0.06171,"59":0.05049,"60":0.02805,"61":0.39831,"62":0.07854,"63":0.1683,"64":0.08976,"65":0.1683,"66":0.08976,"67":0.14025,"68":0.11781,"69":0.12903,"70":0.17391,"71":0.43197,"72":1.82886,"73":28.35294,"74":0.0561,"75":0.02244,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 23 24 27 28 30 31 32 35 37 76"},C:{"26":0.00561,"34":0.00561,"38":0.03927,"41":0.00561,"42":0.00561,"43":0.01122,"45":0.02805,"46":0.01122,"47":0.02244,"48":0.14586,"49":0.01122,"50":0.02244,"51":0.01683,"52":0.44319,"53":0.01122,"54":0.01683,"55":0.01683,"56":0.05049,"57":0.04488,"58":0.02805,"59":0.02805,"60":0.30855,"61":0.03927,"62":0.03366,"63":0.05049,"64":0.09537,"65":0.35904,"66":5.73342,"67":0.04488,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 30 31 32 33 35 36 37 39 40 44 68 3.5","3.6":0.01122},F:{"31":0.02244,"36":0.04488,"40":0.00561,"49":0.00561,"56":0.01122,"57":0.01122,"58":1.55958,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 37 38 39 41 42 43 44 45 46 47 48 50 51 52 53 54 55 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.03927},E:{"4":0,"5":0.00561,"7":0.01122,"8":0.04488,"9":0.02244,"10":0.04488,"11":0.10098,"12":1.7952,_:"0 6 3.1 3.2 7.1","5.1":0.02805,"6.1":0.02244,"9.1":0.08976,"10.1":0.21879,"11.1":0.40953,"12.1":1.17249},G:{"8":0.08375485639948,"3.2":0.0054386270389273,"4.0-4.1":0.0032631762233564,"4.2-4.3":0.0010877254077855,"5.0-5.1":0.010877254077855,"6.0-6.1":0.0054386270389273,"7.0-7.1":0.019579057340138,"8.1-8.4":0.042421290903633,"9.0-9.2":0.025017684379065,"9.3":0.20775555288702,"10.0-10.2":0.11529889322526,"10.3":0.27519452816972,"11.0-11.2":0.33937032722906,"11.3-11.4":0.69723198639047,"12.0-12.1":4.2094973281297,"12.2":4.8284130851596},I:{"3":0.00042041330645161,"4":0.060539516129032,_:"67","2.1":0.0029428931451613,"2.2":0.0050449596774194,"2.3":0.0029428931451613,"4.1":0.030269758064516,"4.2-4.3":0.1311689516129,"4.4":0,"4.4.3-4.4.4":0.18372061491935},A:{"6":0.011324859813084,"7":0.011324859813084,"8":0.084936448598131,"9":0.050961869158879,"10":0.073611588785047,"11":2.7972403738318,_:"5.5"},B:{"12":0.01122,"13":0.01683,"14":0.04488,"15":0.06732,"16":0.15708,"17":2.02521,"18":0.77418},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.36548125313283,"5.0-5.4":0.053747243107769,"6.2-6.4":0.075246140350877,"7.2-7.4":0.22573842105263,"8.2":1.5694194987469,"9.2":1.999397443609},N:{"10":0,"11":0.13609},J:{"7":0,"10":0.01317},S:{_:"2.5"},R:{_:"0"},M:{"0":0.25901},O:{"0":0.19316},Q:{"1.2":0.01317},H:{"0":0.33249347079038},L:{"0":28.30562}};


/***/ }),
/* 496 */
/***/ (function(module, exports) {

module.exports={D:{"15":0.074522,"22":0.005323,"29":0.063876,"31":0.015969,"32":0.015969,"33":0.005323,"34":0.010646,"35":0.005323,"37":0.010646,"38":0.015969,"39":0.010646,"40":0.05323,"41":0.026615,"43":0.015969,"44":0.010646,"45":0.015969,"46":0.015969,"47":0.021292,"48":0.063876,"49":0.516331,"50":0.015969,"51":0.031938,"52":0.015969,"53":0.021292,"54":0.031938,"55":0.031938,"56":0.085168,"57":0.117106,"58":0.05323,"59":0.05323,"60":0.047907,"61":0.388579,"62":0.063876,"63":0.196951,"64":0.079845,"65":0.207597,"66":0.117106,"67":0.21292,"68":0.133075,"69":0.180982,"70":0.287442,"71":0.750543,"72":3.358813,"73":25.587661,"74":0.079845,"75":0.037261,_:"4 5 6 7 8 9 10 11 12 13 14 16 17 18 19 20 21 23 24 25 26 27 28 30 36 42 76"},C:{"4":0.037261,"11":0.015969,"17":0.015969,"30":0.005323,"31":0.015969,"35":0.010646,"36":0.005323,"38":0.010646,"40":0.005323,"41":0.005323,"43":0.015969,"44":0.026615,"45":0.021292,"46":0.005323,"47":0.021292,"48":0.074522,"49":0.010646,"50":0.021292,"51":0.021292,"52":0.191628,"53":0.021292,"54":0.021292,"55":0.021292,"56":0.031938,"57":0.037261,"58":0.015969,"59":0.021292,"60":0.175659,"61":0.026615,"62":0.021292,"63":0.05323,"64":0.063876,"65":0.308734,"66":2.996849,"67":0.026615,_:"2 3 5 6 7 8 9 10 12 13 14 15 16 18 19 20 21 22 23 24 25 26 27 28 29 32 33 34 37 39 42 68 3.5","3.6":0.005323},F:{"36":0.005323,"56":0.010646,"58":0.441809,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.010646},E:{"4":0,"5":0.010646,"7":0.026615,"8":0.069199,"9":0.042584,"10":0.058553,"11":0.111783,"12":1.879019,_:"0 6 3.1 3.2 7.1","5.1":0.244858,"6.1":0.015969,"9.1":0.101137,"10.1":0.271473,"11.1":0.516331,"12.1":1.378657},G:{"8":0.16339686640648,"3.2":0.010610186130291,"4.0-4.1":0.0063661116781747,"4.2-4.3":0.0021220372260582,"5.0-5.1":0.021220372260582,"6.0-6.1":0.010610186130291,"7.0-7.1":0.038196670069048,"8.1-8.4":0.082759451816271,"9.0-9.2":0.04880685619934,"9.3":0.40530911017712,"10.0-10.2":0.22493594596217,"10.3":0.53687541819273,"11.0-11.2":0.66207561453017,"11.3-11.4":1.3602258619033,"12.0-12.1":8.2122840648454,"12.2":9.4197232464725},I:{"3":0.00024045060483871,"4":0.034624887096774,_:"67","2.1":0.001683154233871,"2.2":0.0028854072580645,"2.3":0.001683154233871,"4.1":0.017312443548387,"4.2-4.3":0.075020588709677,"4.4":0,"4.4.3-4.4.4":0.10507691431452},A:{"6":0.010722866425993,"8":0.16084299638989,"9":0.63801055234657,"10":0.05897576534296,"11":3.5867988194946,_:"7 5.5"},B:{"12":0.015969,"13":0.021292,"14":0.05323,"15":0.069199,"16":0.170336,"17":1.831112,"18":1.825789},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.16609820158103,"5.0-5.4":0.02214642687747,"6.2-6.4":0.044292853754941,"7.2-7.4":0.16609820158103,"8.2":0.96336956916996,"9.2":1.4395177470356},N:{"10":0,"11":0.065478},J:{"7":0,"10":0.032739},S:{_:"2.5"},R:{_:"0"},M:{"0":0.238527},O:{"0":0.252558},Q:{"1.2":0.014031},H:{"0":0.19482678350515},L:{"0":22.998981}};


/***/ }),
/* 497 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.010344,"26":0.005172,"29":0.005172,"34":0.010344,"38":0.036204,"40":0.020688,"43":0.005172,"44":0.005172,"45":0.010344,"46":0.005172,"47":0.015516,"48":0.010344,"49":0.424104,"50":0.010344,"51":0.010344,"52":0.015516,"53":0.02586,"54":0.02586,"55":0.072408,"56":0.062064,"57":0.072408,"58":0.041376,"59":0.041376,"60":0.036204,"61":0.098268,"62":0.067236,"63":0.641328,"64":0.087924,"65":0.175848,"66":0.1293,"67":0.243084,"68":0.299976,"69":0.325836,"70":0.341352,"71":0.599952,"72":3.160092,"73":26.666832,"74":0.067236,"75":0.02586,_:"4 5 6 7 8 9 10 12 13 14 15 16 17 18 19 20 21 22 23 24 25 27 28 30 31 32 33 35 36 37 39 41 42 76"},C:{"43":0.005172,"45":0.015516,"47":0.015516,"48":0.041376,"49":0.005172,"50":0.010344,"52":0.237912,"54":0.005172,"56":0.020688,"57":0.031032,"58":0.010344,"59":0.010344,"60":0.118956,"61":0.015516,"62":0.015516,"63":0.041376,"64":0.10344,"65":0.237912,"66":2.979072,"67":0.041376,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 46 51 53 55 68 3.5 3.6"},F:{"36":0.005172,"40":0.005172,"58":0.36204,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6 12.1","10.0-10.1":0},E:{"4":0,"8":0.02586,"9":0.02586,"10":0.062064,"11":0.139644,"12":2.063628,_:"0 5 6 7 3.1 3.2 7.1","5.1":0.015516,"6.1":0.020688,"9.1":0.118956,"10.1":0.299976,"11.1":0.5172,"12.1":1.298172},G:{"8":0.18492935815071,"3.2":0.012008399879916,"4.0-4.1":0.0072050399279496,"4.2-4.3":0.0024016799759832,"5.0-5.1":0.024016799759832,"6.0-6.1":0.012008399879916,"7.0-7.1":0.043230239567697,"8.1-8.4":0.093665519063344,"9.0-9.2":0.055238639447613,"9.3":0.45872087541279,"10.0-10.2":0.25457807745422,"10.3":0.60762503392375,"11.0-11.2":0.74932415250675,"11.3-11.4":1.5394768646052,"12.0-12.1":9.2945015070549,"12.2":10.661057413389},I:{"3":0.00043315725806452,"4":0.06237464516129,_:"67","2.1":0.0030321008064516,"2.2":0.0051978870967742,"2.3":0.0030321008064516,"4.1":0.031187322580645,"4.2-4.3":0.13514506451613,"4.4":0,"4.4.3-4.4.4":0.18928972177419},A:{"8":0.026821168141593,"9":0.053642336283186,"10":0.064370803539823,"11":2.8859576920354,_:"6 7 5.5"},B:{"12":0.010344,"13":0.02586,"14":0.067236,"15":0.05172,"16":0.149988,"17":1.934328,"18":1.437816},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.29632215757576,"5.0-5.4":0.045588024242424,"6.2-6.4":0.05698503030303,"7.2-7.4":0.20514610909091,"8.2":1.3106556969697,"9.2":1.8463149818182},N:{"10":0,"11":0.04828},J:{"7":0,"10":0.009656},S:{_:"2.5"},R:{_:"0"},M:{"0":0.226916},O:{"0":0.439348},Q:{"1.2":0.178636},H:{"0":0.33367120962199},L:{"0":20.275272}};


/***/ }),
/* 498 */
/***/ (function(module, exports) {

module.exports={D:{"22":0.014086,"26":0.007043,"29":0.028172,"34":0.014086,"36":0.042258,"38":0.049301,"39":0.021129,"40":0.007043,"41":0.007043,"43":0.021129,"46":0.007043,"47":0.007043,"48":0.007043,"49":0.880375,"50":0.007043,"51":0.028172,"52":0.007043,"53":0.021129,"54":0.014086,"55":0.028172,"56":0.021129,"57":0.021129,"58":0.126774,"59":0.021129,"60":0.035215,"61":0.183118,"62":0.07043,"63":0.14086,"64":0.084516,"65":0.126774,"66":0.098602,"67":0.232419,"68":0.161989,"69":0.190161,"70":0.288763,"71":0.415537,"72":1.598761,"73":52.484436,"74":0.126774,"75":0.042258,_:"4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 23 24 25 27 28 30 31 32 33 35 37 42 44 45 76"},C:{"43":0.014086,"45":0.014086,"47":0.021129,"48":0.049301,"49":0.007043,"50":0.014086,"51":0.014086,"52":0.232419,"53":0.007043,"54":0.007043,"56":0.028172,"57":0.021129,"58":0.021129,"59":0.021129,"60":0.07043,"61":0.028172,"62":0.021129,"63":0.028172,"64":0.042258,"65":0.183118,"66":3.296124,"67":0.042258,_:"2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 46 55 68 3.5 3.6"},F:{"36":0.007043,"58":1.33817,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.007043},E:{"4":0,"8":0.014086,"9":0.042258,"10":0.028172,"11":0.07043,"12":0.978977,_:"0 5 6 7 3.1 3.2 7.1","5.1":1.021235,"6.1":0.021129,"9.1":0.042258,"10.1":0.133817,"11.1":0.267634,"12.1":0.63387},G:{"8":0.020346870509357,"3.2":0.0013212253577504,"4.0-4.1":0.00079273521465026,"4.2-4.3":0.00026424507155009,"5.0-5.1":0.0026424507155009,"6.0-6.1":0.0013212253577504,"7.0-7.1":0.0047564112879015,"8.1-8.4":0.010305557790453,"9.0-9.2":0.006077636645652,"9.3":0.050470808666066,"10.0-10.2":0.028009977584309,"10.3":0.066854003102172,"11.0-11.2":0.082444462323627,"11.3-11.4":0.1693810908636,"12.0-12.1":1.0226284268988,"12.2":1.1729838726108},I:{"3":0.00025039112903226,"4":0.036056322580645,_:"67","2.1":0.0017527379032258,"2.2":0.0030046935483871,"2.3":0.0017527379032258,"4.1":0.018028161290323,"4.2-4.3":0.078122032258065,"4.4":0,"4.4.3-4.4.4":0.1094209233871},A:{"7":0.0071513538461538,"8":0.12872436923077,"9":0.042908123076923,"10":0.028605415384615,"11":0.72228673846154,_:"6 5.5"},B:{"12":0.014086,"13":0.014086,"14":0.021129,"15":0.028172,"16":0.063387,"17":0.781773,"18":0.260591},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.31442766666667,"5.0-5.4":0.010480922222222,"6.2-6.4":0.052404611111111,"7.2-7.4":0.11529014444444,"8.2":0.76510732222222,"9.2":0.62885533333333},N:{"10":0,"11":0.14785},J:{"7":0,"10":0.008871},S:{_:"2.5"},R:{_:"0"},M:{"0":0.079839},O:{"0":0.378496},Q:{"1.2":0.002957},H:{"0":0.22955871821306},L:{"0":25.167504}};


/***/ }),
/* 499 */
/***/ (function(module, exports) {

module.exports={D:{"11":0.005029,"15":0.015087,"22":0.015087,"25":0.005029,"26":0.010058,"29":0.070406,"30":0.005029,"31":0.015087,"32":0.005029,"33":0.015087,"34":0.015087,"36":0.010058,"37":0.005029,"38":0.025145,"39":0.010058,"40":0.035203,"41":0.015087,"42":0.005029,"43":0.035203,"44":0.005029,"45":0.015087,"46":0.010058,"47":0.015087,"48":0.045261,"49":0.759379,"50":0.010058,"51":0.020116,"52":0.010058,"53":0.020116,"54":0.045261,"55":0.055319,"56":0.065377,"57":0.070406,"58":0.075435,"59":0.035203,"60":0.030174,"61":0.311798,"62":0.070406,"63":0.367117,"64":0.070406,"65":0.160928,"66":0.115667,"67":0.160928,"68":0.115667,"69":0.20116,"70":0.226305,"71":0.457639,"72":1.81044,"73":27.941124,"74":0.070406,"75":0.035203,_:"4 5 6 7 8 9 10 12 13 14 16 17 18 19 20 21 23 24 27 28 35 76"},C:{"4":0.010058,"11":0.005029,"17":0.005029,"31":0.010058,"35":0.025145,"38":0.015087,"40":0.005029,"41":0.005029,"43":0.015087,"44":0.010058,"45":0.020116,"46":0.005029,"47":0.060348,"48":0.080464,"49":0.010058,"50":0.015087,"51":0.015087,"52":0.246421,"53":0.010058,"54":0.015087,"55":0.015087,"56":0.05029,"57":0.030174,"58":0.020116,"59":0.020116,"60":0.196131,"61":0.025145,"62":0.025145,"63":0.035203,"64":0.060348,"65":0.241392,"66":3.394575,"67":0.10058,_:"2 3 5 6 7 8 9 10 12 13 14 15 16 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 36 37 39 42 68 3.5 3.6"},F:{"31":0.005029,"36":0.015087,"43":0.015087,"56":0.015087,"57":0.005029,"58":0.995742,_:"9 11 12 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 32 33 34 35 37 38 39 40 41 42 44 45 46 47 48 49 50 51 52 53 54 55 9.5-9.6 10.5 10.6 11.1 11.5 11.6","10.0-10.1":0,"12.1":0.015087},E:{"4":0,"7":0.010058,"8":0.040232,"9":0.030174,"10":0.035203,"11":0.080464,"12":1.191873,_:"0 5 6 3.1 3.2 7.1","5.1":0.472726,"6.1":0.015087,"9.1":0.060348,"10.1":0.165957,"11.1":0.306769,"12.1":0.809669},G:{"8":0.080360769138397,"3.2":0.0052182317622336,"4.0-4.1":0.0031309390573401,"4.2-4.3":0.0010436463524467,"5.0-5.1":0.010436463524467,"6.0-6.1":0.0052182317622336,"7.0-7.1":0.018785634344041,"8.1-8.4":0.040702207745422,"9.0-9.2":0.024003866106274,"9.3":0.19933645331732,"10.0-10.2":0.11062651335935,"10.3":0.26404252716902,"11.0-11.2":0.32561766196337,"11.3-11.4":0.66897731191834,"12.0-12.1":4.0389113839688,"12.2":4.632746158511},I:{"3":0.00068651915322581,"4":0.098858758064516,_:"67","2.1":0.0048056340725806,"2.2":0.0082382298387097,"2.3":0.0048056340725806,"4.1":0.049429379032258,"4.2-4.3":0.21419397580645,"4.4":0,"4.4.3-4.4.4":0.30000886995968},A:{"6":0.010410912280702,"7":0.0052054561403509,"8":0.11452003508772,"9":0.18739642105263,"10":0.05726001754386,"11":2.2956061578947,_:"5.5"},B:{"12":0.015087,"13":0.020116,"14":0.035203,"15":0.045261,"16":0.110638,"17":1.267308,"18":0.724176},K:{_:"0 10 11 12 11.1 11.5 12.1"},P:{"4":0.52286432926829,"5.0-5.4":0.052286432926829,"6.2-6.4":0.073201006097561,"7.2-7.4":0.25097487804878,"8.2":1.1816733841463,"9.2":1.3489899695122},N:{"10":0.069628466666667,"11":0.09942},J:{"7":0,"10":0.024855},S:{"2.5":0.402651},R:{_:"0"},M:{"0":0.178956},O:{"0":3.072078},Q:{"1.2":0.134217},H:{"0":1.4212789381443},L:{"0":30.771295}};


/***/ }),
/* 500 */
/***/ (function(module, exports) {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

module.exports = memoize;


/***/ }),
/* 501 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = unpackFeature;

var _statuses = __webpack_require__(502);

var _statuses2 = _interopRequireDefault(_statuses);

var _supported = __webpack_require__(503);

var _supported2 = _interopRequireDefault(_supported);

var _browsers = __webpack_require__(46);

var _browserVersions = __webpack_require__(72);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MATH2LOG = Math.log(2);

function unpackSupport(cipher) {
    // bit flags
    var stats = Object.keys(_supported2.default).reduce(function (list, support) {
        if (cipher & _supported2.default[support]) list.push(support);
        return list;
    }, []);

    // notes
    var notes = cipher >> 7;
    var notesArray = [];
    while (notes) {
        var note = Math.floor(Math.log(notes) / MATH2LOG) + 1;
        notesArray.unshift('#' + note);
        notes -= Math.pow(2, note - 1);
    }

    return stats.concat(notesArray).join(' ');
}

function unpackFeature(packed) {
    var unpacked = { status: _statuses2.default[packed.B], title: packed.C };
    unpacked.stats = Object.keys(packed.A).reduce(function (browserStats, key) {
        var browser = packed.A[key];
        browserStats[_browsers.browsers[key]] = Object.keys(browser).reduce(function (stats, support) {
            var packedVersions = browser[support].split(' ');
            var unpacked = unpackSupport(support);
            packedVersions.forEach(function (v) {
                return stats[_browserVersions.browserVersions[v]] = unpacked;
            });
            return stats;
        }, {});
        return browserStats;
    }, {});
    return unpacked;
}

/***/ }),
/* 502 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    1: "ls", // WHATWG Living Standard
    2: "rec", // W3C Recommendation
    3: "pr", // W3C Proposed Recommendation
    4: "cr", // W3C Candidate Recommendation
    5: "wd", // W3C Working Draft
    6: "other", // Non-W3C, but reputable
    7: "unoff" // Unofficial, Editor's Draft or W3C "Note"
};


/***/ }),
/* 503 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    y: 1 << 0,
    n: 1 << 1,
    a: 1 << 2,
    p: 1 << 3,
    u: 1 << 4,
    x: 1 << 5,
    d: 1 << 6
};


/***/ }),
/* 504 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
/*
 * Load this dynamically so that it
 * doesn't appear in the rollup bundle.
 */

var features = exports.features = __webpack_require__(505);

/***/ }),
/* 505 */
/***/ (function(module, exports, __webpack_require__) {

module.exports={"aac":__webpack_require__(506),"abortcontroller":__webpack_require__(507),"ac3-ec3":__webpack_require__(508),"accelerometer":__webpack_require__(509),"addeventlistener":__webpack_require__(510),"alternate-stylesheet":__webpack_require__(511),"ambient-light":__webpack_require__(512),"apng":__webpack_require__(513),"array-find-index":__webpack_require__(514),"array-find":__webpack_require__(515),"array-flat":__webpack_require__(516),"array-includes":__webpack_require__(517),"arrow-functions":__webpack_require__(518),"asmjs":__webpack_require__(519),"async-clipboard":__webpack_require__(520),"async-functions":__webpack_require__(521),"async-iterations-and-generators":__webpack_require__(522),"atob-btoa":__webpack_require__(523),"audio-api":__webpack_require__(524),"audio":__webpack_require__(525),"audiotracks":__webpack_require__(526),"autofocus":__webpack_require__(527),"auxclick":__webpack_require__(528),"av1":__webpack_require__(529),"background-attachment":__webpack_require__(530),"background-clip-text":__webpack_require__(77),"background-img-opts":__webpack_require__(78),"background-position-x-y":__webpack_require__(531),"background-repeat-round-space":__webpack_require__(532),"background-sync":__webpack_require__(533),"battery-status":__webpack_require__(534),"beacon":__webpack_require__(535),"beforeafterprint":__webpack_require__(536),"bigint":__webpack_require__(537),"blobbuilder":__webpack_require__(538),"bloburls":__webpack_require__(539),"border-image":__webpack_require__(79),"border-radius":__webpack_require__(80),"broadcastchannel":__webpack_require__(540),"brotli":__webpack_require__(541),"calc":__webpack_require__(81),"canvas-blending":__webpack_require__(542),"canvas-text":__webpack_require__(543),"canvas":__webpack_require__(544),"ch-unit":__webpack_require__(545),"chacha20-poly1305":__webpack_require__(546),"channel-messaging":__webpack_require__(547),"childnode-remove":__webpack_require__(548),"classlist":__webpack_require__(549),"clear-site-data-header":__webpack_require__(550),"client-hints-dpr-width-viewport":__webpack_require__(551),"clipboard":__webpack_require__(552),"comparedocumentposition":__webpack_require__(553),"console-basic":__webpack_require__(554),"console-time":__webpack_require__(555),"const":__webpack_require__(556),"constraint-validation":__webpack_require__(557),"contenteditable":__webpack_require__(558),"contentsecuritypolicy":__webpack_require__(559),"contentsecuritypolicy2":__webpack_require__(560),"cors":__webpack_require__(561),"createimagebitmap":__webpack_require__(562),"credential-management":__webpack_require__(563),"cryptography":__webpack_require__(564),"css-all":__webpack_require__(565),"css-animation":__webpack_require__(82),"css-any-link":__webpack_require__(83),"css-appearance":__webpack_require__(84),"css-apply-rule":__webpack_require__(566),"css-at-counter-style":__webpack_require__(567),"css-backdrop-filter":__webpack_require__(85),"css-background-offsets":__webpack_require__(568),"css-backgroundblendmode":__webpack_require__(569),"css-boxdecorationbreak":__webpack_require__(86),"css-boxshadow":__webpack_require__(87),"css-canvas":__webpack_require__(570),"css-caret-color":__webpack_require__(571),"css-case-insensitive":__webpack_require__(572),"css-clip-path":__webpack_require__(88),"css-color-adjust":__webpack_require__(89),"css-conic-gradients":__webpack_require__(573),"css-containment":__webpack_require__(574),"css-counters":__webpack_require__(575),"css-crisp-edges":__webpack_require__(90),"css-cross-fade":__webpack_require__(91),"css-default-pseudo":__webpack_require__(576),"css-descendant-gtgt":__webpack_require__(577),"css-deviceadaptation":__webpack_require__(92),"css-dir-pseudo":__webpack_require__(578),"css-display-contents":__webpack_require__(579),"css-element-function":__webpack_require__(93),"css-env-function":__webpack_require__(580),"css-exclusions":__webpack_require__(581),"css-featurequeries":__webpack_require__(94),"css-filter-function":__webpack_require__(95),"css-filters":__webpack_require__(96),"css-first-letter":__webpack_require__(582),"css-first-line":__webpack_require__(583),"css-fixed":__webpack_require__(584),"css-focus-visible":__webpack_require__(585),"css-focus-within":__webpack_require__(586),"css-font-rendering-controls":__webpack_require__(587),"css-font-stretch":__webpack_require__(588),"css-gencontent":__webpack_require__(589),"css-gradients":__webpack_require__(97),"css-grid":__webpack_require__(98),"css-hanging-punctuation":__webpack_require__(590),"css-has":__webpack_require__(591),"css-hyphenate":__webpack_require__(592),"css-hyphens":__webpack_require__(99),"css-image-orientation":__webpack_require__(593),"css-image-set":__webpack_require__(100),"css-in-out-of-range":__webpack_require__(594),"css-indeterminate-pseudo":__webpack_require__(595),"css-initial-letter":__webpack_require__(596),"css-initial-value":__webpack_require__(597),"css-letter-spacing":__webpack_require__(598),"css-line-clamp":__webpack_require__(599),"css-logical-props":__webpack_require__(101),"css-marker-pseudo":__webpack_require__(600),"css-masks":__webpack_require__(102),"css-matches-pseudo":__webpack_require__(601),"css-math-functions":__webpack_require__(602),"css-media-interaction":__webpack_require__(603),"css-media-resolution":__webpack_require__(103),"css-media-scripting":__webpack_require__(604),"css-mediaqueries":__webpack_require__(605),"css-mixblendmode":__webpack_require__(606),"css-motion-paths":__webpack_require__(607),"css-namespaces":__webpack_require__(608),"css-not-sel-list":__webpack_require__(609),"css-nth-child-of":__webpack_require__(610),"css-opacity":__webpack_require__(611),"css-optional-pseudo":__webpack_require__(612),"css-overflow-anchor":__webpack_require__(613),"css-overflow":__webpack_require__(614),"css-overscroll-behavior":__webpack_require__(104),"css-page-break":__webpack_require__(615),"css-paged-media":__webpack_require__(616),"css-paint-api":__webpack_require__(617),"css-placeholder-shown":__webpack_require__(618),"css-placeholder":__webpack_require__(105),"css-read-only-write":__webpack_require__(106),"css-rebeccapurple":__webpack_require__(619),"css-reflections":__webpack_require__(620),"css-regions":__webpack_require__(107),"css-repeating-gradients":__webpack_require__(621),"css-resize":__webpack_require__(622),"css-revert-value":__webpack_require__(623),"css-rrggbbaa":__webpack_require__(624),"css-scroll-behavior":__webpack_require__(625),"css-scrollbar":__webpack_require__(626),"css-sel2":__webpack_require__(627),"css-sel3":__webpack_require__(628),"css-selection":__webpack_require__(108),"css-shapes":__webpack_require__(109),"css-snappoints":__webpack_require__(110),"css-sticky":__webpack_require__(111),"css-subgrid":__webpack_require__(629),"css-supports-api":__webpack_require__(630),"css-table":__webpack_require__(631),"css-text-align-last":__webpack_require__(112),"css-text-indent":__webpack_require__(632),"css-text-justify":__webpack_require__(633),"css-text-orientation":__webpack_require__(113),"css-text-spacing":__webpack_require__(114),"css-textshadow":__webpack_require__(634),"css-touch-action-2":__webpack_require__(635),"css-touch-action":__webpack_require__(636),"css-transitions":__webpack_require__(115),"css-unicode-bidi":__webpack_require__(116),"css-unset-value":__webpack_require__(637),"css-variables":__webpack_require__(638),"css-widows-orphans":__webpack_require__(639),"css-writing-mode":__webpack_require__(117),"css-zoom":__webpack_require__(640),"css3-attr":__webpack_require__(641),"css3-boxsizing":__webpack_require__(118),"css3-colors":__webpack_require__(642),"css3-cursors-grab":__webpack_require__(119),"css3-cursors-newer":__webpack_require__(120),"css3-cursors":__webpack_require__(643),"css3-tabsize":__webpack_require__(121),"currentcolor":__webpack_require__(644),"custom-elements":__webpack_require__(645),"custom-elementsv1":__webpack_require__(646),"customevent":__webpack_require__(647),"datalist":__webpack_require__(648),"dataset":__webpack_require__(649),"datauri":__webpack_require__(650),"date-tolocaledatestring":__webpack_require__(651),"details":__webpack_require__(652),"deviceorientation":__webpack_require__(653),"devicepixelratio":__webpack_require__(654),"dialog":__webpack_require__(655),"dispatchevent":__webpack_require__(656),"do-not-track":__webpack_require__(657),"document-currentscript":__webpack_require__(658),"document-evaluate-xpath":__webpack_require__(659),"document-execcommand":__webpack_require__(660),"document-scrollingelement":__webpack_require__(661),"documenthead":__webpack_require__(662),"dom-manip-convenience":__webpack_require__(663),"dom-range":__webpack_require__(664),"domcontentloaded":__webpack_require__(665),"domfocusin-domfocusout-events":__webpack_require__(666),"dommatrix":__webpack_require__(667),"download":__webpack_require__(668),"dragndrop":__webpack_require__(669),"element-closest":__webpack_require__(670),"element-from-point":__webpack_require__(671),"element-scroll-methods":__webpack_require__(672),"eme":__webpack_require__(673),"eot":__webpack_require__(674),"es5":__webpack_require__(675),"es6-class":__webpack_require__(676),"es6-generators":__webpack_require__(677),"es6-module-dynamic-import":__webpack_require__(678),"es6-module":__webpack_require__(679),"es6-number":__webpack_require__(680),"es6-string-includes":__webpack_require__(681),"es6":__webpack_require__(682),"eventsource":__webpack_require__(683),"feature-policy":__webpack_require__(684),"fetch":__webpack_require__(685),"fieldset-disabled":__webpack_require__(686),"fileapi":__webpack_require__(687),"filereader":__webpack_require__(688),"filereadersync":__webpack_require__(689),"filesystem":__webpack_require__(690),"flac":__webpack_require__(691),"flexbox":__webpack_require__(122),"flow-root":__webpack_require__(692),"focusin-focusout-events":__webpack_require__(693),"focusoptions-preventscroll":__webpack_require__(694),"font-family-system-ui":__webpack_require__(695),"font-feature":__webpack_require__(123),"font-kerning":__webpack_require__(124),"font-loading":__webpack_require__(696),"font-size-adjust":__webpack_require__(697),"font-smooth":__webpack_require__(698),"font-unicode-range":__webpack_require__(699),"font-variant-alternates":__webpack_require__(700),"font-variant-east-asian":__webpack_require__(701),"font-variant-numeric":__webpack_require__(702),"fontface":__webpack_require__(703),"form-attribute":__webpack_require__(704),"form-submit-attributes":__webpack_require__(705),"form-validation":__webpack_require__(706),"forms":__webpack_require__(707),"fullscreen":__webpack_require__(125),"gamepad":__webpack_require__(708),"geolocation":__webpack_require__(709),"getboundingclientrect":__webpack_require__(710),"getcomputedstyle":__webpack_require__(711),"getelementsbyclassname":__webpack_require__(712),"getrandomvalues":__webpack_require__(713),"gyroscope":__webpack_require__(714),"hardwareconcurrency":__webpack_require__(715),"hashchange":__webpack_require__(716),"heif":__webpack_require__(717),"hevc":__webpack_require__(718),"hidden":__webpack_require__(719),"high-resolution-time":__webpack_require__(720),"history":__webpack_require__(721),"html-media-capture":__webpack_require__(722),"html5semantic":__webpack_require__(723),"http-live-streaming":__webpack_require__(724),"http2":__webpack_require__(725),"iframe-sandbox":__webpack_require__(726),"iframe-seamless":__webpack_require__(727),"iframe-srcdoc":__webpack_require__(728),"imagecapture":__webpack_require__(729),"ime":__webpack_require__(730),"img-naturalwidth-naturalheight":__webpack_require__(731),"imports":__webpack_require__(732),"indeterminate-checkbox":__webpack_require__(733),"indexeddb":__webpack_require__(734),"indexeddb2":__webpack_require__(735),"inline-block":__webpack_require__(736),"innertext":__webpack_require__(737),"input-autocomplete-onoff":__webpack_require__(738),"input-color":__webpack_require__(739),"input-datetime":__webpack_require__(740),"input-email-tel-url":__webpack_require__(741),"input-event":__webpack_require__(742),"input-file-accept":__webpack_require__(743),"input-file-directory":__webpack_require__(744),"input-file-multiple":__webpack_require__(745),"input-inputmode":__webpack_require__(746),"input-minlength":__webpack_require__(747),"input-number":__webpack_require__(748),"input-pattern":__webpack_require__(749),"input-placeholder":__webpack_require__(750),"input-range":__webpack_require__(751),"input-search":__webpack_require__(752),"input-selection":__webpack_require__(753),"insert-adjacent":__webpack_require__(754),"insertadjacenthtml":__webpack_require__(755),"internationalization-plural-rul":__webpack_require__(756),"internationalization":__webpack_require__(757),"intersectionobserver":__webpack_require__(758),"intrinsic-width":__webpack_require__(126),"jpeg2000":__webpack_require__(759),"jpegxr":__webpack_require__(760),"js-regexp-lookbehind":__webpack_require__(761),"json":__webpack_require__(762),"justify-content-space-evenly":__webpack_require__(763),"kerning-pairs-ligatures":__webpack_require__(764),"keyboardevent-charcode":__webpack_require__(765),"keyboardevent-code":__webpack_require__(766),"keyboardevent-getmodifierstate":__webpack_require__(767),"keyboardevent-key":__webpack_require__(768),"keyboardevent-location":__webpack_require__(769),"keyboardevent-which":__webpack_require__(770),"lazyload":__webpack_require__(771),"let":__webpack_require__(772),"link-icon-png":__webpack_require__(773),"link-icon-svg":__webpack_require__(774),"link-rel-dns-prefetch":__webpack_require__(775),"link-rel-preconnect":__webpack_require__(776),"link-rel-prefetch":__webpack_require__(777),"link-rel-preload":__webpack_require__(778),"link-rel-prerender":__webpack_require__(779),"loading-lazy-attr":__webpack_require__(780),"localecompare":__webpack_require__(781),"magnetometer":__webpack_require__(782),"matchesselector":__webpack_require__(783),"matchmedia":__webpack_require__(784),"mathml":__webpack_require__(785),"maxlength":__webpack_require__(786),"media-attribute":__webpack_require__(787),"media-fragments":__webpack_require__(788),"media-session-api":__webpack_require__(789),"mediacapture-fromelement":__webpack_require__(790),"mediarecorder":__webpack_require__(791),"mediasource":__webpack_require__(792),"menu":__webpack_require__(793),"meta-theme-color":__webpack_require__(794),"meter":__webpack_require__(795),"midi":__webpack_require__(796),"minmaxwh":__webpack_require__(797),"mp3":__webpack_require__(798),"mpeg-dash":__webpack_require__(799),"mpeg4":__webpack_require__(800),"multibackgrounds":__webpack_require__(801),"multicolumn":__webpack_require__(127),"mutation-events":__webpack_require__(802),"mutationobserver":__webpack_require__(803),"namevalue-storage":__webpack_require__(804),"nav-timing":__webpack_require__(805),"navigator-language":__webpack_require__(806),"netinfo":__webpack_require__(807),"node-contains":__webpack_require__(808),"node-parentelement":__webpack_require__(809),"notifications":__webpack_require__(810),"object-entries":__webpack_require__(811),"object-fit":__webpack_require__(128),"object-observe":__webpack_require__(812),"object-values":__webpack_require__(813),"objectrtc":__webpack_require__(814),"offline-apps":__webpack_require__(815),"offscreencanvas":__webpack_require__(816),"ogg-vorbis":__webpack_require__(817),"ogv":__webpack_require__(818),"ol-reversed":__webpack_require__(819),"once-event-listener":__webpack_require__(820),"online-status":__webpack_require__(821),"opus":__webpack_require__(822),"orientation-sensor":__webpack_require__(823),"outline":__webpack_require__(824),"pad-start-end":__webpack_require__(825),"page-transition-events":__webpack_require__(826),"pagevisibility":__webpack_require__(827),"passive-event-listener":__webpack_require__(828),"passwordrules":__webpack_require__(829),"path2d":__webpack_require__(830),"payment-request":__webpack_require__(831),"permissions-api":__webpack_require__(832),"picture-in-picture":__webpack_require__(833),"picture":__webpack_require__(834),"ping":__webpack_require__(835),"png-alpha":__webpack_require__(836),"pointer-events":__webpack_require__(837),"pointer":__webpack_require__(129),"pointerlock":__webpack_require__(838),"prefers-color-scheme":__webpack_require__(839),"prefers-reduced-motion":__webpack_require__(840),"progress":__webpack_require__(841),"promise-finally":__webpack_require__(842),"promises":__webpack_require__(843),"proximity":__webpack_require__(844),"proxy":__webpack_require__(845),"publickeypinning":__webpack_require__(846),"push-api":__webpack_require__(847),"queryselector":__webpack_require__(848),"readonly-attr":__webpack_require__(849),"referrer-policy":__webpack_require__(850),"registerprotocolhandler":__webpack_require__(851),"rel-noopener":__webpack_require__(852),"rel-noreferrer":__webpack_require__(853),"rellist":__webpack_require__(854),"rem":__webpack_require__(855),"requestanimationframe":__webpack_require__(856),"requestidlecallback":__webpack_require__(857),"resizeobserver":__webpack_require__(858),"resource-timing":__webpack_require__(859),"rest-parameters":__webpack_require__(860),"rtcpeerconnection":__webpack_require__(861),"ruby":__webpack_require__(862),"run-in":__webpack_require__(863),"same-site-cookie-attribute":__webpack_require__(864),"screen-orientation":__webpack_require__(865),"script-async":__webpack_require__(866),"script-defer":__webpack_require__(867),"scrollintoview":__webpack_require__(868),"scrollintoviewifneeded":__webpack_require__(869),"sdch":__webpack_require__(870),"selection-api":__webpack_require__(871),"server-timing":__webpack_require__(872),"serviceworkers":__webpack_require__(873),"setimmediate":__webpack_require__(874),"sha-2":__webpack_require__(875),"shadowdom":__webpack_require__(876),"shadowdomv1":__webpack_require__(877),"sharedarraybuffer":__webpack_require__(878),"sharedworkers":__webpack_require__(879),"sni":__webpack_require__(880),"spdy":__webpack_require__(881),"speech-recognition":__webpack_require__(882),"speech-synthesis":__webpack_require__(883),"spellcheck-attribute":__webpack_require__(884),"sql-storage":__webpack_require__(885),"srcset":__webpack_require__(886),"stopimmediatepropagation":__webpack_require__(887),"stream":__webpack_require__(888),"streams":__webpack_require__(889),"stricttransportsecurity":__webpack_require__(890),"style-scoped":__webpack_require__(891),"subresource-integrity":__webpack_require__(892),"svg-css":__webpack_require__(893),"svg-filters":__webpack_require__(894),"svg-fonts":__webpack_require__(895),"svg-fragment":__webpack_require__(896),"svg-html":__webpack_require__(897),"svg-html5":__webpack_require__(898),"svg-img":__webpack_require__(899),"svg-smil":__webpack_require__(900),"svg":__webpack_require__(901),"symbols":__webpack_require__(902),"tabindex-attr":__webpack_require__(903),"template-literals":__webpack_require__(904),"template":__webpack_require__(905),"testfeat":__webpack_require__(906),"text-decoration":__webpack_require__(130),"text-emphasis":__webpack_require__(131),"text-overflow":__webpack_require__(132),"text-size-adjust":__webpack_require__(133),"text-stroke":__webpack_require__(907),"textcontent":__webpack_require__(908),"textencoder":__webpack_require__(909),"tls1-1":__webpack_require__(910),"tls1-2":__webpack_require__(911),"tls1-3":__webpack_require__(912),"token-binding":__webpack_require__(913),"touch":__webpack_require__(914),"transforms2d":__webpack_require__(134),"transforms3d":__webpack_require__(135),"ttf":__webpack_require__(915),"typedarrays":__webpack_require__(916),"u2f":__webpack_require__(917),"unhandledrejection":__webpack_require__(918),"upgradeinsecurerequests":__webpack_require__(919),"url":__webpack_require__(920),"urlsearchparams":__webpack_require__(921),"use-strict":__webpack_require__(922),"user-select-none":__webpack_require__(136),"user-timing":__webpack_require__(923),"variable-fonts":__webpack_require__(924),"vibration":__webpack_require__(925),"video":__webpack_require__(926),"videotracks":__webpack_require__(927),"viewport-units":__webpack_require__(928),"wai-aria":__webpack_require__(929),"wasm":__webpack_require__(930),"wav":__webpack_require__(931),"wbr-element":__webpack_require__(932),"web-animation":__webpack_require__(933),"web-app-manifest":__webpack_require__(934),"web-bluetooth":__webpack_require__(935),"web-share":__webpack_require__(936),"webauthn":__webpack_require__(937),"webgl":__webpack_require__(938),"webgl2":__webpack_require__(939),"webm":__webpack_require__(940),"webp":__webpack_require__(941),"websockets":__webpack_require__(942),"webusb":__webpack_require__(943),"webvr":__webpack_require__(944),"webvtt":__webpack_require__(945),"webworkers":__webpack_require__(946),"will-change":__webpack_require__(947),"woff":__webpack_require__(948),"woff2":__webpack_require__(949),"word-break":__webpack_require__(950),"wordwrap":__webpack_require__(951),"x-doc-messaging":__webpack_require__(952),"x-frame-options":__webpack_require__(953),"xhr2":__webpack_require__(954),"xhtml":__webpack_require__(955),"xhtmlsmil":__webpack_require__(956),"xml-serializer":__webpack_require__(957)};


/***/ }),
/* 506 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB","132":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"0 1 2 3 4 6 7 8 9 C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E","16":"A B"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"132":"3"},N:{"1":"A","2":"B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"132":"AC"}},B:6,C:"AAC audio file format"};


/***/ }),
/* 507 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","2":"2 C d J"},C:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"3 4 GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB"},E:{"1":"5 aB","2":"F N K D G E A B RB JB TB UB VB WB XB","130":"C p"},F:{"1":"0 1 w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"7B","2":"F 3B 4B 5B 6B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"AbortController & AbortSignal"};


/***/ }),
/* 508 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I","2":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB","132":"nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","132":"A"},K:{"2":"A B C L p EB","132":"5"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"132":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"AC-3 (Dolby Digital) and EC-3 (Dolby Digital Plus) codecs"};


/***/ }),
/* 509 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"4 GB SB OB MB lB NB KB AB PB QB","2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"1 3 7 8 9 IB BB CB DB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"Accelerometer"};


/***/ }),
/* 510 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","130":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","257":"fB FB F N K ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"EventTarget.addEventListener()"};


/***/ }),
/* 511 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","2":"K D iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"5 E B C bB cB dB eB p EB gB","16":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"16":"KB"},M:{"16":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"16":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"16":"9B"},S:{"1":"AC"}},B:1,C:"Alternate stylesheet"};


/***/ }),
/* 512 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C","132":"d J M H I","322":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB","132":"0 1 6 7 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"3 4 8 9 IB BB CB DB GB"},D:{"2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","322":"1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"132":"AC"}},B:4,C:"Ambient Light Sensor"};


/***/ }),
/* 513 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB"},D:{"1":"3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"1":"5 G E A B C WB XB p aB","2":"F N K D RB JB TB UB VB"},F:{"1":"0 1 5 B C L q r s t u v w x y z bB cB dB eB p EB gB","2":"6 E J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"5B 6B 7B","2":"F 3B 4B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:7,C:"Animated PNG (APNG)"};


/***/ }),
/* 514 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","16":"2 C d"},C:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T ZB YB"},D:{"1":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n"},E:{"1":"5 G E A B C VB WB XB p aB","2":"F N K D RB JB TB UB"},F:{"1":"0 1 6 b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a bB cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","16":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Array.prototype.findIndex"};


/***/ }),
/* 515 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","16":"2 C d"},C:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T ZB YB"},D:{"1":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n"},E:{"1":"5 G E A B C VB WB XB p aB","2":"F N K D RB JB TB UB"},F:{"1":"0 1 6 b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a bB cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","16":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Array.prototype.find"};


/***/ }),
/* 516 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"3 4 IB BB CB DB GB","2":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"SB OB MB lB NB KB AB PB QB","2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},E:{"1":"5 C aB","2":"F N K D G E A B RB JB TB UB VB WB XB p"},F:{"1":"0 1 z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y bB cB dB eB p EB gB"},G:{"1":"tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"flat & flatMap array methods"};


/***/ }),
/* 517 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l ZB YB"},D:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Array.prototype.includes"};


/***/ }),
/* 518 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB"},D:{"1":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Arrow functions"};


/***/ }),
/* 519 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I","132":"AB","322":"C"},C:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB"},D:{"2":"2 F N K D G E A B C d J M H I O P Q R S T U V W","132":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","132":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","132":"4"},J:{"2":"D A"},K:{"2":"5 A B C p EB","132":"L"},L:{"132":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F","132":"3B 4B 5B 6B 7B"},Q:{"132":"8B"},R:{"132":"9B"},S:{"1":"AC"}},B:6,C:"asm.js"};


/***/ }),
/* 520 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"3 4 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","66":"1 7 8 9"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q bB cB dB eB p EB gB","16":"0 1 r s t u v w x y z"},G:{"2":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"Asynchronous Clipboard API"};


/***/ }),
/* 521 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","2":"2 C","194":"d"},C:{"1":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB"},D:{"1":"0 1 3 4 7 8 9 y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"Async functions"};


/***/ }),
/* 522 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"3 4 BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB"},E:{"1":"5 C aB","2":"F N K D G E A B RB JB TB UB VB WB XB p"},F:{"1":"0 1 t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"Async iterators and generators"};


/***/ }),
/* 523 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","2":"E bB cB","16":"dB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 B C L p EB","16":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Base64 encoding and decoding"};


/***/ }),
/* 524 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E","33":"2 A B C d J M H I O P Q R S T U V W X Y Z a b c"},E:{"2":"F N RB JB TB","33":"5 K D G E A B C UB VB WB XB p aB"},F:{"1":"0 1 6 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","33":"J M H I O P Q"},G:{"2":"JB hB HB jB","33":"G kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Web Audio API"};


/***/ }),
/* 525 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB","132":"2 F N K D G E A B C d J M H I O ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E","4":"bB cB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","2":"wB xB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Audio element"};


/***/ }),
/* 526 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I","322":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b ZB YB","194":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n","322":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N K RB JB TB"},F:{"2":"5 E B C J M H I O P Q R S T U V W X Y Z a bB cB dB eB p EB gB","322":"0 1 6 b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","322":"L"},L:{"322":"KB"},M:{"2":"3"},N:{"1":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"194":"AC"}},B:1,C:"Audio Tracks"};


/***/ }),
/* 527 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:1,C:"Autofocus attribute"};


/***/ }),
/* 528 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v ZB YB","129":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 7 8 9 y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","16":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"Auxclick"};


/***/ }),
/* 529 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H","194":"I"},C:{"1":"4 GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x ZB YB","1090":"BB CB","1284":"DB","1540":"3","2114":"0 1 7 8 y z","3138":"9 IB"},D:{"1":"OB MB lB NB KB AB PB QB","2":"0 1 2 3 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB","4162":"4 GB SB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"1090":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"AV1 video format"};


/***/ }),
/* 530 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","132":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","132":"2 fB FB F N K D G E A B C d J M H I O P Q R S T ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","132":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","132":"E bB cB"},G:{"2":"JB hB HB","772":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB 0B 1B","132":"zB HB"},J:{"260":"D A"},K:{"1":"5 B C L p EB","132":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"2":"F","1028":"3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1028":"9B"},S:{"1":"AC"}},B:4,C:"CSS background-attachment"};


/***/ }),
/* 531 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:7,C:"background-position-x & background-position-y"};


/***/ }),
/* 532 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G iB","132":"E"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB UB"},F:{"1":"0 1 5 6 B C O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E J M H I bB cB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:4,C:"CSS background-repeat round and space"};


/***/ }),
/* 533 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB","16":"4 GB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Background Sync API"};


/***/ }),
/* 534 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"m n o L q r s t u","2":"0 1 3 4 7 8 9 fB FB F N K D G E v w x y z IB BB CB DB GB ZB YB","132":"6 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l","164":"2 A B C d J"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f","66":"g"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Battery Status API"};


/***/ }),
/* 535 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 6 7 8 9 a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z ZB YB"},D:{"1":"0 1 3 4 7 8 9 i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h"},E:{"1":"5 C p aB","2":"F N K D G E A B RB JB TB UB VB WB XB"},F:{"1":"0 1 6 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Beacon API"};


/***/ }),
/* 536 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","16":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N ZB YB"},D:{"1":"3 4 BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"2":"3B 4B 5B 6B 7B","16":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:2,C:"Printing Events"};


/***/ }),
/* 537 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB ZB YB","194":"3 4 DB GB"},D:{"1":"4 GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 3 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"7B","2":"F 3B 4B 5B 6B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:3,C:"BigInt"};


/***/ }),
/* 538 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N ZB YB","36":"K D G E A B C"},D:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D","36":"2 G E A B C d J M H I O"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB"},H:{"2":"vB"},I:{"1":"4","2":"wB xB yB","36":"FB F zB HB 0B 1B"},J:{"1":"A","2":"D"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Blob constructing"};


/***/ }),
/* 539 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","129":"A B"},B:{"1":"J M H I AB","129":"2 C d"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D","33":"2 G E A B C d J M H I O P Q R"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N RB JB TB","33":"K"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB","33":"kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB wB xB yB","33":"F zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Blob URLs"};


/***/ }),
/* 540 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g ZB YB"},D:{"1":"0 1 3 4 7 8 9 x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"5B 6B 7B","2":"F 3B 4B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:1,C:"BroadcastChannel"};


/***/ }),
/* 541 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","2":"2 C d"},C:{"1":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m ZB YB"},D:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r","194":"s","257":"t"},E:{"2":"F N K D G E A RB JB TB UB VB WB XB","513":"5 B C p aB"},F:{"1":"0 1 h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB","194":"f g"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","257":"4"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:6,C:"Brotli Accept-Encoding/Content-Encoding"};


/***/ }),
/* 542 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","2":"C"},C:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N K RB JB TB"},F:{"1":"0 1 6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Canvas blend modes"};


/***/ }),
/* 543 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"iB","8":"K D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","8":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","8":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","8":"E bB cB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 B C L p EB","8":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Text API for Canvas"};


/***/ }),
/* 544 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"iB","8":"K D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","132":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","132":"RB JB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"260":"vB"},I:{"1":"4 FB F zB HB 0B 1B","132":"wB xB yB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Canvas (basic support)"};


/***/ }),
/* 545 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","132":"E A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB UB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"ch (character) unit"};


/***/ }),
/* 546 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b","129":"6 c e f g h i j k l m n o L q r"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B","16":"1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"ChaCha20-Poly1305 cipher suites for TLS"};


/***/ }),
/* 547 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U ZB YB","194":"6 V W X Y Z a b c e f g h i j"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","2":"E bB cB","16":"dB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Channel messaging"};


/***/ }),
/* 548 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","16":"C"},C:{"1":"0 1 3 4 6 7 8 9 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N RB JB TB","16":"K"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"ChildNode.remove()"};


/***/ }),
/* 549 */
/***/ (function(module, exports) {

module.exports={A:{A:{"8":"K D G E iB","1924":"A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","8":"fB FB ZB","516":"T U","772":"2 F N K D G E A B C d J M H I O P Q R S YB"},D:{"1":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","8":"F N K D","516":"T U V W","772":"S","900":"2 G E A B C d J M H I O P Q R"},E:{"1":"5 D G E A B C VB WB XB p aB","8":"F N RB JB","900":"K TB UB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","8":"E B bB cB dB eB p","900":"5 C EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","8":"JB hB HB","900":"jB kB"},H:{"900":"vB"},I:{"1":"4 0B 1B","8":"wB xB yB","900":"FB F zB HB"},J:{"1":"A","900":"D"},K:{"1":"L","8":"A B","900":"5 C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"900":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"classList (DOMTokenList)"};


/***/ }),
/* 550 */
/***/ (function(module, exports) {

module.exports={A:{A:{"16":"K D G E A B iB"},B:{"1":"AB","16":"2 C d J M H I"},C:{"1":"3 4 BB CB DB GB","16":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB ZB YB"},D:{"1":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"0 1 2 6 7 8 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"16":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 r s t u v w x y z","16":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q bB cB dB eB p EB gB"},G:{"16":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"1":"4","16":"FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"16":"F 3B 4B 5B 6B 7B"},Q:{"16":"8B"},R:{"16":"9B"},S:{"16":"AC"}},B:5,C:"Clear-Site-Data Header"};


/***/ }),
/* 551 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a b bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:6,C:"Client Hints: DPR, Width, Viewport-Width"};


/***/ }),
/* 552 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2436":"K D G E A B iB"},B:{"260":"H I","2436":"2 C d J M","10244":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB","772":"6 R S T U V W X Y Z a b c e f g h i j","4100":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"F N K D G E A B C","2564":"2 6 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l","10244":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 C aB","16":"RB JB","2308":"A B XB p","2820":"F N K D G E TB UB VB WB"},F:{"2":"E B bB cB dB eB p EB gB","16":"C","516":"5","2564":"J M H I O P Q R S T U V W X Y","10244":"0 1 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"tB uB","2":"JB hB HB","2820":"G jB kB LB mB nB oB pB qB rB sB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","2308":"4 0B 1B"},J:{"2":"D","2308":"A"},K:{"2":"A B C p EB","16":"5","3076":"L"},L:{"2052":"KB"},M:{"1028":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2052":"3B 4B 5B 6B 7B","2308":"F"},Q:{"10244":"8B"},R:{"2052":"9B"},S:{"4100":"AC"}},B:5,C:"Synchronous Clipboard API"};


/***/ }),
/* 553 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","16":"fB FB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d","132":"J M H I O P Q R S T U V W X Y"},E:{"1":"5 A B C XB p aB","16":"F N K RB JB","132":"D G E UB VB WB","260":"TB"},F:{"1":"0 1 5 6 C H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","16":"E B bB cB dB eB p EB","132":"J M"},G:{"1":"pB qB rB sB tB uB","16":"JB","132":"G hB HB jB kB LB mB nB oB"},H:{"1":"vB"},I:{"1":"4 0B 1B","16":"wB xB","132":"FB F yB zB HB"},J:{"132":"D A"},K:{"1":"5 C L","16":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Node.compareDocumentPosition()"};


/***/ }),
/* 554 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D iB","132":"G E"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E bB cB dB eB"},G:{"1":"JB hB HB jB","513":"G kB LB mB nB oB pB qB rB sB tB uB"},H:{"4097":"vB"},I:{"1025":"4 FB F wB xB yB zB HB 0B 1B"},J:{"258":"D A"},K:{"2":"A","258":"5 B C L p EB"},L:{"1025":"KB"},M:{"2049":"3"},N:{"258":"A B"},O:{"258":"2B"},P:{"1025":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1025":"9B"},S:{"1":"AC"}},B:1,C:"Basic console logging functions"};


/***/ }),
/* 555 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G E ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E bB cB dB eB","16":"B"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"L","16":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"console.time and console.timeEnd"};


/***/ }),
/* 556 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","132":"fB FB F N K D G E A B C ZB YB","260":"2 6 d J M H I O P Q R S T U V W X Y Z a b c e"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","260":"2 F N K D G E A B C d J M H I O P","772":"6 Q R S T U V W X Y Z a b c e f g h i j","1028":"k l m n o L q r"},E:{"1":"5 A B C XB p aB","260":"F N RB JB","772":"K D G E TB UB VB WB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"E bB","132":"B cB dB eB p EB","644":"5 C gB","772":"J M H I O P Q R S T U V W","1028":"6 X Y Z a b c e"},G:{"1":"pB qB rB sB tB uB","260":"JB hB HB","772":"G jB kB LB mB nB oB"},H:{"644":"vB"},I:{"1":"4","16":"wB xB","260":"yB","772":"FB F zB HB 0B 1B"},J:{"772":"D A"},K:{"1":"L","132":"A B p EB","644":"5 C"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","1028":"F"},Q:{"772":"8B"},R:{"1028":"9B"},S:{"1":"AC"}},B:6,C:"const"};


/***/ }),
/* 557 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","900":"A B"},B:{"1":"H I AB","388":"d J M","900":"2 C"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","260":"s t","388":"6 Y Z a b c e f g h i j k l m n o L q r","900":"2 F N K D G E A B C d J M H I O P Q R S T U V W X"},D:{"1":"0 1 3 4 7 8 9 j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d","388":"6 U V W X Y Z a b c e f g h i","900":"J M H I O P Q R S T"},E:{"1":"5 A B C XB p aB","16":"F N RB JB","388":"G E VB WB","900":"K D TB UB"},F:{"1":"0 1 6 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E B bB cB dB eB p EB","388":"J M H I O P Q R S T U V","900":"5 C gB"},G:{"1":"pB qB rB sB tB uB","16":"JB hB HB","388":"G LB mB nB oB","900":"jB kB"},H:{"2":"vB"},I:{"1":"4","16":"FB wB xB yB","388":"0B 1B","900":"F zB HB"},J:{"16":"D","388":"A"},K:{"1":"L","16":"A B p EB","900":"5 C"},L:{"1":"KB"},M:{"1":"3"},N:{"900":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"388":"8B"},R:{"1":"9B"},S:{"388":"AC"}},B:1,C:"Constraint Validation API"};


/***/ }),
/* 558 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB","4":"FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"D A"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"contenteditable attribute (basic support)"};


/***/ }),
/* 559 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","132":"A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","129":"2 F N K D G E A B C d J M H I O P Q R"},D:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C","257":"d J M H I O P Q R S T"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N RB JB","257":"K UB","260":"TB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB","257":"kB","260":"jB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D","257":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"257":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Content Security Policy 1.0"};


/***/ }),
/* 560 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d","32772":"J M H I"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z ZB YB","132":"6 a b c","260":"e","516":"f g h i j k l m n","8196":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 7 8 9 j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e","1028":"f g h","2052":"i"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R bB cB dB eB p EB gB","1028":"S T U","2052":"V"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"4100":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"8196":"AC"}},B:4,C:"Content Security Policy Level 2"};


/***/ }),
/* 561 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D iB","132":"A","260":"G E"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 6 7 8 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB","2":"fB FB","1025":"3 4 9 IB BB CB DB GB"},D:{"1":"0 1 2 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"F N K D G E A B C"},E:{"2":"RB JB","513":"5 K D G E A B C UB VB WB XB p aB","644":"F N TB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB"},G:{"513":"G kB LB mB nB oB pB qB rB sB tB uB","644":"JB hB HB jB"},H:{"2":"vB"},I:{"1":"4 0B 1B","132":"FB F wB xB yB zB HB"},J:{"1":"A","132":"D"},K:{"1":"5 C L","2":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","132":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Cross-Origin Resource Sharing"};


/***/ }),
/* 562 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k ZB YB","3076":"0 1 3 4 7 8 9 l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s","132":"t u","260":"v w","516":"0 1 x y z"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p","16":"aB"},F:{"1":"0 1 L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f bB cB dB eB p EB gB","132":"g h","260":"i j","516":"k l m n o"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"3076":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","16":"F 3B"},Q:{"1":"8B"},R:{"2":"9B"},S:{"3076":"AC"}},B:1,C:"createImageBitmap"};


/***/ }),
/* 563 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q","66":"r s t","129":"u v w x y z"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"5B 6B 7B","2":"F 3B 4B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"Credential Management API"};


/***/ }),
/* 564 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G E A","164":"B"},B:{"1":"AB","1025":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","8":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a ZB YB","322":"b c"},D:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","8":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f"},E:{"1":"5 B C p aB","8":"F N K D RB JB TB UB","545":"G E A VB WB XB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","8":"5 E B C J M H I O P Q R S bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","8":"JB hB HB jB kB LB","545":"G mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","8":"FB F wB xB yB zB HB 0B 1B"},J:{"8":"D A"},K:{"1":"L","8":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"8":"A","164":"B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Web Cryptography"};


/***/ }),
/* 565 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V ZB YB"},D:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f"},E:{"1":"5 A B C WB XB p aB","2":"F N K D G E RB JB TB UB VB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S bB cB dB eB p EB gB"},G:{"1":"oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB"},H:{"2":"vB"},I:{"1":"4 1B","2":"FB F wB xB yB zB HB 0B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS all property"};


/***/ }),
/* 566 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","194":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","194":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g bB cB dB eB p EB gB","194":"0 1 h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","194":"L"},L:{"194":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F","194":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"194":"9B"},S:{"2":"AC"}},B:7,C:"CSS @apply rule"};


/***/ }),
/* 567 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b ZB YB","132":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"132":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"132":"AC"}},B:4,C:"CSS Counter Styles"};


/***/ }),
/* 568 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G E A B C ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB UB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS background-position edge offsets"};


/***/ }),
/* 569 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y ZB YB"},D:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c","260":"L"},E:{"1":"5 B C XB p aB","2":"F N K D RB JB TB UB","132":"G E A VB WB"},F:{"1":"0 1 6 R S T U V W X Y Z a b e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q bB cB dB eB p EB gB","260":"c"},G:{"1":"qB rB sB tB uB","2":"JB hB HB jB kB LB","132":"G mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","260":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS background-blend-mode"};


/***/ }),
/* 570 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB","16":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB"},D:{"2":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","33":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q"},E:{"2":"RB JB","33":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"2":"0 1 5 E B C e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","33":"6 J M H I O P Q R S T U V W X Y Z a b c"},G:{"33":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4","33":"FB F wB xB yB zB HB 0B 1B"},J:{"33":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"3B 4B 5B 6B 7B","33":"F"},Q:{"33":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"CSS Canvas Drawings"};


/***/ }),
/* 571 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v ZB YB"},D:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"1":"5 C p aB","2":"F N K D G E A B RB JB TB UB VB WB XB"},F:{"1":"0 1 n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"5B 6B 7B","2":"F 3B 4B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"CSS caret-color"};


/***/ }),
/* 572 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:5,C:"Case-insensitive CSS attribute selectors"};


/***/ }),
/* 573 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"3 4 7 8 9 IB BB CB DB GB"},E:{"1":"5 aB","2":"F N K D G E A B C RB JB TB UB VB WB XB p"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o bB cB dB eB p EB gB","194":"0 1 L q r s t u v w x y z"},G:{"1":"uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS Conical Gradients"};


/***/ }),
/* 574 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j ZB YB","322":"k l m n o L q r s t u","336":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","194":"u"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g bB cB dB eB p EB gB","194":"h i"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"322":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"322":"AC"}},B:4,C:"CSS Containment"};


/***/ }),
/* 575 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","2":"K D iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS Counters"};


/***/ }),
/* 576 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","16":"fB FB ZB YB"},D:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d","132":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t"},E:{"1":"5 B C XB p aB","16":"F N RB JB","132":"K D G E A TB UB VB WB"},F:{"1":"0 1 h i j k l m n o L q r s t u v w x y z","16":"E B bB cB dB eB p EB","132":"6 J M H I O P Q R S T U V W X Y Z a b c e f g","260":"5 C gB"},G:{"1":"qB rB sB tB uB","16":"JB hB HB jB kB","132":"G LB mB nB oB pB"},H:{"260":"vB"},I:{"1":"4","16":"FB wB xB yB","132":"F zB HB 0B 1B"},J:{"16":"D","132":"A"},K:{"1":"L","16":"A B C p EB","260":"5"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"132":"2B"},P:{"1":"3B 4B 5B 6B 7B","132":"F"},Q:{"1":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:7,C:":default CSS pseudo-class"};


/***/ }),
/* 577 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","16":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB","16":"AB PB QB"},E:{"1":"B","2":"5 F N K D G E A C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Explicit descendant combinator >>"};


/***/ }),
/* 578 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M ZB YB","33":"6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"33":"AC"}},B:5,C:":dir() CSS pseudo-class"};


/***/ }),
/* 579 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","260":"AB"},C:{"1":"3 4 IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f ZB YB","260":"0 1 7 8 9 g h i j k l m n o L q r s t u v w x y z"},D:{"2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"1 7 8 9 IB BB CB","260":"3 4 DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G E A B RB JB TB UB VB WB XB","772":"5 C p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u bB cB dB eB p EB gB","260":"0 1 v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB","260":"sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","260":"4"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"260":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B","260":"7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"260":"AC"}},B:5,C:"CSS display: contents"};


/***/ }),
/* 580 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"3 4 DB GB","2":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB ZB YB"},D:{"1":"SB OB MB lB NB KB AB PB QB","2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},E:{"1":"5 C p aB","2":"F N K D G E A RB JB TB UB VB WB XB","132":"B"},F:{"1":"0 1 z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB","132":"rB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"CSS Environment Variables env()"};


/***/ }),
/* 581 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","33":"A B"},B:{"2":"AB","33":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"33":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS Exclusions Level 1"};


/***/ }),
/* 582 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","16":"iB","516":"G","1540":"K D"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","132":"FB","260":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"N K D G","132":"F"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"N RB","132":"F JB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","16":"E bB","260":"B cB dB eB p EB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB"},H:{"1":"vB"},I:{"1":"4 FB F zB HB 0B 1B","16":"wB xB","132":"yB"},J:{"1":"D A"},K:{"1":"5 C L","260":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"::first-letter CSS pseudo-element selector"};


/***/ }),
/* 583 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","132":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS first-line pseudo-element"};


/***/ }),
/* 584 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"D G E A B","2":"iB","8":"K"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB XB p aB","1025":"WB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB","132":"jB kB LB"},H:{"2":"vB"},I:{"1":"4 FB 0B 1B","260":"wB xB yB","513":"F zB HB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS position:fixed"};


/***/ }),
/* 585 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","328":"AB"},C:{"2":"fB FB ZB YB","161":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"0 1 2 3 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB","328":"4 GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"328":"KB"},M:{"161":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"161":"AC"}},B:7,C:":focus-visible CSS pseudo-class"};


/***/ }),
/* 586 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB"},D:{"1":"3 4 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"7"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o bB cB dB eB p EB gB","194":"L"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:":focus-within CSS pseudo-class"};


/***/ }),
/* 587 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"1 3 4 7 8 9 IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o ZB YB","322":"0 L q r s t u v w x y z"},D:{"1":"3 4 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r","194":"0 1 7 s t u v w x y z"},E:{"1":"5 C p aB","2":"F N K D G E A B RB JB TB UB VB WB XB"},F:{"1":"0 1 q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB","194":"f g h i j k l m n o L"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","194":"L"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"6B 7B","2":"F","194":"3B 4B 5B"},Q:{"194":"8B"},R:{"2":"9B"},S:{"322":"AC"}},B:5,C:"CSS font-rendering controls"};


/***/ }),
/* 588 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G ZB YB"},D:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB XB"},F:{"1":"0 1 e f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS font-stretch"};


/***/ }),
/* 589 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D iB","132":"G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS Generated content for pseudo-elements"};


/***/ }),
/* 590 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS hanging-punctuation"};


/***/ }),
/* 591 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:":has() CSS relational pseudo-class"};


/***/ }),
/* 592 */
/***/ (function(module, exports) {

module.exports={A:{A:{"16":"K D G E A B iB"},B:{"1":"AB","16":"2 C d J M H I"},C:{"16":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x"},E:{"16":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"16":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"16":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"16":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"16":"KB"},M:{"16":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"16":"F 3B 4B 5B 6B 7B"},Q:{"16":"8B"},R:{"16":"9B"},S:{"16":"AC"}},B:5,C:"CSS4 Hyphenation"};


/***/ }),
/* 593 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"132":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:4,C:"CSS3 image-orientation"};


/***/ }),
/* 594 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"C","260":"2 d J M H I"},C:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB","516":"6 Y Z a b c e f g h i j k l m n o L q r s"},D:{"1":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F","16":"2 N K D G E A B C d","260":"v","772":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u"},E:{"1":"5 B C XB p aB","2":"F RB JB","16":"N","772":"K D G E A TB UB VB WB"},F:{"1":"0 1 j k l m n o L q r s t u v w x y z","16":"E bB","260":"5 B C i cB dB eB p EB gB","772":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h"},G:{"1":"qB rB sB tB uB","2":"JB hB HB","772":"G jB kB LB mB nB oB pB"},H:{"132":"vB"},I:{"1":"4","2":"FB wB xB yB","260":"F zB HB 0B 1B"},J:{"2":"D","260":"A"},K:{"1":"L","260":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","260":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"516":"AC"}},B:5,C:":in-range and :out-of-range CSS pseudo-classes"};


/***/ }),
/* 595 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","132":"A B","388":"E"},B:{"1":"AB","132":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","16":"fB FB ZB YB","132":"2 6 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","388":"F N"},D:{"1":"0 1 3 4 7 8 9 i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d","132":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h"},E:{"1":"5 B C XB p aB","16":"F N K RB JB","132":"D G E A UB VB WB","388":"TB"},F:{"1":"0 1 6 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E B bB cB dB eB p EB","132":"J M H I O P Q R S T U","516":"5 C gB"},G:{"1":"qB rB sB tB uB","16":"JB hB HB jB kB","132":"G LB mB nB oB pB"},H:{"516":"vB"},I:{"1":"4","16":"FB wB xB yB 1B","132":"0B","388":"F zB HB"},J:{"16":"D","132":"A"},K:{"1":"L","16":"A B C p EB","516":"5"},L:{"1":"KB"},M:{"132":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"132":"AC"}},B:7,C:":indeterminate CSS pseudo-class"};


/***/ }),
/* 596 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G RB JB TB UB VB","4":"E","164":"5 A B C WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB","164":"nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS Initial Letter"};


/***/ }),
/* 597 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","33":"2 F N K D G E A B C d J M H I ZB YB","164":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","16":"RB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS initial value"};


/***/ }),
/* 598 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","16":"iB","132":"K D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y"},E:{"1":"5 D G E A B C UB VB WB XB p aB","16":"RB","132":"F N K JB TB"},F:{"1":"0 1 6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E bB","132":"5 B C J M cB dB eB p EB gB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"2":"vB"},I:{"1":"4 0B 1B","16":"wB xB","132":"FB F yB zB HB"},J:{"132":"D A"},K:{"1":"L","132":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"letter-spacing CSS property"};


/***/ }),
/* 599 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M","33":"AB","129":"H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB","33":"GB"},D:{"16":"2 F N K D G E A B C","33":"0 1 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F RB JB","33":"5 N K D G E A B C TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","33":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"JB hB HB","33":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"16":"wB xB","33":"4 FB F yB zB HB 0B 1B"},J:{"33":"D A"},K:{"2":"5 A B C p EB","33":"L"},L:{"33":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"33":"2B"},P:{"33":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"33":"9B"},S:{"2":"AC"}},B:7,C:"CSS line-clamp"};


/***/ }),
/* 600 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G E A B RB JB TB UB VB WB XB","129":"5 C p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS ::marker pseudo-element"};


/***/ }),
/* 601 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","1348":"AB"},C:{"16":"fB FB ZB YB","548":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"16":"2 F N K D G E A B C d","164":"0 1 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB","1348":"3 4 DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F RB JB","16":"N","164":"K D G TB UB VB","257":"5 E A B C WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","164":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u","1220":"0 1 v w x y z"},G:{"16":"JB hB HB jB kB","164":"G LB mB","257":"nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"16":"FB wB xB yB","164":"4 F zB HB 0B 1B"},J:{"16":"D","164":"A"},K:{"2":"5 A B C p EB","164":"L"},L:{"1220":"KB"},M:{"548":"3"},N:{"2":"A B"},O:{"164":"2B"},P:{"164":"F 3B 4B 5B 6B 7B"},Q:{"164":"8B"},R:{"164":"9B"},S:{"548":"AC"}},B:5,C:":matches() CSS pseudo-class"};


/***/ }),
/* 602 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G E A B RB JB TB UB VB WB XB","132":"5 C p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB","132":"sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS math functions min(), max() and clamp()"};


/***/ }),
/* 603 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"3 4 CB DB GB","2":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB ZB YB"},D:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"Media Queries: interaction media features"};


/***/ }),
/* 604 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"16":"2 C d J M H I AB"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB","16":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB","16":"AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"Media Queries: scripting media feature"};


/***/ }),
/* 605 */
/***/ (function(module, exports) {

module.exports={A:{A:{"8":"K D G iB","129":"E A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","129":"2 F N K D G E A B C d J M H I O P Q R S T U"},E:{"1":"5 D G E A B C UB VB WB XB p aB","129":"F N K TB","388":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","129":"JB hB HB jB kB"},H:{"1":"vB"},I:{"1":"4 0B 1B","129":"FB F wB xB yB zB HB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"129":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS3 Media Queries"};


/***/ }),
/* 606 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a ZB YB"},D:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X","194":"6 Y Z a b c e f g h i j"},E:{"2":"F N K D RB JB TB UB","260":"5 G E A B C VB WB XB p aB"},F:{"1":"0 1 6 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X bB cB dB eB p EB gB"},G:{"2":"JB hB HB jB kB LB","260":"G mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Blending of HTML/SVG elements"};


/***/ }),
/* 607 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l","194":"m n o"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y bB cB dB eB p EB gB","194":"Z a b"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"CSS Motion Path"};


/***/ }),
/* 608 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","16":"RB JB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS namespaces"};


/***/ }),
/* 609 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","16":"AB"},C:{"2":"0 1 2 3 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB","16":"4 GB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB","16":"AB PB QB"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"selector list argument of :not()"};


/***/ }),
/* 610 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"selector list argument of :nth-child and :nth-last-child CSS pseudo-classes"};


/***/ }),
/* 611 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","4":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS3 Opacity"};


/***/ }),
/* 612 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E bB","132":"5 B C cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"132":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"L","132":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:7,C:":optional CSS pseudo-class"};


/***/ }),
/* 613 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"3 4 GB","2":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB"},D:{"1":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"CSS overflow-anchor (Scroll Anchoring)"};


/***/ }),
/* 614 */
/***/ (function(module, exports) {

module.exports={A:{A:{"388":"K D G E A B iB"},B:{"260":"AB","388":"2 C d J M H I"},C:{"260":"3 4 9 IB BB CB DB GB","388":"0 1 2 6 7 8 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"260":"GB SB OB MB lB NB KB AB PB QB","388":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB"},E:{"388":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"260":"0 1 y z","388":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x bB cB dB eB p EB gB"},G:{"388":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"388":"vB"},I:{"388":"4 FB F wB xB yB zB HB 0B 1B"},J:{"388":"D A"},K:{"388":"5 A B C L p EB"},L:{"260":"KB"},M:{"260":"3"},N:{"388":"A B"},O:{"388":"2B"},P:{"388":"F 3B 4B 5B 6B 7B"},Q:{"388":"8B"},R:{"388":"9B"},S:{"388":"AC"}},B:5,C:"CSS overflow property"};


/***/ }),
/* 615 */
/***/ (function(module, exports) {

module.exports={A:{A:{"388":"A B","900":"K D G E iB"},B:{"388":"2 C d J M H I","900":"AB"},C:{"772":"3 4 DB GB","900":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB ZB YB"},D:{"900":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"772":"A","900":"5 F N K D G E B C RB JB TB UB VB WB XB p aB"},F:{"16":"E bB","129":"5 B C cB dB eB p EB gB","900":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"900":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"129":"vB"},I:{"900":"4 FB F wB xB yB zB HB 0B 1B"},J:{"900":"D A"},K:{"129":"5 A B C p EB","900":"L"},L:{"900":"KB"},M:{"900":"3"},N:{"388":"A B"},O:{"900":"2B"},P:{"900":"F 3B 4B 5B 6B 7B"},Q:{"900":"8B"},R:{"900":"9B"},S:{"900":"AC"}},B:2,C:"CSS page-break properties"};


/***/ }),
/* 616 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D iB","132":"G E A B"},B:{"1":"AB","132":"2 C d J M H I"},C:{"2":"2 fB FB F N K D G E A B C d J M H I ZB YB","132":"0 1 3 4 6 7 8 9 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","132":"5 E B C bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"16":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"16":"5 A B C p EB","258":"L"},L:{"1":"KB"},M:{"132":"3"},N:{"258":"A B"},O:{"258":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"132":"AC"}},B:5,C:"CSS Paged Media (@page)"};


/***/ }),
/* 617 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"3 4 DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB"},E:{"2":"F N K D G E A B C RB JB TB UB VB WB XB p","194":"5 aB"},F:{"1":"0 1 v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS Paint API"};


/***/ }),
/* 618 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","292":"A B"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","164":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t"},D:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"164":"AC"}},B:5,C:":placeholder-shown CSS pseudo-class"};


/***/ }),
/* 619 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","132":"B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b ZB YB"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB","16":"UB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Rebeccapurple color"};


/***/ }),
/* 620 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","33":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"33":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"RB JB","33":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","33":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"33":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"33":"4 FB F wB xB yB zB HB 0B 1B"},J:{"33":"D A"},K:{"2":"5 A B C p EB","33":"L"},L:{"33":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"33":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"33":"9B"},S:{"2":"AC"}},B:7,C:"CSS Reflections"};


/***/ }),
/* 621 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB","33":"2 F N K D G E A B C d J YB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E","33":"2 A B C d J M H I O P Q R S T U"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N RB JB","33":"K TB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB","33":"C gB","36":"p EB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB","33":"jB kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB wB xB yB","33":"F zB HB"},J:{"1":"A","2":"D"},K:{"1":"5 L","2":"A B","33":"C","36":"p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS Repeating Gradients"};


/***/ }),
/* 622 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","33":"F"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB","132":"5"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:4,C:"CSS resize property"};


/***/ }),
/* 623 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"4 GB","2":"0 1 2 3 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C WB XB p aB","2":"F N K D G E RB JB TB UB VB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS revert value"};


/***/ }),
/* 624 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r ZB YB"},D:{"1":"3 4 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u","194":"0 1 7 8 9 v w x y z"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h bB cB dB eB p EB gB","194":"i j k l m n o L q r s t u"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"6B 7B","2":"F","194":"3B 4B 5B"},Q:{"194":"8B"},R:{"194":"9B"},S:{"2":"AC"}},B:7,C:"#rrggbbaa hex color notation"};


/***/ }),
/* 625 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","129":"AB"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j","129":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","450":"0 1 7 8 k l m n o L q r s t u v w x y z"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 E B C J M H I O P Q R S T U V W bB cB dB eB p EB gB","129":"0 1 r s t u v w x y z","450":"6 X Y Z a b c e f g h i j k l m n o L q"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"6B 7B","2":"F 3B 4B 5B"},Q:{"450":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSSOM Scroll-behavior"};


/***/ }),
/* 626 */
/***/ (function(module, exports) {

module.exports={A:{A:{"132":"K D G E A B iB"},B:{"2":"2 C d J M H I","292":"AB"},C:{"2":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB ZB YB","3074":"BB","4100":"3 4 CB DB GB"},D:{"292":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"16":"F N RB JB","292":"5 K D G E A B C TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","292":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"16":"JB hB HB jB kB","292":"LB","804":"G mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"16":"wB xB","292":"4 FB F yB zB HB 0B 1B"},J:{"292":"D A"},K:{"2":"5 A B C p EB","292":"L"},L:{"292":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"292":"2B"},P:{"292":"F 3B 4B 5B 6B 7B"},Q:{"292":"8B"},R:{"292":"9B"},S:{"2":"AC"}},B:7,C:"CSS scrollbar styling"};


/***/ }),
/* 627 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"D G E A B","2":"iB","8":"K"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS 2.1 selectors"};


/***/ }),
/* 628 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"iB","8":"K","132":"D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","2":"RB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS3 selectors"};


/***/ }),
/* 629 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"CSS Subgrid"};


/***/ }),
/* 630 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","260":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O ZB YB","66":"P Q","260":"6 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x"},D:{"1":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W","260":"0 1 6 7 8 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB","132":"5"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"132":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"A B C p EB","132":"5"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS.supports() API"};


/***/ }),
/* 631 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","2":"K D iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","132":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS Table display"};


/***/ }),
/* 632 */
/***/ (function(module, exports) {

module.exports={A:{A:{"132":"K D G E A B iB"},B:{"132":"2 C d J M H I","388":"AB"},C:{"132":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"132":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g","388":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"132":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"132":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB","388":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"132":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"132":"vB"},I:{"132":"4 FB F wB xB yB zB HB 0B 1B"},J:{"132":"D A"},K:{"132":"5 A B C p EB","388":"L"},L:{"388":"KB"},M:{"132":"3"},N:{"132":"A B"},O:{"132":"2B"},P:{"132":"F","388":"3B 4B 5B 6B 7B"},Q:{"388":"8B"},R:{"388":"9B"},S:{"132":"AC"}},B:5,C:"CSS text-indent"};


/***/ }),
/* 633 */
/***/ (function(module, exports) {

module.exports={A:{A:{"16":"K D iB","132":"G E A B"},B:{"132":"2 C d J M H I","322":"AB"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w ZB YB","1025":"0 1 3 4 7 8 9 y z IB BB CB DB GB","1602":"x"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l","322":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 E B C J M H I O P Q R S T U V W X Y bB cB dB eB p EB gB","322":"0 1 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","322":"4"},J:{"2":"D A"},K:{"2":"5 A B C p EB","322":"L"},L:{"322":"KB"},M:{"1025":"3"},N:{"132":"A B"},O:{"2":"2B"},P:{"2":"F","322":"3B 4B 5B 6B 7B"},Q:{"322":"8B"},R:{"322":"9B"},S:{"2":"AC"}},B:5,C:"CSS text-justify"};


/***/ }),
/* 634 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","129":"A B"},B:{"1":"AB","129":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","260":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"4":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"A","4":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"129":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS3 Text-shadow"};


/***/ }),
/* 635 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","132":"B","164":"A"},B:{"1":"AB","132":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x","260":"y"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k bB cB dB eB p EB gB","260":"l"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"132":"B","164":"A"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","16":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"CSS touch-action level 2 values"};


/***/ }),
/* 636 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E iB","289":"A"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB","194":"6 Y Z a b c e f g h i j k l m n o L q r s t u","1025":"v w x y z"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB","516":"oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","289":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"194":"AC"}},B:2,C:"CSS touch-action property"};


/***/ }),
/* 637 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","2":"C"},C:{"1":"0 1 3 4 6 7 8 9 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V ZB YB"},D:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j"},E:{"1":"5 A B C WB XB p aB","2":"F N K D G E RB JB TB UB VB"},F:{"1":"0 1 6 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W bB cB dB eB p EB gB"},G:{"1":"oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS unset value"};


/***/ }),
/* 638 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","2":"2 C d","260":"J"},C:{"1":"0 1 3 4 6 7 8 9 a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q","194":"r"},E:{"1":"5 A B C WB XB p aB","2":"F N K D G E RB JB TB UB VB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB","194":"e"},G:{"1":"oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:4,C:"CSS Variables (Custom Properties)"};


/***/ }),
/* 639 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D iB","129":"G E"},B:{"1":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB UB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","129":"E B bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:2,C:"CSS widows & orphans"};


/***/ }),
/* 640 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D iB","129":"G E A B"},B:{"1":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"129":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:7,C:"CSS zoom"};


/***/ }),
/* 641 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"CSS3 attr() function for all properties"};


/***/ }),
/* 642 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","4":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","2":"E","4":"bB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS3 Colors"};


/***/ }),
/* 643 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","132":"K D G iB"},B:{"1":"d J M H I AB","260":"2 C"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","4":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"F"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","4":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","260":"5 E B C bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","16":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"CSS3 Cursors (original values)"};


/***/ }),
/* 644 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS currentColor value"};


/***/ }),
/* 645 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","8":"A B"},B:{"2":"AB","8":"2 C d J M H I"},C:{"2":"2 3 4 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R IB BB CB DB GB ZB YB","194":"S T U V W X Y","200":"0 1 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z"},D:{"1":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V NB KB AB PB QB","66":"W X Y Z a b"},E:{"2":"F N RB JB TB","8":"5 K D G E A B C UB VB WB XB p aB"},F:{"1":"0 1 6 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","66":"J M H I O"},G:{"2":"JB hB HB jB kB","8":"G LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"1B","2":"4 FB F wB xB yB zB HB 0B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"200":"AC"}},B:7,C:"Custom Elements (deprecated V0 spec)"};


/***/ }),
/* 646 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","8":"A B"},B:{"1":"AB","8":"2 C d J M H I"},C:{"1":"3 4 BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y ZB YB","8":"6 Z a b c e f g h i j k l m n o L q r s","456":"0 1 t u v w x y z","712":"7 8 9 IB"},D:{"1":"4 GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u","8":"v w","132":"0 1 3 7 8 9 x y z IB BB CB DB"},E:{"2":"F N K D RB JB TB UB VB","8":"G E A WB","132":"5 B C XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j bB cB dB eB p EB gB","132":"0 1 k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB","132":"qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","132":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F","132":"3B"},Q:{"8":"8B"},R:{"132":"9B"},S:{"8":"AC"}},B:1,C:"Custom Elements (V1)"};


/***/ }),
/* 647 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","132":"E A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N ZB YB","132":"K D G E A"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F","16":"2 N K D G d","388":"E A B C"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F RB JB","16":"N K","388":"TB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E bB cB dB eB","132":"B p EB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"hB","16":"JB HB","388":"jB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"wB xB yB","388":"FB F zB HB"},J:{"1":"A","388":"D"},K:{"1":"5 C L","2":"A","132":"B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"CustomEvent"};


/***/ }),
/* 648 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G E","260":"A B"},B:{"1":"AB","260":"2 C d J","1284":"M H I"},C:{"8":"fB FB ZB YB","516":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"SB OB MB lB NB KB AB PB QB","8":"2 F N K D G E A B C d J M H I O","132":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},E:{"1":"5 aB","8":"F N K D G E A B C RB JB TB UB VB WB XB p"},F:{"1":"5 E B C bB cB dB eB p EB gB","132":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"8":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB","2049":"uB"},H:{"2":"vB"},I:{"1":"1B","8":"FB F wB xB yB zB HB 0B","132":"4"},J:{"1":"A","8":"D"},K:{"1":"5 A B C p EB","8":"L"},L:{"1":"KB"},M:{"516":"3"},N:{"8":"A B"},O:{"8":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:1,C:"Datalist element"};


/***/ }),
/* 649 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","4":"K D G E A iB"},B:{"1":"2 C d J M","129":"H I AB"},C:{"1":"2 6 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","4":"fB FB F N ZB YB","129":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB"},D:{"1":"o L q r s t u v w x","4":"F N K","129":"0 1 2 3 4 6 7 8 9 D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"4":"F N RB JB","129":"5 K D G E A B C TB UB VB WB XB p aB"},F:{"1":"5 6 C b c e f g h i j k p EB gB","4":"E B bB cB dB eB","129":"0 1 J M H I O P Q R S T U V W X Y Z a l m n o L q r s t u v w x y z"},G:{"4":"JB hB HB","129":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"4":"vB"},I:{"4":"wB xB yB","129":"4 FB F zB HB 0B 1B"},J:{"129":"D A"},K:{"1":"5 C p EB","4":"A B","129":"L"},L:{"129":"KB"},M:{"129":"3"},N:{"1":"B","4":"A"},O:{"129":"2B"},P:{"129":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"129":"9B"},S:{"1":"AC"}},B:1,C:"dataset & data-* attributes"};


/***/ }),
/* 650 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D iB","132":"G","260":"E A B"},B:{"1":"AB","260":"2 C J M H I","772":"d"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"260":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Data URIs"};


/***/ }),
/* 651 */
/***/ (function(module, exports) {

module.exports={A:{A:{"16":"iB","132":"K D G E A B"},B:{"1":"I AB","132":"2 C d J M H"},C:{"1":"0 1 3 4 7 8 9 z IB BB CB DB GB","132":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB","260":"v w x y","772":"6 Y Z a b c e f g h i j k l m n o L q r s t u"},D:{"1":"OB MB lB NB KB AB PB QB","132":"2 F N K D G E A B C d J M H I O P Q R S","260":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB","772":"6 T U V W X Y Z a b c e f g"},E:{"1":"5 C aB","16":"F N RB JB","132":"K D G E A TB UB VB WB","260":"B XB p"},F:{"1":"0 1","16":"E B C bB cB dB eB p EB gB","132":"5","260":"6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","772":"J M H I O P Q R S T"},G:{"1":"qB rB sB tB uB","16":"JB hB HB jB","132":"G kB LB mB nB oB pB"},H:{"132":"vB"},I:{"1":"4","16":"FB wB xB yB","132":"F zB HB","772":"0B 1B"},J:{"132":"D A"},K:{"1":"L","16":"A B C p EB","132":"5"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"260":"2B"},P:{"1":"7B","260":"F 3B 4B 5B 6B"},Q:{"260":"8B"},R:{"132":"9B"},S:{"132":"AC"}},B:6,C:"Date.prototype.toLocaleDateString"};


/***/ }),
/* 652 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"E A B iB","8":"K D G"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"fB","8":"2 6 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L ZB YB","194":"q r"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","8":"F N K D G E A B","257":"6 O P Q R S T U V W X Y Z a b c e","769":"2 C d J M H I"},E:{"1":"5 C aB","8":"F N RB JB TB","257":"K D G E A UB VB WB","1025":"B XB p"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 C p EB gB","8":"E B bB cB dB eB"},G:{"1":"G kB LB mB nB oB sB tB uB","8":"JB hB HB jB","1025":"pB qB rB"},H:{"8":"vB"},I:{"1":"4 F zB HB 0B 1B","8":"FB wB xB yB"},J:{"1":"A","8":"D"},K:{"1":"L","8":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"769":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Details & Summary elements"};


/***/ }),
/* 653 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","132":"B"},B:{"1":"2 C d J M H I","4":"AB"},C:{"2":"fB FB ZB","4":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","8":"F N YB"},D:{"2":"F N K","4":"0 1 2 3 4 6 7 8 9 D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","4":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"JB hB","4":"G HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"wB xB yB","4":"4 FB F zB HB 0B 1B"},J:{"2":"D","4":"A"},K:{"1":"5 C","2":"A B p EB","4":"L"},L:{"4":"KB"},M:{"4":"3"},N:{"1":"B","2":"A"},O:{"4":"2B"},P:{"4":"F 3B 4B 5B 6B 7B"},Q:{"4":"8B"},R:{"4":"9B"},S:{"4":"AC"}},B:4,C:"DeviceOrientation & DeviceMotion events"};


/***/ }),
/* 654 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E B bB cB dB eB p EB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 C L","2":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Window.devicePixelRatio"};


/***/ }),
/* 655 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v ZB YB","194":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a","322":"6 b c e f"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I bB cB dB eB p EB gB","578":"O P Q R S"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:1,C:"Dialog element"};


/***/ }),
/* 656 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","16":"iB","129":"E A","130":"K D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","16":"RB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","16":"E"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","129":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"EventTarget.dispatchEvent"};


/***/ }),
/* 657 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","164":"E A","260":"B"},B:{"1":"H I AB","260":"2 C d J M"},C:{"1":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G ZB YB","516":"2 E A B C d J M H I O P Q R S T U V W X Y Z a"},D:{"1":"0 1 3 4 6 7 8 9 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R"},E:{"1":"K A B C TB WB XB p","2":"5 F N RB JB aB","1028":"D G E UB VB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB","2":"JB hB HB jB kB uB","1028":"G LB mB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"16":"D","1028":"A"},K:{"1":"5 L","16":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"164":"A","260":"B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Do Not Track API"};


/***/ }),
/* 658 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X"},E:{"1":"5 G E A B C WB XB p aB","2":"F N K D RB JB TB UB VB"},F:{"1":"0 1 6 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J bB cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"document.currentScript"};


/***/ }),
/* 659 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","16":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","16":"E"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:7,C:"document.evaluate & XPath"};


/***/ }),
/* 660 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","16":"F N RB JB TB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","16":"E bB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB","16":"HB jB kB"},H:{"2":"vB"},I:{"1":"4 zB HB 0B 1B","2":"FB F wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:7,C:"Document.execCommand()"};


/***/ }),
/* 661 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","16":"2 C"},C:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q ZB YB"},D:{"1":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"document.scrollingElement"};


/***/ }),
/* 662 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F RB JB","16":"N"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E bB cB dB eB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"document.head"};


/***/ }),
/* 663 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d J M"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r ZB YB"},D:{"1":"0 1 3 4 7 8 9 x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u","194":"v w"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i bB cB dB eB p EB gB","194":"j"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"194":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"DOM manipulation convenience methods"};


/***/ }),
/* 664 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"iB","8":"K D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Document Object Model Range"};


/***/ }),
/* 665 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"DOMContentLoaded"};


/***/ }),
/* 666 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d J M H I O P Q R S T U"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F RB JB","16":"N"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","16":"E B bB cB dB eB p EB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB jB kB"},H:{"16":"vB"},I:{"1":"4 F zB HB 0B 1B","16":"FB wB xB yB"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"DOMFocusIn & DOMFocusOut events"};


/***/ }),
/* 667 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","132":"A B"},B:{"132":"2 C d J M H I","1028":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b ZB YB","2564":"6 c e f g h i j k l m n o L q r","3076":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB"},D:{"16":"F N K D","132":"0 1 2 6 7 8 E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","388":"G","1028":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"16":"F RB JB","132":"N K D G E A TB UB VB WB XB","1028":"5 B C p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","132":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q","1028":"0 1 r s t u v w x y z"},G:{"16":"JB hB HB","132":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","132":"F zB HB 0B 1B","292":"FB wB xB yB"},J:{"16":"D","132":"A"},K:{"2":"5 A B C p EB","132":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"132":"2B"},P:{"132":"F 3B 4B 5B 6B 7B"},Q:{"132":"8B"},R:{"132":"9B"},S:{"2564":"AC"}},B:4,C:"DOMMatrix"};


/***/ }),
/* 668 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","2":"C"},C:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Download attribute"};


/***/ }),
/* 669 */
/***/ (function(module, exports) {

module.exports={A:{A:{"644":"K D G E iB","772":"A B"},B:{"1":"I AB","260":"2 C d J M H"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","8":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","8":"E B bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"5","2":"L","8":"A B C p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"1":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"Drag and Drop"};


/***/ }),
/* 670 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","2":"2 C d"},C:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB"},D:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Element.closest()"};


/***/ }),
/* 671 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","16":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","16":"fB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","16":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","16":"E bB cB dB eB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 C L","16":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"document.elementFromPoint()"};


/***/ }),
/* 672 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB"},D:{"1":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"2":"F N K D G E RB JB TB UB VB WB","132":"5 A B C XB p aB"},F:{"1":"0 1 r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB","132":"pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"6B 7B","2":"F 3B 4B 5B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:5,C:"Scroll methods on elements (scroll, scrollTo, scrollBy)"};


/***/ }),
/* 673 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","164":"B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g ZB YB"},D:{"1":"0 1 3 4 7 8 9 l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c","132":"e f g h i j k"},E:{"1":"5 C aB","2":"F N K RB JB TB UB","164":"D G E A B VB WB XB p"},F:{"1":"0 1 6 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q bB cB dB eB p EB gB","132":"R S T U V W X"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:3,C:"Encrypted Media Extensions"};


/***/ }),
/* 674 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","2":"iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"EOT - Embedded OpenType fonts"};


/***/ }),
/* 675 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D iB","260":"E","1026":"G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","4":"fB FB ZB YB","132":"2 F N K D G E A B C d J M H I O P"},D:{"1":"0 1 3 4 6 7 8 9 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"2 F N K D G E A B C d J M H I","132":"O P Q R"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","4":"F N RB JB TB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","4":"E B C bB cB dB eB p EB gB","132":"5"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","4":"JB hB HB jB"},H:{"132":"vB"},I:{"1":"4 0B 1B","4":"FB wB xB yB","132":"zB HB","900":"F"},J:{"1":"A","4":"D"},K:{"1":"L","4":"A B C p EB","132":"5"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"ECMAScript 5"};


/***/ }),
/* 676 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k","132":"l m n o L q r"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X bB cB dB eB p EB gB","132":"6 Y Z a b c e"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"ES6 classes"};


/***/ }),
/* 677 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","2":"C"},C:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U ZB YB"},D:{"1":"0 1 3 4 7 8 9 i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"ES6 Generators"};


/***/ }),
/* 678 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"4 GB","2":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB","194":"3"},D:{"1":"3 4 BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB"},E:{"1":"5 C p aB","2":"F N K D G E A B RB JB TB UB VB WB XB"},F:{"1":"0 1 t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"6B 7B","2":"F 3B 4B 5B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"JavaScript modules: dynamic import()"};


/***/ }),
/* 679 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d","4097":"M H I","4290":"J"},C:{"1":"3 4 8 9 IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w ZB YB","322":"0 1 7 x y z"},D:{"1":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"8"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB","3076":"XB"},F:{"1":"0 1 r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L bB cB dB eB p EB gB","194":"q"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB","3076":"qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"6B 7B","2":"F 3B 4B 5B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"JavaScript modules via script tag"};


/***/ }),
/* 680 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J ZB YB","132":"M H I O P Q R S T","260":"U V W X Y Z","516":"a"},D:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I","1028":"O P Q R S T U V W X Y Z a b c"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","1028":"J M H I O P"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB","1028":"zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"ES6 Number"};


/***/ }),
/* 681 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i ZB YB"},D:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"String.prototype.includes"};


/***/ }),
/* 682 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","388":"B"},B:{"257":"AB","260":"2 C d","769":"J M H I"},C:{"2":"fB FB F N ZB YB","4":"2 6 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w","257":"0 1 3 4 7 8 9 x y z IB BB CB DB GB"},D:{"2":"2 F N K D G E A B C d J M H I O P","4":"6 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","257":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C XB p aB","2":"F N K D RB JB TB UB","4":"G E VB WB"},F:{"2":"5 E B C bB cB dB eB p EB gB","4":"6 J M H I O P Q R S T U V W X Y Z a b c e f g","257":"0 1 h i j k l m n o L q r s t u v w x y z"},G:{"1":"pB qB rB sB tB uB","2":"JB hB HB jB kB","4":"G LB mB nB oB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","4":"0B 1B","257":"4"},J:{"2":"D","4":"A"},K:{"2":"5 A B C p EB","257":"L"},L:{"257":"KB"},M:{"257":"3"},N:{"2":"A","388":"B"},O:{"257":"2B"},P:{"4":"F","257":"3B 4B 5B 6B 7B"},Q:{"257":"8B"},R:{"4":"9B"},S:{"4":"AC"}},B:6,C:"ECMAScript 2015 (ES6)"};


/***/ }),
/* 683 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","4":"E bB cB dB eB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"D A"},K:{"1":"5 C L p EB","4":"A B"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Server-sent events"};


/***/ }),
/* 684 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","132":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 6 7 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","132":"3 4 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G E A B RB JB TB UB VB WB XB","772":"5 C p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L bB cB dB eB p EB gB","132":"0 1 q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB","16":"sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","132":"4"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"132":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B","132":"6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Feature Policy"};


/***/ }),
/* 685 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 7 8 9 j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB","1025":"i","1218":"6 e f g h"},D:{"1":"0 1 3 4 7 8 9 l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i","260":"j","772":"k"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 6 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V bB cB dB eB p EB gB","260":"W","772":"X"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Fetch"};


/***/ }),
/* 686 */
/***/ (function(module, exports) {

module.exports={A:{A:{"16":"iB","132":"G E","388":"K D A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J","16":"M H I O"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","16":"E bB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB"},H:{"388":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A","260":"B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"disabled attribute of the fieldset element"};


/***/ }),
/* 687 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","260":"A B"},B:{"1":"AB","260":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB","260":"2 F N K D G E A B C d J M H I O P Q R S T U V W YB"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N","260":"2 6 d J M H I O P Q R S T U V W X Y Z a b c e f g","388":"K D G E A B C"},E:{"1":"5 A B C XB p aB","2":"F N RB JB","260":"K D G E UB VB WB","388":"TB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB","260":"5 C J M H I O P Q R S T p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"JB hB HB jB","260":"G kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4 1B","2":"wB xB yB","260":"0B","388":"FB F zB HB"},J:{"260":"A","388":"D"},K:{"1":"L","2":"A B","260":"5 C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A","260":"B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"File API"};


/***/ }),
/* 688 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","132":"A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","2":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E B bB cB dB eB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"5 C L p EB","2":"A B"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"FileReader API"};


/***/ }),
/* 689 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E bB cB","16":"B dB eB p EB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"5 C L EB","2":"A","16":"B p"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"FileReaderSync"};


/***/ }),
/* 690 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","33":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"F N K D","33":"0 1 2 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","36":"G E A B C"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","33":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","33":"A"},K:{"2":"5 A B C p EB","33":"L"},L:{"33":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F","33":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Filesystem & FileWriter API"};


/***/ }),
/* 691 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","2":"2 C d J"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t ZB YB"},D:{"1":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m","16":"n o L","388":"q r s t u v w x y"},E:{"2":"F N K D G E A RB JB TB UB VB WB XB","516":"5 B C p aB"},F:{"1":"0 1 l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"wB xB yB","16":"FB F zB HB 0B 1B"},J:{"1":"A","2":"D"},K:{"1":"5","16":"A B C p EB","129":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","129":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:6,C:"FLAC audio format"};


/***/ }),
/* 692 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v ZB YB"},D:{"1":"1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"5B 6B 7B","2":"F 3B 4B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"display: flow-root"};


/***/ }),
/* 693 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","2":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"F N RB JB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E bB cB dB eB","16":"B p EB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 F zB HB 0B 1B","2":"wB xB yB","16":"FB"},J:{"1":"D A"},K:{"1":"5 C L","2":"A","16":"B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"focusin & focusout events"};


/***/ }),
/* 694 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"3 4 CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"preventScroll support in focus"};


/***/ }),
/* 695 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l ZB YB","132":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v","260":"w x y"},E:{"1":"5 B C p aB","2":"F N K D G RB JB TB UB VB","16":"E","132":"A WB XB"},F:{"1":"0 1 m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB","132":"nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"1":"8B"},R:{"2":"9B"},S:{"132":"AC"}},B:5,C:"system-ui value for font-family"};


/***/ }),
/* 696 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB","194":"e f g h i j"},D:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"CSS Font Loading"};


/***/ }),
/* 697 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","194":"AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l","194":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 E B C J M H I O P Q R S T U V W X Y bB cB dB eB p EB gB","194":"0 1 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"258":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"194":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"CSS font-size-adjust"};


/***/ }),
/* 698 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","676":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T ZB YB","804":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"F","676":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"RB JB","676":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","676":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"804":"AC"}},B:7,C:"CSS font-smooth"};


/***/ }),
/* 699 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","4":"E A B"},B:{"1":"H I AB","4":"2 C d J M"},C:{"1":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB","194":"f g h i j k l m"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e"},E:{"1":"5 A B C XB p aB","4":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","4":"J M H I O P Q R"},G:{"1":"pB qB rB sB tB uB","4":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","4":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","4":"A"},K:{"2":"5 A B C p EB","4":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"4":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","4":"F"},Q:{"1":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:4,C:"Font unicode-range subsetting"};


/***/ }),
/* 700 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","130":"A B"},B:{"130":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","130":"2 F N K D G E A B C d J M H I O P Q R S","322":"T U V W X Y Z a b c"},D:{"2":"2 F N K D G E A B C d J","130":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C WB XB p aB","2":"D G E RB JB UB VB","130":"F N K TB"},F:{"2":"5 E B C bB cB dB eB p EB gB","130":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"oB pB qB rB sB tB uB","2":"G JB LB mB nB","130":"hB HB jB kB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","130":"4 0B 1B"},J:{"2":"D","130":"A"},K:{"2":"5 A B C p EB","130":"L"},L:{"130":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"130":"2B"},P:{"130":"F 3B 4B 5B 6B 7B"},Q:{"130":"8B"},R:{"130":"9B"},S:{"1":"AC"}},B:4,C:"CSS font-variant-alternates"};


/***/ }),
/* 701 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S ZB YB","132":"T U V W X Y Z a b c"},D:{"1":"3 4 BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s bB cB dB eB p EB gB"},G:{"2":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"132":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:4,C:"CSS font-variant-east-asian "};


/***/ }),
/* 702 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB"},D:{"1":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u"},E:{"1":"5 A B C WB XB p aB","2":"F N K D G E RB JB TB UB VB"},F:{"1":"0 1 i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h bB cB dB eB p EB gB"},G:{"1":"oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","16":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"1":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:2,C:"CSS font-variant-numeric"};


/***/ }),
/* 703 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","132":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","2":"RB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","2":"E bB"},G:{"1":"G HB jB kB LB mB nB oB pB qB rB sB tB uB","260":"JB hB"},H:{"2":"vB"},I:{"1":"4 F zB HB 0B 1B","2":"wB","4":"FB xB yB"},J:{"1":"A","4":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"@font-face Web fonts"};


/***/ }),
/* 704 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","2":"2 C d J"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F RB JB","16":"N"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"1":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Form attribute"};


/***/ }),
/* 705 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F N RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","2":"E bB","16":"cB dB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"1":"vB"},I:{"1":"4 F zB HB 0B 1B","2":"wB xB yB","16":"FB"},J:{"1":"A","2":"D"},K:{"1":"5 B C L p EB","16":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Attributes for form submission"};


/***/ }),
/* 706 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E"},E:{"1":"5 B C XB p aB","2":"F RB JB","132":"N K D G E A TB UB VB WB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","2":"E bB"},G:{"1":"qB rB sB tB uB","2":"JB","132":"G hB HB jB kB LB mB nB oB pB"},H:{"516":"vB"},I:{"1":"4 1B","2":"FB wB xB yB","132":"F zB HB 0B"},J:{"1":"A","132":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"260":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"132":"AC"}},B:1,C:"Form validation"};


/***/ }),
/* 707 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","4":"A B","8":"K D G E"},B:{"1":"M H I AB","4":"2 C d J"},C:{"4":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","8":"fB FB ZB YB"},D:{"1":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"0 1 2 6 7 8 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"4":"5 F N K D G E A B C TB UB VB WB XB p aB","8":"RB JB"},F:{"1":"0 1 5 E B C v w x y z bB cB dB eB p EB gB","4":"6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u"},G:{"2":"JB","4":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB","4":"0B 1B"},J:{"2":"D","4":"A"},K:{"1":"5 A B C p EB","4":"L"},L:{"1":"KB"},M:{"4":"3"},N:{"4":"A B"},O:{"1":"2B"},P:{"1":"6B 7B","4":"F 3B 4B 5B"},Q:{"4":"8B"},R:{"4":"9B"},S:{"4":"AC"}},B:1,C:"HTML5 form features"};


/***/ }),
/* 708 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P","33":"Q R S T"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"Gamepad API"};


/***/ }),
/* 709 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"iB","8":"K D G"},B:{"1":"2 C d J M H I","129":"AB"},C:{"1":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x ZB YB","8":"fB FB","129":"0 1 3 4 7 8 9 y z IB BB CB DB GB"},D:{"1":"2 6 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s","4":"F","129":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E B C TB UB VB WB XB p aB","8":"F RB JB","129":"A"},F:{"1":"5 6 B C M H I O P Q R S T U V W X Y Z a b c e f g h eB p EB gB","2":"E J bB","8":"cB dB","129":"0 1 i j k l m n o L q r s t u v w x y z"},G:{"1":"G JB hB HB jB kB LB mB nB oB","129":"pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"FB F wB xB yB zB HB 0B 1B","129":"4"},J:{"1":"D A"},K:{"1":"5 B C L p EB","8":"A"},L:{"129":"KB"},M:{"129":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F","129":"3B 4B 5B 6B 7B"},Q:{"129":"8B"},R:{"129":"9B"},S:{"1":"AC"}},B:2,C:"Geolocation"};


/***/ }),
/* 710 */
/***/ (function(module, exports) {

module.exports={A:{A:{"644":"K D iB","2049":"E A B","2692":"G"},B:{"1":"AB","2049":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB","260":"F N K D G E A B","1156":"FB","1284":"ZB","1796":"YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","16":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","16":"E bB","132":"cB dB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","132":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"2049":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Element.getBoundingClientRect()"};


/***/ }),
/* 711 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB","132":"FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","260":"F N K D G E A"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","260":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","260":"E bB cB dB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","260":"JB hB HB"},H:{"260":"vB"},I:{"1":"4 F zB HB 0B 1B","260":"FB wB xB yB"},J:{"1":"A","260":"D"},K:{"1":"5 B C L p EB","260":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"getComputedStyle"};


/***/ }),
/* 712 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"iB","8":"K D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","8":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"getElementsByClassName"};


/***/ }),
/* 713 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","33":"B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E A"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N K RB JB TB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A","33":"B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"crypto.getRandomValues()"};


/***/ }),
/* 714 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"4 GB SB OB MB lB NB KB AB PB QB","2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"1 3 7 8 9 IB BB CB DB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"Gyroscope"};


/***/ }),
/* 715 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","2":"2 C d"},C:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q ZB YB"},D:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f"},E:{"2":"F N K D RB JB TB UB VB","129":"5 B C XB p aB","194":"G E A WB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S bB cB dB eB p EB gB"},G:{"2":"JB hB HB jB kB LB","129":"qB rB sB tB uB","194":"G mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"navigator.hardwareConcurrency"};


/***/ }),
/* 716 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","8":"K D iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","8":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","8":"F"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","8":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","8":"E bB cB dB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB"},H:{"2":"vB"},I:{"1":"4 FB F xB yB zB HB 0B 1B","2":"wB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","8":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Hashchange event"};


/***/ }),
/* 717 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G E A RB JB TB UB VB WB XB","130":"5 B C p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB","130":"rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"HEIF/ISO Base Media File Format"};


/***/ }),
/* 718 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","132":"B"},B:{"2":"AB","132":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G E A RB JB TB UB VB WB XB","516":"5 B C p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","258":"4"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"258":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F","258":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"HEVC/H.265 video format"};


/***/ }),
/* 719 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F N RB JB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E B bB cB dB eB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"1":"vB"},I:{"1":"4 F zB HB 0B 1B","2":"FB wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"5 C L p EB","2":"A B"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"hidden attribute"};


/***/ }),
/* 720 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O","33":"P Q R S"},E:{"1":"5 G E A B C WB XB p aB","2":"F N K D RB JB TB UB VB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"High Resolution Time API"};


/***/ }),
/* 721 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F RB JB","4":"N TB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z EB gB","2":"E B bB cB dB eB p"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB","4":"HB"},H:{"2":"vB"},I:{"1":"4 xB yB HB 0B 1B","2":"FB F wB zB"},J:{"1":"D A"},K:{"1":"5 C L p EB","2":"A B"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Session history management"};


/***/ }),
/* 722 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"JB hB HB jB","129":"G kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB","257":"xB yB"},J:{"1":"A","16":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"516":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"16":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:4,C:"HTML Media Capture"};


/***/ }),
/* 723 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G","260":"E A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB","132":"FB ZB YB","260":"2 F N K D G E A B C d J M H I O P"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"F N","260":"2 K D G E A B C d J M H I O P Q R S T U"},E:{"1":"5 D G E A B C UB VB WB XB p aB","132":"F RB JB","260":"N K TB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","132":"E B bB cB dB eB","260":"5 C p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","132":"JB","260":"hB HB jB kB"},H:{"132":"vB"},I:{"1":"4 0B 1B","132":"wB","260":"FB F xB yB zB HB"},J:{"260":"D A"},K:{"1":"L","132":"A","260":"5 B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"260":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"HTML5 semantic elements"};


/***/ }),
/* 724 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I","2":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:7,C:"HTTP Live Streaming (HLS)"};


/***/ }),
/* 725 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","132":"B"},B:{"1":"2 C d J M H I","513":"AB"},C:{"1":"f g h i j k l m n o L q r s t u v","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB","513":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB"},D:{"1":"k l m n o L q r s t","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j","513":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 B C p aB","2":"F N K D G RB JB TB UB VB","260":"E A WB XB"},F:{"1":"6 X Y Z a b c e f g","2":"5 E B C J M H I O P Q R S T U V W bB cB dB eB p EB gB","513":"0 1 h i j k l m n o L q r s t u v w x y z"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","513":"4"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"513":"KB"},M:{"513":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F","513":"3B 4B 5B 6B 7B"},Q:{"513":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"HTTP/2 protocol"};


/***/ }),
/* 726 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M ZB YB","4":"H I O P Q R S T U V W"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB"},H:{"2":"vB"},I:{"1":"4 FB F xB yB zB HB 0B 1B","2":"wB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"sandbox attribute for iframes"};


/***/ }),
/* 727 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","66":"P Q R S T U V"},E:{"2":"5 F N K G E A B C RB JB TB UB WB XB p aB","130":"D VB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB mB nB oB pB qB rB sB tB uB","130":"LB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"seamless attribute for iframes"};


/***/ }),
/* 728 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G E A B"},B:{"1":"AB","8":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB","8":"2 FB F N K D G E A B C d J M H I O P Q R S T ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C","8":"d J M H I O"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"RB JB","8":"F N TB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB","8":"5 C p EB gB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB","8":"hB HB jB"},H:{"2":"vB"},I:{"1":"4 0B 1B","8":"FB F wB xB yB zB HB"},J:{"1":"A","8":"D"},K:{"1":"L","2":"A B","8":"5 C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"8":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"srcdoc attribute for iframes"};


/***/ }),
/* 729 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","322":"AB"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB","194":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v","322":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i bB cB dB eB p EB gB","322":"0 1 j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"322":"8B"},R:{"1":"9B"},S:{"194":"AC"}},B:5,C:"ImageCapture API"};


/***/ }),
/* 730 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","161":"B"},B:{"2":"AB","161":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A","161":"B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"Input Method Editor API"};


/***/ }),
/* 731 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"naturalWidth & naturalHeight image properties"};


/***/ }),
/* 732 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","8":"A B"},B:{"2":"AB","8":"2 C d J M H I"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y ZB YB","8":"0 1 3 4 7 8 9 Z a z IB BB CB DB GB","200":"6 b c e f g h i j k l m n o L q r s t u v w x y"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y NB KB AB PB QB","322":"6 Z a b c","584":"e"},E:{"2":"F N RB JB TB","8":"5 K D G E A B C UB VB WB XB p aB"},F:{"1":"0 1 6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M bB cB dB eB p EB gB","1090":"H I O P Q","2120":"R"},G:{"2":"JB hB HB jB kB","8":"G LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"2":"KB"},M:{"8":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"HTML Imports"};


/***/ }),
/* 733 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","16":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","2":"fB FB","16":"ZB"},D:{"1":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E B bB cB dB eB p EB"},G:{"1":"uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"indeterminate checkbox"};


/***/ }),
/* 734 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","132":"A B"},B:{"1":"AB","132":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","33":"2 A B C d J","36":"F N K D G E"},D:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"A","8":"F N K D G E","33":"S","36":"2 B C d J M H I O P Q R"},E:{"1":"5 A B C XB p aB","8":"F N K D RB JB TB UB","260":"G E VB WB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E bB cB","8":"5 B C dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","8":"JB hB HB jB kB LB","260":"G mB nB oB"},H:{"2":"vB"},I:{"1":"4 0B 1B","8":"FB F wB xB yB zB HB"},J:{"1":"A","8":"D"},K:{"1":"L","2":"A","8":"5 B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"IndexedDB"};


/***/ }),
/* 735 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m ZB YB","132":"n o L","260":"q r s t"},D:{"1":"1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q","132":"r s t u","260":"0 v w x y z"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB","132":"e f g h","260":"i j k l m n"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB","16":"pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"5B 6B 7B","2":"F","260":"3B 4B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"260":"AC"}},B:4,C:"IndexedDB 2.0"};


/***/ }),
/* 736 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","4":"iB","132":"K D"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","36":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS inline-block"};


/***/ }),
/* 737 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","16":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","16":"RB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","16":"E"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Node.innerText"};


/***/ }),
/* 738 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A iB","132":"B"},B:{"132":"2 C d J M H I","260":"AB"},C:{"1":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y ZB YB","516":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"H I O P Q R S T U V","2":"2 F N K D G E A B C d J M","132":"6 W X Y Z a b c e f g h i j","260":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"K TB UB","2":"F N RB JB","2052":"5 D G E A B C VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"JB hB HB","1025":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1025":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2052":"A B"},O:{"1025":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"260":"8B"},R:{"1":"9B"},S:{"516":"AC"}},B:1,C:"autocomplete attribute: on & off values"};


/***/ }),
/* 739 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O"},E:{"1":"5 aB","2":"F N K D G E A B C RB JB TB UB VB WB XB p"},F:{"1":"0 1 5 6 B C H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E J M bB cB dB eB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB","129":"uB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:1,C:"Color input type"};


/***/ }),
/* 740 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","132":"C"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v ZB YB","1090":"w x y z","2052":"0 1 3 4 7 8 9 IB BB CB DB GB"},D:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O","2052":"P Q R S T"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"JB hB HB","260":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB wB xB yB","514":"F zB HB"},J:{"1":"A","2":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2052":"AC"}},B:1,C:"Date and time input types"};


/***/ }),
/* 741 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","132":"wB xB yB"},J:{"1":"A","132":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Email, telephone & URL input types"};


/***/ }),
/* 742 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","2561":"A B","2692":"E"},B:{"1":"AB","2561":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","16":"fB","1537":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r YB","1796":"FB ZB"},D:{"1":"3 4 GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d","1025":"0 1 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB","1537":"6 J M H I O P Q R S T U V W X Y Z a b c"},E:{"16":"F N K RB JB","1025":"5 D G E A B C UB VB WB XB p aB","1537":"TB"},F:{"1":"0 1 5 v w x y z","16":"E B C bB cB dB eB p EB","260":"gB","1025":"6 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u","1537":"J M H I O P Q"},G:{"16":"JB hB HB","1025":"G mB nB oB pB qB rB sB tB uB","1537":"jB kB LB"},H:{"2":"vB"},I:{"16":"wB xB","1025":"4 1B","1537":"FB F yB zB HB 0B"},J:{"1025":"A","1537":"D"},K:{"1":"5 A B C p EB","1025":"L"},L:{"1":"KB"},M:{"1537":"3"},N:{"2561":"A B"},O:{"1537":"2B"},P:{"1025":"F 3B 4B 5B 6B 7B"},Q:{"1025":"8B"},R:{"1025":"9B"},S:{"1537":"AC"}},B:1,C:"input event"};


/***/ }),
/* 743 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","132":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F","16":"N K D G Q R S T U","132":"2 E A B C d J M H I O P"},E:{"1":"5 C p aB","2":"F N RB JB TB","132":"K D G E A B UB VB WB XB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"2":"kB LB","132":"G mB nB oB pB qB rB sB tB uB","514":"JB hB HB jB"},H:{"2":"vB"},I:{"2":"wB xB yB","260":"FB F zB HB","514":"4 0B 1B"},J:{"132":"A","260":"D"},K:{"2":"5 A B C p EB","260":"L"},L:{"260":"KB"},M:{"2":"3"},N:{"514":"A","1028":"B"},O:{"2":"2B"},P:{"260":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"260":"9B"},S:{"1":"AC"}},B:1,C:"accept attribute for file input"};


/***/ }),
/* 744 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y"},E:{"1":"5 C p aB","2":"F N K D G E A B RB JB TB UB VB WB XB"},F:{"1":"0 1 6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Directory selection from file input"};


/***/ }),
/* 745 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","2":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","2":"E bB cB dB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB"},H:{"130":"vB"},I:{"130":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"130":"5 A B C L p EB"},L:{"132":"KB"},M:{"130":"3"},N:{"2":"A B"},O:{"130":"2B"},P:{"130":"F","132":"3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"132":"9B"},S:{"2":"AC"}},B:1,C:"Multiple file selection"};


/***/ }),
/* 746 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"2 fB FB F N K D G E A B C d J M ZB YB","4":"H I O P","194":"0 1 3 4 6 7 8 9 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"3 4 GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y","66":"0 1 7 8 9 z IB BB CB DB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l bB cB dB eB p EB gB","66":"m n o L q r s t u v"},G:{"1":"uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"194":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"7B","2":"F 3B 4B 5B 6B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"194":"AC"}},B:1,C:"inputmode attribute"};


/***/ }),
/* 747 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d J M"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t ZB YB"},D:{"1":"0 1 3 4 7 8 9 j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 6 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:1,C:"Minimum length attribute for input fields"};


/***/ }),
/* 748 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","129":"A B"},B:{"1":"AB","129":"2 C","1025":"d J M H I"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB","513":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"388":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB wB xB yB","388":"4 F zB HB 0B 1B"},J:{"2":"D","388":"A"},K:{"1":"5 A B C p EB","388":"L"},L:{"388":"KB"},M:{"641":"3"},N:{"388":"A B"},O:{"388":"2B"},P:{"388":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"388":"9B"},S:{"513":"AC"}},B:1,C:"Number input type"};


/***/ }),
/* 749 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E"},E:{"1":"5 B C XB p aB","2":"F RB JB","16":"N","388":"K D G E A TB UB VB WB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"qB rB sB tB uB","16":"JB hB HB","388":"G jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4 1B","2":"FB F wB xB yB zB HB 0B"},J:{"1":"A","2":"D"},K:{"1":"5 A B C p EB","132":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Pattern attribute for input fields"};


/***/ }),
/* 750 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","132":"F RB JB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z EB gB","2":"E bB cB dB eB","132":"B p"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB wB xB yB HB 0B 1B","4":"F zB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"input placeholder attribute"};


/***/ }),
/* 751 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 HB 0B 1B","4":"FB F wB xB yB zB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Range input type"};


/***/ }),
/* 752 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","129":"A B"},B:{"1":"AB","129":"2 C d J M H I"},C:{"2":"fB FB ZB YB","129":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d Q R S T U","129":"J M H I O P"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"F N RB JB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E bB cB dB eB","16":"B p EB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB"},H:{"129":"vB"},I:{"1":"4 0B 1B","16":"wB xB","129":"FB F yB zB HB"},J:{"1":"D","129":"A"},K:{"1":"C","2":"A","16":"B p EB","129":"5 L"},L:{"1":"KB"},M:{"129":"3"},N:{"129":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"129":"AC"}},B:1,C:"Search input type"};


/***/ }),
/* 753 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","16":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","16":"E bB cB dB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Selection controls for input & textarea"};


/***/ }),
/* 754 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","16":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","16":"E"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Element.insertAdjacentElement() & Element.insertAdjacentText()"};


/***/ }),
/* 755 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","16":"iB","132":"K D G E"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","16":"E bB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Element.insertAdjacentHTML()"};


/***/ }),
/* 756 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H","130":"I"},C:{"1":"1 3 4 7 8 9 IB BB CB DB GB","2":"0 2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"3 4 BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p","16":"aB"},F:{"1":"0 1 t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"Intl.PluralRules API"};


/***/ }),
/* 757 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:6,C:"Internationalization API"};


/***/ }),
/* 758 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I","2":"2 C d","516":"J","1025":"AB"},C:{"1":"0 1 3 4 7 8 9 y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB","194":"v w x"},D:{"1":"1 7 8 9 IB BB CB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","516":"0 u v w x y z","1025":"3 4 DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 aB","2":"F N K D G E A B C RB JB TB UB VB WB XB p"},F:{"1":"0 1 o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g bB cB dB eB p EB gB","516":"h i j k l m n"},G:{"1":"uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"516":"2B"},P:{"1":"5B 6B 7B","2":"F","516":"3B 4B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"IntersectionObserver"};


/***/ }),
/* 759 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F RB JB","129":"N TB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"JPEG 2000 image format"};


/***/ }),
/* 760 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I","2":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"1":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"JPEG XR image format"};


/***/ }),
/* 761 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"3 4 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"6B 7B","2":"F 3B 4B 5B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Lookbehind in JS regular expressions"};


/***/ }),
/* 762 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D iB","129":"G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"JSON parsing"};


/***/ }),
/* 763 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J","132":"M H I"},C:{"1":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB"},D:{"1":"3 4 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","132":"0 1 7"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB","132":"XB"},F:{"1":"0 1 q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m bB cB dB eB p EB gB","132":"n o L"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB","132":"qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"132":"2B"},P:{"1":"6B 7B","2":"F 3B 4B","132":"5B"},Q:{"132":"8B"},R:{"2":"9B"},S:{"132":"AC"}},B:5,C:"CSS justify-content: space-evenly"};


/***/ }),
/* 764 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"I AB","2":"2 C d J M H"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"wB xB yB","132":"FB F zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:7,C:"High-quality kerning pairs & ligatures"};


/***/ }),
/* 765 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","16":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","16":"RB JB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB","16":"C"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5","2":"A B p EB","16":"C","130":"L"},L:{"1":"KB"},M:{"130":"3"},N:{"130":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:7,C:"KeyboardEvent.charCode"};


/***/ }),
/* 766 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g ZB YB"},D:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k","194":"l m n o L q"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X bB cB dB eB p EB gB","194":"6 Y Z a b c"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","194":"L"},L:{"194":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F","194":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"194":"9B"},S:{"1":"AC"}},B:5,C:"KeyboardEvent.code"};


/***/ }),
/* 767 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 5 6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B J M bB cB dB eB p EB gB","16":"C"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"5 L","2":"A B p EB","16":"C"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"KeyboardEvent.getModifierState()"};


/***/ }),
/* 768 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","260":"E A B"},B:{"1":"AB","260":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R ZB YB","132":"S T U V W X"},D:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 5 h i j k l m n o L q r s t u v w x y z","2":"6 E B J M H I O P Q R S T U V W X Y Z a b c e f g bB cB dB eB p EB gB","16":"C"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"5","2":"A B p EB","16":"C L"},L:{"1":"KB"},M:{"1":"3"},N:{"260":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:5,C:"KeyboardEvent.key"};


/***/ }),
/* 769 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y"},E:{"1":"5 D G E A B C UB VB WB XB p aB","16":"K RB JB","132":"F N TB"},F:{"1":"0 1 5 6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB","16":"C","132":"J M"},G:{"1":"G mB nB oB pB qB rB sB tB uB","16":"JB hB HB","132":"jB kB LB"},H:{"2":"vB"},I:{"1":"4 0B 1B","16":"wB xB","132":"FB F yB zB HB"},J:{"132":"D A"},K:{"1":"5 L","2":"A B p EB","16":"C"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"KeyboardEvent.location"};


/***/ }),
/* 770 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F RB JB","16":"N"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","16":"E bB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB","16":"wB xB","132":"0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C p EB","132":"L"},L:{"132":"KB"},M:{"132":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"2":"F","132":"3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"132":"9B"},S:{"1":"AC"}},B:7,C:"KeyboardEvent.which"};


/***/ }),
/* 771 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I","2":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"1":"B","2":"A"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Resource Hints: Lazyload"};


/***/ }),
/* 772 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","2052":"B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB","194":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I","322":"6 O P Q R S T U V W X Y Z a b c e f g h i j","516":"k l m n o L q r"},E:{"1":"5 B C p aB","2":"F N K D G E RB JB TB UB VB WB","1028":"A XB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","322":"J M H I O P Q R S T U V W","516":"6 X Y Z a b c e"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB","1028":"pB qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","516":"F"},Q:{"2":"8B"},R:{"516":"9B"},S:{"1":"AC"}},B:6,C:"let"};


/***/ }),
/* 773 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I","129":"AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"129":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"257":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"129":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","513":"5 E B C bB cB dB eB p EB gB"},G:{"1026":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1026":"vB"},I:{"1":"FB F wB xB yB zB HB","513":"4 0B 1B"},J:{"1":"D","1026":"A"},K:{"1026":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1026":"A B"},O:{"257":"2B"},P:{"1":"3B 4B 5B 6B 7B","513":"F"},Q:{"129":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"PNG favicons"};


/***/ }),
/* 774 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","16":"AB"},C:{"2":"fB FB ZB YB","260":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j","1025":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB","16":"AB PB QB"},E:{"2":"F N K D G RB JB TB UB VB","516":"5 E A B C WB XB p aB"},F:{"1":"0 1 n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m bB cB dB eB p EB gB"},G:{"130":"G JB hB HB jB kB LB mB","516":"nB oB pB qB rB sB tB uB"},H:{"130":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","130":"A"},K:{"130":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"130":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1025":"AC"}},B:1,C:"SVG favicons"};


/***/ }),
/* 775 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G iB","132":"E"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"16":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"16":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"16":"2B"},P:{"1":"3B 4B 5B 6B 7B","16":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Resource Hints: dns-prefetch"};


/***/ }),
/* 776 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d","260":"J M H I"},C:{"1":"0 1 3 4 7 8 9 j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h ZB YB","129":"i"},D:{"1":"0 1 3 4 7 8 9 L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o"},E:{"1":"5 C p aB","2":"F N K D G E A B RB JB TB UB VB WB XB"},F:{"1":"0 1 6 c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a b bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"16":"3"},N:{"2":"A B"},O:{"16":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Resource Hints: preconnect"};


/***/ }),
/* 777 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 F 0B 1B","2":"FB wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Resource Hints: prefetch"};


/***/ }),
/* 778 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M","1028":"H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y ZB YB","132":"z","578":"0 1 3 4 7 8 9 IB BB CB DB GB"},D:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s"},E:{"1":"5 C p aB","2":"F N K D G E A RB JB TB UB VB WB XB","322":"B"},F:{"1":"0 1 g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB","322":"rB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"578":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"Resource Hints: preload"};


/***/ }),
/* 779 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E A B C"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"1":"B","2":"A"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"Resource Hints: prerender"};


/***/ }),
/* 780 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","194":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB","194":"AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Lazy loading via attribute for images & iframes"};


/***/ }),
/* 781 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","16":"iB","132":"K D G E A"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","132":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"2 F N K D G E A B C d J M H I O P Q R S"},E:{"1":"5 A B C XB p aB","132":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E B C bB cB dB eB p EB gB","132":"5"},G:{"1":"pB qB rB sB tB uB","132":"G JB hB HB jB kB LB mB nB oB"},H:{"132":"vB"},I:{"1":"4 0B 1B","132":"FB F wB xB yB zB HB"},J:{"132":"D A"},K:{"1":"L","16":"A B C p EB","132":"5"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","132":"A"},O:{"132":"2B"},P:{"1":"3B 4B 5B 6B 7B","132":"F"},Q:{"132":"8B"},R:{"1":"9B"},S:{"4":"AC"}},B:6,C:"localeCompare()"};


/***/ }),
/* 782 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"4 GB SB OB MB lB NB KB AB PB QB","2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"1 3 7 8 9 IB BB CB DB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"194":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"Magnetometer"};


/***/ }),
/* 783 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","36":"E A B"},B:{"1":"J M H I AB","36":"2 C d"},C:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB","36":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c YB"},D:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","36":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c"},E:{"1":"5 G E A B C VB WB XB p aB","2":"F RB JB","36":"N K D TB UB"},F:{"1":"0 1 6 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p","36":"5 C J M H I O P EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB","36":"hB HB jB kB LB"},H:{"2":"vB"},I:{"1":"4","2":"wB","36":"FB F xB yB zB HB 0B 1B"},J:{"36":"D A"},K:{"1":"L","2":"A B","36":"5 C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"36":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","36":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"matches() DOM method"};


/***/ }),
/* 784 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F N RB JB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"1":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"matchMedia"};


/***/ }),
/* 785 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"E A B iB","8":"K D G"},B:{"2":"2 C d J M H I","8":"AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","129":"fB FB ZB YB"},D:{"1":"T","8":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 A B C XB p aB","260":"F N K D G E RB JB TB UB VB WB"},F:{"2":"E","4":"5 B C bB cB dB eB p EB gB","8":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","8":"JB hB HB"},H:{"8":"vB"},I:{"8":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"A","8":"D"},K:{"8":"5 A B C L p EB"},L:{"8":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"4":"2B"},P:{"8":"F 3B 4B 5B 6B 7B"},Q:{"8":"8B"},R:{"8":"9B"},S:{"1":"AC"}},B:2,C:"MathML"};


/***/ }),
/* 786 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","16":"iB","900":"K D G E"},B:{"1":"AB","1025":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","900":"fB FB ZB YB","1025":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"N RB","900":"F JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E","132":"5 B C bB cB dB eB p EB gB"},G:{"1":"hB HB jB kB LB nB oB pB qB rB sB tB uB","16":"JB","2052":"G mB"},H:{"132":"vB"},I:{"1":"FB F yB zB HB 0B 1B","16":"wB xB","4097":"4"},J:{"1":"D A"},K:{"132":"5 A B C p EB","4100":"L"},L:{"4097":"KB"},M:{"4097":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"4097":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1025":"AC"}},B:1,C:"maxlength attribute for input and textarea elements"};


/***/ }),
/* 787 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I","16":"AB"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"1":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c","2":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB","16":"AB PB QB"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F N RB JB"},F:{"1":"5 B C J M H I O P Q R S T cB dB eB p EB gB","2":"0 1 6 E U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB"},H:{"16":"vB"},I:{"1":"4 F zB HB 0B 1B","16":"FB wB xB yB"},J:{"16":"D A"},K:{"1":"5 C L","16":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"16":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Media attribute"};


/***/ }),
/* 788 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","132":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB","132":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"2 F N K D G E A B C d J M H","132":"0 1 3 4 6 7 8 9 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N RB JB TB","132":"5 K D G E A B C UB VB WB XB p aB"},F:{"2":"5 E B C bB cB dB eB p EB gB","132":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"JB hB HB jB kB LB","132":"G mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","132":"4 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"132":"KB"},M:{"132":"3"},N:{"132":"A B"},O:{"2":"2B"},P:{"2":"F 3B","132":"4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"132":"AC"}},B:2,C:"Media Fragments"};


/***/ }),
/* 789 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p","16":"aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"Media Session API"};


/***/ }),
/* 790 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l ZB YB","260":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"3 4 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","324":"0 1 7 8 9 u v w x y z"},E:{"2":"F N K D G E A RB JB TB UB VB WB XB","132":"5 B C p aB"},F:{"1":"0 1 r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB","324":"f g h i j k l m n o L q"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"260":"3"},N:{"2":"A B"},O:{"132":"2B"},P:{"1":"6B 7B","2":"F","132":"3B 4B 5B"},Q:{"132":"8B"},R:{"2":"9B"},S:{"260":"AC"}},B:5,C:"Media Capture from DOM Elements API"};


/***/ }),
/* 791 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L","194":"q r"},E:{"1":"aB","2":"F N K D G E A B C RB JB TB UB VB WB XB p","322":"5"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB","194":"6 e"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB","578":"tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:5,C:"MediaRecorder API"};


/***/ }),
/* 792 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","260":"B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T ZB YB","194":"6 U V W X Y Z a b c e f g h i j k"},D:{"1":"0 1 3 4 6 7 8 9 a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M","33":"S T U V W X Y Z","66":"H I O P Q R"},E:{"1":"5 G E A B C WB XB p aB","2":"F N K D RB JB TB UB VB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 1B","2":"FB F wB xB yB zB HB 0B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"514":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Media Source Extensions"};


/***/ }),
/* 793 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","2114":"AB"},C:{"2":"fB FB F N K D ZB YB","132":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j","322":"r s t u","578":"k l m n o L q","2114":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB","322":"e f g h","2114":"0 1 i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"1156":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2114":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Context menu item (menuitem element)"};


/***/ }),
/* 794 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"4B 5B 6B 7B","2":"F","16":"3B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"theme-color Meta Tag"};


/***/ }),
/* 795 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","2":"C"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E bB cB dB eB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"meter element"};


/***/ }),
/* 796 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"Web MIDI API"};


/***/ }),
/* 797 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","8":"K iB","129":"D","257":"G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"CSS min/max-width/height"};


/***/ }),
/* 798 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB","132":"2 F N K D G E A B C d J M H I O P Q ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","2":"wB xB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"MP3 audio format"};


/***/ }),
/* 799 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I","2":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","386":"Q R"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"Dynamic Adaptive Streaming over HTTP (MPEG-DASH)"};


/***/ }),
/* 800 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P ZB YB","4":"6 Q R S T U V W X Y Z a b c"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","2":"RB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 0B 1B","4":"FB F wB xB zB HB","132":"yB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"260":"3"},N:{"1":"A B"},O:{"4":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"MPEG-4/H.264 video format"};


/***/ }),
/* 801 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","2":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS3 Multiple backgrounds"};


/***/ }),
/* 802 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","260":"E A B"},B:{"132":"AB","260":"2 C d J M H I"},C:{"2":"fB FB F N ZB YB","260":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"16":"2 F N K D G E A B C d","132":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"16":"RB JB","132":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"1":"5 C gB","2":"E bB cB dB eB","16":"B p EB","132":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"16":"JB hB","132":"G HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"16":"wB xB","132":"4 FB F yB zB HB 0B 1B"},J:{"132":"D A"},K:{"1":"5 C","2":"A","16":"B p EB","132":"L"},L:{"132":"KB"},M:{"260":"3"},N:{"260":"A B"},O:{"132":"2B"},P:{"132":"F 3B 4B 5B 6B 7B"},Q:{"132":"8B"},R:{"132":"9B"},S:{"260":"AC"}},B:5,C:"Mutation events"};


/***/ }),
/* 803 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G iB","8":"E A"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H","33":"I O P Q R S T U V"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N RB JB TB","33":"K"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB","33":"kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB wB xB yB","8":"F zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","8":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Mutation Observer"};


/***/ }),
/* 804 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","2":"iB","8":"K D"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","4":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Web Storage - name/value pairs"};


/***/ }),
/* 805 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N","33":"K D G E A B C"},E:{"1":"5 G E A B C WB XB p aB","2":"F N K D RB JB TB UB VB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4 F zB HB 0B 1B","2":"FB wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"Navigation Timing API"};


/***/ }),
/* 806 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","2":"2 C d J"},C:{"1":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a ZB YB"},D:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"16":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"16":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"16":"8B"},R:{"16":"9B"},S:{"1":"AC"}},B:2,C:"Navigator Language API"};


/***/ }),
/* 807 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","1028":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 6 7 8 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","1028":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q bB cB dB eB p EB gB","1028":"0 1 r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"wB 0B 1B","132":"FB F xB yB zB HB"},J:{"2":"D A"},K:{"2":"5 A B C p EB","516":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"6B 7B","132":"F","516":"3B 4B 5B"},Q:{"2":"8B"},R:{"516":"9B"},S:{"260":"AC"}},B:7,C:"Network Information API"};


/***/ }),
/* 808 */
/***/ (function(module, exports) {

module.exports={A:{A:{"16":"iB","644":"E A B","2308":"K D G"},B:{"1":"2 d J M H I AB","16":"C"},C:{"1":"0 1 2 3 4 6 7 8 9 E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d J M H I O P Q R S T U"},E:{"1":"5 D G E A B C UB VB WB XB p aB","16":"F N K RB JB","1668":"TB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E B C bB cB dB eB p EB","132":"gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB jB kB"},H:{"16":"vB"},I:{"1":"4 0B 1B","16":"FB wB xB yB","1668":"F zB HB"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"1":"3B 4B 5B 6B 7B","16":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Node.contains()"};


/***/ }),
/* 809 */
/***/ (function(module, exports) {

module.exports={A:{A:{"16":"iB","132":"E A B","260":"K D G"},B:{"1":"2 d J M H I AB","16":"C"},C:{"1":"0 1 2 3 4 6 7 8 9 E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d J M H I O P Q R S T U"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"F N RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E B bB cB dB eB p EB","132":"5 C gB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB jB"},H:{"16":"vB"},I:{"1":"4 F zB HB 0B 1B","16":"FB wB xB yB"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"1":"3B 4B 5B 6B 7B","16":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Node.parentElement"};


/***/ }),
/* 810 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F","36":"2 N K D G E A B C d J M H I O P Q"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","36":"4 0B 1B"},J:{"1":"A","2":"D"},K:{"2":"5 A B C p EB","36":"L"},L:{"513":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"36":"F","258":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"258":"9B"},S:{"1":"AC"}},B:1,C:"Web Notifications"};


/***/ }),
/* 811 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L ZB YB"},D:{"1":"0 1 3 4 7 8 9 x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","16":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"1":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:6,C:"Object.entries"};


/***/ }),
/* 812 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"f g h i j k l m n o L q r s","2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"6 S T U V W X Y Z a b c e f","2":"0 1 5 E B C J M H I O P Q R g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F","2":"3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:7,C:"Object.observe data binding"};


/***/ }),
/* 813 */
/***/ (function(module, exports) {

module.exports={A:{A:{"8":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB","8":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L ZB YB"},D:{"1":"0 1 3 4 7 8 9 x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","8":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w"},E:{"1":"5 B C XB p aB","8":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 k l m n o L q r s t u v w x y z","8":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","8":"G JB hB HB jB kB LB mB nB oB pB"},H:{"8":"vB"},I:{"1":"4","8":"FB F wB xB yB zB HB 0B 1B"},J:{"8":"D A"},K:{"1":"L","8":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"8":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","8":"F 3B"},Q:{"1":"8B"},R:{"8":"9B"},S:{"1":"AC"}},B:6,C:"Object.values method"};


/***/ }),
/* 814 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I","2":"C AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","130":"A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"Object RTC (ORTC) API for WebRTC"};


/***/ }),
/* 815 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"E iB","8":"K D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","4":"FB","8":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","8":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","2":"E bB","8":"cB dB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:7,C:"Offline web applications"};


/***/ }),
/* 816 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m ZB YB","194":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"SB OB MB lB NB KB AB PB QB","2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","322":"1 3 4 7 8 9 IB BB CB DB GB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n bB cB dB eB p EB gB","322":"0 1 o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"194":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"194":"AC"}},B:1,C:"OffscreenCanvas"};


/***/ }),
/* 817 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d J M"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"A","2":"D"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Ogg Vorbis audio format"};


/***/ }),
/* 818 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","8":"E A B"},B:{"1":"H I AB","8":"2 C d J M"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"1":"3"},N:{"8":"A B"},O:{"1":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:6,C:"Ogg/Theora video format"};


/***/ }),
/* 819 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J","16":"M H I O"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N RB JB TB","16":"K"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB","16":"C"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Reversed attribute of ordered lists"};


/***/ }),
/* 820 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","2":"2 C d J"},C:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s ZB YB"},D:{"1":"0 1 3 4 7 8 9 y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"\"once\" event listener option"};


/***/ }),
/* 821 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D iB","260":"G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB","516":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j"},D:{"1":"0 1 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB","4":"5"},G:{"1":"G HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"A","132":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Online/offline status"};


/***/ }),
/* 822 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b"},E:{"2":"F N K D G E A RB JB TB UB VB WB XB","132":"5 B C p aB"},F:{"1":"0 1 6 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB","132":"rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Opus"};


/***/ }),
/* 823 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"4 GB SB OB MB lB NB KB AB PB QB","2":"0 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"1 3 7 8 9 IB BB CB DB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"Orientation Sensor"};


/***/ }),
/* 824 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D iB","260":"G","388":"E A B"},B:{"1":"J M H I AB","388":"2 C d"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","129":"5","260":"E B bB cB dB eB p EB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 C L","260":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"388":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"CSS outline properties"};


/***/ }),
/* 825 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","2":"2 C d"},C:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q ZB YB"},D:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"5B 6B 7B","2":"F 3B 4B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:6,C:"String.prototype.padStart(), String.prototype.padEnd()"};


/***/ }),
/* 826 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"PageTransitionEvent"};


/***/ }),
/* 827 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G E ZB YB","33":"2 A B C d J M H"},D:{"1":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C","33":"d J M H I O P Q R S T U V W X Y Z a b"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N K RB JB TB"},F:{"1":"0 1 5 6 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB","33":"J M H I O"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB","33":"0B 1B"},J:{"1":"A","2":"D"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","33":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"Page Visibility"};


/***/ }),
/* 828 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","2":"2 C d J"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r ZB YB"},D:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"Passive event listeners"};


/***/ }),
/* 829 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","16":"AB"},C:{"2":"0 1 2 3 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB","16":"4 GB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB","16":"AB PB QB"},E:{"1":"5 C","2":"F N K D G E A B RB JB TB UB VB WB XB p","16":"aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v bB cB dB eB p EB gB","16":"0 1 w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","16":"4"},J:{"2":"D","16":"A"},K:{"2":"5 A B C p EB","16":"L"},L:{"16":"KB"},M:{"16":"3"},N:{"2":"A","16":"B"},O:{"16":"2B"},P:{"2":"F 3B 4B","16":"5B 6B 7B"},Q:{"16":"8B"},R:{"16":"9B"},S:{"2":"AC"}},B:1,C:"Password Rules"};


/***/ }),
/* 830 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C","132":"d J M H I"},C:{"1":"0 1 3 4 7 8 9 r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z ZB YB","132":"6 a b c e f g h i j k l m n o L q"},D:{"1":"GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e","132":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB"},E:{"1":"5 A B C WB XB p aB","2":"F N K D RB JB TB UB","132":"G E VB"},F:{"1":"0 1 y z","2":"5 E B C J M H I O P Q R bB cB dB eB p EB gB","132":"6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x"},G:{"1":"nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB","16":"G","132":"mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"1":"A","2":"D"},K:{"2":"5 A B C p EB","132":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"132":"2B"},P:{"132":"F 3B 4B 5B 6B 7B"},Q:{"132":"8B"},R:{"132":"9B"},S:{"1":"AC"}},B:1,C:"Path2D"};


/***/ }),
/* 831 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C","322":"d","8196":"J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x ZB YB","4162":"0 1 7 8 9 y z IB BB CB DB","16452":"3 4 GB"},D:{"1":"AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v","194":"0 1 w x y z","1090":"7 8","8196":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB"},E:{"1":"5 aB","2":"F N K D G E RB JB TB UB VB WB","514":"A B XB","8196":"C p"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i bB cB dB eB p EB gB","194":"j k l m n o L q","8196":"0 1 r s t u v w x y z"},G:{"1":"uB","2":"G JB hB HB jB kB LB mB nB oB","514":"pB qB rB","8196":"sB tB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2052":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F","8196":"3B 4B 5B 6B 7B"},Q:{"194":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:4,C:"Payment Request API"};


/***/ }),
/* 832 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o ZB YB"},D:{"1":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:7,C:"Permissions API"};


/***/ }),
/* 833 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB","194":"GB"},D:{"1":"OB MB lB NB KB AB PB QB","2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","322":"SB"},E:{"2":"F N K D G E RB JB TB UB VB WB","516":"5 A B C XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f bB cB dB eB p EB gB","1028":"0 1 g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB","516":"nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2052":"KB"},M:{"2052":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Picture-in-Picture"};


/***/ }),
/* 834 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","2":"C"},C:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB","578":"6 e f g"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f","194":"g"},E:{"1":"5 A B C WB XB p aB","2":"F N K D G E RB JB TB UB VB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S bB cB dB eB p EB gB","322":"T"},G:{"1":"oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Picture element"};


/***/ }),
/* 835 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d J M"},C:{"2":"fB","194":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"194":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"194":"AC"}},B:1,C:"Ping attribute"};


/***/ }),
/* 836 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"D G E A B","2":"iB","8":"K"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"PNG alpha transparency"};


/***/ }),
/* 837 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","2":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:7,C:"CSS pointer-events (for HTML)"};


/***/ }),
/* 838 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","2":"C"},C:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C ZB YB","33":"6 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j"},D:{"1":"0 1 3 4 7 8 9 g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J","33":"6 R S T U V W X Y Z a b c e f","66":"M H I O P Q"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","33":"J M H I O P Q R S"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:2,C:"Pointer Lock API"};


/***/ }),
/* 839 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"4 GB","2":"0 1 2 3 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB"},D:{"1":"PB QB","2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB"},E:{"1":"5 aB","2":"F N K D G E A B C RB JB TB UB VB WB XB p"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"prefers-color-scheme media query"};


/***/ }),
/* 840 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"3 4 BB CB DB GB","2":"0 1 2 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB ZB YB"},D:{"1":"KB AB PB QB","2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"prefers-reduced-motion media query"};


/***/ }),
/* 841 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E bB cB dB eB"},G:{"2":"JB hB HB jB kB","132":"G LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"progress element"};


/***/ }),
/* 842 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"I AB","2":"2 C d J M H"},C:{"1":"1 3 4 7 8 9 IB BB CB DB GB","2":"0 2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"3 4 BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB"},E:{"1":"5 C p aB","2":"F N K D G E A B RB JB TB UB VB WB XB"},F:{"1":"0 1 t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"6B 7B","2":"F 3B 4B 5B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"Promise.prototype.finally"};


/***/ }),
/* 843 */
/***/ (function(module, exports) {

module.exports={A:{A:{"8":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","4":"W X","8":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"b","8":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a"},E:{"1":"5 G E A B C VB WB XB p aB","8":"F N K D RB JB TB UB"},F:{"1":"0 1 6 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","4":"O","8":"5 E B C J M H I bB cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","8":"JB hB HB jB kB LB"},H:{"8":"vB"},I:{"1":"4 1B","8":"FB F wB xB yB zB HB 0B"},J:{"8":"D A"},K:{"1":"L","8":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"8":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Promises"};


/***/ }),
/* 844 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:4,C:"Proximity API"};


/***/ }),
/* 845 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I h i j k l m n o L q r","66":"6 O P Q R S T U V W X Y Z a b c e f g"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C U V W X Y Z a b c e bB cB dB eB p EB gB","66":"J M H I O P Q R S T"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:6,C:"Proxy object"};


/***/ }),
/* 846 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O bB cB dB eB p EB gB","4":"S","16":"P Q R T"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Public Key Pinning"};


/***/ }),
/* 847 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I","2":"2 C d J M","257":"AB"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m ZB YB","257":"0 1 3 4 7 9 n L q r s t u w x y z IB BB CB DB GB","1281":"8 o v"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m","257":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","388":"n o L q r s"},E:{"2":"F N K D G E RB JB TB UB VB","514":"5 A B C WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f bB cB dB eB p EB gB","16":"g h i j k","257":"0 1 l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"2":"9B"},S:{"257":"AC"}},B:5,C:"Push API"};


/***/ }),
/* 848 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"iB","8":"K D","132":"G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","8":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","8":"E bB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"querySelector/querySelectorAll"};


/***/ }),
/* 849 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","16":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","16":"fB FB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d J M H I O P Q R S T U"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"F N RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E bB","132":"5 B C cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB jB kB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"L","132":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"257":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"readonly attribute of input and textarea elements"};


/***/ }),
/* 850 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","132":"B"},B:{"1":"AB","132":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB"},D:{"1":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P","260":"0 1 6 7 8 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"1":"5 C p aB","2":"F N K D RB JB TB UB","132":"G E A B VB WB XB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"2":"JB hB HB jB kB LB","132":"G mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"260":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Referrer Policy"};


/***/ }),
/* 851 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","129":"AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB"},D:{"2":"F N K D G E A B C","129":"0 1 2 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"E B bB cB dB eB p EB","129":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","129":"A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"Custom protocol handling"};


/***/ }),
/* 852 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:1,C:"rel=noopener"};


/***/ }),
/* 853 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","132":"B"},B:{"1":"2 d J M H I AB","16":"C"},C:{"1":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d J"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Link type \"noreferrer\""};


/***/ }),
/* 854 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"I AB","2":"2 C d J M","132":"H"},C:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y ZB YB"},D:{"1":"3 4 DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s","132":"0 1 7 8 9 t u v w x y z IB BB CB"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f bB cB dB eB p EB gB","132":"g h i j k l m n o L q r s t u"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"132":"2B"},P:{"1":"7B","2":"F","132":"3B 4B 5B 6B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:1,C:"relList (DOMTokenList)"};


/***/ }),
/* 855 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G iB","132":"E A"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","2":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E B bB cB dB eB p EB"},G:{"1":"G hB HB kB LB mB nB oB pB qB rB sB tB uB","2":"JB","260":"jB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 C L","2":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"rem (root em) units"};


/***/ }),
/* 856 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","33":"2 B C d J M H I O P Q R","164":"F N K D G E A"},D:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E","33":"R S","164":"I O P Q","420":"2 A B C d J M H"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N RB JB TB","33":"K"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB","33":"kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"requestAnimationFrame"};


/***/ }),
/* 857 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v ZB YB","194":"w x"},D:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a b c bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:5,C:"requestIdleCallback"};


/***/ }),
/* 858 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"GB","2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB"},D:{"1":"3 4 CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w","194":"0 1 7 8 9 x y z IB BB"},E:{"1":"aB","2":"5 F N K D G E A B C RB JB TB UB VB WB XB p"},F:{"1":"0 1 v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j bB cB dB eB p EB gB","194":"k l m n o L q r s t u"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"7B","2":"F 3B 4B 5B 6B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Resize Observer"};


/***/ }),
/* 859 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z ZB YB","194":"6 a b c"},D:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T"},E:{"1":"5 C p aB","2":"F N K D G E A RB JB TB UB VB WB XB","260":"B"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Resource Timing"};


/***/ }),
/* 860 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"1":"0 1 3 4 7 8 9 q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m","194":"n o L"},E:{"1":"5 A B C XB p aB","2":"F N K D G E RB JB TB UB VB WB"},F:{"1":"0 1 6 e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z bB cB dB eB p EB gB","194":"a b c"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Rest parameters"};


/***/ }),
/* 861 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d","516":"J M H I"},C:{"1":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB","33":"6 R S T U V W X Y Z a b c e f g h i j k l m"},D:{"1":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R","33":"6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB XB"},F:{"1":"0 1 m n o L q r s t u v w x y z","2":"5 E B C J M H bB cB dB eB p EB gB","33":"6 I O P Q R S T U V W X Y Z a b c e f g h i j k l"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","130":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"33":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"33":"9B"},S:{"1":"AC"}},B:5,C:"WebRTC Peer-to-peer connections"};


/***/ }),
/* 862 */
/***/ (function(module, exports) {

module.exports={A:{A:{"4":"K D G E A B iB"},B:{"4":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","8":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g ZB YB"},D:{"4":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","8":"F"},E:{"4":"5 N K D G E A B C TB UB VB WB XB p aB","8":"F RB JB"},F:{"4":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","8":"5 E B C bB cB dB eB p EB gB"},G:{"4":"G jB kB LB mB nB oB pB qB rB sB tB uB","8":"JB hB HB"},H:{"8":"vB"},I:{"4":"4 FB F zB HB 0B 1B","8":"wB xB yB"},J:{"4":"A","8":"D"},K:{"4":"L","8":"5 A B C p EB"},L:{"4":"KB"},M:{"1":"3"},N:{"4":"A B"},O:{"4":"2B"},P:{"4":"F 3B 4B 5B 6B 7B"},Q:{"4":"8B"},R:{"4":"9B"},S:{"1":"AC"}},B:1,C:"Ruby annotation"};


/***/ }),
/* 863 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","2":"K D iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a","2":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"N K TB","2":"5 D G E A B C VB WB XB p aB","16":"UB","129":"F RB JB"},F:{"1":"5 E B C J M H I bB cB dB eB p EB gB","2":"0 1 6 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"hB HB jB kB LB","2":"G mB nB oB pB qB rB sB tB uB","129":"JB"},H:{"1":"vB"},I:{"1":"FB F wB xB yB zB HB 0B","2":"4 1B"},J:{"1":"D A"},K:{"1":"5 A B C p EB","2":"L"},L:{"2":"KB"},M:{"2":"3"},N:{"1":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"display: run-in"};


/***/ }),
/* 864 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","388":"B"},B:{"1":"I AB","2":"2 C d J","129":"M H"},C:{"1":"3 4 8 9 IB BB CB DB GB","2":"0 1 2 6 7 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t"},E:{"1":"5 C aB","2":"F N K D G E A B RB JB TB UB VB WB XB p"},F:{"1":"0 1 i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h bB cB dB eB p EB gB"},G:{"1":"tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:6,C:"'SameSite' cookie attribute"};


/***/ }),
/* 865 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","164":"B"},B:{"1":"AB","36":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H ZB YB","36":"6 I O P Q R S T U V W X Y Z a b c e f g h i j k l m"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A","36":"B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","16":"F"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"Screen Orientation"};


/***/ }),
/* 866 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","2":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F RB JB","132":"N"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"async attribute for external scripts"};


/***/ }),
/* 867 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","132":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB","257":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"F RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"defer attribute for external scripts"};


/***/ }),
/* 868 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D iB","132":"G E A B"},B:{"1":"AB","132":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","132":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB"},D:{"1":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"0 1 2 6 7 8 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},E:{"2":"F N RB JB","132":"5 K D G E A B C TB UB VB WB XB p aB"},F:{"1":"0 1 r s t u v w x y z","2":"E bB cB dB eB","16":"B p EB","132":"5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q gB"},G:{"16":"JB hB HB","132":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"16":"wB xB","132":"4 FB F yB zB HB 0B 1B"},J:{"132":"D A"},K:{"132":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"132":"2B"},P:{"132":"F 3B 4B 5B 6B 7B"},Q:{"132":"8B"},R:{"132":"9B"},S:{"1":"AC"}},B:5,C:"scrollIntoView"};


/***/ }),
/* 869 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"F N RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:7,C:"Element.scrollIntoViewIfNeeded()"};


/***/ }),
/* 870 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"SDCH Accept-Encoding/Content-Encoding"};


/***/ }),
/* 871 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","16":"iB","260":"K D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 v w x y z IB BB CB DB GB","132":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l ZB YB","2180":"m n o L q r s t u"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"F N RB JB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","132":"5 E B C bB cB dB eB p EB gB"},G:{"16":"HB","132":"JB hB","516":"G jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 0B 1B","16":"FB F wB xB yB zB","1025":"HB"},J:{"1":"A","16":"D"},K:{"1":"L","16":"A B C p EB","132":"5"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","16":"A"},O:{"1025":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2180":"AC"}},B:5,C:"Selection API"};


/***/ }),
/* 872 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"3 4 9 IB BB CB DB GB","2":"0 1 2 6 7 8 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"3 4 DB GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","196":"8 9 IB BB","324":"CB"},E:{"2":"F N K D G E A B C RB JB TB UB VB WB XB p","516":"5 aB"},F:{"1":"0 1 v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"Server Timing"};


/***/ }),
/* 873 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d","322":"J M"},C:{"1":"0 1 3 4 7 9 n L q r s t u w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b ZB YB","194":"6 c e f g h i j k l m","513":"8 o v"},D:{"1":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i","4":"j k l m n"},E:{"1":"5 C p aB","2":"F N K D G E A B RB JB TB UB VB WB XB"},F:{"1":"0 1 6 b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V bB cB dB eB p EB gB","4":"W X Y Z a"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","4":"4"},J:{"2":"D A"},K:{"2":"5 A B C p EB","4":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"4":"8B"},R:{"4":"9B"},S:{"2":"AC"}},B:5,C:"Service Workers"};


/***/ }),
/* 874 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I","2":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"1":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Efficient Script Yielding: setImmediate()"};


/***/ }),
/* 875 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B","2":"iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"1":"4 FB F xB yB zB HB 0B 1B","260":"wB"},J:{"1":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"16":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"1":"3B 4B 5B 6B 7B","16":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"SHA-2 SSL certificates"};


/***/ }),
/* 876 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"2 3 4 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X IB BB CB DB GB ZB YB","194":"0 1 6 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","322":"7 8"},D:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB","2":"2 F N K D G E A B C d J M H I O P Q R S T NB KB AB PB QB","33":"6 U V W X Y Z a b c"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","33":"J M H I O P Q"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB","33":"0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","33":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:7,C:"Shadow DOM (deprecated V0 spec)"};


/***/ }),
/* 877 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"3 4 BB CB DB GB","2":"0 2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB","322":"1","578":"7 8 9 IB"},D:{"1":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v"},E:{"2":"F N K D G E RB JB TB UB VB WB","132":"5 A B C XB p aB"},F:{"1":"0 1 j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB","132":"pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","2":"F","4":"3B"},Q:{"1":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"Shadow DOM (V1)"};


/***/ }),
/* 878 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J","194":"M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB","194":"0 1 3 4 7 8 9 IB BB CB DB GB"},D:{"1":"GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 7 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","194":"3 4 8 9 IB BB CB DB"},E:{"2":"F N K D G E A RB JB TB UB VB WB","194":"5 B C XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L bB cB dB eB p EB gB","194":"0 1 q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB","194":"qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","16":"4"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"194":"KB"},M:{"194":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"Shared Array Buffer"};


/***/ }),
/* 879 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"N K TB","2":"5 F D G E A B C RB JB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","2":"E bB cB dB"},G:{"1":"jB kB","2":"G JB hB HB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 B C p EB","2":"L","16":"A"},L:{"2":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F","2":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:1,C:"Shared Web Workers"};


/***/ }),
/* 880 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K iB","132":"D G"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB"},H:{"1":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Server Name Indication"};


/***/ }),
/* 881 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E A iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"2 6 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","2":"0 1 3 4 7 8 9 fB FB F N K D G E A B C u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","2":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"G E A B C WB XB p","2":"F N K D RB JB TB UB VB","129":"5 aB"},F:{"1":"5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i l n","2":"0 1 E B C j k m o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB","2":"JB hB HB jB kB LB","257":"uB"},H:{"2":"vB"},I:{"1":"FB F zB HB 0B 1B","2":"4 wB xB yB"},J:{"2":"D A"},K:{"1":"5","2":"A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"1":"B","2":"A"},O:{"2":"2B"},P:{"1":"F","2":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"16":"9B"},S:{"1":"AC"}},B:7,C:"SPDY protocol"};


/***/ }),
/* 882 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","164":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB","322":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"2 F N K D G E A B C d J M H I O P Q R S T","164":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 E B C J M H I O P Q R S T U V bB cB dB eB p EB gB","1026":"0 1 6 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"164":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"164":"F 3B 4B 5B 6B 7B"},Q:{"164":"8B"},R:{"164":"9B"},S:{"322":"AC"}},B:7,C:"Speech Recognition API"};


/***/ }),
/* 883 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I","2":"2 C","257":"AB"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z ZB YB","194":"6 a b c e f g h i j k l m n o L q r"},D:{"1":"6 c e f g h i j k l m n o L q r s t u v w x","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b","257":"0 1 3 4 7 8 9 y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB UB"},F:{"1":"0 1 6 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:7,C:"Speech Synthesis API"};


/***/ }),
/* 884 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F N RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"4":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"4":"vB"},I:{"4":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"A","4":"D"},K:{"4":"5 A B C L p EB"},L:{"4":"KB"},M:{"4":"3"},N:{"4":"A B"},O:{"4":"2B"},P:{"4":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"4":"9B"},S:{"2":"AC"}},B:1,C:"Spellcheck attribute"};


/***/ }),
/* 885 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:7,C:"Web SQL Database"};


/***/ }),
/* 886 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","260":"C","514":"2 d J"},C:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a ZB YB","194":"6 b c e f g"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c","260":"6 e f g"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D RB JB TB UB","260":"G VB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P bB cB dB eB p EB gB","260":"Q R S T"},G:{"1":"nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB","260":"G mB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Srcset and sizes attributes"};


/***/ }),
/* 887 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G E ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d J M H I O P Q R S T U"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","16":"F N RB JB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB","16":"C"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB jB"},H:{"16":"vB"},I:{"1":"4 F zB HB 0B 1B","16":"FB wB xB yB"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"1":"3B 4B 5B 6B 7B","16":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Event.stopImmediatePropagation()"};


/***/ }),
/* 888 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M ZB YB","129":"f g h i j k","420":"6 H I O P Q R S T U V W X Y Z a b c e"},D:{"1":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P","420":"6 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB XB"},F:{"1":"0 1 j k l m n o L q r s t u v w x y z","2":"E B J M H bB cB dB eB p EB gB","420":"5 6 C I O P Q R S T U V W X Y Z a b c e f g h i"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB","513":"rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","420":"A"},K:{"1":"L","2":"A B p EB","420":"5 C"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"4B 5B 6B 7B","420":"F 3B"},Q:{"420":"8B"},R:{"420":"9B"},S:{"2":"AC"}},B:4,C:"getUserMedia/Stream API"};


/***/ }),
/* 889 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","130":"B"},B:{"16":"2 C","260":"d J","1028":"AB","5124":"M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB","6148":"3 4 DB GB","6722":"0 1 7 8 9 IB BB CB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u","260":"0 1 v w x y z","1028":"3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G E RB JB TB UB VB WB","3076":"5 A B C XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h bB cB dB eB p EB gB","260":"i j k l m n o","1028":"0 1 L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB","16":"pB","1028":"qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","260":"4"},J:{"2":"D A"},K:{"2":"5 A B C p EB","1028":"L"},L:{"1028":"KB"},M:{"2626":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B","1028":"5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"Streams"};


/***/ }),
/* 890 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A iB","129":"B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB UB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Strict Transport Security"};


/***/ }),
/* 891 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"1":"6 Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x","2":"2 3 4 9 fB FB F N K D G E A B C d J M H I O P IB BB CB DB GB ZB YB","322":"0 1 7 8 y z"},D:{"2":"0 1 2 3 4 7 8 9 F N K D G E A B C d J M H I O g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","194":"6 P Q R S T U V W X Y Z a b c e f"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"322":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:7,C:"Scoped CSS"};


/***/ }),
/* 892 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d J M"},C:{"1":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l ZB YB"},D:{"1":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB XB"},F:{"1":"0 1 6 b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y Z a bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB","194":"rB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"Subresource Integrity"};


/***/ }),
/* 893 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"M H I AB","516":"2 C d J"},C:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","260":"2 F N K D G E A B C d J M H I O P Q R S"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"F"},E:{"1":"5 N K D G E A B C TB UB VB WB XB p aB","2":"RB","132":"F JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G HB jB kB LB mB nB oB pB qB rB sB tB uB","132":"JB hB"},H:{"260":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"D A"},K:{"1":"L","260":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"SVG in CSS backgrounds"};


/***/ }),
/* 894 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F","4":"N K D"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"SVG filters"};


/***/ }),
/* 895 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"E A B iB","8":"K D G"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g","2":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","130":"h i j k l m n o L q r s t"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","2":"RB"},F:{"1":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB","2":"0 1 g h i j k l m n o L q r s t u v w x y z","130":"6 U V W X Y Z a b c e f"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"258":"vB"},I:{"1":"FB F zB HB 0B 1B","2":"4 wB xB yB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"130":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F","130":"3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"130":"9B"},S:{"2":"AC"}},B:7,C:"SVG fonts"};


/***/ }),
/* 896 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","260":"E A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"1":"0 1 3 4 7 8 9 t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e","132":"f g h i j k l m n o L q r s"},E:{"1":"5 C p aB","2":"F N K D E A B RB JB TB UB WB XB","132":"G VB"},F:{"1":"0 1 5 g h i j k l m n o L q r s t u v w x y z","2":"J M H I O P Q R","4":"B C cB dB eB p EB gB","16":"E bB","132":"6 S T U V W X Y Z a b c e f"},G:{"1":"sB tB uB","2":"JB hB HB jB kB LB nB oB pB qB rB","132":"G mB"},H:{"1":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D","132":"A"},K:{"1":"5 L","4":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","132":"F"},Q:{"132":"8B"},R:{"132":"9B"},S:{"1":"AC"}},B:2,C:"SVG fragment identifiers"};


/***/ }),
/* 897 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","388":"E A B"},B:{"4":"AB","260":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB","4":"FB"},D:{"4":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"RB JB","4":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"4":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"4":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB","4":"4 0B 1B"},J:{"1":"A","2":"D"},K:{"4":"5 A B C L p EB"},L:{"4":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"4":"F 3B 4B 5B 6B 7B"},Q:{"4":"8B"},R:{"4":"9B"},S:{"1":"AC"}},B:2,C:"SVG effects for HTML"};


/***/ }),
/* 898 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G","129":"E A B"},B:{"1":"H I AB","129":"2 C d J M"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","8":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","8":"F N K"},E:{"1":"5 E A B C WB XB p aB","8":"F N RB JB","129":"K D G TB UB VB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"B eB p EB","8":"E bB cB dB"},G:{"1":"nB oB pB qB rB sB tB uB","8":"JB hB HB","129":"G jB kB LB mB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"wB xB yB","129":"FB F zB HB"},J:{"1":"A","129":"D"},K:{"1":"5 C L","8":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"129":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Inline SVG in HTML5"};


/***/ }),
/* 899 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"2 F N K D G E A B C d J M H I O P Q R S T U V W"},E:{"1":"5 E A B C WB XB p aB","2":"RB","4":"JB","132":"F N K D G TB UB VB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","132":"G JB hB HB jB kB LB mB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"wB xB yB","132":"FB F zB HB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"SVG in HTML img element"};


/***/ }),
/* 900 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G E A B"},B:{"1":"AB","8":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","8":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"F"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","8":"RB JB","132":"F N TB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","132":"JB hB HB jB"},H:{"2":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"8":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"SVG SMIL animation"};


/***/ }),
/* 901 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G","257":"E A B"},B:{"1":"AB","257":"2 C d J M H I"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","4":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","4":"RB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 0B 1B","2":"wB xB yB","132":"FB F zB HB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"257":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"SVG (basic support)"};


/***/ }),
/* 902 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e ZB YB"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g"},E:{"1":"5 E A B C RB JB TB UB VB WB XB p aB","2":"F N K D G"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"16":"2B"},P:{"16":"F 3B 4B 5B 6B 7B"},Q:{"16":"8B"},R:{"16":"9B"},S:{"1":"AC"}},B:6,C:"Symbols"};


/***/ }),
/* 903 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"D G E A B","16":"K iB"},B:{"1":"2 C d J M H I AB"},C:{"16":"fB FB ZB YB","129":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d"},E:{"16":"F N RB JB","257":"5 K D G E A B C TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","16":"E"},G:{"769":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"16":"4 FB F wB xB yB zB HB 0B 1B"},J:{"16":"D A"},K:{"16":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"16":"A B"},O:{"16":"2B"},P:{"16":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"16":"9B"},S:{"129":"AC"}},B:1,C:"tabindex global attribute"};


/***/ }),
/* 904 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 d J M H I AB","16":"C"},C:{"1":"0 1 3 4 6 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c ZB YB"},D:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j"},E:{"1":"5 A B WB XB p aB","2":"F N K D G E RB JB TB UB VB","129":"C"},F:{"1":"0 1 6 Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X bB cB dB eB p EB gB"},G:{"1":"nB oB pB qB rB sB uB","2":"G JB hB HB jB kB LB mB","129":"tB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"ES6 Template Literals (Template Strings)"};


/***/ }),
/* 905 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"J M H I AB","2":"C","388":"2 d"},C:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q ZB YB"},D:{"1":"0 1 3 4 7 8 9 e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U","132":"6 V W X Y Z a b c"},E:{"1":"5 E A B C WB XB p aB","2":"F N K D RB JB TB","388":"G VB","514":"UB"},F:{"1":"0 1 6 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","132":"J M H I O P Q"},G:{"1":"nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB","388":"G mB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"HTML templates"};


/***/ }),
/* 906 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G A B iB","16":"E"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","16":"F N"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"B C"},E:{"2":"F K RB JB TB","16":"5 N D G E A B C UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB EB gB","16":"p"},G:{"2":"JB hB HB jB kB","16":"G LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB zB HB 0B 1B","16":"yB"},J:{"2":"A","16":"D"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Test feature - updated"};


/***/ }),
/* 907 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d","33":"AB","161":"J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q ZB YB","161":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","450":"r"},D:{"33":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 B C p aB","33":"F N K D G E A RB JB TB UB VB WB XB"},F:{"2":"5 E B C bB cB dB eB p EB gB","33":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"33":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","36":"JB"},H:{"2":"vB"},I:{"2":"FB","33":"4 F wB xB yB zB HB 0B 1B"},J:{"33":"D A"},K:{"2":"5 A B C p EB","33":"L"},L:{"33":"KB"},M:{"161":"3"},N:{"2":"A B"},O:{"33":"2B"},P:{"33":"F 3B 4B 5B 6B 7B"},Q:{"33":"8B"},R:{"33":"9B"},S:{"161":"AC"}},B:7,C:"CSS text-stroke and text-fill"};


/***/ }),
/* 908 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","16":"RB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","16":"E"},G:{"1":"G hB HB jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Node.textContent"};


/***/ }),
/* 909 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I ZB YB","132":"O"},D:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"TextEncoder & TextDecoder"};


/***/ }),
/* 910 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D iB","66":"G E A"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R ZB YB","66":"S"},D:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB UB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B C bB cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"1":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"1":"A","2":"D"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","66":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"TLS 1.1"};


/***/ }),
/* 911 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D iB","66":"G E A"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S ZB YB","66":"T U V"},D:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F N K RB JB TB UB"},F:{"1":"0 1 5 6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E J M bB","66":"B C cB dB eB p EB gB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"1":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"1":"A","2":"D"},K:{"1":"5 L","2":"A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","66":"A"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"TLS 1.2"};


/***/ }),
/* 912 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"3 4 BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t ZB YB","132":"8 9 IB","834":"0 1 7 u v w x y z"},D:{"1":"OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w","1602":"0 1 3 4 7 8 9 x y z IB BB CB DB GB SB"},E:{"2":"F N K D G E A B C RB JB TB UB VB WB XB p","2052":"5 aB"},F:{"1":"0 1","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w bB cB dB eB p EB gB","1602":"x y z"},G:{"1":"uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:6,C:"TLS 1.3"};


/***/ }),
/* 913 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d","194":"AB","257":"J M H I"},C:{"2":"0 1 2 3 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB ZB YB","16":"4 GB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h","16":"0 i j k l m n o L q r s t u v w x y z","194":"1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"F N K D G RB JB TB UB VB","16":"5 E A B C WB XB p aB"},F:{"2":"5 E B C J M H I O P Q R S T U V W X Y bB cB dB eB p EB gB","16":"0 1 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB","16":"nB oB pB qB rB sB tB uB"},H:{"16":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","16":"4"},J:{"2":"D A"},K:{"2":"5 A B C p EB","16":"L"},L:{"16":"KB"},M:{"16":"3"},N:{"2":"A","16":"B"},O:{"16":"2B"},P:{"16":"F 3B 4B 5B 6B 7B"},Q:{"16":"8B"},R:{"16":"9B"},S:{"2":"AC"}},B:6,C:"Token Binding"};


/***/ }),
/* 914 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","8":"A B"},B:{"1":"AB","578":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 I O P Q R S T v w x y z IB BB CB DB GB","2":"fB FB ZB YB","4":"2 F N K D G E A B C d J M H","194":"6 U V W X Y Z a b c e f g h i j k l m n o L q r s t u"},D:{"1":"0 1 3 4 6 7 8 9 R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"8":"A","260":"B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"2":"AC"}},B:2,C:"Touch events"};


/***/ }),
/* 915 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","132":"E A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z cB dB eB p EB gB","2":"E bB"},G:{"1":"G HB jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB"},H:{"2":"vB"},I:{"1":"4 FB F xB yB zB HB 0B 1B","2":"wB"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"TTF/OTF - TrueType and OpenType font support"};


/***/ }),
/* 916 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"B","2":"K D G E iB","132":"A"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB","260":"TB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E B bB cB dB eB p EB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB","260":"HB"},H:{"1":"vB"},I:{"1":"4 F zB HB 0B 1B","2":"FB wB xB yB"},J:{"1":"A","2":"D"},K:{"1":"5 C L","2":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Typed Arrays"};


/***/ }),
/* 917 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"4 GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L ZB YB","322":"0 1 3 7 8 9 q r s t u v w x y z IB BB CB DB"},D:{"1":"0 1 3 4 7 8 9 k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g","130":"h i j"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 j l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i k bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"322":"AC"}},B:6,C:"FIDO U2F API"};


/***/ }),
/* 918 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB XB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB"},G:{"1":"sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB","16":"rB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:1,C:"unhandledrejection/rejectionhandled events"};


/***/ }),
/* 919 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d J M"},C:{"1":"0 1 3 4 7 8 9 l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k ZB YB"},D:{"1":"0 1 3 4 7 8 9 m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 6 Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S T U V W X Y bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Upgrade Insecure Requests"};


/***/ }),
/* 920 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R","130":"S T U V W X Y Z a"},E:{"1":"5 G E A B C VB WB XB p aB","2":"F N K RB JB TB UB","130":"D"},F:{"1":"0 1 6 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","130":"J M H I"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB","130":"LB"},H:{"2":"vB"},I:{"1":"4 1B","2":"FB F wB xB yB zB HB","130":"0B"},J:{"2":"D","130":"A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"URL API"};


/***/ }),
/* 921 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d J M"},C:{"1":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB","132":"6 Y Z a b c e f g h i j k l m"},D:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r"},E:{"1":"5 B C XB p aB","2":"F N K D G E A RB JB TB UB VB WB"},F:{"1":"0 1 f g h i j k l m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB"},G:{"1":"qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","2":"F"},Q:{"2":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:1,C:"URLSearchParams"};


/***/ }),
/* 922 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D G E A B C"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F RB JB","132":"N TB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","2":"E B bB cB dB eB p EB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"1":"vB"},I:{"1":"4 FB F zB HB 0B 1B","2":"wB xB yB"},J:{"1":"D A"},K:{"1":"5 C L EB","2":"A B p"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"ECMAScript 5 Strict Mode"};


/***/ }),
/* 923 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 7 8 9 h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB XB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"User Timing API"};


/***/ }),
/* 924 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"H I AB","2":"2 C d J M"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v ZB YB","4609":"3 4 IB BB CB DB GB","4674":"9","5698":"8","7490":"0 w x y z","7746":"1 7"},D:{"1":"4 GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","4097":"3","4290":"7 8 9","6148":"IB BB CB DB"},E:{"2":"F N K D G E A RB JB TB UB VB WB XB","4609":"5 B C p aB"},F:{"1":"0 1 x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r bB cB dB eB p EB gB","4097":"w","6148":"s t u v"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB","4097":"rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"4097":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B","4097":"6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:5,C:"Variable fonts"};


/***/ }),
/* 925 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB F N K D G E A ZB YB","33":"2 B C d J"},D:{"1":"0 1 3 4 6 7 8 9 Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"Vibration API"};


/***/ }),
/* 926 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB","260":"2 F N K D G E A B C d J M H I O ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"F N K D G E A TB UB VB WB XB","2":"RB JB","513":"5 B C p aB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB","513":"rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","132":"wB xB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Video element"};


/***/ }),
/* 927 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I","322":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b ZB YB","194":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n","322":"0 1 3 4 7 8 9 o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N K RB JB TB"},F:{"2":"5 E B C J M H I O P Q R S T U V W X Y Z a bB cB dB eB p EB gB","322":"0 1 6 b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","322":"L"},L:{"322":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"194":"AC"}},B:1,C:"Video Tracks"};


/***/ }),
/* 928 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","132":"E","260":"A B"},B:{"1":"M H I AB","260":"2 C d J"},C:{"1":"0 1 3 4 6 7 8 9 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H I O","260":"P Q R S T U"},E:{"1":"5 D G E A B C UB VB WB XB p aB","2":"F N RB JB TB","260":"K"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB","516":"LB","772":"kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"260":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"Viewport units: vw, vh, vmin, vmax"};


/***/ }),
/* 929 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D iB","4":"G E A B"},B:{"4":"2 C d J M H I AB"},C:{"4":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"4":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"RB JB","4":"5 F N K D G E A B C TB UB VB WB XB p aB"},F:{"2":"E","4":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"4":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"4":"vB"},I:{"2":"FB F wB xB yB zB HB","4":"4 0B 1B"},J:{"2":"D A"},K:{"4":"5 A B C L p EB"},L:{"4":"KB"},M:{"4":"3"},N:{"4":"A B"},O:{"2":"2B"},P:{"4":"F 3B 4B 5B 6B 7B"},Q:{"4":"8B"},R:{"4":"9B"},S:{"4":"AC"}},B:2,C:"WAI-ARIA Accessibility features"};


/***/ }),
/* 930 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"M H I AB","2":"2 C d","578":"J"},C:{"1":"0 1 3 4 7 8 9 w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L ZB YB","194":"q r s t u","1025":"v"},D:{"1":"0 1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t","322":"u v w x y z"},E:{"1":"5 B C p aB","2":"F N K D G E A RB JB TB UB VB WB XB"},F:{"1":"0 1 n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g bB cB dB eB p EB gB","322":"h i j k l m"},G:{"1":"rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB pB qB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"5B 6B 7B","2":"F 3B 4B"},Q:{"322":"8B"},R:{"2":"9B"},S:{"194":"AC"}},B:6,C:"WebAssembly"};


/***/ }),
/* 931 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z dB eB p EB gB","2":"E bB cB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","16":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"Wav audio format"};


/***/ }),
/* 932 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D iB","2":"G E A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C JB TB UB VB WB XB p aB","16":"RB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","16":"E"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB"},H:{"1":"vB"},I:{"1":"4 FB F yB zB HB 0B 1B","16":"wB xB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"wbr (word break opportunity) element"};


/***/ }),
/* 933 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","260":"AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b ZB YB","260":"3 4 7 8 9 IB BB CB DB GB","516":"0 1 q r s t u v w x y z","580":"6 c e f g h i j k l m n o L"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e","132":"f g h","260":"0 1 3 4 7 8 9 i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"aB","2":"F N K D G E A RB JB TB UB VB WB XB","4":"5","1090":"B C p"},F:{"2":"5 E B C J M H I O P Q R bB cB dB eB p EB gB","132":"S T U","260":"0 1 6 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB","4":"uB","1090":"rB sB tB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","260":"4"},J:{"2":"D A"},K:{"2":"5 A B C p EB","260":"L"},L:{"260":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"260":"2B"},P:{"260":"F 3B 4B 5B 6B 7B"},Q:{"260":"8B"},R:{"260":"9B"},S:{"516":"AC"}},B:5,C:"Web Animations API"};


/***/ }),
/* 934 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M","514":"H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h","132":"0 1 3 7 8 9 i j k l m n o L q r s t u v w x y z IB BB CB DB","260":"4 GB SB OB MB lB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB","132":"sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","132":"L"},L:{"1":"KB"},M:{"132":"3"},N:{"2":"A B"},O:{"132":"2B"},P:{"132":"F 3B 4B 5B 6B 7B"},Q:{"132":"8B"},R:{"132":"9B"},S:{"2":"AC"}},B:5,C:"Web App Manifest"};


/***/ }),
/* 935 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I","1025":"AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n","194":"o L q r s t u v","706":"w x y","1025":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e bB cB dB eB p EB gB","450":"f g h i","706":"j k l","1025":"0 1 m n o L q r s t u v w x y z"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B 1B","1025":"4"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1025":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"4B 5B 6B 7B","2":"F 3B"},Q:{"706":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"Web Bluetooth"};


/***/ }),
/* 936 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d J M H I AB"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"2":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","258":"I O P Q R S T"},E:{"1":"5 aB","2":"F N K D G E A B C RB JB TB VB WB XB p","16":"UB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"uB","2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB"},H:{"2":"vB"},I:{"2":"FB F wB xB yB zB HB 0B","514":"4 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"514":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F","514":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"16":"9B"},S:{"2":"AC"}},B:7,C:"Web Share API"};


/***/ }),
/* 937 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"I AB","2":"C","226":"2 d J M H"},C:{"1":"3 4 8 9 IB BB CB DB GB","2":"0 1 2 6 7 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z ZB YB"},D:{"1":"4 GB SB OB MB lB NB KB AB PB QB","2":"0 1 2 3 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB"},E:{"2":"F N K D G E A B C RB JB TB UB VB WB XB p","322":"5 aB"},F:{"1":"0 1 x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:2,C:"Web Authentication API"};


/***/ }),
/* 938 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"iB","8":"K D G E A","129":"B"},B:{"1":"AB","129":"2 C d J M H I"},C:{"1":"0 1 3 4 6 7 8 9 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","129":"2 F N K D G E A B C d J M H I O P Q R S"},D:{"1":"0 1 3 4 6 7 8 9 c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N K D","129":"2 G E A B C d J M H I O P Q R S T U V W X Y Z a b"},E:{"1":"5 G E A B C WB XB p aB","2":"F N RB JB","129":"K D TB UB VB"},F:{"1":"0 1 6 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB","129":"5 C J M H I"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB LB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"1":"A","2":"D"},K:{"1":"5 C L","2":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"8":"A","129":"B"},O:{"129":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"129":"AC"}},B:6,C:"WebGL - 3D Canvas graphics"};


/***/ }),
/* 939 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T ZB YB","194":"l m n","450":"6 U V W X Y Z a b c e f g h i j k","2242":"o L q r s t"},D:{"1":"0 1 3 4 7 8 9 z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l","578":"m n o L q r s t u v w x y"},E:{"2":"F N K D G E A RB JB TB UB VB WB","1090":"5 B C XB p aB"},F:{"1":"0 1 m n o L q r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB","1090":"tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"5B 6B 7B","2":"F 3B 4B"},Q:{"578":"8B"},R:{"2":"9B"},S:{"2242":"AC"}},B:6,C:"WebGL 2.0"};


/***/ }),
/* 940 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G iB","8":"E A B"},B:{"1":"AB","4":"d J M H I","8":"2 C"},C:{"1":"0 1 3 4 6 7 8 9 X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","4":"2 F N K D G E A B C d J M H I O P Q R S T U V W"},D:{"1":"0 1 3 4 6 7 8 9 U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N","4":"2 K D G E A B C d J M H I O P Q R S T"},E:{"2":"RB","8":"F N K D G E A B C JB TB UB VB WB XB p","132":"5 aB"},F:{"1":"0 1 6 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E bB cB dB","4":"5 B C J eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB","132":"uB"},H:{"2":"vB"},I:{"1":"4","2":"wB xB","4":"FB F yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C p EB","4":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"8":"A B"},O:{"1":"2B"},P:{"1":"3B 4B 5B 6B 7B","4":"F"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:6,C:"WebM video format"};


/***/ }),
/* 941 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"I AB","2":"2 C d J M H"},C:{"1":"3 4 DB GB","2":"fB FB ZB YB","8":"0 1 2 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB"},D:{"1":"0 1 3 4 6 7 8 9 b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F N","8":"K D G","132":"2 E A B C d J M H I O P Q R","260":"S T U V W X Y Z a"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 6 O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E bB cB dB","8":"B eB","132":"p EB gB","260":"5 C J M H I"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 HB 0B 1B","2":"FB wB xB yB","132":"F zB"},J:{"2":"D A"},K:{"1":"5 C L p EB","2":"A","132":"B"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"8":"AC"}},B:7,C:"WebP image format"};


/***/ }),
/* 942 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB ZB YB","132":"F N","292":"K D G E A"},D:{"1":"0 1 3 4 6 7 8 9 M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"2 F N K D G E A B C d","260":"J"},E:{"1":"5 D G E A B C VB WB XB p aB","2":"F RB JB","132":"N TB","260":"K UB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E bB cB dB eB","132":"B C p EB gB"},G:{"1":"G kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB","132":"HB jB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","129":"D"},K:{"1":"5 L","2":"A","132":"B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Web Sockets"};


/***/ }),
/* 943 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"2":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"3 4 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w","66":"0 1 7 8 x y z"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 r s t u v w x y z","2":"5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j bB cB dB eB p EB gB","66":"k l m n o L q"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"1":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"2":"F 3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"2":"9B"},S:{"2":"AC"}},B:7,C:"WebUSB"};


/***/ }),
/* 944 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"2":"2 C d","322":"AB","513":"J M H I"},C:{"2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w ZB YB","129":"0 1 3 4 7 8 9 y z IB BB CB DB GB","194":"x"},D:{"2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","322":"0 1 3 4 7 8 9 IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"2":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"2":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"2":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"2":"vB"},I:{"2":"4 FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"2":"5 A B C L p EB"},L:{"2049":"KB"},M:{"2":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1025":"F","1028":"3B 4B 5B 6B 7B"},Q:{"2":"8B"},R:{"322":"9B"},S:{"2":"AC"}},B:7,C:"WebXR API"};


/***/ }),
/* 945 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"2":"2 fB FB F N K D G E A B C d J M H I O P Q R S ZB YB","66":"T U V W X Y Z","129":"0 1 3 4 6 7 8 9 a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB"},D:{"1":"0 1 3 4 6 7 8 9 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 F N K D G E A B C d J M H"},E:{"1":"5 K D G E A B C UB VB WB XB p aB","2":"F N RB JB TB"},F:{"1":"0 1 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB jB kB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB F wB xB yB zB HB"},J:{"1":"A","2":"D"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"B","2":"A"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"129":"AC"}},B:5,C:"WebVTT - Web Video Text Tracks"};


/***/ }),
/* 946 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","2":"iB","8":"K D G E"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","8":"fB FB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","8":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z eB p EB gB","2":"E bB","8":"cB dB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 wB 0B 1B","2":"FB F xB yB zB HB"},J:{"1":"D A"},K:{"1":"5 B C L p EB","8":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Web Workers"};


/***/ }),
/* 947 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"AB","2":"2 C d J M H I"},C:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X ZB YB","194":"6 Y Z a b c e"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e"},E:{"1":"5 A B C WB XB p aB","2":"F N K D G E RB JB TB UB VB"},F:{"1":"0 1 6 T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R S bB cB dB eB p EB gB"},G:{"1":"oB pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"CSS will-change property"};


/***/ }),
/* 948 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB YB","2":"fB FB ZB"},D:{"1":"0 1 2 3 4 6 7 8 9 N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"F"},E:{"1":"5 K D G E A B C TB UB VB WB XB p aB","2":"F N RB JB"},F:{"1":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z p EB gB","2":"E B bB cB dB eB"},G:{"1":"G jB kB LB mB nB oB pB qB rB sB tB uB","2":"JB hB HB"},H:{"2":"vB"},I:{"1":"4 0B 1B","2":"FB wB xB yB zB HB","130":"F"},J:{"1":"D A"},K:{"1":"5 B C L p EB","2":"A"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:2,C:"WOFF - Web Open Font Format"};


/***/ }),
/* 949 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E A B iB"},B:{"1":"d J M H I AB","2":"2 C"},C:{"1":"0 1 3 4 7 8 9 i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 6 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h ZB YB"},D:{"1":"0 1 3 4 7 8 9 f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","2":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e"},E:{"1":"5 C aB","2":"F N K D G E RB JB TB UB VB WB","132":"A B XB p"},F:{"1":"0 1 6 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C J M H I O P Q R bB cB dB eB p EB gB"},G:{"1":"pB qB rB sB tB uB","2":"G JB hB HB jB kB LB mB nB oB"},H:{"2":"vB"},I:{"1":"4","2":"FB F wB xB yB zB HB 0B 1B"},J:{"2":"D A"},K:{"1":"L","2":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"2":"A B"},O:{"2":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"WOFF 2.0 - Web Open Font Format"};


/***/ }),
/* 950 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"K D G E A B iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 3 4 6 7 8 9 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"2 fB FB F N K D G E A B C d ZB YB"},D:{"1":"0 1 3 4 7 8 9 n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m"},E:{"1":"5 E A B C WB XB p aB","4":"F N K D G RB JB TB UB VB"},F:{"1":"0 1 6 a b c e f g h i j k l m n o L q r s t u v w x y z","2":"5 E B C bB cB dB eB p EB gB","4":"J M H I O P Q R S T U V W X Y Z"},G:{"1":"nB oB pB qB rB sB tB uB","4":"G JB hB HB jB kB LB mB"},H:{"2":"vB"},I:{"1":"4","4":"FB F wB xB yB zB HB 0B 1B"},J:{"4":"D A"},K:{"2":"5 A B C p EB","4":"L"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"4":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"4":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:5,C:"CSS3 word-break"};


/***/ }),
/* 951 */
/***/ (function(module, exports) {

module.exports={A:{A:{"4":"K D G E A B iB"},B:{"1":"I AB","4":"2 C d J M H"},C:{"1":"0 1 3 4 7 8 9 s t u v w x y z IB BB CB DB GB","2":"fB FB","4":"2 6 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","4":"2 F N K D G E A B C d J M H I O P Q R"},E:{"1":"5 D G E A B C UB VB WB XB p aB","4":"F N K RB JB TB"},F:{"1":"0 1 5 6 J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E bB cB","4":"B C dB eB p EB gB"},G:{"1":"G LB mB nB oB pB qB rB sB tB uB","4":"JB hB HB jB kB"},H:{"4":"vB"},I:{"1":"4 0B 1B","4":"FB F wB xB yB zB HB"},J:{"1":"A","4":"D"},K:{"1":"L","4":"5 A B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"4":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"4":"AC"}},B:5,C:"CSS3 Overflow-wrap"};


/***/ }),
/* 952 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D iB","132":"G E","260":"A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB","2":"fB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C TB UB VB WB XB p aB","2":"RB JB"},F:{"1":"0 1 5 6 B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB","2":"E"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"4":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"Cross-document messaging"};


/***/ }),
/* 953 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"G E A B","2":"K D iB"},B:{"1":"2 C d J M H I","4":"AB"},C:{"1":"0 1 3 4 6 7 8 9 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","4":"2 F N K D G E A B C d J M H","16":"fB FB ZB YB"},D:{"4":"0 1 3 4 6 7 8 9 V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"2 F N K D G E A B C d J M H I O P Q R S T U"},E:{"4":"5 K D G E A B C TB UB VB WB XB p aB","16":"F N RB JB"},F:{"4":"0 1 5 6 C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z gB","16":"E B bB cB dB eB p EB"},G:{"4":"G LB mB nB oB pB qB rB sB tB uB","16":"JB hB HB jB kB"},H:{"2":"vB"},I:{"4":"4 F zB HB 0B 1B","16":"FB wB xB yB"},J:{"4":"D A"},K:{"4":"5 L","16":"A B C p EB"},L:{"4":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"4":"2B"},P:{"4":"F 3B 4B 5B 6B 7B"},Q:{"4":"8B"},R:{"4":"9B"},S:{"1":"AC"}},B:6,C:"X-Frame-Options HTTP header"};


/***/ }),
/* 954 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"K D G E iB","132":"A B"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","2":"fB FB","260":"A B","388":"K D G E","900":"F N ZB YB"},D:{"1":"0 1 3 4 6 7 8 9 a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","16":"F N K","132":"Y Z","388":"2 D G E A B C d J M H I O P Q R S T U V W X"},E:{"1":"5 G E A B C VB WB XB p aB","2":"F RB JB","132":"D UB","388":"N K TB"},F:{"1":"0 1 5 6 C I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","2":"E B bB cB dB eB p EB gB","132":"J M H"},G:{"1":"G mB nB oB pB qB rB sB tB uB","2":"JB hB HB","132":"LB","388":"jB kB"},H:{"2":"vB"},I:{"1":"4 1B","2":"wB xB yB","388":"0B","900":"FB F zB HB"},J:{"132":"A","388":"D"},K:{"1":"5 C L","2":"A B p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"132":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:1,C:"XMLHttpRequest advanced features"};


/***/ }),
/* 955 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"E A B","2":"K D G iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"1":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"1":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"1":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"1":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"1":"vB"},I:{"1":"4 FB F wB xB yB zB HB 0B 1B"},J:{"1":"D A"},K:{"1":"5 A B C L p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"2":"9B"},S:{"1":"AC"}},B:1,C:"XHTML served as application/xhtml+xml"};


/***/ }),
/* 956 */
/***/ (function(module, exports) {

module.exports={A:{A:{"2":"E A B iB","4":"K D G"},B:{"2":"2 C d J M H I","8":"AB"},C:{"8":"0 1 2 3 4 6 7 8 9 fB FB F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB ZB YB"},D:{"8":"0 1 2 3 4 6 7 8 9 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB"},E:{"8":"5 F N K D G E A B C RB JB TB UB VB WB XB p aB"},F:{"8":"0 1 5 6 E B C J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z bB cB dB eB p EB gB"},G:{"8":"G JB hB HB jB kB LB mB nB oB pB qB rB sB tB uB"},H:{"8":"vB"},I:{"8":"4 FB F wB xB yB zB HB 0B 1B"},J:{"8":"D A"},K:{"8":"5 A B C L p EB"},L:{"8":"KB"},M:{"8":"3"},N:{"2":"A B"},O:{"8":"2B"},P:{"8":"F 3B 4B 5B 6B 7B"},Q:{"8":"8B"},R:{"8":"9B"},S:{"8":"AC"}},B:7,C:"XHTML+SMIL animation"};


/***/ }),
/* 957 */
/***/ (function(module, exports) {

module.exports={A:{A:{"1":"A B","260":"K D G E iB"},B:{"1":"2 C d J M H I AB"},C:{"1":"0 1 2 3 4 6 7 8 9 C d J M H I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB","132":"B","260":"fB FB F N K D ZB YB","516":"G E A"},D:{"1":"0 1 3 4 6 7 8 9 a b c e f g h i j k l m n o L q r s t u v w x y z IB BB CB DB GB SB OB MB lB NB KB AB PB QB","132":"2 F N K D G E A B C d J M H I O P Q R S T U V W X Y Z"},E:{"1":"5 G E A B C VB WB XB p aB","132":"F N K D RB JB TB UB"},F:{"1":"0 1 6 I O P Q R S T U V W X Y Z a b c e f g h i j k l m n o L q r s t u v w x y z","16":"E bB","132":"5 B C J M H cB dB eB p EB gB"},G:{"1":"G mB nB oB pB qB rB sB tB uB","132":"JB hB HB jB kB LB"},H:{"132":"vB"},I:{"1":"4 0B 1B","132":"FB F wB xB yB zB HB"},J:{"132":"D A"},K:{"1":"L","16":"A","132":"5 B C p EB"},L:{"1":"KB"},M:{"1":"3"},N:{"1":"A B"},O:{"1":"2B"},P:{"1":"F 3B 4B 5B 6B 7B"},Q:{"1":"8B"},R:{"1":"9B"},S:{"1":"AC"}},B:4,C:"DOM Parsing and Serialization"};


/***/ }),
/* 958 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.contains = contains;
exports.parseCaniuseData = parseCaniuseData;
exports.cleanBrowsersList = cleanBrowsersList;

var _lodash = __webpack_require__(959);

var _lodash2 = _interopRequireDefault(_lodash);

var _browserslist = __webpack_require__(14);

var _browserslist2 = _interopRequireDefault(_browserslist);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function contains(str, substr) {
  return !!~str.indexOf(substr);
}

function parseCaniuseData(feature, browsers) {
  var support = {};
  var letters;
  var letter;

  browsers.forEach(function (browser) {
    support[browser] = {};
    for (var info in feature.stats[browser]) {
      letters = feature.stats[browser][info].replace(/#\d+/, "").trim().split(" ");
      info = parseFloat(info.split("-")[0]); //if info is a range, take the left
      if (isNaN(info)) continue;
      for (var i = 0; i < letters.length; i++) {
        letter = letters[i];
        if (letter === "d") {
          // skip this letter, we don't support it yet
          continue;
        } else if (letter === "y") {
          // min support asked, need to find the min value
          if (typeof support[browser][letter] === "undefined" || info < support[browser][letter]) {
            support[browser][letter] = info;
          }
        } else {
          // any other support, need to find the max value
          if (typeof support[browser][letter] === "undefined" || info > support[browser][letter]) {
            support[browser][letter] = info;
          }
        }
      }
    }
  });

  return support;
}

function cleanBrowsersList(browserList) {
  return (0, _lodash2.default)((0, _browserslist2.default)(browserList).map(function (browser) {
    return browser.split(" ")[0];
  }));
}

/***/ }),
/* 959 */
/***/ (function(module, exports) {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array ? array.length : 0;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  if (value !== value) {
    return baseFindIndex(array, baseIsNaN, fromIndex);
  }
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/**
 * Checks if a cache value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    Set = getNative(root, 'Set'),
    nativeCreate = getNative(Object, 'create');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values ? values.length : 0;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each
 * element is kept.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length)
    ? baseUniq(array)
    : [];
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = uniq;


/***/ }),
/* 960 */
/***/ (function(module) {

module.exports = {"align-content":"normal","align-items":"normal","align-self":"auto","animation-delay":"0s","animation-direction":"normal","animation-duration":"0s","animation-fill-mode":"none","animation-iteration-count":"1","animation-name":"none","animation-timing-function":"ease","appearance":"auto","azimuth":"center","backdrop-filter":"none","background-attachment":"scroll","background-blend-mode":"normal","background-image":"none","background-position":"0% 0%","background-position-x":"left","background-position-y":"top","background-repeat":"repeat","block-overflow":"clip","block-size":"auto","border-block-style":"none","border-block-width":"medium","border-block-end-style":"none","border-block-end-width":"medium","border-block-start-style":"none","border-block-start-width":"medium","border-bottom-left-radius":"0","border-bottom-right-radius":"0","border-bottom-style":"none","border-bottom-width":"medium","border-end-end-radius":"0","border-end-start-radius":"0","border-image-outset":"0","border-image-slice":"100%","border-image-source":"none","border-image-width":"1","border-inline-style":"none","border-inline-width":"medium","border-inline-end-style":"none","border-inline-end-width":"medium","border-inline-start-style":"none","border-inline-start-width":"medium","border-left-style":"none","border-left-width":"medium","border-right-style":"none","border-right-width":"medium","border-spacing":"0","border-start-end-radius":"0","border-start-start-radius":"0","border-top-left-radius":"0","border-top-right-radius":"0","border-top-style":"none","border-top-width":"medium","bottom":"auto","box-decoration-break":"slice","box-shadow":"none","break-after":"auto","break-before":"auto","break-inside":"auto","caption-side":"top","caret-color":"auto","clear":"none","clip":"auto","clip-path":"none","column-count":"auto","column-gap":"normal","column-rule-style":"none","column-rule-width":"medium","column-span":"none","column-width":"auto","contain":"none","content":"normal","counter-increment":"none","counter-reset":"none","cursor":"auto","direction":"ltr","empty-cells":"show","filter":"none","flex-basis":"auto","flex-direction":"row","flex-grow":"0","flex-shrink":"1","flex-wrap":"nowrap","float":"none","font-feature-settings":"normal","font-kerning":"auto","font-language-override":"normal","font-optical-sizing":"auto","font-variation-settings":"normal","font-size":"medium","font-size-adjust":"none","font-stretch":"normal","font-style":"normal","font-variant":"normal","font-variant-alternates":"normal","font-variant-caps":"normal","font-variant-east-asian":"normal","font-variant-ligatures":"normal","font-variant-numeric":"normal","font-variant-position":"normal","font-weight":"normal","grid-auto-columns":"auto","grid-auto-flow":"row","grid-auto-rows":"auto","grid-column-end":"auto","grid-column-gap":"0","grid-column-start":"auto","grid-row-end":"auto","grid-row-gap":"0","grid-row-start":"auto","grid-template-areas":"none","grid-template-columns":"none","grid-template-rows":"none","hanging-punctuation":"none","height":"auto","hyphens":"manual","image-orientation":"0deg","image-rendering":"auto","image-resolution":"1dppx","ime-mode":"auto","initial-letter":"normal","initial-letter-align":"auto","inline-size":"auto","inset":"auto","inset-block":"auto","inset-block-end":"auto","inset-block-start":"auto","inset-inline":"auto","inset-inline-end":"auto","inset-inline-start":"auto","isolation":"auto","justify-content":"normal","justify-items":"legacy","justify-self":"auto","left":"auto","letter-spacing":"normal","line-break":"auto","line-clamp":"none","line-height":"normal","list-style-image":"none","list-style-type":"disc","margin-block":"0","margin-block-end":"0","margin-block-start":"0","margin-bottom":"0","margin-inline":"0","margin-inline-end":"0","margin-inline-start":"0","margin-left":"0","margin-right":"0","margin-top":"0","mask-border-mode":"alpha","mask-border-outset":"0","mask-border-slice":"0","mask-border-source":"none","mask-border-width":"auto","mask-composite":"add","mask-image":"none","mask-position":"center","mask-size":"auto","max-block-size":"0","max-height":"none","max-inline-size":"0","max-lines":"none","max-width":"none","min-block-size":"0","min-height":"0","min-inline-size":"0","min-width":"0","mix-blend-mode":"normal","object-fit":"fill","offset-anchor":"auto","offset-distance":"0","offset-path":"none","offset-position":"auto","offset-rotate":"auto","opacity":"1.0","order":"0","orphans":"2","outline-offset":"0","outline-style":"none","outline-width":"medium","overflow-anchor":"auto","overflow-block":"auto","overflow-inline":"auto","overflow-wrap":"normal","padding-block":"0","padding-block-end":"0","padding-block-start":"0","padding-bottom":"0","padding-inline":"0","padding-inline-end":"0","padding-inline-start":"0","padding-left":"0","padding-right":"0","padding-top":"0","page-break-after":"auto","page-break-before":"auto","page-break-inside":"auto","paint-order":"normal","perspective":"none","place-content":"normal","pointer-events":"auto","position":"static","resize":"none","right":"auto","rotate":"none","row-gap":"normal","ruby-position":"over","scale":"none","scrollbar-color":"auto","scrollbar-width":"auto","scroll-behavior":"auto","scroll-margin":"0","scroll-margin-block":"0","scroll-margin-block-start":"0","scroll-margin-block-end":"0","scroll-margin-bottom":"0","scroll-margin-inline":"0","scroll-margin-inline-start":"0","scroll-margin-inline-end":"0","scroll-margin-left":"0","scroll-margin-right":"0","scroll-margin-top":"0","scroll-padding":"auto","scroll-padding-block":"auto","scroll-padding-block-start":"auto","scroll-padding-block-end":"auto","scroll-padding-bottom":"auto","scroll-padding-inline":"auto","scroll-padding-inline-start":"auto","scroll-padding-inline-end":"auto","scroll-padding-left":"auto","scroll-padding-right":"auto","scroll-padding-top":"auto","scroll-snap-align":"none","scroll-snap-coordinate":"none","scroll-snap-points-x":"none","scroll-snap-points-y":"none","scroll-snap-stop":"normal","scroll-snap-type":"none","shape-image-threshold":"0.0","shape-margin":"0","shape-outside":"none","tab-size":"8","table-layout":"auto","text-align-last":"auto","text-combine-upright":"none","text-decoration-line":"none","text-decoration-skip-ink":"auto","text-decoration-style":"solid","text-emphasis-style":"none","text-indent":"0","text-justify":"auto","text-orientation":"mixed","text-overflow":"clip","text-rendering":"auto","text-shadow":"none","text-transform":"none","text-underline-position":"auto","top":"auto","touch-action":"auto","transform":"none","transform-style":"flat","transition-delay":"0s","transition-duration":"0s","transition-property":"all","transition-timing-function":"ease","translate":"none","unicode-bidi":"normal","white-space":"normal","widows":"2","width":"auto","will-change":"auto","word-break":"normal","word-spacing":"normal","word-wrap":"normal","z-index":"auto"};

/***/ }),
/* 961 */
/***/ (function(module) {

module.exports = {"background-clip":"border-box","background-color":"transparent","background-origin":"padding-box","background-size":"auto auto","border-block-color":"currentcolor","border-block-end-color":"currentcolor","border-block-start-color":"currentcolor","border-bottom-color":"currentcolor","border-collapse":"separate","border-inline-color":"currentcolor","border-inline-end-color":"currentcolor","border-inline-start-color":"currentcolor","border-left-color":"currentcolor","border-right-color":"currentcolor","border-top-color":"currentcolor","box-sizing":"content-box","column-rule-color":"currentcolor","font-synthesis":"weight style","mask-clip":"border-box","mask-mode":"match-source","mask-origin":"border-box","mask-repeat":"repeat","mask-type":"luminance","ruby-align":"space-around","ruby-merge":"separate","text-decoration-color":"currentcolor","text-emphasis-color":"currentcolor","text-emphasis-position":"over right","transform-box":"border-box","transform-origin":"50% 50% 0","vertical-align":"baseline","writing-mode":"horizontal-tb"};

/***/ }),
/* 962 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _cssnanoUtilGetArguments = __webpack_require__(15);

var _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);

var _isColorStop = __webpack_require__(967);

var _isColorStop2 = _interopRequireDefault(_isColorStop);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const angles = {
    top: '0deg',
    right: '90deg',
    bottom: '180deg',
    left: '270deg'
};

function isLessThan(a, b) {
    return a.unit.toLowerCase() === b.unit.toLowerCase() && parseFloat(a.number) >= parseFloat(b.number);
}

function optimise(decl) {
    const value = decl.value;

    if (!~value.toLowerCase().indexOf('gradient')) {
        return;
    }

    decl.value = (0, _postcssValueParser2.default)(value).walk(node => {
        if (node.type !== 'function' || !node.nodes.length) {
            return false;
        }

        const lowerCasedValue = node.value.toLowerCase();

        if (lowerCasedValue === 'linear-gradient' || lowerCasedValue === 'repeating-linear-gradient' || lowerCasedValue === '-webkit-linear-gradient' || lowerCasedValue === '-webkit-repeating-linear-gradient') {
            let args = (0, _cssnanoUtilGetArguments2.default)(node);

            if (node.nodes[0].value.toLowerCase() === 'to' && args[0].length === 3) {
                node.nodes = node.nodes.slice(2);
                node.nodes[0].value = angles[node.nodes[0].value.toLowerCase()];
            }

            let lastStop = null;

            args.forEach((arg, index) => {
                if (!arg[2]) {
                    return;
                }

                let isFinalStop = index === args.length - 1;
                let thisStop = (0, _postcssValueParser.unit)(arg[2].value);

                if (lastStop === null) {
                    lastStop = thisStop;

                    if (!isFinalStop && lastStop && lastStop.number === '0' && lastStop.unit.toLowerCase() !== 'deg') {
                        arg[1].value = arg[2].value = '';
                    }

                    return;
                }

                if (lastStop && thisStop && isLessThan(lastStop, thisStop)) {
                    arg[2].value = 0;
                }

                lastStop = thisStop;

                if (isFinalStop && arg[2].value === '100%') {
                    arg[1].value = arg[2].value = '';
                }
            });

            return false;
        }

        if (lowerCasedValue === 'radial-gradient' || lowerCasedValue === 'repeating-radial-gradient') {
            let args = (0, _cssnanoUtilGetArguments2.default)(node);
            let lastStop;

            const hasAt = args[0].find(n => n.value.toLowerCase() === 'at');

            args.forEach((arg, index) => {
                if (!arg[2] || !index && hasAt) {
                    return;
                }

                let thisStop = (0, _postcssValueParser.unit)(arg[2].value);

                if (!lastStop) {
                    lastStop = thisStop;

                    return;
                }

                if (lastStop && thisStop && isLessThan(lastStop, thisStop)) {
                    arg[2].value = 0;
                }

                lastStop = thisStop;
            });

            return false;
        }

        if (lowerCasedValue === '-webkit-radial-gradient' || lowerCasedValue === '-webkit-repeating-radial-gradient') {
            let args = (0, _cssnanoUtilGetArguments2.default)(node);
            let lastStop;

            args.forEach(arg => {
                let color;
                let stop;

                if (arg[2] !== undefined) {
                    if (arg[0].type === 'function') {
                        color = `${arg[0].value}(${(0, _postcssValueParser.stringify)(arg[0].nodes)})`;
                    } else {
                        color = arg[0].value;
                    }

                    if (arg[2].type === 'function') {
                        stop = `${arg[2].value}(${(0, _postcssValueParser.stringify)(arg[2].nodes)})`;
                    } else {
                        stop = arg[2].value;
                    }
                } else {
                    if (arg[0].type === 'function') {
                        color = `${arg[0].value}(${(0, _postcssValueParser.stringify)(arg[0].nodes)})`;
                    }

                    color = arg[0].value;
                }

                color = color.toLowerCase();

                const colorStop = stop || stop === 0 ? (0, _isColorStop2.default)(color, stop.toLowerCase()) : (0, _isColorStop2.default)(color);

                if (!colorStop || !arg[2]) {
                    return;
                }

                let thisStop = (0, _postcssValueParser.unit)(arg[2].value);

                if (!lastStop) {
                    lastStop = thisStop;

                    return;
                }

                if (lastStop && thisStop && isLessThan(lastStop, thisStop)) {
                    arg[2].value = 0;
                }

                lastStop = thisStop;
            });

            return false;
        }
    }).toString();
}

exports.default = _postcss2.default.plugin('postcss-minify-gradients', () => {
    return css => css.walkDecls(optimise);
});
module.exports = exports['default'];

/***/ }),
/* 963 */
/***/ (function(module, exports) {

var openParentheses = "(".charCodeAt(0);
var closeParentheses = ")".charCodeAt(0);
var singleQuote = "'".charCodeAt(0);
var doubleQuote = '"'.charCodeAt(0);
var backslash = "\\".charCodeAt(0);
var slash = "/".charCodeAt(0);
var comma = ",".charCodeAt(0);
var colon = ":".charCodeAt(0);
var star = "*".charCodeAt(0);

module.exports = function(input) {
  var tokens = [];
  var value = input;

  var next, quote, prev, token, escape, escapePos, whitespacePos;
  var pos = 0;
  var code = value.charCodeAt(pos);
  var max = value.length;
  var stack = [{ nodes: tokens }];
  var balanced = 0;
  var parent;

  var name = "";
  var before = "";
  var after = "";

  while (pos < max) {
    // Whitespaces
    if (code <= 32) {
      next = pos;
      do {
        next += 1;
        code = value.charCodeAt(next);
      } while (code <= 32);
      token = value.slice(pos, next);

      prev = tokens[tokens.length - 1];
      if (code === closeParentheses && balanced) {
        after = token;
      } else if (prev && prev.type === "div") {
        prev.after = token;
      } else if (
        code === comma ||
        code === colon ||
        (code === slash && value.charCodeAt(next + 1) !== star)
      ) {
        before = token;
      } else {
        tokens.push({
          type: "space",
          sourceIndex: pos,
          value: token
        });
      }

      pos = next;

      // Quotes
    } else if (code === singleQuote || code === doubleQuote) {
      next = pos;
      quote = code === singleQuote ? "'" : '"';
      token = {
        type: "string",
        sourceIndex: pos,
        quote: quote
      };
      do {
        escape = false;
        next = value.indexOf(quote, next + 1);
        if (~next) {
          escapePos = next;
          while (value.charCodeAt(escapePos - 1) === backslash) {
            escapePos -= 1;
            escape = !escape;
          }
        } else {
          value += quote;
          next = value.length - 1;
          token.unclosed = true;
        }
      } while (escape);
      token.value = value.slice(pos + 1, next);

      tokens.push(token);
      pos = next + 1;
      code = value.charCodeAt(pos);

      // Comments
    } else if (code === slash && value.charCodeAt(pos + 1) === star) {
      token = {
        type: "comment",
        sourceIndex: pos
      };

      next = value.indexOf("*/", pos);
      if (next === -1) {
        token.unclosed = true;
        next = value.length;
      }

      token.value = value.slice(pos + 2, next);
      tokens.push(token);

      pos = next + 2;
      code = value.charCodeAt(pos);

      // Dividers
    } else if (code === slash || code === comma || code === colon) {
      token = value[pos];

      tokens.push({
        type: "div",
        sourceIndex: pos - before.length,
        value: token,
        before: before,
        after: ""
      });
      before = "";

      pos += 1;
      code = value.charCodeAt(pos);

      // Open parentheses
    } else if (openParentheses === code) {
      // Whitespaces after open parentheses
      next = pos;
      do {
        next += 1;
        code = value.charCodeAt(next);
      } while (code <= 32);
      token = {
        type: "function",
        sourceIndex: pos - name.length,
        value: name,
        before: value.slice(pos + 1, next)
      };
      pos = next;

      if (name === "url" && code !== singleQuote && code !== doubleQuote) {
        next -= 1;
        do {
          escape = false;
          next = value.indexOf(")", next + 1);
          if (~next) {
            escapePos = next;
            while (value.charCodeAt(escapePos - 1) === backslash) {
              escapePos -= 1;
              escape = !escape;
            }
          } else {
            value += ")";
            next = value.length - 1;
            token.unclosed = true;
          }
        } while (escape);
        // Whitespaces before closed
        whitespacePos = next;
        do {
          whitespacePos -= 1;
          code = value.charCodeAt(whitespacePos);
        } while (code <= 32);
        if (pos !== whitespacePos + 1) {
          token.nodes = [
            {
              type: "word",
              sourceIndex: pos,
              value: value.slice(pos, whitespacePos + 1)
            }
          ];
        } else {
          token.nodes = [];
        }
        if (token.unclosed && whitespacePos + 1 !== next) {
          token.after = "";
          token.nodes.push({
            type: "space",
            sourceIndex: whitespacePos + 1,
            value: value.slice(whitespacePos + 1, next)
          });
        } else {
          token.after = value.slice(whitespacePos + 1, next);
        }
        pos = next + 1;
        code = value.charCodeAt(pos);
        tokens.push(token);
      } else {
        balanced += 1;
        token.after = "";
        tokens.push(token);
        stack.push(token);
        tokens = token.nodes = [];
        parent = token;
      }
      name = "";

      // Close parentheses
    } else if (closeParentheses === code && balanced) {
      pos += 1;
      code = value.charCodeAt(pos);

      parent.after = after;
      after = "";
      balanced -= 1;
      stack.pop();
      parent = stack[balanced];
      tokens = parent.nodes;

      // Words
    } else {
      next = pos;
      do {
        if (code === backslash) {
          next += 1;
        }
        next += 1;
        code = value.charCodeAt(next);
      } while (
        next < max &&
        !(
          code <= 32 ||
          code === singleQuote ||
          code === doubleQuote ||
          code === comma ||
          code === colon ||
          code === slash ||
          code === openParentheses ||
          (code === closeParentheses && balanced)
        )
      );
      token = value.slice(pos, next);

      if (openParentheses === code) {
        name = token;
      } else {
        tokens.push({
          type: "word",
          sourceIndex: pos,
          value: token
        });
      }

      pos = next;
    }
  }

  for (pos = stack.length - 1; pos; pos -= 1) {
    stack[pos].unclosed = true;
  }

  return stack[0].nodes;
};


/***/ }),
/* 964 */
/***/ (function(module, exports) {

module.exports = function walk(nodes, cb, bubble) {
  var i, max, node, result;

  for (i = 0, max = nodes.length; i < max; i += 1) {
    node = nodes[i];
    if (!bubble) {
      result = cb(node, i, nodes);
    }

    if (
      result !== false &&
      node.type === "function" &&
      Array.isArray(node.nodes)
    ) {
      walk(node.nodes, cb, bubble);
    }

    if (bubble) {
      cb(node, i, nodes);
    }
  }
};


/***/ }),
/* 965 */
/***/ (function(module, exports) {

function stringifyNode(node, custom) {
  var type = node.type;
  var value = node.value;
  var buf;
  var customResult;

  if (custom && (customResult = custom(node)) !== undefined) {
    return customResult;
  } else if (type === "word" || type === "space") {
    return value;
  } else if (type === "string") {
    buf = node.quote || "";
    return buf + value + (node.unclosed ? "" : buf);
  } else if (type === "comment") {
    return "/*" + value + (node.unclosed ? "" : "*/");
  } else if (type === "div") {
    return (node.before || "") + value + (node.after || "");
  } else if (Array.isArray(node.nodes)) {
    buf = stringify(node.nodes);
    if (type !== "function") {
      return buf;
    }
    return (
      value +
      "(" +
      (node.before || "") +
      buf +
      (node.after || "") +
      (node.unclosed ? "" : ")")
    );
  }
  return value;
}

function stringify(nodes, custom) {
  var result, i;

  if (Array.isArray(nodes)) {
    result = "";
    for (i = nodes.length - 1; ~i; i -= 1) {
      result = stringifyNode(nodes[i], custom) + result;
    }
    return result;
  }
  return stringifyNode(nodes, custom);
}

module.exports = stringify;


/***/ }),
/* 966 */
/***/ (function(module, exports) {

var minus = "-".charCodeAt(0);
var plus = "+".charCodeAt(0);
var dot = ".".charCodeAt(0);
var exp = "e".charCodeAt(0);
var EXP = "E".charCodeAt(0);

module.exports = function(value) {
  var pos = 0;
  var length = value.length;
  var dotted = false;
  var sciPos = -1;
  var containsNumber = false;
  var code;

  while (pos < length) {
    code = value.charCodeAt(pos);

    if (code >= 48 && code <= 57) {
      containsNumber = true;
    } else if (code === exp || code === EXP) {
      if (sciPos > -1) {
        break;
      }
      sciPos = pos;
    } else if (code === dot) {
      if (dotted) {
        break;
      }
      dotted = true;
    } else if (code === plus || code === minus) {
      if (pos !== 0) {
        break;
      }
    } else {
      break;
    }

    pos += 1;
  }

  if (sciPos + 1 === pos) pos--;

  return containsNumber
    ? {
        number: value.slice(0, pos),
        unit: value.slice(pos)
      }
    : false;
};


/***/ }),
/* 967 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const isRGB = __webpack_require__(968);
const isRGBA = __webpack_require__(970);
const isHSL = __webpack_require__(972);
const isHSLA = __webpack_require__(974);
const isHex = __webpack_require__(976);
const isCSSColorName = __webpack_require__(978);
const isTransparent = __webpack_require__(980);
const isCSSLengthUnit = __webpack_require__(137);
const isStop = __webpack_require__(981);

function isColor(colorStr) {
  const color =
    isRGB(colorStr) ||
    isRGBA(colorStr) ||
    isHSL(colorStr) ||
    isHSLA(colorStr) ||
    isHex(colorStr) ||
    isCSSColorName(colorStr) ||
    isTransparent(colorStr);

  return color;
}


module.exports = function isColorStop(color, stop) {
  return isColor(color) && isStop(stop);
};
module.exports.isColor = isColor;
module.exports.isRGB = isRGB;
module.exports.isRGBA = isRGBA;
module.exports.isHSL = isHSL;
module.exports.isHSLA = isHSLA;
module.exports.isHex = isHex;
module.exports.isCSSColorName = isCSSColorName;
module.exports.isTransparent = isTransparent;
module.exports.isCSSLengthUnit = isCSSLengthUnit;


/***/ }),
/* 968 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const rgbRegex = __webpack_require__(969);

function isRGB(str) {
  return rgbRegex({ exact: true }).test(str);
}

module.exports = isRGB;


/***/ }),
/* 969 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function rgbRegex(options) {
  options = options || {};

  return options.exact ?
    /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/ :
    /rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)/ig;
}


/***/ }),
/* 970 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const rgbaRegex = __webpack_require__(971);

function isRgba(str) {
  return rgbaRegex({ exact: true }).test(str);
}

module.exports = isRgba;


/***/ }),
/* 971 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function rgbaRegex(options) {
  options = options || {};

  return options.exact ?
    /^rgba\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3}),\s*(\d*(?:\.\d+)?)\)$/ :
    /rgba\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3}),\s*(\d*(?:\.\d+)?)\)/ig;
}


/***/ }),
/* 972 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const hslRegex = __webpack_require__(973);

function isHSL(str) {
  return hslRegex({ exact: true }).test(str);
}

module.exports = isHSL;


/***/ }),
/* 973 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function hslRegex(options) {
  options = options || {};

  return options.exact ?
    /^hsl\(\s*(\d+)\s*,\s*(\d*(?:\.\d+)?%)\s*,\s*(\d*(?:\.\d+)?%)\)$/ :
    /hsl\(\s*(\d+)\s*,\s*(\d*(?:\.\d+)?%)\s*,\s*(\d*(?:\.\d+)?%)\)/ig;
}


/***/ }),
/* 974 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const hslaRegex = __webpack_require__(975);

function isHSLA(str) {
  return hslaRegex({ exact: true }).test(str);
}

module.exports = isHSLA;


/***/ }),
/* 975 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function hslaRegex(options) {
  options = options || {};

  return options.exact ?
    /^hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*(\d*(?:\.\d+)?)\)$/ :
    /hsla\((\d+),\s*([\d.]+)%,\s*([\d.]+)%,\s*(\d*(?:\.\d+)?)\)/ig;
}


/***/ }),
/* 976 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const hexRegex = __webpack_require__(977);

function isHex(str) {
  return hexRegex({ exact: true }).test(str);
}

module.exports = isHex;


/***/ }),
/* 977 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*!
 * hex-color-regex <https://github.com/regexps/hex-color-regex>
 *
 * Copyright (c) 2015 Charlike Mike Reagent <@tunnckoCore> (http://www.tunnckocore.tk)
 * Released under the MIT license.
 */



module.exports = function hexColorRegex(opts) {
  opts = opts && typeof opts === 'object' ? opts : {}

  return opts.strict
    ? /^#([a-f0-9]{3,4}|[a-f0-9]{4}(?:[a-f0-9]{2}){1,2})\b$/i
    : /#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})\b/gi
}


/***/ }),
/* 978 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const colorNames = __webpack_require__(979);

function isCSSColorName(str) {
  return !!colorNames[str];
}

module.exports = isCSSColorName;


/***/ }),
/* 979 */
/***/ (function(module) {

module.exports = {"aliceblue":"#f0f8ff","antiquewhite":"#faebd7","aqua":"#00ffff","aquamarine":"#7fffd4","azure":"#f0ffff","beige":"#f5f5dc","bisque":"#ffe4c4","black":"#000000","blanchedalmond":"#ffebcd","blue":"#0000ff","blueviolet":"#8a2be2","brown":"#a52a2a","burlywood":"#deb887","cadetblue":"#5f9ea0","chartreuse":"#7fff00","chocolate":"#d2691e","coral":"#ff7f50","cornflowerblue":"#6495ed","cornsilk":"#fff8dc","crimson":"#dc143c","cyan":"#00ffff","darkblue":"#00008b","darkcyan":"#008b8b","darkgoldenrod":"#b8860b","darkgray":"#a9a9a9","darkgreen":"#006400","darkgrey":"#a9a9a9","darkkhaki":"#bdb76b","darkmagenta":"#8b008b","darkolivegreen":"#556b2f","darkorange":"#ff8c00","darkorchid":"#9932cc","darkred":"#8b0000","darksalmon":"#e9967a","darkseagreen":"#8fbc8f","darkslateblue":"#483d8b","darkslategray":"#2f4f4f","darkslategrey":"#2f4f4f","darkturquoise":"#00ced1","darkviolet":"#9400d3","deeppink":"#ff1493","deepskyblue":"#00bfff","dimgray":"#696969","dimgrey":"#696969","dodgerblue":"#1e90ff","firebrick":"#b22222","floralwhite":"#fffaf0","forestgreen":"#228b22","fuchsia":"#ff00ff","gainsboro":"#dcdcdc","ghostwhite":"#f8f8ff","gold":"#ffd700","goldenrod":"#daa520","gray":"#808080","green":"#008000","greenyellow":"#adff2f","grey":"#808080","honeydew":"#f0fff0","hotpink":"#ff69b4","indianred":"#cd5c5c","indigo":"#4b0082","ivory":"#fffff0","khaki":"#f0e68c","lavender":"#e6e6fa","lavenderblush":"#fff0f5","lawngreen":"#7cfc00","lemonchiffon":"#fffacd","lightblue":"#add8e6","lightcoral":"#f08080","lightcyan":"#e0ffff","lightgoldenrodyellow":"#fafad2","lightgray":"#d3d3d3","lightgreen":"#90ee90","lightgrey":"#d3d3d3","lightpink":"#ffb6c1","lightsalmon":"#ffa07a","lightseagreen":"#20b2aa","lightskyblue":"#87cefa","lightslategray":"#778899","lightslategrey":"#778899","lightsteelblue":"#b0c4de","lightyellow":"#ffffe0","lime":"#00ff00","limegreen":"#32cd32","linen":"#faf0e6","magenta":"#ff00ff","maroon":"#800000","mediumaquamarine":"#66cdaa","mediumblue":"#0000cd","mediumorchid":"#ba55d3","mediumpurple":"#9370db","mediumseagreen":"#3cb371","mediumslateblue":"#7b68ee","mediumspringgreen":"#00fa9a","mediumturquoise":"#48d1cc","mediumvioletred":"#c71585","midnightblue":"#191970","mintcream":"#f5fffa","mistyrose":"#ffe4e1","moccasin":"#ffe4b5","navajowhite":"#ffdead","navy":"#000080","oldlace":"#fdf5e6","olive":"#808000","olivedrab":"#6b8e23","orange":"#ffa500","orangered":"#ff4500","orchid":"#da70d6","palegoldenrod":"#eee8aa","palegreen":"#98fb98","paleturquoise":"#afeeee","palevioletred":"#db7093","papayawhip":"#ffefd5","peachpuff":"#ffdab9","peru":"#cd853f","pink":"#ffc0cb","plum":"#dda0dd","powderblue":"#b0e0e6","purple":"#800080","rebeccapurple":"#663399","red":"#ff0000","rosybrown":"#bc8f8f","royalblue":"#4169e1","saddlebrown":"#8b4513","salmon":"#fa8072","sandybrown":"#f4a460","seagreen":"#2e8b57","seashell":"#fff5ee","sienna":"#a0522d","silver":"#c0c0c0","skyblue":"#87ceeb","slateblue":"#6a5acd","slategray":"#708090","slategrey":"#708090","snow":"#fffafa","springgreen":"#00ff7f","steelblue":"#4682b4","tan":"#d2b48c","teal":"#008080","thistle":"#d8bfd8","tomato":"#ff6347","turquoise":"#40e0d0","violet":"#ee82ee","wheat":"#f5deb3","white":"#ffffff","whitesmoke":"#f5f5f5","yellow":"#ffff00","yellowgreen":"#9acd32"};

/***/ }),
/* 980 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function isTransparent(str) {
  return str === 'transparent';
}

module.exports = isTransparent;


/***/ }),
/* 981 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const isCSSLengthUnit = __webpack_require__(137);
const unit = __webpack_require__(982);

function isStop(str) {
  let stop = !str;
  
  if (!stop) {
    const node = unit(str);
    if (node) {
      if (node.number === 0 || (!isNaN(node.number) && isCSSLengthUnit(node.unit))) {
        stop = true;
      }
    } else {
      stop = (/^calc\(\S+\)$/g).test(str);
    }
  }

  return stop;
}

module.exports = isStop;


/***/ }),
/* 982 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * https://github.com/TrySound/postcss-value-parser/blob/fc679a7e17877841ff9fe455722280b65abd4f28/lib/unit.js
 * parse node -> number and unit
 */

const minus = '-'.charCodeAt(0);
const plus = '+'.charCodeAt(0);
const dot = '.'.charCodeAt(0);

module.exports = function unit(value) {
  let pos = 0;
  const length = value.length;
  let dotted = false;
  let containsNumber = false;
  let code;
  let number = '';

  while (pos < length) {
    code = value.charCodeAt(pos);

    if (code >= 48 && code <= 57) {
      number += value[pos];
      containsNumber = true;
    } else if (code === dot) {
      if (dotted) {
        break;
      }
      dotted = true;
      number += value[pos];
    } else if (code === plus || code === minus) {
      if (pos !== 0) {
        break;
      }
      number += value[pos];
    } else {
      break;
    }

    pos += 1;
  }

  return containsNumber ? {
    number,
    unit: value.slice(pos),
  } : false;
};


/***/ }),
/* 983 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _has = __webpack_require__(25);

var _has2 = _interopRequireDefault(_has);

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _cssnanoUtilGetMatch = __webpack_require__(47);

var _cssnanoUtilGetMatch2 = _interopRequireDefault(_cssnanoUtilGetMatch);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getValues(list, { value }, index) {
    if (index % 2 === 0) {
        return [...list, parseFloat(value)];
    }

    return list;
}

function matrix3d(node, values) {
    // matrix3d(a, b, 0, 0, c, d, 0, 0, 0, 0, 1, 0, tx, ty, 0, 1) => matrix(a, b, c, d, tx, ty)
    if (values[15] && values[2] === 0 && values[3] === 0 && values[6] === 0 && values[7] === 0 && values[8] === 0 && values[9] === 0 && values[10] === 1 && values[11] === 0 && values[14] === 0 && values[15] === 1) {
        const { nodes } = node;

        node.value = 'matrix';
        node.nodes = [nodes[0], // a
        nodes[1], // ,
        nodes[2], // b
        nodes[3], // ,
        nodes[8], // c
        nodes[9], // ,
        nodes[10], // d
        nodes[11], // ,
        nodes[24], // tx
        nodes[25], // ,
        nodes[26]];
    }
}

const rotate3dMappings = [['rotateX', [1, 0, 0]], // rotate3d(1, 0, 0, a) => rotateX(a)
['rotateY', [0, 1, 0]], // rotate3d(0, 1, 0, a) => rotateY(a)
['rotate', [0, 0, 1]]];

const rotate3dMatch = (0, _cssnanoUtilGetMatch2.default)(rotate3dMappings);

function rotate3d(node, values) {
    const { nodes } = node;
    const match = rotate3dMatch(values.slice(0, 3));

    if (match.length) {
        node.value = match;
        node.nodes = [nodes[6]];
    }
}

function rotateZ(node) {
    // rotateZ(rz) => rotate(rz)
    node.value = 'rotate';
}

function scale(node, values) {
    const { nodes } = node;

    if (!nodes[2]) {
        return;
    }

    const [first, second] = values;

    // scale(sx, sy) => scale(sx)
    if (first === second) {
        node.nodes = [nodes[0]];

        return;
    }

    // scale(sx, 1) => scaleX(sx)
    if (second === 1) {
        node.value = 'scaleX';
        node.nodes = [nodes[0]];

        return;
    }

    // scale(1, sy) => scaleY(sy)
    if (first === 1) {
        node.value = 'scaleY';
        node.nodes = [nodes[2]];

        return;
    }
}

function scale3d(node, values) {
    const { nodes } = node;
    const [first, second, third] = values;

    // scale3d(sx, 1, 1) => scaleX(sx)
    if (second === 1 && third === 1) {
        node.value = 'scaleX';
        node.nodes = [nodes[0]];

        return;
    }

    // scale3d(1, sy, 1) => scaleY(sy)
    if (first === 1 && third === 1) {
        node.value = 'scaleY';
        node.nodes = [nodes[2]];

        return;
    }

    // scale3d(1, 1, sz) => scaleZ(sz)
    if (first === 1 && second === 1) {
        node.value = 'scaleZ';
        node.nodes = [nodes[4]];

        return;
    }
}

function translate(node, values) {
    const { nodes } = node;

    if (!nodes[2]) {
        return;
    }

    // translate(tx, 0) => translate(tx)
    if (values[1] === 0) {
        node.nodes = [nodes[0]];

        return;
    }

    // translate(0, ty) => translateY(ty)
    if (values[0] === 0) {
        node.value = 'translateY';
        node.nodes = [nodes[2]];

        return;
    }
}

function translate3d(node, values) {
    const { nodes } = node;

    // translate3d(0, 0, tz) => translateZ(tz)
    if (values[0] === 0 && values[1] === 0) {
        node.value = 'translateZ';
        node.nodes = [nodes[4]];
    }
}

const reducers = {
    matrix3d,
    rotate3d,
    rotateZ,
    scale,
    scale3d,
    translate,
    translate3d
};

function normalizeReducerName(name) {
    const lowerCasedName = name.toLowerCase();

    if (lowerCasedName === 'rotatez') {
        return 'rotateZ';
    }

    return lowerCasedName;
}

function reduce(node) {
    const { nodes, type, value } = node;
    const normalizedReducerName = normalizeReducerName(value);

    if (type === 'function' && (0, _has2.default)(reducers, normalizedReducerName)) {
        reducers[normalizedReducerName](node, nodes.reduce(getValues, []));
    }

    return false;
}

exports.default = _postcss2.default.plugin('postcss-reduce-transforms', () => {
    return css => {
        const cache = {};

        css.walkDecls(/transform$/i, decl => {
            const value = decl.value;

            if (cache[value]) {
                decl.value = cache[value];

                return;
            }

            const result = (0, _postcssValueParser2.default)(value).walk(reduce).toString();

            decl.value = result;
            cache[value] = result;
        });
    };
});
module.exports = exports['default'];

/***/ }),
/* 984 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _convert = __webpack_require__(985);

var _convert2 = _interopRequireDefault(_convert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const LENGTH_UNITS = ['em', 'ex', 'ch', 'rem', 'vw', 'vh', 'vmin', 'vmax', 'cm', 'mm', 'q', 'in', 'pt', 'pc', 'px'];

function parseWord(node, opts, keepZeroUnit) {
    const pair = (0, _postcssValueParser.unit)(node.value);
    if (pair) {
        const num = Number(pair.number);
        const u = pair.unit;
        if (num === 0) {
            node.value = keepZeroUnit || !~LENGTH_UNITS.indexOf(u.toLowerCase()) && u !== '%' ? 0 + u : 0;
        } else {
            node.value = (0, _convert2.default)(num, u, opts);

            if (typeof opts.precision === 'number' && u.toLowerCase() === 'px' && ~pair.number.indexOf('.')) {
                const precision = Math.pow(10, opts.precision);
                node.value = Math.round(parseFloat(node.value) * precision) / precision + u;
            }
        }
    }
}

function clampOpacity(node) {
    const pair = (0, _postcssValueParser.unit)(node.value);
    if (!pair) {
        return;
    }
    let num = Number(pair.number);
    if (num > 1) {
        node.value = 1 + pair.unit;
    } else if (num < 0) {
        node.value = 0 + pair.unit;
    }
}

function shouldStripPercent(decl) {
    const { parent } = decl;
    const lowerCasedProp = decl.prop.toLowerCase();
    return ~decl.value.indexOf('%') && (lowerCasedProp === 'max-height' || lowerCasedProp === 'height') || parent.parent && parent.parent.name && parent.parent.name.toLowerCase() === 'keyframes' && lowerCasedProp === 'stroke-dasharray' || lowerCasedProp === 'stroke-dashoffset' || lowerCasedProp === 'stroke-width';
}

function transform(opts, decl) {
    const lowerCasedProp = decl.prop.toLowerCase();
    if (~lowerCasedProp.indexOf('flex') || lowerCasedProp.indexOf('--') === 0) {
        return;
    }

    decl.value = (0, _postcssValueParser2.default)(decl.value).walk(node => {
        const lowerCasedValue = node.value.toLowerCase();

        if (node.type === 'word') {
            parseWord(node, opts, shouldStripPercent(decl));
            if (lowerCasedProp === 'opacity' || lowerCasedProp === 'shape-image-threshold') {
                clampOpacity(node);
            }
        } else if (node.type === 'function') {
            if (lowerCasedValue === 'calc' || lowerCasedValue === 'hsl' || lowerCasedValue === 'hsla') {
                (0, _postcssValueParser.walk)(node.nodes, n => {
                    if (n.type === 'word') {
                        parseWord(n, opts, true);
                    }
                });
                return false;
            }
            if (lowerCasedValue === 'url') {
                return false;
            }
        }
    }).toString();
}

const plugin = 'postcss-convert-values';

exports.default = _postcss2.default.plugin(plugin, (opts = { precision: false }) => {
    return css => css.walkDecls(transform.bind(null, opts));
});
module.exports = exports['default'];

/***/ }),
/* 985 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (number, unit, { time, length, angle }) {
    let value = dropLeadingZero(number) + (unit ? unit : '');
    let converted;

    if (length !== false && unit.toLowerCase() in lengthConv) {
        converted = transform(number, unit, lengthConv);
    }

    if (time !== false && unit.toLowerCase() in timeConv) {
        converted = transform(number, unit, timeConv);
    }

    if (angle !== false && unit.toLowerCase() in angleConv) {
        converted = transform(number, unit, angleConv);
    }

    if (converted && converted.length < value.length) {
        value = converted;
    }

    return value;
};

const lengthConv = {
    in: 96,
    px: 1,
    pt: 4 / 3,
    pc: 16
};

const timeConv = {
    s: 1000,
    ms: 1
};

const angleConv = {
    turn: 360,
    deg: 1
};

function dropLeadingZero(number) {
    const value = String(number);

    if (number % 1) {
        if (value[0] === '0') {
            return value.slice(1);
        }

        if (value[0] === '-' && value[1] === '0') {
            return '-' + value.slice(2);
        }
    }

    return value;
}

function transform(number, unit, conversion) {
    const lowerCasedUnit = unit.toLowerCase();
    let one, base;
    let convertionUnits = Object.keys(conversion).filter(u => {
        if (conversion[u] === 1) {
            one = u;
        }
        return lowerCasedUnit !== u;
    });

    if (lowerCasedUnit === one) {
        base = number / conversion[lowerCasedUnit];
    } else {
        base = number * conversion[lowerCasedUnit];
    }

    return convertionUnits.map(u => dropLeadingZero(base / conversion[u]) + u).reduce((a, b) => a.length < b.length ? a : b);
}

module.exports = exports['default'];

/***/ }),
/* 986 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _browserslist = __webpack_require__(14);

var _browserslist2 = _interopRequireDefault(_browserslist);

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _colours = __webpack_require__(987);

var _colours2 = _interopRequireDefault(_colours);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function walk(parent, callback) {
    parent.nodes.forEach((node, index) => {
        const bubble = callback(node, index, parent);

        if (node.nodes && bubble !== false) {
            walk(node, callback);
        }
    });
}

/*
 * IE 8 & 9 do not properly handle clicks on elements
 * with a `transparent` `background-color`.
 *
 * https://developer.mozilla.org/en-US/docs/Web/Events/click#Internet_Explorer
 */

function hasTransparentBug(browser) {
    return ~["ie 8", "ie 9"].indexOf(browser);
}

exports.default = _postcss2.default.plugin("postcss-colormin", () => {
    return (css, result) => {
        const resultOpts = result.opts || {};
        const browsers = (0, _browserslist2.default)(null, {
            stats: resultOpts.stats,
            path: __dirname,
            env: resultOpts.env
        });
        const isLegacy = browsers.some(hasTransparentBug);
        const colorminCache = {};
        const cache = {};

        css.walkDecls(decl => {
            if (/^(composes|font|filter|-webkit-tap-highlight-color)/i.test(decl.prop)) {
                return;
            }

            if (cache[decl.value]) {
                decl.value = cache[decl.value];

                return;
            }

            const parsed = (0, _postcssValueParser2.default)(decl.value);

            walk(parsed, (node, index, parent) => {
                if (node.type === "function") {
                    if (/^(rgb|hsl)a?$/i.test(node.value)) {
                        const { value } = node;

                        node.value = (0, _colours2.default)((0, _postcssValueParser.stringify)(node), isLegacy, colorminCache);
                        node.type = "word";

                        const next = parent.nodes[index + 1];

                        if (node.value !== value && next && (next.type === "word" || next.type === "function")) {
                            parent.nodes.splice(index + 1, 0, {
                                type: "space",
                                value: " "
                            });
                        }
                    } else if (node.value.toLowerCase() === "calc") {
                        return false;
                    }
                } else if (node.type === "word") {
                    node.value = (0, _colours2.default)(node.value, isLegacy, colorminCache);
                }
            });

            const optimizedValue = parsed.toString();

            decl.value = optimizedValue;
            cache[decl.value] = optimizedValue;
        });
    };
});

/***/ }),
/* 987 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _color = __webpack_require__(988);

var _color2 = _interopRequireDefault(_color);

var _keywords = __webpack_require__(994);

var _keywords2 = _interopRequireDefault(_keywords);

var _toShorthand = __webpack_require__(995);

var _toShorthand2 = _interopRequireDefault(_toShorthand);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const shorter = (a, b) => (a && a.length < b.length ? a : b).toLowerCase();

exports.default = (colour, isLegacy = false, cache = false) => {
    const key = colour + "|" + isLegacy;

    if (cache && cache[key]) {
        return cache[key];
    }

    try {
        const parsed = (0, _color2.default)(colour.toLowerCase());
        const alpha = parsed.alpha();

        if (alpha === 1) {
            const toHex = (0, _toShorthand2.default)(parsed.hex().toLowerCase());
            const result = shorter(_keywords2.default[toHex], toHex);

            if (cache) {
                cache[key] = result;
            }

            return result;
        } else {
            const rgb = parsed.rgb();

            if (!isLegacy && !rgb.color[0] && !rgb.color[1] && !rgb.color[2] && !alpha) {
                const result = 'transparent';

                if (cache) {
                    cache[key] = result;
                }

                return result;
            }

            let hsla = parsed.hsl().string();
            let rgba = rgb.string();
            let result = hsla.length < rgba.length ? hsla : rgba;

            if (cache) {
                cache[key] = result;
            }

            return result;
        }
    } catch (e) {
        // Possibly malformed, so pass through
        const result = colour;

        if (cache) {
            cache[key] = result;
        }

        return result;
    }
};

/***/ }),
/* 988 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var colorString = __webpack_require__(989);
var convert = __webpack_require__(992);

var _slice = [].slice;

var skippedModels = [
	// to be honest, I don't really feel like keyword belongs in color convert, but eh.
	'keyword',

	// gray conflicts with some method names, and has its own method defined.
	'gray',

	// shouldn't really be in color-convert either...
	'hex'
];

var hashedModelKeys = {};
Object.keys(convert).forEach(function (model) {
	hashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;
});

var limiters = {};

function Color(obj, model) {
	if (!(this instanceof Color)) {
		return new Color(obj, model);
	}

	if (model && model in skippedModels) {
		model = null;
	}

	if (model && !(model in convert)) {
		throw new Error('Unknown model: ' + model);
	}

	var i;
	var channels;

	if (obj == null) { // eslint-disable-line no-eq-null,eqeqeq
		this.model = 'rgb';
		this.color = [0, 0, 0];
		this.valpha = 1;
	} else if (obj instanceof Color) {
		this.model = obj.model;
		this.color = obj.color.slice();
		this.valpha = obj.valpha;
	} else if (typeof obj === 'string') {
		var result = colorString.get(obj);
		if (result === null) {
			throw new Error('Unable to parse color from string: ' + obj);
		}

		this.model = result.model;
		channels = convert[this.model].channels;
		this.color = result.value.slice(0, channels);
		this.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;
	} else if (obj.length) {
		this.model = model || 'rgb';
		channels = convert[this.model].channels;
		var newArr = _slice.call(obj, 0, channels);
		this.color = zeroArray(newArr, channels);
		this.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;
	} else if (typeof obj === 'number') {
		// this is always RGB - can be converted later on.
		obj &= 0xFFFFFF;
		this.model = 'rgb';
		this.color = [
			(obj >> 16) & 0xFF,
			(obj >> 8) & 0xFF,
			obj & 0xFF
		];
		this.valpha = 1;
	} else {
		this.valpha = 1;

		var keys = Object.keys(obj);
		if ('alpha' in obj) {
			keys.splice(keys.indexOf('alpha'), 1);
			this.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;
		}

		var hashedKeys = keys.sort().join('');
		if (!(hashedKeys in hashedModelKeys)) {
			throw new Error('Unable to parse color from object: ' + JSON.stringify(obj));
		}

		this.model = hashedModelKeys[hashedKeys];

		var labels = convert[this.model].labels;
		var color = [];
		for (i = 0; i < labels.length; i++) {
			color.push(obj[labels[i]]);
		}

		this.color = zeroArray(color);
	}

	// perform limitations (clamping, etc.)
	if (limiters[this.model]) {
		channels = convert[this.model].channels;
		for (i = 0; i < channels; i++) {
			var limit = limiters[this.model][i];
			if (limit) {
				this.color[i] = limit(this.color[i]);
			}
		}
	}

	this.valpha = Math.max(0, Math.min(1, this.valpha));

	if (Object.freeze) {
		Object.freeze(this);
	}
}

Color.prototype = {
	toString: function () {
		return this.string();
	},

	toJSON: function () {
		return this[this.model]();
	},

	string: function (places) {
		var self = this.model in colorString.to ? this : this.rgb();
		self = self.round(typeof places === 'number' ? places : 1);
		var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
		return colorString.to[self.model](args);
	},

	percentString: function (places) {
		var self = this.rgb().round(typeof places === 'number' ? places : 1);
		var args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);
		return colorString.to.rgb.percent(args);
	},

	array: function () {
		return this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);
	},

	object: function () {
		var result = {};
		var channels = convert[this.model].channels;
		var labels = convert[this.model].labels;

		for (var i = 0; i < channels; i++) {
			result[labels[i]] = this.color[i];
		}

		if (this.valpha !== 1) {
			result.alpha = this.valpha;
		}

		return result;
	},

	unitArray: function () {
		var rgb = this.rgb().color;
		rgb[0] /= 255;
		rgb[1] /= 255;
		rgb[2] /= 255;

		if (this.valpha !== 1) {
			rgb.push(this.valpha);
		}

		return rgb;
	},

	unitObject: function () {
		var rgb = this.rgb().object();
		rgb.r /= 255;
		rgb.g /= 255;
		rgb.b /= 255;

		if (this.valpha !== 1) {
			rgb.alpha = this.valpha;
		}

		return rgb;
	},

	round: function (places) {
		places = Math.max(places || 0, 0);
		return new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);
	},

	alpha: function (val) {
		if (arguments.length) {
			return new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);
		}

		return this.valpha;
	},

	// rgb
	red: getset('rgb', 0, maxfn(255)),
	green: getset('rgb', 1, maxfn(255)),
	blue: getset('rgb', 2, maxfn(255)),

	hue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style

	saturationl: getset('hsl', 1, maxfn(100)),
	lightness: getset('hsl', 2, maxfn(100)),

	saturationv: getset('hsv', 1, maxfn(100)),
	value: getset('hsv', 2, maxfn(100)),

	chroma: getset('hcg', 1, maxfn(100)),
	gray: getset('hcg', 2, maxfn(100)),

	white: getset('hwb', 1, maxfn(100)),
	wblack: getset('hwb', 2, maxfn(100)),

	cyan: getset('cmyk', 0, maxfn(100)),
	magenta: getset('cmyk', 1, maxfn(100)),
	yellow: getset('cmyk', 2, maxfn(100)),
	black: getset('cmyk', 3, maxfn(100)),

	x: getset('xyz', 0, maxfn(100)),
	y: getset('xyz', 1, maxfn(100)),
	z: getset('xyz', 2, maxfn(100)),

	l: getset('lab', 0, maxfn(100)),
	a: getset('lab', 1),
	b: getset('lab', 2),

	keyword: function (val) {
		if (arguments.length) {
			return new Color(val);
		}

		return convert[this.model].keyword(this.color);
	},

	hex: function (val) {
		if (arguments.length) {
			return new Color(val);
		}

		return colorString.to.hex(this.rgb().round().color);
	},

	rgbNumber: function () {
		var rgb = this.rgb().color;
		return ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);
	},

	luminosity: function () {
		// http://www.w3.org/TR/WCAG20/#relativeluminancedef
		var rgb = this.rgb().color;

		var lum = [];
		for (var i = 0; i < rgb.length; i++) {
			var chan = rgb[i] / 255;
			lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
		}

		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
	},

	contrast: function (color2) {
		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
		var lum1 = this.luminosity();
		var lum2 = color2.luminosity();

		if (lum1 > lum2) {
			return (lum1 + 0.05) / (lum2 + 0.05);
		}

		return (lum2 + 0.05) / (lum1 + 0.05);
	},

	level: function (color2) {
		var contrastRatio = this.contrast(color2);
		if (contrastRatio >= 7.1) {
			return 'AAA';
		}

		return (contrastRatio >= 4.5) ? 'AA' : '';
	},

	isDark: function () {
		// YIQ equation from http://24ways.org/2010/calculating-color-contrast
		var rgb = this.rgb().color;
		var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
		return yiq < 128;
	},

	isLight: function () {
		return !this.isDark();
	},

	negate: function () {
		var rgb = this.rgb();
		for (var i = 0; i < 3; i++) {
			rgb.color[i] = 255 - rgb.color[i];
		}
		return rgb;
	},

	lighten: function (ratio) {
		var hsl = this.hsl();
		hsl.color[2] += hsl.color[2] * ratio;
		return hsl;
	},

	darken: function (ratio) {
		var hsl = this.hsl();
		hsl.color[2] -= hsl.color[2] * ratio;
		return hsl;
	},

	saturate: function (ratio) {
		var hsl = this.hsl();
		hsl.color[1] += hsl.color[1] * ratio;
		return hsl;
	},

	desaturate: function (ratio) {
		var hsl = this.hsl();
		hsl.color[1] -= hsl.color[1] * ratio;
		return hsl;
	},

	whiten: function (ratio) {
		var hwb = this.hwb();
		hwb.color[1] += hwb.color[1] * ratio;
		return hwb;
	},

	blacken: function (ratio) {
		var hwb = this.hwb();
		hwb.color[2] += hwb.color[2] * ratio;
		return hwb;
	},

	grayscale: function () {
		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
		var rgb = this.rgb().color;
		var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
		return Color.rgb(val, val, val);
	},

	fade: function (ratio) {
		return this.alpha(this.valpha - (this.valpha * ratio));
	},

	opaquer: function (ratio) {
		return this.alpha(this.valpha + (this.valpha * ratio));
	},

	rotate: function (degrees) {
		var hsl = this.hsl();
		var hue = hsl.color[0];
		hue = (hue + degrees) % 360;
		hue = hue < 0 ? 360 + hue : hue;
		hsl.color[0] = hue;
		return hsl;
	},

	mix: function (mixinColor, weight) {
		// ported from sass implementation in C
		// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
		if (!mixinColor || !mixinColor.rgb) {
			throw new Error('Argument to "mix" was not a Color instance, but rather an instance of ' + typeof mixinColor);
		}
		var color1 = mixinColor.rgb();
		var color2 = this.rgb();
		var p = weight === undefined ? 0.5 : weight;

		var w = 2 * p - 1;
		var a = color1.alpha() - color2.alpha();

		var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
		var w2 = 1 - w1;

		return Color.rgb(
				w1 * color1.red() + w2 * color2.red(),
				w1 * color1.green() + w2 * color2.green(),
				w1 * color1.blue() + w2 * color2.blue(),
				color1.alpha() * p + color2.alpha() * (1 - p));
	}
};

// model conversion methods and static constructors
Object.keys(convert).forEach(function (model) {
	if (skippedModels.indexOf(model) !== -1) {
		return;
	}

	var channels = convert[model].channels;

	// conversion methods
	Color.prototype[model] = function () {
		if (this.model === model) {
			return new Color(this);
		}

		if (arguments.length) {
			return new Color(arguments, model);
		}

		var newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;
		return new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);
	};

	// 'static' construction methods
	Color[model] = function (color) {
		if (typeof color === 'number') {
			color = zeroArray(_slice.call(arguments), channels);
		}
		return new Color(color, model);
	};
});

function roundTo(num, places) {
	return Number(num.toFixed(places));
}

function roundToPlace(places) {
	return function (num) {
		return roundTo(num, places);
	};
}

function getset(model, channel, modifier) {
	model = Array.isArray(model) ? model : [model];

	model.forEach(function (m) {
		(limiters[m] || (limiters[m] = []))[channel] = modifier;
	});

	model = model[0];

	return function (val) {
		var result;

		if (arguments.length) {
			if (modifier) {
				val = modifier(val);
			}

			result = this[model]();
			result.color[channel] = val;
			return result;
		}

		result = this[model]().color[channel];
		if (modifier) {
			result = modifier(result);
		}

		return result;
	};
}

function maxfn(max) {
	return function (v) {
		return Math.max(0, Math.min(max, v));
	};
}

function assertArray(val) {
	return Array.isArray(val) ? val : [val];
}

function zeroArray(arr, length) {
	for (var i = 0; i < length; i++) {
		if (typeof arr[i] !== 'number') {
			arr[i] = 0;
		}
	}

	return arr;
}

module.exports = Color;


/***/ }),
/* 989 */
/***/ (function(module, exports, __webpack_require__) {

/* MIT license */
var colorNames = __webpack_require__(138);
var swizzle = __webpack_require__(990);

var reverseNames = {};

// create a list of reverse color names
for (var name in colorNames) {
	if (colorNames.hasOwnProperty(name)) {
		reverseNames[colorNames[name]] = name;
	}
}

var cs = module.exports = {
	to: {},
	get: {}
};

cs.get = function (string) {
	var prefix = string.substring(0, 3).toLowerCase();
	var val;
	var model;
	switch (prefix) {
		case 'hsl':
			val = cs.get.hsl(string);
			model = 'hsl';
			break;
		case 'hwb':
			val = cs.get.hwb(string);
			model = 'hwb';
			break;
		default:
			val = cs.get.rgb(string);
			model = 'rgb';
			break;
	}

	if (!val) {
		return null;
	}

	return {model: model, value: val};
};

cs.get.rgb = function (string) {
	if (!string) {
		return null;
	}

	var abbr = /^#([a-f0-9]{3,4})$/i;
	var hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;
	var rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
	var per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
	var keyword = /(\D+)/;

	var rgb = [0, 0, 0, 1];
	var match;
	var i;
	var hexAlpha;

	if (match = string.match(hex)) {
		hexAlpha = match[2];
		match = match[1];

		for (i = 0; i < 3; i++) {
			// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19
			var i2 = i * 2;
			rgb[i] = parseInt(match.slice(i2, i2 + 2), 16);
		}

		if (hexAlpha) {
			rgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;
		}
	} else if (match = string.match(abbr)) {
		match = match[1];
		hexAlpha = match[3];

		for (i = 0; i < 3; i++) {
			rgb[i] = parseInt(match[i] + match[i], 16);
		}

		if (hexAlpha) {
			rgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;
		}
	} else if (match = string.match(rgba)) {
		for (i = 0; i < 3; i++) {
			rgb[i] = parseInt(match[i + 1], 0);
		}

		if (match[4]) {
			rgb[3] = parseFloat(match[4]);
		}
	} else if (match = string.match(per)) {
		for (i = 0; i < 3; i++) {
			rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
		}

		if (match[4]) {
			rgb[3] = parseFloat(match[4]);
		}
	} else if (match = string.match(keyword)) {
		if (match[1] === 'transparent') {
			return [0, 0, 0, 0];
		}

		rgb = colorNames[match[1]];

		if (!rgb) {
			return null;
		}

		rgb[3] = 1;

		return rgb;
	} else {
		return null;
	}

	for (i = 0; i < 3; i++) {
		rgb[i] = clamp(rgb[i], 0, 255);
	}
	rgb[3] = clamp(rgb[3], 0, 1);

	return rgb;
};

cs.get.hsl = function (string) {
	if (!string) {
		return null;
	}

	var hsl = /^hsla?\(\s*([+-]?(?:\d*\.)?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
	var match = string.match(hsl);

	if (match) {
		var alpha = parseFloat(match[4]);
		var h = (parseFloat(match[1]) + 360) % 360;
		var s = clamp(parseFloat(match[2]), 0, 100);
		var l = clamp(parseFloat(match[3]), 0, 100);
		var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);

		return [h, s, l, a];
	}

	return null;
};

cs.get.hwb = function (string) {
	if (!string) {
		return null;
	}

	var hwb = /^hwb\(\s*([+-]?\d*[\.]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/;
	var match = string.match(hwb);

	if (match) {
		var alpha = parseFloat(match[4]);
		var h = ((parseFloat(match[1]) % 360) + 360) % 360;
		var w = clamp(parseFloat(match[2]), 0, 100);
		var b = clamp(parseFloat(match[3]), 0, 100);
		var a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);
		return [h, w, b, a];
	}

	return null;
};

cs.to.hex = function () {
	var rgba = swizzle(arguments);

	return (
		'#' +
		hexDouble(rgba[0]) +
		hexDouble(rgba[1]) +
		hexDouble(rgba[2]) +
		(rgba[3] < 1
			? (hexDouble(Math.round(rgba[3] * 255)))
			: '')
	);
};

cs.to.rgb = function () {
	var rgba = swizzle(arguments);

	return rgba.length < 4 || rgba[3] === 1
		? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'
		: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';
};

cs.to.rgb.percent = function () {
	var rgba = swizzle(arguments);

	var r = Math.round(rgba[0] / 255 * 100);
	var g = Math.round(rgba[1] / 255 * 100);
	var b = Math.round(rgba[2] / 255 * 100);

	return rgba.length < 4 || rgba[3] === 1
		? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'
		: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';
};

cs.to.hsl = function () {
	var hsla = swizzle(arguments);
	return hsla.length < 4 || hsla[3] === 1
		? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'
		: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';
};

// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional & 1 is default value)
cs.to.hwb = function () {
	var hwba = swizzle(arguments);

	var a = '';
	if (hwba.length >= 4 && hwba[3] !== 1) {
		a = ', ' + hwba[3];
	}

	return 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';
};

cs.to.keyword = function (rgb) {
	return reverseNames[rgb.slice(0, 3)];
};

// helpers
function clamp(num, min, max) {
	return Math.min(Math.max(min, num), max);
}

function hexDouble(num) {
	var str = num.toString(16).toUpperCase();
	return (str.length < 2) ? '0' + str : str;
}


/***/ }),
/* 990 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isArrayish = __webpack_require__(991);

var concat = Array.prototype.concat;
var slice = Array.prototype.slice;

var swizzle = module.exports = function swizzle(args) {
	var results = [];

	for (var i = 0, len = args.length; i < len; i++) {
		var arg = args[i];

		if (isArrayish(arg)) {
			// http://jsperf.com/javascript-array-concat-vs-push/98
			results = concat.call(results, slice.call(arg));
		} else {
			results.push(arg);
		}
	}

	return results;
};

swizzle.wrap = function (fn) {
	return function () {
		return fn(swizzle(arguments));
	};
};


/***/ }),
/* 991 */
/***/ (function(module, exports) {

module.exports = function isArrayish(obj) {
	if (!obj || typeof obj === 'string') {
		return false;
	}

	return obj instanceof Array || Array.isArray(obj) ||
		(obj.length >= 0 && (obj.splice instanceof Function ||
			(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));
};


/***/ }),
/* 992 */
/***/ (function(module, exports, __webpack_require__) {

var conversions = __webpack_require__(139);
var route = __webpack_require__(993);

var convert = {};

var models = Object.keys(conversions);

function wrapRaw(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		return fn(args);
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

function wrapRounded(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		var result = fn(args);

		// we're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (var len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i]);
			}
		}

		return result;
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

models.forEach(function (fromModel) {
	convert[fromModel] = {};

	Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
	Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});

	var routes = route(fromModel);
	var routeModels = Object.keys(routes);

	routeModels.forEach(function (toModel) {
		var fn = routes[toModel];

		convert[fromModel][toModel] = wrapRounded(fn);
		convert[fromModel][toModel].raw = wrapRaw(fn);
	});
});

module.exports = convert;


/***/ }),
/* 993 */
/***/ (function(module, exports, __webpack_require__) {

var conversions = __webpack_require__(139);

/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	var graph = {};
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	var models = Object.keys(conversions);

	for (var len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		};
	}

	return graph;
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	var graph = buildGraph();
	var queue = [fromModel]; // unshift -> queue -> pop

	graph[fromModel].distance = 0;

	while (queue.length) {
		var current = queue.pop();
		var adjacents = Object.keys(conversions[current]);

		for (var len = adjacents.length, i = 0; i < len; i++) {
			var adjacent = adjacents[i];
			var node = graph[adjacent];

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1;
				node.parent = current;
				queue.unshift(adjacent);
			}
		}
	}

	return graph;
}

function link(from, to) {
	return function (args) {
		return to(from(args));
	};
}

function wrapConversion(toModel, graph) {
	var path = [graph[toModel].parent, toModel];
	var fn = conversions[graph[toModel].parent][toModel];

	var cur = graph[toModel].parent;
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent);
		fn = link(conversions[graph[cur].parent][cur], fn);
		cur = graph[cur].parent;
	}

	fn.conversion = path;
	return fn;
}

module.exports = function (fromModel) {
	var graph = deriveBFS(fromModel);
	var conversion = {};

	var models = Object.keys(graph);
	for (var len = models.length, i = 0; i < len; i++) {
		var toModel = models[i];
		var node = graph[toModel];

		if (node.parent === null) {
			// no possible conversion, or this node is the source model.
			continue;
		}

		conversion[toModel] = wrapConversion(toModel, graph);
	}

	return conversion;
};



/***/ }),
/* 994 */
/***/ (function(module) {

module.exports = {"#f0ffff":"azure","#f5f5dc":"beige","#ffe4c4":"bisque","#a52a2a":"brown","#ff7f50":"coral","#ffd700":"gold","#808080":"grey","#008000":"green","#4b0082":"indigo","#fffff0":"ivory","#f0e68c":"khaki","#faf0e6":"linen","#800000":"maroon","#000080":"navy","#808000":"olive","#ffa500":"orange","#da70d6":"orchid","#cd853f":"peru","#ffc0cb":"pink","#dda0dd":"plum","#800080":"purple","#f00":"red","#fa8072":"salmon","#a0522d":"sienna","#c0c0c0":"silver","#fffafa":"snow","#d2b48c":"tan","#008080":"teal","#ff6347":"tomato","#ee82ee":"violet","#f5deb3":"wheat"};

/***/ }),
/* 995 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = hex => {
    if (hex[1] === hex[2] && hex[3] === hex[4] && hex[5] === hex[6]) {
        return '#' + hex[2] + hex[4] + hex[6];
    }

    return hex;
};

/***/ }),
/* 996 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _animation = __webpack_require__(997);

var _animation2 = _interopRequireDefault(_animation);

var _border = __webpack_require__(998);

var _border2 = _interopRequireDefault(_border);

var _boxShadow = __webpack_require__(999);

var _boxShadow2 = _interopRequireDefault(_boxShadow);

var _flexFlow = __webpack_require__(1000);

var _flexFlow2 = _interopRequireDefault(_flexFlow);

var _transition = __webpack_require__(1001);

var _transition2 = _interopRequireDefault(_transition);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable quote-props */

const rules = {
    'animation': _animation2.default,
    '-webkit-animation': _animation2.default,
    'border': _border2.default,
    'border-top': _border2.default,
    'border-right': _border2.default,
    'border-bottom': _border2.default,
    'border-left': _border2.default,
    'outline': _border2.default,
    'box-shadow': _boxShadow2.default,
    'flex-flow': _flexFlow2.default,
    'transition': _transition2.default,
    '-webkit-transition': _transition2.default
};

/* eslint-enable */

// rules
function shouldAbort(parsed) {
    let abort = false;

    parsed.walk(({ type, value }) => {
        if (type === 'comment' || type === 'function' && value.toLowerCase() === 'var' || type === 'word' && ~value.indexOf(`___CSS_LOADER_IMPORT___`)) {
            abort = true;

            return false;
        }
    });

    return abort;
}

function getValue(decl) {
    let { value, raws } = decl;

    if (raws && raws.value && raws.value.raw) {
        value = raws.value.raw;
    }

    return value;
}

exports.default = _postcss2.default.plugin('postcss-ordered-values', () => {
    return css => {
        const cache = {};

        css.walkDecls(decl => {
            const lowerCasedProp = decl.prop.toLowerCase();
            const processor = rules[lowerCasedProp];

            if (!processor) {
                return;
            }

            const value = getValue(decl);

            if (cache[value]) {
                decl.value = cache[value];

                return;
            }

            const parsed = (0, _postcssValueParser2.default)(value);

            if (parsed.nodes.length < 2 || shouldAbort(parsed)) {
                cache[value] = value;

                return;
            }

            const result = processor(parsed);

            decl.value = result;
            cache[value] = result;
        });
    };
});
module.exports = exports['default'];

/***/ }),
/* 997 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = normalizeAnimation;

var _postcssValueParser = __webpack_require__(4);

var _cssnanoUtilGetArguments = __webpack_require__(15);

var _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);

var _addSpace = __webpack_require__(48);

var _addSpace2 = _interopRequireDefault(_addSpace);

var _getValue = __webpack_require__(49);

var _getValue2 = _interopRequireDefault(_getValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// animation: [ none | <keyframes-name> ] || <time> || <single-timing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state>

const isTimingFunction = (value, type) => {
    const functions = ['steps', 'cubic-bezier', 'frames'];
    const keywords = ['ease', 'ease-in', 'ease-in-out', 'ease-out', 'linear', 'step-end', 'step-start'];

    return type === 'function' && functions.includes(value) || keywords.includes(value);
};

const isDirection = value => {
    return ['normal', 'reverse', 'alternate', 'alternate-reverse'].includes(value);
};

const isFillMode = value => {
    return ['none', 'forwards', 'backwards', 'both'].includes(value);
};

const isPlayState = value => {
    return ['running', 'paused'].includes(value);
};

const isTime = value => {
    const quantity = (0, _postcssValueParser.unit)(value);

    return quantity && ['ms', 's'].includes(quantity.unit);
};

const isIterationCount = value => {
    const quantity = (0, _postcssValueParser.unit)(value);

    return value === 'infinite' || quantity && !quantity.unit;
};

function normalizeAnimation(parsed) {
    const args = (0, _cssnanoUtilGetArguments2.default)(parsed);

    const values = args.reduce((list, arg) => {
        const state = {
            name: [],
            duration: [],
            timingFunction: [],
            delay: [],
            iterationCount: [],
            direction: [],
            fillMode: [],
            playState: []
        };
        const stateConditions = [{ property: 'duration', delegate: isTime }, { property: 'timingFunction', delegate: isTimingFunction }, { property: 'delay', delegate: isTime }, { property: 'iterationCount', delegate: isIterationCount }, { property: 'direction', delegate: isDirection }, { property: 'fillMode', delegate: isFillMode }, { property: 'playState', delegate: isPlayState }];

        arg.forEach(node => {
            let { type, value } = node;

            if (type === 'space') {
                return;
            }

            value = value.toLowerCase();

            const hasMatch = stateConditions.some(({ property, delegate }) => {
                if (delegate(value, type) && !state[property].length) {
                    state[property] = [node, (0, _addSpace2.default)()];
                    return true;
                }
            });

            if (!hasMatch) {
                state.name = [...state.name, node, (0, _addSpace2.default)()];
            }
        });
        return [...list, [...state.name, ...state.duration, ...state.timingFunction, ...state.delay, ...state.iterationCount, ...state.direction, ...state.fillMode, ...state.playState]];
    }, []);

    return (0, _getValue2.default)(values);
};
module.exports = exports['default'];

/***/ }),
/* 998 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = normalizeBorder;

var _postcssValueParser = __webpack_require__(4);

// border: <line-width> || <line-style> || <color>
// outline: <outline-color> || <outline-style> || <outline-width>

const borderWidths = ['thin', 'medium', 'thick'];

const borderStyles = ['none', 'auto', // only in outline-style
'hidden', 'dotted', 'dashed', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset'];

function normalizeBorder(border) {
    const order = { width: '', style: '', color: '' };

    border.walk(node => {
        const { type, value } = node;
        if (type === 'word') {
            if (~borderStyles.indexOf(value.toLowerCase())) {
                order.style = value;
                return false;
            }
            if (~borderWidths.indexOf(value.toLowerCase()) || (0, _postcssValueParser.unit)(value.toLowerCase())) {
                if (order.width !== '') {
                    order.width = `${order.width} ${value}`;
                    return false;
                }
                order.width = value;
                return false;
            }
            order.color = value;
            return false;
        }
        if (type === 'function') {
            if (value.toLowerCase() === 'calc') {
                order.width = (0, _postcssValueParser.stringify)(node);
            } else {
                order.color = (0, _postcssValueParser.stringify)(node);
            }
            return false;
        }
    });

    return `${order.width} ${order.style} ${order.color}`.trim();
};
module.exports = exports['default'];

/***/ }),
/* 999 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = normalizeBoxShadow;

var _postcssValueParser = __webpack_require__(4);

var _cssnanoUtilGetArguments = __webpack_require__(15);

var _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);

var _addSpace = __webpack_require__(48);

var _addSpace2 = _interopRequireDefault(_addSpace);

var _getValue = __webpack_require__(49);

var _getValue2 = _interopRequireDefault(_getValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// box-shadow: inset? && <length>{2,4} && <color>?

function normalizeBoxShadow(parsed) {
    let args = (0, _cssnanoUtilGetArguments2.default)(parsed);
    let abort = false;

    let values = args.reduce((list, arg) => {
        let val = [];
        let state = {
            inset: [],
            color: []
        };

        arg.forEach(node => {
            const { type, value } = node;

            if (type === 'function' && ~value.toLowerCase().indexOf('calc')) {
                abort = true;
                return;
            }

            if (type === 'space') {
                return;
            }

            if ((0, _postcssValueParser.unit)(value)) {
                val = [...val, node, (0, _addSpace2.default)()];
            } else if (value.toLowerCase() === 'inset') {
                state.inset = [...state.inset, node, (0, _addSpace2.default)()];
            } else {
                state.color = [...state.color, node, (0, _addSpace2.default)()];
            }
        });

        return [...list, [...state.inset, ...val, ...state.color]];
    }, []);

    if (abort) {
        return parsed.toString();
    }

    return (0, _getValue2.default)(values);
}
module.exports = exports['default'];

/***/ }),
/* 1000 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = normalizeFlexFlow;
// flex-flow: <flex-direction> || <flex-wrap>

const flexDirection = ['row', 'row-reverse', 'column', 'column-reverse'];

const flexWrap = ['nowrap', 'wrap', 'wrap-reverse'];

function normalizeFlexFlow(flexFlow) {
    let order = {
        direction: '',
        wrap: ''
    };

    flexFlow.walk(({ value }) => {
        if (~flexDirection.indexOf(value.toLowerCase())) {
            order.direction = value;
            return;
        }

        if (~flexWrap.indexOf(value.toLowerCase())) {
            order.wrap = value;

            return;
        }
    });

    return `${order.direction} ${order.wrap}`.trim();
};
module.exports = exports['default'];

/***/ }),
/* 1001 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = normalizeTransition;

var _postcssValueParser = __webpack_require__(4);

var _cssnanoUtilGetArguments = __webpack_require__(15);

var _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);

var _addSpace = __webpack_require__(48);

var _addSpace2 = _interopRequireDefault(_addSpace);

var _getValue = __webpack_require__(49);

var _getValue2 = _interopRequireDefault(_getValue);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// transition: [ none | <single-transition-property> ] || <time> || <single-transition-timing-function> || <time>

const timingFunctions = ['ease', 'linear', 'ease-in', 'ease-out', 'ease-in-out', 'step-start', 'step-end'];

function normalizeTransition(parsed) {
    let args = (0, _cssnanoUtilGetArguments2.default)(parsed);

    let values = args.reduce((list, arg) => {
        let state = {
            timingFunction: [],
            property: [],
            time1: [],
            time2: []
        };

        arg.forEach(node => {
            const { type, value } = node;

            if (type === 'space') {
                return;
            }

            if (type === 'function' && ~['steps', 'cubic-bezier'].indexOf(value.toLowerCase())) {
                state.timingFunction = [...state.timingFunction, node, (0, _addSpace2.default)()];
            } else if ((0, _postcssValueParser.unit)(value)) {
                if (!state.time1.length) {
                    state.time1 = [...state.time1, node, (0, _addSpace2.default)()];
                } else {
                    state.time2 = [...state.time2, node, (0, _addSpace2.default)()];
                }
            } else if (~timingFunctions.indexOf(value.toLowerCase())) {
                state.timingFunction = [...state.timingFunction, node, (0, _addSpace2.default)()];
            } else {
                state.property = [...state.property, node, (0, _addSpace2.default)()];
            }
        });

        return [...list, [...state.property, ...state.time1, ...state.timingFunction, ...state.time2]];
    }, []);

    return (0, _getValue2.default)(values);
}
module.exports = exports['default'];

/***/ }),
/* 1002 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _alphanumSort = __webpack_require__(50);

var _alphanumSort2 = _interopRequireDefault(_alphanumSort);

var _has = __webpack_require__(25);

var _has2 = _interopRequireDefault(_has);

var _postcssSelectorParser = __webpack_require__(1004);

var _postcssSelectorParser2 = _interopRequireDefault(_postcssSelectorParser);

var _unquote = __webpack_require__(156);

var _unquote2 = _interopRequireDefault(_unquote);

var _canUnquote = __webpack_require__(1013);

var _canUnquote2 = _interopRequireDefault(_canUnquote);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const pseudoElements = ["::before", "::after", "::first-letter", "::first-line"];

function getParsed(selectors, callback) {
    return (0, _postcssSelectorParser2.default)(callback).processSync(selectors);
}

function attribute(selector) {
    if (selector.value) {
        // Join selectors that are split over new lines
        selector.value = selector.value.replace(/\\\n/g, "").trim();

        if ((0, _canUnquote2.default)(selector.value)) {
            selector.value = (0, _unquote2.default)(selector.value);
        }

        selector.operator = selector.operator.trim();
    }

    if (!selector.raws) {
        selector.raws = {};
    }

    if (!selector.raws.spaces) {
        selector.raws.spaces = {};
    }

    selector.raws.spaces.attribute = {
        before: "",
        after: ""
    };

    selector.raws.spaces.operator = {
        before: "",
        after: ""
    };

    selector.raws.spaces.value = {
        before: "",
        after: selector.insensitive ? " " : ""
    };

    if (selector.insensitive) {
        selector.raws.spaces.insensitive = {
            before: "",
            after: ""
        };
    }

    selector.attribute = selector.attribute.trim();
}

function combinator(selector) {
    const value = selector.value.trim();

    selector.value = value.length ? value : " ";
}

const pseudoReplacements = {
    ":nth-child": ":first-child",
    ":nth-of-type": ":first-of-type",
    ":nth-last-child": ":last-child",
    ":nth-last-of-type": ":last-of-type"
};

function pseudo(selector) {
    const value = selector.value.toLowerCase();

    if (selector.nodes.length === 1 && pseudoReplacements[value]) {
        const first = selector.at(0);
        const one = first.at(0);

        if (first.length === 1) {
            if (one.value === "1") {
                selector.replaceWith(_postcssSelectorParser2.default.pseudo({
                    value: pseudoReplacements[value]
                }));
            }

            if (one.value.toLowerCase() === "even") {
                one.value = "2n";
            }
        }

        if (first.length === 3) {
            const two = first.at(1);
            const three = first.at(2);

            if (one.value.toLowerCase() === "2n" && two.value === "+" && three.value === "1") {
                one.value = "odd";

                two.remove();
                three.remove();
            }
        }

        return;
    }

    const uniques = [];

    selector.walk(child => {
        if (child.type === "selector") {
            const childStr = String(child);

            if (!~uniques.indexOf(childStr)) {
                uniques.push(childStr);
            } else {
                child.remove();
            }
        }
    });

    if (~pseudoElements.indexOf(value)) {
        selector.value = selector.value.slice(1);
    }
}

const tagReplacements = {
    from: "0%",
    "100%": "to"
};

function tag(selector) {
    const value = selector.value.toLowerCase();

    if ((0, _has2.default)(tagReplacements, value)) {
        selector.value = tagReplacements[value];
    }
}

function universal(selector) {
    const next = selector.next();

    if (next && next.type !== "combinator") {
        selector.remove();
    }
}

const reducers = {
    attribute,
    combinator,
    pseudo,
    tag,
    universal
};

exports.default = (0, _postcss.plugin)("postcss-minify-selectors", () => {
    return css => {
        const cache = {};

        css.walkRules(rule => {
            const selector = rule.raws.selector && rule.raws.selector.value === rule.selector ? rule.raws.selector.raw : rule.selector;

            // If the selector ends with a ':' it is likely a part of a custom mixin,
            // so just pass through.
            if (selector[selector.length - 1] === ":") {
                return;
            }

            if (cache[selector]) {
                rule.selector = cache[selector];

                return;
            }

            const optimizedSelector = getParsed(selector, selectors => {
                selectors.nodes = (0, _alphanumSort2.default)(selectors.nodes, { insensitive: true });

                const uniqueSelectors = [];

                selectors.walk(sel => {
                    const { type } = sel;

                    // Trim whitespace around the value
                    sel.spaces.before = sel.spaces.after = "";

                    if ((0, _has2.default)(reducers, type)) {
                        reducers[type](sel);

                        return;
                    }

                    const toString = String(sel);

                    if (type === "selector" && sel.parent.type !== "pseudo") {
                        if (!~uniqueSelectors.indexOf(toString)) {
                            uniqueSelectors.push(toString);
                        } else {
                            sel.remove();
                        }
                    }
                });
            });

            rule.selector = optimizedSelector;
            cache[selector] = optimizedSelector;
        });
    };
});
module.exports = exports["default"];

/***/ }),
/* 1003 */
/***/ (function(module, exports) {

var zero = '0'.charCodeAt(0);
var plus = '+'.charCodeAt(0);
var minus = '-'.charCodeAt(0);

function isWhitespace(code) {
	return code <= 32;
}

function isDigit(code) {
	return 48 <= code && code <= 57;
}

function isSign(code) {
	return code === minus || code === plus;
}

module.exports = function (opts, a, b) {
	var checkSign = opts.sign;
	var ia = 0;
	var ib = 0;
	var ma = a.length;
	var mb = b.length;
	var ca, cb; // character code
	var za, zb; // leading zero count
	var na, nb; // number length
	var sa, sb; // number sign
	var ta, tb; // temporary
	var bias;

	while (ia < ma && ib < mb) {
		ca = a.charCodeAt(ia);
		cb = b.charCodeAt(ib);
		za = zb = 0;
		na = nb = 0;
		sa = sb = true;
		bias = 0;

		// skip over leading spaces
		while (isWhitespace(ca)) {
			ia += 1;
			ca = a.charCodeAt(ia);
		}
		while (isWhitespace(cb)) {
			ib += 1;
			cb = b.charCodeAt(ib);
		}

		// skip and save sign
		if (checkSign) {
			ta = a.charCodeAt(ia + 1);
			if (isSign(ca) && isDigit(ta)) {
				if (ca === minus) {
					sa = false;
				}
				ia += 1;
				ca = ta;
			}
			tb = b.charCodeAt(ib + 1);
			if (isSign(cb) && isDigit(tb)) {
				if (cb === minus) {
					sb = false;
				}
				ib += 1;
				cb = tb;
			}
		}

		// compare digits with other symbols
		if (isDigit(ca) && !isDigit(cb)) {
			return -1;
		}
		if (!isDigit(ca) && isDigit(cb)) {
			return 1;
		}

		// compare negative and positive
		if (!sa && sb) {
			return -1;
		}
		if (sa && !sb) {
			return 1;
		}

		// count leading zeros
		while (ca === zero) {
			za += 1;
			ia += 1;
			ca = a.charCodeAt(ia);
		}
		while (cb === zero) {
			zb += 1;
			ib += 1;
			cb = b.charCodeAt(ib);
		}

		// count numbers
		while (isDigit(ca) || isDigit(cb)) {
			if (isDigit(ca) && isDigit(cb) && bias === 0) {
				if (sa) {
					if (ca < cb) {
						bias = -1;
					} else if (ca > cb) {
						bias = 1;
					}
				} else {
					if (ca > cb) {
						bias = -1;
					} else if (ca < cb) {
						bias = 1;
					}
				}
			}
			if (isDigit(ca)) {
				ia += 1;
				na += 1;
				ca = a.charCodeAt(ia);
			}
			if (isDigit(cb)) {
				ib += 1;
				nb += 1;
				cb = b.charCodeAt(ib);
			}
		}

		// compare number length
		if (sa) {
			if (na < nb) {
				return -1;
			}
			if (na > nb) {
				return 1;
			}
		} else {
			if (na > nb) {
				return -1;
			}
			if (na < nb) {
				return 1;
			}
		}

		// compare numbers
		if (bias) {
			return bias;
		}

		// compare leading zeros
		if (sa) {
			if (za > zb) {
				return -1;
			}
			if (za < zb) {
				return 1;
			}
		} else {
			if (za < zb) {
				return -1;
			}
			if (za > zb) {
				return 1;
			}
		}

		// compare ascii codes
		if (ca < cb) {
			return -1;
		}
		if (ca > cb) {
			return 1;
		}

		ia += 1;
		ib += 1;
	}

	// compare length
	if (ma < mb) {
		return -1;
	}
	if (ma > mb) {
		return 1;
	}
};


/***/ }),
/* 1004 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _processor = __webpack_require__(1005);

var _processor2 = _interopRequireDefault(_processor);

var _selectors = __webpack_require__(1010);

var selectors = _interopRequireWildcard(_selectors);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parser = function parser(processor) {
  return new _processor2.default(processor);
};

Object.assign(parser, selectors);

delete parser.__esModule;

exports.default = parser;
module.exports = exports['default'];

/***/ }),
/* 1005 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _parser = __webpack_require__(1006);

var _parser2 = _interopRequireDefault(_parser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Processor = function () {
    function Processor(func, options) {
        _classCallCheck(this, Processor);

        this.func = func || function noop() {};
        this.funcRes = null;
        this.options = options;
    }

    Processor.prototype._shouldUpdateSelector = function _shouldUpdateSelector(rule) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var merged = Object.assign({}, this.options, options);
        if (merged.updateSelector === false) {
            return false;
        } else {
            return typeof rule !== "string";
        }
    };

    Processor.prototype._isLossy = function _isLossy() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var merged = Object.assign({}, this.options, options);
        if (merged.lossless === false) {
            return true;
        } else {
            return false;
        }
    };

    Processor.prototype._root = function _root(rule) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var parser = new _parser2.default(rule, this._parseOptions(options));
        return parser.root;
    };

    Processor.prototype._parseOptions = function _parseOptions(options) {
        return {
            lossy: this._isLossy(options)
        };
    };

    Processor.prototype._run = function _run(rule) {
        var _this = this;

        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        return new Promise(function (resolve, reject) {
            try {
                var root = _this._root(rule, options);
                Promise.resolve(_this.func(root)).then(function (transform) {
                    var string = undefined;
                    if (_this._shouldUpdateSelector(rule, options)) {
                        string = root.toString();
                        rule.selector = string;
                    }
                    return { transform: transform, root: root, string: string };
                }).then(resolve, reject);
            } catch (e) {
                reject(e);
                return;
            }
        });
    };

    Processor.prototype._runSync = function _runSync(rule) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var root = this._root(rule, options);
        var transform = this.func(root);
        if (transform && typeof transform.then === "function") {
            throw new Error("Selector processor returned a promise to a synchronous call.");
        }
        var string = undefined;
        if (options.updateSelector && typeof rule !== "string") {
            string = root.toString();
            rule.selector = string;
        }
        return { transform: transform, root: root, string: string };
    };

    /**
     * Process rule into a selector AST.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {Promise<parser.Root>} The AST of the selector after processing it.
     */


    Processor.prototype.ast = function ast(rule, options) {
        return this._run(rule, options).then(function (result) {
            return result.root;
        });
    };

    /**
     * Process rule into a selector AST synchronously.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {parser.Root} The AST of the selector after processing it.
     */


    Processor.prototype.astSync = function astSync(rule, options) {
        return this._runSync(rule, options).root;
    };

    /**
     * Process a selector into a transformed value asynchronously
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {Promise<any>} The value returned by the processor.
     */


    Processor.prototype.transform = function transform(rule, options) {
        return this._run(rule, options).then(function (result) {
            return result.transform;
        });
    };

    /**
     * Process a selector into a transformed value synchronously.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {any} The value returned by the processor.
     */


    Processor.prototype.transformSync = function transformSync(rule, options) {
        return this._runSync(rule, options).transform;
    };

    /**
     * Process a selector into a new selector string asynchronously.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {string} the selector after processing.
     */


    Processor.prototype.process = function process(rule, options) {
        return this._run(rule, options).then(function (result) {
            return result.string || result.root.toString();
        });
    };

    /**
     * Process a selector into a new selector string synchronously.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {string} the selector after processing.
     */


    Processor.prototype.processSync = function processSync(rule, options) {
        var result = this._runSync(rule, options);
        return result.string || result.root.toString();
    };

    return Processor;
}();

exports.default = Processor;
module.exports = exports["default"];

/***/ }),
/* 1006 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dotProp = __webpack_require__(1007);

var _dotProp2 = _interopRequireDefault(_dotProp);

var _indexesOf = __webpack_require__(141);

var _indexesOf2 = _interopRequireDefault(_indexesOf);

var _uniq = __webpack_require__(142);

var _uniq2 = _interopRequireDefault(_uniq);

var _root = __webpack_require__(143);

var _root2 = _interopRequireDefault(_root);

var _selector = __webpack_require__(144);

var _selector2 = _interopRequireDefault(_selector);

var _className = __webpack_require__(145);

var _className2 = _interopRequireDefault(_className);

var _comment = __webpack_require__(146);

var _comment2 = _interopRequireDefault(_comment);

var _id = __webpack_require__(147);

var _id2 = _interopRequireDefault(_id);

var _tag = __webpack_require__(148);

var _tag2 = _interopRequireDefault(_tag);

var _string = __webpack_require__(149);

var _string2 = _interopRequireDefault(_string);

var _pseudo = __webpack_require__(150);

var _pseudo2 = _interopRequireDefault(_pseudo);

var _attribute = __webpack_require__(151);

var _attribute2 = _interopRequireDefault(_attribute);

var _universal = __webpack_require__(152);

var _universal2 = _interopRequireDefault(_universal);

var _combinator = __webpack_require__(153);

var _combinator2 = _interopRequireDefault(_combinator);

var _nesting = __webpack_require__(154);

var _nesting2 = _interopRequireDefault(_nesting);

var _sortAscending = __webpack_require__(1008);

var _sortAscending2 = _interopRequireDefault(_sortAscending);

var _tokenize = __webpack_require__(1009);

var _tokenize2 = _interopRequireDefault(_tokenize);

var _tokenTypes = __webpack_require__(155);

var tokens = _interopRequireWildcard(_tokenTypes);

var _types = __webpack_require__(8);

var types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function getSource(startLine, startColumn, endLine, endColumn) {
    return {
        start: {
            line: startLine,
            column: startColumn
        },
        end: {
            line: endLine,
            column: endColumn
        }
    };
}

var Parser = function () {
    function Parser(rule) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, Parser);

        this.rule = rule;
        this.options = Object.assign({ lossy: false, safe: false }, options);
        this.position = 0;
        this.root = new _root2.default();
        this.root.errorGenerator = this._errorGenerator();

        var selector = new _selector2.default();
        this.root.append(selector);
        this.current = selector;

        this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;

        if (this.options.lossy) {
            this.css = this.css.trim();
        }
        this.tokens = (0, _tokenize2.default)({
            css: this.css,
            error: this._errorGenerator(),
            safe: this.options.safe
        });

        this.loop();
    }

    Parser.prototype._errorGenerator = function _errorGenerator() {
        var _this = this;

        return function (message, errorOptions) {
            if (typeof _this.rule === 'string') {
                return new Error(message);
            }
            return _this.rule.error(message, errorOptions);
        };
    };

    Parser.prototype.attribute = function attribute() {
        var attr = [];
        var startingToken = this.currToken;
        this.position++;
        while (this.position < this.tokens.length && this.currToken[0] !== tokens.closeSquare) {
            attr.push(this.currToken);
            this.position++;
        }
        if (this.currToken[0] !== tokens.closeSquare) {
            return this.expected('closing square bracket', this.currToken[5]);
        }

        var len = attr.length;
        var node = {
            source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),
            sourceIndex: startingToken[5]
        };

        if (len === 1 && !~[tokens.word].indexOf(attr[0][0])) {
            return this.expected('attribute', attr[0][5]);
        }

        var pos = 0;
        var spaceBefore = '';
        var commentBefore = '';
        var lastAdded = null;
        var spaceAfterMeaningfulToken = false;

        while (pos < len) {
            var token = attr[pos];
            var content = this.content(token);
            var next = attr[pos + 1];

            switch (token[0]) {
                case tokens.space:
                    if (len === 1 || pos === 0 && this.content(next) === '|') {
                        return this.expected('attribute', token[5], content);
                    }
                    spaceAfterMeaningfulToken = true;
                    if (this.options.lossy) {
                        break;
                    }
                    if (lastAdded) {
                        var spaceProp = 'spaces.' + lastAdded + '.after';
                        _dotProp2.default.set(node, spaceProp, _dotProp2.default.get(node, spaceProp, '') + content);
                        var commentProp = 'raws.spaces.' + lastAdded + '.after';
                        var existingComment = _dotProp2.default.get(node, commentProp);
                        if (existingComment) {
                            _dotProp2.default.set(node, commentProp, existingComment + content);
                        }
                    } else {
                        spaceBefore = spaceBefore + content;
                        commentBefore = commentBefore + content;
                    }
                    break;
                case tokens.asterisk:
                    if (next[0] === tokens.equals) {
                        node.operator = content;
                        lastAdded = 'operator';
                    } else if ((!node.namespace || lastAdded === "namespace" && !spaceAfterMeaningfulToken) && next) {
                        if (spaceBefore) {
                            _dotProp2.default.set(node, 'spaces.attribute.before', spaceBefore);
                            spaceBefore = '';
                        }
                        if (commentBefore) {
                            _dotProp2.default.set(node, 'raws.spaces.attribute.before', spaceBefore);
                            commentBefore = '';
                        }
                        node.namespace = (node.namespace || "") + content;
                        var rawValue = _dotProp2.default.get(node, "raws.namespace");
                        if (rawValue) {
                            node.raws.namespace += content;
                        }
                        lastAdded = 'namespace';
                    }
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.dollar:
                case tokens.caret:
                    if (next[0] === tokens.equals) {
                        node.operator = content;
                        lastAdded = 'operator';
                    }
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.combinator:
                    if (content === '~' && next[0] === tokens.equals) {
                        node.operator = content;
                        lastAdded = 'operator';
                    }
                    if (content !== '|') {
                        spaceAfterMeaningfulToken = false;
                        break;
                    }
                    if (next[0] === tokens.equals) {
                        node.operator = content;
                        lastAdded = 'operator';
                    } else if (!node.namespace && !node.attribute) {
                        node.namespace = true;
                    }
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.word:
                    if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][0] !== tokens.equals && // this look-ahead probably fails with comment nodes involved.
                    !node.operator && !node.namespace) {
                        node.namespace = content;
                        lastAdded = 'namespace';
                    } else if (!node.attribute || lastAdded === "attribute" && !spaceAfterMeaningfulToken) {
                        if (spaceBefore) {
                            _dotProp2.default.set(node, 'spaces.attribute.before', spaceBefore);
                            spaceBefore = '';
                        }
                        if (commentBefore) {
                            _dotProp2.default.set(node, 'raws.spaces.attribute.before', commentBefore);
                            commentBefore = '';
                        }
                        node.attribute = (node.attribute || "") + content;
                        var _rawValue = _dotProp2.default.get(node, "raws.attribute");
                        if (_rawValue) {
                            node.raws.attribute += content;
                        }
                        lastAdded = 'attribute';
                    } else if (!node.value || lastAdded === "value" && !spaceAfterMeaningfulToken) {
                        node.value = (node.value || "") + content;
                        var _rawValue2 = _dotProp2.default.get(node, "raws.value");
                        if (_rawValue2) {
                            node.raws.value += content;
                        }
                        lastAdded = 'value';
                        _dotProp2.default.set(node, 'raws.unquoted', _dotProp2.default.get(node, 'raws.unquoted', '') + content);
                    } else if (content === 'i') {
                        if (node.value && (node.quoted || spaceAfterMeaningfulToken)) {
                            node.insensitive = true;
                            lastAdded = 'insensitive';
                            if (spaceBefore) {
                                _dotProp2.default.set(node, 'spaces.insensitive.before', spaceBefore);
                                spaceBefore = '';
                            }
                            if (commentBefore) {
                                _dotProp2.default.set(node, 'raws.spaces.insensitive.before', commentBefore);
                                commentBefore = '';
                            }
                        } else if (node.value) {
                            lastAdded = 'value';
                            node.value += 'i';
                            if (node.raws.value) {
                                node.raws.value += 'i';
                            }
                        }
                    }
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.str:
                    if (!node.attribute || !node.operator) {
                        return this.error('Expected an attribute followed by an operator preceding the string.', {
                            index: token[5]
                        });
                    }
                    node.value = content;
                    node.quoted = true;
                    lastAdded = 'value';
                    _dotProp2.default.set(node, 'raws.unquoted', content.slice(1, -1));
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.equals:
                    if (!node.attribute) {
                        return this.expected('attribute', token[5], content);
                    }
                    if (node.value) {
                        return this.error('Unexpected "=" found; an operator was already defined.', { index: token[5] });
                    }
                    node.operator = node.operator ? node.operator + content : content;
                    lastAdded = 'operator';
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.comment:
                    if (lastAdded) {
                        if (spaceAfterMeaningfulToken || next && next[0] === tokens.space) {
                            var lastComment = _dotProp2.default.get(node, 'raws.spaces.' + lastAdded + '.after', _dotProp2.default.get(node, 'spaces.' + lastAdded + '.after', ''));
                            _dotProp2.default.set(node, 'raws.spaces.' + lastAdded + '.after', lastComment + content);
                        } else {
                            var lastValue = _dotProp2.default.get(node, 'raws.' + lastAdded, _dotProp2.default.get(node, lastAdded, ''));
                            _dotProp2.default.set(node, 'raws.' + lastAdded, lastValue + content);
                        }
                    } else {
                        commentBefore = commentBefore + content;
                    }
                    break;
                default:
                    return this.error('Unexpected "' + content + '" found.', { index: token[5] });
            }
            pos++;
        }

        this.newNode(new _attribute2.default(node));
        this.position++;
    };

    Parser.prototype.combinator = function combinator() {
        var current = this.currToken;
        if (this.content() === '|') {
            return this.namespace();
        }
        var node = new _combinator2.default({
            value: '',
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        });
        while (this.position < this.tokens.length && this.currToken && (this.currToken[0] === tokens.space || this.currToken[0] === tokens.combinator)) {
            var content = this.content();
            if (this.nextToken && this.nextToken[0] === tokens.combinator) {
                node.spaces.before = this.parseSpace(content);
                node.source = getSource(this.nextToken[1], this.nextToken[2], this.nextToken[3], this.nextToken[4]);
                node.sourceIndex = this.nextToken[5];
            } else if (this.prevToken && this.prevToken[0] === tokens.combinator) {
                node.spaces.after = this.parseSpace(content);
            } else if (this.currToken[0] === tokens.combinator) {
                node.value = content;
            } else if (this.currToken[0] === tokens.space) {
                node.value = this.parseSpace(content, ' ');
            }
            this.position++;
        }
        return this.newNode(node);
    };

    Parser.prototype.comma = function comma() {
        if (this.position === this.tokens.length - 1) {
            this.root.trailingComma = true;
            this.position++;
            return;
        }
        var selector = new _selector2.default();
        this.current.parent.append(selector);
        this.current = selector;
        this.position++;
    };

    Parser.prototype.comment = function comment() {
        var current = this.currToken;
        this.newNode(new _comment2.default({
            value: this.content(),
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        }));
        this.position++;
    };

    Parser.prototype.error = function error(message, opts) {
        throw this.root.error(message, opts);
    };

    Parser.prototype.missingBackslash = function missingBackslash() {
        return this.error('Expected a backslash preceding the semicolon.', {
            index: this.currToken[5]
        });
    };

    Parser.prototype.missingParenthesis = function missingParenthesis() {
        return this.expected('opening parenthesis', this.currToken[5]);
    };

    Parser.prototype.missingSquareBracket = function missingSquareBracket() {
        return this.expected('opening square bracket', this.currToken[5]);
    };

    Parser.prototype.namespace = function namespace() {
        var before = this.prevToken && this.content(this.prevToken) || true;
        if (this.nextToken[0] === tokens.word) {
            this.position++;
            return this.word(before);
        } else if (this.nextToken[0] === tokens.asterisk) {
            this.position++;
            return this.universal(before);
        }
    };

    Parser.prototype.nesting = function nesting() {
        var current = this.currToken;
        this.newNode(new _nesting2.default({
            value: this.content(),
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        }));
        this.position++;
    };

    Parser.prototype.parentheses = function parentheses() {
        var last = this.current.last;
        var balanced = 1;
        this.position++;
        if (last && last.type === types.PSEUDO) {
            var selector = new _selector2.default();
            var cache = this.current;
            last.append(selector);
            this.current = selector;
            while (this.position < this.tokens.length && balanced) {
                if (this.currToken[0] === tokens.openParenthesis) {
                    balanced++;
                }
                if (this.currToken[0] === tokens.closeParenthesis) {
                    balanced--;
                }
                if (balanced) {
                    this.parse();
                } else {
                    selector.parent.source.end.line = this.currToken[3];
                    selector.parent.source.end.column = this.currToken[4];
                    this.position++;
                }
            }
            this.current = cache;
        } else {
            last.value += '(';
            while (this.position < this.tokens.length && balanced) {
                if (this.currToken[0] === tokens.openParenthesis) {
                    balanced++;
                }
                if (this.currToken[0] === tokens.closeParenthesis) {
                    balanced--;
                }
                last.value += this.parseParenthesisToken(this.currToken);
                this.position++;
            }
        }
        if (balanced) {
            return this.expected('closing parenthesis', this.currToken[5]);
        }
    };

    Parser.prototype.pseudo = function pseudo() {
        var _this2 = this;

        var pseudoStr = '';
        var startingToken = this.currToken;
        while (this.currToken && this.currToken[0] === tokens.colon) {
            pseudoStr += this.content();
            this.position++;
        }
        if (!this.currToken) {
            return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);
        }
        if (this.currToken[0] === tokens.word) {
            this.splitWord(false, function (first, length) {
                pseudoStr += first;
                _this2.newNode(new _pseudo2.default({
                    value: pseudoStr,
                    source: getSource(startingToken[1], startingToken[2], _this2.currToken[3], _this2.currToken[4]),
                    sourceIndex: startingToken[5]
                }));
                if (length > 1 && _this2.nextToken && _this2.nextToken[0] === tokens.openParenthesis) {
                    _this2.error('Misplaced parenthesis.', {
                        index: _this2.nextToken[5]
                    });
                }
            });
        } else {
            return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[5]);
        }
    };

    Parser.prototype.space = function space() {
        var content = this.content();
        // Handle space before and after the selector
        if (this.position === 0 || this.prevToken[0] === tokens.comma || this.prevToken[0] === tokens.openParenthesis) {
            this.spaces = this.parseSpace(content);
            this.position++;
        } else if (this.position === this.tokens.length - 1 || this.nextToken[0] === tokens.comma || this.nextToken[0] === tokens.closeParenthesis) {
            this.current.last.spaces.after = this.parseSpace(content);
            this.position++;
        } else {
            this.combinator();
        }
    };

    Parser.prototype.string = function string() {
        var current = this.currToken;
        this.newNode(new _string2.default({
            value: this.content(),
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        }));
        this.position++;
    };

    Parser.prototype.universal = function universal(namespace) {
        var nextToken = this.nextToken;
        if (nextToken && this.content(nextToken) === '|') {
            this.position++;
            return this.namespace();
        }
        var current = this.currToken;
        this.newNode(new _universal2.default({
            value: this.content(),
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        }), namespace);
        this.position++;
    };

    Parser.prototype.splitWord = function splitWord(namespace, firstCallback) {
        var _this3 = this;

        var nextToken = this.nextToken;
        var word = this.content();
        while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[0])) {
            this.position++;
            var current = this.content();
            word += current;
            if (current.lastIndexOf('\\') === current.length - 1) {
                var next = this.nextToken;
                if (next && next[0] === tokens.space) {
                    word += this.parseSpace(this.content(next), ' ');
                    this.position++;
                }
            }
            nextToken = this.nextToken;
        }
        var hasClass = (0, _indexesOf2.default)(word, '.');
        var hasId = (0, _indexesOf2.default)(word, '#');
        // Eliminate Sass interpolations from the list of id indexes
        var interpolations = (0, _indexesOf2.default)(word, '#{');
        if (interpolations.length) {
            hasId = hasId.filter(function (hashIndex) {
                return !~interpolations.indexOf(hashIndex);
            });
        }
        var indices = (0, _sortAscending2.default)((0, _uniq2.default)([0].concat(hasClass, hasId)));
        indices.forEach(function (ind, i) {
            var index = indices[i + 1] || word.length;
            var value = word.slice(ind, index);
            if (i === 0 && firstCallback) {
                return firstCallback.call(_this3, value, indices.length);
            }
            var node = void 0;
            var current = _this3.currToken;
            var sourceIndex = current[5] + indices[i];
            var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));
            if (~hasClass.indexOf(ind)) {
                node = new _className2.default({
                    value: value.slice(1),
                    source: source,
                    sourceIndex: sourceIndex
                });
            } else if (~hasId.indexOf(ind)) {
                node = new _id2.default({
                    value: value.slice(1),
                    source: source,
                    sourceIndex: sourceIndex
                });
            } else {
                node = new _tag2.default({
                    value: value,
                    source: source,
                    sourceIndex: sourceIndex
                });
            }
            _this3.newNode(node, namespace);
            // Ensure that the namespace is used only once
            namespace = null;
        });
        this.position++;
    };

    Parser.prototype.word = function word(namespace) {
        var nextToken = this.nextToken;
        if (nextToken && this.content(nextToken) === '|') {
            this.position++;
            return this.namespace();
        }
        return this.splitWord(namespace);
    };

    Parser.prototype.loop = function loop() {
        while (this.position < this.tokens.length) {
            this.parse(true);
        }
        return this.root;
    };

    Parser.prototype.parse = function parse(throwOnParenthesis) {
        switch (this.currToken[0]) {
            case tokens.space:
                this.space();
                break;
            case tokens.comment:
                this.comment();
                break;
            case tokens.openParenthesis:
                this.parentheses();
                break;
            case tokens.closeParenthesis:
                if (throwOnParenthesis) {
                    this.missingParenthesis();
                }
                break;
            case tokens.openSquare:
                this.attribute();
                break;
            case tokens.dollar:
            case tokens.caret:
            case tokens.equals:
            case tokens.word:
                this.word();
                break;
            case tokens.colon:
                this.pseudo();
                break;
            case tokens.comma:
                this.comma();
                break;
            case tokens.asterisk:
                this.universal();
                break;
            case tokens.ampersand:
                this.nesting();
                break;
            case tokens.combinator:
                this.combinator();
                break;
            case tokens.str:
                this.string();
                break;
            // These cases throw; no break needed.
            case tokens.closeSquare:
                this.missingSquareBracket();
            case tokens.semicolon:
                this.missingBackslash();
        }
    };

    /**
     * Helpers
     */

    Parser.prototype.expected = function expected(description, index, found) {
        if (Array.isArray(description)) {
            var last = description.pop();
            description = description.join(', ') + ' or ' + last;
        }
        var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';
        if (!found) {
            return this.error('Expected ' + an + ' ' + description + '.', { index: index });
        }
        return this.error('Expected ' + an + ' ' + description + ', found "' + found + '" instead.', { index: index });
    };

    Parser.prototype.parseNamespace = function parseNamespace(namespace) {
        if (this.options.lossy && typeof namespace === 'string') {
            var trimmed = namespace.trim();
            if (!trimmed.length) {
                return true;
            }

            return trimmed;
        }

        return namespace;
    };

    Parser.prototype.parseSpace = function parseSpace(space) {
        var replacement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

        return this.options.lossy ? replacement : space;
    };

    Parser.prototype.parseValue = function parseValue(value) {
        if (!this.options.lossy || !value || typeof value !== 'string') {
            return value;
        }
        return value.trim();
    };

    Parser.prototype.parseParenthesisToken = function parseParenthesisToken(token) {
        var content = this.content(token);
        if (!this.options.lossy) {
            return content;
        }

        if (token[0] === tokens.space) {
            return this.parseSpace(content, ' ');
        }

        return this.parseValue(content);
    };

    Parser.prototype.newNode = function newNode(node, namespace) {
        if (namespace) {
            node.namespace = this.parseNamespace(namespace);
        }
        if (this.spaces) {
            node.spaces.before = this.spaces;
            this.spaces = '';
        }
        return this.current.append(node);
    };

    Parser.prototype.content = function content() {
        var token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currToken;

        return this.css.slice(token[5], token[6]);
    };

    _createClass(Parser, [{
        key: 'currToken',
        get: function get() {
            return this.tokens[this.position];
        }
    }, {
        key: 'nextToken',
        get: function get() {
            return this.tokens[this.position + 1];
        }
    }, {
        key: 'prevToken',
        get: function get() {
            return this.tokens[this.position - 1];
        }
    }]);

    return Parser;
}();

exports.default = Parser;
module.exports = exports['default'];

/***/ }),
/* 1007 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const isObj = __webpack_require__(140);

function getPathSegments(path) {
	const pathArr = path.split('.');
	const parts = [];

	for (let i = 0; i < pathArr.length; i++) {
		let p = pathArr[i];

		while (p[p.length - 1] === '\\' && pathArr[i + 1] !== undefined) {
			p = p.slice(0, -1) + '.';
			p += pathArr[++i];
		}

		parts.push(p);
	}

	return parts;
}

module.exports = {
	get(obj, path, value) {
		if (!isObj(obj) || typeof path !== 'string') {
			return value === undefined ? obj : value;
		}

		const pathArr = getPathSegments(path);

		for (let i = 0; i < pathArr.length; i++) {
			if (!Object.prototype.propertyIsEnumerable.call(obj, pathArr[i])) {
				return value;
			}

			obj = obj[pathArr[i]];

			if (obj === undefined || obj === null) {
				// `obj` is either `undefined` or `null` so we want to stop the loop, and
				// if this is not the last bit of the path, and
				// if it did't return `undefined`
				// it would return `null` if `obj` is `null`
				// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`
				if (i !== pathArr.length - 1) {
					return value;
				}

				break;
			}
		}

		return obj;
	},

	set(obj, path, value) {
		if (!isObj(obj) || typeof path !== 'string') {
			return obj;
		}

		const root = obj;
		const pathArr = getPathSegments(path);

		for (let i = 0; i < pathArr.length; i++) {
			const p = pathArr[i];

			if (!isObj(obj[p])) {
				obj[p] = {};
			}

			if (i === pathArr.length - 1) {
				obj[p] = value;
			}

			obj = obj[p];
		}

		return root;
	},

	delete(obj, path) {
		if (!isObj(obj) || typeof path !== 'string') {
			return;
		}

		const pathArr = getPathSegments(path);

		for (let i = 0; i < pathArr.length; i++) {
			const p = pathArr[i];

			if (i === pathArr.length - 1) {
				delete obj[p];
				return;
			}

			obj = obj[p];

			if (!isObj(obj)) {
				return;
			}
		}
	},

	has(obj, path) {
		if (!isObj(obj) || typeof path !== 'string') {
			return false;
		}

		const pathArr = getPathSegments(path);

		for (let i = 0; i < pathArr.length; i++) {
			if (isObj(obj)) {
				if (!(pathArr[i] in obj)) {
					return false;
				}

				obj = obj[pathArr[i]];
			} else {
				return false;
			}
		}

		return true;
	}
};


/***/ }),
/* 1008 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = sortAscending;
function sortAscending(list) {
    return list.sort(function (a, b) {
        return a - b;
    });
};
module.exports = exports["default"];

/***/ }),
/* 1009 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = tokenize;

var _tokenTypes = __webpack_require__(155);

var t = _interopRequireWildcard(_tokenTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var wordEnd = /[ \n\t\r\(\)\*:;!&'"\+\|~>,=$^\[\]\\]|\/(?=\*)/g;

function tokenize(input) {
    var tokens = [];
    var css = input.css.valueOf();
    var _css = css,
        length = _css.length;

    var offset = -1;
    var line = 1;
    var start = 0;
    var end = 0;

    var code = void 0,
        content = void 0,
        endColumn = void 0,
        endLine = void 0,
        escaped = void 0,
        escapePos = void 0,
        last = void 0,
        lines = void 0,
        next = void 0,
        nextLine = void 0,
        nextOffset = void 0,
        quote = void 0,
        tokenType = void 0;

    function unclosed(what, fix) {
        if (input.safe) {
            // fyi: this is never set to true.
            css += fix;
            next = css.length - 1;
        } else {
            throw input.error('Unclosed ' + what, line, start - offset, start);
        }
    }

    while (start < length) {
        code = css.charCodeAt(start);

        if (code === t.newline) {
            offset = start;
            line += 1;
        }

        switch (code) {
            case t.newline:
            case t.space:
            case t.tab:
            case t.cr:
            case t.feed:
                next = start;
                do {
                    next += 1;
                    code = css.charCodeAt(next);
                    if (code === t.newline) {
                        offset = next;
                        line += 1;
                    }
                } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);

                tokenType = t.space;
                endLine = line;
                endColumn = start - offset;
                end = next;
                break;

            case t.plus:
            case t.greaterThan:
            case t.tilde:
            case t.pipe:
                next = start;
                do {
                    next += 1;
                    code = css.charCodeAt(next);
                } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);

                tokenType = t.combinator;
                endLine = line;
                endColumn = start - offset;
                end = next;
                break;

            // Consume these characters as single tokens.
            case t.asterisk:
            case t.ampersand:
            case t.comma:
            case t.equals:
            case t.dollar:
            case t.caret:
            case t.openSquare:
            case t.closeSquare:
            case t.colon:
            case t.semicolon:
            case t.openParenthesis:
            case t.closeParenthesis:
                next = start;
                tokenType = code;
                endLine = line;
                endColumn = start - offset;
                end = next + 1;
                break;

            case t.singleQuote:
            case t.doubleQuote:
                quote = code === t.singleQuote ? "'" : '"';
                next = start;
                do {
                    escaped = false;
                    next = css.indexOf(quote, next + 1);
                    if (next === -1) {
                        unclosed('quote', quote);
                    }
                    escapePos = next;
                    while (css.charCodeAt(escapePos - 1) === t.backslash) {
                        escapePos -= 1;
                        escaped = !escaped;
                    }
                } while (escaped);

                tokenType = t.str;
                endLine = line;
                endColumn = start - offset;
                end = next + 1;
                break;

            case t.backslash:
                next = start;
                escaped = true;
                while (css.charCodeAt(next + 1) === t.backslash) {
                    next += 1;
                    escaped = !escaped;
                }
                code = css.charCodeAt(next + 1);
                if (escaped && code !== t.slash && code !== t.space && code !== t.newline && code !== t.tab && code !== t.cr && code !== t.feed) {
                    next += 1;
                }

                tokenType = t.word;
                endLine = line;
                endColumn = next - offset;
                end = next + 1;
                break;

            default:
                if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {
                    next = css.indexOf('*/', start + 2) + 1;
                    if (next === 0) {
                        unclosed('comment', '*/');
                    }

                    content = css.slice(start, next + 1);
                    lines = content.split('\n');
                    last = lines.length - 1;

                    if (last > 0) {
                        nextLine = line + last;
                        nextOffset = next - lines[last].length;
                    } else {
                        nextLine = line;
                        nextOffset = offset;
                    }

                    tokenType = t.comment;
                    line = nextLine;
                    endLine = nextLine;
                    endColumn = next - nextOffset;
                } else {
                    wordEnd.lastIndex = start + 1;
                    wordEnd.test(css);
                    if (wordEnd.lastIndex === 0) {
                        next = css.length - 1;
                    } else {
                        next = wordEnd.lastIndex - 2;
                    }

                    tokenType = t.word;
                    endLine = line;
                    endColumn = next - offset;
                }

                end = next + 1;
                break;
        }

        // Ensure that the token structure remains consistent
        tokens.push([tokenType, // [0] Token type
        line, // [1] Starting line
        start - offset, // [2] Starting column
        endLine, // [3] Ending line
        endColumn, // [4] Ending column
        start, // [5] Start position / Source index
        end]);

        // Reset offset for the next token
        if (nextOffset) {
            offset = nextOffset;
            nextOffset = null;
        }

        start = end;
    }

    return tokens;
}
module.exports = exports['default'];

/***/ }),
/* 1010 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _types = __webpack_require__(8);

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _types[key];
    }
  });
});

var _constructors = __webpack_require__(1011);

Object.keys(_constructors).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _constructors[key];
    }
  });
});

var _guards = __webpack_require__(1012);

Object.keys(_guards).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _guards[key];
    }
  });
});

/***/ }),
/* 1011 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = undefined;

var _attribute = __webpack_require__(151);

var _attribute2 = _interopRequireDefault(_attribute);

var _className = __webpack_require__(145);

var _className2 = _interopRequireDefault(_className);

var _combinator = __webpack_require__(153);

var _combinator2 = _interopRequireDefault(_combinator);

var _comment = __webpack_require__(146);

var _comment2 = _interopRequireDefault(_comment);

var _id = __webpack_require__(147);

var _id2 = _interopRequireDefault(_id);

var _nesting = __webpack_require__(154);

var _nesting2 = _interopRequireDefault(_nesting);

var _pseudo = __webpack_require__(150);

var _pseudo2 = _interopRequireDefault(_pseudo);

var _root = __webpack_require__(143);

var _root2 = _interopRequireDefault(_root);

var _selector = __webpack_require__(144);

var _selector2 = _interopRequireDefault(_selector);

var _string = __webpack_require__(149);

var _string2 = _interopRequireDefault(_string);

var _tag = __webpack_require__(148);

var _tag2 = _interopRequireDefault(_tag);

var _universal = __webpack_require__(152);

var _universal2 = _interopRequireDefault(_universal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var attribute = exports.attribute = function attribute(opts) {
  return new _attribute2.default(opts);
};
var className = exports.className = function className(opts) {
  return new _className2.default(opts);
};
var combinator = exports.combinator = function combinator(opts) {
  return new _combinator2.default(opts);
};
var comment = exports.comment = function comment(opts) {
  return new _comment2.default(opts);
};
var id = exports.id = function id(opts) {
  return new _id2.default(opts);
};
var nesting = exports.nesting = function nesting(opts) {
  return new _nesting2.default(opts);
};
var pseudo = exports.pseudo = function pseudo(opts) {
  return new _pseudo2.default(opts);
};
var root = exports.root = function root(opts) {
  return new _root2.default(opts);
};
var selector = exports.selector = function selector(opts) {
  return new _selector2.default(opts);
};
var string = exports.string = function string(opts) {
  return new _string2.default(opts);
};
var tag = exports.tag = function tag(opts) {
  return new _tag2.default(opts);
};
var universal = exports.universal = function universal(opts) {
  return new _universal2.default(opts);
};

/***/ }),
/* 1012 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = exports.isPseudo = exports.isNesting = exports.isIdentifier = exports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _IS_TYPE;

exports.isNode = isNode;
exports.isPseudoElement = isPseudoElement;
exports.isPseudoClass = isPseudoClass;
exports.isContainer = isContainer;
exports.isNamespace = isNamespace;

var _types = __webpack_require__(8);

var IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);

function isNode(node) {
    return (typeof node === "undefined" ? "undefined" : _typeof(node)) === "object" && IS_TYPE[node.type];
}

function isNodeType(type, node) {
    return isNode(node) && node.type === type;
}

var isAttribute = exports.isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);
var isClassName = exports.isClassName = isNodeType.bind(null, _types.CLASS);
var isCombinator = exports.isCombinator = isNodeType.bind(null, _types.COMBINATOR);
var isComment = exports.isComment = isNodeType.bind(null, _types.COMMENT);
var isIdentifier = exports.isIdentifier = isNodeType.bind(null, _types.ID);
var isNesting = exports.isNesting = isNodeType.bind(null, _types.NESTING);
var isPseudo = exports.isPseudo = isNodeType.bind(null, _types.PSEUDO);
var isRoot = exports.isRoot = isNodeType.bind(null, _types.ROOT);
var isSelector = exports.isSelector = isNodeType.bind(null, _types.SELECTOR);
var isString = exports.isString = isNodeType.bind(null, _types.STRING);
var isTag = exports.isTag = isNodeType.bind(null, _types.TAG);
var isUniversal = exports.isUniversal = isNodeType.bind(null, _types.UNIVERSAL);

function isPseudoElement(node) {
    return isPseudo(node) && node.value && (node.value.startsWith("::") || node.value === ":before" || node.value === ":after");
}
function isPseudoClass(node) {
    return isPseudo(node) && !isPseudoElement(node);
}

function isContainer(node) {
    return !!(isNode(node) && node.walk);
}

function isNamespace(node) {
    return isClassName(node) || isAttribute(node) || isTag(node);
}

/***/ }),
/* 1013 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = canUnquote;

var _unquote = __webpack_require__(156);

var _unquote2 = _interopRequireDefault(_unquote);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Can unquote attribute detection from mothereff.in
 * Copyright Mathias Bynens <https://mathiasbynens.be/>
 * https://github.com/mathiasbynens/mothereff.in
 */
const escapes = /\\([0-9A-Fa-f]{1,6})[ \t\n\f\r]?/g;
const range = /[\u0000-\u002c\u002e\u002f\u003A-\u0040\u005B-\u005E\u0060\u007B-\u009f]/;

function canUnquote(value) {
    value = (0, _unquote2.default)(value);
    if (value === '-' || value === '') {
        return false;
    }
    value = value.replace(escapes, 'a').replace(/\\./g, 'a');
    return !(range.test(value) || /^(?:-?\d|--)/.test(value));
}
module.exports = exports['default'];

/***/ }),
/* 1014 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _browserslist = __webpack_require__(14);

var _browserslist2 = _interopRequireDefault(_browserslist);

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _alphanumSort = __webpack_require__(50);

var _alphanumSort2 = _interopRequireDefault(_alphanumSort);

var _uniqs = __webpack_require__(157);

var _uniqs2 = _interopRequireDefault(_uniqs);

var _cssnanoUtilGetArguments = __webpack_require__(15);

var _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Return the greatest common divisor
 * of two numbers.
 */

function gcd(a, b) {
    return b ? gcd(b, a % b) : a;
}

function aspectRatio(a, b) {
    const divisor = gcd(a, b);

    return [a / divisor, b / divisor];
}

function split(args) {
    return args.map(arg => (0, _postcssValueParser.stringify)(arg)).join('');
}

function removeNode(node) {
    node.value = '';
    node.type = 'word';
}

function transform(legacy, rule) {
    const ruleName = rule.name.toLowerCase();

    // We should re-arrange parameters only for `@media` and `@supports` at-rules
    if (!rule.params || !["media", "supports"].includes(ruleName)) {
        return;
    }

    const params = (0, _postcssValueParser2.default)(rule.params);

    params.walk((node, index) => {
        if (node.type === 'div' || node.type === 'function') {
            node.before = node.after = '';

            if (node.type === 'function' && node.nodes[4] && node.nodes[0].value.toLowerCase().indexOf('-aspect-ratio') === 3) {
                const [a, b] = aspectRatio(node.nodes[2].value, node.nodes[4].value);

                node.nodes[2].value = a;
                node.nodes[4].value = b;
            }
        } else if (node.type === 'space') {
            node.value = ' ';
        } else {
            const prevWord = params.nodes[index - 2];

            if (node.value.toLowerCase() === 'all' && rule.name.toLowerCase() === 'media' && !prevWord) {
                const nextWord = params.nodes[index + 2];

                if (!legacy || nextWord) {
                    removeNode(node);
                }

                if (nextWord && nextWord.value.toLowerCase() === 'and') {
                    const nextSpace = params.nodes[index + 1];
                    const secondSpace = params.nodes[index + 3];

                    removeNode(nextWord);
                    removeNode(nextSpace);
                    removeNode(secondSpace);
                }
            }
        }
    }, true);

    rule.params = (0, _alphanumSort2.default)((0, _uniqs2.default)((0, _cssnanoUtilGetArguments2.default)(params).map(split)), {
        insensitive: true
    }).join();

    if (!rule.params.length) {
        rule.raws.afterName = '';
    }
}

function hasAllBug(browser) {
    return ~['ie 10', 'ie 11'].indexOf(browser);
}

exports.default = _postcss2.default.plugin('postcss-minify-params', () => {
    return (css, result) => {
        const resultOpts = result.opts || {};
        const browsers = (0, _browserslist2.default)(null, {
            stats: resultOpts.stats,
            path: __dirname,
            env: resultOpts.env
        });

        return css.walkAtRules(transform.bind(null, browsers.some(hasAllBug)));
    };
});
module.exports = exports['default'];

/***/ }),
/* 1015 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _minifyWeight = __webpack_require__(158);

var _minifyWeight2 = _interopRequireDefault(_minifyWeight);

var _minifyFamily = __webpack_require__(159);

var _minifyFamily2 = _interopRequireDefault(_minifyFamily);

var _minifyFont = __webpack_require__(1017);

var _minifyFont2 = _interopRequireDefault(_minifyFont);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transform(opts, decl) {
    let tree;
    let prop = decl.prop.toLowerCase();

    if (prop === 'font-weight') {
        decl.value = (0, _minifyWeight2.default)(decl.value);
    } else if (prop === 'font-family') {
        tree = (0, _postcssValueParser2.default)(decl.value);
        tree.nodes = (0, _minifyFamily2.default)(tree.nodes, opts);
        decl.value = tree.toString();
    } else if (prop === 'font') {
        tree = (0, _postcssValueParser2.default)(decl.value);
        tree.nodes = (0, _minifyFont2.default)(tree.nodes, opts);
        decl.value = tree.toString();
    }
}

exports.default = _postcss2.default.plugin('postcss-minify-font-values', opts => {
    opts = Object.assign({}, {
        removeAfterKeyword: false,
        removeDuplicates: true,
        removeQuotes: true
    }, opts);

    return css => css.walkDecls(/font/i, transform.bind(null, opts));
});
module.exports = exports['default'];

/***/ }),
/* 1016 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = uniqueExcept;
function uniqueExcept(exclude) {
    return function unique() {
        const list = Array.prototype.concat.apply([], arguments);
        return list.filter((item, i) => {
            if (item.toLowerCase() === exclude) {
                return true;
            }
            return i === list.indexOf(item);
        });
    };
};
module.exports = exports["default"];

/***/ }),
/* 1017 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (nodes, opts) {
    let i, max, node, familyStart, family;
    let hasSize = false;

    for (i = 0, max = nodes.length; i < max; i += 1) {
        node = nodes[i];
        if (node.type === 'word') {
            if (hasSize) {
                continue;
            }
            const value = node.value.toLowerCase();
            if (value === 'normal' || ~_keywords2.default.style.indexOf(value) || ~_keywords2.default.variant.indexOf(value) || ~_keywords2.default.stretch.indexOf(value)) {
                familyStart = i;
            } else if (~_keywords2.default.weight.indexOf(value)) {
                node.value = (0, _minifyWeight2.default)(value);
                familyStart = i;
            } else if (~_keywords2.default.size.indexOf(value) || (0, _postcssValueParser.unit)(value)) {
                familyStart = i;
                hasSize = true;
            }
        } else if (node.type === 'div' && node.value === '/') {
            familyStart = i + 1;
            break;
        }
    }

    familyStart += 2;
    family = (0, _minifyFamily2.default)(nodes.slice(familyStart), opts);
    return nodes.slice(0, familyStart).concat(family);
};

var _postcssValueParser = __webpack_require__(4);

var _keywords = __webpack_require__(1018);

var _keywords2 = _interopRequireDefault(_keywords);

var _minifyFamily = __webpack_require__(159);

var _minifyFamily2 = _interopRequireDefault(_minifyFamily);

var _minifyWeight = __webpack_require__(158);

var _minifyWeight2 = _interopRequireDefault(_minifyWeight);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

;
module.exports = exports['default'];

/***/ }),
/* 1018 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = {
    style: ['italic', 'oblique'],
    variant: ['small-caps'],
    weight: ['100', '200', '300', '400', '500', '600', '700', '800', '900', 'bold', 'lighter', 'bolder'],
    stretch: ['ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded'],
    size: ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large', 'larger', 'smaller']
};
module.exports = exports['default'];

/***/ }),
/* 1019 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _path = __webpack_require__(5);

var _path2 = _interopRequireDefault(_path);

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _normalizeUrl = __webpack_require__(1020);

var _normalizeUrl2 = _interopRequireDefault(_normalizeUrl);

var _isAbsoluteUrl = __webpack_require__(1021);

var _isAbsoluteUrl2 = _interopRequireDefault(_isAbsoluteUrl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const multiline = /\\[\r\n]/;
const escapeChars = /([\s\(\)"'])/g;

function convert(url, options) {
    if ((0, _isAbsoluteUrl2.default)(url) || url.startsWith('//')) {
        let normalizedURL = null;

        try {
            normalizedURL = (0, _normalizeUrl2.default)(url, options);
        } catch (e) {
            normalizedURL = url;
        }

        return normalizedURL;
    }

    // `path.normalize` always returns backslashes on Windows, need replace in `/`
    return _path2.default.normalize(url).replace(new RegExp('\\' + _path2.default.sep, 'g'), '/');
}

function transformNamespace(rule) {
    rule.params = (0, _postcssValueParser2.default)(rule.params).walk(node => {
        if (node.type === 'function' && node.value.toLowerCase() === 'url' && node.nodes.length) {
            node.type = 'string';
            node.quote = node.nodes[0].quote || '"';
            node.value = node.nodes[0].value;
        }
        if (node.type === 'string') {
            node.value = node.value.trim();
        }
        return false;
    }).toString();
}

function transformDecl(decl, opts) {
    decl.value = (0, _postcssValueParser2.default)(decl.value).walk(node => {
        if (node.type !== 'function' || node.value.toLowerCase() !== 'url' || !node.nodes.length) {
            return false;
        }

        let url = node.nodes[0];
        let escaped;

        node.before = node.after = '';
        url.value = url.value.trim().replace(multiline, '');

        // Skip empty URLs
        // Empty URL function equals request to current stylesheet where it is declared
        if (url.value.length === 0) {
            url.quote = '';

            return false;
        }

        if (/^data:(.*)?,/i.test(url.value)) {
            return false;
        }

        if (!/^.+-extension:\//i.test(url.value)) {
            url.value = convert(url.value, opts);
        }

        if (escapeChars.test(url.value) && url.type === 'string') {
            escaped = url.value.replace(escapeChars, '\\$1');
            if (escaped.length < url.value.length + 2) {
                url.value = escaped;
                url.type = 'word';
            }
        } else {
            url.type = 'word';
        }

        return false;
    }).toString();
}

exports.default = _postcss2.default.plugin('postcss-normalize-url', opts => {
    opts = Object.assign({}, {
        normalizeProtocol: false,
        stripFragment: false,
        stripWWW: false
    }, opts);

    return css => {
        css.walk(node => {
            if (node.type === 'decl') {
                return transformDecl(node, opts);
            } else if (node.type === 'atrule' && node.name.toLowerCase() === 'namespace') {
                return transformNamespace(node);
            }
        });
    };
});
module.exports = exports['default'];

/***/ }),
/* 1020 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// TODO: Use the `URL` global when targeting Node.js 10
const URLParser = typeof URL === 'undefined' ? __webpack_require__(32).URL : URL;

const testParameter = (name, filters) => {
	return filters.some(filter => filter instanceof RegExp ? filter.test(name) : filter === name);
};

module.exports = (urlString, opts) => {
	opts = Object.assign({
		defaultProtocol: 'http:',
		normalizeProtocol: true,
		forceHttp: false,
		forceHttps: false,
		stripHash: true,
		stripWWW: true,
		removeQueryParameters: [/^utm_\w+/i],
		removeTrailingSlash: true,
		removeDirectoryIndex: false,
		sortQueryParameters: true
	}, opts);

	// Backwards compatibility
	if (Reflect.has(opts, 'normalizeHttps')) {
		opts.forceHttp = opts.normalizeHttps;
	}

	if (Reflect.has(opts, 'normalizeHttp')) {
		opts.forceHttps = opts.normalizeHttp;
	}

	if (Reflect.has(opts, 'stripFragment')) {
		opts.stripHash = opts.stripFragment;
	}

	urlString = urlString.trim();

	const hasRelativeProtocol = urlString.startsWith('//');
	const isRelativeUrl = !hasRelativeProtocol && /^\.*\//.test(urlString);

	// Prepend protocol
	if (!isRelativeUrl) {
		urlString = urlString.replace(/^(?!(?:\w+:)?\/\/)|^\/\//, opts.defaultProtocol);
	}

	const urlObj = new URLParser(urlString);

	if (opts.forceHttp && opts.forceHttps) {
		throw new Error('The `forceHttp` and `forceHttps` options cannot be used together');
	}

	if (opts.forceHttp && urlObj.protocol === 'https:') {
		urlObj.protocol = 'http:';
	}

	if (opts.forceHttps && urlObj.protocol === 'http:') {
		urlObj.protocol = 'https:';
	}

	// Remove hash
	if (opts.stripHash) {
		urlObj.hash = '';
	}

	// Remove duplicate slashes if not preceded by a protocol
	if (urlObj.pathname) {
		// TODO: Use the following instead when targeting Node.js 10
		// `urlObj.pathname = urlObj.pathname.replace(/(?<!https?:)\/{2,}/g, '/');`
		urlObj.pathname = urlObj.pathname.replace(/((?![https?:]).)\/{2,}/g, (_, p1) => {
			if (/^(?!\/)/g.test(p1)) {
				return `${p1}/`;
			}
			return '/';
		});
	}

	// Decode URI octets
	if (urlObj.pathname) {
		urlObj.pathname = decodeURI(urlObj.pathname);
	}

	// Remove directory index
	if (opts.removeDirectoryIndex === true) {
		opts.removeDirectoryIndex = [/^index\.[a-z]+$/];
	}

	if (Array.isArray(opts.removeDirectoryIndex) && opts.removeDirectoryIndex.length > 0) {
		let pathComponents = urlObj.pathname.split('/');
		const lastComponent = pathComponents[pathComponents.length - 1];

		if (testParameter(lastComponent, opts.removeDirectoryIndex)) {
			pathComponents = pathComponents.slice(0, pathComponents.length - 1);
			urlObj.pathname = pathComponents.slice(1).join('/') + '/';
		}
	}

	if (urlObj.hostname) {
		// Remove trailing dot
		urlObj.hostname = urlObj.hostname.replace(/\.$/, '');

		// Remove `www.`
		// eslint-disable-next-line no-useless-escape
		if (opts.stripWWW && /^www\.([a-z\-\d]{2,63})\.([a-z\.]{2,5})$/.test(urlObj.hostname)) {
			// Each label should be max 63 at length (min: 2).
			// The extension should be max 5 at length (min: 2).
			// Source: https://en.wikipedia.org/wiki/Hostname#Restrictions_on_valid_host_names
			urlObj.hostname = urlObj.hostname.replace(/^www\./, '');
		}
	}

	// Remove query unwanted parameters
	if (Array.isArray(opts.removeQueryParameters)) {
		for (const key of [...urlObj.searchParams.keys()]) {
			if (testParameter(key, opts.removeQueryParameters)) {
				urlObj.searchParams.delete(key);
			}
		}
	}

	// Sort query parameters
	if (opts.sortQueryParameters) {
		urlObj.searchParams.sort();
	}

	// Take advantage of many of the Node `url` normalizations
	urlString = urlObj.toString();

	// Remove ending `/`
	if (opts.removeTrailingSlash || urlObj.pathname === '/') {
		urlString = urlString.replace(/\/$/, '');
	}

	// Restore relative protocol, if applicable
	if (hasRelativeProtocol && !opts.normalizeProtocol) {
		urlString = urlString.replace(/^http:\/\//, '//');
	}

	return urlString;
};


/***/ }),
/* 1021 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function (url) {
	if (typeof url !== 'string') {
		throw new TypeError('Expected a string');
	}

	return /^[a-z][a-z0-9+.-]*:/.test(url);
};


/***/ }),
/* 1022 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

function noop() {}

function trimValue(value) {
    return value ? value.trim() : value;
}

function empty(node) {
    return !node.nodes.filter(child => child.type !== 'comment').length;
}

function equals(a, b) {
    if (a.type !== b.type) {
        return false;
    }

    if (a.important !== b.important) {
        return false;
    }

    if (a.raws && !b.raws || !a.raws && b.raws) {
        return false;
    }

    switch (a.type) {
        case 'rule':
            if (a.selector !== b.selector) {
                return false;
            }
            break;
        case 'atrule':
            if (a.name !== b.name || a.params !== b.params) {
                return false;
            }

            if (a.raws && trimValue(a.raws.before) !== trimValue(b.raws.before)) {
                return false;
            }

            if (a.raws && trimValue(a.raws.afterName) !== trimValue(b.raws.afterName)) {
                return false;
            }
            break;
        case 'decl':
            if (a.prop !== b.prop || a.value !== b.value) {
                return false;
            }

            if (a.raws && trimValue(a.raws.before) !== trimValue(b.raws.before)) {
                return false;
            }
            break;
    }

    if (a.nodes) {
        if (a.nodes.length !== b.nodes.length) {
            return false;
        }

        for (let i = 0; i < a.nodes.length; i++) {
            if (!equals(a.nodes[i], b.nodes[i])) {
                return false;
            }
        }
    }
    return true;
}

function dedupeRule(last, nodes) {
    let index = nodes.indexOf(last) - 1;
    while (index >= 0) {
        const node = nodes[index--];
        if (node && node.type === 'rule' && node.selector === last.selector) {
            last.each(child => {
                if (child.type === 'decl') {
                    dedupeNode(child, node.nodes);
                }
            });

            if (empty(node)) {
                node.remove();
            }
        }
    }
}

function dedupeNode(last, nodes) {
    let index = !!~nodes.indexOf(last) ? nodes.indexOf(last) - 1 : nodes.length - 1;

    while (index >= 0) {
        const node = nodes[index--];
        if (node && equals(node, last)) {
            node.remove();
        }
    }
}

const handlers = {
    rule: dedupeRule,
    atrule: dedupeNode,
    decl: dedupeNode,
    comment: noop
};

function dedupe(root) {
    const { nodes } = root;

    if (!nodes) {
        return;
    }

    let index = nodes.length - 1;
    while (index >= 0) {
        let last = nodes[index--];
        if (!last || !last.parent) {
            continue;
        }
        dedupe(last);
        handlers[last.type](last, nodes);
    }
}

exports.default = (0, _postcss.plugin)('postcss-discard-duplicates', () => dedupe);
module.exports = exports['default'];

/***/ }),
/* 1023 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _cssnanoUtilGetArguments = __webpack_require__(15);

var _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);

var _cssnanoUtilGetMatch = __webpack_require__(47);

var _cssnanoUtilGetMatch2 = _interopRequireDefault(_cssnanoUtilGetMatch);

var _map = __webpack_require__(1024);

var _map2 = _interopRequireDefault(_map);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function evenValues(list, index) {
    return index % 2 === 0;
}

const repeatKeywords = _map2.default.map(mapping => mapping[0]);

const getMatch = (0, _cssnanoUtilGetMatch2.default)(_map2.default);

exports.default = _postcss2.default.plugin('postcss-normalize-repeat-style', () => {
    return css => {
        const cache = {};

        css.walkDecls(/background(-repeat)?|(-webkit-)?mask-repeat/i, decl => {
            const value = decl.value;

            if (cache[value]) {
                decl.value = cache[value];

                return;
            }

            const parsed = (0, _postcssValueParser2.default)(value);

            if (parsed.nodes.length === 1) {
                cache[value] = value;

                return;
            }

            const args = (0, _cssnanoUtilGetArguments2.default)(parsed);
            const relevant = [];

            args.forEach(arg => {
                relevant.push({
                    start: null,
                    end: null
                });

                arg.forEach((part, index) => {
                    const isRepeat = ~repeatKeywords.indexOf(part.value.toLowerCase());
                    const len = relevant.length - 1;

                    if (relevant[len].start === null && isRepeat) {
                        relevant[len].start = index;
                        relevant[len].end = index;

                        return;
                    }

                    if (relevant[len].start !== null) {
                        if (part.type === 'space') {
                            return;
                        } else if (isRepeat) {
                            relevant[len].end = index;

                            return;
                        }

                        return;
                    }
                });
            });

            relevant.forEach((range, index) => {
                if (range.start === null) {
                    return;
                }

                const val = args[index].slice(range.start, range.end + 1);

                if (val.length !== 3) {
                    return;
                }

                const match = getMatch(val.filter(evenValues).map(n => n.value.toLowerCase()));

                if (match) {
                    args[index][range.start].value = match;
                    args[index][range.start + 1].value = '';
                    args[index][range.end].value = '';
                }
            });

            const result = parsed.toString();

            decl.value = result;
            cache[value] = result;
        });
    };
});
module.exports = exports['default'];

/***/ }),
/* 1024 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = [['repeat-x', ['repeat', 'no-repeat']], ['repeat-y', ['no-repeat', 'repeat']], ['repeat', ['repeat', 'repeat']], ['space', ['space', 'space']], ['round', ['round', 'round']], ['no-repeat', ['no-repeat', 'no-repeat']]];
module.exports = exports['default'];

/***/ }),
/* 1025 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _browserslist = __webpack_require__(14);

var _browserslist2 = _interopRequireDefault(_browserslist);

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _vendors = __webpack_require__(1026);

var _vendors2 = _interopRequireDefault(_vendors);

var _cssnanoUtilSameParent = __webpack_require__(1027);

var _cssnanoUtilSameParent2 = _interopRequireDefault(_cssnanoUtilSameParent);

var _ensureCompatibility = __webpack_require__(1028);

var _ensureCompatibility2 = _interopRequireDefault(_ensureCompatibility);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const prefixes = _vendors2.default.map(v => `-${v}-`);

function intersect(a, b, not) {
    return a.filter(c => {
        const index = ~b.indexOf(c);
        return not ? !index : index;
    });
}

// Internet Explorer use :-ms-input-placeholder.
// Microsoft Edge use ::-ms-input-placeholder.
const findMsInputPlaceholder = selector => ~selector.search(/-ms-input-placeholder/i);
const different = (a, b) => intersect(a, b, true).concat(intersect(b, a, true));
const filterPrefixes = selector => intersect(prefixes, selector);

function sameVendor(selectorsA, selectorsB) {
    let same = selectors => selectors.map(filterPrefixes).join();
    let findMsVendor = selectors => selectors.find(findMsInputPlaceholder);
    return same(selectorsA) === same(selectorsB) && !(findMsVendor(selectorsA) && findMsVendor(selectorsB));
}

const noVendor = selector => !filterPrefixes(selector).length;

function canMerge(ruleA, ruleB, browsers, compatibilityCache) {
    const a = ruleA.selectors;
    const b = ruleB.selectors;

    const selectors = a.concat(b);

    if (!(0, _ensureCompatibility2.default)(selectors, browsers, compatibilityCache)) {
        return false;
    }

    const parent = (0, _cssnanoUtilSameParent2.default)(ruleA, ruleB);
    const { name } = ruleA.parent;
    if (parent && name && ~name.indexOf('keyframes')) {
        return false;
    }
    return parent && (selectors.every(noVendor) || sameVendor(a, b));
}

const getDecls = rule => rule.nodes && rule.nodes.map(String);
const joinSelectors = (...rules) => rules.map(s => s.selector).join();

function ruleLength(...rules) {
    return rules.map(r => r.nodes.length ? String(r) : '').join('').length;
}

function splitProp(prop) {
    const parts = prop.split('-');
    let base, rest;
    // Treat vendor prefixed properties as if they were unprefixed;
    // moving them when combined with non-prefixed properties can
    // cause issues. e.g. moving -webkit-background-clip when there
    // is a background shorthand definition.
    if (prop[0] === '-') {
        base = parts[2];
        rest = parts.slice(3);
    } else {
        base = parts[0];
        rest = parts.slice(1);
    }
    return [base, rest];
}

function isConflictingProp(propA, propB) {
    if (propA === propB) {
        return true;
    }
    const a = splitProp(propA);
    const b = splitProp(propB);
    return a[0] === b[0] && a[1].length !== b[1].length;
}

function hasConflicts(declProp, notMoved) {
    return notMoved.some(prop => isConflictingProp(prop, declProp));
}

function partialMerge(first, second) {
    let intersection = intersect(getDecls(first), getDecls(second));
    if (!intersection.length) {
        return second;
    }
    let nextRule = second.next();
    if (nextRule && nextRule.type === 'rule' && canMerge(second, nextRule)) {
        let nextIntersection = intersect(getDecls(second), getDecls(nextRule));
        if (nextIntersection.length > intersection.length) {
            first = second;second = nextRule;intersection = nextIntersection;
        }
    }
    const recievingBlock = second.clone();
    recievingBlock.selector = joinSelectors(first, second);
    recievingBlock.nodes = [];
    const difference = different(getDecls(first), getDecls(second));
    const filterConflicts = (decls, intersectn) => {
        let willNotMove = [];
        return decls.reduce((willMove, decl) => {
            let intersects = ~intersectn.indexOf(decl);
            let prop = decl.split(':')[0];
            let base = prop.split('-')[0];
            let canMove = difference.every(d => d.split(':')[0] !== base);
            if (intersects && canMove && !hasConflicts(prop, willNotMove)) {
                willMove.push(decl);
            } else {
                willNotMove.push(prop);
            }
            return willMove;
        }, []);
    };
    const containsAllDeclaration = intersectionList => {
        return intersectionList.some(declaration => {
            return declaration.split(':')[0].toLowerCase() === 'all';
        });
    };
    intersection = filterConflicts(getDecls(first).reverse(), intersection);
    intersection = filterConflicts(getDecls(second), intersection);

    // Rules with "all" declarations must be on top
    if (containsAllDeclaration(intersection)) {
        second.parent.insertBefore(first, recievingBlock);
    } else {
        second.parent.insertBefore(second, recievingBlock);
    }

    const firstClone = first.clone();
    const secondClone = second.clone();
    const moveDecl = callback => {
        return decl => {
            if (~intersection.indexOf(String(decl))) {
                callback.call(this, decl);
            }
        };
    };
    firstClone.walkDecls(moveDecl(decl => {
        decl.remove();
        recievingBlock.append(decl);
    }));
    secondClone.walkDecls(moveDecl(decl => decl.remove()));
    const merged = ruleLength(firstClone, recievingBlock, secondClone);
    const original = ruleLength(first, second);
    if (merged < original) {
        first.replaceWith(firstClone);
        second.replaceWith(secondClone);
        [firstClone, recievingBlock, secondClone].forEach(r => {
            if (!r.nodes.length) {
                r.remove();
            }
        });
        if (!secondClone.parent) {
            return recievingBlock;
        }
        return secondClone;
    } else {
        recievingBlock.remove();
        return second;
    }
}

function selectorMerger(browsers, compatibilityCache) {
    let cache = null;
    return function (rule) {
        // Prime the cache with the first rule, or alternately ensure that it is
        // safe to merge both declarations before continuing
        if (!cache || !canMerge(rule, cache, browsers, compatibilityCache)) {
            cache = rule;
            return;
        }
        // Ensure that we don't deduplicate the same rule; this is sometimes
        // caused by a partial merge
        if (cache === rule) {
            cache = rule;
            return;
        }
        // Merge when declarations are exactly equal
        // e.g. h1 { color: red } h2 { color: red }
        if (getDecls(rule).join(';') === getDecls(cache).join(';')) {
            rule.selector = joinSelectors(cache, rule);
            cache.remove();
            cache = rule;
            return;
        }
        // Merge when both selectors are exactly equal
        // e.g. a { color: blue } a { font-weight: bold }
        if (cache.selector === rule.selector) {
            const cached = getDecls(cache);
            rule.walk(decl => {
                if (~cached.indexOf(String(decl))) {
                    return decl.remove();
                }
                cache.append(decl);
            });
            rule.remove();
            return;
        }
        // Partial merge: check if the rule contains a subset of the last; if
        // so create a joined selector with the subset, if smaller.
        cache = partialMerge(cache, rule);
    };
}

exports.default = _postcss2.default.plugin('postcss-merge-rules', () => {
    return (css, result) => {
        const resultOpts = result.opts || {};
        const browsers = (0, _browserslist2.default)(null, {
            stats: resultOpts.stats,
            path: __dirname,
            env: resultOpts.env
        });
        const compatibilityCache = {};
        css.walkRules(selectorMerger(browsers, compatibilityCache));
    };
});
module.exports = exports['default'];

/***/ }),
/* 1026 */
/***/ (function(module) {

module.exports = ["ah","apple","atsc","epub","hp","khtml","moz","ms","o","rim","ro","tc","wap","webkit","xv"];

/***/ }),
/* 1027 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = sameParent;
function sameParent(ruleA, ruleB) {
    let hasParent = ruleA.parent && ruleB.parent;
    // Check for detached rules
    if (!hasParent) {
        return true;
    }
    // If an at rule, ensure that the parameters are the same
    if (ruleA.parent.type === 'atrule' && ruleB.parent.type === 'atrule') {
        return ruleA.parent.params === ruleB.parent.params && ruleA.parent.name.toLowerCase() === ruleB.parent.name.toLowerCase();
    }
    return ruleA.parent.type === ruleB.parent.type;
}
module.exports = exports['default'];

/***/ }),
/* 1028 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.pseudoElements = undefined;
exports.default = ensureCompatibility;

var _caniuseApi = __webpack_require__(76);

var _postcssSelectorParser = __webpack_require__(1029);

var _postcssSelectorParser2 = _interopRequireDefault(_postcssSelectorParser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const simpleSelectorRe = /^#?[-._a-z0-9 ]+$/i;

const cssSel2 = 'css-sel2';
const cssSel3 = 'css-sel3';
const cssGencontent = 'css-gencontent';
const cssFirstLetter = 'css-first-letter';
const cssFirstLine = 'css-first-line';
const cssInOutOfRange = 'css-in-out-of-range';

const pseudoElements = exports.pseudoElements = {
    ':active': cssSel2,
    ':after': cssGencontent,
    ':before': cssGencontent,
    ':checked': cssSel3,
    ':default': 'css-default-pseudo',
    ':dir': 'css-dir-pseudo',
    ':disabled': cssSel3,
    ':empty': cssSel3,
    ':enabled': cssSel3,
    ':first-child': cssSel2,
    ':first-letter': cssFirstLetter,
    ':first-line': cssFirstLine,
    ':first-of-type': cssSel3,
    ':focus': cssSel2,
    ':focus-within': 'css-focus-within',
    ':has': 'css-has',
    ':hover': cssSel2,
    ':in-range': cssInOutOfRange,
    ':indeterminate': 'css-indeterminate-pseudo',
    ':lang': cssSel2,
    ':last-child': cssSel3,
    ':last-of-type': cssSel3,
    ':matches': 'css-matches-pseudo',
    ':not': cssSel3,
    ':nth-child': cssSel3,
    ':nth-last-child': cssSel3,
    ':nth-last-of-type': cssSel3,
    ':nth-of-type': cssSel3,
    ':only-child': cssSel3,
    ':only-of-type': cssSel3,
    ':optional': 'css-optional-pseudo',
    ':out-of-range': cssInOutOfRange,
    ':placeholder-shown': 'css-placeholder-shown',
    ':root': cssSel3,
    ':target': cssSel3,
    '::after': cssGencontent,
    '::backdrop': 'dialog',
    '::before': cssGencontent,
    '::first-letter': cssFirstLetter,
    '::first-line': cssFirstLine,
    '::marker': 'css-marker-pseudo',
    '::placeholder': 'css-placeholder',
    '::selection': 'css-selection'
};

function isCssMixin(selector) {
    return selector[selector.length - 1] === ':';
}

const isSupportedCache = {};

// Move to util in future
function isSupportedCached(feature, browsers) {
    const key = JSON.stringify({ feature, browsers });
    let result = isSupportedCache[key];

    if (!result) {
        result = (0, _caniuseApi.isSupported)(feature, browsers);
        isSupportedCache[key] = result;
    }

    return result;
}

function ensureCompatibility(selectors, browsers, compatibilityCache) {
    // Should not merge mixins
    if (selectors.some(isCssMixin)) {
        return false;
    }
    return selectors.every(selector => {
        if (simpleSelectorRe.test(selector)) {
            return true;
        }
        if (compatibilityCache && selector in compatibilityCache) {
            return compatibilityCache[selector];
        }
        let compatible = true;
        (0, _postcssSelectorParser2.default)(ast => {
            ast.walk(node => {
                const { type, value } = node;
                if (type === 'pseudo') {
                    const entry = pseudoElements[value];
                    if (entry && compatible) {
                        compatible = isSupportedCached(entry, browsers);
                    }
                }
                if (type === 'combinator') {
                    if (~value.indexOf('~')) {
                        compatible = isSupportedCached(cssSel3, browsers);
                    }
                    if (~value.indexOf('>') || ~value.indexOf('+')) {
                        compatible = isSupportedCached(cssSel2, browsers);
                    }
                }
                if (type === 'attribute' && node.attribute) {
                    // [foo]
                    if (!node.operator) {
                        compatible = isSupportedCached(cssSel2, browsers);
                    }

                    if (value) {
                        // [foo="bar"], [foo~="bar"], [foo|="bar"]
                        if (~['=', '~=', '|='].indexOf(node.operator)) {
                            compatible = isSupportedCached(cssSel2, browsers);
                        }
                        // [foo^="bar"], [foo$="bar"], [foo*="bar"]
                        if (~['^=', '$=', '*='].indexOf(node.operator)) {
                            compatible = isSupportedCached(cssSel3, browsers);
                        }
                    }

                    // [foo="bar" i]
                    if (node.insensitive) {
                        compatible = isSupportedCached('css-case-insensitive', browsers);
                    }
                }
                if (!compatible) {
                    // If this node was not compatible,
                    // break out early from walking the rest
                    return false;
                }
            });
        }).processSync(selector);
        if (compatibilityCache) {
            compatibilityCache[selector] = compatible;
        }
        return compatible;
    });
}

/***/ }),
/* 1029 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _processor = __webpack_require__(1030);

var _processor2 = _interopRequireDefault(_processor);

var _selectors = __webpack_require__(1035);

var selectors = _interopRequireWildcard(_selectors);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var parser = function parser(processor) {
  return new _processor2.default(processor);
};

Object.assign(parser, selectors);

delete parser.__esModule;

exports.default = parser;
module.exports = exports['default'];

/***/ }),
/* 1030 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _parser = __webpack_require__(1031);

var _parser2 = _interopRequireDefault(_parser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Processor = function () {
    function Processor(func, options) {
        _classCallCheck(this, Processor);

        this.func = func || function noop() {};
        this.funcRes = null;
        this.options = options;
    }

    Processor.prototype._shouldUpdateSelector = function _shouldUpdateSelector(rule) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var merged = Object.assign({}, this.options, options);
        if (merged.updateSelector === false) {
            return false;
        } else {
            return typeof rule !== "string";
        }
    };

    Processor.prototype._isLossy = function _isLossy() {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

        var merged = Object.assign({}, this.options, options);
        if (merged.lossless === false) {
            return true;
        } else {
            return false;
        }
    };

    Processor.prototype._root = function _root(rule) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var parser = new _parser2.default(rule, this._parseOptions(options));
        return parser.root;
    };

    Processor.prototype._parseOptions = function _parseOptions(options) {
        return {
            lossy: this._isLossy(options)
        };
    };

    Processor.prototype._run = function _run(rule) {
        var _this = this;

        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        return new Promise(function (resolve, reject) {
            try {
                var root = _this._root(rule, options);
                Promise.resolve(_this.func(root)).then(function (transform) {
                    var string = undefined;
                    if (_this._shouldUpdateSelector(rule, options)) {
                        string = root.toString();
                        rule.selector = string;
                    }
                    return { transform: transform, root: root, string: string };
                }).then(resolve, reject);
            } catch (e) {
                reject(e);
                return;
            }
        });
    };

    Processor.prototype._runSync = function _runSync(rule) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        var root = this._root(rule, options);
        var transform = this.func(root);
        if (transform && typeof transform.then === "function") {
            throw new Error("Selector processor returned a promise to a synchronous call.");
        }
        var string = undefined;
        if (options.updateSelector && typeof rule !== "string") {
            string = root.toString();
            rule.selector = string;
        }
        return { transform: transform, root: root, string: string };
    };

    /**
     * Process rule into a selector AST.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {Promise<parser.Root>} The AST of the selector after processing it.
     */


    Processor.prototype.ast = function ast(rule, options) {
        return this._run(rule, options).then(function (result) {
            return result.root;
        });
    };

    /**
     * Process rule into a selector AST synchronously.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {parser.Root} The AST of the selector after processing it.
     */


    Processor.prototype.astSync = function astSync(rule, options) {
        return this._runSync(rule, options).root;
    };

    /**
     * Process a selector into a transformed value asynchronously
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {Promise<any>} The value returned by the processor.
     */


    Processor.prototype.transform = function transform(rule, options) {
        return this._run(rule, options).then(function (result) {
            return result.transform;
        });
    };

    /**
     * Process a selector into a transformed value synchronously.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {any} The value returned by the processor.
     */


    Processor.prototype.transformSync = function transformSync(rule, options) {
        return this._runSync(rule, options).transform;
    };

    /**
     * Process a selector into a new selector string asynchronously.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {string} the selector after processing.
     */


    Processor.prototype.process = function process(rule, options) {
        return this._run(rule, options).then(function (result) {
            return result.string || result.root.toString();
        });
    };

    /**
     * Process a selector into a new selector string synchronously.
     * 
     * @param rule {postcss.Rule | string} The css selector to be processed
     * @param options The options for processing
     * @returns {string} the selector after processing.
     */


    Processor.prototype.processSync = function processSync(rule, options) {
        var result = this._runSync(rule, options);
        return result.string || result.root.toString();
    };

    return Processor;
}();

exports.default = Processor;
module.exports = exports["default"];

/***/ }),
/* 1031 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dotProp = __webpack_require__(1032);

var _dotProp2 = _interopRequireDefault(_dotProp);

var _indexesOf = __webpack_require__(141);

var _indexesOf2 = _interopRequireDefault(_indexesOf);

var _uniq = __webpack_require__(142);

var _uniq2 = _interopRequireDefault(_uniq);

var _root = __webpack_require__(160);

var _root2 = _interopRequireDefault(_root);

var _selector = __webpack_require__(161);

var _selector2 = _interopRequireDefault(_selector);

var _className = __webpack_require__(162);

var _className2 = _interopRequireDefault(_className);

var _comment = __webpack_require__(163);

var _comment2 = _interopRequireDefault(_comment);

var _id = __webpack_require__(164);

var _id2 = _interopRequireDefault(_id);

var _tag = __webpack_require__(165);

var _tag2 = _interopRequireDefault(_tag);

var _string = __webpack_require__(166);

var _string2 = _interopRequireDefault(_string);

var _pseudo = __webpack_require__(167);

var _pseudo2 = _interopRequireDefault(_pseudo);

var _attribute = __webpack_require__(168);

var _attribute2 = _interopRequireDefault(_attribute);

var _universal = __webpack_require__(169);

var _universal2 = _interopRequireDefault(_universal);

var _combinator = __webpack_require__(170);

var _combinator2 = _interopRequireDefault(_combinator);

var _nesting = __webpack_require__(171);

var _nesting2 = _interopRequireDefault(_nesting);

var _sortAscending = __webpack_require__(1033);

var _sortAscending2 = _interopRequireDefault(_sortAscending);

var _tokenize = __webpack_require__(1034);

var _tokenize2 = _interopRequireDefault(_tokenize);

var _tokenTypes = __webpack_require__(172);

var tokens = _interopRequireWildcard(_tokenTypes);

var _types = __webpack_require__(9);

var types = _interopRequireWildcard(_types);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function getSource(startLine, startColumn, endLine, endColumn) {
    return {
        start: {
            line: startLine,
            column: startColumn
        },
        end: {
            line: endLine,
            column: endColumn
        }
    };
}

var Parser = function () {
    function Parser(rule) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, Parser);

        this.rule = rule;
        this.options = Object.assign({ lossy: false, safe: false }, options);
        this.position = 0;
        this.root = new _root2.default();
        this.root.errorGenerator = this._errorGenerator();

        var selector = new _selector2.default();
        this.root.append(selector);
        this.current = selector;

        this.css = typeof this.rule === 'string' ? this.rule : this.rule.selector;

        if (this.options.lossy) {
            this.css = this.css.trim();
        }
        this.tokens = (0, _tokenize2.default)({
            css: this.css,
            error: this._errorGenerator(),
            safe: this.options.safe
        });

        this.loop();
    }

    Parser.prototype._errorGenerator = function _errorGenerator() {
        var _this = this;

        return function (message, errorOptions) {
            if (typeof _this.rule === 'string') {
                return new Error(message);
            }
            return _this.rule.error(message, errorOptions);
        };
    };

    Parser.prototype.attribute = function attribute() {
        var attr = [];
        var startingToken = this.currToken;
        this.position++;
        while (this.position < this.tokens.length && this.currToken[0] !== tokens.closeSquare) {
            attr.push(this.currToken);
            this.position++;
        }
        if (this.currToken[0] !== tokens.closeSquare) {
            return this.expected('closing square bracket', this.currToken[5]);
        }

        var len = attr.length;
        var node = {
            source: getSource(startingToken[1], startingToken[2], this.currToken[3], this.currToken[4]),
            sourceIndex: startingToken[5]
        };

        if (len === 1 && !~[tokens.word].indexOf(attr[0][0])) {
            return this.expected('attribute', attr[0][5]);
        }

        var pos = 0;
        var spaceBefore = '';
        var commentBefore = '';
        var lastAdded = null;
        var spaceAfterMeaningfulToken = false;

        while (pos < len) {
            var token = attr[pos];
            var content = this.content(token);
            var next = attr[pos + 1];

            switch (token[0]) {
                case tokens.space:
                    if (len === 1 || pos === 0 && this.content(next) === '|') {
                        return this.expected('attribute', token[5], content);
                    }
                    spaceAfterMeaningfulToken = true;
                    if (this.options.lossy) {
                        break;
                    }
                    if (lastAdded) {
                        var spaceProp = 'spaces.' + lastAdded + '.after';
                        _dotProp2.default.set(node, spaceProp, _dotProp2.default.get(node, spaceProp, '') + content);
                        var commentProp = 'raws.spaces.' + lastAdded + '.after';
                        var existingComment = _dotProp2.default.get(node, commentProp);
                        if (existingComment) {
                            _dotProp2.default.set(node, commentProp, existingComment + content);
                        }
                    } else {
                        spaceBefore = spaceBefore + content;
                        commentBefore = commentBefore + content;
                    }
                    break;
                case tokens.asterisk:
                    if (next[0] === tokens.equals) {
                        node.operator = content;
                        lastAdded = 'operator';
                    } else if ((!node.namespace || lastAdded === "namespace" && !spaceAfterMeaningfulToken) && next) {
                        if (spaceBefore) {
                            _dotProp2.default.set(node, 'spaces.attribute.before', spaceBefore);
                            spaceBefore = '';
                        }
                        if (commentBefore) {
                            _dotProp2.default.set(node, 'raws.spaces.attribute.before', spaceBefore);
                            commentBefore = '';
                        }
                        node.namespace = (node.namespace || "") + content;
                        var rawValue = _dotProp2.default.get(node, "raws.namespace");
                        if (rawValue) {
                            node.raws.namespace += content;
                        }
                        lastAdded = 'namespace';
                    }
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.dollar:
                case tokens.caret:
                    if (next[0] === tokens.equals) {
                        node.operator = content;
                        lastAdded = 'operator';
                    }
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.combinator:
                    if (content === '~' && next[0] === tokens.equals) {
                        node.operator = content;
                        lastAdded = 'operator';
                    }
                    if (content !== '|') {
                        spaceAfterMeaningfulToken = false;
                        break;
                    }
                    if (next[0] === tokens.equals) {
                        node.operator = content;
                        lastAdded = 'operator';
                    } else if (!node.namespace && !node.attribute) {
                        node.namespace = true;
                    }
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.word:
                    if (next && this.content(next) === '|' && attr[pos + 2] && attr[pos + 2][0] !== tokens.equals && // this look-ahead probably fails with comment nodes involved.
                    !node.operator && !node.namespace) {
                        node.namespace = content;
                        lastAdded = 'namespace';
                    } else if (!node.attribute || lastAdded === "attribute" && !spaceAfterMeaningfulToken) {
                        if (spaceBefore) {
                            _dotProp2.default.set(node, 'spaces.attribute.before', spaceBefore);
                            spaceBefore = '';
                        }
                        if (commentBefore) {
                            _dotProp2.default.set(node, 'raws.spaces.attribute.before', commentBefore);
                            commentBefore = '';
                        }
                        node.attribute = (node.attribute || "") + content;
                        var _rawValue = _dotProp2.default.get(node, "raws.attribute");
                        if (_rawValue) {
                            node.raws.attribute += content;
                        }
                        lastAdded = 'attribute';
                    } else if (!node.value || lastAdded === "value" && !spaceAfterMeaningfulToken) {
                        node.value = (node.value || "") + content;
                        var _rawValue2 = _dotProp2.default.get(node, "raws.value");
                        if (_rawValue2) {
                            node.raws.value += content;
                        }
                        lastAdded = 'value';
                        _dotProp2.default.set(node, 'raws.unquoted', _dotProp2.default.get(node, 'raws.unquoted', '') + content);
                    } else if (content === 'i') {
                        if (node.value && (node.quoted || spaceAfterMeaningfulToken)) {
                            node.insensitive = true;
                            lastAdded = 'insensitive';
                            if (spaceBefore) {
                                _dotProp2.default.set(node, 'spaces.insensitive.before', spaceBefore);
                                spaceBefore = '';
                            }
                            if (commentBefore) {
                                _dotProp2.default.set(node, 'raws.spaces.insensitive.before', commentBefore);
                                commentBefore = '';
                            }
                        } else if (node.value) {
                            lastAdded = 'value';
                            node.value += 'i';
                            if (node.raws.value) {
                                node.raws.value += 'i';
                            }
                        }
                    }
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.str:
                    if (!node.attribute || !node.operator) {
                        return this.error('Expected an attribute followed by an operator preceding the string.', {
                            index: token[5]
                        });
                    }
                    node.value = content;
                    node.quoted = true;
                    lastAdded = 'value';
                    _dotProp2.default.set(node, 'raws.unquoted', content.slice(1, -1));
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.equals:
                    if (!node.attribute) {
                        return this.expected('attribute', token[5], content);
                    }
                    if (node.value) {
                        return this.error('Unexpected "=" found; an operator was already defined.', { index: token[5] });
                    }
                    node.operator = node.operator ? node.operator + content : content;
                    lastAdded = 'operator';
                    spaceAfterMeaningfulToken = false;
                    break;
                case tokens.comment:
                    if (lastAdded) {
                        if (spaceAfterMeaningfulToken || next && next[0] === tokens.space) {
                            var lastComment = _dotProp2.default.get(node, 'raws.spaces.' + lastAdded + '.after', _dotProp2.default.get(node, 'spaces.' + lastAdded + '.after', ''));
                            _dotProp2.default.set(node, 'raws.spaces.' + lastAdded + '.after', lastComment + content);
                        } else {
                            var lastValue = _dotProp2.default.get(node, 'raws.' + lastAdded, _dotProp2.default.get(node, lastAdded, ''));
                            _dotProp2.default.set(node, 'raws.' + lastAdded, lastValue + content);
                        }
                    } else {
                        commentBefore = commentBefore + content;
                    }
                    break;
                default:
                    return this.error('Unexpected "' + content + '" found.', { index: token[5] });
            }
            pos++;
        }

        this.newNode(new _attribute2.default(node));
        this.position++;
    };

    Parser.prototype.combinator = function combinator() {
        var current = this.currToken;
        if (this.content() === '|') {
            return this.namespace();
        }
        var node = new _combinator2.default({
            value: '',
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        });
        while (this.position < this.tokens.length && this.currToken && (this.currToken[0] === tokens.space || this.currToken[0] === tokens.combinator)) {
            var content = this.content();
            if (this.nextToken && this.nextToken[0] === tokens.combinator) {
                node.spaces.before = this.parseSpace(content);
                node.source = getSource(this.nextToken[1], this.nextToken[2], this.nextToken[3], this.nextToken[4]);
                node.sourceIndex = this.nextToken[5];
            } else if (this.prevToken && this.prevToken[0] === tokens.combinator) {
                node.spaces.after = this.parseSpace(content);
            } else if (this.currToken[0] === tokens.combinator) {
                node.value = content;
            } else if (this.currToken[0] === tokens.space) {
                node.value = this.parseSpace(content, ' ');
            }
            this.position++;
        }
        return this.newNode(node);
    };

    Parser.prototype.comma = function comma() {
        if (this.position === this.tokens.length - 1) {
            this.root.trailingComma = true;
            this.position++;
            return;
        }
        var selector = new _selector2.default();
        this.current.parent.append(selector);
        this.current = selector;
        this.position++;
    };

    Parser.prototype.comment = function comment() {
        var current = this.currToken;
        this.newNode(new _comment2.default({
            value: this.content(),
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        }));
        this.position++;
    };

    Parser.prototype.error = function error(message, opts) {
        throw this.root.error(message, opts);
    };

    Parser.prototype.missingBackslash = function missingBackslash() {
        return this.error('Expected a backslash preceding the semicolon.', {
            index: this.currToken[5]
        });
    };

    Parser.prototype.missingParenthesis = function missingParenthesis() {
        return this.expected('opening parenthesis', this.currToken[5]);
    };

    Parser.prototype.missingSquareBracket = function missingSquareBracket() {
        return this.expected('opening square bracket', this.currToken[5]);
    };

    Parser.prototype.namespace = function namespace() {
        var before = this.prevToken && this.content(this.prevToken) || true;
        if (this.nextToken[0] === tokens.word) {
            this.position++;
            return this.word(before);
        } else if (this.nextToken[0] === tokens.asterisk) {
            this.position++;
            return this.universal(before);
        }
    };

    Parser.prototype.nesting = function nesting() {
        var current = this.currToken;
        this.newNode(new _nesting2.default({
            value: this.content(),
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        }));
        this.position++;
    };

    Parser.prototype.parentheses = function parentheses() {
        var last = this.current.last;
        var balanced = 1;
        this.position++;
        if (last && last.type === types.PSEUDO) {
            var selector = new _selector2.default();
            var cache = this.current;
            last.append(selector);
            this.current = selector;
            while (this.position < this.tokens.length && balanced) {
                if (this.currToken[0] === tokens.openParenthesis) {
                    balanced++;
                }
                if (this.currToken[0] === tokens.closeParenthesis) {
                    balanced--;
                }
                if (balanced) {
                    this.parse();
                } else {
                    selector.parent.source.end.line = this.currToken[3];
                    selector.parent.source.end.column = this.currToken[4];
                    this.position++;
                }
            }
            this.current = cache;
        } else {
            last.value += '(';
            while (this.position < this.tokens.length && balanced) {
                if (this.currToken[0] === tokens.openParenthesis) {
                    balanced++;
                }
                if (this.currToken[0] === tokens.closeParenthesis) {
                    balanced--;
                }
                last.value += this.parseParenthesisToken(this.currToken);
                this.position++;
            }
        }
        if (balanced) {
            return this.expected('closing parenthesis', this.currToken[5]);
        }
    };

    Parser.prototype.pseudo = function pseudo() {
        var _this2 = this;

        var pseudoStr = '';
        var startingToken = this.currToken;
        while (this.currToken && this.currToken[0] === tokens.colon) {
            pseudoStr += this.content();
            this.position++;
        }
        if (!this.currToken) {
            return this.expected(['pseudo-class', 'pseudo-element'], this.position - 1);
        }
        if (this.currToken[0] === tokens.word) {
            this.splitWord(false, function (first, length) {
                pseudoStr += first;
                _this2.newNode(new _pseudo2.default({
                    value: pseudoStr,
                    source: getSource(startingToken[1], startingToken[2], _this2.currToken[3], _this2.currToken[4]),
                    sourceIndex: startingToken[5]
                }));
                if (length > 1 && _this2.nextToken && _this2.nextToken[0] === tokens.openParenthesis) {
                    _this2.error('Misplaced parenthesis.', {
                        index: _this2.nextToken[5]
                    });
                }
            });
        } else {
            return this.expected(['pseudo-class', 'pseudo-element'], this.currToken[5]);
        }
    };

    Parser.prototype.space = function space() {
        var content = this.content();
        // Handle space before and after the selector
        if (this.position === 0 || this.prevToken[0] === tokens.comma || this.prevToken[0] === tokens.openParenthesis) {
            this.spaces = this.parseSpace(content);
            this.position++;
        } else if (this.position === this.tokens.length - 1 || this.nextToken[0] === tokens.comma || this.nextToken[0] === tokens.closeParenthesis) {
            this.current.last.spaces.after = this.parseSpace(content);
            this.position++;
        } else {
            this.combinator();
        }
    };

    Parser.prototype.string = function string() {
        var current = this.currToken;
        this.newNode(new _string2.default({
            value: this.content(),
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        }));
        this.position++;
    };

    Parser.prototype.universal = function universal(namespace) {
        var nextToken = this.nextToken;
        if (nextToken && this.content(nextToken) === '|') {
            this.position++;
            return this.namespace();
        }
        var current = this.currToken;
        this.newNode(new _universal2.default({
            value: this.content(),
            source: getSource(current[1], current[2], current[3], current[4]),
            sourceIndex: current[5]
        }), namespace);
        this.position++;
    };

    Parser.prototype.splitWord = function splitWord(namespace, firstCallback) {
        var _this3 = this;

        var nextToken = this.nextToken;
        var word = this.content();
        while (nextToken && ~[tokens.dollar, tokens.caret, tokens.equals, tokens.word].indexOf(nextToken[0])) {
            this.position++;
            var current = this.content();
            word += current;
            if (current.lastIndexOf('\\') === current.length - 1) {
                var next = this.nextToken;
                if (next && next[0] === tokens.space) {
                    word += this.parseSpace(this.content(next), ' ');
                    this.position++;
                }
            }
            nextToken = this.nextToken;
        }
        var hasClass = (0, _indexesOf2.default)(word, '.');
        var hasId = (0, _indexesOf2.default)(word, '#');
        // Eliminate Sass interpolations from the list of id indexes
        var interpolations = (0, _indexesOf2.default)(word, '#{');
        if (interpolations.length) {
            hasId = hasId.filter(function (hashIndex) {
                return !~interpolations.indexOf(hashIndex);
            });
        }
        var indices = (0, _sortAscending2.default)((0, _uniq2.default)([0].concat(hasClass, hasId)));
        indices.forEach(function (ind, i) {
            var index = indices[i + 1] || word.length;
            var value = word.slice(ind, index);
            if (i === 0 && firstCallback) {
                return firstCallback.call(_this3, value, indices.length);
            }
            var node = void 0;
            var current = _this3.currToken;
            var sourceIndex = current[5] + indices[i];
            var source = getSource(current[1], current[2] + ind, current[3], current[2] + (index - 1));
            if (~hasClass.indexOf(ind)) {
                node = new _className2.default({
                    value: value.slice(1),
                    source: source,
                    sourceIndex: sourceIndex
                });
            } else if (~hasId.indexOf(ind)) {
                node = new _id2.default({
                    value: value.slice(1),
                    source: source,
                    sourceIndex: sourceIndex
                });
            } else {
                node = new _tag2.default({
                    value: value,
                    source: source,
                    sourceIndex: sourceIndex
                });
            }
            _this3.newNode(node, namespace);
            // Ensure that the namespace is used only once
            namespace = null;
        });
        this.position++;
    };

    Parser.prototype.word = function word(namespace) {
        var nextToken = this.nextToken;
        if (nextToken && this.content(nextToken) === '|') {
            this.position++;
            return this.namespace();
        }
        return this.splitWord(namespace);
    };

    Parser.prototype.loop = function loop() {
        while (this.position < this.tokens.length) {
            this.parse(true);
        }
        return this.root;
    };

    Parser.prototype.parse = function parse(throwOnParenthesis) {
        switch (this.currToken[0]) {
            case tokens.space:
                this.space();
                break;
            case tokens.comment:
                this.comment();
                break;
            case tokens.openParenthesis:
                this.parentheses();
                break;
            case tokens.closeParenthesis:
                if (throwOnParenthesis) {
                    this.missingParenthesis();
                }
                break;
            case tokens.openSquare:
                this.attribute();
                break;
            case tokens.dollar:
            case tokens.caret:
            case tokens.equals:
            case tokens.word:
                this.word();
                break;
            case tokens.colon:
                this.pseudo();
                break;
            case tokens.comma:
                this.comma();
                break;
            case tokens.asterisk:
                this.universal();
                break;
            case tokens.ampersand:
                this.nesting();
                break;
            case tokens.combinator:
                this.combinator();
                break;
            case tokens.str:
                this.string();
                break;
            // These cases throw; no break needed.
            case tokens.closeSquare:
                this.missingSquareBracket();
            case tokens.semicolon:
                this.missingBackslash();
        }
    };

    /**
     * Helpers
     */

    Parser.prototype.expected = function expected(description, index, found) {
        if (Array.isArray(description)) {
            var last = description.pop();
            description = description.join(', ') + ' or ' + last;
        }
        var an = /^[aeiou]/.test(description[0]) ? 'an' : 'a';
        if (!found) {
            return this.error('Expected ' + an + ' ' + description + '.', { index: index });
        }
        return this.error('Expected ' + an + ' ' + description + ', found "' + found + '" instead.', { index: index });
    };

    Parser.prototype.parseNamespace = function parseNamespace(namespace) {
        if (this.options.lossy && typeof namespace === 'string') {
            var trimmed = namespace.trim();
            if (!trimmed.length) {
                return true;
            }

            return trimmed;
        }

        return namespace;
    };

    Parser.prototype.parseSpace = function parseSpace(space) {
        var replacement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

        return this.options.lossy ? replacement : space;
    };

    Parser.prototype.parseValue = function parseValue(value) {
        if (!this.options.lossy || !value || typeof value !== 'string') {
            return value;
        }
        return value.trim();
    };

    Parser.prototype.parseParenthesisToken = function parseParenthesisToken(token) {
        var content = this.content(token);
        if (!this.options.lossy) {
            return content;
        }

        if (token[0] === tokens.space) {
            return this.parseSpace(content, ' ');
        }

        return this.parseValue(content);
    };

    Parser.prototype.newNode = function newNode(node, namespace) {
        if (namespace) {
            node.namespace = this.parseNamespace(namespace);
        }
        if (this.spaces) {
            node.spaces.before = this.spaces;
            this.spaces = '';
        }
        return this.current.append(node);
    };

    Parser.prototype.content = function content() {
        var token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currToken;

        return this.css.slice(token[5], token[6]);
    };

    _createClass(Parser, [{
        key: 'currToken',
        get: function get() {
            return this.tokens[this.position];
        }
    }, {
        key: 'nextToken',
        get: function get() {
            return this.tokens[this.position + 1];
        }
    }, {
        key: 'prevToken',
        get: function get() {
            return this.tokens[this.position - 1];
        }
    }]);

    return Parser;
}();

exports.default = Parser;
module.exports = exports['default'];

/***/ }),
/* 1032 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const isObj = __webpack_require__(140);

function getPathSegments(path) {
	const pathArr = path.split('.');
	const parts = [];

	for (let i = 0; i < pathArr.length; i++) {
		let p = pathArr[i];

		while (p[p.length - 1] === '\\' && pathArr[i + 1] !== undefined) {
			p = p.slice(0, -1) + '.';
			p += pathArr[++i];
		}

		parts.push(p);
	}

	return parts;
}

module.exports = {
	get(obj, path, value) {
		if (!isObj(obj) || typeof path !== 'string') {
			return value === undefined ? obj : value;
		}

		const pathArr = getPathSegments(path);

		for (let i = 0; i < pathArr.length; i++) {
			if (!Object.prototype.propertyIsEnumerable.call(obj, pathArr[i])) {
				return value;
			}

			obj = obj[pathArr[i]];

			if (obj === undefined || obj === null) {
				// `obj` is either `undefined` or `null` so we want to stop the loop, and
				// if this is not the last bit of the path, and
				// if it did't return `undefined`
				// it would return `null` if `obj` is `null`
				// but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`
				if (i !== pathArr.length - 1) {
					return value;
				}

				break;
			}
		}

		return obj;
	},

	set(obj, path, value) {
		if (!isObj(obj) || typeof path !== 'string') {
			return obj;
		}

		const root = obj;
		const pathArr = getPathSegments(path);

		for (let i = 0; i < pathArr.length; i++) {
			const p = pathArr[i];

			if (!isObj(obj[p])) {
				obj[p] = {};
			}

			if (i === pathArr.length - 1) {
				obj[p] = value;
			}

			obj = obj[p];
		}

		return root;
	},

	delete(obj, path) {
		if (!isObj(obj) || typeof path !== 'string') {
			return;
		}

		const pathArr = getPathSegments(path);

		for (let i = 0; i < pathArr.length; i++) {
			const p = pathArr[i];

			if (i === pathArr.length - 1) {
				delete obj[p];
				return;
			}

			obj = obj[p];

			if (!isObj(obj)) {
				return;
			}
		}
	},

	has(obj, path) {
		if (!isObj(obj) || typeof path !== 'string') {
			return false;
		}

		const pathArr = getPathSegments(path);

		for (let i = 0; i < pathArr.length; i++) {
			if (isObj(obj)) {
				if (!(pathArr[i] in obj)) {
					return false;
				}

				obj = obj[pathArr[i]];
			} else {
				return false;
			}
		}

		return true;
	}
};


/***/ }),
/* 1033 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = sortAscending;
function sortAscending(list) {
    return list.sort(function (a, b) {
        return a - b;
    });
};
module.exports = exports["default"];

/***/ }),
/* 1034 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = tokenize;

var _tokenTypes = __webpack_require__(172);

var t = _interopRequireWildcard(_tokenTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

var wordEnd = /[ \n\t\r\(\)\*:;!&'"\+\|~>,=$^\[\]\\]|\/(?=\*)/g;

function tokenize(input) {
    var tokens = [];
    var css = input.css.valueOf();
    var _css = css,
        length = _css.length;

    var offset = -1;
    var line = 1;
    var start = 0;
    var end = 0;

    var code = void 0,
        content = void 0,
        endColumn = void 0,
        endLine = void 0,
        escaped = void 0,
        escapePos = void 0,
        last = void 0,
        lines = void 0,
        next = void 0,
        nextLine = void 0,
        nextOffset = void 0,
        quote = void 0,
        tokenType = void 0;

    function unclosed(what, fix) {
        if (input.safe) {
            // fyi: this is never set to true.
            css += fix;
            next = css.length - 1;
        } else {
            throw input.error('Unclosed ' + what, line, start - offset, start);
        }
    }

    while (start < length) {
        code = css.charCodeAt(start);

        if (code === t.newline) {
            offset = start;
            line += 1;
        }

        switch (code) {
            case t.newline:
            case t.space:
            case t.tab:
            case t.cr:
            case t.feed:
                next = start;
                do {
                    next += 1;
                    code = css.charCodeAt(next);
                    if (code === t.newline) {
                        offset = next;
                        line += 1;
                    }
                } while (code === t.space || code === t.newline || code === t.tab || code === t.cr || code === t.feed);

                tokenType = t.space;
                endLine = line;
                endColumn = start - offset;
                end = next;
                break;

            case t.plus:
            case t.greaterThan:
            case t.tilde:
            case t.pipe:
                next = start;
                do {
                    next += 1;
                    code = css.charCodeAt(next);
                } while (code === t.plus || code === t.greaterThan || code === t.tilde || code === t.pipe);

                tokenType = t.combinator;
                endLine = line;
                endColumn = start - offset;
                end = next;
                break;

            // Consume these characters as single tokens.
            case t.asterisk:
            case t.ampersand:
            case t.comma:
            case t.equals:
            case t.dollar:
            case t.caret:
            case t.openSquare:
            case t.closeSquare:
            case t.colon:
            case t.semicolon:
            case t.openParenthesis:
            case t.closeParenthesis:
                next = start;
                tokenType = code;
                endLine = line;
                endColumn = start - offset;
                end = next + 1;
                break;

            case t.singleQuote:
            case t.doubleQuote:
                quote = code === t.singleQuote ? "'" : '"';
                next = start;
                do {
                    escaped = false;
                    next = css.indexOf(quote, next + 1);
                    if (next === -1) {
                        unclosed('quote', quote);
                    }
                    escapePos = next;
                    while (css.charCodeAt(escapePos - 1) === t.backslash) {
                        escapePos -= 1;
                        escaped = !escaped;
                    }
                } while (escaped);

                tokenType = t.str;
                endLine = line;
                endColumn = start - offset;
                end = next + 1;
                break;

            case t.backslash:
                next = start;
                escaped = true;
                while (css.charCodeAt(next + 1) === t.backslash) {
                    next += 1;
                    escaped = !escaped;
                }
                code = css.charCodeAt(next + 1);
                if (escaped && code !== t.slash && code !== t.space && code !== t.newline && code !== t.tab && code !== t.cr && code !== t.feed) {
                    next += 1;
                }

                tokenType = t.word;
                endLine = line;
                endColumn = next - offset;
                end = next + 1;
                break;

            default:
                if (code === t.slash && css.charCodeAt(start + 1) === t.asterisk) {
                    next = css.indexOf('*/', start + 2) + 1;
                    if (next === 0) {
                        unclosed('comment', '*/');
                    }

                    content = css.slice(start, next + 1);
                    lines = content.split('\n');
                    last = lines.length - 1;

                    if (last > 0) {
                        nextLine = line + last;
                        nextOffset = next - lines[last].length;
                    } else {
                        nextLine = line;
                        nextOffset = offset;
                    }

                    tokenType = t.comment;
                    line = nextLine;
                    endLine = nextLine;
                    endColumn = next - nextOffset;
                } else {
                    wordEnd.lastIndex = start + 1;
                    wordEnd.test(css);
                    if (wordEnd.lastIndex === 0) {
                        next = css.length - 1;
                    } else {
                        next = wordEnd.lastIndex - 2;
                    }

                    tokenType = t.word;
                    endLine = line;
                    endColumn = next - offset;
                }

                end = next + 1;
                break;
        }

        // Ensure that the token structure remains consistent
        tokens.push([tokenType, // [0] Token type
        line, // [1] Starting line
        start - offset, // [2] Starting column
        endLine, // [3] Ending line
        endColumn, // [4] Ending column
        start, // [5] Start position / Source index
        end]);

        // Reset offset for the next token
        if (nextOffset) {
            offset = nextOffset;
            nextOffset = null;
        }

        start = end;
    }

    return tokens;
}
module.exports = exports['default'];

/***/ }),
/* 1035 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _types = __webpack_require__(9);

Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _types[key];
    }
  });
});

var _constructors = __webpack_require__(1036);

Object.keys(_constructors).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _constructors[key];
    }
  });
});

var _guards = __webpack_require__(1037);

Object.keys(_guards).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _guards[key];
    }
  });
});

/***/ }),
/* 1036 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.universal = exports.tag = exports.string = exports.selector = exports.root = exports.pseudo = exports.nesting = exports.id = exports.comment = exports.combinator = exports.className = exports.attribute = undefined;

var _attribute = __webpack_require__(168);

var _attribute2 = _interopRequireDefault(_attribute);

var _className = __webpack_require__(162);

var _className2 = _interopRequireDefault(_className);

var _combinator = __webpack_require__(170);

var _combinator2 = _interopRequireDefault(_combinator);

var _comment = __webpack_require__(163);

var _comment2 = _interopRequireDefault(_comment);

var _id = __webpack_require__(164);

var _id2 = _interopRequireDefault(_id);

var _nesting = __webpack_require__(171);

var _nesting2 = _interopRequireDefault(_nesting);

var _pseudo = __webpack_require__(167);

var _pseudo2 = _interopRequireDefault(_pseudo);

var _root = __webpack_require__(160);

var _root2 = _interopRequireDefault(_root);

var _selector = __webpack_require__(161);

var _selector2 = _interopRequireDefault(_selector);

var _string = __webpack_require__(166);

var _string2 = _interopRequireDefault(_string);

var _tag = __webpack_require__(165);

var _tag2 = _interopRequireDefault(_tag);

var _universal = __webpack_require__(169);

var _universal2 = _interopRequireDefault(_universal);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var attribute = exports.attribute = function attribute(opts) {
  return new _attribute2.default(opts);
};
var className = exports.className = function className(opts) {
  return new _className2.default(opts);
};
var combinator = exports.combinator = function combinator(opts) {
  return new _combinator2.default(opts);
};
var comment = exports.comment = function comment(opts) {
  return new _comment2.default(opts);
};
var id = exports.id = function id(opts) {
  return new _id2.default(opts);
};
var nesting = exports.nesting = function nesting(opts) {
  return new _nesting2.default(opts);
};
var pseudo = exports.pseudo = function pseudo(opts) {
  return new _pseudo2.default(opts);
};
var root = exports.root = function root(opts) {
  return new _root2.default(opts);
};
var selector = exports.selector = function selector(opts) {
  return new _selector2.default(opts);
};
var string = exports.string = function string(opts) {
  return new _string2.default(opts);
};
var tag = exports.tag = function tag(opts) {
  return new _tag2.default(opts);
};
var universal = exports.universal = function universal(opts) {
  return new _universal2.default(opts);
};

/***/ }),
/* 1037 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isUniversal = exports.isTag = exports.isString = exports.isSelector = exports.isRoot = exports.isPseudo = exports.isNesting = exports.isIdentifier = exports.isComment = exports.isCombinator = exports.isClassName = exports.isAttribute = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _IS_TYPE;

exports.isNode = isNode;
exports.isPseudoElement = isPseudoElement;
exports.isPseudoClass = isPseudoClass;
exports.isContainer = isContainer;
exports.isNamespace = isNamespace;

var _types = __webpack_require__(9);

var IS_TYPE = (_IS_TYPE = {}, _IS_TYPE[_types.ATTRIBUTE] = true, _IS_TYPE[_types.CLASS] = true, _IS_TYPE[_types.COMBINATOR] = true, _IS_TYPE[_types.COMMENT] = true, _IS_TYPE[_types.ID] = true, _IS_TYPE[_types.NESTING] = true, _IS_TYPE[_types.PSEUDO] = true, _IS_TYPE[_types.ROOT] = true, _IS_TYPE[_types.SELECTOR] = true, _IS_TYPE[_types.STRING] = true, _IS_TYPE[_types.TAG] = true, _IS_TYPE[_types.UNIVERSAL] = true, _IS_TYPE);

function isNode(node) {
    return (typeof node === "undefined" ? "undefined" : _typeof(node)) === "object" && IS_TYPE[node.type];
}

function isNodeType(type, node) {
    return isNode(node) && node.type === type;
}

var isAttribute = exports.isAttribute = isNodeType.bind(null, _types.ATTRIBUTE);
var isClassName = exports.isClassName = isNodeType.bind(null, _types.CLASS);
var isCombinator = exports.isCombinator = isNodeType.bind(null, _types.COMBINATOR);
var isComment = exports.isComment = isNodeType.bind(null, _types.COMMENT);
var isIdentifier = exports.isIdentifier = isNodeType.bind(null, _types.ID);
var isNesting = exports.isNesting = isNodeType.bind(null, _types.NESTING);
var isPseudo = exports.isPseudo = isNodeType.bind(null, _types.PSEUDO);
var isRoot = exports.isRoot = isNodeType.bind(null, _types.ROOT);
var isSelector = exports.isSelector = isNodeType.bind(null, _types.SELECTOR);
var isString = exports.isString = isNodeType.bind(null, _types.STRING);
var isTag = exports.isTag = isNodeType.bind(null, _types.TAG);
var isUniversal = exports.isUniversal = isNodeType.bind(null, _types.UNIVERSAL);

function isPseudoElement(node) {
    return isPseudo(node) && node.value && (node.value.startsWith("::") || node.value === ":before" || node.value === ":after");
}
function isPseudoClass(node) {
    return isPseudo(node) && !isPseudoElement(node);
}

function isContainer(node) {
    return !!(isNode(node) && node.walk);
}

function isNamespace(node) {
    return isClassName(node) || isAttribute(node) || isTag(node);
}

/***/ }),
/* 1038 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const plugin = 'postcss-discard-empty';

function discardAndReport(css, result) {
    function discardEmpty(node) {
        const { type, nodes: sub, params } = node;

        if (sub) {
            node.each(discardEmpty);
        }

        if (type === 'decl' && !node.value || type === 'rule' && !node.selector || sub && !sub.length || type === 'atrule' && (!sub && !params || !params && !sub.length)) {
            node.remove();

            result.messages.push({
                type: 'removal',
                plugin,
                node
            });
        }
    }

    css.each(discardEmpty);
}

exports.default = _postcss2.default.plugin(plugin, () => discardAndReport);
module.exports = exports['default'];

/***/ }),
/* 1039 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _alphanumSort = __webpack_require__(50);

var _alphanumSort2 = _interopRequireDefault(_alphanumSort);

var _uniqs = __webpack_require__(157);

var _uniqs2 = _interopRequireDefault(_uniqs);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function unique(rule) {
    rule.selector = (0, _alphanumSort2.default)((0, _uniqs2.default)(rule.selectors), { insensitive: true }).join();
}

exports.default = (0, _postcss.plugin)('postcss-unique-selectors', () => {
    return css => css.walkRules(unique);
});
module.exports = exports['default'];

/***/ }),
/* 1040 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _has = __webpack_require__(25);

var _has2 = _interopRequireDefault(_has);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Constants (parser usage)
 */

const SINGLE_QUOTE = '\''.charCodeAt(0);
const DOUBLE_QUOTE = '"'.charCodeAt(0);
const BACKSLASH = '\\'.charCodeAt(0);
const NEWLINE = '\n'.charCodeAt(0);
const SPACE = ' '.charCodeAt(0);
const FEED = '\f'.charCodeAt(0);
const TAB = '\t'.charCodeAt(0);
const CR = '\r'.charCodeAt(0);

const WORD_END = /[ \n\t\r\f'"\\]/g;

/*
 * Constants (node type strings)
 */

const C_STRING = 'string';
const C_ESCAPED_SINGLE_QUOTE = 'escapedSingleQuote';
const C_ESCAPED_DOUBLE_QUOTE = 'escapedDoubleQuote';
const C_SINGLE_QUOTE = 'singleQuote';
const C_DOUBLE_QUOTE = 'doubleQuote';
const C_NEWLINE = 'newline';
const C_SINGLE = 'single';

/*
 * Literals
 */

const L_SINGLE_QUOTE = `'`;
const L_DOUBLE_QUOTE = `"`;
const L_NEWLINE = `\\\n`;

/*
 * Parser nodes
 */

const T_ESCAPED_SINGLE_QUOTE = { type: C_ESCAPED_SINGLE_QUOTE, value: `\\'` };
const T_ESCAPED_DOUBLE_QUOTE = { type: C_ESCAPED_DOUBLE_QUOTE, value: `\\"` };
const T_SINGLE_QUOTE = { type: C_SINGLE_QUOTE, value: L_SINGLE_QUOTE };
const T_DOUBLE_QUOTE = { type: C_DOUBLE_QUOTE, value: L_DOUBLE_QUOTE };
const T_NEWLINE = { type: C_NEWLINE, value: L_NEWLINE };

function stringify(ast) {
    return ast.nodes.reduce((str, { value }) => {
        // Collapse multiple line strings automatically
        if (value === L_NEWLINE) {
            return str;
        }

        return str + value;
    }, '');
}

function parse(str) {
    let code, next, value;
    let pos = 0;
    let len = str.length;

    const ast = {
        nodes: [],
        types: {
            escapedSingleQuote: 0,
            escapedDoubleQuote: 0,
            singleQuote: 0,
            doubleQuote: 0
        },
        quotes: false
    };

    while (pos < len) {
        code = str.charCodeAt(pos);

        switch (code) {
            case SPACE:
            case TAB:
            case CR:
            case FEED:
                next = pos;

                do {
                    next += 1;
                    code = str.charCodeAt(next);
                } while (code === SPACE || code === NEWLINE || code === TAB || code === CR || code === FEED);

                ast.nodes.push({
                    type: 'space',
                    value: str.slice(pos, next)
                });
                pos = next - 1;
                break;
            case SINGLE_QUOTE:
                ast.nodes.push(T_SINGLE_QUOTE);
                ast.types[C_SINGLE_QUOTE]++;
                ast.quotes = true;
                break;
            case DOUBLE_QUOTE:
                ast.nodes.push(T_DOUBLE_QUOTE);
                ast.types[C_DOUBLE_QUOTE]++;
                ast.quotes = true;
                break;
            case BACKSLASH:
                next = pos + 1;

                if (str.charCodeAt(next) === SINGLE_QUOTE) {
                    ast.nodes.push(T_ESCAPED_SINGLE_QUOTE);
                    ast.types[C_ESCAPED_SINGLE_QUOTE]++;
                    ast.quotes = true;
                    pos = next;
                    break;
                } else if (str.charCodeAt(next) === DOUBLE_QUOTE) {
                    ast.nodes.push(T_ESCAPED_DOUBLE_QUOTE);
                    ast.types[C_ESCAPED_DOUBLE_QUOTE]++;
                    ast.quotes = true;
                    pos = next;
                    break;
                } else if (str.charCodeAt(next) === NEWLINE) {
                    ast.nodes.push(T_NEWLINE);
                    pos = next;
                    break;
                }
            /*
             * We need to fall through here to handle the token as
             * a whole word. The missing 'break' is intentional.
             */
            default:
                WORD_END.lastIndex = pos + 1;
                WORD_END.test(str);

                if (WORD_END.lastIndex === 0) {
                    next = len - 1;
                } else {
                    next = WORD_END.lastIndex - 2;
                }

                value = str.slice(pos, next + 1);

                ast.nodes.push({
                    type: C_STRING,
                    value
                });

                pos = next;
        }
        pos++;
    }

    return ast;
}

function changeWrappingQuotes(node, ast) {
    const { types } = ast;

    if (types[C_SINGLE_QUOTE] || types[C_DOUBLE_QUOTE]) {
        return;
    }

    if (node.quote === L_SINGLE_QUOTE && types[C_ESCAPED_SINGLE_QUOTE] > 0 && !types[C_ESCAPED_DOUBLE_QUOTE]) {
        node.quote = L_DOUBLE_QUOTE;
    }

    if (node.quote === L_DOUBLE_QUOTE && types[C_ESCAPED_DOUBLE_QUOTE] > 0 && !types[C_ESCAPED_SINGLE_QUOTE]) {
        node.quote = L_SINGLE_QUOTE;
    }

    ast.nodes = ast.nodes.reduce((newAst, child) => {
        if (child.type === C_ESCAPED_DOUBLE_QUOTE && node.quote === L_SINGLE_QUOTE) {
            return [...newAst, T_DOUBLE_QUOTE];
        }

        if (child.type === C_ESCAPED_SINGLE_QUOTE && node.quote === L_DOUBLE_QUOTE) {
            return [...newAst, T_SINGLE_QUOTE];
        }

        return [...newAst, child];
    }, []);
}

function normalize(value, preferredQuote) {
    if (!value || !value.length) {
        return value;
    }

    return (0, _postcssValueParser2.default)(value).walk(child => {
        if (child.type !== C_STRING) {
            return;
        }

        const ast = parse(child.value);

        if (ast.quotes) {
            changeWrappingQuotes(child, ast);
        } else if (preferredQuote === C_SINGLE) {
            child.quote = L_SINGLE_QUOTE;
        } else {
            child.quote = L_DOUBLE_QUOTE;
        }

        child.value = stringify(ast);
    }).toString();
}

const params = {
    rule: 'selector',
    decl: 'value',
    atrule: 'params'
};

exports.default = _postcss2.default.plugin('postcss-normalize-string', opts => {
    const { preferredQuote } = Object.assign({}, {
        preferredQuote: 'double'
    }, opts);

    return css => {
        const cache = {};

        css.walk(node => {
            const { type } = node;

            if ((0, _has2.default)(params, type)) {
                const param = params[type];
                const key = node[param] + '|' + preferredQuote;

                if (cache[key]) {
                    node[param] = cache[key];

                    return;
                }

                const result = normalize(node[param], preferredQuote);

                node[param] = result;
                cache[key] = result;
            }
        });
    };
});
module.exports = exports['default'];

/***/ }),
/* 1041 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _cssnanoUtilGetArguments = __webpack_require__(15);

var _cssnanoUtilGetArguments2 = _interopRequireDefault(_cssnanoUtilGetArguments);

var _has = __webpack_require__(25);

var _has2 = _interopRequireDefault(_has);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const directions = ['top', 'right', 'bottom', 'left', 'center'];

const center = '50%';

const horizontal = {
    right: '100%',
    left: '0'
};

const vertical = {
    bottom: '100%',
    top: '0'
};

function transform(value) {
    const parsed = (0, _postcssValueParser2.default)(value);
    const args = (0, _cssnanoUtilGetArguments2.default)(parsed);
    const relevant = [];

    args.forEach(arg => {
        relevant.push({
            start: null,
            end: null
        });

        arg.forEach((part, index) => {
            const isPosition = ~directions.indexOf(part.value.toLowerCase()) || (0, _postcssValueParser.unit)(part.value);
            const len = relevant.length - 1;

            if (relevant[len].start === null && isPosition) {
                relevant[len].start = index;
                relevant[len].end = index;

                return;
            }

            if (relevant[len].start !== null) {
                if (part.type === 'space') {
                    return;
                } else if (isPosition) {
                    relevant[len].end = index;

                    return;
                }

                return;
            }
        });
    });

    relevant.forEach((range, index) => {
        if (range.start === null) {
            return;
        }

        const position = args[index].slice(range.start, range.end + 1);

        if (position.length > 3) {
            return;
        }

        const firstValue = position[0].value.toLowerCase();
        const secondValue = position[2] && position[2].value ? position[2].value.toLowerCase() : null;

        if (position.length === 1 || secondValue === 'center') {
            if (secondValue) {
                position[2].value = position[1].value = '';
            }

            const map = Object.assign({}, horizontal, {
                center
            });

            if ((0, _has2.default)(map, firstValue)) {
                position[0].value = map[firstValue];
            }

            return;
        }

        if (firstValue === 'center' && ~directions.indexOf(secondValue)) {
            position[0].value = position[1].value = '';

            if ((0, _has2.default)(horizontal, secondValue)) {
                position[2].value = horizontal[secondValue];
            }

            return;
        }

        if ((0, _has2.default)(horizontal, firstValue) && (0, _has2.default)(vertical, secondValue)) {
            position[0].value = horizontal[firstValue];
            position[2].value = vertical[secondValue];

            return;
        } else if ((0, _has2.default)(vertical, firstValue) && (0, _has2.default)(horizontal, secondValue)) {
            position[0].value = horizontal[secondValue];
            position[2].value = vertical[firstValue];

            return;
        }
    });

    return parsed.toString();
}

exports.default = (0, _postcss.plugin)('postcss-normalize-positions', () => {
    return css => {
        const cache = {};

        css.walkDecls(/^(background(-position)?|(-webkit-)?perspective-origin)$/i, decl => {
            const value = decl.value;

            if (cache[value]) {
                decl.value = cache[value];

                return;
            }

            const result = transform(value);

            decl.value = result;
            cache[value] = result;
        });
    };
});
module.exports = exports['default'];

/***/ }),
/* 1042 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const atrule = "atrule";
const decl = "decl";
const rule = "rule";

function reduceCalcWhitespaces(node) {
    if (node.type === "space") {
        node.value = " ";
    } else if (node.type === "function") {
        node.before = node.after = "";
    }
}

function reduceWhitespaces(node) {
    if (node.type === "space") {
        node.value = " ";
    } else if (node.type === "div") {
        node.before = node.after = "";
    } else if (node.type === "function") {
        node.before = node.after = "";

        if (node.value.toLowerCase() === "calc") {
            _postcssValueParser2.default.walk(node.nodes, reduceCalcWhitespaces);
            return false;
        }
    }
}

exports.default = (0, _postcss.plugin)("postcss-normalize-whitespace", () => {
    return css => {
        const cache = {};

        css.walk(node => {
            const { type } = node;

            if (~[decl, rule, atrule].indexOf(type) && node.raws.before) {
                node.raws.before = node.raws.before.replace(/\s/g, "");
            }

            if (type === decl) {
                // Ensure that !important values do not have any excess whitespace
                if (node.important) {
                    node.raws.important = "!important";
                }

                // Remove whitespaces around ie 9 hack
                node.value = node.value.replace(/\s*(\\9)\s*/, "$1");

                const value = node.value;

                if (cache[value]) {
                    node.value = cache[value];
                } else {
                    const parsed = (0, _postcssValueParser2.default)(node.value);
                    const result = parsed.walk(reduceWhitespaces).toString();

                    // Trim whitespace inside functions & dividers
                    node.value = result;
                    cache[value] = result;
                }

                // Remove extra semicolons and whitespace before the declaration
                if (node.raws.before) {
                    const prev = node.prev();

                    if (prev && prev.type !== rule) {
                        node.raws.before = node.raws.before.replace(/;/g, "");
                    }
                }

                node.raws.between = ":";
                node.raws.semicolon = false;
            } else if (type === rule || type === atrule) {
                node.raws.between = node.raws.after = "";
                node.raws.semicolon = false;
            }
        });

        // Remove final newline
        css.raws.after = "";
    };
});
module.exports = exports["default"];

/***/ }),
/* 1043 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

var _postcss2 = _interopRequireDefault(_postcss);

var _postcssValueParser = __webpack_require__(4);

var _postcssValueParser2 = _interopRequireDefault(_postcssValueParser);

var _cssnanoUtilGetMatch = __webpack_require__(47);

var _cssnanoUtilGetMatch2 = _interopRequireDefault(_cssnanoUtilGetMatch);

var _map = __webpack_require__(1044);

var _map2 = _interopRequireDefault(_map);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const getMatch = (0, _cssnanoUtilGetMatch2.default)(_map2.default);

function evenValues(list, index) {
    return index % 2 === 0;
}

exports.default = _postcss2.default.plugin("postcss-normalize-display-values", () => {
    return css => {
        const cache = {};

        css.walkDecls(/display/i, decl => {
            const value = decl.value;

            if (cache[value]) {
                decl.value = cache[value];

                return;
            }

            const { nodes } = (0, _postcssValueParser2.default)(value);

            if (nodes.length === 1) {
                cache[value] = value;

                return;
            }

            const match = getMatch(nodes.filter(evenValues).map(n => n.value.toLowerCase()));

            if (!match) {
                cache[value] = value;

                return;
            }

            const result = match;

            decl.value = result;
            cache[value] = result;
        });
    };
});
module.exports = exports["default"];

/***/ }),
/* 1044 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
const block = 'block';
const flex = 'flex';
const flow = 'flow';
const flowRoot = 'flow-root';
const grid = 'grid';
const inline = 'inline';
const inlineBlock = 'inline-block';
const inlineFlex = 'inline-flex';
const inlineGrid = 'inline-grid';
const inlineTable = 'inline-table';
const listItem = 'list-item';
const ruby = 'ruby';
const rubyBase = 'ruby-base';
const rubyText = 'ruby-text';
const runIn = 'run-in';
const table = 'table';
const tableCell = 'table-cell';
const tableCaption = 'table-caption';

/**
 * Specification: https://drafts.csswg.org/css-display/#the-display-properties
 */

exports.default = [[block, [block, flow]], [flowRoot, [block, flowRoot]], [inline, [inline, flow]], [inlineBlock, [inline, flowRoot]], [runIn, [runIn, flow]], [listItem, [listItem, block, flow]], [inline + ' ' + listItem, [inline, flow, listItem]], [flex, [block, flex]], [inlineFlex, [inline, flex]], [grid, [block, grid]], [inlineGrid, [inline, grid]], [ruby, [inline, ruby]],
// `block ruby` is same
[table, [block, table]], [inlineTable, [inline, table]], [tableCell, [tableCell, flow]], [tableCaption, [tableCaption, flow]], [rubyBase, [rubyBase, flow]], [rubyText, [rubyText, flow]]];
module.exports = exports['default'];

/***/ }),
/* 1045 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _postcss = __webpack_require__(3);

exports.default = (0, _postcss.plugin)('cssnano-util-raw-cache', () => {
    return (css, result) => {
        result.root.rawCache = {
            colon: ':',
            indent: '',
            beforeDecl: '',
            beforeRule: '',
            beforeOpen: '',
            beforeClose: '',
            beforeComment: '',
            after: '',
            emptyBody: '',
            commentLeft: '',
            commentRight: ''
        };
    };
});
module.exports = exports['default'];

/***/ }),
/* 1046 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var vendor = __webpack_require__(3).vendor;

var Declaration = __webpack_require__(2);

var Resolution = __webpack_require__(1047);

var Transition = __webpack_require__(1049);

var Processor = __webpack_require__(174);

var Supports = __webpack_require__(1050);

var Browsers = __webpack_require__(21);

var Selector = __webpack_require__(53);

var AtRule = __webpack_require__(1053);

var Value = __webpack_require__(12);

var utils = __webpack_require__(10);

Selector.hack(__webpack_require__(1054));
Selector.hack(__webpack_require__(1055));
Declaration.hack(__webpack_require__(1056));
Declaration.hack(__webpack_require__(1057));
Declaration.hack(__webpack_require__(1058));
Declaration.hack(__webpack_require__(1059));
Declaration.hack(__webpack_require__(1060));
Declaration.hack(__webpack_require__(1061));
Declaration.hack(__webpack_require__(1062));
Declaration.hack(__webpack_require__(1063));
Declaration.hack(__webpack_require__(1064));
Declaration.hack(__webpack_require__(1065));
Declaration.hack(__webpack_require__(1066));
Declaration.hack(__webpack_require__(1067));
Declaration.hack(__webpack_require__(1068));
Declaration.hack(__webpack_require__(1069));
Declaration.hack(__webpack_require__(1070));
Declaration.hack(__webpack_require__(1071));
Declaration.hack(__webpack_require__(1072));
Declaration.hack(__webpack_require__(1073));
Declaration.hack(__webpack_require__(1074));
Declaration.hack(__webpack_require__(1075));
Declaration.hack(__webpack_require__(1076));
Declaration.hack(__webpack_require__(1077));
Declaration.hack(__webpack_require__(1078));
Declaration.hack(__webpack_require__(1079));
Declaration.hack(__webpack_require__(1080));
Declaration.hack(__webpack_require__(1081));
Declaration.hack(__webpack_require__(1082));
Declaration.hack(__webpack_require__(1083));
Declaration.hack(__webpack_require__(1084));
Declaration.hack(__webpack_require__(1085));
Declaration.hack(__webpack_require__(1086));
Declaration.hack(__webpack_require__(1087));
Declaration.hack(__webpack_require__(1088));
Declaration.hack(__webpack_require__(1089));
Declaration.hack(__webpack_require__(1090));
Declaration.hack(__webpack_require__(1091));
Declaration.hack(__webpack_require__(1092));
Declaration.hack(__webpack_require__(1093));
Declaration.hack(__webpack_require__(1094));
Declaration.hack(__webpack_require__(1095));
Declaration.hack(__webpack_require__(1096));
Declaration.hack(__webpack_require__(1097));
Declaration.hack(__webpack_require__(1098));
Value.hack(__webpack_require__(1099));
Value.hack(__webpack_require__(1101));
Value.hack(__webpack_require__(1102));
Value.hack(__webpack_require__(1103));
Value.hack(__webpack_require__(1104));
Value.hack(__webpack_require__(1105));
Value.hack(__webpack_require__(1106));
Value.hack(__webpack_require__(1107));
var declsCache = {};

var Prefixes =
/*#__PURE__*/
function () {
  function Prefixes(data, browsers, options) {
    if (options === void 0) {
      options = {};
    }

    this.data = data;
    this.browsers = browsers;
    this.options = options;

    var _this$preprocess = this.preprocess(this.select(this.data));

    this.add = _this$preprocess[0];
    this.remove = _this$preprocess[1];
    this.transition = new Transition(this);
    this.processor = new Processor(this);
  }
  /**
     * Return clone instance to remove all prefixes
     */


  var _proto = Prefixes.prototype;

  _proto.cleaner = function cleaner() {
    if (this.cleanerCache) {
      return this.cleanerCache;
    }

    if (this.browsers.selected.length) {
      var empty = new Browsers(this.browsers.data, []);
      this.cleanerCache = new Prefixes(this.data, empty, this.options);
    } else {
      return this;
    }

    return this.cleanerCache;
  }
  /**
     * Select prefixes from data, which is necessary for selected browsers
     */
  ;

  _proto.select = function select(list) {
    var _this = this;

    var selected = {
      add: {},
      remove: {}
    };

    var _loop = function _loop(name) {
      var data = list[name];
      var add = data.browsers.map(function (i) {
        var params = i.split(' ');
        return {
          browser: params[0] + " " + params[1],
          note: params[2]
        };
      });
      var notes = add.filter(function (i) {
        return i.note;
      }).map(function (i) {
        return _this.browsers.prefix(i.browser) + " " + i.note;
      });
      notes = utils.uniq(notes);
      add = add.filter(function (i) {
        return _this.browsers.isSelected(i.browser);
      }).map(function (i) {
        var prefix = _this.browsers.prefix(i.browser);

        if (i.note) {
          return prefix + " " + i.note;
        } else {
          return prefix;
        }
      });
      add = _this.sort(utils.uniq(add));

      if (_this.options.flexbox === 'no-2009') {
        add = add.filter(function (i) {
          return i.indexOf('2009') === -1;
        });
      }

      var all = data.browsers.map(function (i) {
        return _this.browsers.prefix(i);
      });

      if (data.mistakes) {
        all = all.concat(data.mistakes);
      }

      all = all.concat(notes);
      all = utils.uniq(all);

      if (add.length) {
        selected.add[name] = add;

        if (add.length < all.length) {
          selected.remove[name] = all.filter(function (i) {
            return add.indexOf(i) === -1;
          });
        }
      } else {
        selected.remove[name] = all;
      }
    };

    for (var name in list) {
      _loop(name);
    }

    return selected;
  }
  /**
     * Sort vendor prefixes
     */
  ;

  _proto.sort = function sort(prefixes) {
    return prefixes.sort(function (a, b) {
      var aLength = utils.removeNote(a).length;
      var bLength = utils.removeNote(b).length;

      if (aLength === bLength) {
        return b.length - a.length;
      } else {
        return bLength - aLength;
      }
    });
  }
  /**
     * Cache prefixes data to fast CSS processing
     */
  ;

  _proto.preprocess = function preprocess(selected) {
    var add = {
      'selectors': [],
      '@supports': new Supports(Prefixes, this)
    };

    for (var name in selected.add) {
      var prefixes = selected.add[name];

      if (name === '@keyframes' || name === '@viewport') {
        add[name] = new AtRule(name, prefixes, this);
      } else if (name === '@resolution') {
        add[name] = new Resolution(name, prefixes, this);
      } else if (this.data[name].selector) {
        add.selectors.push(Selector.load(name, prefixes, this));
      } else {
        var props = this.data[name].props;

        if (props) {
          var value = Value.load(name, prefixes, this);

          for (var _iterator = props, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
            var _ref;

            if (_isArray) {
              if (_i >= _iterator.length) break;
              _ref = _iterator[_i++];
            } else {
              _i = _iterator.next();
              if (_i.done) break;
              _ref = _i.value;
            }

            var prop = _ref;

            if (!add[prop]) {
              add[prop] = {
                values: []
              };
            }

            add[prop].values.push(value);
          }
        } else {
          var values = add[name] && add[name].values || [];
          add[name] = Declaration.load(name, prefixes, this);
          add[name].values = values;
        }
      }
    }

    var remove = {
      selectors: []
    };

    for (var _name in selected.remove) {
      var _prefixes = selected.remove[_name];

      if (this.data[_name].selector) {
        var selector = Selector.load(_name, _prefixes);

        for (var _iterator2 = _prefixes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
          var _ref2;

          if (_isArray2) {
            if (_i2 >= _iterator2.length) break;
            _ref2 = _iterator2[_i2++];
          } else {
            _i2 = _iterator2.next();
            if (_i2.done) break;
            _ref2 = _i2.value;
          }

          var prefix = _ref2;
          remove.selectors.push(selector.old(prefix));
        }
      } else if (_name === '@keyframes' || _name === '@viewport') {
        for (var _iterator3 = _prefixes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
          var _ref3;

          if (_isArray3) {
            if (_i3 >= _iterator3.length) break;
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) break;
            _ref3 = _i3.value;
          }

          var _prefix = _ref3;

          var prefixed = "@" + _prefix + _name.slice(1);

          remove[prefixed] = {
            remove: true
          };
        }
      } else if (_name === '@resolution') {
        remove[_name] = new Resolution(_name, _prefixes, this);
      } else {
        var _props = this.data[_name].props;

        if (_props) {
          var _value = Value.load(_name, [], this);

          for (var _iterator4 = _prefixes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
            var _ref4;

            if (_isArray4) {
              if (_i4 >= _iterator4.length) break;
              _ref4 = _iterator4[_i4++];
            } else {
              _i4 = _iterator4.next();
              if (_i4.done) break;
              _ref4 = _i4.value;
            }

            var _prefix2 = _ref4;

            var old = _value.old(_prefix2);

            if (old) {
              for (var _iterator5 = _props, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
                var _ref5;

                if (_isArray5) {
                  if (_i5 >= _iterator5.length) break;
                  _ref5 = _iterator5[_i5++];
                } else {
                  _i5 = _iterator5.next();
                  if (_i5.done) break;
                  _ref5 = _i5.value;
                }

                var _prop = _ref5;

                if (!remove[_prop]) {
                  remove[_prop] = {};
                }

                if (!remove[_prop].values) {
                  remove[_prop].values = [];
                }

                remove[_prop].values.push(old);
              }
            }
          }
        } else {
          for (var _iterator6 = _prefixes, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {
            var _ref6;

            if (_isArray6) {
              if (_i6 >= _iterator6.length) break;
              _ref6 = _iterator6[_i6++];
            } else {
              _i6 = _iterator6.next();
              if (_i6.done) break;
              _ref6 = _i6.value;
            }

            var _prefix3 = _ref6;
            var olds = this.decl(_name).old(_name, _prefix3);

            if (_name === 'align-self') {
              var a = add[_name] && add[_name].prefixes;

              if (a) {
                if (_prefix3 === '-webkit- 2009' && a.indexOf('-webkit-') !== -1) {
                  continue;
                } else if (_prefix3 === '-webkit-' && a.indexOf('-webkit- 2009') !== -1) {
                  continue;
                }
              }
            }

            for (var _iterator7 = olds, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {
              var _ref7;

              if (_isArray7) {
                if (_i7 >= _iterator7.length) break;
                _ref7 = _iterator7[_i7++];
              } else {
                _i7 = _iterator7.next();
                if (_i7.done) break;
                _ref7 = _i7.value;
              }

              var _prefixed = _ref7;

              if (!remove[_prefixed]) {
                remove[_prefixed] = {};
              }

              remove[_prefixed].remove = true;
            }
          }
        }
      }
    }

    return [add, remove];
  }
  /**
     * Declaration loader with caching
     */
  ;

  _proto.decl = function decl(prop) {
    var decl = declsCache[prop];

    if (decl) {
      return decl;
    } else {
      declsCache[prop] = Declaration.load(prop);
      return declsCache[prop];
    }
  }
  /**
     * Return unprefixed version of property
     */
  ;

  _proto.unprefixed = function unprefixed(prop) {
    var value = this.normalize(vendor.unprefixed(prop));

    if (value === 'flex-direction') {
      value = 'flex-flow';
    }

    return value;
  }
  /**
     * Normalize prefix for remover
     */
  ;

  _proto.normalize = function normalize(prop) {
    return this.decl(prop).normalize(prop);
  }
  /**
     * Return prefixed version of property
     */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    prop = vendor.unprefixed(prop);
    return this.decl(prop).prefixed(prop, prefix);
  }
  /**
     * Return values, which must be prefixed in selected property
     */
  ;

  _proto.values = function values(type, prop) {
    var data = this[type];
    var global = data['*'] && data['*'].values;
    var values = data[prop] && data[prop].values;

    if (global && values) {
      return utils.uniq(global.concat(values));
    } else {
      return global || values || [];
    }
  }
  /**
     * Group declaration by unprefixed property to check them
     */
  ;

  _proto.group = function group(decl) {
    var _this2 = this;

    var rule = decl.parent;
    var index = rule.index(decl);
    var length = rule.nodes.length;
    var unprefixed = this.unprefixed(decl.prop);

    var checker = function checker(step, callback) {
      index += step;

      while (index >= 0 && index < length) {
        var other = rule.nodes[index];

        if (other.type === 'decl') {
          if (step === -1 && other.prop === unprefixed) {
            if (!Browsers.withPrefix(other.value)) {
              break;
            }
          }

          if (_this2.unprefixed(other.prop) !== unprefixed) {
            break;
          } else if (callback(other) === true) {
            return true;
          }

          if (step === +1 && other.prop === unprefixed) {
            if (!Browsers.withPrefix(other.value)) {
              break;
            }
          }
        }

        index += step;
      }

      return false;
    };

    return {
      up: function up(callback) {
        return checker(-1, callback);
      },
      down: function down(callback) {
        return checker(+1, callback);
      }
    };
  };

  return Prefixes;
}();

module.exports = Prefixes;

/***/ }),
/* 1047 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

var n2f = __webpack_require__(1048);

var Prefixer = __webpack_require__(29);

var utils = __webpack_require__(10);

var REGEXP = /(min|max)-resolution\s*:\s*\d*\.?\d+(dppx|dpi|x)/gi;
var SPLIT = /(min|max)-resolution(\s*:\s*)(\d*\.?\d+)(dppx|dpi|x)/i;

var Resolution =
/*#__PURE__*/
function (_Prefixer) {
  _inheritsLoose(Resolution, _Prefixer);

  function Resolution() {
    return _Prefixer.apply(this, arguments) || this;
  }

  var _proto = Resolution.prototype;

  /**
     * Return prefixed query name
     */
  _proto.prefixName = function prefixName(prefix, name) {
    if (prefix === '-moz-') {
      return name + '--moz-device-pixel-ratio';
    } else {
      return prefix + name + '-device-pixel-ratio';
    }
  }
  /**
     * Return prefixed query
     */
  ;

  _proto.prefixQuery = function prefixQuery(prefix, name, colon, value, units) {
    if (units === 'dpi') {
      value = Number(value / 96);
    }

    if (prefix === '-o-') {
      value = n2f(value);
    }

    return this.prefixName(prefix, name) + colon + value;
  }
  /**
     * Remove prefixed queries
     */
  ;

  _proto.clean = function clean(rule) {
    var _this = this;

    if (!this.bad) {
      this.bad = [];

      for (var _iterator = this.prefixes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var prefix = _ref;
        this.bad.push(this.prefixName(prefix, 'min'));
        this.bad.push(this.prefixName(prefix, 'max'));
      }
    }

    rule.params = utils.editList(rule.params, function (queries) {
      return queries.filter(function (query) {
        return _this.bad.every(function (i) {
          return query.indexOf(i) === -1;
        });
      });
    });
  }
  /**
     * Add prefixed queries
     */
  ;

  _proto.process = function process(rule) {
    var _this2 = this;

    var parent = this.parentPrefix(rule);
    var prefixes = parent ? [parent] : this.prefixes;
    rule.params = utils.editList(rule.params, function (origin, prefixed) {
      for (var _iterator2 = origin, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var query = _ref2;

        if (query.indexOf('min-resolution') === -1 && query.indexOf('max-resolution') === -1) {
          prefixed.push(query);
          continue;
        }

        var _loop = function _loop() {
          if (_isArray3) {
            if (_i3 >= _iterator3.length) return "break";
            _ref3 = _iterator3[_i3++];
          } else {
            _i3 = _iterator3.next();
            if (_i3.done) return "break";
            _ref3 = _i3.value;
          }

          var prefix = _ref3;
          var processed = query.replace(REGEXP, function (str) {
            var parts = str.match(SPLIT);
            return _this2.prefixQuery(prefix, parts[1], parts[2], parts[3], parts[4]);
          });
          prefixed.push(processed);
        };

        for (var _iterator3 = prefixes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
          var _ref3;

          var _ret = _loop();

          if (_ret === "break") break;
        }

        prefixed.push(query);
      }

      return utils.uniq(prefixed);
    });
  };

  return Resolution;
}(Prefixer);

module.exports = Resolution;

/***/ }),
/* 1048 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var abs = Math.abs
var round = Math.round

function almostEq(a, b) {
  return abs(a - b) <= 9.5367432e-7
}

//最大公约数 Greatest Common Divisor
function GCD(a, b) {
  if (almostEq(b, 0)) return a
  return GCD(b, a % b)
}

function findPrecision(n) {
  var e = 1

  while (!almostEq(round(n * e) / e, n)) {
    e *= 10
  }

  return e
}

function num2fraction(num) {
  if (num === 0 || num === '0') return '0'

  if (typeof num === 'string') {
    num = parseFloat(num)
  }


  var precision = findPrecision(num) //精确度
  var number = num * precision
  var gcd = abs(GCD(number, precision))

  //分子
  var numerator = number / gcd
  //分母
  var denominator = precision / gcd

  //分数
  return round(numerator) + '/' + round(denominator)
}

module.exports = num2fraction



/***/ }),
/* 1049 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var parser = __webpack_require__(4);

var vendor = __webpack_require__(3).vendor;

var list = __webpack_require__(3).list;

var Transition =
/*#__PURE__*/
function () {
  function Transition(prefixes) {
    _defineProperty(this, "props", ['transition', 'transition-property']);

    this.prefixes = prefixes;
  }
  /**
   * Process transition and add prefixes for all necessary properties
   */


  var _proto = Transition.prototype;

  _proto.add = function add(decl, result) {
    var _this = this;

    var prefix, prop;
    var add = this.prefixes.add[decl.prop];
    var declPrefixes = add && add.prefixes || [];
    var params = this.parse(decl.value);
    var names = params.map(function (i) {
      return _this.findProp(i);
    });
    var added = [];

    if (names.some(function (i) {
      return i[0] === '-';
    })) {
      return;
    }

    for (var _iterator = params, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var param = _ref;
      prop = this.findProp(param);
      if (prop[0] === '-') continue;
      var prefixer = this.prefixes.add[prop];
      if (!prefixer || !prefixer.prefixes) continue;

      for (var _iterator3 = prefixer.prefixes, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
        if (_isArray3) {
          if (_i3 >= _iterator3.length) break;
          prefix = _iterator3[_i3++];
        } else {
          _i3 = _iterator3.next();
          if (_i3.done) break;
          prefix = _i3.value;
        }

        var prefixed = this.prefixes.prefixed(prop, prefix);

        if (prefixed !== '-ms-transform' && names.indexOf(prefixed) === -1) {
          if (!this.disabled(prop, prefix)) {
            added.push(this.clone(prop, prefixed, param));
          }
        }
      }
    }

    params = params.concat(added);
    var value = this.stringify(params);
    var webkitClean = this.stringify(this.cleanFromUnprefixed(params, '-webkit-'));

    if (declPrefixes.indexOf('-webkit-') !== -1) {
      this.cloneBefore(decl, "-webkit-" + decl.prop, webkitClean);
    }

    this.cloneBefore(decl, decl.prop, webkitClean);

    if (declPrefixes.indexOf('-o-') !== -1) {
      var operaClean = this.stringify(this.cleanFromUnprefixed(params, '-o-'));
      this.cloneBefore(decl, "-o-" + decl.prop, operaClean);
    }

    for (var _iterator2 = declPrefixes, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        prefix = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        prefix = _i2.value;
      }

      if (prefix !== '-webkit-' && prefix !== '-o-') {
        var prefixValue = this.stringify(this.cleanOtherPrefixes(params, prefix));
        this.cloneBefore(decl, prefix + decl.prop, prefixValue);
      }
    }

    if (value !== decl.value && !this.already(decl, decl.prop, value)) {
      this.checkForWarning(result, decl);
      decl.cloneBefore();
      decl.value = value;
    }
  }
  /**
   * Find property name
   */
  ;

  _proto.findProp = function findProp(param) {
    var prop = param[0].value;

    if (/^\d/.test(prop)) {
      for (var i = 0; i < param.length; i++) {
        var token = param[i];

        if (i !== 0 && token.type === 'word') {
          return token.value;
        }
      }
    }

    return prop;
  }
  /**
   * Does we already have this declaration
   */
  ;

  _proto.already = function already(decl, prop, value) {
    return decl.parent.some(function (i) {
      return i.prop === prop && i.value === value;
    });
  }
  /**
   * Add declaration if it is not exist
   */
  ;

  _proto.cloneBefore = function cloneBefore(decl, prop, value) {
    if (!this.already(decl, prop, value)) {
      decl.cloneBefore({
        prop: prop,
        value: value
      });
    }
  }
  /**
   * Show transition-property warning
   */
  ;

  _proto.checkForWarning = function checkForWarning(result, decl) {
    if (decl.prop !== 'transition-property') {
      return;
    }

    decl.parent.each(function (i) {
      if (i.type !== 'decl') {
        return undefined;
      }

      if (i.prop.indexOf('transition-') !== 0) {
        return undefined;
      }

      if (i.prop === 'transition-property') {
        return undefined;
      }

      if (list.comma(i.value).length > 1) {
        decl.warn(result, 'Replace transition-property to transition, ' + 'because Autoprefixer could not support ' + 'any cases of transition-property ' + 'and other transition-*');
      }

      return false;
    });
  }
  /**
   * Process transition and remove all unnecessary properties
   */
  ;

  _proto.remove = function remove(decl) {
    var _this2 = this;

    var params = this.parse(decl.value);
    params = params.filter(function (i) {
      var prop = _this2.prefixes.remove[_this2.findProp(i)];

      return !prop || !prop.remove;
    });
    var value = this.stringify(params);

    if (decl.value === value) {
      return;
    }

    if (params.length === 0) {
      decl.remove();
      return;
    }

    var double = decl.parent.some(function (i) {
      return i.prop === decl.prop && i.value === value;
    });
    var smaller = decl.parent.some(function (i) {
      return i !== decl && i.prop === decl.prop && i.value.length > value.length;
    });

    if (double || smaller) {
      decl.remove();
      return;
    }

    decl.value = value;
  }
  /**
   * Parse properties list to array
   */
  ;

  _proto.parse = function parse(value) {
    var ast = parser(value);
    var result = [];
    var param = [];

    for (var _iterator4 = ast.nodes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray4) {
        if (_i4 >= _iterator4.length) break;
        _ref2 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done) break;
        _ref2 = _i4.value;
      }

      var node = _ref2;
      param.push(node);

      if (node.type === 'div' && node.value === ',') {
        result.push(param);
        param = [];
      }
    }

    result.push(param);
    return result.filter(function (i) {
      return i.length > 0;
    });
  }
  /**
   * Return properties string from array
   */
  ;

  _proto.stringify = function stringify(params) {
    if (params.length === 0) {
      return '';
    }

    var nodes = [];

    for (var _iterator5 = params, _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
      var _ref3;

      if (_isArray5) {
        if (_i5 >= _iterator5.length) break;
        _ref3 = _iterator5[_i5++];
      } else {
        _i5 = _iterator5.next();
        if (_i5.done) break;
        _ref3 = _i5.value;
      }

      var param = _ref3;

      if (param[param.length - 1].type !== 'div') {
        param.push(this.div(params));
      }

      nodes = nodes.concat(param);
    }

    if (nodes[0].type === 'div') {
      nodes = nodes.slice(1);
    }

    if (nodes[nodes.length - 1].type === 'div') {
      nodes = nodes.slice(0, +-2 + 1 || undefined);
    }

    return parser.stringify({
      nodes: nodes
    });
  }
  /**
   * Return new param array with different name
   */
  ;

  _proto.clone = function clone(origin, name, param) {
    var result = [];
    var changed = false;

    for (var _iterator6 = param, _isArray6 = Array.isArray(_iterator6), _i6 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {
      var _ref4;

      if (_isArray6) {
        if (_i6 >= _iterator6.length) break;
        _ref4 = _iterator6[_i6++];
      } else {
        _i6 = _iterator6.next();
        if (_i6.done) break;
        _ref4 = _i6.value;
      }

      var i = _ref4;

      if (!changed && i.type === 'word' && i.value === origin) {
        result.push({
          type: 'word',
          value: name
        });
        changed = true;
      } else {
        result.push(i);
      }
    }

    return result;
  }
  /**
   * Find or create separator
   */
  ;

  _proto.div = function div(params) {
    for (var _iterator7 = params, _isArray7 = Array.isArray(_iterator7), _i7 = 0, _iterator7 = _isArray7 ? _iterator7 : _iterator7[Symbol.iterator]();;) {
      var _ref5;

      if (_isArray7) {
        if (_i7 >= _iterator7.length) break;
        _ref5 = _iterator7[_i7++];
      } else {
        _i7 = _iterator7.next();
        if (_i7.done) break;
        _ref5 = _i7.value;
      }

      var param = _ref5;

      for (var _iterator8 = param, _isArray8 = Array.isArray(_iterator8), _i8 = 0, _iterator8 = _isArray8 ? _iterator8 : _iterator8[Symbol.iterator]();;) {
        var _ref6;

        if (_isArray8) {
          if (_i8 >= _iterator8.length) break;
          _ref6 = _iterator8[_i8++];
        } else {
          _i8 = _iterator8.next();
          if (_i8.done) break;
          _ref6 = _i8.value;
        }

        var node = _ref6;

        if (node.type === 'div' && node.value === ',') {
          return node;
        }
      }
    }

    return {
      type: 'div',
      value: ',',
      after: ' '
    };
  };

  _proto.cleanOtherPrefixes = function cleanOtherPrefixes(params, prefix) {
    var _this3 = this;

    return params.filter(function (param) {
      var current = vendor.prefix(_this3.findProp(param));
      return current === '' || current === prefix;
    });
  }
  /**
   * Remove all non-webkit prefixes and unprefixed params if we have prefixed
   */
  ;

  _proto.cleanFromUnprefixed = function cleanFromUnprefixed(params, prefix) {
    var _this4 = this;

    var remove = params.map(function (i) {
      return _this4.findProp(i);
    }).filter(function (i) {
      return i.slice(0, prefix.length) === prefix;
    }).map(function (i) {
      return _this4.prefixes.unprefixed(i);
    });
    var result = [];

    for (var _iterator9 = params, _isArray9 = Array.isArray(_iterator9), _i9 = 0, _iterator9 = _isArray9 ? _iterator9 : _iterator9[Symbol.iterator]();;) {
      var _ref7;

      if (_isArray9) {
        if (_i9 >= _iterator9.length) break;
        _ref7 = _iterator9[_i9++];
      } else {
        _i9 = _iterator9.next();
        if (_i9.done) break;
        _ref7 = _i9.value;
      }

      var param = _ref7;
      var prop = this.findProp(param);
      var p = vendor.prefix(prop);

      if (remove.indexOf(prop) === -1 && (p === prefix || p === '')) {
        result.push(param);
      }
    }

    return result;
  }
  /**
   * Check property for disabled by option
   */
  ;

  _proto.disabled = function disabled(prop, prefix) {
    var other = ['order', 'justify-content', 'align-self', 'align-content'];

    if (prop.indexOf('flex') !== -1 || other.indexOf(prop) !== -1) {
      if (this.prefixes.options.flexbox === false) {
        return true;
      }

      if (this.prefixes.options.flexbox === 'no-2009') {
        return prefix.indexOf('2009') !== -1;
      }
    }

    return undefined;
  };

  return Transition;
}();

module.exports = Transition;

/***/ }),
/* 1050 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var postcss = __webpack_require__(3);

var data = __webpack_require__(26).feature(__webpack_require__(94));

var Browsers = __webpack_require__(21);

var brackets = __webpack_require__(1051);

var Value = __webpack_require__(12);

var utils = __webpack_require__(10);

var supported = [];

for (var browser in data.stats) {
  var versions = data.stats[browser];

  for (var version in versions) {
    var support = versions[version];

    if (/y/.test(support)) {
      supported.push(browser + ' ' + version);
    }
  }
}

var Supports =
/*#__PURE__*/
function () {
  function Supports(Prefixes, all) {
    this.Prefixes = Prefixes;
    this.all = all;
  }
  /**
     * Return prefixer only with @supports supported browsers
     */


  var _proto = Supports.prototype;

  _proto.prefixer = function prefixer() {
    if (this.prefixerCache) {
      return this.prefixerCache;
    }

    var filtered = this.all.browsers.selected.filter(function (i) {
      return supported.indexOf(i) !== -1;
    });
    var browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);
    this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);
    return this.prefixerCache;
  }
  /**
     * Parse string into declaration property and value
     */
  ;

  _proto.parse = function parse(str) {
    var parts = str.split(':');
    var prop = parts[0];
    var value = parts[1];
    if (!value) value = '';
    return [prop.trim(), value.trim()];
  }
  /**
     * Create virtual rule to process it by prefixer
     */
  ;

  _proto.virtual = function virtual(str) {
    var _this$parse = this.parse(str),
        prop = _this$parse[0],
        value = _this$parse[1];

    var rule = postcss.parse('a{}').first;
    rule.append({
      prop: prop,
      value: value,
      raws: {
        before: ''
      }
    });
    return rule;
  }
  /**
     * Return array of Declaration with all necessary prefixes
     */
  ;

  _proto.prefixed = function prefixed(str) {
    var rule = this.virtual(str);

    if (this.disabled(rule.first)) {
      return rule.nodes;
    }

    var result = {
      warn: function warn() {
        return null;
      }
    };
    var prefixer = this.prefixer().add[rule.first.prop];
    prefixer && prefixer.process && prefixer.process(rule.first, result);

    for (var _iterator = rule.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var decl = _ref;

      for (var _iterator2 = this.prefixer().values('add', rule.first.prop), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
        var _ref2;

        if (_isArray2) {
          if (_i2 >= _iterator2.length) break;
          _ref2 = _iterator2[_i2++];
        } else {
          _i2 = _iterator2.next();
          if (_i2.done) break;
          _ref2 = _i2.value;
        }

        var value = _ref2;
        value.process(decl);
      }

      Value.save(this.all, decl);
    }

    return rule.nodes;
  }
  /**
     * Return true if brackets node is "not" word
     */
  ;

  _proto.isNot = function isNot(node) {
    return typeof node === 'string' && /not\s*/i.test(node);
  }
  /**
     * Return true if brackets node is "or" word
     */
  ;

  _proto.isOr = function isOr(node) {
    return typeof node === 'string' && /\s*or\s*/i.test(node);
  }
  /**
     * Return true if brackets node is (prop: value)
     */
  ;

  _proto.isProp = function isProp(node) {
    return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';
  }
  /**
     * Return true if prefixed property has no unprefixed
     */
  ;

  _proto.isHack = function isHack(all, unprefixed) {
    var check = new RegExp("(\\(|\\s)" + utils.escapeRegexp(unprefixed) + ":");
    return !check.test(all);
  }
  /**
     * Return true if we need to remove node
     */
  ;

  _proto.toRemove = function toRemove(str, all) {
    var _this$parse2 = this.parse(str),
        prop = _this$parse2[0],
        value = _this$parse2[1];

    var unprefixed = this.all.unprefixed(prop);
    var cleaner = this.all.cleaner();

    if (cleaner.remove[prop] && cleaner.remove[prop].remove && !this.isHack(all, unprefixed)) {
      return true;
    }

    for (var _iterator3 = cleaner.values('remove', unprefixed), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
      var _ref3;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var checker = _ref3;

      if (checker.check(value)) {
        return true;
      }
    }

    return false;
  }
  /**
     * Remove all unnecessary prefixes
     */
  ;

  _proto.remove = function remove(nodes, all) {
    var i = 0;

    while (i < nodes.length) {
      if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {
        if (this.toRemove(nodes[i][0], all)) {
          nodes.splice(i, 2);
          continue;
        }

        i += 2;
        continue;
      }

      if (typeof nodes[i] === 'object') {
        nodes[i] = this.remove(nodes[i], all);
      }

      i += 1;
    }

    return nodes;
  }
  /**
     * Clean brackets with one child
     */
  ;

  _proto.cleanBrackets = function cleanBrackets(nodes) {
    var _this = this;

    return nodes.map(function (i) {
      if (typeof i !== 'object') {
        return i;
      }

      if (i.length === 1 && typeof i[0] === 'object') {
        return _this.cleanBrackets(i[0]);
      }

      return _this.cleanBrackets(i);
    });
  }
  /**
     * Add " or " between properties and convert it to brackets format
     */
  ;

  _proto.convert = function convert(progress) {
    var result = [''];

    for (var _iterator4 = progress, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
      var _ref4;

      if (_isArray4) {
        if (_i4 >= _iterator4.length) break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done) break;
        _ref4 = _i4.value;
      }

      var i = _ref4;
      result.push([i.prop + ": " + i.value]);
      result.push(' or ');
    }

    result[result.length - 1] = '';
    return result;
  }
  /**
     * Compress value functions into a string nodes
     */
  ;

  _proto.normalize = function normalize(nodes) {
    var _this2 = this;

    if (typeof nodes !== 'object') {
      return nodes;
    }

    nodes = nodes.filter(function (i) {
      return i !== '';
    });

    if (typeof nodes[0] === 'string' && nodes[0].indexOf(':') !== -1) {
      return [brackets.stringify(nodes)];
    }

    return nodes.map(function (i) {
      return _this2.normalize(i);
    });
  }
  /**
     * Add prefixes
     */
  ;

  _proto.add = function add(nodes, all) {
    var _this3 = this;

    return nodes.map(function (i) {
      if (_this3.isProp(i)) {
        var prefixed = _this3.prefixed(i[0]);

        if (prefixed.length > 1) {
          return _this3.convert(prefixed);
        }

        return i;
      }

      if (typeof i === 'object') {
        return _this3.add(i, all);
      }

      return i;
    });
  }
  /**
     * Add prefixed declaration
     */
  ;

  _proto.process = function process(rule) {
    var ast = brackets.parse(rule.params);
    ast = this.normalize(ast);
    ast = this.remove(ast, rule.params);
    ast = this.add(ast, rule.params);
    ast = this.cleanBrackets(ast);
    rule.params = brackets.stringify(ast);
  }
  /**
     * Check global options
     */
  ;

  _proto.disabled = function disabled(node) {
    if (!this.all.options.grid) {
      if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {
        return true;
      }

      if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {
        return true;
      }
    }

    if (this.all.options.flexbox === false) {
      if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {
        return true;
      }

      var other = ['order', 'justify-content', 'align-items', 'align-content'];

      if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {
        return true;
      }
    }

    return false;
  };

  return Supports;
}();

module.exports = Supports;

/***/ }),
/* 1051 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function last(array) {
  return array[array.length - 1];
}

var brackets = {
  /**
     * Parse string to nodes tree
     */
  parse: function parse(str) {
    var current = [''];
    var stack = [current];

    for (var i = 0; i < str.length; i++) {
      var sym = str[i];

      if (sym === '(') {
        current = [''];
        last(stack).push(current);
        stack.push(current);
        continue;
      }

      if (sym === ')') {
        stack.pop();
        current = last(stack);
        current.push('');
        continue;
      }

      current[current.length - 1] += sym;
    }

    return stack[0];
  },

  /**
     * Generate output string by nodes tree
     */
  stringify: function stringify(ast) {
    var result = '';

    for (var _iterator = ast, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var i = _ref;

      if (typeof i === 'object') {
        result += "(" + brackets.stringify(i) + ")";
        continue;
      }

      result += i;
    }

    return result;
  }
};
module.exports = brackets;

/***/ }),
/* 1052 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var OldSelector =
/*#__PURE__*/
function () {
  function OldSelector(selector, prefix) {
    this.prefix = prefix;
    this.prefixed = selector.prefixed(this.prefix);
    this.regexp = selector.regexp(this.prefix);
    this.prefixeds = selector.possible().map(function (x) {
      return [selector.prefixed(x), selector.regexp(x)];
    });
    this.unprefixed = selector.name;
    this.nameRegexp = selector.regexp();
  }
  /**
     * Is rule a hack without unprefixed version bottom
     */


  var _proto = OldSelector.prototype;

  _proto.isHack = function isHack(rule) {
    var index = rule.parent.index(rule) + 1;
    var rules = rule.parent.nodes;

    while (index < rules.length) {
      var before = rules[index].selector;

      if (!before) {
        return true;
      }

      if (before.indexOf(this.unprefixed) !== -1 && before.match(this.nameRegexp)) {
        return false;
      }

      var some = false;

      for (var _iterator = this.prefixeds, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
        var _ref;

        if (_isArray) {
          if (_i >= _iterator.length) break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done) break;
          _ref = _i.value;
        }

        var _ref2 = _ref,
            string = _ref2[0],
            regexp = _ref2[1];

        if (before.indexOf(string) !== -1 && before.match(regexp)) {
          some = true;
          break;
        }
      }

      if (!some) {
        return true;
      }

      index += 1;
    }

    return true;
  }
  /**
     * Does rule contain an unnecessary prefixed selector
     */
  ;

  _proto.check = function check(rule) {
    if (rule.selector.indexOf(this.prefixed) === -1) {
      return false;
    }

    if (!rule.selector.match(this.regexp)) {
      return false;
    }

    if (this.isHack(rule)) {
      return false;
    }

    return true;
  };

  return OldSelector;
}();

module.exports = OldSelector;

/***/ }),
/* 1053 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

var Prefixer = __webpack_require__(29);

var AtRule =
/*#__PURE__*/
function (_Prefixer) {
  _inheritsLoose(AtRule, _Prefixer);

  function AtRule() {
    return _Prefixer.apply(this, arguments) || this;
  }

  var _proto = AtRule.prototype;

  /**
     * Clone and add prefixes for at-rule
     */
  _proto.add = function add(rule, prefix) {
    var prefixed = prefix + rule.name;
    var already = rule.parent.some(function (i) {
      return i.name === prefixed && i.params === rule.params;
    });

    if (already) {
      return undefined;
    }

    var cloned = this.clone(rule, {
      name: prefixed
    });
    return rule.parent.insertBefore(rule, cloned);
  }
  /**
     * Clone node with prefixes
     */
  ;

  _proto.process = function process(node) {
    var parent = this.parentPrefix(node);

    for (var _iterator = this.prefixes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var prefix = _ref;

      if (!parent || parent === prefix) {
        this.add(node, prefix);
      }
    }
  };

  return AtRule;
}(Prefixer);

module.exports = AtRule;

/***/ }),
/* 1054 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Selector = __webpack_require__(53);

var Fullscreen =
/*#__PURE__*/
function (_Selector) {
  _inheritsLoose(Fullscreen, _Selector);

  function Fullscreen() {
    return _Selector.apply(this, arguments) || this;
  }

  var _proto = Fullscreen.prototype;

  /**
   * Return different selectors depend on prefix
   */
  _proto.prefixed = function prefixed(prefix) {
    if (prefix === '-webkit-') {
      return ':-webkit-full-screen';
    }

    if (prefix === '-moz-') {
      return ':-moz-full-screen';
    }

    return ":" + prefix + "fullscreen";
  };

  return Fullscreen;
}(Selector);

_defineProperty(Fullscreen, "names", [':fullscreen']);

module.exports = Fullscreen;

/***/ }),
/* 1055 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Selector = __webpack_require__(53);

var Placeholder =
/*#__PURE__*/
function (_Selector) {
  _inheritsLoose(Placeholder, _Selector);

  function Placeholder() {
    return _Selector.apply(this, arguments) || this;
  }

  var _proto = Placeholder.prototype;

  /**
   * Add old mozilla to possible prefixes
   */
  _proto.possible = function possible() {
    return _Selector.prototype.possible.call(this).concat(['-moz- old', '-ms- old']);
  }
  /**
   * Return different selectors depend on prefix
   */
  ;

  _proto.prefixed = function prefixed(prefix) {
    if (prefix === '-webkit-') {
      return '::-webkit-input-placeholder';
    }

    if (prefix === '-ms-') {
      return '::-ms-input-placeholder';
    }

    if (prefix === '-ms- old') {
      return ':-ms-input-placeholder';
    }

    if (prefix === '-moz- old') {
      return ':-moz-placeholder';
    }

    return "::" + prefix + "placeholder";
  };

  return Placeholder;
}(Selector);

_defineProperty(Placeholder, "names", ['::placeholder']);

module.exports = Placeholder;

/***/ }),
/* 1056 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var list = __webpack_require__(3).list;

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var Flex =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(Flex, _Declaration);

  function Flex() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Flex.prototype;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-flex';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'flex';
  }
  /**
   * Spec 2009 supports only first argument
   * Spec 2012 disallows unitless basis
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2009) {
      decl.value = list.space(decl.value)[0];
      decl.value = Flex.oldValues[decl.value] || decl.value;
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    if (spec === 2012) {
      var components = list.space(decl.value);

      if (components.length === 3 && components[2] === '0') {
        decl.value = components.slice(0, 2).concat('0px').join(' ');
      }
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return Flex;
}(Declaration);

_defineProperty(Flex, "names", ['flex', 'box-flex']);

_defineProperty(Flex, "oldValues", {
  auto: '1',
  none: '0'
  /**
   * Change property name for 2009 spec
   */

});

module.exports = Flex;

/***/ }),
/* 1057 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var Order =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(Order, _Declaration);

  function Order() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Order.prototype;

  /**
   * Change property name for 2009 and 2012 specs
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-ordinal-group';
    }

    if (spec === 2012) {
      return prefix + 'flex-order';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'order';
  }
  /**
   * Fix value for 2009 spec
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2009 && /\d/.test(decl.value)) {
      decl.value = (parseInt(decl.value) + 1).toString();
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return Order;
}(Declaration);

_defineProperty(Order, "names", ['order', 'flex-order', 'box-ordinal-group']);

module.exports = Order;

/***/ }),
/* 1058 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var Filter =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(Filter, _Declaration);

  function Filter() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Filter.prototype;

  /**
   * Check is it Internet Explorer filter
   */
  _proto.check = function check(decl) {
    var v = decl.value;
    return v.toLowerCase().indexOf('alpha(') === -1 && v.indexOf('DXImageTransform.Microsoft') === -1 && v.indexOf('data:image/svg+xml') === -1;
  };

  return Filter;
}(Declaration);

_defineProperty(Filter, "names", ['filter']);

module.exports = Filter;

/***/ }),
/* 1059 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var GridEnd =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridEnd, _Declaration);

  function GridEnd() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridEnd.prototype;

  /**
   * Change repeating syntax for IE
   */
  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var clonedDecl = this.clone(decl);
    var startProp = decl.prop.replace(/end$/, 'start');
    var spanProp = prefix + decl.prop.replace(/end$/, 'span');

    if (decl.parent.some(function (i) {
      return i.prop === spanProp;
    })) {
      return undefined;
    }

    clonedDecl.prop = spanProp;

    if (decl.value.includes('span')) {
      clonedDecl.value = decl.value.replace(/span\s/i, '');
    } else {
      var startDecl;
      decl.parent.walkDecls(startProp, function (d) {
        startDecl = d;
      });

      if (startDecl) {
        var value = Number(decl.value) - Number(startDecl.value) + '';
        clonedDecl.value = value;
      } else {
        decl.warn(result, "Can not prefix " + decl.prop + " (" + startProp + " is not found)");
      }
    }

    decl.cloneBefore(clonedDecl);
    return undefined;
  };

  return GridEnd;
}(Declaration);

_defineProperty(GridEnd, "names", ['grid-row-end', 'grid-column-end']);

module.exports = GridEnd;

/***/ }),
/* 1060 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var Animation =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(Animation, _Declaration);

  function Animation() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Animation.prototype;

  /**
   * Don’t add prefixes for modern values.
   */
  _proto.check = function check(decl) {
    return !decl.value.split(/\s+/).some(function (i) {
      var lower = i.toLowerCase();
      return lower === 'reverse' || lower === 'alternate-reverse';
    });
  };

  return Animation;
}(Declaration);

_defineProperty(Animation, "names", ['animation', 'animation-direction']);

module.exports = Animation;

/***/ }),
/* 1061 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var FlexFlow =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(FlexFlow, _Declaration);

  function FlexFlow() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexFlow.prototype;

  /**
   * Use two properties for 2009 spec
   */
  _proto.insert = function insert(decl, prefix, prefixes) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec !== 2009) {
      return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    }

    var values = decl.value.split(/\s+/).filter(function (i) {
      return i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse';
    });

    if (values.length === 0) {
      return undefined;
    }

    var already = decl.parent.some(function (i) {
      return i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction';
    });

    if (already) {
      return undefined;
    }

    var value = values[0];
    var orient = value.indexOf('row') !== -1 ? 'horizontal' : 'vertical';
    var dir = value.indexOf('reverse') !== -1 ? 'reverse' : 'normal';
    var cloned = this.clone(decl);
    cloned.prop = prefix + 'box-orient';
    cloned.value = orient;

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    decl.parent.insertBefore(decl, cloned);
    cloned = this.clone(decl);
    cloned.prop = prefix + 'box-direction';
    cloned.value = dir;

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    return decl.parent.insertBefore(decl, cloned);
  };

  return FlexFlow;
}(Declaration);

_defineProperty(FlexFlow, "names", ['flex-flow', 'box-direction', 'box-orient']);

module.exports = FlexFlow;

/***/ }),
/* 1062 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var Flex =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(Flex, _Declaration);

  function Flex() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = Flex.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return 'flex';
  }
  /**
   * Return flex property for 2009 and 2012 specs
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-flex';
    }

    if (spec === 2012) {
      return prefix + 'flex-positive';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  };

  return Flex;
}(Declaration);

_defineProperty(Flex, "names", ['flex-grow', 'flex-positive']);

module.exports = Flex;

/***/ }),
/* 1063 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var FlexWrap =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(FlexWrap, _Declaration);

  function FlexWrap() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexWrap.prototype;

  /**
   * Don't add prefix for 2009 spec
   */
  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec !== 2009) {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return FlexWrap;
}(Declaration);

_defineProperty(FlexWrap, "names", ['flex-wrap']);

module.exports = FlexWrap;

/***/ }),
/* 1064 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var utils = __webpack_require__(16);

var GridArea =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridArea, _Declaration);

  function GridArea() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridArea.prototype;

  /**
   * Translate grid-area to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var values = utils.parse(decl);

    var _utils$translate = utils.translate(values, 0, 2),
        rowStart = _utils$translate[0],
        rowSpan = _utils$translate[1];

    var _utils$translate2 = utils.translate(values, 1, 3),
        columnStart = _utils$translate2[0],
        columnSpan = _utils$translate2[1];

    [['grid-row', rowStart], ['grid-row-span', rowSpan], ['grid-column', columnStart], ['grid-column-span', columnSpan]].forEach(function (_ref) {
      var prop = _ref[0],
          value = _ref[1];
      utils.insertDecl(decl, prop, value);
    });
    utils.warnTemplateSelectorNotFound(decl, result);
    utils.warnIfGridRowColumnExists(decl, result);
    return undefined;
  };

  return GridArea;
}(Declaration);

_defineProperty(GridArea, "names", ['grid-area']);

module.exports = GridArea;

/***/ }),
/* 1065 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var utils = __webpack_require__(16);

var PlaceSelf =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(PlaceSelf, _Declaration);

  function PlaceSelf() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = PlaceSelf.prototype;

  /**
   * Translate place-self to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes); // prevent doubling of prefixes

    if (decl.parent.some(function (i) {
      return i.prop === '-ms-grid-row-align';
    })) {
      return undefined;
    }

    var _utils$parse = utils.parse(decl),
        _utils$parse$ = _utils$parse[0],
        first = _utils$parse$[0],
        second = _utils$parse$[1];

    if (second) {
      utils.insertDecl(decl, 'grid-row-align', first);
      utils.insertDecl(decl, 'grid-column-align', second);
    } else {
      utils.insertDecl(decl, 'grid-row-align', first);
      utils.insertDecl(decl, 'grid-column-align', first);
    }

    return undefined;
  };

  return PlaceSelf;
}(Declaration);

_defineProperty(PlaceSelf, "names", ['place-self']);

module.exports = PlaceSelf;

/***/ }),
/* 1066 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var GridStart =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridStart, _Declaration);

  function GridStart() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridStart.prototype;

  /**
   * Do not add prefix for unsupported value in IE
   */
  _proto.check = function check(decl) {
    var value = decl.value;
    return value.indexOf('/') === -1 || value.indexOf('span') !== -1;
  }
  /**
   * Return a final spec property
   */
  ;

  _proto.normalize = function normalize(prop) {
    return prop.replace('-start', '');
  }
  /**
   * Change property name for IE
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var result = _Declaration.prototype.prefixed.call(this, prop, prefix);

    if (prefix === '-ms-') {
      result = result.replace('-start', '');
    }

    return result;
  };

  return GridStart;
}(Declaration);

_defineProperty(GridStart, "names", ['grid-row-start', 'grid-column-start']);

module.exports = GridStart;

/***/ }),
/* 1067 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var AlignSelf =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(AlignSelf, _Declaration);

  function AlignSelf() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = AlignSelf.prototype;

  _proto.check = function check(decl) {
    return decl.parent && decl.parent.every(function (i) {
      return !/^grid-/.test(i.prop);
    });
  }
  /**
   * Change property name for 2012 specs
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2012) {
      return prefix + 'flex-item-align';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'align-self';
  }
  /**
   * Change value for 2012 spec and ignore prefix for 2009
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2012) {
      decl.value = AlignSelf.oldValues[decl.value] || decl.value;
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    if (spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return AlignSelf;
}(Declaration);

_defineProperty(AlignSelf, "names", ['align-self', 'flex-item-align']);

_defineProperty(AlignSelf, "oldValues", {
  'flex-end': 'end',
  'flex-start': 'start'
});

module.exports = AlignSelf;

/***/ }),
/* 1068 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var utils = __webpack_require__(10);

var Appearance =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(Appearance, _Declaration);

  function Appearance(name, prefixes, all) {
    var _this;

    _this = _Declaration.call(this, name, prefixes, all) || this;

    if (_this.prefixes) {
      _this.prefixes = utils.uniq(_this.prefixes.map(function (i) {
        if (i === '-ms-') {
          return '-webkit-';
        }

        return i;
      }));
    }

    return _this;
  }

  return Appearance;
}(Declaration);

_defineProperty(Appearance, "names", ['appearance']);

module.exports = Appearance;

/***/ }),
/* 1069 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var FlexBasis =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(FlexBasis, _Declaration);

  function FlexBasis() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexBasis.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return 'flex-basis';
  }
  /**
   * Return flex property for 2012 spec
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2012) {
      return prefix + 'flex-preferred-size';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Ignore 2009 spec and use flex property for 2012
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec;

    var _flexSpec2 = flexSpec(prefix);

    spec = _flexSpec2[0];
    prefix = _flexSpec2[1];

    if (spec === 2012 || spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return FlexBasis;
}(Declaration);

_defineProperty(FlexBasis, "names", ['flex-basis', 'flex-preferred-size']);

module.exports = FlexBasis;

/***/ }),
/* 1070 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var MaskBorder =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(MaskBorder, _Declaration);

  function MaskBorder() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = MaskBorder.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return this.name.replace('box-image', 'border');
  }
  /**
   * Return flex property for 2012 spec
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var result = _Declaration.prototype.prefixed.call(this, prop, prefix);

    if (prefix === '-webkit-') {
      result = result.replace('border', 'box-image');
    }

    return result;
  };

  return MaskBorder;
}(Declaration);

_defineProperty(MaskBorder, "names", ['mask-border', 'mask-border-source', 'mask-border-slice', 'mask-border-width', 'mask-border-outset', 'mask-border-repeat', 'mask-box-image', 'mask-box-image-source', 'mask-box-image-slice', 'mask-box-image-width', 'mask-box-image-outset', 'mask-box-image-repeat']);

module.exports = MaskBorder;

/***/ }),
/* 1071 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var MaskComposite =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(MaskComposite, _Declaration);

  function MaskComposite() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = MaskComposite.prototype;

  /**
   * Prefix mask-composite for webkit
   */
  _proto.insert = function insert(decl, prefix, prefixes) {
    var isCompositeProp = decl.prop === 'mask-composite';
    var compositeValues;

    if (isCompositeProp) {
      compositeValues = decl.value.split(',');
    } else {
      compositeValues = decl.value.match(MaskComposite.regexp) || [];
    }

    compositeValues = compositeValues.map(function (el) {
      return el.trim();
    }).filter(function (el) {
      return el;
    });
    var hasCompositeValues = compositeValues.length;
    var compositeDecl;

    if (hasCompositeValues) {
      compositeDecl = this.clone(decl);
      compositeDecl.value = compositeValues.map(function (value) {
        return MaskComposite.oldValues[value] || value;
      }).join(', ');

      if (compositeValues.includes('intersect')) {
        compositeDecl.value += ', xor';
      }

      compositeDecl.prop = prefix + 'mask-composite';
    }

    if (isCompositeProp) {
      if (!hasCompositeValues) {
        return undefined;
      }

      if (this.needCascade(decl)) {
        compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);
      }

      return decl.parent.insertBefore(decl, compositeDecl);
    }

    var cloned = this.clone(decl);
    cloned.prop = prefix + cloned.prop;

    if (hasCompositeValues) {
      cloned.value = cloned.value.replace(MaskComposite.regexp, '');
    }

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    decl.parent.insertBefore(decl, cloned);

    if (!hasCompositeValues) {
      return decl;
    }

    if (this.needCascade(decl)) {
      compositeDecl.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    return decl.parent.insertBefore(decl, compositeDecl);
  };

  return MaskComposite;
}(Declaration);

_defineProperty(MaskComposite, "names", ['mask', 'mask-composite']);

_defineProperty(MaskComposite, "oldValues", {
  add: 'source-over',
  substract: 'source-out',
  intersect: 'source-in',
  exclude: 'xor'
});

_defineProperty(MaskComposite, "regexp", new RegExp("\\s+(" + Object.keys(MaskComposite.oldValues).join('|') + ")\\b(?!\\))\\s*(?=[,])", 'ig'));

module.exports = MaskComposite;

/***/ }),
/* 1072 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var AlignItems =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(AlignItems, _Declaration);

  function AlignItems() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = AlignItems.prototype;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-align';
    }

    if (spec === 2012) {
      return prefix + 'flex-align';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'align-items';
  }
  /**
   * Change value for 2009 and 2012 specs
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2009 || spec === 2012) {
      decl.value = AlignItems.oldValues[decl.value] || decl.value;
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return AlignItems;
}(Declaration);

_defineProperty(AlignItems, "names", ['align-items', 'flex-align', 'box-align']);

_defineProperty(AlignItems, "oldValues", {
  'flex-end': 'end',
  'flex-start': 'start'
  /**
   * Change property name for 2009 and 2012 specs
   */

});

module.exports = AlignItems;

/***/ }),
/* 1073 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var FlexShrink =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(FlexShrink, _Declaration);

  function FlexShrink() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexShrink.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return 'flex-shrink';
  }
  /**
   * Return flex property for 2012 spec
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2012) {
      return prefix + 'flex-negative';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Ignore 2009 spec and use flex property for 2012
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec;

    var _flexSpec2 = flexSpec(prefix);

    spec = _flexSpec2[0];
    prefix = _flexSpec2[1];

    if (spec === 2012 || spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return FlexShrink;
}(Declaration);

_defineProperty(FlexShrink, "names", ['flex-shrink', 'flex-negative']);

module.exports = FlexShrink;

/***/ }),
/* 1074 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var BreakProps =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(BreakProps, _Declaration);

  function BreakProps() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BreakProps.prototype;

  /**
   * Change name for -webkit- and -moz- prefix
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + "column-" + prop;
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize(prop) {
    if (prop.indexOf('inside') !== -1) {
      return 'break-inside';
    }

    if (prop.indexOf('before') !== -1) {
      return 'break-before';
    }

    return 'break-after';
  }
  /**
   * Change prefixed value for avoid-column and avoid-page
   */
  ;

  _proto.set = function set(decl, prefix) {
    if (decl.prop === 'break-inside' && decl.value === 'avoid-column' || decl.value === 'avoid-page') {
      decl.value = 'avoid';
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  }
  /**
   * Don’t prefix some values
   */
  ;

  _proto.insert = function insert(decl, prefix, prefixes) {
    if (decl.prop !== 'break-inside') {
      return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    }

    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {
      return undefined;
    }

    return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
  };

  return BreakProps;
}(Declaration);

_defineProperty(BreakProps, "names", ['break-inside', 'page-break-inside', 'column-break-inside', 'break-before', 'page-break-before', 'column-break-before', 'break-after', 'page-break-after', 'column-break-after']);

module.exports = BreakProps;

/***/ }),
/* 1075 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var ColorAdjust =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(ColorAdjust, _Declaration);

  function ColorAdjust() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = ColorAdjust.prototype;

  /**
   * Change property name for WebKit-based browsers
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + 'print-color-adjust';
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'color-adjust';
  };

  return ColorAdjust;
}(Declaration);

_defineProperty(ColorAdjust, "names", ['color-adjust', 'print-color-adjust']);

module.exports = ColorAdjust;

/***/ }),
/* 1076 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var WritingMode =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(WritingMode, _Declaration);

  function WritingMode() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = WritingMode.prototype;

  _proto.insert = function insert(decl, prefix, prefixes) {
    if (prefix === '-ms-') {
      var cloned = this.set(this.clone(decl), prefix);

      if (this.needCascade(decl)) {
        cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
      }

      var direction = 'ltr';
      decl.parent.nodes.forEach(function (i) {
        if (i.prop === 'direction') {
          if (i.value === 'rtl' || i.value === 'ltr') direction = i.value;
        }
      });
      cloned.value = WritingMode.msValues[direction][decl.value] || decl.value;
      return decl.parent.insertBefore(decl, cloned);
    }

    return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
  };

  return WritingMode;
}(Declaration);

_defineProperty(WritingMode, "names", ['writing-mode']);

_defineProperty(WritingMode, "msValues", {
  ltr: {
    'horizontal-tb': 'lr-tb',
    'vertical-rl': 'tb-rl',
    'vertical-lr': 'tb-lr'
  },
  rtl: {
    'horizontal-tb': 'rl-tb',
    'vertical-rl': 'bt-rl',
    'vertical-lr': 'bt-lr'
  }
});

module.exports = WritingMode;

/***/ }),
/* 1077 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var BorderImage =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(BorderImage, _Declaration);

  function BorderImage() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BorderImage.prototype;

  /**
   * Remove fill parameter for prefixed declarations
   */
  _proto.set = function set(decl, prefix) {
    decl.value = decl.value.replace(/\s+fill(\s)/, '$1');
    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return BorderImage;
}(Declaration);

_defineProperty(BorderImage, "names", ['border-image']);

module.exports = BorderImage;

/***/ }),
/* 1078 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var AlignContent =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(AlignContent, _Declaration);

  function AlignContent() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = AlignContent.prototype;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2012) {
      return prefix + 'flex-line-pack';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'align-content';
  }
  /**
   * Change value for 2012 spec and ignore prefix for 2009
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2012) {
      decl.value = AlignContent.oldValues[decl.value] || decl.value;
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    if (spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return AlignContent;
}(Declaration);

_defineProperty(AlignContent, "names", ['align-content', 'flex-line-pack']);

_defineProperty(AlignContent, "oldValues", {
  'flex-end': 'end',
  'flex-start': 'start',
  'space-between': 'justify',
  'space-around': 'distribute'
  /**
   * Change property name for 2012 spec
   */

});

module.exports = AlignContent;

/***/ }),
/* 1079 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var BorderRadius =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(BorderRadius, _Declaration);

  function BorderRadius() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BorderRadius.prototype;

  /**
   * Change syntax, when add Mozilla prefix
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    if (prefix === '-moz-') {
      return prefix + (BorderRadius.toMozilla[prop] || prop);
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return unprefixed version of property
   */
  ;

  _proto.normalize = function normalize(prop) {
    return BorderRadius.toNormal[prop] || prop;
  };

  return BorderRadius;
}(Declaration);

_defineProperty(BorderRadius, "names", ['border-radius']);

_defineProperty(BorderRadius, "toMozilla", {});

_defineProperty(BorderRadius, "toNormal", {});

for (var _i = 0, _arr = ['top', 'bottom']; _i < _arr.length; _i++) {
  var ver = _arr[_i];

  for (var _i2 = 0, _arr2 = ['left', 'right']; _i2 < _arr2.length; _i2++) {
    var hor = _arr2[_i2];
    var normal = "border-" + ver + "-" + hor + "-radius";
    var mozilla = "border-radius-" + ver + hor;
    BorderRadius.names.push(normal);
    BorderRadius.names.push(mozilla);
    BorderRadius.toMozilla[normal] = mozilla;
    BorderRadius.toNormal[mozilla] = normal;
  }
}

module.exports = BorderRadius;

/***/ }),
/* 1080 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var BlockLogical =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(BlockLogical, _Declaration);

  function BlockLogical() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BlockLogical.prototype;

  /**
   * Use old syntax for -moz- and -webkit-
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    if (prop.indexOf('-start') !== -1) {
      return prefix + prop.replace('-block-start', '-before');
    }

    return prefix + prop.replace('-block-end', '-after');
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize(prop) {
    if (prop.indexOf('-before') !== -1) {
      return prop.replace('-before', '-block-start');
    }

    return prop.replace('-after', '-block-end');
  };

  return BlockLogical;
}(Declaration);

_defineProperty(BlockLogical, "names", ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after']);

module.exports = BlockLogical;

/***/ }),
/* 1081 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var _require = __webpack_require__(16),
    parseTemplate = _require.parseTemplate,
    warnMissedAreas = _require.warnMissedAreas,
    getGridGap = _require.getGridGap,
    warnGridGap = _require.warnGridGap,
    inheritGridGap = _require.inheritGridGap;

var GridTemplate =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridTemplate, _Declaration);

  function GridTemplate() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridTemplate.prototype;

  /**
   * Translate grid-template to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);

    if (decl.parent.some(function (i) {
      return i.prop === '-ms-grid-rows';
    })) {
      return undefined;
    }

    var gap = getGridGap(decl);
    /**
     * we must insert inherited gap values in some cases:
     * if we are inside media query && if we have no grid-gap value
    */

    var inheritedGap = inheritGridGap(decl, gap);

    var _parseTemplate = parseTemplate({
      decl: decl,
      gap: inheritedGap || gap
    }),
        rows = _parseTemplate.rows,
        columns = _parseTemplate.columns,
        areas = _parseTemplate.areas;

    var hasAreas = Object.keys(areas).length > 0;
    var hasRows = Boolean(rows);
    var hasColumns = Boolean(columns);
    warnGridGap({
      gap: gap,
      hasColumns: hasColumns,
      decl: decl,
      result: result
    });
    warnMissedAreas(areas, decl, result);

    if (hasRows && hasColumns || hasAreas) {
      decl.cloneBefore({
        prop: '-ms-grid-rows',
        value: rows,
        raws: {}
      });
    }

    if (hasColumns) {
      decl.cloneBefore({
        prop: '-ms-grid-columns',
        value: columns,
        raws: {}
      });
    }

    return decl;
  };

  return GridTemplate;
}(Declaration);

_defineProperty(GridTemplate, "names", ['grid-template']);

module.exports = GridTemplate;

/***/ }),
/* 1082 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var InlineLogical =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(InlineLogical, _Declaration);

  function InlineLogical() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = InlineLogical.prototype;

  /**
   * Use old syntax for -moz- and -webkit-
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + prop.replace('-inline', '');
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize(prop) {
    return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2');
  };

  return InlineLogical;
}(Declaration);

_defineProperty(InlineLogical, "names", ['border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end', 'border-start', 'border-end', 'margin-start', 'margin-end', 'padding-start', 'padding-end']);

module.exports = InlineLogical;

/***/ }),
/* 1083 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var GridRowAlign =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridRowAlign, _Declaration);

  function GridRowAlign() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridRowAlign.prototype;

  /**
   * Do not prefix flexbox values
   */
  _proto.check = function check(decl) {
    return decl.value.indexOf('flex-') === -1 && decl.value !== 'baseline';
  }
  /**
   * Change property name for IE
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + 'grid-row-align';
  }
  /**
   * Change IE property back
   */
  ;

  _proto.normalize = function normalize() {
    return 'align-self';
  };

  return GridRowAlign;
}(Declaration);

_defineProperty(GridRowAlign, "names", ['grid-row-align']);

module.exports = GridRowAlign;

/***/ }),
/* 1084 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var TransformDecl =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(TransformDecl, _Declaration);

  function TransformDecl() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = TransformDecl.prototype;

  /**
   * Recursively check all parents for @keyframes
   */
  _proto.keyframeParents = function keyframeParents(decl) {
    var parent = decl.parent;

    while (parent) {
      if (parent.type === 'atrule' && parent.name === 'keyframes') {
        return true;
      }

      var _parent = parent;
      parent = _parent.parent;
    }

    return false;
  }
  /**
   * Is transform contain 3D commands
   */
  ;

  _proto.contain3d = function contain3d(decl) {
    if (decl.prop === 'transform-origin') {
      return false;
    }

    for (var _iterator = TransformDecl.functions3d, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var func = _ref;

      if (decl.value.indexOf(func + "(") !== -1) {
        return true;
      }
    }

    return false;
  }
  /**
   * Replace rotateZ to rotate for IE 9
   */
  ;

  _proto.set = function set(decl, prefix) {
    decl = _Declaration.prototype.set.call(this, decl, prefix);

    if (prefix === '-ms-') {
      decl.value = decl.value.replace(/rotateZ/gi, 'rotate');
    }

    return decl;
  }
  /**
   * Don't add prefix for IE in keyframes
   */
  ;

  _proto.insert = function insert(decl, prefix, prefixes) {
    if (prefix === '-ms-') {
      if (!this.contain3d(decl) && !this.keyframeParents(decl)) {
        return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
      }
    } else if (prefix === '-o-') {
      if (!this.contain3d(decl)) {
        return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
      }
    } else {
      return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    }

    return undefined;
  };

  return TransformDecl;
}(Declaration);

_defineProperty(TransformDecl, "names", ['transform', 'transform-origin']);

_defineProperty(TransformDecl, "functions3d", ['matrix3d', 'translate3d', 'translateZ', 'scale3d', 'scaleZ', 'rotate3d', 'rotateX', 'rotateY', 'perspective']);

module.exports = TransformDecl;

/***/ }),
/* 1085 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var FlexDirection =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(FlexDirection, _Declaration);

  function FlexDirection() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = FlexDirection.prototype;

  /**
   * Return property name by final spec
   */
  _proto.normalize = function normalize() {
    return 'flex-direction';
  }
  /**
   * Use two properties for 2009 spec
   */
  ;

  _proto.insert = function insert(decl, prefix, prefixes) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec !== 2009) {
      return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    }

    var already = decl.parent.some(function (i) {
      return i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction';
    });

    if (already) {
      return undefined;
    }

    var v = decl.value;
    var orient, dir;

    if (v === 'inherit' || v === 'initial' || v === 'unset') {
      orient = v;
      dir = v;
    } else {
      orient = v.indexOf('row') !== -1 ? 'horizontal' : 'vertical';
      dir = v.indexOf('reverse') !== -1 ? 'reverse' : 'normal';
    }

    var cloned = this.clone(decl);
    cloned.prop = prefix + 'box-orient';
    cloned.value = orient;

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    decl.parent.insertBefore(decl, cloned);
    cloned = this.clone(decl);
    cloned.prop = prefix + 'box-direction';
    cloned.value = dir;

    if (this.needCascade(decl)) {
      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);
    }

    return decl.parent.insertBefore(decl, cloned);
  }
  /**
   * Clean two properties for 2009 spec
   */
  ;

  _proto.old = function old(prop, prefix) {
    var spec;

    var _flexSpec2 = flexSpec(prefix);

    spec = _flexSpec2[0];
    prefix = _flexSpec2[1];

    if (spec === 2009) {
      return [prefix + 'box-orient', prefix + 'box-direction'];
    } else {
      return _Declaration.prototype.old.call(this, prop, prefix);
    }
  };

  return FlexDirection;
}(Declaration);

_defineProperty(FlexDirection, "names", ['flex-direction', 'box-direction', 'box-orient']);

module.exports = FlexDirection;

/***/ }),
/* 1086 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var ImageRendering =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(ImageRendering, _Declaration);

  function ImageRendering() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = ImageRendering.prototype;

  /**
   * Add hack only for crisp-edges
   */
  _proto.check = function check(decl) {
    return decl.value === 'pixelated';
  }
  /**
   * Change property name for IE
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    if (prefix === '-ms-') {
      return '-ms-interpolation-mode';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Change property and value for IE
   */
  ;

  _proto.set = function set(decl, prefix) {
    if (prefix !== '-ms-') return _Declaration.prototype.set.call(this, decl, prefix);
    decl.prop = '-ms-interpolation-mode';
    decl.value = 'nearest-neighbor';
    return decl;
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'image-rendering';
  }
  /**
   * Warn on old value
   */
  ;

  _proto.process = function process(node, result) {
    return _Declaration.prototype.process.call(this, node, result);
  };

  return ImageRendering;
}(Declaration);

_defineProperty(ImageRendering, "names", ['image-rendering', 'interpolation-mode']);

module.exports = ImageRendering;

/***/ }),
/* 1087 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var utils = __webpack_require__(10);

var BackdropFilter =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(BackdropFilter, _Declaration);

  function BackdropFilter(name, prefixes, all) {
    var _this;

    _this = _Declaration.call(this, name, prefixes, all) || this;

    if (_this.prefixes) {
      _this.prefixes = utils.uniq(_this.prefixes.map(function (i) {
        return i === '-ms-' ? '-webkit-' : i;
      }));
    }

    return _this;
  }

  return BackdropFilter;
}(Declaration);

_defineProperty(BackdropFilter, "names", ['backdrop-filter']);

module.exports = BackdropFilter;

/***/ }),
/* 1088 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var utils = __webpack_require__(10);

var BackgroundClip =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(BackgroundClip, _Declaration);

  function BackgroundClip(name, prefixes, all) {
    var _this;

    _this = _Declaration.call(this, name, prefixes, all) || this;

    if (_this.prefixes) {
      _this.prefixes = utils.uniq(_this.prefixes.map(function (i) {
        return i === '-ms-' ? '-webkit-' : i;
      }));
    }

    return _this;
  }

  var _proto = BackgroundClip.prototype;

  _proto.check = function check(decl) {
    return decl.value.toLowerCase() === 'text';
  };

  return BackgroundClip;
}(Declaration);

_defineProperty(BackgroundClip, "names", ['background-clip']);

module.exports = BackgroundClip;

/***/ }),
/* 1089 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var BASIC = ['none', 'underline', 'overline', 'line-through', 'blink', 'inherit', 'initial', 'unset'];

var TextDecoration =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(TextDecoration, _Declaration);

  function TextDecoration() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = TextDecoration.prototype;

  /**
   * Do not add prefixes for basic values.
   */
  _proto.check = function check(decl) {
    return decl.value.split(/\s+/).some(function (i) {
      return BASIC.indexOf(i) === -1;
    });
  };

  return TextDecoration;
}(Declaration);

_defineProperty(TextDecoration, "names", ['text-decoration']);

module.exports = TextDecoration;

/***/ }),
/* 1090 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var Declaration = __webpack_require__(2);

var JustifyContent =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(JustifyContent, _Declaration);

  function JustifyContent() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = JustifyContent.prototype;

  _proto.prefixed = function prefixed(prop, prefix) {
    var spec;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      return prefix + 'box-pack';
    }

    if (spec === 2012) {
      return prefix + 'flex-pack';
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Return property name by final spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'justify-content';
  }
  /**
   * Change value for 2009 and 2012 specs
   */
  ;

  _proto.set = function set(decl, prefix) {
    var spec = flexSpec(prefix)[0];

    if (spec === 2009 || spec === 2012) {
      var value = JustifyContent.oldValues[decl.value] || decl.value;
      decl.value = value;

      if (spec !== 2009 || value !== 'distribute') {
        return _Declaration.prototype.set.call(this, decl, prefix);
      }
    } else if (spec === 'final') {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }

    return undefined;
  };

  return JustifyContent;
}(Declaration);

_defineProperty(JustifyContent, "names", ['justify-content', 'flex-pack', 'box-pack']);

_defineProperty(JustifyContent, "oldValues", {
  'flex-end': 'end',
  'flex-start': 'start',
  'space-between': 'justify',
  'space-around': 'distribute'
  /**
   * Change property name for 2009 and 2012 specs
   */

});

module.exports = JustifyContent;

/***/ }),
/* 1091 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var BackgroundSize =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(BackgroundSize, _Declaration);

  function BackgroundSize() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = BackgroundSize.prototype;

  /**
   * Duplication parameter for -webkit- browsers
   */
  _proto.set = function set(decl, prefix) {
    var value = decl.value.toLowerCase();

    if (prefix === '-webkit-' && value.indexOf(' ') === -1 && value !== 'contain' && value !== 'cover') {
      decl.value = decl.value + ' ' + decl.value;
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return BackgroundSize;
}(Declaration);

_defineProperty(BackgroundSize, "names", ['background-size']);

module.exports = BackgroundSize;

/***/ }),
/* 1092 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var utils = __webpack_require__(16);

var GridRowColumn =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridRowColumn, _Declaration);

  function GridRowColumn() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridRowColumn.prototype;

  /**
   * Translate grid-row / grid-column to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var values = utils.parse(decl);

    var _utils$translate = utils.translate(values, 0, 1),
        start = _utils$translate[0],
        span = _utils$translate[1];

    var hasStartValueSpan = values[0] && values[0].includes('span');

    if (hasStartValueSpan) {
      span = values[0].join('').replace(/\D/g, '');
    }

    [[decl.prop, start], [decl.prop + "-span", span]].forEach(function (_ref) {
      var prop = _ref[0],
          value = _ref[1];
      utils.insertDecl(decl, prop, value);
    });
    return undefined;
  };

  return GridRowColumn;
}(Declaration);

_defineProperty(GridRowColumn, "names", ['grid-row', 'grid-column']);

module.exports = GridRowColumn;

/***/ }),
/* 1093 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var _require = __webpack_require__(16),
    prefixTrackProp = _require.prefixTrackProp,
    prefixTrackValue = _require.prefixTrackValue,
    autoplaceGridItems = _require.autoplaceGridItems,
    getGridGap = _require.getGridGap,
    inheritGridGap = _require.inheritGridGap;

var Processor = __webpack_require__(174);

var GridRowsColumns =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridRowsColumns, _Declaration);

  function GridRowsColumns() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridRowsColumns.prototype;

  /**
   * Change property name for IE
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    if (prefix === '-ms-') {
      return prefixTrackProp({
        prop: prop,
        prefix: prefix
      });
    }

    return _Declaration.prototype.prefixed.call(this, prop, prefix);
  }
  /**
   * Change IE property back
   */
  ;

  _proto.normalize = function normalize(prop) {
    return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1');
  };

  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var parent = decl.parent,
        prop = decl.prop,
        value = decl.value;
    var isRowProp = prop.includes('rows');
    var isColumnProp = prop.includes('columns');
    var hasGridTemplate = parent.some(function (i) {
      return i.prop === 'grid-template' || i.prop === 'grid-template-areas';
    });
    /**
     * Not to prefix rows declaration if grid-template(-areas) is present
     */

    if (hasGridTemplate && isRowProp) {
      return false;
    }

    var processor = new Processor({});
    var status = processor.gridStatus(parent, result);
    var gap = getGridGap(decl);
    gap = inheritGridGap(decl, gap) || gap;
    var gapValue = isRowProp ? gap.row : gap.column;

    if ((status === 'no-autoplace' || status === true) && !hasGridTemplate) {
      gapValue = null;
    }

    var prefixValue = prefixTrackValue({
      value: value,
      gap: gapValue
    });
    /**
     * Insert prefixes
     */

    decl.cloneBefore({
      prop: prefixTrackProp({
        prop: prop,
        prefix: prefix
      }),
      value: prefixValue
    });
    var autoflow = parent.nodes.find(function (i) {
      return i.prop === 'grid-auto-flow';
    });
    var autoflowValue = 'row';

    if (autoflow && !processor.disabled(autoflow, result)) {
      autoflowValue = autoflow.value.trim();
    }

    if (status === 'autoplace') {
      /**
       * Show warning if grid-template-rows decl is not found
       */
      var rowDecl = parent.nodes.find(function (i) {
        return i.prop === 'grid-template-rows';
      });

      if (!rowDecl && hasGridTemplate) {
        return undefined;
      } else if (!rowDecl && !hasGridTemplate) {
        decl.warn(result, "Autoplacement does not work without grid-template-rows property");
        return undefined;
      }
      /**
       * Show warning if grid-template-columns decl is not found
       */


      var columnDecl = parent.nodes.find(function (i) {
        return i.prop === 'grid-template-columns';
      });

      if (!columnDecl && !hasGridTemplate) {
        decl.warn(result, "Autoplacement does not work without grid-template-columns property");
      }
      /**
       * Autoplace grid items
       */


      if (isColumnProp && !hasGridTemplate) {
        autoplaceGridItems(decl, result, gap, autoflowValue);
      }
    }

    return undefined;
  };

  return GridRowsColumns;
}(Declaration);

_defineProperty(GridRowsColumns, "names", ['grid-template-rows', 'grid-template-columns', 'grid-rows', 'grid-columns']);

module.exports = GridRowsColumns;

/***/ }),
/* 1094 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var GridColumnAlign =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridColumnAlign, _Declaration);

  function GridColumnAlign() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridColumnAlign.prototype;

  /**
   * Do not prefix flexbox values
   */
  _proto.check = function check(decl) {
    return decl.value.indexOf('flex-') === -1 && decl.value !== 'baseline';
  }
  /**
   * Change property name for IE
   */
  ;

  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + 'grid-column-align';
  }
  /**
   * Change IE property back
   */
  ;

  _proto.normalize = function normalize() {
    return 'justify-self';
  };

  return GridColumnAlign;
}(Declaration);

_defineProperty(GridColumnAlign, "names", ['grid-column-align']);

module.exports = GridColumnAlign;

/***/ }),
/* 1095 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var OverscrollBehavior =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(OverscrollBehavior, _Declaration);

  function OverscrollBehavior() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = OverscrollBehavior.prototype;

  /**
   * Change property name for IE
   */
  _proto.prefixed = function prefixed(prop, prefix) {
    return prefix + 'scroll-chaining';
  }
  /**
   * Return property name by spec
   */
  ;

  _proto.normalize = function normalize() {
    return 'overscroll-behavior';
  }
  /**
   * Change value for IE
   */
  ;

  _proto.set = function set(decl, prefix) {
    if (decl.value === 'auto') {
      decl.value = 'chained';
    } else if (decl.value === 'none' || decl.value === 'contain') {
      decl.value = 'none';
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return OverscrollBehavior;
}(Declaration);

_defineProperty(OverscrollBehavior, "names", ['overscroll-behavior', 'scroll-chaining']);

module.exports = OverscrollBehavior;

/***/ }),
/* 1096 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var _require = __webpack_require__(16),
    parseGridAreas = _require.parseGridAreas,
    warnMissedAreas = _require.warnMissedAreas,
    prefixTrackProp = _require.prefixTrackProp,
    prefixTrackValue = _require.prefixTrackValue,
    getGridGap = _require.getGridGap,
    warnGridGap = _require.warnGridGap,
    inheritGridGap = _require.inheritGridGap;

function getGridRows(tpl) {
  return tpl.trim().slice(1, -1).split(/['"]\s*['"]?/g);
}

var GridTemplateAreas =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(GridTemplateAreas, _Declaration);

  function GridTemplateAreas() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = GridTemplateAreas.prototype;

  /**
   * Translate grid-template-areas to separate -ms- prefixed properties
   */
  _proto.insert = function insert(decl, prefix, prefixes, result) {
    if (prefix !== '-ms-') return _Declaration.prototype.insert.call(this, decl, prefix, prefixes);
    var hasColumns = false;
    var hasRows = false;
    var parent = decl.parent;
    var gap = getGridGap(decl);
    gap = inheritGridGap(decl, gap) || gap; // remove already prefixed rows
    // to prevent doubling prefixes

    parent.walkDecls(/-ms-grid-rows/, function (i) {
      return i.remove();
    }); // add empty tracks to rows

    parent.walkDecls(/grid-template-(rows|columns)/, function (trackDecl) {
      if (trackDecl.prop === 'grid-template-rows') {
        hasRows = true;
        var prop = trackDecl.prop,
            value = trackDecl.value;
        trackDecl.cloneBefore({
          prop: prefixTrackProp({
            prop: prop,
            prefix: prefix
          }),
          value: prefixTrackValue({
            value: value,
            gap: gap.row
          })
        });
      } else {
        hasColumns = true;
      }
    });
    var gridRows = getGridRows(decl.value);

    if (hasColumns && !hasRows && gap.row && gridRows.length > 1) {
      decl.cloneBefore({
        prop: '-ms-grid-rows',
        value: prefixTrackValue({
          value: "repeat(" + gridRows.length + ", auto)",
          gap: gap.row
        }),
        raws: {}
      });
    } // warnings


    warnGridGap({
      gap: gap,
      hasColumns: hasColumns,
      decl: decl,
      result: result
    });
    var areas = parseGridAreas({
      rows: gridRows,
      gap: gap
    });
    warnMissedAreas(areas, decl, result);
    return decl;
  };

  return GridTemplateAreas;
}(Declaration);

_defineProperty(GridTemplateAreas, "names", ['grid-template-areas']);

module.exports = GridTemplateAreas;

/***/ }),
/* 1097 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var TextEmphasisPosition =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(TextEmphasisPosition, _Declaration);

  function TextEmphasisPosition() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = TextEmphasisPosition.prototype;

  _proto.set = function set(decl, prefix) {
    if (prefix === '-webkit-') {
      decl.value = decl.value.replace(/\s*(right|left)\s*/i, '');
    }

    return _Declaration.prototype.set.call(this, decl, prefix);
  };

  return TextEmphasisPosition;
}(Declaration);

_defineProperty(TextEmphasisPosition, "names", ['text-emphasis-position']);

module.exports = TextEmphasisPosition;

/***/ }),
/* 1098 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Declaration = __webpack_require__(2);

var TextDecorationSkipInk =
/*#__PURE__*/
function (_Declaration) {
  _inheritsLoose(TextDecorationSkipInk, _Declaration);

  function TextDecorationSkipInk() {
    return _Declaration.apply(this, arguments) || this;
  }

  var _proto = TextDecorationSkipInk.prototype;

  /**
   * Change prefix for ink value
   */
  _proto.set = function set(decl, prefix) {
    if (decl.prop === 'text-decoration-skip-ink' && decl.value === 'auto') {
      decl.prop = prefix + 'text-decoration-skip';
      decl.value = 'ink';
      return decl;
    } else {
      return _Declaration.prototype.set.call(this, decl, prefix);
    }
  };

  return TextDecorationSkipInk;
}(Declaration);

_defineProperty(TextDecorationSkipInk, "names", ['text-decoration-skip-ink', 'text-decoration-skip']);

module.exports = TextDecorationSkipInk;

/***/ }),
/* 1099 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var parser = __webpack_require__(4);

var range = __webpack_require__(1100);

var OldValue = __webpack_require__(30);

var Value = __webpack_require__(12);

var utils = __webpack_require__(10);

var IS_DIRECTION = /top|left|right|bottom/gi;

var Gradient =
/*#__PURE__*/
function (_Value) {
  _inheritsLoose(Gradient, _Value);

  function Gradient() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Value.call.apply(_Value, [this].concat(args)) || this;

    _defineProperty(_assertThisInitialized(_this), "directions", {
      top: 'bottom',
      left: 'right',
      bottom: 'top',
      right: 'left' // Direction to replace

    });

    _defineProperty(_assertThisInitialized(_this), "oldDirections", {
      'top': 'left bottom, left top',
      'left': 'right top, left top',
      'bottom': 'left top, left bottom',
      'right': 'left top, right top',
      'top right': 'left bottom, right top',
      'top left': 'right bottom, left top',
      'right top': 'left bottom, right top',
      'right bottom': 'left top, right bottom',
      'bottom right': 'left top, right bottom',
      'bottom left': 'right top, left bottom',
      'left top': 'right bottom, left top',
      'left bottom': 'right top, left bottom'
      /**
       * Change degrees for webkit prefix
       */

    });

    return _this;
  }

  var _proto = Gradient.prototype;

  _proto.replace = function replace(string, prefix) {
    var ast = parser(string);

    for (var _iterator = ast.nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
      var _ref;

      if (_isArray) {
        if (_i >= _iterator.length) break;
        _ref = _iterator[_i++];
      } else {
        _i = _iterator.next();
        if (_i.done) break;
        _ref = _i.value;
      }

      var node = _ref;

      if (node.type === 'function' && node.value === this.name) {
        node.nodes = this.newDirection(node.nodes);
        node.nodes = this.normalize(node.nodes);

        if (prefix === '-webkit- old') {
          var changes = this.oldWebkit(node);

          if (!changes) {
            return false;
          }
        } else {
          node.nodes = this.convertDirection(node.nodes);
          node.value = prefix + node.value;
        }
      }
    }

    return ast.toString();
  }
  /**
   * Replace first token
   */
  ;

  _proto.replaceFirst = function replaceFirst(params) {
    for (var _len2 = arguments.length, words = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      words[_key2 - 1] = arguments[_key2];
    }

    var prefix = words.map(function (i) {
      if (i === ' ') {
        return {
          type: 'space',
          value: i
        };
      }

      return {
        type: 'word',
        value: i
      };
    });
    return prefix.concat(params.slice(1));
  }
  /**
   * Convert angle unit to deg
   */
  ;

  _proto.normalizeUnit = function normalizeUnit(str, full) {
    var num = parseFloat(str);
    var deg = num / full * 360;
    return deg + "deg";
  }
  /**
   * Normalize angle
   */
  ;

  _proto.normalize = function normalize(nodes) {
    if (!nodes[0]) return nodes;

    if (/-?\d+(.\d+)?grad/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 400);
    } else if (/-?\d+(.\d+)?rad/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);
    } else if (/-?\d+(.\d+)?turn/.test(nodes[0].value)) {
      nodes[0].value = this.normalizeUnit(nodes[0].value, 1);
    } else if (nodes[0].value.indexOf('deg') !== -1) {
      var num = parseFloat(nodes[0].value);
      num = range.wrap(0, 360, num);
      nodes[0].value = num + "deg";
    }

    if (nodes[0].value === '0deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'top');
    } else if (nodes[0].value === '90deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'right');
    } else if (nodes[0].value === '180deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom');
    } else if (nodes[0].value === '270deg') {
      nodes = this.replaceFirst(nodes, 'to', ' ', 'left');
    }

    return nodes;
  }
  /**
   * Replace old direction to new
   */
  ;

  _proto.newDirection = function newDirection(params) {
    if (params[0].value === 'to') {
      return params;
    }

    IS_DIRECTION.lastIndex = 0; // reset search index of global regexp

    if (!IS_DIRECTION.test(params[0].value)) {
      return params;
    }

    params.unshift({
      type: 'word',
      value: 'to'
    }, {
      type: 'space',
      value: ' '
    });

    for (var i = 2; i < params.length; i++) {
      if (params[i].type === 'div') {
        break;
      }

      if (params[i].type === 'word') {
        params[i].value = this.revertDirection(params[i].value);
      }
    }

    return params;
  }
  /**
   * Look for at word
   */
  ;

  _proto.isRadial = function isRadial(params) {
    var state = 'before';

    for (var _iterator2 = params, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
      var _ref2;

      if (_isArray2) {
        if (_i2 >= _iterator2.length) break;
        _ref2 = _iterator2[_i2++];
      } else {
        _i2 = _iterator2.next();
        if (_i2.done) break;
        _ref2 = _i2.value;
      }

      var param = _ref2;

      if (state === 'before' && param.type === 'space') {
        state = 'at';
      } else if (state === 'at' && param.value === 'at') {
        state = 'after';
      } else if (state === 'after' && param.type === 'space') {
        return true;
      } else if (param.type === 'div') {
        break;
      } else {
        state = 'before';
      }
    }

    return false;
  }
  /**
   * Change new direction to old
   */
  ;

  _proto.convertDirection = function convertDirection(params) {
    if (params.length > 0) {
      if (params[0].value === 'to') {
        this.fixDirection(params);
      } else if (params[0].value.indexOf('deg') !== -1) {
        this.fixAngle(params);
      } else if (this.isRadial(params)) {
        this.fixRadial(params);
      }
    }

    return params;
  }
  /**
   * Replace `to top left` to `bottom right`
   */
  ;

  _proto.fixDirection = function fixDirection(params) {
    params.splice(0, 2);

    for (var _iterator3 = params, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
      var _ref3;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var param = _ref3;

      if (param.type === 'div') {
        break;
      }

      if (param.type === 'word') {
        param.value = this.revertDirection(param.value);
      }
    }
  }
  /**
   * Add 90 degrees
   */
  ;

  _proto.fixAngle = function fixAngle(params) {
    var first = params[0].value;
    first = parseFloat(first);
    first = Math.abs(450 - first) % 360;
    first = this.roundFloat(first, 3);
    params[0].value = first + "deg";
  }
  /**
   * Fix radial direction syntax
   */
  ;

  _proto.fixRadial = function fixRadial(params) {
    var first = [];
    var second = [];
    var a, b, c, i, next;

    for (i = 0; i < params.length - 2; i++) {
      a = params[i];
      b = params[i + 1];
      c = params[i + 2];

      if (a.type === 'space' && b.value === 'at' && c.type === 'space') {
        next = i + 3;
        break;
      } else {
        first.push(a);
      }
    }

    var div;

    for (i = next; i < params.length; i++) {
      if (params[i].type === 'div') {
        div = params[i];
        break;
      } else {
        second.push(params[i]);
      }
    }

    params.splice.apply(params, [0, i].concat(second, [div], first));
  };

  _proto.revertDirection = function revertDirection(word) {
    return this.directions[word.toLowerCase()] || word;
  }
  /**
   * Round float and save digits under dot
   */
  ;

  _proto.roundFloat = function roundFloat(float, digits) {
    return parseFloat(float.toFixed(digits));
  }
  /**
   * Convert to old webkit syntax
   */
  ;

  _proto.oldWebkit = function oldWebkit(node) {
    var nodes = node.nodes;
    var string = parser.stringify(node.nodes);

    if (this.name !== 'linear-gradient') {
      return false;
    }

    if (nodes[0] && nodes[0].value.indexOf('deg') !== -1) {
      return false;
    }

    if (string.indexOf('px') !== -1 || string.indexOf('-corner') !== -1 || string.indexOf('-side') !== -1) {
      return false;
    }

    var params = [[]];

    for (var _iterator4 = nodes, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
      var _ref4;

      if (_isArray4) {
        if (_i4 >= _iterator4.length) break;
        _ref4 = _iterator4[_i4++];
      } else {
        _i4 = _iterator4.next();
        if (_i4.done) break;
        _ref4 = _i4.value;
      }

      var i = _ref4;
      params[params.length - 1].push(i);

      if (i.type === 'div' && i.value === ',') {
        params.push([]);
      }
    }

    this.oldDirection(params);
    this.colorStops(params);
    node.nodes = [];

    for (var _i5 = 0, _params = params; _i5 < _params.length; _i5++) {
      var param = _params[_i5];
      node.nodes = node.nodes.concat(param);
    }

    node.nodes.unshift({
      type: 'word',
      value: 'linear'
    }, this.cloneDiv(node.nodes));
    node.value = '-webkit-gradient';
    return true;
  }
  /**
   * Change direction syntax to old webkit
   */
  ;

  _proto.oldDirection = function oldDirection(params) {
    var div = this.cloneDiv(params[0]);

    if (params[0][0].value !== 'to') {
      return params.unshift([{
        type: 'word',
        value: this.oldDirections.bottom
      }, div]);
    } else {
      var words = [];

      for (var _iterator5 = params[0].slice(2), _isArray5 = Array.isArray(_iterator5), _i6 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
        var _ref5;

        if (_isArray5) {
          if (_i6 >= _iterator5.length) break;
          _ref5 = _iterator5[_i6++];
        } else {
          _i6 = _iterator5.next();
          if (_i6.done) break;
          _ref5 = _i6.value;
        }

        var node = _ref5;

        if (node.type === 'word') {
          words.push(node.value.toLowerCase());
        }
      }

      words = words.join(' ');
      var old = this.oldDirections[words] || words;
      params[0] = [{
        type: 'word',
        value: old
      }, div];
      return params[0];
    }
  }
  /**
   * Get div token from exists parameters
   */
  ;

  _proto.cloneDiv = function cloneDiv(params) {
    for (var _iterator6 = params, _isArray6 = Array.isArray(_iterator6), _i7 = 0, _iterator6 = _isArray6 ? _iterator6 : _iterator6[Symbol.iterator]();;) {
      var _ref6;

      if (_isArray6) {
        if (_i7 >= _iterator6.length) break;
        _ref6 = _iterator6[_i7++];
      } else {
        _i7 = _iterator6.next();
        if (_i7.done) break;
        _ref6 = _i7.value;
      }

      var i = _ref6;

      if (i.type === 'div' && i.value === ',') {
        return i;
      }
    }

    return {
      type: 'div',
      value: ',',
      after: ' '
    };
  }
  /**
   * Change colors syntax to old webkit
   */
  ;

  _proto.colorStops = function colorStops(params) {
    var result = [];

    for (var i = 0; i < params.length; i++) {
      var pos = void 0;
      var param = params[i];
      var item = void 0;

      if (i === 0) {
        continue;
      }

      var color = parser.stringify(param[0]);

      if (param[1] && param[1].type === 'word') {
        pos = param[1].value;
      } else if (param[2] && param[2].type === 'word') {
        pos = param[2].value;
      }

      var stop = void 0;

      if (i === 1 && (!pos || pos === '0%')) {
        stop = "from(" + color + ")";
      } else if (i === params.length - 1 && (!pos || pos === '100%')) {
        stop = "to(" + color + ")";
      } else if (pos) {
        stop = "color-stop(" + pos + ", " + color + ")";
      } else {
        stop = "color-stop(" + color + ")";
      }

      var div = param[param.length - 1];
      params[i] = [{
        type: 'word',
        value: stop
      }];

      if (div.type === 'div' && div.value === ',') {
        item = params[i].push(div);
      }

      result.push(item);
    }

    return result;
  }
  /**
   * Remove old WebKit gradient too
   */
  ;

  _proto.old = function old(prefix) {
    if (prefix === '-webkit-') {
      var type = this.name === 'linear-gradient' ? 'linear' : 'radial';
      var string = '-gradient';
      var regexp = utils.regexp("-webkit-(" + type + "-gradient|gradient\\(\\s*" + type + ")", false);
      return new OldValue(this.name, prefix + this.name, string, regexp);
    } else {
      return _Value.prototype.old.call(this, prefix);
    }
  }
  /**
   * Do not add non-webkit prefixes for list-style and object
   */
  ;

  _proto.add = function add(decl, prefix) {
    var p = decl.prop;

    if (p.indexOf('mask') !== -1) {
      if (prefix === '-webkit-' || prefix === '-webkit- old') {
        return _Value.prototype.add.call(this, decl, prefix);
      }
    } else if (p === 'list-style' || p === 'list-style-image' || p === 'content') {
      if (prefix === '-webkit-' || prefix === '-webkit- old') {
        return _Value.prototype.add.call(this, decl, prefix);
      }
    } else {
      return _Value.prototype.add.call(this, decl, prefix);
    }

    return undefined;
  };

  return Gradient;
}(Value);

_defineProperty(Gradient, "names", ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient']);

module.exports = Gradient;

/***/ }),
/* 1100 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = {
  wrap: wrapRange,
  limit: limitRange,
  validate: validateRange,
  test: testRange,
  curry: curry,
  name: name
};

function wrapRange(min, max, value) {
  var maxLessMin = max - min;
  return ((value - min) % maxLessMin + maxLessMin) % maxLessMin + min;
}

function limitRange(min, max, value) {
  return Math.max(min, Math.min(max, value));
}

function validateRange(min, max, value, minExclusive, maxExclusive) {
  if (!testRange(min, max, value, minExclusive, maxExclusive)) {
    throw new Error(value + ' is outside of range [' + min + ',' + max + ')');
  }
  return value;
}

function testRange(min, max, value, minExclusive, maxExclusive) {
  return !(
       value < min ||
       value > max ||
       (maxExclusive && (value === max)) ||
       (minExclusive && (value === min))
  );
}

function name(min, max, minExcl, maxExcl) {
  return (minExcl ? '(' : '[') + min + ',' + max + (maxExcl ? ')' : ']');
}

function curry(min, max, minExclusive, maxExclusive) {
  var boundNameFn = name.bind(null, min, max, minExclusive, maxExclusive);
  return {
    wrap: wrapRange.bind(null, min, max),
    limit: limitRange.bind(null, min, max),
    validate: function(value) {
      return validateRange(min, max, value, minExclusive, maxExclusive);
    },
    test: function(value) {
      return testRange(min, max, value, minExclusive, maxExclusive);
    },
    toString: boundNameFn,
    name: boundNameFn
  };
}


/***/ }),
/* 1101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var OldValue = __webpack_require__(30);

var Value = __webpack_require__(12);

function _regexp(name) {
  return new RegExp("(^|[\\s,(])(" + name + "($|[\\s),]))", 'gi');
}

var Intrinsic =
/*#__PURE__*/
function (_Value) {
  _inheritsLoose(Intrinsic, _Value);

  function Intrinsic() {
    return _Value.apply(this, arguments) || this;
  }

  var _proto = Intrinsic.prototype;

  _proto.regexp = function regexp() {
    if (!this.regexpCache) this.regexpCache = _regexp(this.name);
    return this.regexpCache;
  };

  _proto.isStretch = function isStretch() {
    return this.name === 'stretch' || this.name === 'fill' || this.name === 'fill-available';
  };

  _proto.replace = function replace(string, prefix) {
    if (prefix === '-moz-' && this.isStretch()) {
      return string.replace(this.regexp(), '$1-moz-available$3');
    }

    if (prefix === '-webkit-' && this.isStretch()) {
      return string.replace(this.regexp(), '$1-webkit-fill-available$3');
    }

    return _Value.prototype.replace.call(this, string, prefix);
  };

  _proto.old = function old(prefix) {
    var prefixed = prefix + this.name;

    if (this.isStretch()) {
      if (prefix === '-moz-') {
        prefixed = '-moz-available';
      } else if (prefix === '-webkit-') {
        prefixed = '-webkit-fill-available';
      }
    }

    return new OldValue(this.name, prefixed, prefixed, _regexp(prefixed));
  };

  _proto.add = function add(decl, prefix) {
    if (decl.prop.indexOf('grid') !== -1 && prefix !== '-webkit-') {
      return undefined;
    }

    return _Value.prototype.add.call(this, decl, prefix);
  };

  return Intrinsic;
}(Value);

_defineProperty(Intrinsic, "names", ['max-content', 'min-content', 'fit-content', 'fill', 'fill-available', 'stretch']);

module.exports = Intrinsic;

/***/ }),
/* 1102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var OldValue = __webpack_require__(30);

var Value = __webpack_require__(12);

var Pixelated =
/*#__PURE__*/
function (_Value) {
  _inheritsLoose(Pixelated, _Value);

  function Pixelated() {
    return _Value.apply(this, arguments) || this;
  }

  var _proto = Pixelated.prototype;

  /**
   * Use non-standard name for WebKit and Firefox
   */
  _proto.replace = function replace(string, prefix) {
    if (prefix === '-webkit-') {
      return string.replace(this.regexp(), '$1-webkit-optimize-contrast');
    }

    if (prefix === '-moz-') {
      return string.replace(this.regexp(), '$1-moz-crisp-edges');
    }

    return _Value.prototype.replace.call(this, string, prefix);
  }
  /**
   * Different name for WebKit and Firefox
   */
  ;

  _proto.old = function old(prefix) {
    if (prefix === '-webkit-') {
      return new OldValue(this.name, '-webkit-optimize-contrast');
    }

    if (prefix === '-moz-') {
      return new OldValue(this.name, '-moz-crisp-edges');
    }

    return _Value.prototype.old.call(this, prefix);
  };

  return Pixelated;
}(Value);

_defineProperty(Pixelated, "names", ['pixelated']);

module.exports = Pixelated;

/***/ }),
/* 1103 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Value = __webpack_require__(12);

var ImageSet =
/*#__PURE__*/
function (_Value) {
  _inheritsLoose(ImageSet, _Value);

  function ImageSet() {
    return _Value.apply(this, arguments) || this;
  }

  var _proto = ImageSet.prototype;

  /**
   * Use non-standard name for WebKit and Firefox
   */
  _proto.replace = function replace(string, prefix) {
    var fixed = _Value.prototype.replace.call(this, string, prefix);

    if (prefix === '-webkit-') {
      fixed = fixed.replace(/("[^"]+"|'[^']+')(\s+\d+\w)/gi, 'url($1)$2');
    }

    return fixed;
  };

  return ImageSet;
}(Value);

_defineProperty(ImageSet, "names", ['image-set']);

module.exports = ImageSet;

/***/ }),
/* 1104 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var list = __webpack_require__(3).list;

var Value = __webpack_require__(12);

var CrossFade =
/*#__PURE__*/
function (_Value) {
  _inheritsLoose(CrossFade, _Value);

  function CrossFade() {
    return _Value.apply(this, arguments) || this;
  }

  var _proto = CrossFade.prototype;

  _proto.replace = function replace(string, prefix) {
    var _this = this;

    return list.space(string).map(function (value) {
      if (value.slice(0, +_this.name.length + 1) !== _this.name + '(') {
        return value;
      }

      var close = value.lastIndexOf(')');
      var after = value.slice(close + 1);
      var args = value.slice(_this.name.length + 1, close);

      if (prefix === '-webkit-') {
        var match = args.match(/\d*.?\d+%?/);

        if (match) {
          args = args.slice(match[0].length).trim();
          args += ", " + match[0];
        } else {
          args += ', 0.5';
        }
      }

      return prefix + _this.name + '(' + args + ')' + after;
    }).join(' ');
  };

  return CrossFade;
}(Value);

_defineProperty(CrossFade, "names", ['cross-fade']);

module.exports = CrossFade;

/***/ }),
/* 1105 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var flexSpec = __webpack_require__(11);

var OldValue = __webpack_require__(30);

var Value = __webpack_require__(12);

var DisplayFlex =
/*#__PURE__*/
function (_Value) {
  _inheritsLoose(DisplayFlex, _Value);

  function DisplayFlex(name, prefixes) {
    var _this;

    _this = _Value.call(this, name, prefixes) || this;

    if (name === 'display-flex') {
      _this.name = 'flex';
    }

    return _this;
  }
  /**
   * Faster check for flex value
   */


  var _proto = DisplayFlex.prototype;

  _proto.check = function check(decl) {
    return decl.prop === 'display' && decl.value === this.name;
  }
  /**
   * Return value by spec
   */
  ;

  _proto.prefixed = function prefixed(prefix) {
    var spec, value;

    var _flexSpec = flexSpec(prefix);

    spec = _flexSpec[0];
    prefix = _flexSpec[1];

    if (spec === 2009) {
      if (this.name === 'flex') {
        value = 'box';
      } else {
        value = 'inline-box';
      }
    } else if (spec === 2012) {
      if (this.name === 'flex') {
        value = 'flexbox';
      } else {
        value = 'inline-flexbox';
      }
    } else if (spec === 'final') {
      value = this.name;
    }

    return prefix + value;
  }
  /**
   * Add prefix to value depend on flebox spec version
   */
  ;

  _proto.replace = function replace(string, prefix) {
    return this.prefixed(prefix);
  }
  /**
   * Change value for old specs
   */
  ;

  _proto.old = function old(prefix) {
    var prefixed = this.prefixed(prefix);
    if (!prefixed) return undefined;
    return new OldValue(this.name, prefixed);
  };

  return DisplayFlex;
}(Value);

_defineProperty(DisplayFlex, "names", ['display-flex', 'inline-flex']);

module.exports = DisplayFlex;

/***/ }),
/* 1106 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Value = __webpack_require__(12);

var DisplayGrid =
/*#__PURE__*/
function (_Value) {
  _inheritsLoose(DisplayGrid, _Value);

  function DisplayGrid(name, prefixes) {
    var _this;

    _this = _Value.call(this, name, prefixes) || this;

    if (name === 'display-grid') {
      _this.name = 'grid';
    }

    return _this;
  }
  /**
   * Faster check for flex value
   */


  var _proto = DisplayGrid.prototype;

  _proto.check = function check(decl) {
    return decl.prop === 'display' && decl.value === this.name;
  };

  return DisplayGrid;
}(Value);

_defineProperty(DisplayGrid, "names", ['display-grid', 'inline-grid']);

module.exports = DisplayGrid;

/***/ }),
/* 1107 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _defaults(subClass, superClass); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var Value = __webpack_require__(12);

var FilterValue =
/*#__PURE__*/
function (_Value) {
  _inheritsLoose(FilterValue, _Value);

  function FilterValue(name, prefixes) {
    var _this;

    _this = _Value.call(this, name, prefixes) || this;

    if (name === 'filter-function') {
      _this.name = 'filter';
    }

    return _this;
  }

  return FilterValue;
}(Value);

_defineProperty(FilterValue, "names", ['filter', 'filter-function']);

module.exports = FilterValue;

/***/ }),
/* 1108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint-disable import-helpers/order-imports */
var unpack = __webpack_require__(26).feature;

function browsersSort(a, b) {
  a = a.split(' ');
  b = b.split(' ');

  if (a[0] > b[0]) {
    return 1;
  } else if (a[0] < b[0]) {
    return -1;
  } else {
    return Math.sign(parseFloat(a[1]) - parseFloat(b[1]));
  }
} // Convert Can I Use data


function f(data, opts, callback) {
  data = unpack(data);

  if (!callback) {
    var _ref = [opts, {}];
    callback = _ref[0];
    opts = _ref[1];
  }

  var match = opts.match || /\sx($|\s)/;
  var need = [];

  for (var browser in data.stats) {
    var versions = data.stats[browser];

    for (var version in versions) {
      var support = versions[version];

      if (support.match(match)) {
        need.push(browser + ' ' + version);
      }
    }
  }

  callback(need.sort(browsersSort));
} // Add data for all properties


var result = {};

function prefix(names, data) {
  for (var _iterator = names, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref2;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref2 = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref2 = _i.value;
    }

    var name = _ref2;
    result[name] = Object.assign({}, data);
  }
}

function add(names, data) {
  for (var _iterator2 = names, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
    var _ref3;

    if (_isArray2) {
      if (_i2 >= _iterator2.length) break;
      _ref3 = _iterator2[_i2++];
    } else {
      _i2 = _iterator2.next();
      if (_i2.done) break;
      _ref3 = _i2.value;
    }

    var name = _ref3;
    result[name].browsers = result[name].browsers.concat(data.browsers).sort(browsersSort);
  }
}

module.exports = result; // Border Radius

f(__webpack_require__(80), function (browsers) {
  return prefix(['border-radius', 'border-top-left-radius', 'border-top-right-radius', 'border-bottom-right-radius', 'border-bottom-left-radius'], {
    mistakes: ['-khtml-', '-ms-', '-o-'],
    feature: 'border-radius',
    browsers: browsers
  });
}); // Box Shadow

f(__webpack_require__(87), function (browsers) {
  return prefix(['box-shadow'], {
    mistakes: ['-khtml-'],
    feature: 'css-boxshadow',
    browsers: browsers
  });
}); // Animation

f(__webpack_require__(82), function (browsers) {
  return prefix(['animation', 'animation-name', 'animation-duration', 'animation-delay', 'animation-direction', 'animation-fill-mode', 'animation-iteration-count', 'animation-play-state', 'animation-timing-function', '@keyframes'], {
    mistakes: ['-khtml-', '-ms-'],
    feature: 'css-animation',
    browsers: browsers
  });
}); // Transition

f(__webpack_require__(115), function (browsers) {
  return prefix(['transition', 'transition-property', 'transition-duration', 'transition-delay', 'transition-timing-function'], {
    mistakes: ['-khtml-', '-ms-'],
    browsers: browsers,
    feature: 'css-transitions'
  });
}); // Transform 2D

f(__webpack_require__(134), function (browsers) {
  return prefix(['transform', 'transform-origin'], {
    feature: 'transforms2d',
    browsers: browsers
  });
}); // Transform 3D

var transforms3d = __webpack_require__(135);

f(transforms3d, function (browsers) {
  prefix(['perspective', 'perspective-origin'], {
    feature: 'transforms3d',
    browsers: browsers
  });
  return prefix(['transform-style'], {
    mistakes: ['-ms-', '-o-'],
    browsers: browsers,
    feature: 'transforms3d'
  });
});
f(transforms3d, {
  match: /y\sx|y\s#2/
}, function (browsers) {
  return prefix(['backface-visibility'], {
    mistakes: ['-ms-', '-o-'],
    feature: 'transforms3d',
    browsers: browsers
  });
}); // Gradients

var gradients = __webpack_require__(97);

f(gradients, {
  match: /y\sx/
}, function (browsers) {
  return prefix(['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient'], {
    props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],
    mistakes: ['-ms-'],
    feature: 'css-gradients',
    browsers: browsers
  });
});
f(gradients, {
  match: /a\sx/
}, function (browsers) {
  browsers = browsers.map(function (i) {
    if (/firefox|op/.test(i)) {
      return i;
    } else {
      return i + " old";
    }
  });
  return add(['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient'], {
    feature: 'css-gradients',
    browsers: browsers
  });
}); // Box sizing

f(__webpack_require__(118), function (browsers) {
  return prefix(['box-sizing'], {
    feature: 'css3-boxsizing',
    browsers: browsers
  });
}); // Filter Effects

f(__webpack_require__(96), function (browsers) {
  return prefix(['filter'], {
    feature: 'css-filters',
    browsers: browsers
  });
}); // filter() function

f(__webpack_require__(95), function (browsers) {
  return prefix(['filter-function'], {
    props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],
    feature: 'css-filter-function',
    browsers: browsers
  });
}); // Backdrop-filter

var backdrop = __webpack_require__(85);

f(backdrop, {
  match: /y\sx|y\s#2/
}, function (browsers) {
  return prefix(['backdrop-filter'], {
    feature: 'css-backdrop-filter',
    browsers: browsers
  });
}); // element() function

f(__webpack_require__(93), function (browsers) {
  return prefix(['element'], {
    props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],
    feature: 'css-element-function',
    browsers: browsers
  });
}); // Multicolumns

f(__webpack_require__(127), function (browsers) {
  prefix(['columns', 'column-width', 'column-gap', 'column-rule', 'column-rule-color', 'column-rule-width', 'column-count', 'column-rule-style', 'column-span', 'column-fill'], {
    feature: 'multicolumn',
    browsers: browsers
  });
  var noff = browsers.filter(function (i) {
    return !/firefox/.test(i);
  });
  prefix(['break-before', 'break-after', 'break-inside'], {
    feature: 'multicolumn',
    browsers: noff
  });
}); // User select

f(__webpack_require__(136), function (browsers) {
  return prefix(['user-select'], {
    mistakes: ['-khtml-'],
    feature: 'user-select-none',
    browsers: browsers
  });
}); // Flexible Box Layout

var flexbox = __webpack_require__(122);

f(flexbox, {
  match: /a\sx/
}, function (browsers) {
  browsers = browsers.map(function (i) {
    if (/ie|firefox/.test(i)) {
      return i;
    } else {
      return i + " 2009";
    }
  });
  prefix(['display-flex', 'inline-flex'], {
    props: ['display'],
    feature: 'flexbox',
    browsers: browsers
  });
  prefix(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {
    feature: 'flexbox',
    browsers: browsers
  });
  prefix(['flex-direction', 'flex-wrap', 'flex-flow', 'justify-content', 'order', 'align-items', 'align-self', 'align-content'], {
    feature: 'flexbox',
    browsers: browsers
  });
});
f(flexbox, {
  match: /y\sx/
}, function (browsers) {
  add(['display-flex', 'inline-flex'], {
    feature: 'flexbox',
    browsers: browsers
  });
  add(['flex', 'flex-grow', 'flex-shrink', 'flex-basis'], {
    feature: 'flexbox',
    browsers: browsers
  });
  add(['flex-direction', 'flex-wrap', 'flex-flow', 'justify-content', 'order', 'align-items', 'align-self', 'align-content'], {
    feature: 'flexbox',
    browsers: browsers
  });
}); // calc() unit

f(__webpack_require__(81), function (browsers) {
  return prefix(['calc'], {
    props: ['*'],
    feature: 'calc',
    browsers: browsers
  });
}); // Background options

f(__webpack_require__(78), function (browsers) {
  return prefix(['background-origin', 'background-size'], {
    feature: 'background-img-opts',
    browsers: browsers
  });
}); // background-clip: text

f(__webpack_require__(77), function (browsers) {
  return prefix(['background-clip'], {
    feature: 'background-clip-text',
    browsers: browsers
  });
}); // Font feature settings

f(__webpack_require__(123), function (browsers) {
  return prefix(['font-feature-settings', 'font-variant-ligatures', 'font-language-override'], {
    feature: 'font-feature',
    browsers: browsers
  });
}); // CSS font-kerning property

f(__webpack_require__(124), function (browsers) {
  return prefix(['font-kerning'], {
    feature: 'font-kerning',
    browsers: browsers
  });
}); // Border image

f(__webpack_require__(79), function (browsers) {
  return prefix(['border-image'], {
    feature: 'border-image',
    browsers: browsers
  });
}); // Selection selector

f(__webpack_require__(108), function (browsers) {
  return prefix(['::selection'], {
    selector: true,
    feature: 'css-selection',
    browsers: browsers
  });
}); // Placeholder selector

f(__webpack_require__(105), function (browsers) {
  prefix(['::placeholder'], {
    selector: true,
    feature: 'css-placeholder',
    browsers: browsers.concat(['ie 10 old', 'ie 11 old', 'firefox 18 old'])
  });
}); // Hyphenation

f(__webpack_require__(99), function (browsers) {
  return prefix(['hyphens'], {
    feature: 'css-hyphens',
    browsers: browsers
  });
}); // Fullscreen selector

var fullscreen = __webpack_require__(125);

f(fullscreen, function (browsers) {
  return prefix([':fullscreen'], {
    selector: true,
    feature: 'fullscreen',
    browsers: browsers
  });
});
f(fullscreen, {
  match: /x(\s#2|$)/
}, function (browsers) {
  return prefix(['::backdrop'], {
    selector: true,
    feature: 'fullscreen',
    browsers: browsers
  });
}); // Tab size

f(__webpack_require__(121), function (browsers) {
  return prefix(['tab-size'], {
    feature: 'css3-tabsize',
    browsers: browsers
  });
}); // Intrinsic & extrinsic sizing

var intrinsic = __webpack_require__(126);

f(intrinsic, function (browsers) {
  return prefix(['max-content', 'min-content', 'fit-content'], {
    props: ['width', 'min-width', 'max-width', 'height', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size', 'grid', 'grid-template', 'grid-template-rows', 'grid-template-columns', 'grid-auto-columns', 'grid-auto-rows'],
    feature: 'intrinsic-width',
    browsers: browsers
  });
});
f(intrinsic, {
  match: /x|\s#4/
}, function (browsers) {
  return prefix(['fill', 'fill-available', 'stretch'], {
    props: ['width', 'min-width', 'max-width', 'height', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size', 'grid', 'grid-template', 'grid-template-rows', 'grid-template-columns', 'grid-auto-columns', 'grid-auto-rows'],
    feature: 'intrinsic-width',
    browsers: browsers
  });
}); // Zoom cursors

f(__webpack_require__(120), function (browsers) {
  return prefix(['zoom-in', 'zoom-out'], {
    props: ['cursor'],
    feature: 'css3-cursors-newer',
    browsers: browsers
  });
}); // Grab cursors

f(__webpack_require__(119), function (browsers) {
  return prefix(['grab', 'grabbing'], {
    props: ['cursor'],
    feature: 'css3-cursors-grab',
    browsers: browsers
  });
}); // Sticky position

f(__webpack_require__(111), function (browsers) {
  return prefix(['sticky'], {
    props: ['position'],
    feature: 'css-sticky',
    browsers: browsers
  });
}); // Pointer Events

f(__webpack_require__(129), function (browsers) {
  return prefix(['touch-action'], {
    feature: 'pointer',
    browsers: browsers
  });
}); // Text decoration

var decoration = __webpack_require__(130);

f(decoration, function (browsers) {
  return prefix(['text-decoration-style', 'text-decoration-color', 'text-decoration-line', 'text-decoration'], {
    feature: 'text-decoration',
    browsers: browsers
  });
});
f(decoration, {
  match: /x.*#[235]/
}, function (browsers) {
  return prefix(['text-decoration-skip', 'text-decoration-skip-ink'], {
    feature: 'text-decoration',
    browsers: browsers
  });
}); // Text Size Adjust

f(__webpack_require__(133), function (browsers) {
  return prefix(['text-size-adjust'], {
    feature: 'text-size-adjust',
    browsers: browsers
  });
}); // CSS Masks

f(__webpack_require__(102), function (browsers) {
  prefix(['mask-clip', 'mask-composite', 'mask-image', 'mask-origin', 'mask-repeat', 'mask-border-repeat', 'mask-border-source'], {
    feature: 'css-masks',
    browsers: browsers
  });
  prefix(['mask', 'mask-position', 'mask-size', 'mask-border', 'mask-border-outset', 'mask-border-width', 'mask-border-slice'], {
    feature: 'css-masks',
    browsers: browsers
  });
}); // CSS clip-path property

f(__webpack_require__(88), function (browsers) {
  return prefix(['clip-path'], {
    feature: 'css-clip-path',
    browsers: browsers
  });
}); // Fragmented Borders and Backgrounds

f(__webpack_require__(86), function (browsers) {
  return prefix(['box-decoration-break'], {
    feature: 'css-boxdecorationbreak',
    browsers: browsers
  });
}); // CSS3 object-fit/object-position

f(__webpack_require__(128), function (browsers) {
  return prefix(['object-fit', 'object-position'], {
    feature: 'object-fit',
    browsers: browsers
  });
}); // CSS Shapes

f(__webpack_require__(109), function (browsers) {
  return prefix(['shape-margin', 'shape-outside', 'shape-image-threshold'], {
    feature: 'css-shapes',
    browsers: browsers
  });
}); // CSS3 text-overflow

f(__webpack_require__(132), function (browsers) {
  return prefix(['text-overflow'], {
    feature: 'text-overflow',
    browsers: browsers
  });
}); // Viewport at-rule

f(__webpack_require__(92), function (browsers) {
  return prefix(['@viewport'], {
    feature: 'css-deviceadaptation',
    browsers: browsers
  });
}); // Resolution Media Queries

var resolut = __webpack_require__(103);

f(resolut, {
  match: /( x($| )|a #2)/
}, function (browsers) {
  return prefix(['@resolution'], {
    feature: 'css-media-resolution',
    browsers: browsers
  });
}); // CSS text-align-last

f(__webpack_require__(112), function (browsers) {
  return prefix(['text-align-last'], {
    feature: 'css-text-align-last',
    browsers: browsers
  });
}); // Crisp Edges Image Rendering Algorithm

var crispedges = __webpack_require__(90);

f(crispedges, {
  match: /y x|a x #1/
}, function (browsers) {
  return prefix(['pixelated'], {
    props: ['image-rendering'],
    feature: 'css-crisp-edges',
    browsers: browsers
  });
});
f(crispedges, {
  match: /a x #2/
}, function (browsers) {
  return prefix(['image-rendering'], {
    feature: 'css-crisp-edges',
    browsers: browsers
  });
}); // Logical Properties

var logicalProps = __webpack_require__(101);

f(logicalProps, function (browsers) {
  return prefix(['border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end'], {
    feature: 'css-logical-props',
    browsers: browsers
  });
});
f(logicalProps, {
  match: /x\s#2/
}, function (browsers) {
  return prefix(['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end'], {
    feature: 'css-logical-props',
    browsers: browsers
  });
}); // CSS appearance

var appearance = __webpack_require__(84);

f(appearance, {
  match: /#2|x/
}, function (browsers) {
  return prefix(['appearance'], {
    feature: 'css-appearance',
    browsers: browsers
  });
}); // CSS Scroll snap points

f(__webpack_require__(110), function (browsers) {
  return prefix(['scroll-snap-type', 'scroll-snap-coordinate', 'scroll-snap-destination', 'scroll-snap-points-x', 'scroll-snap-points-y'], {
    feature: 'css-snappoints',
    browsers: browsers
  });
}); // CSS Regions

f(__webpack_require__(107), function (browsers) {
  return prefix(['flow-into', 'flow-from', 'region-fragment'], {
    feature: 'css-regions',
    browsers: browsers
  });
}); // CSS image-set

f(__webpack_require__(100), function (browsers) {
  return prefix(['image-set'], {
    props: ['background', 'background-image', 'border-image', 'cursor', 'mask', 'mask-image', 'list-style', 'list-style-image', 'content'],
    feature: 'css-image-set',
    browsers: browsers
  });
}); // Writing Mode

var writingMode = __webpack_require__(117);

f(writingMode, {
  match: /a|x/
}, function (browsers) {
  return prefix(['writing-mode'], {
    feature: 'css-writing-mode',
    browsers: browsers
  });
}); // Cross-Fade Function

f(__webpack_require__(91), function (browsers) {
  return prefix(['cross-fade'], {
    props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],
    feature: 'css-cross-fade',
    browsers: browsers
  });
}); // Read Only selector

f(__webpack_require__(106), function (browsers) {
  return prefix([':read-only', ':read-write'], {
    selector: true,
    feature: 'css-read-only-write',
    browsers: browsers
  });
}); // Text Emphasize

f(__webpack_require__(131), function (browsers) {
  return prefix(['text-emphasis', 'text-emphasis-position', 'text-emphasis-style', 'text-emphasis-color'], {
    feature: 'text-emphasis',
    browsers: browsers
  });
}); // CSS Grid Layout

var grid = __webpack_require__(98);

f(grid, function (browsers) {
  prefix(['display-grid', 'inline-grid'], {
    props: ['display'],
    feature: 'css-grid',
    browsers: browsers
  });
  prefix(['grid-template-columns', 'grid-template-rows', 'grid-row-start', 'grid-column-start', 'grid-row-end', 'grid-column-end', 'grid-row', 'grid-column', 'grid-area', 'grid-template', 'grid-template-areas', 'place-self'], {
    feature: 'css-grid',
    browsers: browsers
  });
});
f(grid, {
  match: /a x/
}, function (browsers) {
  return prefix(['grid-column-align', 'grid-row-align'], {
    feature: 'css-grid',
    browsers: browsers
  });
}); // CSS text-spacing

f(__webpack_require__(114), function (browsers) {
  return prefix(['text-spacing'], {
    feature: 'css-text-spacing',
    browsers: browsers
  });
}); // :any-link selector

f(__webpack_require__(83), function (browsers) {
  return prefix([':any-link'], {
    selector: true,
    feature: 'css-any-link',
    browsers: browsers
  });
}); // unicode-bidi

var bidi = __webpack_require__(116);

f(bidi, function (browsers) {
  return prefix(['isolate'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers: browsers
  });
});
f(bidi, {
  match: /y x|a x #2/
}, function (browsers) {
  return prefix(['plaintext'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers: browsers
  });
});
f(bidi, {
  match: /y x/
}, function (browsers) {
  return prefix(['isolate-override'], {
    props: ['unicode-bidi'],
    feature: 'css-unicode-bidi',
    browsers: browsers
  });
}); // overscroll-behavior selector

var over = __webpack_require__(104);

f(over, {
  match: /a #1/
}, function (browsers) {
  return prefix(['overscroll-behavior'], {
    feature: 'css-overscroll-behavior',
    browsers: browsers
  });
}); // color-adjust

f(__webpack_require__(89), function (browsers) {
  return prefix(['color-adjust'], {
    feature: 'css-color-adjust',
    browsers: browsers
  });
}); // text-orientation

f(__webpack_require__(113), function (browsers) {
  return prefix(['text-orientation'], {
    feature: 'css-text-orientation',
    browsers: browsers
  });
});

/***/ }),
/* 1109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var browserslist = __webpack_require__(14);

function capitalize(str) {
  return str.slice(0, 1).toUpperCase() + str.slice(1);
}

var NAMES = {
  ie: 'IE',
  ie_mob: 'IE Mobile',
  ios_saf: 'iOS',
  op_mini: 'Opera Mini',
  op_mob: 'Opera Mobile',
  and_chr: 'Chrome for Android',
  and_ff: 'Firefox for Android',
  and_uc: 'UC for Android'
};

function prefix(name, prefixes, note) {
  var out = "  " + name;
  if (note) out += ' *';
  out += ': ';
  out += prefixes.map(function (i) {
    return i.replace(/^-(.*)-$/g, '$1');
  }).join(', ');
  out += '\n';
  return out;
}

module.exports = function (prefixes) {
  if (prefixes.browsers.selected.length === 0) {
    return 'No browsers selected';
  }

  var versions = {};

  for (var _iterator = prefixes.browsers.selected, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
    var _ref;

    if (_isArray) {
      if (_i >= _iterator.length) break;
      _ref = _iterator[_i++];
    } else {
      _i = _iterator.next();
      if (_i.done) break;
      _ref = _i.value;
    }

    var _browser = _ref;

    var parts = _browser.split(' ');

    var _name2 = parts[0];
    var version = parts[1];
    _name2 = NAMES[_name2] || capitalize(_name2);

    if (versions[_name2]) {
      versions[_name2].push(version);
    } else {
      versions[_name2] = [version];
    }
  }

  var out = 'Browsers:\n';

  for (var browser in versions) {
    var list = versions[browser];
    list = list.sort(function (a, b) {
      return parseFloat(b) - parseFloat(a);
    });
    out += "  " + browser + ": " + list.join(', ') + "\n";
  }

  var coverage = browserslist.coverage(prefixes.browsers.selected);
  var round = Math.round(coverage * 100) / 100.0;
  out += "\nThese browsers account for " + round + "% of all users globally\n";
  var atrules = [];

  for (var name in prefixes.add) {
    var data = prefixes.add[name];

    if (name[0] === '@' && data.prefixes) {
      atrules.push(prefix(name, data.prefixes));
    }
  }

  if (atrules.length > 0) {
    out += "\nAt-Rules:\n" + atrules.sort().join('');
  }

  var selectors = [];

  for (var _iterator2 = prefixes.add.selectors, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
    var _ref2;

    if (_isArray2) {
      if (_i2 >= _iterator2.length) break;
      _ref2 = _iterator2[_i2++];
    } else {
      _i2 = _iterator2.next();
      if (_i2.done) break;
      _ref2 = _i2.value;
    }

    var selector = _ref2;

    if (selector.prefixes) {
      selectors.push(prefix(selector.name, selector.prefixes));
    }
  }

  if (selectors.length > 0) {
    out += "\nSelectors:\n" + selectors.sort().join('');
  }

  var values = [];
  var props = [];
  var hadGrid = false;

  for (var _name in prefixes.add) {
    var _data = prefixes.add[_name];

    if (_name[0] !== '@' && _data.prefixes) {
      var grid = _name.indexOf('grid-') === 0;
      if (grid) hadGrid = true;
      props.push(prefix(_name, _data.prefixes, grid));
    }

    if (!Array.isArray(_data.values)) {
      continue;
    }

    for (var _iterator3 = _data.values, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
      var _ref3;

      if (_isArray3) {
        if (_i3 >= _iterator3.length) break;
        _ref3 = _iterator3[_i3++];
      } else {
        _i3 = _iterator3.next();
        if (_i3.done) break;
        _ref3 = _i3.value;
      }

      var value = _ref3;

      var _grid = value.name.indexOf('grid') !== -1;

      if (_grid) hadGrid = true;
      var string = prefix(value.name, value.prefixes, _grid);

      if (values.indexOf(string) === -1) {
        values.push(string);
      }
    }
  }

  if (props.length > 0) {
    out += "\nProperties:\n" + props.sort().join('');
  }

  if (values.length > 0) {
    out += "\nValues:\n" + values.sort().join('');
  }

  if (hadGrid) {
    out += '\n* - Prefixes will be added only on grid: true option.\n';
  }

  if (!atrules.length && !selectors.length && !props.length && !values.length) {
    out += '\nAwesome! Your browsers don\'t require any vendor prefixes.' + '\nNow you can remove Autoprefixer from build steps.';
  }

  return out;
};

/***/ }),
/* 1110 */
/***/ (function(module, exports, __webpack_require__) {

(function (global, factory) {
   true ? factory(exports, __webpack_require__(38)) :
  undefined;
}(this, function (exports, MOZ_SourceMap) { 'use strict';

  MOZ_SourceMap = MOZ_SourceMap && MOZ_SourceMap.hasOwnProperty('default') ? MOZ_SourceMap['default'] : MOZ_SourceMap;

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  function characters(str) {
      return str.split("");
  }

  function member(name, array) {
      return array.includes(name);
  }

  function find_if(func, array) {
      for (var i = 0, n = array.length; i < n; ++i) {
          if (func(array[i]))
              return array[i];
      }
  }

  function repeat_string(str, i) {
      if (i <= 0) return "";
      if (i == 1) return str;
      var d = repeat_string(str, i >> 1);
      d += d;
      if (i & 1) d += str;
      return d;
  }

  function configure_error_stack(fn) {
      Object.defineProperty(fn.prototype, "stack", {
          get: function() {
              var err = new Error(this.message);
              err.name = this.name;
              try {
                  throw err;
              } catch(e) {
                  return e.stack;
              }
          }
      });
  }

  function DefaultsError(msg, defs) {
      this.message = msg;
      this.defs = defs;
  }
  DefaultsError.prototype = Object.create(Error.prototype);
  DefaultsError.prototype.constructor = DefaultsError;
  DefaultsError.prototype.name = "DefaultsError";
  configure_error_stack(DefaultsError);

  DefaultsError.croak = function(msg, defs) {
      throw new DefaultsError(msg, defs);
  };

  function defaults(args, defs, croak) {
      if (args === true)
          args = {};
      var ret = args || {};
      if (croak) for (var i in ret) if (HOP(ret, i) && !HOP(defs, i))
          DefaultsError.croak("`" + i + "` is not a supported option", defs);
      for (var i in defs) if (HOP(defs, i)) {
          ret[i] = (args && HOP(args, i)) ? args[i] : defs[i];
      }
      return ret;
  }

  function merge(obj, ext) {
      var count = 0;
      for (var i in ext) if (HOP(ext, i)) {
          obj[i] = ext[i];
          count++;
      }
      return count;
  }

  function noop() {}
  function return_false() { return false; }
  function return_true() { return true; }
  function return_this() { return this; }
  function return_null() { return null; }

  var MAP = (function() {
      function MAP(a, f, backwards) {
          var ret = [], top = [], i;
          function doit() {
              var val = f(a[i], i);
              var is_last = val instanceof Last;
              if (is_last) val = val.v;
              if (val instanceof AtTop) {
                  val = val.v;
                  if (val instanceof Splice) {
                      top.push.apply(top, backwards ? val.v.slice().reverse() : val.v);
                  } else {
                      top.push(val);
                  }
              } else if (val !== skip) {
                  if (val instanceof Splice) {
                      ret.push.apply(ret, backwards ? val.v.slice().reverse() : val.v);
                  } else {
                      ret.push(val);
                  }
              }
              return is_last;
          }
          if (Array.isArray(a)) {
              if (backwards) {
                  for (i = a.length; --i >= 0;) if (doit()) break;
                  ret.reverse();
                  top.reverse();
              } else {
                  for (i = 0; i < a.length; ++i) if (doit()) break;
              }
          } else {
              for (i in a) if (HOP(a, i)) if (doit()) break;
          }
          return top.concat(ret);
      }
      MAP.at_top = function(val) { return new AtTop(val); };
      MAP.splice = function(val) { return new Splice(val); };
      MAP.last = function(val) { return new Last(val); };
      var skip = MAP.skip = {};
      function AtTop(val) { this.v = val; }
      function Splice(val) { this.v = val; }
      function Last(val) { this.v = val; }
      return MAP;
  })();

  function push_uniq(array, el) {
      if (!array.includes(el))
          array.push(el);
  }

  function string_template(text, props) {
      return text.replace(/{(.+?)}/g, function(str, p) {
          return props && props[p];
      });
  }

  function remove(array, el) {
      for (var i = array.length; --i >= 0;) {
          if (array[i] === el) array.splice(i, 1);
      }
  }

  function mergeSort(array, cmp) {
      if (array.length < 2) return array.slice();
      function merge(a, b) {
          var r = [], ai = 0, bi = 0, i = 0;
          while (ai < a.length && bi < b.length) {
              cmp(a[ai], b[bi]) <= 0
                  ? r[i++] = a[ai++]
                  : r[i++] = b[bi++];
          }
          if (ai < a.length) r.push.apply(r, a.slice(ai));
          if (bi < b.length) r.push.apply(r, b.slice(bi));
          return r;
      }
      function _ms(a) {
          if (a.length <= 1)
              return a;
          var m = Math.floor(a.length / 2), left = a.slice(0, m), right = a.slice(m);
          left = _ms(left);
          right = _ms(right);
          return merge(left, right);
      }
      return _ms(array);
  }

  function makePredicate(words) {
      if (!Array.isArray(words)) words = words.split(" ");

      return new Set(words);
  }

  function all(array, predicate) {
      for (var i = array.length; --i >= 0;)
          if (!predicate(array[i]))
              return false;
      return true;
  }

  function map_add(map, key, value) {
      if (map.has(key)) {
          map.get(key).push(value);
      } else {
          map.set(key, [ value ]);
      }
  }

  function map_from_object(obj) {
      var map = new Map();
      for (var key in obj) {
          if (HOP(obj, key) && key.charAt(0) === "$") {
              map.set(key.substr(1), obj[key]);
          }
      }
      return map;
  }

  function map_to_object(map) {
      var obj = Object.create(null);
      map.forEach(function (value, key) {
          obj["$" + key] = value;
      });
      return obj;
  }

  function HOP(obj, prop) {
      return Object.prototype.hasOwnProperty.call(obj, prop);
  }

  // return true if the node at the top of the stack (that means the
  // innermost node in the current output) is lexically the first in
  // a statement.
  function first_in_statement(stack) {
      var node = stack.parent(-1);
      for (var i = 0, p; p = stack.parent(i); i++) {
          if (p instanceof AST_Statement && p.body === node)
              return true;
          if ((p instanceof AST_Sequence      && p.expressions[0] === node) ||
              (p.TYPE == "Call"               && p.expression === node ) ||
              (p instanceof AST_Dot           && p.expression === node ) ||
              (p instanceof AST_Sub           && p.expression === node ) ||
              (p instanceof AST_Conditional   && p.condition === node  ) ||
              (p instanceof AST_Binary        && p.left === node       ) ||
              (p instanceof AST_UnaryPostfix  && p.expression === node )
          ) {
              node = p;
          } else {
              return false;
          }
      }
  }

  function keep_name(keep_setting, name) {
      return keep_setting === true
          || (keep_setting instanceof RegExp && keep_setting.test(name));
  }

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>
      Parser based on parse-js (http://marijn.haverbeke.nl/parse-js/).

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  var KEYWORDS = "break case catch class const continue debugger default delete do else export extends finally for function if in instanceof let new return switch throw try typeof var void while with";
  var KEYWORDS_ATOM = "false null true";
  var RESERVED_WORDS = "enum implements import interface package private protected public static super this " + KEYWORDS_ATOM + " " + KEYWORDS;
  var KEYWORDS_BEFORE_EXPRESSION = "return new delete throw else case yield await";

  KEYWORDS = makePredicate(KEYWORDS);
  RESERVED_WORDS = makePredicate(RESERVED_WORDS);
  KEYWORDS_BEFORE_EXPRESSION = makePredicate(KEYWORDS_BEFORE_EXPRESSION);
  KEYWORDS_ATOM = makePredicate(KEYWORDS_ATOM);

  var OPERATOR_CHARS = makePredicate(characters("+-*&%=<>!?|~^"));

  var RE_NUM_LITERAL = /[0-9a-f]/i;
  var RE_HEX_NUMBER = /^0x[0-9a-f]+$/i;
  var RE_OCT_NUMBER = /^0[0-7]+$/;
  var RE_ES6_OCT_NUMBER = /^0o[0-7]+$/i;
  var RE_BIN_NUMBER = /^0b[01]+$/i;
  var RE_DEC_NUMBER = /^\d*\.?\d*(?:e[+-]?\d*(?:\d\.?|\.?\d)\d*)?$/i;

  var OPERATORS = makePredicate([
      "in",
      "instanceof",
      "typeof",
      "new",
      "void",
      "delete",
      "++",
      "--",
      "+",
      "-",
      "!",
      "~",
      "&",
      "|",
      "^",
      "*",
      "**",
      "/",
      "%",
      ">>",
      "<<",
      ">>>",
      "<",
      ">",
      "<=",
      ">=",
      "==",
      "===",
      "!=",
      "!==",
      "?",
      "=",
      "+=",
      "-=",
      "/=",
      "*=",
      "**=",
      "%=",
      ">>=",
      "<<=",
      ">>>=",
      "|=",
      "^=",
      "&=",
      "&&",
      "||"
  ]);

  var WHITESPACE_CHARS = makePredicate(characters(" \u00a0\n\r\t\f\u000b\u200b\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u2028\u2029\u202f\u205f\u3000\uFEFF"));

  var NEWLINE_CHARS = makePredicate(characters("\n\r\u2028\u2029"));

  var PUNC_AFTER_EXPRESSION = makePredicate(characters(";]),:"));

  var PUNC_BEFORE_EXPRESSION = makePredicate(characters("[{(,;:"));

  var PUNC_CHARS = makePredicate(characters("[]{}(),;:"));

  /* -----[ Tokenizer ]----- */

  // surrogate safe regexps adapted from https://github.com/mathiasbynens/unicode-8.0.0/tree/89b412d8a71ecca9ed593d9e9fa073ab64acfebe/Binary_Property
  var UNICODE = {
      ID_Start: /[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u05D0-\u05EA\u05F0-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u08A0-\u08B4\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C60\u0C61\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1877\u1880-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4B\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1CE9-\u1CEC\u1CEE-\u1CF1\u1CF5\u1CF6\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303C\u3041-\u3096\u309B-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6EF\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC03-\uDC37\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDF00-\uDF19]|\uD806[\uDCA0-\uDCDF\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50\uDF93-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD83A[\uDC00-\uDCC4]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]/,
      ID_Continue: /[0-9A-Z_a-z\xAA\xB5\xB7\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0300-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u0483-\u0487\u048A-\u052F\u0531-\u0556\u0559\u0561-\u0587\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u05D0-\u05EA\u05F0-\u05F2\u0610-\u061A\u0620-\u0669\u066E-\u06D3\u06D5-\u06DC\u06DF-\u06E8\u06EA-\u06FC\u06FF\u0710-\u074A\u074D-\u07B1\u07C0-\u07F5\u07FA\u0800-\u082D\u0840-\u085B\u08A0-\u08B4\u08E3-\u0963\u0966-\u096F\u0971-\u0983\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BC-\u09C4\u09C7\u09C8\u09CB-\u09CE\u09D7\u09DC\u09DD\u09DF-\u09E3\u09E6-\u09F1\u0A01-\u0A03\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A59-\u0A5C\u0A5E\u0A66-\u0A75\u0A81-\u0A83\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABC-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AD0\u0AE0-\u0AE3\u0AE6-\u0AEF\u0AF9\u0B01-\u0B03\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3C-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B5C\u0B5D\u0B5F-\u0B63\u0B66-\u0B6F\u0B71\u0B82\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD0\u0BD7\u0BE6-\u0BEF\u0C00-\u0C03\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C58-\u0C5A\u0C60-\u0C63\u0C66-\u0C6F\u0C81-\u0C83\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBC-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CDE\u0CE0-\u0CE3\u0CE6-\u0CEF\u0CF1\u0CF2\u0D01-\u0D03\u0D05-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D-\u0D44\u0D46-\u0D48\u0D4A-\u0D4E\u0D57\u0D5F-\u0D63\u0D66-\u0D6F\u0D7A-\u0D7F\u0D82\u0D83\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DE6-\u0DEF\u0DF2\u0DF3\u0E01-\u0E3A\u0E40-\u0E4E\u0E50-\u0E59\u0E81\u0E82\u0E84\u0E87\u0E88\u0E8A\u0E8D\u0E94-\u0E97\u0E99-\u0E9F\u0EA1-\u0EA3\u0EA5\u0EA7\u0EAA\u0EAB\u0EAD-\u0EB9\u0EBB-\u0EBD\u0EC0-\u0EC4\u0EC6\u0EC8-\u0ECD\u0ED0-\u0ED9\u0EDC-\u0EDF\u0F00\u0F18\u0F19\u0F20-\u0F29\u0F35\u0F37\u0F39\u0F3E-\u0F47\u0F49-\u0F6C\u0F71-\u0F84\u0F86-\u0F97\u0F99-\u0FBC\u0FC6\u1000-\u1049\u1050-\u109D\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u135D-\u135F\u1369-\u1371\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16EE-\u16F8\u1700-\u170C\u170E-\u1714\u1720-\u1734\u1740-\u1753\u1760-\u176C\u176E-\u1770\u1772\u1773\u1780-\u17D3\u17D7\u17DC\u17DD\u17E0-\u17E9\u180B-\u180D\u1810-\u1819\u1820-\u1877\u1880-\u18AA\u18B0-\u18F5\u1900-\u191E\u1920-\u192B\u1930-\u193B\u1946-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u19D0-\u19DA\u1A00-\u1A1B\u1A20-\u1A5E\u1A60-\u1A7C\u1A7F-\u1A89\u1A90-\u1A99\u1AA7\u1AB0-\u1ABD\u1B00-\u1B4B\u1B50-\u1B59\u1B6B-\u1B73\u1B80-\u1BF3\u1C00-\u1C37\u1C40-\u1C49\u1C4D-\u1C7D\u1CD0-\u1CD2\u1CD4-\u1CF6\u1CF8\u1CF9\u1D00-\u1DF5\u1DFC-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u203F\u2040\u2054\u2071\u207F\u2090-\u209C\u20D0-\u20DC\u20E1\u20E5-\u20F0\u2102\u2107\u210A-\u2113\u2115\u2118-\u211D\u2124\u2126\u2128\u212A-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2160-\u2188\u2C00-\u2C2E\u2C30-\u2C5E\u2C60-\u2CE4\u2CEB-\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D7F-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2DE0-\u2DFF\u3005-\u3007\u3021-\u302F\u3031-\u3035\u3038-\u303C\u3041-\u3096\u3099-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312D\u3131-\u318E\u31A0-\u31BA\u31F0-\u31FF\u3400-\u4DB5\u4E00-\u9FD5\uA000-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA62B\uA640-\uA66F\uA674-\uA67D\uA67F-\uA6F1\uA717-\uA71F\uA722-\uA788\uA78B-\uA7AD\uA7B0-\uA7B7\uA7F7-\uA827\uA840-\uA873\uA880-\uA8C4\uA8D0-\uA8D9\uA8E0-\uA8F7\uA8FB\uA8FD\uA900-\uA92D\uA930-\uA953\uA960-\uA97C\uA980-\uA9C0\uA9CF-\uA9D9\uA9E0-\uA9FE\uAA00-\uAA36\uAA40-\uAA4D\uAA50-\uAA59\uAA60-\uAA76\uAA7A-\uAAC2\uAADB-\uAADD\uAAE0-\uAAEF\uAAF2-\uAAF6\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB65\uAB70-\uABEA\uABEC\uABED\uABF0-\uABF9\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE00-\uFE0F\uFE20-\uFE2F\uFE33\uFE34\uFE4D-\uFE4F\uFE70-\uFE74\uFE76-\uFEFC\uFF10-\uFF19\uFF21-\uFF3A\uFF3F\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDD40-\uDD74\uDDFD\uDE80-\uDE9C\uDEA0-\uDED0\uDEE0\uDF00-\uDF1F\uDF30-\uDF4A\uDF50-\uDF7A\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF\uDFD1-\uDFD5]|\uD801[\uDC00-\uDC9D\uDCA0-\uDCA9\uDD00-\uDD27\uDD30-\uDD63\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00-\uDE03\uDE05\uDE06\uDE0C-\uDE13\uDE15-\uDE17\uDE19-\uDE33\uDE38-\uDE3A\uDE3F\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE6\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2]|\uD804[\uDC00-\uDC46\uDC66-\uDC6F\uDC7F-\uDCBA\uDCD0-\uDCE8\uDCF0-\uDCF9\uDD00-\uDD34\uDD36-\uDD3F\uDD50-\uDD73\uDD76\uDD80-\uDDC4\uDDCA-\uDDCC\uDDD0-\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE37\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEEA\uDEF0-\uDEF9\uDF00-\uDF03\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3C-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF50\uDF57\uDF5D-\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDC80-\uDCC5\uDCC7\uDCD0-\uDCD9\uDD80-\uDDB5\uDDB8-\uDDC0\uDDD8-\uDDDD\uDE00-\uDE40\uDE44\uDE50-\uDE59\uDE80-\uDEB7\uDEC0-\uDEC9\uDF00-\uDF19\uDF1D-\uDF2B\uDF30-\uDF39]|\uD806[\uDCA0-\uDCE9\uDCFF\uDEC0-\uDEF8]|\uD808[\uDC00-\uDF99]|\uD809[\uDC00-\uDC6E\uDC80-\uDD43]|[\uD80C\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE60-\uDE69\uDED0-\uDEED\uDEF0-\uDEF4\uDF00-\uDF36\uDF40-\uDF43\uDF50-\uDF59\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDF00-\uDF44\uDF50-\uDF7E\uDF8F-\uDF9F]|\uD82C[\uDC00\uDC01]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB\uDFCE-\uDFFF]|\uD836[\uDE00-\uDE36\uDE3B-\uDE6C\uDE75\uDE84\uDE9B-\uDE9F\uDEA1-\uDEAF]|\uD83A[\uDC00-\uDCC4\uDCD0-\uDCD6]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDED6\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF34\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1]|\uD87E[\uDC00-\uDE1D]|\uDB40[\uDD00-\uDDEF]/,
  };

  function get_full_char(str, pos) {
      var char = str.charAt(pos);
      if (is_surrogate_pair_head(char)) {
          var next = str.charAt(pos + 1);
          if (is_surrogate_pair_tail(next)) {
              return char + next;
          }
      }
      if (is_surrogate_pair_tail(char)) {
          var prev = str.charAt(pos - 1);
          if (is_surrogate_pair_head(prev)) {
              return prev + char;
          }
      }
      return char;
  }

  function get_full_char_code(str, pos) {
      // https://en.wikipedia.org/wiki/Universal_Character_Set_characters#Surrogates
      if (is_surrogate_pair_head(str.charAt(pos))) {
          return 0x10000 + (str.charCodeAt(pos) - 0xd800 << 10) + str.charCodeAt(pos + 1) - 0xdc00;
      }
      return str.charCodeAt(pos);
  }

  function get_full_char_length(str) {
      var surrogates = 0;

      for (var i = 0; i < str.length; i++) {
          if (is_surrogate_pair_head(str.charCodeAt(i))) {
              if (is_surrogate_pair_tail(str.charCodeAt(i + 1))) {
                  surrogates++;
                  i++;
              }
          }
      }

      return str.length - surrogates;
  }

  function from_char_code(code) {
      // Based on https://github.com/mathiasbynens/String.fromCodePoint/blob/master/fromcodepoint.js
      if (code > 0xFFFF) {
          code -= 0x10000;
          return (String.fromCharCode((code >> 10) + 0xD800) +
              String.fromCharCode((code % 0x400) + 0xDC00));
      }
      return String.fromCharCode(code);
  }

  function is_surrogate_pair_head(code) {
      if (typeof code === "string")
          code = code.charCodeAt(0);

      return code >= 0xd800 && code <= 0xdbff;
  }

  function is_surrogate_pair_tail(code) {
      if (typeof code === "string")
          code = code.charCodeAt(0);
      return code >= 0xdc00 && code <= 0xdfff;
  }

  function is_digit(code) {
      return code >= 48 && code <= 57;
  }

  function is_identifier_start(ch) {
      var code = ch.charCodeAt(0);
      return UNICODE.ID_Start.test(ch) || code == 36 || code == 95;
  }

  function is_identifier_char(ch) {
      var code = ch.charCodeAt(0);
      return UNICODE.ID_Continue.test(ch)
          || code == 36
          || code == 95
          || code == 8204 // \u200c: zero-width non-joiner <ZWNJ>
          || code == 8205 // \u200d: zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)
      ;
  }

  function is_identifier_string(str) {
      return /^[a-z_$][a-z0-9_$]*$/i.test(str);
  }

  function parse_js_number(num) {
      if (RE_HEX_NUMBER.test(num)) {
          return parseInt(num.substr(2), 16);
      } else if (RE_OCT_NUMBER.test(num)) {
          return parseInt(num.substr(1), 8);
      } else if (RE_ES6_OCT_NUMBER.test(num)) {
          return parseInt(num.substr(2), 8);
      } else if (RE_BIN_NUMBER.test(num)) {
          return parseInt(num.substr(2), 2);
      } else if (RE_DEC_NUMBER.test(num)) {
          return parseFloat(num);
      } else {
          var val = parseFloat(num);
          if (val == num) return val;
      }
  }

  function JS_Parse_Error(message, filename, line, col, pos) {
      this.message = message;
      this.filename = filename;
      this.line = line;
      this.col = col;
      this.pos = pos;
  }
  JS_Parse_Error.prototype = Object.create(Error.prototype);
  JS_Parse_Error.prototype.constructor = JS_Parse_Error;
  JS_Parse_Error.prototype.name = "SyntaxError";
  configure_error_stack(JS_Parse_Error);

  function js_error(message, filename, line, col, pos) {
      throw new JS_Parse_Error(message, filename, line, col, pos);
  }

  function is_token(token, type, val) {
      return token.type == type && (val == null || token.value == val);
  }

  var EX_EOF = {};

  function tokenizer($TEXT, filename, html5_comments, shebang) {

      var S = {
          text            : $TEXT,
          filename        : filename,
          pos             : 0,
          tokpos          : 0,
          line            : 1,
          tokline         : 0,
          col             : 0,
          tokcol          : 0,
          newline_before  : false,
          regex_allowed   : false,
          brace_counter   : 0,
          template_braces : [],
          comments_before : [],
          directives      : {},
          directive_stack : []
      };

      function peek() { return get_full_char(S.text, S.pos); }

      function next(signal_eof, in_string) {
          var ch = get_full_char(S.text, S.pos++);
          if (signal_eof && !ch)
              throw EX_EOF;
          if (NEWLINE_CHARS.has(ch)) {
              S.newline_before = S.newline_before || !in_string;
              ++S.line;
              S.col = 0;
              if (!in_string && ch == "\r" && peek() == "\n") {
                  // treat a \r\n sequence as a single \n
                  ++S.pos;
                  ch = "\n";
              }
          } else {
              if (ch.length > 1) {
                  ++S.pos;
                  ++S.col;
              }
              ++S.col;
          }
          return ch;
      }

      function forward(i) {
          while (i-- > 0) next();
      }

      function looking_at(str) {
          return S.text.substr(S.pos, str.length) == str;
      }

      function find_eol() {
          var text = S.text;
          for (var i = S.pos, n = S.text.length; i < n; ++i) {
              var ch = text[i];
              if (NEWLINE_CHARS.has(ch))
                  return i;
          }
          return -1;
      }

      function find(what, signal_eof) {
          var pos = S.text.indexOf(what, S.pos);
          if (signal_eof && pos == -1) throw EX_EOF;
          return pos;
      }

      function start_token() {
          S.tokline = S.line;
          S.tokcol = S.col;
          S.tokpos = S.pos;
      }

      var prev_was_dot = false;
      var previous_token = null;
      function token(type, value, is_comment) {
          S.regex_allowed = ((type == "operator" && !UNARY_POSTFIX.has(value)) ||
                             (type == "keyword" && KEYWORDS_BEFORE_EXPRESSION.has(value)) ||
                             (type == "punc" && PUNC_BEFORE_EXPRESSION.has(value))) ||
                             (type == "arrow");
          if (type == "punc" && value == ".") {
              prev_was_dot = true;
          } else if (!is_comment) {
              prev_was_dot = false;
          }
          var ret = {
              type    : type,
              value   : value,
              line    : S.tokline,
              col     : S.tokcol,
              pos     : S.tokpos,
              endline : S.line,
              endcol  : S.col,
              endpos  : S.pos,
              nlb     : S.newline_before,
              file    : filename
          };
          if (/^(?:num|string|regexp)$/i.test(type)) {
              ret.raw = $TEXT.substring(ret.pos, ret.endpos);
          }
          if (!is_comment) {
              ret.comments_before = S.comments_before;
              ret.comments_after = S.comments_before = [];
          }
          S.newline_before = false;
          ret = new AST_Token(ret);
          if (!is_comment) previous_token = ret;
          return ret;
      }

      function skip_whitespace() {
          while (WHITESPACE_CHARS.has(peek()))
              next();
      }

      function read_while(pred) {
          var ret = "", ch, i = 0;
          while ((ch = peek()) && pred(ch, i++))
              ret += next();
          return ret;
      }

      function parse_error(err) {
          js_error(err, filename, S.tokline, S.tokcol, S.tokpos);
      }

      function read_num(prefix) {
          var has_e = false, after_e = false, has_x = false, has_dot = prefix == ".";
          var num = read_while(function(ch, i) {
              var code = ch.charCodeAt(0);
              switch (code) {
                case 98: case 66: // bB
                  return (has_x = true); // Can occur in hex sequence, don't return false yet
                case 111: case 79: // oO
                case 120: case 88: // xX
                  return has_x ? false : (has_x = true);
                case 101: case 69: // eE
                  return has_x ? true : has_e ? false : (has_e = after_e = true);
                case 45: // -
                  return after_e || (i == 0 && !prefix);
                case 43: // +
                  return after_e;
                case (after_e = false, 46): // .
                  return (!has_dot && !has_x && !has_e) ? (has_dot = true) : false;
              }
              return RE_NUM_LITERAL.test(ch);
          });
          if (prefix) num = prefix + num;
          if (RE_OCT_NUMBER.test(num) && next_token.has_directive("use strict")) {
              parse_error("Legacy octal literals are not allowed in strict mode");
          }
          var valid = parse_js_number(num);
          if (!isNaN(valid)) {
              return token("num", valid);
          } else {
              parse_error("Invalid syntax: " + num);
          }
      }

      function read_escaped_char(in_string, strict_hex, template_string) {
          var ch = next(true, in_string);
          switch (ch.charCodeAt(0)) {
            case 110 : return "\n";
            case 114 : return "\r";
            case 116 : return "\t";
            case 98  : return "\b";
            case 118 : return "\u000b"; // \v
            case 102 : return "\f";
            case 120 : return String.fromCharCode(hex_bytes(2, strict_hex)); // \x
            case 117 : // \u
              if (peek() == "{") {
                  next(true);
                  if (peek() === "}")
                      parse_error("Expecting hex-character between {}");
                  while (peek() == "0") next(true); // No significance
                  var result, length = find("}", true) - S.pos;
                  // Avoid 32 bit integer overflow (1 << 32 === 1)
                  // We know first character isn't 0 and thus out of range anyway
                  if (length > 6 || (result = hex_bytes(length, strict_hex)) > 0x10FFFF) {
                      parse_error("Unicode reference out of bounds");
                  }
                  next(true);
                  return from_char_code(result);
              }
              return String.fromCharCode(hex_bytes(4, strict_hex));
            case 10  : return ""; // newline
            case 13  :            // \r
              if (peek() == "\n") { // DOS newline
                  next(true, in_string);
                  return "";
              }
          }
          if (ch >= "0" && ch <= "7") {
              if (template_string && strict_hex) {
                  parse_error("Octal escape sequences are not allowed in template strings");
              }
              return read_octal_escape_sequence(ch, strict_hex);
          }
          return ch;
      }

      function read_octal_escape_sequence(ch, strict_octal) {
          // Read
          var p = peek();
          if (p >= "0" && p <= "7") {
              ch += next(true);
              if (ch[0] <= "3" && (p = peek()) >= "0" && p <= "7")
                  ch += next(true);
          }

          // Parse
          if (ch === "0") return "\0";
          if (ch.length > 0 && next_token.has_directive("use strict") && strict_octal)
              parse_error("Legacy octal escape sequences are not allowed in strict mode");
          return String.fromCharCode(parseInt(ch, 8));
      }

      function hex_bytes(n, strict_hex) {
          var num = 0;
          for (; n > 0; --n) {
              if (!strict_hex && isNaN(parseInt(peek(), 16))) {
                  return parseInt(num, 16) || "";
              }
              var digit = next(true);
              if (isNaN(parseInt(digit, 16)))
                  parse_error("Invalid hex-character pattern in string");
              num += digit;
          }
          return parseInt(num, 16);
      }

      var read_string = with_eof_error("Unterminated string constant", function(quote_char) {
          var quote = next(), ret = "";
          for (;;) {
              var ch = next(true, true);
              if (ch == "\\") ch = read_escaped_char(true, true);
              else if (NEWLINE_CHARS.has(ch)) parse_error("Unterminated string constant");
              else if (ch == quote) break;
              ret += ch;
          }
          var tok = token("string", ret);
          tok.quote = quote_char;
          return tok;
      });

      var read_template_characters = with_eof_error("Unterminated template", function(begin) {
          if (begin) {
              S.template_braces.push(S.brace_counter);
          }
          var content = "", raw = "", ch, tok;
          next(true, true);
          while ((ch = next(true, true)) != "`") {
              if (ch == "\r") {
                  if (peek() == "\n") ++S.pos;
                  ch = "\n";
              } else if (ch == "$" && peek() == "{") {
                  next(true, true);
                  S.brace_counter++;
                  tok = token(begin ? "template_head" : "template_substitution", content);
                  tok.begin = begin;
                  tok.raw = raw;
                  tok.end = false;
                  return tok;
              }

              raw += ch;
              if (ch == "\\") {
                  var tmp = S.pos;
                  var prev_is_tag = previous_token && (previous_token.type === "name" || previous_token.type === "punc" && (previous_token.value === ")" || previous_token.value === "]"));
                  ch = read_escaped_char(true, !prev_is_tag, true);
                  raw += S.text.substr(tmp, S.pos - tmp);
              }

              content += ch;
          }
          S.template_braces.pop();
          tok = token(begin ? "template_head" : "template_substitution", content);
          tok.begin = begin;
          tok.raw = raw;
          tok.end = true;
          return tok;
      });

      function skip_line_comment(type) {
          var regex_allowed = S.regex_allowed;
          var i = find_eol(), ret;
          if (i == -1) {
              ret = S.text.substr(S.pos);
              S.pos = S.text.length;
          } else {
              ret = S.text.substring(S.pos, i);
              S.pos = i;
          }
          S.col = S.tokcol + (S.pos - S.tokpos);
          S.comments_before.push(token(type, ret, true));
          S.regex_allowed = regex_allowed;
          return next_token;
      }

      var skip_multiline_comment = with_eof_error("Unterminated multiline comment", function() {
          var regex_allowed = S.regex_allowed;
          var i = find("*/", true);
          var text = S.text.substring(S.pos, i).replace(/\r\n|\r|\u2028|\u2029/g, "\n");
          // update stream position
          forward(get_full_char_length(text) /* text length doesn't count \r\n as 2 char while S.pos - i does */ + 2);
          S.comments_before.push(token("comment2", text, true));
          S.newline_before = S.newline_before || text.includes("\n");
          S.regex_allowed = regex_allowed;
          return next_token;
      });

      var read_name = with_eof_error("Unterminated identifier name", function() {
          var name, ch, escaped = false;
          var read_escaped_identifier_char = function() {
              escaped = true;
              next();
              if (peek() !== "u") {
                  parse_error("Expecting UnicodeEscapeSequence -- uXXXX or u{XXXX}");
              }
              return read_escaped_char(false, true);
          };

          // Read first character (ID_Start)
          if ((name = peek()) === "\\") {
              name = read_escaped_identifier_char();
              if (!is_identifier_start(name)) {
                  parse_error("First identifier char is an invalid identifier char");
              }
          } else if (is_identifier_start(name)) {
              next();
          } else {
              return "";
          }

          // Read ID_Continue
          while ((ch = peek()) != null) {
              if ((ch = peek()) === "\\") {
                  ch = read_escaped_identifier_char();
                  if (!is_identifier_char(ch)) {
                      parse_error("Invalid escaped identifier char");
                  }
              } else {
                  if (!is_identifier_char(ch)) {
                      break;
                  }
                  next();
              }
              name += ch;
          }
          if (RESERVED_WORDS.has(name) && escaped) {
              parse_error("Escaped characters are not allowed in keywords");
          }
          return name;
      });

      var read_regexp = with_eof_error("Unterminated regular expression", function(source) {
          var prev_backslash = false, ch, in_class = false;
          while ((ch = next(true))) if (NEWLINE_CHARS.has(ch)) {
              parse_error("Unexpected line terminator");
          } else if (prev_backslash) {
              source += "\\" + ch;
              prev_backslash = false;
          } else if (ch == "[") {
              in_class = true;
              source += ch;
          } else if (ch == "]" && in_class) {
              in_class = false;
              source += ch;
          } else if (ch == "/" && !in_class) {
              break;
          } else if (ch == "\\") {
              prev_backslash = true;
          } else {
              source += ch;
          }
          var mods = read_name();
          try {
              var regexp = new RegExp(source, mods);
              regexp.raw_source = "/" + source + "/" + mods;
              return token("regexp", regexp);
          } catch(e) {
              parse_error(e.message);
          }
      });

      function read_operator(prefix) {
          function grow(op) {
              if (!peek()) return op;
              var bigger = op + peek();
              if (OPERATORS.has(bigger)) {
                  next();
                  return grow(bigger);
              } else {
                  return op;
              }
          }
          return token("operator", grow(prefix || next()));
      }

      function handle_slash() {
          next();
          switch (peek()) {
            case "/":
              next();
              return skip_line_comment("comment1");
            case "*":
              next();
              return skip_multiline_comment();
          }
          return S.regex_allowed ? read_regexp("") : read_operator("/");
      }

      function handle_eq_sign() {
          next();
          if (peek() === ">") {
              next();
              return token("arrow", "=>");
          } else {
              return read_operator("=");
          }
      }

      function handle_dot() {
          next();
          if (is_digit(peek().charCodeAt(0))) {
              return read_num(".");
          }
          if (peek() === ".") {
              next();  // Consume second dot
              next();  // Consume third dot
              return token("expand", "...");
          }

          return token("punc", ".");
      }

      function read_word() {
          var word = read_name();
          if (prev_was_dot) return token("name", word);
          return KEYWORDS_ATOM.has(word) ? token("atom", word)
              : !KEYWORDS.has(word) ? token("name", word)
              : OPERATORS.has(word) ? token("operator", word)
              : token("keyword", word);
      }

      function with_eof_error(eof_error, cont) {
          return function(x) {
              try {
                  return cont(x);
              } catch(ex) {
                  if (ex === EX_EOF) parse_error(eof_error);
                  else throw ex;
              }
          };
      }

      function next_token(force_regexp) {
          if (force_regexp != null)
              return read_regexp(force_regexp);
          if (shebang && S.pos == 0 && looking_at("#!")) {
              start_token();
              forward(2);
              skip_line_comment("comment5");
          }
          for (;;) {
              skip_whitespace();
              start_token();
              if (html5_comments) {
                  if (looking_at("<!--")) {
                      forward(4);
                      skip_line_comment("comment3");
                      continue;
                  }
                  if (looking_at("-->") && S.newline_before) {
                      forward(3);
                      skip_line_comment("comment4");
                      continue;
                  }
              }
              var ch = peek();
              if (!ch) return token("eof");
              var code = ch.charCodeAt(0);
              switch (code) {
                case 34: case 39: return read_string(ch);
                case 46: return handle_dot();
                case 47: {
                    var tok = handle_slash();
                    if (tok === next_token) continue;
                    return tok;
                }
                case 61: return handle_eq_sign();
                case 96: return read_template_characters(true);
                case 123:
                  S.brace_counter++;
                  break;
                case 125:
                  S.brace_counter--;
                  if (S.template_braces.length > 0
                      && S.template_braces[S.template_braces.length - 1] === S.brace_counter)
                      return read_template_characters(false);
                  break;
              }
              if (is_digit(code)) return read_num();
              if (PUNC_CHARS.has(ch)) return token("punc", next());
              if (OPERATOR_CHARS.has(ch)) return read_operator();
              if (code == 92 || is_identifier_start(ch)) return read_word();
              break;
          }
          parse_error("Unexpected character '" + ch + "'");
      }

      next_token.next = next;
      next_token.peek = peek;

      next_token.context = function(nc) {
          if (nc) S = nc;
          return S;
      };

      next_token.add_directive = function(directive) {
          S.directive_stack[S.directive_stack.length - 1].push(directive);

          if (S.directives[directive] === undefined) {
              S.directives[directive] = 1;
          } else {
              S.directives[directive]++;
          }
      };

      next_token.push_directives_stack = function() {
          S.directive_stack.push([]);
      };

      next_token.pop_directives_stack = function() {
          var directives = S.directive_stack[S.directive_stack.length - 1];

          for (var i = 0; i < directives.length; i++) {
              S.directives[directives[i]]--;
          }

          S.directive_stack.pop();
      };

      next_token.has_directive = function(directive) {
          return S.directives[directive] > 0;
      };

      return next_token;

  }

  /* -----[ Parser (constants) ]----- */

  var UNARY_PREFIX = makePredicate([
      "typeof",
      "void",
      "delete",
      "--",
      "++",
      "!",
      "~",
      "-",
      "+"
  ]);

  var UNARY_POSTFIX = makePredicate([ "--", "++" ]);

  var ASSIGNMENT = makePredicate([ "=", "+=", "-=", "/=", "*=", "**=", "%=", ">>=", "<<=", ">>>=", "|=", "^=", "&=" ]);

  var PRECEDENCE = (function(a, ret) {
      for (var i = 0; i < a.length; ++i) {
          var b = a[i];
          for (var j = 0; j < b.length; ++j) {
              ret[b[j]] = i + 1;
          }
      }
      return ret;
  })(
      [
          ["||"],
          ["&&"],
          ["|"],
          ["^"],
          ["&"],
          ["==", "===", "!=", "!=="],
          ["<", ">", "<=", ">=", "in", "instanceof"],
          [">>", "<<", ">>>"],
          ["+", "-"],
          ["*", "/", "%"],
          ["**"]
      ],
      {}
  );

  var ATOMIC_START_TOKEN = makePredicate([ "atom", "num", "string", "regexp", "name" ]);

  /* -----[ Parser ]----- */

  function parse($TEXT, options) {

      options = defaults(options, {
          bare_returns   : false,
          ecma           : 8,
          expression     : false,
          filename       : null,
          html5_comments : true,
          module         : false,
          shebang        : true,
          strict         : false,
          toplevel       : null,
      }, true);

      var S = {
          input         : (typeof $TEXT == "string"
                           ? tokenizer($TEXT, options.filename,
                                       options.html5_comments, options.shebang)
                           : $TEXT),
          token         : null,
          prev          : null,
          peeked        : null,
          in_function   : 0,
          in_async      : -1,
          in_generator  : -1,
          in_directives : true,
          in_loop       : 0,
          labels        : []
      };

      S.token = next();

      function is(type, value) {
          return is_token(S.token, type, value);
      }

      function peek() { return S.peeked || (S.peeked = S.input()); }

      function next() {
          S.prev = S.token;

          if (!S.peeked) peek();
          S.token = S.peeked;
          S.peeked = null;
          S.in_directives = S.in_directives && (
              S.token.type == "string" || is("punc", ";")
          );
          return S.token;
      }

      function prev() {
          return S.prev;
      }

      function croak(msg, line, col, pos) {
          var ctx = S.input.context();
          js_error(msg,
                   ctx.filename,
                   line != null ? line : ctx.tokline,
                   col != null ? col : ctx.tokcol,
                   pos != null ? pos : ctx.tokpos);
      }

      function token_error(token, msg) {
          croak(msg, token.line, token.col);
      }

      function unexpected(token) {
          if (token == null)
              token = S.token;
          token_error(token, "Unexpected token: " + token.type + " (" + token.value + ")");
      }

      function expect_token(type, val) {
          if (is(type, val)) {
              return next();
          }
          token_error(S.token, "Unexpected token " + S.token.type + " «" + S.token.value + "»" + ", expected " + type + " «" + val + "»");
      }

      function expect(punc) { return expect_token("punc", punc); }

      function has_newline_before(token) {
          return token.nlb || !all(token.comments_before, function(comment) {
              return !comment.nlb;
          });
      }

      function can_insert_semicolon() {
          return !options.strict
              && (is("eof") || is("punc", "}") || has_newline_before(S.token));
      }

      function is_in_generator() {
          return S.in_generator === S.in_function;
      }

      function is_in_async() {
          return S.in_async === S.in_function;
      }

      function semicolon(optional) {
          if (is("punc", ";")) next();
          else if (!optional && !can_insert_semicolon()) unexpected();
      }

      function parenthesised() {
          expect("(");
          var exp = expression(true);
          expect(")");
          return exp;
      }

      function embed_tokens(parser) {
          return function() {
              var start = S.token;
              var expr = parser.apply(null, arguments);
              var end = prev();
              expr.start = start;
              expr.end = end;
              return expr;
          };
      }

      function handle_regexp() {
          if (is("operator", "/") || is("operator", "/=")) {
              S.peeked = null;
              S.token = S.input(S.token.value.substr(1)); // force regexp
          }
      }

      var statement = embed_tokens(function(is_export_default, is_for_body, is_if_body) {
          handle_regexp();
          switch (S.token.type) {
            case "string":
              if (S.in_directives) {
                  var token = peek();
                  if (!S.token.raw.includes("\\")
                      && (is_token(token, "punc", ";")
                          || is_token(token, "punc", "}")
                          || has_newline_before(token)
                          || is_token(token, "eof"))) {
                      S.input.add_directive(S.token.value);
                  } else {
                      S.in_directives = false;
                  }
              }
              var dir = S.in_directives, stat = simple_statement();
              return dir && stat.body instanceof AST_String ? new AST_Directive(stat.body) : stat;
            case "template_head":
            case "num":
            case "regexp":
            case "operator":
            case "atom":
              return simple_statement();

            case "name":
              if (S.token.value == "async" && is_token(peek(), "keyword", "function")) {
                  next();
                  next();
                  if (is_for_body) {
                      croak("functions are not allowed as the body of a loop");
                  }
                  return function_(AST_Defun, false, true, is_export_default);
              }
              if (S.token.value == "import" && !is_token(peek(), "punc", "(")) {
                  next();
                  var node = import_();
                  semicolon();
                  return node;
              }
              return is_token(peek(), "punc", ":")
                  ? labeled_statement()
                  : simple_statement();

            case "punc":
              switch (S.token.value) {
                case "{":
                  return new AST_BlockStatement({
                      start : S.token,
                      body  : block_(),
                      end   : prev()
                  });
                case "[":
                case "(":
                  return simple_statement();
                case ";":
                  S.in_directives = false;
                  next();
                  return new AST_EmptyStatement();
                default:
                  unexpected();
              }

            case "keyword":
              switch (S.token.value) {
                case "break":
                  next();
                  return break_cont(AST_Break);

                case "continue":
                  next();
                  return break_cont(AST_Continue);

                case "debugger":
                  next();
                  semicolon();
                  return new AST_Debugger();

                case "do":
                  next();
                  var body = in_loop(statement);
                  expect_token("keyword", "while");
                  var condition = parenthesised();
                  semicolon(true);
                  return new AST_Do({
                      body      : body,
                      condition : condition
                  });

                case "while":
                  next();
                  return new AST_While({
                      condition : parenthesised(),
                      body      : in_loop(function() { return statement(false, true); })
                  });

                case "for":
                  next();
                  return for_();

                case "class":
                  next();
                  if (is_for_body) {
                      croak("classes are not allowed as the body of a loop");
                  }
                  if (is_if_body) {
                      croak("classes are not allowed as the body of an if");
                  }
                  return class_(AST_DefClass);

                case "function":
                  next();
                  if (is_for_body) {
                      croak("functions are not allowed as the body of a loop");
                  }
                  return function_(AST_Defun, false, false, is_export_default);

                case "if":
                  next();
                  return if_();

                case "return":
                  if (S.in_function == 0 && !options.bare_returns)
                      croak("'return' outside of function");
                  next();
                  var value = null;
                  if (is("punc", ";")) {
                      next();
                  } else if (!can_insert_semicolon()) {
                      value = expression(true);
                      semicolon();
                  }
                  return new AST_Return({
                      value: value
                  });

                case "switch":
                  next();
                  return new AST_Switch({
                      expression : parenthesised(),
                      body       : in_loop(switch_body_)
                  });

                case "throw":
                  next();
                  if (has_newline_before(S.token))
                      croak("Illegal newline after 'throw'");
                  var value = expression(true);
                  semicolon();
                  return new AST_Throw({
                      value: value
                  });

                case "try":
                  next();
                  return try_();

                case "var":
                  next();
                  var node = var_();
                  semicolon();
                  return node;

                case "let":
                  next();
                  var node = let_();
                  semicolon();
                  return node;

                case "const":
                  next();
                  var node = const_();
                  semicolon();
                  return node;

                case "with":
                  if (S.input.has_directive("use strict")) {
                      croak("Strict mode may not include a with statement");
                  }
                  next();
                  return new AST_With({
                      expression : parenthesised(),
                      body       : statement()
                  });

                case "export":
                  if (!is_token(peek(), "punc", "(")) {
                      next();
                      var node = export_();
                      if (is("punc", ";")) semicolon();
                      return node;
                  }
              }
          }
          unexpected();
      });

      function labeled_statement() {
          var label = as_symbol(AST_Label);
          if (label.name === "await" && is_in_async()) {
              token_error(S.prev, "await cannot be used as label inside async function");
          }
          if (find_if(function(l) { return l.name == label.name; }, S.labels)) {
              // ECMA-262, 12.12: An ECMAScript program is considered
              // syntactically incorrect if it contains a
              // LabelledStatement that is enclosed by a
              // LabelledStatement with the same Identifier as label.
              croak("Label " + label.name + " defined twice");
          }
          expect(":");
          S.labels.push(label);
          var stat = statement();
          S.labels.pop();
          if (!(stat instanceof AST_IterationStatement)) {
              // check for `continue` that refers to this label.
              // those should be reported as syntax errors.
              // https://github.com/mishoo/UglifyJS2/issues/287
              label.references.forEach(function(ref) {
                  if (ref instanceof AST_Continue) {
                      ref = ref.label.start;
                      croak("Continue label `" + label.name + "` refers to non-IterationStatement.",
                            ref.line, ref.col, ref.pos);
                  }
              });
          }
          return new AST_LabeledStatement({ body: stat, label: label });
      }

      function simple_statement(tmp) {
          return new AST_SimpleStatement({ body: (tmp = expression(true), semicolon(), tmp) });
      }

      function break_cont(type) {
          var label = null, ldef;
          if (!can_insert_semicolon()) {
              label = as_symbol(AST_LabelRef, true);
          }
          if (label != null) {
              ldef = find_if(function(l) { return l.name == label.name; }, S.labels);
              if (!ldef)
                  croak("Undefined label " + label.name);
              label.thedef = ldef;
          } else if (S.in_loop == 0)
              croak(type.TYPE + " not inside a loop or switch");
          semicolon();
          var stat = new type({ label: label });
          if (ldef) ldef.references.push(stat);
          return stat;
      }

      function for_() {
          var for_await_error = "`for await` invalid in this context";
          var await_tok = S.token;
          if (await_tok.type == "name" && await_tok.value == "await") {
              if (!is_in_async()) {
                  token_error(await_tok, for_await_error);
              }
              next();
          } else {
              await_tok = false;
          }
          expect("(");
          var init = null;
          if (!is("punc", ";")) {
              init =
                  is("keyword", "var") ? (next(), var_(true)) :
                  is("keyword", "let") ? (next(), let_(true)) :
                  is("keyword", "const") ? (next(), const_(true)) :
                                         expression(true, true);
              var is_in = is("operator", "in");
              var is_of = is("name", "of");
              if (await_tok && !is_of) {
                  token_error(await_tok, for_await_error);
              }
              if (is_in || is_of) {
                  if (init instanceof AST_Definitions) {
                      if (init.definitions.length > 1)
                          token_error(init.start, "Only one variable declaration allowed in for..in loop");
                  } else if (!(is_assignable(init) || (init = to_destructuring(init)) instanceof AST_Destructuring)) {
                      token_error(init.start, "Invalid left-hand side in for..in loop");
                  }
                  next();
                  if (is_in) {
                      return for_in(init);
                  } else {
                      return for_of(init, !!await_tok);
                  }
              }
          } else if (await_tok) {
              token_error(await_tok, for_await_error);
          }
          return regular_for(init);
      }

      function regular_for(init) {
          expect(";");
          var test = is("punc", ";") ? null : expression(true);
          expect(";");
          var step = is("punc", ")") ? null : expression(true);
          expect(")");
          return new AST_For({
              init      : init,
              condition : test,
              step      : step,
              body      : in_loop(function() { return statement(false, true); })
          });
      }

      function for_of(init, is_await) {
          var lhs = init instanceof AST_Definitions ? init.definitions[0].name : null;
          var obj = expression(true);
          expect(")");
          return new AST_ForOf({
              await  : is_await,
              init   : init,
              name   : lhs,
              object : obj,
              body   : in_loop(function() { return statement(false, true); })
          });
      }

      function for_in(init) {
          var obj = expression(true);
          expect(")");
          return new AST_ForIn({
              init   : init,
              object : obj,
              body   : in_loop(function() { return statement(false, true); })
          });
      }

      var arrow_function = function(start, argnames, is_async) {
          if (has_newline_before(S.token)) {
              croak("Unexpected newline before arrow (=>)");
          }

          expect_token("arrow", "=>");

          var body = _function_body(is("punc", "{"), false, is_async);

          var end =
              body instanceof Array && body.length ? body[body.length - 1].end :
              body instanceof Array ? start :
                  body.end;

          return new AST_Arrow({
              start    : start,
              end      : end,
              async    : is_async,
              argnames : argnames,
              body     : body
          });
      };

      var function_ = function(ctor, is_generator_property, is_async, is_export_default) {

          var in_statement = ctor === AST_Defun;
          var is_generator = is("operator", "*");
          if (is_generator) {
              next();
          }

          var name = is("name") ? as_symbol(in_statement ? AST_SymbolDefun : AST_SymbolLambda) : null;
          if (in_statement && !name) {
              if (is_export_default) {
                  ctor = AST_Function;
              } else {
                  unexpected();
              }
          }

          if (name && ctor !== AST_Accessor && !(name instanceof AST_SymbolDeclaration))
              unexpected(prev());

          var args = [];
          var body = _function_body(true, is_generator || is_generator_property, is_async, name, args);
          return new ctor({
              start : args.start,
              end   : body.end,
              is_generator: is_generator,
              async : is_async,
              name  : name,
              argnames: args,
              body  : body
          });
      };

      function track_used_binding_identifiers(is_parameter, strict) {
          var parameters = new Set();
          var duplicate = false;
          var default_assignment = false;
          var spread = false;
          var strict_mode = !!strict;
          var tracker = {
              add_parameter: function(token) {
                  if (parameters.has(token.value)) {
                      if (duplicate === false) {
                          duplicate = token;
                      }
                      tracker.check_strict();
                  } else {
                      parameters.add(token.value);
                      if (is_parameter) {
                          switch (token.value) {
                            case "arguments":
                            case "eval":
                            case "yield":
                              if (strict_mode) {
                                  token_error(token, "Unexpected " + token.value + " identifier as parameter inside strict mode");
                              }
                              break;
                            default:
                              if (RESERVED_WORDS.has(token.value)) {
                                  unexpected();
                              }
                          }
                      }
                  }
              },
              mark_default_assignment: function(token) {
                  if (default_assignment === false) {
                      default_assignment = token;
                  }
              },
              mark_spread: function(token) {
                  if (spread === false) {
                      spread = token;
                  }
              },
              mark_strict_mode: function() {
                  strict_mode = true;
              },
              is_strict: function() {
                  return default_assignment !== false || spread !== false || strict_mode;
              },
              check_strict: function() {
                  if (tracker.is_strict() && duplicate !== false) {
                      token_error(duplicate, "Parameter " + duplicate.value + " was used already");
                  }
              }
          };

          return tracker;
      }

      function parameters(params) {
          var used_parameters = track_used_binding_identifiers(true, S.input.has_directive("use strict"));

          expect("(");

          while (!is("punc", ")")) {
              var param = parameter(used_parameters);
              params.push(param);

              if (!is("punc", ")")) {
                  expect(",");
                  if (is("punc", ")") && options.ecma < 8) unexpected();
              }

              if (param instanceof AST_Expansion) {
                  break;
              }
          }

          next();
      }

      function parameter(used_parameters, symbol_type) {
          var param;
          var expand = false;
          if (used_parameters === undefined) {
              used_parameters = track_used_binding_identifiers(true, S.input.has_directive("use strict"));
          }
          if (is("expand", "...")) {
              expand = S.token;
              used_parameters.mark_spread(S.token);
              next();
          }
          param = binding_element(used_parameters, symbol_type);

          if (is("operator", "=") && expand === false) {
              used_parameters.mark_default_assignment(S.token);
              next();
              param = new AST_DefaultAssign({
                  start: param.start,
                  left: param,
                  operator: "=",
                  right: expression(false),
                  end: S.token
              });
          }

          if (expand !== false) {
              if (!is("punc", ")")) {
                  unexpected();
              }
              param = new AST_Expansion({
                  start: expand,
                  expression: param,
                  end: expand
              });
          }
          used_parameters.check_strict();

          return param;
      }

      function binding_element(used_parameters, symbol_type) {
          var elements = [];
          var first = true;
          var is_expand = false;
          var expand_token;
          var first_token = S.token;
          if (used_parameters === undefined) {
              used_parameters = track_used_binding_identifiers(false, S.input.has_directive("use strict"));
          }
          symbol_type = symbol_type === undefined ? AST_SymbolFunarg : symbol_type;
          if (is("punc", "[")) {
              next();
              while (!is("punc", "]")) {
                  if (first) {
                      first = false;
                  } else {
                      expect(",");
                  }

                  if (is("expand", "...")) {
                      is_expand = true;
                      expand_token = S.token;
                      used_parameters.mark_spread(S.token);
                      next();
                  }
                  if (is("punc")) {
                      switch (S.token.value) {
                        case ",":
                          elements.push(new AST_Hole({
                              start: S.token,
                              end: S.token
                          }));
                          continue;
                        case "]": // Trailing comma after last element
                          break;
                        case "[":
                        case "{":
                          elements.push(binding_element(used_parameters, symbol_type));
                          break;
                        default:
                          unexpected();
                      }
                  } else if (is("name")) {
                      used_parameters.add_parameter(S.token);
                      elements.push(as_symbol(symbol_type));
                  } else {
                      croak("Invalid function parameter");
                  }
                  if (is("operator", "=") && is_expand === false) {
                      used_parameters.mark_default_assignment(S.token);
                      next();
                      elements[elements.length - 1] = new AST_DefaultAssign({
                          start: elements[elements.length - 1].start,
                          left: elements[elements.length - 1],
                          operator: "=",
                          right: expression(false),
                          end: S.token
                      });
                  }
                  if (is_expand) {
                      if (!is("punc", "]")) {
                          croak("Rest element must be last element");
                      }
                      elements[elements.length - 1] = new AST_Expansion({
                          start: expand_token,
                          expression: elements[elements.length - 1],
                          end: expand_token
                      });
                  }
              }
              expect("]");
              used_parameters.check_strict();
              return new AST_Destructuring({
                  start: first_token,
                  names: elements,
                  is_array: true,
                  end: prev()
              });
          } else if (is("punc", "{")) {
              next();
              while (!is("punc", "}")) {
                  if (first) {
                      first = false;
                  } else {
                      expect(",");
                  }
                  if (is("expand", "...")) {
                      is_expand = true;
                      expand_token = S.token;
                      used_parameters.mark_spread(S.token);
                      next();
                  }
                  if (is("name") && (is_token(peek(), "punc") || is_token(peek(), "operator")) && [",", "}", "="].includes(peek().value)) {
                      used_parameters.add_parameter(S.token);
                      var start = prev();
                      var value = as_symbol(symbol_type);
                      if (is_expand) {
                          elements.push(new AST_Expansion({
                              start: expand_token,
                              expression: value,
                              end: value.end,
                          }));
                      } else {
                          elements.push(new AST_ObjectKeyVal({
                              start: start,
                              key: value.name,
                              value: value,
                              end: value.end,
                          }));
                      }
                  } else if (is("punc", "}")) {
                      continue; // Allow trailing hole
                  } else {
                      var property_token = S.token;
                      var property = as_property_name();
                      if (property === null) {
                          unexpected(prev());
                      } else if (prev().type === "name" && !is("punc", ":")) {
                          elements.push(new AST_ObjectKeyVal({
                              start: prev(),
                              key: property,
                              value: new symbol_type({
                                  start: prev(),
                                  name: property,
                                  end: prev()
                              }),
                              end: prev()
                          }));
                      } else {
                          expect(":");
                          elements.push(new AST_ObjectKeyVal({
                              start: property_token,
                              quote: property_token.quote,
                              key: property,
                              value: binding_element(used_parameters, symbol_type),
                              end: prev()
                          }));
                      }
                  }
                  if (is_expand) {
                      if (!is("punc", "}")) {
                          croak("Rest element must be last element");
                      }
                  } else if (is("operator", "=")) {
                      used_parameters.mark_default_assignment(S.token);
                      next();
                      elements[elements.length - 1].value = new AST_DefaultAssign({
                          start: elements[elements.length - 1].value.start,
                          left: elements[elements.length - 1].value,
                          operator: "=",
                          right: expression(false),
                          end: S.token
                      });
                  }
              }
              expect("}");
              used_parameters.check_strict();
              return new AST_Destructuring({
                  start: first_token,
                  names: elements,
                  is_array: false,
                  end: prev()
              });
          } else if (is("name")) {
              used_parameters.add_parameter(S.token);
              return as_symbol(symbol_type);
          } else {
              croak("Invalid function parameter");
          }
      }

      function params_or_seq_(allow_arrows, maybe_sequence) {
          var spread_token;
          var invalid_sequence;
          var trailing_comma;
          var a = [];
          expect("(");
          while (!is("punc", ")")) {
              if (spread_token) unexpected(spread_token);
              if (is("expand", "...")) {
                  spread_token = S.token;
                  if (maybe_sequence) invalid_sequence = S.token;
                  next();
                  a.push(new AST_Expansion({
                      start: prev(),
                      expression: expression(),
                      end: S.token,
                  }));
              } else {
                  a.push(expression());
              }
              if (!is("punc", ")")) {
                  expect(",");
                  if (is("punc", ")")) {
                      if (options.ecma < 8) unexpected();
                      trailing_comma = prev();
                      if (maybe_sequence) invalid_sequence = trailing_comma;
                  }
              }
          }
          expect(")");
          if (allow_arrows && is("arrow", "=>")) {
              if (spread_token && trailing_comma) unexpected(trailing_comma);
          } else if (invalid_sequence) {
              unexpected(invalid_sequence);
          }
          return a;
      }

      function _function_body(block, generator, is_async, name, args) {
          var loop = S.in_loop;
          var labels = S.labels;
          var current_generator = S.in_generator;
          var current_async = S.in_async;
          ++S.in_function;
          if (generator)
              S.in_generator = S.in_function;
          if (is_async)
              S.in_async = S.in_function;
          if (args) parameters(args);
          if (block)
              S.in_directives = true;
          S.in_loop = 0;
          S.labels = [];
          if (block) {
              S.input.push_directives_stack();
              var a = block_();
              if (name) _verify_symbol(name);
              if (args) args.forEach(_verify_symbol);
              S.input.pop_directives_stack();
          } else {
              var a = expression(false);
          }
          --S.in_function;
          S.in_loop = loop;
          S.labels = labels;
          S.in_generator = current_generator;
          S.in_async = current_async;
          return a;
      }

      function _await_expression() {
          // Previous token must be "await" and not be interpreted as an identifier
          if (!is_in_async()) {
              croak("Unexpected await expression outside async function",
                  S.prev.line, S.prev.col, S.prev.pos);
          }
          // the await expression is parsed as a unary expression in Babel
          return new AST_Await({
              start: prev(),
              end: S.token,
              expression : maybe_unary(true),
          });
      }

      function _yield_expression() {
          // Previous token must be keyword yield and not be interpret as an identifier
          if (!is_in_generator()) {
              croak("Unexpected yield expression outside generator function",
                  S.prev.line, S.prev.col, S.prev.pos);
          }
          var start = S.token;
          var star = false;
          var has_expression = true;

          // Attempt to get expression or star (and then the mandatory expression)
          // behind yield on the same line.
          //
          // If nothing follows on the same line of the yieldExpression,
          // it should default to the value `undefined` for yield to return.
          // In that case, the `undefined` stored as `null` in ast.
          //
          // Note 1: It isn't allowed for yield* to close without an expression
          // Note 2: If there is a nlb between yield and star, it is interpret as
          //         yield <explicit undefined> <inserted automatic semicolon> *
          if (can_insert_semicolon() ||
              (is("punc") && PUNC_AFTER_EXPRESSION.has(S.token.value))) {
              has_expression = false;

          } else if (is("operator", "*")) {
              star = true;
              next();
          }

          return new AST_Yield({
              start      : start,
              is_star    : star,
              expression : has_expression ? expression() : null,
              end        : prev()
          });
      }

      function if_() {
          var cond = parenthesised(), body = statement(false, false, true), belse = null;
          if (is("keyword", "else")) {
              next();
              belse = statement(false, false, true);
          }
          return new AST_If({
              condition   : cond,
              body        : body,
              alternative : belse
          });
      }

      function block_() {
          expect("{");
          var a = [];
          while (!is("punc", "}")) {
              if (is("eof")) unexpected();
              a.push(statement());
          }
          next();
          return a;
      }

      function switch_body_() {
          expect("{");
          var a = [], cur = null, branch = null, tmp;
          while (!is("punc", "}")) {
              if (is("eof")) unexpected();
              if (is("keyword", "case")) {
                  if (branch) branch.end = prev();
                  cur = [];
                  branch = new AST_Case({
                      start      : (tmp = S.token, next(), tmp),
                      expression : expression(true),
                      body       : cur
                  });
                  a.push(branch);
                  expect(":");
              } else if (is("keyword", "default")) {
                  if (branch) branch.end = prev();
                  cur = [];
                  branch = new AST_Default({
                      start : (tmp = S.token, next(), expect(":"), tmp),
                      body  : cur
                  });
                  a.push(branch);
              } else {
                  if (!cur) unexpected();
                  cur.push(statement());
              }
          }
          if (branch) branch.end = prev();
          next();
          return a;
      }

      function try_() {
          var body = block_(), bcatch = null, bfinally = null;
          if (is("keyword", "catch")) {
              var start = S.token;
              next();
              if (is("punc", "{")) {
                  var name = null;
              } else {
                  expect("(");
                  var name = parameter(undefined, AST_SymbolCatch);
                  expect(")");
              }
              bcatch = new AST_Catch({
                  start   : start,
                  argname : name,
                  body    : block_(),
                  end     : prev()
              });
          }
          if (is("keyword", "finally")) {
              var start = S.token;
              next();
              bfinally = new AST_Finally({
                  start : start,
                  body  : block_(),
                  end   : prev()
              });
          }
          if (!bcatch && !bfinally)
              croak("Missing catch/finally blocks");
          return new AST_Try({
              body     : body,
              bcatch   : bcatch,
              bfinally : bfinally
          });
      }

      function vardefs(no_in, kind) {
          var a = [];
          var def;
          for (;;) {
              var sym_type =
                  kind === "var" ? AST_SymbolVar :
                  kind === "const" ? AST_SymbolConst :
                  kind === "let" ? AST_SymbolLet : null;
              if (is("punc", "{") || is("punc", "[")) {
                  def = new AST_VarDef({
                      start: S.token,
                      name: binding_element(undefined ,sym_type),
                      value: is("operator", "=") ? (expect_token("operator", "="), expression(false, no_in)) : null,
                      end: prev()
                  });
              } else {
                  def = new AST_VarDef({
                      start : S.token,
                      name  : as_symbol(sym_type),
                      value : is("operator", "=")
                          ? (next(), expression(false, no_in))
                          : !no_in && kind === "const"
                              ? croak("Missing initializer in const declaration") : null,
                      end   : prev()
                  });
                  if (def.name.name == "import") croak("Unexpected token: import");
              }
              a.push(def);
              if (!is("punc", ","))
                  break;
              next();
          }
          return a;
      }

      var var_ = function(no_in) {
          return new AST_Var({
              start       : prev(),
              definitions : vardefs(no_in, "var"),
              end         : prev()
          });
      };

      var let_ = function(no_in) {
          return new AST_Let({
              start       : prev(),
              definitions : vardefs(no_in, "let"),
              end         : prev()
          });
      };

      var const_ = function(no_in) {
          return new AST_Const({
              start       : prev(),
              definitions : vardefs(no_in, "const"),
              end         : prev()
          });
      };

      var new_ = function(allow_calls) {
          var start = S.token;
          expect_token("operator", "new");
          if (is("punc", ".")) {
              next();
              expect_token("name", "target");
              return subscripts(new AST_NewTarget({
                  start : start,
                  end   : prev()
              }), allow_calls);
          }
          var newexp = expr_atom(false), args;
          if (is("punc", "(")) {
              next();
              args = expr_list(")", options.ecma >= 8);
          } else {
              args = [];
          }
          var call = new AST_New({
              start      : start,
              expression : newexp,
              args       : args,
              end        : prev()
          });
          mark_pure(call);
          return subscripts(call, allow_calls);
      };

      function as_atom_node() {
          var tok = S.token, ret;
          switch (tok.type) {
            case "name":
              ret = _make_symbol(AST_SymbolRef);
              break;
            case "num":
              ret = new AST_Number({ start: tok, end: tok, value: tok.value });
              break;
            case "string":
              ret = new AST_String({
                  start : tok,
                  end   : tok,
                  value : tok.value,
                  quote : tok.quote
              });
              break;
            case "regexp":
              ret = new AST_RegExp({ start: tok, end: tok, value: tok.value });
              break;
            case "atom":
              switch (tok.value) {
                case "false":
                  ret = new AST_False({ start: tok, end: tok });
                  break;
                case "true":
                  ret = new AST_True({ start: tok, end: tok });
                  break;
                case "null":
                  ret = new AST_Null({ start: tok, end: tok });
                  break;
              }
              break;
          }
          next();
          return ret;
      }

      function to_fun_args(ex, _, __, default_seen_above) {
          var insert_default = function(ex, default_value) {
              if (default_value) {
                  return new AST_DefaultAssign({
                      start: ex.start,
                      left: ex,
                      operator: "=",
                      right: default_value,
                      end: default_value.end
                  });
              }
              return ex;
          };
          if (ex instanceof AST_Object) {
              return insert_default(new AST_Destructuring({
                  start: ex.start,
                  end: ex.end,
                  is_array: false,
                  names: ex.properties.map(to_fun_args)
              }), default_seen_above);
          } else if (ex instanceof AST_ObjectKeyVal) {
              ex.value = to_fun_args(ex.value, 0, [ex.key]);
              return insert_default(ex, default_seen_above);
          } else if (ex instanceof AST_Hole) {
              return ex;
          } else if (ex instanceof AST_Destructuring) {
              ex.names = ex.names.map(to_fun_args);
              return insert_default(ex, default_seen_above);
          } else if (ex instanceof AST_SymbolRef) {
              return insert_default(new AST_SymbolFunarg({
                  name: ex.name,
                  start: ex.start,
                  end: ex.end
              }), default_seen_above);
          } else if (ex instanceof AST_Expansion) {
              ex.expression = to_fun_args(ex.expression);
              return insert_default(ex, default_seen_above);
          } else if (ex instanceof AST_Array) {
              return insert_default(new AST_Destructuring({
                  start: ex.start,
                  end: ex.end,
                  is_array: true,
                  names: ex.elements.map(to_fun_args)
              }), default_seen_above);
          } else if (ex instanceof AST_Assign) {
              return insert_default(to_fun_args(ex.left, undefined, undefined, ex.right), default_seen_above);
          } else if (ex instanceof AST_DefaultAssign) {
              ex.left = to_fun_args(ex.left, 0, [ex.left]);
              return ex;
          } else {
              croak("Invalid function parameter", ex.start.line, ex.start.col);
          }
      }

      var expr_atom = function(allow_calls, allow_arrows) {
          if (is("operator", "new")) {
              return new_(allow_calls);
          }
          var start = S.token;
          var peeked;
          var async = is("name", "async")
              && (peeked = peek()).value != "["
              && peeked.type != "arrow"
              && as_atom_node();
          if (is("punc")) {
              switch (S.token.value) {
                case "(":
                  if (async && !allow_calls) break;
                  var exprs = params_or_seq_(allow_arrows, !async);
                  if (allow_arrows && is("arrow", "=>")) {
                      return arrow_function(start, exprs.map(to_fun_args), !!async);
                  }
                  var ex = async ? new AST_Call({
                      expression: async,
                      args: exprs
                  }) : exprs.length == 1 ? exprs[0] : new AST_Sequence({
                      expressions: exprs
                  });
                  if (ex.start) {
                      var len = start.comments_before.length;
                      [].unshift.apply(ex.start.comments_before, start.comments_before);
                      start.comments_before = ex.start.comments_before;
                      start.comments_before_length = len;
                      if (len == 0 && start.comments_before.length > 0) {
                          var comment = start.comments_before[0];
                          if (!comment.nlb) {
                              comment.nlb = start.nlb;
                              start.nlb = false;
                          }
                      }
                      start.comments_after = ex.start.comments_after;
                  }
                  ex.start = start;
                  var end = prev();
                  if (ex.end) {
                      end.comments_before = ex.end.comments_before;
                      [].push.apply(ex.end.comments_after, end.comments_after);
                      end.comments_after = ex.end.comments_after;
                  }
                  ex.end = end;
                  if (ex instanceof AST_Call) mark_pure(ex);
                  return subscripts(ex, allow_calls);
                case "[":
                  return subscripts(array_(), allow_calls);
                case "{":
                  return subscripts(object_or_destructuring_(), allow_calls);
              }
              if (!async) unexpected();
          }
          if (allow_arrows && is("name") && is_token(peek(), "arrow")) {
              var param = new AST_SymbolFunarg({
                  name: S.token.value,
                  start: start,
                  end: start,
              });
              next();
              return arrow_function(start, [param], !!async);
          }
          if (is("keyword", "function")) {
              next();
              var func = function_(AST_Function, false, !!async);
              func.start = start;
              func.end = prev();
              return subscripts(func, allow_calls);
          }
          if (async) return subscripts(async, allow_calls);
          if (is("keyword", "class")) {
              next();
              var cls = class_(AST_ClassExpression);
              cls.start = start;
              cls.end = prev();
              return subscripts(cls, allow_calls);
          }
          if (is("template_head")) {
              return subscripts(template_string(false), allow_calls);
          }
          if (ATOMIC_START_TOKEN.has(S.token.type)) {
              return subscripts(as_atom_node(), allow_calls);
          }
          unexpected();
      };

      function template_string(tagged) {
          var segments = [], start = S.token;

          segments.push(new AST_TemplateSegment({
              start: S.token,
              raw: S.token.raw,
              value: S.token.value,
              end: S.token
          }));
          while (S.token.end === false) {
              next();
              handle_regexp();
              segments.push(expression(true));

              if (!is_token("template_substitution")) {
                  unexpected();
              }

              segments.push(new AST_TemplateSegment({
                  start: S.token,
                  raw: S.token.raw,
                  value: S.token.value,
                  end: S.token
              }));
          }
          next();

          return new AST_TemplateString({
              start: start,
              segments: segments,
              end: S.token
          });
      }

      function expr_list(closing, allow_trailing_comma, allow_empty) {
          var first = true, a = [];
          while (!is("punc", closing)) {
              if (first) first = false; else expect(",");
              if (allow_trailing_comma && is("punc", closing)) break;
              if (is("punc", ",") && allow_empty) {
                  a.push(new AST_Hole({ start: S.token, end: S.token }));
              } else if (is("expand", "...")) {
                  next();
                  a.push(new AST_Expansion({start: prev(), expression: expression(),end: S.token}));
              } else {
                  a.push(expression(false));
              }
          }
          next();
          return a;
      }

      var array_ = embed_tokens(function() {
          expect("[");
          return new AST_Array({
              elements: expr_list("]", !options.strict, true)
          });
      });

      var create_accessor = embed_tokens(function(is_generator, is_async) {
          return function_(AST_Accessor, is_generator, is_async);
      });

      var object_or_destructuring_ = embed_tokens(function object_or_destructuring_() {
          var start = S.token, first = true, a = [];
          expect("{");
          while (!is("punc", "}")) {
              if (first) first = false; else expect(",");
              if (!options.strict && is("punc", "}"))
                  // allow trailing comma
                  break;

              start = S.token;
              if (start.type == "expand") {
                  next();
                  a.push(new AST_Expansion({
                      start: start,
                      expression: expression(false),
                      end: prev(),
                  }));
                  continue;
              }

              var name = as_property_name();
              var value;

              // Check property and fetch value
              if (!is("punc", ":")) {
                  var concise = concise_method_or_getset(name, start);
                  if (concise) {
                      a.push(concise);
                      continue;
                  }

                  value = new AST_SymbolRef({
                      start: prev(),
                      name: name,
                      end: prev()
                  });
              } else if (name === null) {
                  unexpected(prev());
              } else {
                  next(); // `:` - see first condition
                  value = expression(false);
              }

              // Check for default value and alter value accordingly if necessary
              if (is("operator", "=")) {
                  next();
                  value = new AST_Assign({
                      start: start,
                      left: value,
                      operator: "=",
                      right: expression(false),
                      end: prev()
                  });
              }

              // Create property
              a.push(new AST_ObjectKeyVal({
                  start: start,
                  quote: start.quote,
                  key: name instanceof AST_Node ? name : "" + name,
                  value: value,
                  end: prev()
              }));
          }
          next();
          return new AST_Object({ properties: a });
      });

      function class_(KindOfClass) {
          var start, method, class_name, extends_, a = [];

          S.input.push_directives_stack(); // Push directive stack, but not scope stack
          S.input.add_directive("use strict");

          if (S.token.type == "name" && S.token.value != "extends") {
              class_name = as_symbol(KindOfClass === AST_DefClass ? AST_SymbolDefClass : AST_SymbolClass);
          }

          if (KindOfClass === AST_DefClass && !class_name) {
              unexpected();
          }

          if (S.token.value == "extends") {
              next();
              extends_ = expression(true);
          }

          expect("{");

          if (is("punc", ";")) { next(); }  // Leading semicolons are okay in class bodies.
          while (!is("punc", "}")) {
              start = S.token;
              method = concise_method_or_getset(as_property_name(), start, true);
              if (!method) { unexpected(); }
              a.push(method);
              if (is("punc", ";")) { next(); }
          }

          S.input.pop_directives_stack();

          next();

          return new KindOfClass({
              start: start,
              name: class_name,
              extends: extends_,
              properties: a,
              end: prev(),
          });
      }

      function concise_method_or_getset(name, start, is_class) {
          var get_ast = function(name, token) {
              if (typeof name === "string" || typeof name === "number") {
                  return new AST_SymbolMethod({
                      start: token,
                      name: "" + name,
                      end: prev()
                  });
              } else if (name === null) {
                  unexpected();
              }
              return name;
          };
          var is_async = false;
          var is_static = false;
          var is_generator = false;
          var property_token = start;
          if (is_class && name === "static" && !is("punc", "(")) {
              is_static = true;
              property_token = S.token;
              name = as_property_name();
          }
          if (name === "async" && !is("punc", "(") && !is("punc", ",") && !is("punc", "}")) {
              is_async = true;
              property_token = S.token;
              name = as_property_name();
          }
          if (name === null) {
              is_generator = true;
              property_token = S.token;
              name = as_property_name();
              if (name === null) {
                  unexpected();
              }
          }
          if (is("punc", "(")) {
              name = get_ast(name, start);
              var node = new AST_ConciseMethod({
                  start       : start,
                  static      : is_static,
                  is_generator: is_generator,
                  async       : is_async,
                  key         : name,
                  quote       : name instanceof AST_SymbolMethod ?
                                property_token.quote : undefined,
                  value       : create_accessor(is_generator, is_async),
                  end         : prev()
              });
              return node;
          }
          property_token = S.token;
          if (name == "get") {
              if (!is("punc") || is("punc", "[")) {
                  name = get_ast(as_property_name(), start);
                  return new AST_ObjectGetter({
                      start : start,
                      static: is_static,
                      key   : name,
                      quote : name instanceof AST_SymbolMethod ?
                              property_token.quote : undefined,
                      value : create_accessor(),
                      end   : prev()
                  });
              }
          } else if (name == "set") {
              if (!is("punc") || is("punc", "[")) {
                  name = get_ast(as_property_name(), start);
                  return new AST_ObjectSetter({
                      start : start,
                      static: is_static,
                      key   : name,
                      quote : name instanceof AST_SymbolMethod ?
                              property_token.quote : undefined,
                      value : create_accessor(),
                      end   : prev()
                  });
              }
          }
      }

      function import_() {
          var start = prev();
          var imported_name;
          var imported_names;
          if (is("name")) {
              imported_name = as_symbol(AST_SymbolImport);
          }

          if (is("punc", ",")) {
              next();
          }

          imported_names = map_names(true);

          if (imported_names || imported_name) {
              expect_token("name", "from");
          }
          var mod_str = S.token;
          if (mod_str.type !== "string") {
              unexpected();
          }
          next();
          return new AST_Import({
              start: start,
              imported_name: imported_name,
              imported_names: imported_names,
              module_name: new AST_String({
                  start: mod_str,
                  value: mod_str.value,
                  quote: mod_str.quote,
                  end: mod_str,
              }),
              end: S.token,
          });
      }

      function map_name(is_import) {
          function make_symbol(type) {
              return new type({
                  name: as_property_name(),
                  start: prev(),
                  end: prev()
              });
          }

          var foreign_type = is_import ? AST_SymbolImportForeign : AST_SymbolExportForeign;
          var type = is_import ? AST_SymbolImport : AST_SymbolExport;
          var start = S.token;
          var foreign_name;
          var name;

          if (is_import) {
              foreign_name = make_symbol(foreign_type);
          } else {
              name = make_symbol(type);
          }
          if (is("name", "as")) {
              next();  // The "as" word
              if (is_import) {
                  name = make_symbol(type);
              } else {
                  foreign_name = make_symbol(foreign_type);
              }
          } else if (is_import) {
              name = new type(foreign_name);
          } else {
              foreign_name = new foreign_type(name);
          }

          return new AST_NameMapping({
              start: start,
              foreign_name: foreign_name,
              name: name,
              end: prev(),
          });
      }

      function map_nameAsterisk(is_import, name) {
          var foreign_type = is_import ? AST_SymbolImportForeign : AST_SymbolExportForeign;
          var type = is_import ? AST_SymbolImport : AST_SymbolExport;
          var start = S.token;
          var foreign_name;
          var end = prev();

          name = name || new type({
              name: "*",
              start: start,
              end: end,
          });

          foreign_name = new foreign_type({
              name: "*",
              start: start,
              end: end,
          });

          return new AST_NameMapping({
              start: start,
              foreign_name: foreign_name,
              name: name,
              end: end,
          });
      }

      function map_names(is_import) {
          var names;
          if (is("punc", "{")) {
              next();
              names = [];
              while (!is("punc", "}")) {
                  names.push(map_name(is_import));
                  if (is("punc", ",")) {
                      next();
                  }
              }
              next();
          } else if (is("operator", "*")) {
              var name;
              next();
              if (is_import && is("name", "as")) {
                  next();  // The "as" word
                  name = as_symbol(is_import ? AST_SymbolImport : AST_SymbolExportForeign);
              }
              names = [map_nameAsterisk(is_import, name)];
          }
          return names;
      }

      function export_() {
          var start = S.token;
          var is_default;
          var exported_names;

          if (is("keyword", "default")) {
              is_default = true;
              next();
          } else if (exported_names = map_names(false)) {
              if (is("name", "from")) {
                  next();

                  var mod_str = S.token;
                  if (mod_str.type !== "string") {
                      unexpected();
                  }
                  next();

                  return new AST_Export({
                      start: start,
                      is_default: is_default,
                      exported_names: exported_names,
                      module_name: new AST_String({
                          start: mod_str,
                          value: mod_str.value,
                          quote: mod_str.quote,
                          end: mod_str,
                      }),
                      end: prev(),
                  });
              } else {
                  return new AST_Export({
                      start: start,
                      is_default: is_default,
                      exported_names: exported_names,
                      end: prev(),
                  });
              }
          }

          var node;
          var exported_value;
          var exported_definition;
          if (is("punc", "{")
              || is_default
                  && (is("keyword", "class") || is("keyword", "function"))
                  && is_token(peek(), "punc")) {
              exported_value = expression(false);
              semicolon();
          } else if ((node = statement(is_default)) instanceof AST_Definitions && is_default) {
              unexpected(node.start);
          } else if (node instanceof AST_Definitions || node instanceof AST_Lambda || node instanceof AST_DefClass) {
              exported_definition = node;
          } else if (node instanceof AST_SimpleStatement) {
              exported_value = node.body;
          } else {
              unexpected(node.start);
          }

          return new AST_Export({
              start: start,
              is_default: is_default,
              exported_value: exported_value,
              exported_definition: exported_definition,
              end: prev(),
          });
      }

      function as_property_name() {
          var tmp = S.token;
          switch (tmp.type) {
            case "punc":
              if (tmp.value === "[") {
                  next();
                  var ex = expression(false);
                  expect("]");
                  return ex;
              } else unexpected(tmp);
            case "operator":
              if (tmp.value === "*") {
                  next();
                  return null;
              }
              if (!["delete", "in", "instanceof", "new", "typeof", "void"].includes(tmp.value)) {
                  unexpected(tmp);
              }
            case "name":
              if (tmp.value == "yield") {
                  if (is_in_generator()) {
                      token_error(tmp, "Yield cannot be used as identifier inside generators");
                  } else if (!is_token(peek(), "punc", ":")
                      && !is_token(peek(), "punc", "(")
                      && S.input.has_directive("use strict")) {
                      token_error(tmp, "Unexpected yield identifier inside strict mode");
                  }
              }
            case "string":
            case "num":
            case "keyword":
            case "atom":
              next();
              return tmp.value;
            default:
              unexpected(tmp);
          }
      }

      function as_name() {
          var tmp = S.token;
          if (tmp.type != "name") unexpected();
          next();
          return tmp.value;
      }

      function _make_symbol(type) {
          var name = S.token.value;
          return new (name == "this" ? AST_This :
                      name == "super" ? AST_Super :
                      type)({
              name  : String(name),
              start : S.token,
              end   : S.token
          });
      }

      function _verify_symbol(sym) {
          var name = sym.name;
          if (is_in_generator() && name == "yield") {
              token_error(sym.start, "Yield cannot be used as identifier inside generators");
          }
          if (S.input.has_directive("use strict")) {
              if (name == "yield") {
                  token_error(sym.start, "Unexpected yield identifier inside strict mode");
              }
              if (sym instanceof AST_SymbolDeclaration && (name == "arguments" || name == "eval")) {
                  token_error(sym.start, "Unexpected " + name + " in strict mode");
              }
          }
      }

      function as_symbol(type, noerror) {
          if (!is("name")) {
              if (!noerror) croak("Name expected");
              return null;
          }
          var sym = _make_symbol(type);
          _verify_symbol(sym);
          next();
          return sym;
      }

      function mark_pure(call) {
          var start = call.start;
          var comments = start.comments_before;
          var i = HOP(start, "comments_before_length") ? start.comments_before_length : comments.length;
          while (--i >= 0) {
              var comment = comments[i];
              if (/[@#]__PURE__/.test(comment.value)) {
                  call.pure = comment;
                  break;
              }
          }
      }

      var subscripts = function(expr, allow_calls) {
          var start = expr.start;
          if (is("punc", ".")) {
              next();
              return subscripts(new AST_Dot({
                  start      : start,
                  expression : expr,
                  property   : as_name(),
                  end        : prev()
              }), allow_calls);
          }
          if (is("punc", "[")) {
              next();
              var prop = expression(true);
              expect("]");
              return subscripts(new AST_Sub({
                  start      : start,
                  expression : expr,
                  property   : prop,
                  end        : prev()
              }), allow_calls);
          }
          if (allow_calls && is("punc", "(")) {
              next();
              var call = new AST_Call({
                  start      : start,
                  expression : expr,
                  args       : call_args(),
                  end        : prev()
              });
              mark_pure(call);
              return subscripts(call, true);
          }
          if (is("template_head")) {
              return subscripts(new AST_PrefixedTemplateString({
                  start: start,
                  prefix: expr,
                  template_string: template_string(true),
                  end: prev()
              }), allow_calls);
          }
          return expr;
      };

      var call_args = embed_tokens(function _call_args() {
          var args = [];
          while (!is("punc", ")")) {
              if (is("expand", "...")) {
                  next();
                  args.push(new AST_Expansion({
                      start: prev(),
                      expression: expression(false),
                      end: prev()
                  }));
              } else {
                  args.push(expression(false));
              }
              if (!is("punc", ")")) {
                  expect(",");
                  if (is("punc", ")") && options.ecma < 8) unexpected();
              }
          }
          next();
          return args;
      });

      var maybe_unary = function(allow_calls, allow_arrows) {
          var start = S.token;
          if (start.type == "name" && start.value == "await") {
              if (is_in_async()) {
                  next();
                  return _await_expression();
              } else if (S.input.has_directive("use strict")) {
                  token_error(S.token, "Unexpected await identifier inside strict mode");
              }
          }
          if (is("operator") && UNARY_PREFIX.has(start.value)) {
              next();
              handle_regexp();
              var ex = make_unary(AST_UnaryPrefix, start, maybe_unary(allow_calls));
              ex.start = start;
              ex.end = prev();
              return ex;
          }
          var val = expr_atom(allow_calls, allow_arrows);
          while (is("operator") && UNARY_POSTFIX.has(S.token.value) && !has_newline_before(S.token)) {
              if (val instanceof AST_Arrow) unexpected();
              val = make_unary(AST_UnaryPostfix, S.token, val);
              val.start = start;
              val.end = S.token;
              next();
          }
          return val;
      };

      function make_unary(ctor, token, expr) {
          var op = token.value;
          switch (op) {
            case "++":
            case "--":
              if (!is_assignable(expr))
                  croak("Invalid use of " + op + " operator", token.line, token.col, token.pos);
              break;
            case "delete":
              if (expr instanceof AST_SymbolRef && S.input.has_directive("use strict"))
                  croak("Calling delete on expression not allowed in strict mode", expr.start.line, expr.start.col, expr.start.pos);
              break;
          }
          return new ctor({ operator: op, expression: expr });
      }

      var expr_op = function(left, min_prec, no_in) {
          var op = is("operator") ? S.token.value : null;
          if (op == "in" && no_in) op = null;
          if (op == "**" && left instanceof AST_UnaryPrefix
              /* unary token in front not allowed - parenthesis required */
              && !is_token(left.start, "punc", "(")
              && left.operator !== "--" && left.operator !== "++")
                  unexpected(left.start);
          var prec = op != null ? PRECEDENCE[op] : null;
          if (prec != null && (prec > min_prec || (op === "**" && min_prec === prec))) {
              next();
              var right = expr_op(maybe_unary(true), prec, no_in);
              return expr_op(new AST_Binary({
                  start    : left.start,
                  left     : left,
                  operator : op,
                  right    : right,
                  end      : right.end
              }), min_prec, no_in);
          }
          return left;
      };

      function expr_ops(no_in) {
          return expr_op(maybe_unary(true, true), 0, no_in);
      }

      var maybe_conditional = function(no_in) {
          var start = S.token;
          var expr = expr_ops(no_in);
          if (is("operator", "?")) {
              next();
              var yes = expression(false);
              expect(":");
              return new AST_Conditional({
                  start       : start,
                  condition   : expr,
                  consequent  : yes,
                  alternative : expression(false, no_in),
                  end         : prev()
              });
          }
          return expr;
      };

      function is_assignable(expr) {
          return expr instanceof AST_PropAccess || expr instanceof AST_SymbolRef;
      }

      function to_destructuring(node) {
          if (node instanceof AST_Object) {
              node = new AST_Destructuring({
                  start: node.start,
                  names: node.properties.map(to_destructuring),
                  is_array: false,
                  end: node.end
              });
          } else if (node instanceof AST_Array) {
              var names = [];

              for (var i = 0; i < node.elements.length; i++) {
                  // Only allow expansion as last element
                  if (node.elements[i] instanceof AST_Expansion) {
                      if (i + 1 !== node.elements.length) {
                          token_error(node.elements[i].start, "Spread must the be last element in destructuring array");
                      }
                      node.elements[i].expression = to_destructuring(node.elements[i].expression);
                  }

                  names.push(to_destructuring(node.elements[i]));
              }

              node = new AST_Destructuring({
                  start: node.start,
                  names: names,
                  is_array: true,
                  end: node.end
              });
          } else if (node instanceof AST_ObjectProperty) {
              node.value = to_destructuring(node.value);
          } else if (node instanceof AST_Assign) {
              node = new AST_DefaultAssign({
                  start: node.start,
                  left: node.left,
                  operator: "=",
                  right: node.right,
                  end: node.end
              });
          }
          return node;
      }

      // In ES6, AssignmentExpression can also be an ArrowFunction
      var maybe_assign = function(no_in) {
          handle_regexp();
          var start = S.token;

          if (start.type == "name" && start.value == "yield") {
              if (is_in_generator()) {
                  next();
                  return _yield_expression();
              } else if (S.input.has_directive("use strict")) {
                  token_error(S.token, "Unexpected yield identifier inside strict mode");
              }
          }

          var left = maybe_conditional(no_in);
          var val = S.token.value;

          if (is("operator") && ASSIGNMENT.has(val)) {
              if (is_assignable(left) || (left = to_destructuring(left)) instanceof AST_Destructuring) {
                  next();
                  return new AST_Assign({
                      start    : start,
                      left     : left,
                      operator : val,
                      right    : maybe_assign(no_in),
                      end      : prev()
                  });
              }
              croak("Invalid assignment");
          }
          return left;
      };

      var expression = function(commas, no_in) {
          var start = S.token;
          var exprs = [];
          while (true) {
              exprs.push(maybe_assign(no_in));
              if (!commas || !is("punc", ",")) break;
              next();
              commas = true;
          }
          return exprs.length == 1 ? exprs[0] : new AST_Sequence({
              start       : start,
              expressions : exprs,
              end         : peek()
          });
      };

      function in_loop(cont) {
          ++S.in_loop;
          var ret = cont();
          --S.in_loop;
          return ret;
      }

      if (options.expression) {
          return expression(true);
      }

      return (function() {
          var start = S.token;
          var body = [];
          S.input.push_directives_stack();
          if (options.module) S.input.add_directive("use strict");
          while (!is("eof"))
              body.push(statement());
          S.input.pop_directives_stack();
          var end = prev();
          var toplevel = options.toplevel;
          if (toplevel) {
              toplevel.body = toplevel.body.concat(body);
              toplevel.end = end;
          } else {
              toplevel = new AST_Toplevel({ start: start, body: body, end: end });
          }
          return toplevel;
      })();

  }

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  function DEFNODE(type, props, methods, base) {
      if (arguments.length < 4) base = AST_Node;
      if (!props) props = [];
      else props = props.split(/\s+/);
      var self_props = props;
      if (base && base.PROPS)
          props = props.concat(base.PROPS);
      var code = "return function AST_" + type + "(props){ if (props) { ";
      for (var i = props.length; --i >= 0;) {
          code += "this." + props[i] + " = props." + props[i] + ";";
      }
      var proto = base && new base;
      if (proto && proto.initialize || (methods && methods.initialize))
          code += "this.initialize();";
      code += "}}";
      var ctor = new Function(code)();
      if (proto) {
          ctor.prototype = proto;
          ctor.BASE = base;
      }
      if (base) base.SUBCLASSES.push(ctor);
      ctor.prototype.CTOR = ctor;
      ctor.PROPS = props || null;
      ctor.SELF_PROPS = self_props;
      ctor.SUBCLASSES = [];
      if (type) {
          ctor.prototype.TYPE = ctor.TYPE = type;
      }
      if (methods) for (i in methods) if (HOP(methods, i)) {
          if (/^\$/.test(i)) {
              ctor[i.substr(1)] = methods[i];
          } else {
              ctor.prototype[i] = methods[i];
          }
      }
      ctor.DEFMETHOD = function(name, method) {
          this.prototype[name] = method;
      };
      return ctor;
  }

  var AST_Token = DEFNODE("Token", "type value line col pos endline endcol endpos nlb comments_before comments_after file raw", {
  }, null);

  var AST_Node = DEFNODE("Node", "start end", {
      _clone: function(deep) {
          if (deep) {
              var self = this.clone();
              return self.transform(new TreeTransformer(function(node) {
                  if (node !== self) {
                      return node.clone(true);
                  }
              }));
          }
          return new this.CTOR(this);
      },
      clone: function(deep) {
          return this._clone(deep);
      },
      $documentation: "Base class of all AST nodes",
      $propdoc: {
          start: "[AST_Token] The first token of this node",
          end: "[AST_Token] The last token of this node"
      },
      _walk: function(visitor) {
          return visitor._visit(this);
      },
      walk: function(visitor) {
          return this._walk(visitor); // not sure the indirection will be any help
      }
  }, null);

  AST_Node.warn_function = null;
  AST_Node.warn = function(txt, props) {
      if (AST_Node.warn_function)
          AST_Node.warn_function(string_template(txt, props));
  };

  /* -----[ statements ]----- */

  var AST_Statement = DEFNODE("Statement", null, {
      $documentation: "Base class of all statements",
  });

  var AST_Debugger = DEFNODE("Debugger", null, {
      $documentation: "Represents a debugger statement",
  }, AST_Statement);

  var AST_Directive = DEFNODE("Directive", "value quote", {
      $documentation: "Represents a directive, like \"use strict\";",
      $propdoc: {
          value: "[string] The value of this directive as a plain string (it's not an AST_String!)",
          quote: "[string] the original quote character"
      },
  }, AST_Statement);

  var AST_SimpleStatement = DEFNODE("SimpleStatement", "body", {
      $documentation: "A statement consisting of an expression, i.e. a = 1 + 2",
      $propdoc: {
          body: "[AST_Node] an expression node (should not be instanceof AST_Statement)"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.body._walk(visitor);
          });
      }
  }, AST_Statement);

  function walk_body(node, visitor) {
      var body = node.body;
      if (body instanceof AST_Node) {
          body._walk(visitor);
      } else for (var i = 0, len = body.length; i < len; i++) {
          body[i]._walk(visitor);
      }
  }

  function clone_block_scope(deep) {
      var clone = this._clone(deep);
      if (this.block_scope) {
          // TODO this is sometimes undefined during compression.
          // But it should always have a value!
          clone.block_scope = this.block_scope.clone();
      }
      return clone;
  }

  var AST_Block = DEFNODE("Block", "body block_scope", {
      $documentation: "A body of statements (usually braced)",
      $propdoc: {
          body: "[AST_Statement*] an array of statements",
          block_scope: "[AST_Scope] the block scope"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              walk_body(this, visitor);
          });
      },
      clone: clone_block_scope
  }, AST_Statement);

  var AST_BlockStatement = DEFNODE("BlockStatement", null, {
      $documentation: "A block statement",
  }, AST_Block);

  var AST_EmptyStatement = DEFNODE("EmptyStatement", null, {
      $documentation: "The empty statement (empty block or simply a semicolon)"
  }, AST_Statement);

  var AST_StatementWithBody = DEFNODE("StatementWithBody", "body", {
      $documentation: "Base class for all statements that contain one nested body: `For`, `ForIn`, `Do`, `While`, `With`",
      $propdoc: {
          body: "[AST_Statement] the body; this should always be present, even if it's an AST_EmptyStatement"
      }
  }, AST_Statement);

  var AST_LabeledStatement = DEFNODE("LabeledStatement", "label", {
      $documentation: "Statement with a label",
      $propdoc: {
          label: "[AST_Label] a label definition"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.label._walk(visitor);
              this.body._walk(visitor);
          });
      },
      clone: function(deep) {
          var node = this._clone(deep);
          if (deep) {
              var label = node.label;
              var def = this.label;
              node.walk(new TreeWalker(function(node) {
                  if (node instanceof AST_LoopControl
                      && node.label && node.label.thedef === def) {
                      node.label.thedef = label;
                      label.references.push(node);
                  }
              }));
          }
          return node;
      }
  }, AST_StatementWithBody);

  var AST_IterationStatement = DEFNODE("IterationStatement", "block_scope", {
      $documentation: "Internal class.  All loops inherit from it.",
      $propdoc: {
          block_scope: "[AST_Scope] the block scope for this iteration statement."
      },
      clone: clone_block_scope
  }, AST_StatementWithBody);

  var AST_DWLoop = DEFNODE("DWLoop", "condition", {
      $documentation: "Base class for do/while statements",
      $propdoc: {
          condition: "[AST_Node] the loop condition.  Should not be instanceof AST_Statement"
      }
  }, AST_IterationStatement);

  var AST_Do = DEFNODE("Do", null, {
      $documentation: "A `do` statement",
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.body._walk(visitor);
              this.condition._walk(visitor);
          });
      }
  }, AST_DWLoop);

  var AST_While = DEFNODE("While", null, {
      $documentation: "A `while` statement",
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.condition._walk(visitor);
              this.body._walk(visitor);
          });
      }
  }, AST_DWLoop);

  var AST_For = DEFNODE("For", "init condition step", {
      $documentation: "A `for` statement",
      $propdoc: {
          init: "[AST_Node?] the `for` initialization code, or null if empty",
          condition: "[AST_Node?] the `for` termination clause, or null if empty",
          step: "[AST_Node?] the `for` update clause, or null if empty"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              if (this.init) this.init._walk(visitor);
              if (this.condition) this.condition._walk(visitor);
              if (this.step) this.step._walk(visitor);
              this.body._walk(visitor);
          });
      }
  }, AST_IterationStatement);

  var AST_ForIn = DEFNODE("ForIn", "init object", {
      $documentation: "A `for ... in` statement",
      $propdoc: {
          init: "[AST_Node] the `for/in` initialization code",
          object: "[AST_Node] the object that we're looping through"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.init._walk(visitor);
              this.object._walk(visitor);
              this.body._walk(visitor);
          });
      }
  }, AST_IterationStatement);

  var AST_ForOf = DEFNODE("ForOf", "await", {
      $documentation: "A `for ... of` statement",
  }, AST_ForIn);

  var AST_With = DEFNODE("With", "expression", {
      $documentation: "A `with` statement",
      $propdoc: {
          expression: "[AST_Node] the `with` expression"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.expression._walk(visitor);
              this.body._walk(visitor);
          });
      }
  }, AST_StatementWithBody);

  /* -----[ scope and functions ]----- */

  var AST_Scope = DEFNODE("Scope", "variables functions uses_with uses_eval parent_scope enclosed cname", {
      $documentation: "Base class for all statements introducing a lexical scope",
      $propdoc: {
          variables: "[Map/S] a map of name -> SymbolDef for all variables/functions defined in this scope",
          functions: "[Map/S] like `variables`, but only lists function declarations",
          uses_with: "[boolean/S] tells whether this scope uses the `with` statement",
          uses_eval: "[boolean/S] tells whether this scope contains a direct call to the global `eval`",
          parent_scope: "[AST_Scope?/S] link to the parent scope",
          enclosed: "[SymbolDef*/S] a list of all symbol definitions that are accessed from this scope or any subscopes",
          cname: "[integer/S] current index for mangling variables (used internally by the mangler)",
      },
      get_defun_scope: function() {
          var self = this;
          while (self.is_block_scope()) {
              self = self.parent_scope;
          }
          return self;
      },
      clone: function(deep) {
          var node = this._clone(deep);
          if (this.variables) node.variables = new Map(this.variables);
          if (this.functions) node.functions = new Map(this.functions);
          if (this.enclosed) node.enclosed = this.enclosed.slice();
          return node;
      },
      pinned: function() {
          return this.uses_eval || this.uses_with;
      }
  }, AST_Block);

  var AST_Toplevel = DEFNODE("Toplevel", "globals", {
      $documentation: "The toplevel scope",
      $propdoc: {
          globals: "[Map/S] a map of name -> SymbolDef for all undeclared names",
      },
      wrap_commonjs: function(name) {
          var body = this.body;
          var wrapped_tl = "(function(exports){'$ORIG';})(typeof " + name + "=='undefined'?(" + name + "={}):" + name + ");";
          wrapped_tl = parse(wrapped_tl);
          wrapped_tl = wrapped_tl.transform(new TreeTransformer(function(node) {
              if (node instanceof AST_Directive && node.value == "$ORIG") {
                  return MAP.splice(body);
              }
          }));
          return wrapped_tl;
      },
      wrap_enclose: function(args_values) {
          if (typeof args_values != "string") args_values = "";
          var index = args_values.indexOf(":");
          if (index < 0) index = args_values.length;
          var body = this.body;
          return parse([
              "(function(",
              args_values.slice(0, index),
              '){"$ORIG"})(',
              args_values.slice(index + 1),
              ")"
          ].join("")).transform(new TreeTransformer(function(node) {
              if (node instanceof AST_Directive && node.value == "$ORIG") {
                  return MAP.splice(body);
              }
          }));
      }
  }, AST_Scope);

  var AST_Expansion = DEFNODE("Expansion", "expression", {
      $documentation: "An expandible argument, such as ...rest, a splat, such as [1,2,...all], or an expansion in a variable declaration, such as var [first, ...rest] = list",
      $propdoc: {
          expression: "[AST_Node] the thing to be expanded"
      },
      _walk: function(visitor) {
          var self = this;
          return visitor._visit(this, function() {
              self.expression.walk(visitor);
          });
      }
  });

  var AST_Lambda = DEFNODE("Lambda", "name argnames uses_arguments is_generator async", {
      $documentation: "Base class for functions",
      $propdoc: {
          name: "[AST_SymbolDeclaration?] the name of this function",
          argnames: "[AST_SymbolFunarg|AST_Destructuring|AST_Expansion|AST_DefaultAssign*] array of function arguments, destructurings, or expanding arguments",
          uses_arguments: "[boolean/S] tells whether this function accesses the arguments array",
          is_generator: "[boolean] is this a generator method",
          async: "[boolean] is this method async",
      },
      args_as_names: function () {
          var out = [];
          for (var i = 0; i < this.argnames.length; i++) {
              if (this.argnames[i] instanceof AST_Destructuring) {
                  out = out.concat(this.argnames[i].all_symbols());
              } else {
                  out.push(this.argnames[i]);
              }
          }
          return out;
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              if (this.name) this.name._walk(visitor);
              var argnames = this.argnames;
              for (var i = 0, len = argnames.length; i < len; i++) {
                  argnames[i]._walk(visitor);
              }
              walk_body(this, visitor);
          });
      }
  }, AST_Scope);

  var AST_Accessor = DEFNODE("Accessor", null, {
      $documentation: "A setter/getter function.  The `name` property is always null."
  }, AST_Lambda);

  var AST_Function = DEFNODE("Function", "inlined", {
      $documentation: "A function expression"
  }, AST_Lambda);

  var AST_Arrow = DEFNODE("Arrow", "inlined", {
      $documentation: "An ES6 Arrow function ((a) => b)"
  }, AST_Lambda);

  var AST_Defun = DEFNODE("Defun", "inlined", {
      $documentation: "A function definition"
  }, AST_Lambda);

  /* -----[ DESTRUCTURING ]----- */
  var AST_Destructuring = DEFNODE("Destructuring", "names is_array", {
      $documentation: "A destructuring of several names. Used in destructuring assignment and with destructuring function argument names",
      $propdoc: {
          "names": "[AST_Node*] Array of properties or elements",
          "is_array": "[Boolean] Whether the destructuring represents an object or array"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.names.forEach(function(name) {
                  name._walk(visitor);
              });
          });
      },
      all_symbols: function() {
          var out = [];
          this.walk(new TreeWalker(function (node) {
              if (node instanceof AST_Symbol) {
                  out.push(node);
              }
              if (node instanceof AST_Expansion) {
                  out.push(node.expression);
              }
          }));
          return out;
      }
  });

  var AST_PrefixedTemplateString = DEFNODE("PrefixedTemplateString", "template_string prefix", {
      $documentation: "A templatestring with a prefix, such as String.raw`foobarbaz`",
      $propdoc: {
          template_string: "[AST_TemplateString] The template string",
          prefix: "[AST_SymbolRef|AST_PropAccess] The prefix, which can be a symbol such as `foo` or a dotted expression such as `String.raw`."
      },
      _walk: function(visitor) {
          this.prefix._walk(visitor);
          this.template_string._walk(visitor);
      }
  });

  var AST_TemplateString = DEFNODE("TemplateString", "segments", {
      $documentation: "A template string literal",
      $propdoc: {
          segments: "[AST_Node*] One or more segments, starting with AST_TemplateSegment. AST_Node may follow AST_TemplateSegment, but each AST_Node must be followed by AST_TemplateSegment."
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.segments.forEach(function(seg) {
                  seg._walk(visitor);
              });
          });
      }
  });

  var AST_TemplateSegment = DEFNODE("TemplateSegment", "value raw", {
      $documentation: "A segment of a template string literal",
      $propdoc: {
          value: "Content of the segment",
          raw: "Raw content of the segment"
      }
  });

  /* -----[ JUMPS ]----- */

  var AST_Jump = DEFNODE("Jump", null, {
      $documentation: "Base class for “jumps” (for now that's `return`, `throw`, `break` and `continue`)"
  }, AST_Statement);

  var AST_Exit = DEFNODE("Exit", "value", {
      $documentation: "Base class for “exits” (`return` and `throw`)",
      $propdoc: {
          value: "[AST_Node?] the value returned or thrown by this statement; could be null for AST_Return"
      },
      _walk: function(visitor) {
          return visitor._visit(this, this.value && function() {
              this.value._walk(visitor);
          });
      }
  }, AST_Jump);

  var AST_Return = DEFNODE("Return", null, {
      $documentation: "A `return` statement"
  }, AST_Exit);

  var AST_Throw = DEFNODE("Throw", null, {
      $documentation: "A `throw` statement"
  }, AST_Exit);

  var AST_LoopControl = DEFNODE("LoopControl", "label", {
      $documentation: "Base class for loop control statements (`break` and `continue`)",
      $propdoc: {
          label: "[AST_LabelRef?] the label, or null if none",
      },
      _walk: function(visitor) {
          return visitor._visit(this, this.label && function() {
              this.label._walk(visitor);
          });
      }
  }, AST_Jump);

  var AST_Break = DEFNODE("Break", null, {
      $documentation: "A `break` statement"
  }, AST_LoopControl);

  var AST_Continue = DEFNODE("Continue", null, {
      $documentation: "A `continue` statement"
  }, AST_LoopControl);

  /* -----[ IF ]----- */

  var AST_If = DEFNODE("If", "condition alternative", {
      $documentation: "A `if` statement",
      $propdoc: {
          condition: "[AST_Node] the `if` condition",
          alternative: "[AST_Statement?] the `else` part, or null if not present"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.condition._walk(visitor);
              this.body._walk(visitor);
              if (this.alternative) this.alternative._walk(visitor);
          });
      }
  }, AST_StatementWithBody);

  /* -----[ SWITCH ]----- */

  var AST_Switch = DEFNODE("Switch", "expression", {
      $documentation: "A `switch` statement",
      $propdoc: {
          expression: "[AST_Node] the `switch` “discriminant”"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.expression._walk(visitor);
              walk_body(this, visitor);
          });
      }
  }, AST_Block);

  var AST_SwitchBranch = DEFNODE("SwitchBranch", null, {
      $documentation: "Base class for `switch` branches",
  }, AST_Block);

  var AST_Default = DEFNODE("Default", null, {
      $documentation: "A `default` switch branch",
  }, AST_SwitchBranch);

  var AST_Case = DEFNODE("Case", "expression", {
      $documentation: "A `case` switch branch",
      $propdoc: {
          expression: "[AST_Node] the `case` expression"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.expression._walk(visitor);
              walk_body(this, visitor);
          });
      }
  }, AST_SwitchBranch);

  /* -----[ EXCEPTIONS ]----- */

  var AST_Try = DEFNODE("Try", "bcatch bfinally", {
      $documentation: "A `try` statement",
      $propdoc: {
          bcatch: "[AST_Catch?] the catch block, or null if not present",
          bfinally: "[AST_Finally?] the finally block, or null if not present"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              walk_body(this, visitor);
              if (this.bcatch) this.bcatch._walk(visitor);
              if (this.bfinally) this.bfinally._walk(visitor);
          });
      }
  }, AST_Block);

  var AST_Catch = DEFNODE("Catch", "argname", {
      $documentation: "A `catch` node; only makes sense as part of a `try` statement",
      $propdoc: {
          argname: "[AST_SymbolCatch|AST_Destructuring|AST_Expansion|AST_DefaultAssign] symbol for the exception"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              if (this.argname) this.argname._walk(visitor);
              walk_body(this, visitor);
          });
      }
  }, AST_Block);

  var AST_Finally = DEFNODE("Finally", null, {
      $documentation: "A `finally` node; only makes sense as part of a `try` statement"
  }, AST_Block);

  /* -----[ VAR/CONST ]----- */

  var AST_Definitions = DEFNODE("Definitions", "definitions", {
      $documentation: "Base class for `var` or `const` nodes (variable declarations/initializations)",
      $propdoc: {
          definitions: "[AST_VarDef*] array of variable definitions"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              var definitions = this.definitions;
              for (var i = 0, len = definitions.length; i < len; i++) {
                  definitions[i]._walk(visitor);
              }
          });
      }
  }, AST_Statement);

  var AST_Var = DEFNODE("Var", null, {
      $documentation: "A `var` statement"
  }, AST_Definitions);

  var AST_Let = DEFNODE("Let", null, {
      $documentation: "A `let` statement"
  }, AST_Definitions);

  var AST_Const = DEFNODE("Const", null, {
      $documentation: "A `const` statement"
  }, AST_Definitions);

  var AST_NameMapping = DEFNODE("NameMapping", "foreign_name name", {
      $documentation: "The part of the export/import statement that declare names from a module.",
      $propdoc: {
          foreign_name: "[AST_SymbolExportForeign|AST_SymbolImportForeign] The name being exported/imported (as specified in the module)",
          name: "[AST_SymbolExport|AST_SymbolImport] The name as it is visible to this module."
      },
      _walk: function (visitor) {
          return visitor._visit(this, function() {
              this.foreign_name._walk(visitor);
              this.name._walk(visitor);
          });
      }
  });

  var AST_Import = DEFNODE("Import", "imported_name imported_names module_name", {
      $documentation: "An `import` statement",
      $propdoc: {
          imported_name: "[AST_SymbolImport] The name of the variable holding the module's default export.",
          imported_names: "[AST_NameMapping*] The names of non-default imported variables",
          module_name: "[AST_String] String literal describing where this module came from",
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              if (this.imported_name) {
                  this.imported_name._walk(visitor);
              }
              if (this.imported_names) {
                  this.imported_names.forEach(function(name_import) {
                      name_import._walk(visitor);
                  });
              }
              this.module_name._walk(visitor);
          });
      }
  });

  var AST_Export = DEFNODE("Export", "exported_definition exported_value is_default exported_names module_name", {
      $documentation: "An `export` statement",
      $propdoc: {
          exported_definition: "[AST_Defun|AST_Definitions|AST_DefClass?] An exported definition",
          exported_value: "[AST_Node?] An exported value",
          exported_names: "[AST_NameMapping*?] List of exported names",
          module_name: "[AST_String?] Name of the file to load exports from",
          is_default: "[Boolean] Whether this is the default exported value of this module"
      },
      _walk: function (visitor) {
          visitor._visit(this, function () {
              if (this.exported_definition) {
                  this.exported_definition._walk(visitor);
              }
              if (this.exported_value) {
                  this.exported_value._walk(visitor);
              }
              if (this.exported_names) {
                  this.exported_names.forEach(function(name_export) {
                      name_export._walk(visitor);
                  });
              }
              if (this.module_name) {
                  this.module_name._walk(visitor);
              }
          });
      }
  }, AST_Statement);

  var AST_VarDef = DEFNODE("VarDef", "name value", {
      $documentation: "A variable declaration; only appears in a AST_Definitions node",
      $propdoc: {
          name: "[AST_Destructuring|AST_SymbolConst|AST_SymbolLet|AST_SymbolVar] name of the variable",
          value: "[AST_Node?] initializer, or null of there's no initializer"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.name._walk(visitor);
              if (this.value) this.value._walk(visitor);
          });
      }
  });

  /* -----[ OTHER ]----- */

  var AST_Call = DEFNODE("Call", "expression args", {
      $documentation: "A function call expression",
      $propdoc: {
          expression: "[AST_Node] expression to invoke as function",
          args: "[AST_Node*] array of arguments"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              var args = this.args;
              for (var i = 0, len = args.length; i < len; i++) {
                  args[i]._walk(visitor);
              }
              this.expression._walk(visitor);
          });
      }
  });

  var AST_New = DEFNODE("New", null, {
      $documentation: "An object instantiation.  Derives from a function call since it has exactly the same properties"
  }, AST_Call);

  var AST_Sequence = DEFNODE("Sequence", "expressions", {
      $documentation: "A sequence expression (comma-separated expressions)",
      $propdoc: {
          expressions: "[AST_Node*] array of expressions (at least two)"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.expressions.forEach(function(node) {
                  node._walk(visitor);
              });
          });
      }
  });

  var AST_PropAccess = DEFNODE("PropAccess", "expression property", {
      $documentation: "Base class for property access expressions, i.e. `a.foo` or `a[\"foo\"]`",
      $propdoc: {
          expression: "[AST_Node] the “container” expression",
          property: "[AST_Node|string] the property to access.  For AST_Dot this is always a plain string, while for AST_Sub it's an arbitrary AST_Node"
      }
  });

  var AST_Dot = DEFNODE("Dot", "quote", {
      $documentation: "A dotted property access expression",
      $propdoc: {
          quote: "[string] the original quote character when transformed from AST_Sub",
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.expression._walk(visitor);
          });
      }
  }, AST_PropAccess);

  var AST_Sub = DEFNODE("Sub", null, {
      $documentation: "Index-style property access, i.e. `a[\"foo\"]`",
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.expression._walk(visitor);
              this.property._walk(visitor);
          });
      }
  }, AST_PropAccess);

  var AST_Unary = DEFNODE("Unary", "operator expression", {
      $documentation: "Base class for unary expressions",
      $propdoc: {
          operator: "[string] the operator",
          expression: "[AST_Node] expression that this unary operator applies to"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.expression._walk(visitor);
          });
      }
  });

  var AST_UnaryPrefix = DEFNODE("UnaryPrefix", null, {
      $documentation: "Unary prefix expression, i.e. `typeof i` or `++i`"
  }, AST_Unary);

  var AST_UnaryPostfix = DEFNODE("UnaryPostfix", null, {
      $documentation: "Unary postfix expression, i.e. `i++`"
  }, AST_Unary);

  var AST_Binary = DEFNODE("Binary", "operator left right", {
      $documentation: "Binary expression, i.e. `a + b`",
      $propdoc: {
          left: "[AST_Node] left-hand side expression",
          operator: "[string] the operator",
          right: "[AST_Node] right-hand side expression"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.left._walk(visitor);
              this.right._walk(visitor);
          });
      }
  });

  var AST_Conditional = DEFNODE("Conditional", "condition consequent alternative", {
      $documentation: "Conditional expression using the ternary operator, i.e. `a ? b : c`",
      $propdoc: {
          condition: "[AST_Node]",
          consequent: "[AST_Node]",
          alternative: "[AST_Node]"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.condition._walk(visitor);
              this.consequent._walk(visitor);
              this.alternative._walk(visitor);
          });
      }
  });

  var AST_Assign = DEFNODE("Assign", null, {
      $documentation: "An assignment expression — `a = b + 5`",
  }, AST_Binary);

  var AST_DefaultAssign = DEFNODE("DefaultAssign", null, {
      $documentation: "A default assignment expression like in `(a = 3) => a`"
  }, AST_Binary);

  /* -----[ LITERALS ]----- */

  var AST_Array = DEFNODE("Array", "elements", {
      $documentation: "An array literal",
      $propdoc: {
          elements: "[AST_Node*] array of elements"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              var elements = this.elements;
              for (var i = 0, len = elements.length; i < len; i++) {
                  elements[i]._walk(visitor);
              }
          });
      }
  });

  var AST_Object = DEFNODE("Object", "properties", {
      $documentation: "An object literal",
      $propdoc: {
          properties: "[AST_ObjectProperty*] array of properties"
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              var properties = this.properties;
              for (var i = 0, len = properties.length; i < len; i++) {
                  properties[i]._walk(visitor);
              }
          });
      }
  });

  var AST_ObjectProperty = DEFNODE("ObjectProperty", "key value", {
      $documentation: "Base class for literal object properties",
      $propdoc: {
          key: "[string|AST_Node] property name. For ObjectKeyVal this is a string. For getters, setters and computed property this is an AST_Node.",
          value: "[AST_Node] property value.  For getters and setters this is an AST_Accessor."
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              if (this.key instanceof AST_Node)
                  this.key._walk(visitor);
              this.value._walk(visitor);
          });
      }
  });

  var AST_ObjectKeyVal = DEFNODE("ObjectKeyVal", "quote", {
      $documentation: "A key: value object property",
      $propdoc: {
          quote: "[string] the original quote character"
      }
  }, AST_ObjectProperty);

  var AST_ObjectSetter = DEFNODE("ObjectSetter", "quote static", {
      $propdoc: {
          quote: "[string|undefined] the original quote character, if any",
          static: "[boolean] whether this is a static setter (classes only)"
      },
      $documentation: "An object setter property",
  }, AST_ObjectProperty);

  var AST_ObjectGetter = DEFNODE("ObjectGetter", "quote static", {
      $propdoc: {
          quote: "[string|undefined] the original quote character, if any",
          static: "[boolean] whether this is a static getter (classes only)"
      },
      $documentation: "An object getter property",
  }, AST_ObjectProperty);

  var AST_ConciseMethod = DEFNODE("ConciseMethod", "quote static is_generator async", {
      $propdoc: {
          quote: "[string|undefined] the original quote character, if any",
          static: "[boolean] is this method static (classes only)",
          is_generator: "[boolean] is this a generator method",
          async: "[boolean] is this method async",
      },
      $documentation: "An ES6 concise method inside an object or class"
  }, AST_ObjectProperty);

  var AST_Class = DEFNODE("Class", "name extends properties inlined", {
      $propdoc: {
          name: "[AST_SymbolClass|AST_SymbolDefClass?] optional class name.",
          extends: "[AST_Node]? optional parent class",
          properties: "[AST_ObjectProperty*] array of properties"
      },
      $documentation: "An ES6 class",
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              if (this.name) {
                  this.name._walk(visitor);
              }
              if (this.extends) {
                  this.extends._walk(visitor);
              }
              this.properties.forEach(function(prop) {
                  prop._walk(visitor);
              });
          });
      },
  }, AST_Scope);

  var AST_DefClass = DEFNODE("DefClass", null, {
      $documentation: "A class definition",
  }, AST_Class);

  var AST_ClassExpression = DEFNODE("ClassExpression", null, {
      $documentation: "A class expression."
  }, AST_Class);

  var AST_Symbol = DEFNODE("Symbol", "scope name thedef", {
      $propdoc: {
          name: "[string] name of this symbol",
          scope: "[AST_Scope/S] the current scope (not necessarily the definition scope)",
          thedef: "[SymbolDef/S] the definition of this symbol"
      },
      $documentation: "Base class for all symbols"
  });

  var AST_NewTarget = DEFNODE("NewTarget", null, {
      $documentation: "A reference to new.target"
  });

  var AST_SymbolDeclaration = DEFNODE("SymbolDeclaration", "init", {
      $documentation: "A declaration symbol (symbol in var/const, function name or argument, symbol in catch)",
  }, AST_Symbol);

  var AST_SymbolVar = DEFNODE("SymbolVar", null, {
      $documentation: "Symbol defining a variable",
  }, AST_SymbolDeclaration);

  var AST_SymbolBlockDeclaration = DEFNODE("SymbolBlockDeclaration", null, {
      $documentation: "Base class for block-scoped declaration symbols"
  }, AST_SymbolDeclaration);

  var AST_SymbolConst = DEFNODE("SymbolConst", null, {
      $documentation: "A constant declaration"
  }, AST_SymbolBlockDeclaration);

  var AST_SymbolLet = DEFNODE("SymbolLet", null, {
      $documentation: "A block-scoped `let` declaration"
  }, AST_SymbolBlockDeclaration);

  var AST_SymbolFunarg = DEFNODE("SymbolFunarg", null, {
      $documentation: "Symbol naming a function argument",
  }, AST_SymbolVar);

  var AST_SymbolDefun = DEFNODE("SymbolDefun", null, {
      $documentation: "Symbol defining a function",
  }, AST_SymbolDeclaration);

  var AST_SymbolMethod = DEFNODE("SymbolMethod", null, {
      $documentation: "Symbol in an object defining a method",
  }, AST_Symbol);

  var AST_SymbolLambda = DEFNODE("SymbolLambda", null, {
      $documentation: "Symbol naming a function expression",
  }, AST_SymbolDeclaration);

  var AST_SymbolDefClass = DEFNODE("SymbolDefClass", null, {
      $documentation: "Symbol naming a class's name in a class declaration. Lexically scoped to its containing scope, and accessible within the class."
  }, AST_SymbolBlockDeclaration);

  var AST_SymbolClass = DEFNODE("SymbolClass", null, {
      $documentation: "Symbol naming a class's name. Lexically scoped to the class."
  }, AST_SymbolDeclaration);

  var AST_SymbolCatch = DEFNODE("SymbolCatch", null, {
      $documentation: "Symbol naming the exception in catch",
  }, AST_SymbolBlockDeclaration);

  var AST_SymbolImport = DEFNODE("SymbolImport", null, {
      $documentation: "Symbol referring to an imported name",
  }, AST_SymbolBlockDeclaration);

  var AST_SymbolImportForeign = DEFNODE("SymbolImportForeign", null, {
      $documentation: "A symbol imported from a module, but it is defined in the other module, and its real name is irrelevant for this module's purposes",
  }, AST_Symbol);

  var AST_Label = DEFNODE("Label", "references", {
      $documentation: "Symbol naming a label (declaration)",
      $propdoc: {
          references: "[AST_LoopControl*] a list of nodes referring to this label"
      },
      initialize: function() {
          this.references = [];
          this.thedef = this;
      }
  }, AST_Symbol);

  var AST_SymbolRef = DEFNODE("SymbolRef", null, {
      $documentation: "Reference to some symbol (not definition/declaration)",
  }, AST_Symbol);

  var AST_SymbolExport = DEFNODE("SymbolExport", null, {
      $documentation: "Symbol referring to a name to export",
  }, AST_SymbolRef);

  var AST_SymbolExportForeign = DEFNODE("SymbolExportForeign", null, {
      $documentation: "A symbol exported from this module, but it is used in the other module, and its real name is irrelevant for this module's purposes",
  }, AST_Symbol);

  var AST_LabelRef = DEFNODE("LabelRef", null, {
      $documentation: "Reference to a label symbol",
  }, AST_Symbol);

  var AST_This = DEFNODE("This", null, {
      $documentation: "The `this` symbol",
  }, AST_Symbol);

  var AST_Super = DEFNODE("Super", null, {
      $documentation: "The `super` symbol",
  }, AST_This);

  var AST_Constant = DEFNODE("Constant", null, {
      $documentation: "Base class for all constants",
      getValue: function() {
          return this.value;
      }
  });

  var AST_String = DEFNODE("String", "value quote", {
      $documentation: "A string literal",
      $propdoc: {
          value: "[string] the contents of this string",
          quote: "[string] the original quote character"
      }
  }, AST_Constant);

  var AST_Number = DEFNODE("Number", "value literal", {
      $documentation: "A number literal",
      $propdoc: {
          value: "[number] the numeric value",
          literal: "[string] numeric value as string (optional)"
      }
  }, AST_Constant);

  var AST_RegExp = DEFNODE("RegExp", "value", {
      $documentation: "A regexp literal",
      $propdoc: {
          value: "[RegExp] the actual regexp",
      }
  }, AST_Constant);

  var AST_Atom = DEFNODE("Atom", null, {
      $documentation: "Base class for atoms",
  }, AST_Constant);

  var AST_Null = DEFNODE("Null", null, {
      $documentation: "The `null` atom",
      value: null
  }, AST_Atom);

  var AST_NaN = DEFNODE("NaN", null, {
      $documentation: "The impossible value",
      value: 0/0
  }, AST_Atom);

  var AST_Undefined = DEFNODE("Undefined", null, {
      $documentation: "The `undefined` value",
      value: (function() {}())
  }, AST_Atom);

  var AST_Hole = DEFNODE("Hole", null, {
      $documentation: "A hole in an array",
      value: (function() {}())
  }, AST_Atom);

  var AST_Infinity = DEFNODE("Infinity", null, {
      $documentation: "The `Infinity` value",
      value: 1/0
  }, AST_Atom);

  var AST_Boolean = DEFNODE("Boolean", null, {
      $documentation: "Base class for booleans",
  }, AST_Atom);

  var AST_False = DEFNODE("False", null, {
      $documentation: "The `false` atom",
      value: false
  }, AST_Boolean);

  var AST_True = DEFNODE("True", null, {
      $documentation: "The `true` atom",
      value: true
  }, AST_Boolean);

  var AST_Await = DEFNODE("Await", "expression", {
      $documentation: "An `await` statement",
      $propdoc: {
          expression: "[AST_Node] the mandatory expression being awaited",
      },
      _walk: function(visitor) {
          return visitor._visit(this, function() {
              this.expression._walk(visitor);
          });
      }
  });

  var AST_Yield = DEFNODE("Yield", "expression is_star", {
      $documentation: "A `yield` statement",
      $propdoc: {
          expression: "[AST_Node?] the value returned or thrown by this statement; could be null (representing undefined) but only when is_star is set to false",
          is_star: "[Boolean] Whether this is a yield or yield* statement"
      },
      _walk: function(visitor) {
          return visitor._visit(this, this.expression && function() {
              this.expression._walk(visitor);
          });
      }
  });

  /* -----[ TreeWalker ]----- */

  function TreeWalker(callback) {
      this.visit = callback;
      this.stack = [];
      this.directives = Object.create(null);
  }
  TreeWalker.prototype = {
      _visit: function(node, descend) {
          this.push(node);
          var ret = this.visit(node, descend ? function() {
              descend.call(node);
          } : noop);
          if (!ret && descend) {
              descend.call(node);
          }
          this.pop();
          return ret;
      },
      parent: function(n) {
          return this.stack[this.stack.length - 2 - (n || 0)];
      },
      push: function(node) {
          if (node instanceof AST_Lambda) {
              this.directives = Object.create(this.directives);
          } else if (node instanceof AST_Directive && !this.directives[node.value]) {
              this.directives[node.value] = node;
          } else if (node instanceof AST_Class) {
              this.directives = Object.create(this.directives);
              if (!this.directives["use strict"]) {
                  this.directives["use strict"] = node;
              }
          }
          this.stack.push(node);
      },
      pop: function() {
          var node = this.stack.pop();
          if (node instanceof AST_Lambda || node instanceof AST_Class) {
              this.directives = Object.getPrototypeOf(this.directives);
          }
      },
      self: function() {
          return this.stack[this.stack.length - 1];
      },
      find_parent: function(type) {
          var stack = this.stack;
          for (var i = stack.length; --i >= 0;) {
              var x = stack[i];
              if (x instanceof type) return x;
          }
      },
      has_directive: function(type) {
          var dir = this.directives[type];
          if (dir) return dir;
          var node = this.stack[this.stack.length - 1];
          if (node instanceof AST_Scope && node.body) {
              for (var i = 0; i < node.body.length; ++i) {
                  var st = node.body[i];
                  if (!(st instanceof AST_Directive)) break;
                  if (st.value == type) return st;
              }
          }
      },
      loopcontrol_target: function(node) {
          var stack = this.stack;
          if (node.label) for (var i = stack.length; --i >= 0;) {
              var x = stack[i];
              if (x instanceof AST_LabeledStatement && x.label.name == node.label.name)
                  return x.body;
          } else for (var i = stack.length; --i >= 0;) {
              var x = stack[i];
              if (x instanceof AST_IterationStatement
                  || node instanceof AST_Break && x instanceof AST_Switch)
                  return x;
          }
      }
  };

  // Tree transformer helpers.
  function TreeTransformer(before, after) {
      TreeWalker.call(this);
      this.before = before;
      this.after = after;
  }
  TreeTransformer.prototype = new TreeWalker;

  var ast = /*#__PURE__*/Object.freeze({
    AST_Accessor: AST_Accessor,
    AST_Array: AST_Array,
    AST_Arrow: AST_Arrow,
    AST_Assign: AST_Assign,
    AST_Atom: AST_Atom,
    AST_Await: AST_Await,
    AST_Binary: AST_Binary,
    AST_Block: AST_Block,
    AST_BlockStatement: AST_BlockStatement,
    AST_Boolean: AST_Boolean,
    AST_Break: AST_Break,
    AST_Call: AST_Call,
    AST_Case: AST_Case,
    AST_Catch: AST_Catch,
    AST_Class: AST_Class,
    AST_ClassExpression: AST_ClassExpression,
    AST_ConciseMethod: AST_ConciseMethod,
    AST_Conditional: AST_Conditional,
    AST_Const: AST_Const,
    AST_Constant: AST_Constant,
    AST_Continue: AST_Continue,
    AST_Debugger: AST_Debugger,
    AST_Default: AST_Default,
    AST_DefaultAssign: AST_DefaultAssign,
    AST_DefClass: AST_DefClass,
    AST_Definitions: AST_Definitions,
    AST_Defun: AST_Defun,
    AST_Destructuring: AST_Destructuring,
    AST_Directive: AST_Directive,
    AST_Do: AST_Do,
    AST_Dot: AST_Dot,
    AST_DWLoop: AST_DWLoop,
    AST_EmptyStatement: AST_EmptyStatement,
    AST_Exit: AST_Exit,
    AST_Expansion: AST_Expansion,
    AST_Export: AST_Export,
    AST_False: AST_False,
    AST_Finally: AST_Finally,
    AST_For: AST_For,
    AST_ForIn: AST_ForIn,
    AST_ForOf: AST_ForOf,
    AST_Function: AST_Function,
    AST_Hole: AST_Hole,
    AST_If: AST_If,
    AST_Import: AST_Import,
    AST_Infinity: AST_Infinity,
    AST_IterationStatement: AST_IterationStatement,
    AST_Jump: AST_Jump,
    AST_Label: AST_Label,
    AST_LabeledStatement: AST_LabeledStatement,
    AST_LabelRef: AST_LabelRef,
    AST_Lambda: AST_Lambda,
    AST_Let: AST_Let,
    AST_LoopControl: AST_LoopControl,
    AST_NameMapping: AST_NameMapping,
    AST_NaN: AST_NaN,
    AST_New: AST_New,
    AST_NewTarget: AST_NewTarget,
    AST_Node: AST_Node,
    AST_Null: AST_Null,
    AST_Number: AST_Number,
    AST_Object: AST_Object,
    AST_ObjectGetter: AST_ObjectGetter,
    AST_ObjectKeyVal: AST_ObjectKeyVal,
    AST_ObjectProperty: AST_ObjectProperty,
    AST_ObjectSetter: AST_ObjectSetter,
    AST_PrefixedTemplateString: AST_PrefixedTemplateString,
    AST_PropAccess: AST_PropAccess,
    AST_RegExp: AST_RegExp,
    AST_Return: AST_Return,
    AST_Scope: AST_Scope,
    AST_Sequence: AST_Sequence,
    AST_SimpleStatement: AST_SimpleStatement,
    AST_Statement: AST_Statement,
    AST_StatementWithBody: AST_StatementWithBody,
    AST_String: AST_String,
    AST_Sub: AST_Sub,
    AST_Super: AST_Super,
    AST_Switch: AST_Switch,
    AST_SwitchBranch: AST_SwitchBranch,
    AST_Symbol: AST_Symbol,
    AST_SymbolBlockDeclaration: AST_SymbolBlockDeclaration,
    AST_SymbolCatch: AST_SymbolCatch,
    AST_SymbolClass: AST_SymbolClass,
    AST_SymbolConst: AST_SymbolConst,
    AST_SymbolDeclaration: AST_SymbolDeclaration,
    AST_SymbolDefClass: AST_SymbolDefClass,
    AST_SymbolDefun: AST_SymbolDefun,
    AST_SymbolExport: AST_SymbolExport,
    AST_SymbolExportForeign: AST_SymbolExportForeign,
    AST_SymbolFunarg: AST_SymbolFunarg,
    AST_SymbolImport: AST_SymbolImport,
    AST_SymbolImportForeign: AST_SymbolImportForeign,
    AST_SymbolLambda: AST_SymbolLambda,
    AST_SymbolLet: AST_SymbolLet,
    AST_SymbolMethod: AST_SymbolMethod,
    AST_SymbolRef: AST_SymbolRef,
    AST_SymbolVar: AST_SymbolVar,
    AST_TemplateSegment: AST_TemplateSegment,
    AST_TemplateString: AST_TemplateString,
    AST_This: AST_This,
    AST_Throw: AST_Throw,
    AST_Token: AST_Token,
    AST_Toplevel: AST_Toplevel,
    AST_True: AST_True,
    AST_Try: AST_Try,
    AST_Unary: AST_Unary,
    AST_UnaryPostfix: AST_UnaryPostfix,
    AST_UnaryPrefix: AST_UnaryPrefix,
    AST_Undefined: AST_Undefined,
    AST_Var: AST_Var,
    AST_VarDef: AST_VarDef,
    AST_While: AST_While,
    AST_With: AST_With,
    AST_Yield: AST_Yield,
    TreeTransformer: TreeTransformer,
    TreeWalker: TreeWalker,
    walk_body: walk_body
  });

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  (function() {

      function _(node, descend) {
          node.DEFMETHOD("transform", function(tw, in_list) {
              var x, y;
              tw.push(this);
              if (tw.before) x = tw.before(this, descend, in_list);
              if (x === undefined) {
                  x = this;
                  descend(x, tw);
                  if (tw.after) {
                      y = tw.after(x, in_list);
                      if (y !== undefined) x = y;
                  }
              }
              tw.pop();
              return x;
          });
      }

      function do_list(list, tw) {
          return MAP(list, function(node) {
              return node.transform(tw, true);
          });
      }

      _(AST_Node, noop);

      _(AST_LabeledStatement, function(self, tw) {
          self.label = self.label.transform(tw);
          self.body = self.body.transform(tw);
      });

      _(AST_SimpleStatement, function(self, tw) {
          self.body = self.body.transform(tw);
      });

      _(AST_Block, function(self, tw) {
          self.body = do_list(self.body, tw);
      });

      _(AST_Do, function(self, tw) {
          self.body = self.body.transform(tw);
          self.condition = self.condition.transform(tw);
      });

      _(AST_While, function(self, tw) {
          self.condition = self.condition.transform(tw);
          self.body = self.body.transform(tw);
      });

      _(AST_For, function(self, tw) {
          if (self.init) self.init = self.init.transform(tw);
          if (self.condition) self.condition = self.condition.transform(tw);
          if (self.step) self.step = self.step.transform(tw);
          self.body = self.body.transform(tw);
      });

      _(AST_ForIn, function(self, tw) {
          self.init = self.init.transform(tw);
          self.object = self.object.transform(tw);
          self.body = self.body.transform(tw);
      });

      _(AST_With, function(self, tw) {
          self.expression = self.expression.transform(tw);
          self.body = self.body.transform(tw);
      });

      _(AST_Exit, function(self, tw) {
          if (self.value) self.value = self.value.transform(tw);
      });

      _(AST_LoopControl, function(self, tw) {
          if (self.label) self.label = self.label.transform(tw);
      });

      _(AST_If, function(self, tw) {
          self.condition = self.condition.transform(tw);
          self.body = self.body.transform(tw);
          if (self.alternative) self.alternative = self.alternative.transform(tw);
      });

      _(AST_Switch, function(self, tw) {
          self.expression = self.expression.transform(tw);
          self.body = do_list(self.body, tw);
      });

      _(AST_Case, function(self, tw) {
          self.expression = self.expression.transform(tw);
          self.body = do_list(self.body, tw);
      });

      _(AST_Try, function(self, tw) {
          self.body = do_list(self.body, tw);
          if (self.bcatch) self.bcatch = self.bcatch.transform(tw);
          if (self.bfinally) self.bfinally = self.bfinally.transform(tw);
      });

      _(AST_Catch, function(self, tw) {
          if (self.argname) self.argname = self.argname.transform(tw);
          self.body = do_list(self.body, tw);
      });

      _(AST_Definitions, function(self, tw) {
          self.definitions = do_list(self.definitions, tw);
      });

      _(AST_VarDef, function(self, tw) {
          self.name = self.name.transform(tw);
          if (self.value) self.value = self.value.transform(tw);
      });

      _(AST_Destructuring, function(self, tw) {
          self.names = do_list(self.names, tw);
      });

      _(AST_Lambda, function(self, tw) {
          if (self.name) self.name = self.name.transform(tw);
          self.argnames = do_list(self.argnames, tw);
          if (self.body instanceof AST_Node) {
              self.body = self.body.transform(tw);
          } else {
              self.body = do_list(self.body, tw);
          }
      });

      _(AST_Call, function(self, tw) {
          self.expression = self.expression.transform(tw);
          self.args = do_list(self.args, tw);
      });

      _(AST_Sequence, function(self, tw) {
          self.expressions = do_list(self.expressions, tw);
      });

      _(AST_Dot, function(self, tw) {
          self.expression = self.expression.transform(tw);
      });

      _(AST_Sub, function(self, tw) {
          self.expression = self.expression.transform(tw);
          self.property = self.property.transform(tw);
      });

      _(AST_Yield, function(self, tw) {
          if (self.expression) self.expression = self.expression.transform(tw);
      });

      _(AST_Await, function(self, tw) {
          self.expression = self.expression.transform(tw);
      });

      _(AST_Unary, function(self, tw) {
          self.expression = self.expression.transform(tw);
      });

      _(AST_Binary, function(self, tw) {
          self.left = self.left.transform(tw);
          self.right = self.right.transform(tw);
      });

      _(AST_Conditional, function(self, tw) {
          self.condition = self.condition.transform(tw);
          self.consequent = self.consequent.transform(tw);
          self.alternative = self.alternative.transform(tw);
      });

      _(AST_Array, function(self, tw) {
          self.elements = do_list(self.elements, tw);
      });

      _(AST_Object, function(self, tw) {
          self.properties = do_list(self.properties, tw);
      });

      _(AST_ObjectProperty, function(self, tw) {
          if (self.key instanceof AST_Node) {
              self.key = self.key.transform(tw);
          }
          self.value = self.value.transform(tw);
      });

      _(AST_Class, function(self, tw) {
          if (self.name) self.name = self.name.transform(tw);
          if (self.extends) self.extends = self.extends.transform(tw);
          self.properties = do_list(self.properties, tw);
      });

      _(AST_Expansion, function(self, tw) {
          self.expression = self.expression.transform(tw);
      });

      _(AST_NameMapping, function(self, tw) {
          self.foreign_name = self.foreign_name.transform(tw);
          self.name = self.name.transform(tw);
      });

      _(AST_Import, function(self, tw) {
          if (self.imported_name) self.imported_name = self.imported_name.transform(tw);
          if (self.imported_names) do_list(self.imported_names, tw);
          self.module_name = self.module_name.transform(tw);
      });

      _(AST_Export, function(self, tw) {
          if (self.exported_definition) self.exported_definition = self.exported_definition.transform(tw);
          if (self.exported_value) self.exported_value = self.exported_value.transform(tw);
          if (self.exported_names) do_list(self.exported_names, tw);
          if (self.module_name) self.module_name = self.module_name.transform(tw);
      });

      _(AST_TemplateString, function(self, tw) {
          self.segments = do_list(self.segments, tw);
      });

      _(AST_PrefixedTemplateString, function(self, tw) {
          self.prefix = self.prefix.transform(tw);
          self.template_string = self.template_string.transform(tw);
      });

  })();

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  var EXPECT_DIRECTIVE = /^$|[;{][\s\n]*$/;

  function is_some_comments(comment) {
      // multiline comment
      return comment.type == "comment2" && /@preserve|@license|@cc_on/i.test(comment.value);
  }

  function OutputStream(options) {

      var readonly = !options;
      options = defaults(options, {
          ascii_only       : false,
          beautify         : false,
          braces           : false,
          comments         : false,
          ecma             : 5,
          ie8              : false,
          indent_level     : 4,
          indent_start     : 0,
          inline_script    : true,
          keep_quoted_props: false,
          max_line_len     : false,
          preamble         : null,
          quote_keys       : false,
          quote_style      : 0,
          safari10         : false,
          semicolons       : true,
          shebang          : true,
          shorthand        : undefined,
          source_map       : null,
          webkit           : false,
          width            : 80,
          wrap_iife        : false,
      }, true);

      if (options.shorthand === undefined)
          options.shorthand = options.ecma > 5;

      // Convert comment option to RegExp if neccessary and set up comments filter
      var comment_filter = return_false; // Default case, throw all comments away
      if (options.comments) {
          var comments = options.comments;
          if (typeof options.comments === "string" && /^\/.*\/[a-zA-Z]*$/.test(options.comments)) {
              var regex_pos = options.comments.lastIndexOf("/");
              comments = new RegExp(
                  options.comments.substr(1, regex_pos - 1),
                  options.comments.substr(regex_pos + 1)
              );
          }
          if (comments instanceof RegExp) {
              comment_filter = function(comment) {
                  return comment.type != "comment5" && comments.test(comment.value);
              };
          } else if (typeof comments === "function") {
              comment_filter = function(comment) {
                  return comment.type != "comment5" && comments(this, comment);
              };
          } else if (comments === "some") {
              comment_filter = is_some_comments;
          } else { // NOTE includes "all" option
              comment_filter = return_true;
          }
      }

      var indentation = 0;
      var current_col = 0;
      var current_line = 1;
      var current_pos = 0;
      var OUTPUT = "";

      var to_utf8 = options.ascii_only ? function(str, identifier) {
          if (options.ecma >= 6) {
              str = str.replace(/[\ud800-\udbff][\udc00-\udfff]/g, function(ch) {
                  var code = get_full_char_code(ch, 0).toString(16);
                  return "\\u{" + code + "}";
              });
          }
          return str.replace(/[\u0000-\u001f\u007f-\uffff]/g, function(ch) {
              var code = ch.charCodeAt(0).toString(16);
              if (code.length <= 2 && !identifier) {
                  while (code.length < 2) code = "0" + code;
                  return "\\x" + code;
              } else {
                  while (code.length < 4) code = "0" + code;
                  return "\\u" + code;
              }
          });
      } : function(str) {
          var s = "";
          for (var i = 0, len = str.length; i < len; i++) {
              if (is_surrogate_pair_head(str[i]) && !is_surrogate_pair_tail(str[i + 1])
                  || is_surrogate_pair_tail(str[i]) && !is_surrogate_pair_head(str[i - 1])) {
                  s += "\\u" + str.charCodeAt(i).toString(16);
              } else {
                  s += str[i];
              }
          }
          return s;
      };

      function make_string(str, quote) {
          var dq = 0, sq = 0;
          str = str.replace(/[\\\b\f\n\r\v\t\x22\x27\u2028\u2029\0\ufeff]/g,
            function(s, i) {
              switch (s) {
                case '"': ++dq; return '"';
                case "'": ++sq; return "'";
                case "\\": return "\\\\";
                case "\n": return "\\n";
                case "\r": return "\\r";
                case "\t": return "\\t";
                case "\b": return "\\b";
                case "\f": return "\\f";
                case "\x0B": return options.ie8 ? "\\x0B" : "\\v";
                case "\u2028": return "\\u2028";
                case "\u2029": return "\\u2029";
                case "\ufeff": return "\\ufeff";
                case "\0":
                    return /[0-9]/.test(get_full_char(str, i+1)) ? "\\x00" : "\\0";
              }
              return s;
          });
          function quote_single() {
              return "'" + str.replace(/\x27/g, "\\'") + "'";
          }
          function quote_double() {
              return '"' + str.replace(/\x22/g, '\\"') + '"';
          }
          function quote_template() {
              return "`" + str.replace(/`/g, "\\`") + "`";
          }
          str = to_utf8(str);
          if (quote === "`") return quote_template();
          switch (options.quote_style) {
            case 1:
              return quote_single();
            case 2:
              return quote_double();
            case 3:
              return quote == "'" ? quote_single() : quote_double();
            default:
              return dq > sq ? quote_single() : quote_double();
          }
      }

      function encode_string(str, quote) {
          var ret = make_string(str, quote);
          if (options.inline_script) {
              ret = ret.replace(/<\x2f(script)([>\/\t\n\f\r ])/gi, "<\\/$1$2");
              ret = ret.replace(/\x3c!--/g, "\\x3c!--");
              ret = ret.replace(/--\x3e/g, "--\\x3e");
          }
          return ret;
      }

      function make_name(name) {
          name = name.toString();
          name = to_utf8(name, true);
          return name;
      }

      function make_indent(back) {
          return repeat_string(" ", options.indent_start + indentation - back * options.indent_level);
      }

      /* -----[ beautification/minification ]----- */

      var has_parens = false;
      var might_need_space = false;
      var might_need_semicolon = false;
      var might_add_newline = 0;
      var need_newline_indented = false;
      var need_space = false;
      var newline_insert = -1;
      var last = "";
      var mapping_token, mapping_name, mappings = options.source_map && [];

      var do_add_mapping = mappings ? function() {
          mappings.forEach(function(mapping) {
              try {
                  options.source_map.add(
                      mapping.token.file,
                      mapping.line, mapping.col,
                      mapping.token.line, mapping.token.col,
                      !mapping.name && mapping.token.type == "name" ? mapping.token.value : mapping.name
                  );
              } catch(ex) {
                  mapping.token.file != null && AST_Node.warn("Couldn't figure out mapping for {file}:{line},{col} → {cline},{ccol} [{name}]", {
                      file: mapping.token.file,
                      line: mapping.token.line,
                      col: mapping.token.col,
                      cline: mapping.line,
                      ccol: mapping.col,
                      name: mapping.name || ""
                  });
              }
          });
          mappings = [];
      } : noop;

      var ensure_line_len = options.max_line_len ? function() {
          if (current_col > options.max_line_len) {
              if (might_add_newline) {
                  var left = OUTPUT.slice(0, might_add_newline);
                  var right = OUTPUT.slice(might_add_newline);
                  if (mappings) {
                      var delta = right.length - current_col;
                      mappings.forEach(function(mapping) {
                          mapping.line++;
                          mapping.col += delta;
                      });
                  }
                  OUTPUT = left + "\n" + right;
                  current_line++;
                  current_pos++;
                  current_col = right.length;
              }
              if (current_col > options.max_line_len) {
                  AST_Node.warn("Output exceeds {max_line_len} characters", options);
              }
          }
          if (might_add_newline) {
              might_add_newline = 0;
              do_add_mapping();
          }
      } : noop;

      var requireSemicolonChars = makePredicate("( [ + * / - , . `");

      function print(str) {
          str = String(str);
          var ch = get_full_char(str, 0);
          if (need_newline_indented && ch) {
              need_newline_indented = false;
              if (ch !== "\n") {
                  print("\n");
                  indent();
              }
          }
          if (need_space && ch) {
              need_space = false;
              if (!/[\s;})]/.test(ch)) {
                  space();
              }
          }
          newline_insert = -1;
          var prev = last.charAt(last.length - 1);
          if (might_need_semicolon) {
              might_need_semicolon = false;

              if (prev === ":" && ch === "}" || (!ch || !";}".includes(ch)) && prev !== ";") {
                  if (options.semicolons || requireSemicolonChars.has(ch)) {
                      OUTPUT += ";";
                      current_col++;
                      current_pos++;
                  } else {
                      ensure_line_len();
                      if (current_col > 0) {
                          OUTPUT += "\n";
                          current_pos++;
                          current_line++;
                          current_col = 0;
                      }

                      if (/^\s+$/.test(str)) {
                          // reset the semicolon flag, since we didn't print one
                          // now and might still have to later
                          might_need_semicolon = true;
                      }
                  }

                  if (!options.beautify)
                      might_need_space = false;
              }
          }

          if (might_need_space) {
              if ((is_identifier_char(prev)
                      && (is_identifier_char(ch) || ch == "\\"))
                  || (ch == "/" && ch == prev)
                  || ((ch == "+" || ch == "-") && ch == last)
              ) {
                  OUTPUT += " ";
                  current_col++;
                  current_pos++;
              }
              might_need_space = false;
          }

          if (mapping_token) {
              mappings.push({
                  token: mapping_token,
                  name: mapping_name,
                  line: current_line,
                  col: current_col
              });
              mapping_token = false;
              if (!might_add_newline) do_add_mapping();
          }

          OUTPUT += str;
          has_parens = str[str.length - 1] == "(";
          current_pos += str.length;
          var a = str.split(/\r?\n/), n = a.length - 1;
          current_line += n;
          current_col += a[0].length;
          if (n > 0) {
              ensure_line_len();
              current_col = a[n].length;
          }
          last = str;
      }

      var star = function() {
          print("*");
      };

      var space = options.beautify ? function() {
          print(" ");
      } : function() {
          might_need_space = true;
      };

      var indent = options.beautify ? function(half) {
          if (options.beautify) {
              print(make_indent(half ? 0.5 : 0));
          }
      } : noop;

      var with_indent = options.beautify ? function(col, cont) {
          if (col === true) col = next_indent();
          var save_indentation = indentation;
          indentation = col;
          var ret = cont();
          indentation = save_indentation;
          return ret;
      } : function(col, cont) { return cont(); };

      var newline = options.beautify ? function() {
          if (newline_insert < 0) return print("\n");
          if (OUTPUT[newline_insert] != "\n") {
              OUTPUT = OUTPUT.slice(0, newline_insert) + "\n" + OUTPUT.slice(newline_insert);
              current_pos++;
              current_line++;
          }
          newline_insert++;
      } : options.max_line_len ? function() {
          ensure_line_len();
          might_add_newline = OUTPUT.length;
      } : noop;

      var semicolon = options.beautify ? function() {
          print(";");
      } : function() {
          might_need_semicolon = true;
      };

      function force_semicolon() {
          might_need_semicolon = false;
          print(";");
      }

      function next_indent() {
          return indentation + options.indent_level;
      }

      function with_block(cont) {
          var ret;
          print("{");
          newline();
          with_indent(next_indent(), function() {
              ret = cont();
          });
          indent();
          print("}");
          return ret;
      }

      function with_parens(cont) {
          print("(");
          //XXX: still nice to have that for argument lists
          //var ret = with_indent(current_col, cont);
          var ret = cont();
          print(")");
          return ret;
      }

      function with_square(cont) {
          print("[");
          //var ret = with_indent(current_col, cont);
          var ret = cont();
          print("]");
          return ret;
      }

      function comma() {
          print(",");
          space();
      }

      function colon() {
          print(":");
          space();
      }

      var add_mapping = mappings ? function(token, name) {
          mapping_token = token;
          mapping_name = name;
      } : noop;

      function get() {
          if (might_add_newline) {
              ensure_line_len();
          }
          return OUTPUT;
      }

      function has_nlb() {
          var index = OUTPUT.lastIndexOf("\n");
          return /^ *$/.test(OUTPUT.slice(index + 1));
      }

      function prepend_comments(node) {
          var self = this;
          var start = node.start;
          if (!start) return;
          if (start.comments_before && start.comments_before._dumped === self) return;
          var comments = start.comments_before;
          if (!comments) {
              comments = start.comments_before = [];
          }
          comments._dumped = self;

          if (node instanceof AST_Exit && node.value) {
              var tw = new TreeWalker(function(node) {
                  var parent = tw.parent();
                  if (parent instanceof AST_Exit
                      || parent instanceof AST_Binary && parent.left === node
                      || parent.TYPE == "Call" && parent.expression === node
                      || parent instanceof AST_Conditional && parent.condition === node
                      || parent instanceof AST_Dot && parent.expression === node
                      || parent instanceof AST_Sequence && parent.expressions[0] === node
                      || parent instanceof AST_Sub && parent.expression === node
                      || parent instanceof AST_UnaryPostfix) {
                      if (!node.start) return;
                      var text = node.start.comments_before;
                      if (text && text._dumped !== self) {
                          text._dumped = self;
                          comments = comments.concat(text);
                      }
                  } else {
                      return true;
                  }
              });
              tw.push(node);
              node.value.walk(tw);
          }

          if (current_pos == 0) {
              if (comments.length > 0 && options.shebang && comments[0].type == "comment5") {
                  print("#!" + comments.shift().value + "\n");
                  indent();
              }
              var preamble = options.preamble;
              if (preamble) {
                  print(preamble.replace(/\r\n?|[\n\u2028\u2029]|\s*$/g, "\n"));
              }
          }

          comments = comments.filter(comment_filter, node);
          if (comments.length == 0) return;
          var last_nlb = has_nlb();
          comments.forEach(function(c, i) {
              if (!last_nlb) {
                  if (c.nlb) {
                      print("\n");
                      indent();
                      last_nlb = true;
                  } else if (i > 0) {
                      space();
                  }
              }
              if (/comment[134]/.test(c.type)) {
                  print("//" + c.value.replace(/[@#]__PURE__/g, " ") + "\n");
                  indent();
                  last_nlb = true;
              } else if (c.type == "comment2") {
                  print("/*" + c.value.replace(/[@#]__PURE__/g, " ") + "*/");
                  last_nlb = false;
              }
          });
          if (!last_nlb) {
              if (start.nlb) {
                  print("\n");
                  indent();
              } else {
                  space();
              }
          }
      }

      function append_comments(node, tail) {
          var self = this;
          var token = node.end;
          if (!token) return;
          var comments = token[tail ? "comments_before" : "comments_after"];
          if (!comments || comments._dumped === self) return;
          if (!(node instanceof AST_Statement || all(comments, function(c) {
              return !/comment[134]/.test(c.type);
          }))) return;
          comments._dumped = self;
          var insert = OUTPUT.length;
          comments.filter(comment_filter, node).forEach(function(c, i) {
              need_space = false;
              if (need_newline_indented) {
                  print("\n");
                  indent();
                  need_newline_indented = false;
              } else if (c.nlb && (i > 0 || !has_nlb())) {
                  print("\n");
                  indent();
              } else if (i > 0 || !tail) {
                  space();
              }
              if (/comment[134]/.test(c.type)) {
                  print("//" + c.value.replace(/[@#]__PURE__/g, " "));
                  need_newline_indented = true;
              } else if (c.type == "comment2") {
                  print("/*" + c.value.replace(/[@#]__PURE__/g, " ") + "*/");
                  need_space = true;
              }
          });
          if (OUTPUT.length > insert) newline_insert = insert;
      }

      var stack = [];
      return {
          get             : get,
          toString        : get,
          indent          : indent,
          indentation     : function() { return indentation; },
          current_width   : function() { return current_col - indentation; },
          should_break    : function() { return options.width && this.current_width() >= options.width; },
          has_parens      : function() { return has_parens; },
          newline         : newline,
          print           : print,
          star            : star,
          space           : space,
          comma           : comma,
          colon           : colon,
          last            : function() { return last; },
          semicolon       : semicolon,
          force_semicolon : force_semicolon,
          to_utf8         : to_utf8,
          print_name      : function(name) { print(make_name(name)); },
          print_string    : function(str, quote, escape_directive) {
              var encoded = encode_string(str, quote);
              if (escape_directive === true && !encoded.includes("\\")) {
                  // Insert semicolons to break directive prologue
                  if (!EXPECT_DIRECTIVE.test(OUTPUT)) {
                      force_semicolon();
                  }
                  force_semicolon();
              }
              print(encoded);
          },
          print_template_string_chars: function(str) {
              var encoded = encode_string(str, "`").replace(/\${/g, "\\${");
              return print(encoded.substr(1, encoded.length - 2));
          },
          encode_string   : encode_string,
          next_indent     : next_indent,
          with_indent     : with_indent,
          with_block      : with_block,
          with_parens     : with_parens,
          with_square     : with_square,
          add_mapping     : add_mapping,
          option          : function(opt) { return options[opt]; },
          prepend_comments: readonly ? noop : prepend_comments,
          append_comments : readonly || comment_filter === return_false ? noop : append_comments,
          line            : function() { return current_line; },
          col             : function() { return current_col; },
          pos             : function() { return current_pos; },
          push_node       : function(node) { stack.push(node); },
          pop_node        : function() { return stack.pop(); },
          parent          : function(n) {
              return stack[stack.length - 2 - (n || 0)];
          }
      };

  }

  /* -----[ code generators ]----- */

  (function() {

      /* -----[ utils ]----- */

      function DEFPRINT(nodetype, generator) {
          nodetype.DEFMETHOD("_codegen", generator);
      }

      var in_directive = false;
      var active_scope = null;
      var use_asm = null;

      AST_Node.DEFMETHOD("print", function(stream, force_parens) {
          var self = this, generator = self._codegen;
          if (self instanceof AST_Scope) {
              active_scope = self;
          } else if (!use_asm && self instanceof AST_Directive && self.value == "use asm") {
              use_asm = active_scope;
          }
          function doit() {
              stream.prepend_comments(self);
              self.add_source_map(stream);
              generator(self, stream);
              stream.append_comments(self);
          }
          stream.push_node(self);
          if (force_parens || self.needs_parens(stream)) {
              stream.with_parens(doit);
          } else {
              doit();
          }
          stream.pop_node();
          if (self === use_asm) {
              use_asm = null;
          }
      });
      AST_Node.DEFMETHOD("_print", AST_Node.prototype.print);

      AST_Node.DEFMETHOD("print_to_string", function(options) {
          var s = OutputStream(options);
          this.print(s);
          return s.get();
      });

      /* -----[ PARENTHESES ]----- */

      function PARENS(nodetype, func) {
          if (Array.isArray(nodetype)) {
              nodetype.forEach(function(nodetype) {
                  PARENS(nodetype, func);
              });
          } else {
              nodetype.DEFMETHOD("needs_parens", func);
          }
      }

      PARENS(AST_Node, return_false);

      // a function expression needs parens around it when it's provably
      // the first token to appear in a statement.
      PARENS(AST_Function, function(output) {
          if (!output.has_parens() && first_in_statement(output)) {
              return true;
          }

          if (output.option("webkit")) {
              var p = output.parent();
              if (p instanceof AST_PropAccess && p.expression === this) {
                  return true;
              }
          }

          if (output.option("wrap_iife")) {
              var p = output.parent();
              return p instanceof AST_Call && p.expression === this;
          }

          return false;
      });

      PARENS(AST_Arrow, function(output) {
          var p = output.parent();
          return p instanceof AST_PropAccess && p.expression === this;
      });

      // same goes for an object literal, because otherwise it would be
      // interpreted as a block of code.
      PARENS(AST_Object, function(output) {
          return !output.has_parens() && first_in_statement(output);
      });

      PARENS(AST_ClassExpression, first_in_statement);

      PARENS(AST_Unary, function(output) {
          var p = output.parent();
          return p instanceof AST_PropAccess && p.expression === this
              || p instanceof AST_Call && p.expression === this
              || p instanceof AST_Binary
                  && p.operator === "**"
                  && this instanceof AST_UnaryPrefix
                  && p.left === this
                  && this.operator !== "++"
                  && this.operator !== "--";
      });

      PARENS(AST_Await, function(output) {
          var p = output.parent();
          return p instanceof AST_PropAccess && p.expression === this
              || p instanceof AST_Call && p.expression === this
              || output.option("safari10") && p instanceof AST_UnaryPrefix;
      });

      PARENS(AST_Sequence, function(output) {
          var p = output.parent();
          return p instanceof AST_Call                          // (foo, bar)() or foo(1, (2, 3), 4)
              || p instanceof AST_Unary                         // !(foo, bar, baz)
              || p instanceof AST_Binary                        // 1 + (2, 3) + 4 ==> 8
              || p instanceof AST_VarDef                        // var a = (1, 2), b = a + a; ==> b == 4
              || p instanceof AST_PropAccess                    // (1, {foo:2}).foo or (1, {foo:2})["foo"] ==> 2
              || p instanceof AST_Array                         // [ 1, (2, 3), 4 ] ==> [ 1, 3, 4 ]
              || p instanceof AST_ObjectProperty                // { foo: (1, 2) }.foo ==> 2
              || p instanceof AST_Conditional                   /* (false, true) ? (a = 10, b = 20) : (c = 30)
                                                                 * ==> 20 (side effect, set a := 10 and b := 20) */
              || p instanceof AST_Arrow                         // x => (x, x)
              || p instanceof AST_DefaultAssign                 // x => (x = (0, function(){}))
              || p instanceof AST_Expansion                     // [...(a, b)]
              || p instanceof AST_ForOf && this === p.object    // for (e of (foo, bar)) {}
              || p instanceof AST_Yield                         // yield (foo, bar)
              || p instanceof AST_Export                        // export default (foo, bar)
          ;
      });

      PARENS(AST_Binary, function(output) {
          var p = output.parent();
          // (foo && bar)()
          if (p instanceof AST_Call && p.expression === this)
              return true;
          // typeof (foo && bar)
          if (p instanceof AST_Unary)
              return true;
          // (foo && bar)["prop"], (foo && bar).prop
          if (p instanceof AST_PropAccess && p.expression === this)
              return true;
          // this deals with precedence: 3 * (2 + 1)
          if (p instanceof AST_Binary) {
              var po = p.operator, pp = PRECEDENCE[po];
              var so = this.operator, sp = PRECEDENCE[so];
              if (pp > sp
                  || (pp == sp
                      && (this === p.right || po == "**"))) {
                  return true;
              }
          }
      });

      PARENS(AST_Yield, function(output) {
          var p = output.parent();
          // (yield 1) + (yield 2)
          // a = yield 3
          if (p instanceof AST_Binary && p.operator !== "=")
              return true;
          // (yield 1)()
          // new (yield 1)()
          if (p instanceof AST_Call && p.expression === this)
              return true;
          // (yield 1) ? yield 2 : yield 3
          if (p instanceof AST_Conditional && p.condition === this)
              return true;
          // -(yield 4)
          if (p instanceof AST_Unary)
              return true;
          // (yield x).foo
          // (yield x)['foo']
          if (p instanceof AST_PropAccess && p.expression === this)
              return true;
      });

      PARENS(AST_PropAccess, function(output) {
          var p = output.parent();
          if (p instanceof AST_New && p.expression === this) {
              // i.e. new (foo.bar().baz)
              //
              // if there's one call into this subtree, then we need
              // parens around it too, otherwise the call will be
              // interpreted as passing the arguments to the upper New
              // expression.
              var parens = false;
              this.walk(new TreeWalker(function(node) {
                  if (parens || node instanceof AST_Scope) return true;
                  if (node instanceof AST_Call) {
                      parens = true;
                      return true;
                  }
              }));
              return parens;
          }
      });

      PARENS(AST_Call, function(output) {
          var p = output.parent(), p1;
          if (p instanceof AST_New && p.expression === this
              || p instanceof AST_Export && p.is_default && this.expression instanceof AST_Function)
              return true;

          // workaround for Safari bug.
          // https://bugs.webkit.org/show_bug.cgi?id=123506
          return this.expression instanceof AST_Function
              && p instanceof AST_PropAccess
              && p.expression === this
              && (p1 = output.parent(1)) instanceof AST_Assign
              && p1.left === p;
      });

      PARENS(AST_New, function(output) {
          var p = output.parent();
          if (!need_constructor_parens(this, output)
              && (p instanceof AST_PropAccess // (new Date).getTime(), (new Date)["getTime"]()
                  || p instanceof AST_Call && p.expression === this)) // (new foo)(bar)
              return true;
      });

      PARENS(AST_Number, function(output) {
          var p = output.parent();
          if (p instanceof AST_PropAccess && p.expression === this) {
              var value = this.getValue();
              if (value < 0 || /^0/.test(make_num(value))) {
                  return true;
              }
          }
      });

      PARENS([ AST_Assign, AST_Conditional ], function(output) {
          var p = output.parent();
          // !(a = false) → true
          if (p instanceof AST_Unary)
              return true;
          // 1 + (a = 2) + 3 → 6, side effect setting a = 2
          if (p instanceof AST_Binary && !(p instanceof AST_Assign))
              return true;
          // (a = func)() —or— new (a = Object)()
          if (p instanceof AST_Call && p.expression === this)
              return true;
          // (a = foo) ? bar : baz
          if (p instanceof AST_Conditional && p.condition === this)
              return true;
          // (a = foo)["prop"] —or— (a = foo).prop
          if (p instanceof AST_PropAccess && p.expression === this)
              return true;
          // ({a, b} = {a: 1, b: 2}), a destructuring assignment
          if (this instanceof AST_Assign && this.left instanceof AST_Destructuring && this.left.is_array === false)
              return true;
      });

      /* -----[ PRINTERS ]----- */

      DEFPRINT(AST_Directive, function(self, output) {
          output.print_string(self.value, self.quote);
          output.semicolon();
      });

      DEFPRINT(AST_Expansion, function (self, output) {
          output.print("...");
          self.expression.print(output);
      });

      DEFPRINT(AST_Destructuring, function (self, output) {
          output.print(self.is_array ? "[" : "{");
          var len = self.names.length;
          self.names.forEach(function (name, i) {
              if (i > 0) output.comma();
              name.print(output);
              // If the final element is a hole, we need to make sure it
              // doesn't look like a trailing comma, by inserting an actual
              // trailing comma.
              if (i == len - 1 && name instanceof AST_Hole) output.comma();
          });
          output.print(self.is_array ? "]" : "}");
      });

      DEFPRINT(AST_Debugger, function(self, output) {
          output.print("debugger");
          output.semicolon();
      });

      /* -----[ statements ]----- */

      function display_body(body, is_toplevel, output, allow_directives) {
          var last = body.length - 1;
          in_directive = allow_directives;
          body.forEach(function(stmt, i) {
              if (in_directive === true && !(stmt instanceof AST_Directive ||
                  stmt instanceof AST_EmptyStatement ||
                  (stmt instanceof AST_SimpleStatement && stmt.body instanceof AST_String)
              )) {
                  in_directive = false;
              }
              if (!(stmt instanceof AST_EmptyStatement)) {
                  output.indent();
                  stmt.print(output);
                  if (!(i == last && is_toplevel)) {
                      output.newline();
                      if (is_toplevel) output.newline();
                  }
              }
              if (in_directive === true &&
                  stmt instanceof AST_SimpleStatement &&
                  stmt.body instanceof AST_String
              ) {
                  in_directive = false;
              }
          });
          in_directive = false;
      }

      AST_StatementWithBody.DEFMETHOD("_do_print_body", function(output) {
          force_statement(this.body, output);
      });

      DEFPRINT(AST_Statement, function(self, output) {
          self.body.print(output);
          output.semicolon();
      });
      DEFPRINT(AST_Toplevel, function(self, output) {
          display_body(self.body, true, output, true);
          output.print("");
      });
      DEFPRINT(AST_LabeledStatement, function(self, output) {
          self.label.print(output);
          output.colon();
          self.body.print(output);
      });
      DEFPRINT(AST_SimpleStatement, function(self, output) {
          self.body.print(output);
          output.semicolon();
      });
      function print_braced_empty(self, output) {
          output.print("{");
          output.with_indent(output.next_indent(), function() {
              output.append_comments(self, true);
          });
          output.print("}");
      }
      function print_braced(self, output, allow_directives) {
          if (self.body.length > 0) {
              output.with_block(function() {
                  display_body(self.body, false, output, allow_directives);
              });
          } else print_braced_empty(self, output);
      }
      DEFPRINT(AST_BlockStatement, function(self, output) {
          print_braced(self, output);
      });
      DEFPRINT(AST_EmptyStatement, function(self, output) {
          output.semicolon();
      });
      DEFPRINT(AST_Do, function(self, output) {
          output.print("do");
          output.space();
          make_block(self.body, output);
          output.space();
          output.print("while");
          output.space();
          output.with_parens(function() {
              self.condition.print(output);
          });
          output.semicolon();
      });
      DEFPRINT(AST_While, function(self, output) {
          output.print("while");
          output.space();
          output.with_parens(function() {
              self.condition.print(output);
          });
          output.space();
          self._do_print_body(output);
      });
      DEFPRINT(AST_For, function(self, output) {
          output.print("for");
          output.space();
          output.with_parens(function() {
              if (self.init) {
                  if (self.init instanceof AST_Definitions) {
                      self.init.print(output);
                  } else {
                      parenthesize_for_noin(self.init, output, true);
                  }
                  output.print(";");
                  output.space();
              } else {
                  output.print(";");
              }
              if (self.condition) {
                  self.condition.print(output);
                  output.print(";");
                  output.space();
              } else {
                  output.print(";");
              }
              if (self.step) {
                  self.step.print(output);
              }
          });
          output.space();
          self._do_print_body(output);
      });
      DEFPRINT(AST_ForIn, function(self, output) {
          output.print("for");
          if (self.await) {
              output.space();
              output.print("await");
          }
          output.space();
          output.with_parens(function() {
              self.init.print(output);
              output.space();
              output.print(self instanceof AST_ForOf ? "of" : "in");
              output.space();
              self.object.print(output);
          });
          output.space();
          self._do_print_body(output);
      });
      DEFPRINT(AST_With, function(self, output) {
          output.print("with");
          output.space();
          output.with_parens(function() {
              self.expression.print(output);
          });
          output.space();
          self._do_print_body(output);
      });

      /* -----[ functions ]----- */
      AST_Lambda.DEFMETHOD("_do_print", function(output, nokeyword) {
          var self = this;
          if (!nokeyword) {
              if (self.async) {
                  output.print("async");
                  output.space();
              }
              output.print("function");
              if (self.is_generator) {
                  output.star();
              }
              if (self.name) {
                  output.space();
              }
          }
          if (self.name instanceof AST_Symbol) {
              self.name.print(output);
          } else if (nokeyword && self.name instanceof AST_Node) {
              output.with_square(function() {
                  self.name.print(output); // Computed method name
              });
          }
          output.with_parens(function() {
              self.argnames.forEach(function(arg, i) {
                  if (i) output.comma();
                  arg.print(output);
              });
          });
          output.space();
          print_braced(self, output, true);
      });
      DEFPRINT(AST_Lambda, function(self, output) {
          self._do_print(output);
      });

      DEFPRINT(AST_PrefixedTemplateString, function(self, output) {
          var tag = self.prefix;
          var parenthesize_tag = tag instanceof AST_Arrow
              || tag instanceof AST_Binary
              || tag instanceof AST_Conditional
              || tag instanceof AST_Sequence
              || tag instanceof AST_Unary;
          if (parenthesize_tag) output.print("(");
          self.prefix.print(output);
          if (parenthesize_tag) output.print(")");
          self.template_string.print(output);
      });
      DEFPRINT(AST_TemplateString, function(self, output) {
          var is_tagged = output.parent() instanceof AST_PrefixedTemplateString;

          output.print("`");
          for (var i = 0; i < self.segments.length; i++) {
              if (!(self.segments[i] instanceof AST_TemplateSegment)) {
                  output.print("${");
                  self.segments[i].print(output);
                  output.print("}");
              } else if (is_tagged) {
                  output.print(self.segments[i].raw);
              } else {
                  output.print_template_string_chars(self.segments[i].value);
              }
          }
          output.print("`");
      });

      AST_Arrow.DEFMETHOD("_do_print", function(output) {
          var self = this;
          var parent = output.parent();
          var needs_parens = (parent instanceof AST_Binary && !(parent instanceof AST_Assign)) ||
              parent instanceof AST_Unary ||
              (parent instanceof AST_Call && self === parent.expression);
          if (needs_parens) { output.print("("); }
          if (self.async) {
              output.print("async");
              output.space();
          }
          if (self.argnames.length === 1 && self.argnames[0] instanceof AST_Symbol) {
              self.argnames[0].print(output);
          } else {
              output.with_parens(function() {
                  self.argnames.forEach(function(arg, i) {
                      if (i) output.comma();
                      arg.print(output);
                  });
              });
          }
          output.space();
          output.print("=>");
          output.space();
          if (self.body instanceof AST_Node) {
              self.body.print(output);
          } else {
              print_braced(self, output);
          }
          if (needs_parens) { output.print(")"); }
      });

      /* -----[ exits ]----- */
      AST_Exit.DEFMETHOD("_do_print", function(output, kind) {
          output.print(kind);
          if (this.value) {
              output.space();
              this.value.print(output);
          }
          output.semicolon();
      });
      DEFPRINT(AST_Return, function(self, output) {
          self._do_print(output, "return");
      });
      DEFPRINT(AST_Throw, function(self, output) {
          self._do_print(output, "throw");
      });

      /* -----[ yield ]----- */

      DEFPRINT(AST_Yield, function(self, output) {
          var star = self.is_star ? "*" : "";
          output.print("yield" + star);
          if (self.expression) {
              output.space();
              self.expression.print(output);
          }
      });

      DEFPRINT(AST_Await, function(self, output) {
          output.print("await");
          output.space();
          var e = self.expression;
          var parens = !(
                 e instanceof AST_Call
              || e instanceof AST_SymbolRef
              || e instanceof AST_PropAccess
              || e instanceof AST_Unary
              || e instanceof AST_Constant
          );
          if (parens) output.print("(");
          self.expression.print(output);
          if (parens) output.print(")");
      });

      /* -----[ loop control ]----- */
      AST_LoopControl.DEFMETHOD("_do_print", function(output, kind) {
          output.print(kind);
          if (this.label) {
              output.space();
              this.label.print(output);
          }
          output.semicolon();
      });
      DEFPRINT(AST_Break, function(self, output) {
          self._do_print(output, "break");
      });
      DEFPRINT(AST_Continue, function(self, output) {
          self._do_print(output, "continue");
      });

      /* -----[ if ]----- */
      function make_then(self, output) {
          var b = self.body;
          if (output.option("braces")
              || output.option("ie8") && b instanceof AST_Do)
              return make_block(b, output);
          // The squeezer replaces "block"-s that contain only a single
          // statement with the statement itself; technically, the AST
          // is correct, but this can create problems when we output an
          // IF having an ELSE clause where the THEN clause ends in an
          // IF *without* an ELSE block (then the outer ELSE would refer
          // to the inner IF).  This function checks for this case and
          // adds the block braces if needed.
          if (!b) return output.force_semicolon();
          while (true) {
              if (b instanceof AST_If) {
                  if (!b.alternative) {
                      make_block(self.body, output);
                      return;
                  }
                  b = b.alternative;
              } else if (b instanceof AST_StatementWithBody) {
                  b = b.body;
              } else break;
          }
          force_statement(self.body, output);
      }
      DEFPRINT(AST_If, function(self, output) {
          output.print("if");
          output.space();
          output.with_parens(function() {
              self.condition.print(output);
          });
          output.space();
          if (self.alternative) {
              make_then(self, output);
              output.space();
              output.print("else");
              output.space();
              if (self.alternative instanceof AST_If)
                  self.alternative.print(output);
              else
                  force_statement(self.alternative, output);
          } else {
              self._do_print_body(output);
          }
      });

      /* -----[ switch ]----- */
      DEFPRINT(AST_Switch, function(self, output) {
          output.print("switch");
          output.space();
          output.with_parens(function() {
              self.expression.print(output);
          });
          output.space();
          var last = self.body.length - 1;
          if (last < 0) print_braced_empty(self, output);
          else output.with_block(function() {
              self.body.forEach(function(branch, i) {
                  output.indent(true);
                  branch.print(output);
                  if (i < last && branch.body.length > 0)
                      output.newline();
              });
          });
      });
      AST_SwitchBranch.DEFMETHOD("_do_print_body", function(output) {
          output.newline();
          this.body.forEach(function(stmt) {
              output.indent();
              stmt.print(output);
              output.newline();
          });
      });
      DEFPRINT(AST_Default, function(self, output) {
          output.print("default:");
          self._do_print_body(output);
      });
      DEFPRINT(AST_Case, function(self, output) {
          output.print("case");
          output.space();
          self.expression.print(output);
          output.print(":");
          self._do_print_body(output);
      });

      /* -----[ exceptions ]----- */
      DEFPRINT(AST_Try, function(self, output) {
          output.print("try");
          output.space();
          print_braced(self, output);
          if (self.bcatch) {
              output.space();
              self.bcatch.print(output);
          }
          if (self.bfinally) {
              output.space();
              self.bfinally.print(output);
          }
      });
      DEFPRINT(AST_Catch, function(self, output) {
          output.print("catch");
          if (self.argname) {
              output.space();
              output.with_parens(function() {
                  self.argname.print(output);
              });
          }
          output.space();
          print_braced(self, output);
      });
      DEFPRINT(AST_Finally, function(self, output) {
          output.print("finally");
          output.space();
          print_braced(self, output);
      });

      /* -----[ var/const ]----- */
      AST_Definitions.DEFMETHOD("_do_print", function(output, kind) {
          output.print(kind);
          output.space();
          this.definitions.forEach(function(def, i) {
              if (i) output.comma();
              def.print(output);
          });
          var p = output.parent();
          var in_for = p instanceof AST_For || p instanceof AST_ForIn;
          var output_semicolon = !in_for || p && p.init !== this;
          if (output_semicolon)
              output.semicolon();
      });
      DEFPRINT(AST_Let, function(self, output) {
          self._do_print(output, "let");
      });
      DEFPRINT(AST_Var, function(self, output) {
          self._do_print(output, "var");
      });
      DEFPRINT(AST_Const, function(self, output) {
          self._do_print(output, "const");
      });
      DEFPRINT(AST_Import, function(self, output) {
          output.print("import");
          output.space();
          if (self.imported_name) {
              self.imported_name.print(output);
          }
          if (self.imported_name && self.imported_names) {
              output.print(",");
              output.space();
          }
          if (self.imported_names) {
              if (self.imported_names.length === 1 && self.imported_names[0].foreign_name.name === "*") {
                  self.imported_names[0].print(output);
              } else {
                  output.print("{");
                  self.imported_names.forEach(function (name_import, i) {
                      output.space();
                      name_import.print(output);
                      if (i < self.imported_names.length - 1) {
                          output.print(",");
                      }
                  });
                  output.space();
                  output.print("}");
              }
          }
          if (self.imported_name || self.imported_names) {
              output.space();
              output.print("from");
              output.space();
          }
          self.module_name.print(output);
          output.semicolon();
      });

      DEFPRINT(AST_NameMapping, function(self, output) {
          var is_import = output.parent() instanceof AST_Import;
          var definition = self.name.definition();
          var names_are_different =
              (definition && definition.mangled_name || self.name.name) !==
              self.foreign_name.name;
          if (names_are_different) {
              if (is_import) {
                  output.print(self.foreign_name.name);
              } else {
                  self.name.print(output);
              }
              output.space();
              output.print("as");
              output.space();
              if (is_import) {
                  self.name.print(output);
              } else {
                  output.print(self.foreign_name.name);
              }
          } else {
              self.name.print(output);
          }
      });

      DEFPRINT(AST_Export, function(self, output) {
          output.print("export");
          output.space();
          if (self.is_default) {
              output.print("default");
              output.space();
          }
          if (self.exported_names) {
              if (self.exported_names.length === 1 && self.exported_names[0].name.name === "*") {
                  self.exported_names[0].print(output);
              } else {
                  output.print("{");
                  self.exported_names.forEach(function(name_export, i) {
                      output.space();
                      name_export.print(output);
                      if (i < self.exported_names.length - 1) {
                          output.print(",");
                      }
                  });
                  output.space();
                  output.print("}");
              }
          } else if (self.exported_value) {
              self.exported_value.print(output);
          } else if (self.exported_definition) {
              self.exported_definition.print(output);
              if (self.exported_definition instanceof AST_Definitions) return;
          }
          if (self.module_name) {
              output.space();
              output.print("from");
              output.space();
              self.module_name.print(output);
          }
          if (self.exported_value
                  && !(self.exported_value instanceof AST_Defun ||
                      self.exported_value instanceof AST_Function ||
                      self.exported_value instanceof AST_Class)
              || self.module_name
              || self.exported_names
          ) {
              output.semicolon();
          }
      });

      function parenthesize_for_noin(node, output, noin) {
          var parens = false;
          // need to take some precautions here:
          //    https://github.com/mishoo/UglifyJS2/issues/60
          if (noin) node.walk(new TreeWalker(function(node) {
              if (parens || node instanceof AST_Scope) return true;
              if (node instanceof AST_Binary && node.operator == "in") {
                  parens = true;
                  return true;
              }
          }));
          node.print(output, parens);
      }

      DEFPRINT(AST_VarDef, function(self, output) {
          self.name.print(output);
          if (self.value) {
              output.space();
              output.print("=");
              output.space();
              var p = output.parent(1);
              var noin = p instanceof AST_For || p instanceof AST_ForIn;
              parenthesize_for_noin(self.value, output, noin);
          }
      });

      /* -----[ other expressions ]----- */
      DEFPRINT(AST_Call, function(self, output) {
          self.expression.print(output);
          if (self instanceof AST_New && !need_constructor_parens(self, output))
              return;
          if (self.expression instanceof AST_Call || self.expression instanceof AST_Lambda) {
              output.add_mapping(self.start);
          }
          output.with_parens(function() {
              self.args.forEach(function(expr, i) {
                  if (i) output.comma();
                  expr.print(output);
              });
          });
      });
      DEFPRINT(AST_New, function(self, output) {
          output.print("new");
          output.space();
          AST_Call.prototype._codegen(self, output);
      });

      AST_Sequence.DEFMETHOD("_do_print", function(output) {
          this.expressions.forEach(function(node, index) {
              if (index > 0) {
                  output.comma();
                  if (output.should_break()) {
                      output.newline();
                      output.indent();
                  }
              }
              node.print(output);
          });
      });
      DEFPRINT(AST_Sequence, function(self, output) {
          self._do_print(output);
          // var p = output.parent();
          // if (p instanceof AST_Statement) {
          //     output.with_indent(output.next_indent(), function(){
          //         self._do_print(output);
          //     });
          // } else {
          //     self._do_print(output);
          // }
      });
      DEFPRINT(AST_Dot, function(self, output) {
          var expr = self.expression;
          expr.print(output);
          var prop = self.property;
          if (output.option("ie8") && RESERVED_WORDS.has(prop)) {
              output.print("[");
              output.add_mapping(self.end);
              output.print_string(prop);
              output.print("]");
          } else {
              if (expr instanceof AST_Number && expr.getValue() >= 0) {
                  if (!/[xa-f.)]/i.test(output.last())) {
                      output.print(".");
                  }
              }
              output.print(".");
              // the name after dot would be mapped about here.
              output.add_mapping(self.end);
              output.print_name(prop);
          }
      });
      DEFPRINT(AST_Sub, function(self, output) {
          self.expression.print(output);
          output.print("[");
          self.property.print(output);
          output.print("]");
      });
      DEFPRINT(AST_UnaryPrefix, function(self, output) {
          var op = self.operator;
          output.print(op);
          if (/^[a-z]/i.test(op)
              || (/[+-]$/.test(op)
                  && self.expression instanceof AST_UnaryPrefix
                  && /^[+-]/.test(self.expression.operator))) {
              output.space();
          }
          self.expression.print(output);
      });
      DEFPRINT(AST_UnaryPostfix, function(self, output) {
          self.expression.print(output);
          output.print(self.operator);
      });
      DEFPRINT(AST_Binary, function(self, output) {
          var op = self.operator;
          self.left.print(output);
          if (op[0] == ">" /* ">>" ">>>" ">" ">=" */
              && self.left instanceof AST_UnaryPostfix
              && self.left.operator == "--") {
              // space is mandatory to avoid outputting -->
              output.print(" ");
          } else {
              // the space is optional depending on "beautify"
              output.space();
          }
          output.print(op);
          if ((op == "<" || op == "<<")
              && self.right instanceof AST_UnaryPrefix
              && self.right.operator == "!"
              && self.right.expression instanceof AST_UnaryPrefix
              && self.right.expression.operator == "--") {
              // space is mandatory to avoid outputting <!--
              output.print(" ");
          } else {
              // the space is optional depending on "beautify"
              output.space();
          }
          self.right.print(output);
      });
      DEFPRINT(AST_Conditional, function(self, output) {
          self.condition.print(output);
          output.space();
          output.print("?");
          output.space();
          self.consequent.print(output);
          output.space();
          output.colon();
          self.alternative.print(output);
      });

      /* -----[ literals ]----- */
      DEFPRINT(AST_Array, function(self, output) {
          output.with_square(function() {
              var a = self.elements, len = a.length;
              if (len > 0) output.space();
              a.forEach(function(exp, i) {
                  if (i) output.comma();
                  exp.print(output);
                  // If the final element is a hole, we need to make sure it
                  // doesn't look like a trailing comma, by inserting an actual
                  // trailing comma.
                  if (i === len - 1 && exp instanceof AST_Hole)
                    output.comma();
              });
              if (len > 0) output.space();
          });
      });
      DEFPRINT(AST_Object, function(self, output) {
          if (self.properties.length > 0) output.with_block(function() {
              self.properties.forEach(function(prop, i) {
                  if (i) {
                      output.print(",");
                      output.newline();
                  }
                  output.indent();
                  prop.print(output);
              });
              output.newline();
          });
          else print_braced_empty(self, output);
      });
      DEFPRINT(AST_Class, function(self, output) {
          output.print("class");
          output.space();
          if (self.name) {
              self.name.print(output);
              output.space();
          }
          if (self.extends) {
              var parens = (
                     !(self.extends instanceof AST_SymbolRef)
                  && !(self.extends instanceof AST_PropAccess)
                  && !(self.extends instanceof AST_ClassExpression)
                  && !(self.extends instanceof AST_Function)
              );
              output.print("extends");
              if (parens) {
                  output.print("(");
              } else {
                  output.space();
              }
              self.extends.print(output);
              if (parens) {
                  output.print(")");
              } else {
                  output.space();
              }
          }
          if (self.properties.length > 0) output.with_block(function() {
              self.properties.forEach(function(prop, i) {
                  if (i) {
                      output.newline();
                  }
                  output.indent();
                  prop.print(output);
              });
              output.newline();
          });
          else output.print("{}");
      });
      DEFPRINT(AST_NewTarget, function(self, output) {
          output.print("new.target");
      });

      function print_property_name(key, quote, output) {
          if (output.option("quote_keys")) {
              output.print_string(key);
          } else if ("" + +key == key && key >= 0) {
              output.print(make_num(key));
          } else if (RESERVED_WORDS.has(key) ? !output.option("ie8") : is_identifier_string(key)) {
              if (quote && output.option("keep_quoted_props")) {
                  output.print_string(key, quote);
              } else {
                  output.print_name(key);
              }
          } else {
              output.print_string(key, quote);
          }
      }

      DEFPRINT(AST_ObjectKeyVal, function(self, output) {
          function get_name(self) {
              var def = self.definition();
              return def ? def.mangled_name || def.name : self.name;
          }

          var allowShortHand = output.option("shorthand");
          if (allowShortHand &&
              self.value instanceof AST_Symbol &&
              is_identifier_string(self.key) &&
              get_name(self.value) === self.key &&
              !RESERVED_WORDS.has(self.key)
          ) {
              print_property_name(self.key, self.quote, output);

          } else if (allowShortHand &&
              self.value instanceof AST_DefaultAssign &&
              self.value.left instanceof AST_Symbol &&
              is_identifier_string(self.key) &&
              get_name(self.value.left) === self.key
          ) {
              print_property_name(self.key, self.quote, output);
              output.space();
              output.print("=");
              output.space();
              self.value.right.print(output);
          } else {
              if (!(self.key instanceof AST_Node)) {
                  print_property_name(self.key, self.quote, output);
              } else {
                  output.with_square(function() {
                      self.key.print(output);
                  });
              }
              output.colon();
              self.value.print(output);
          }
      });
      AST_ObjectProperty.DEFMETHOD("_print_getter_setter", function(type, output) {
          var self = this;
          if (self.static) {
              output.print("static");
              output.space();
          }
          if (type) {
              output.print(type);
              output.space();
          }
          if (self.key instanceof AST_SymbolMethod) {
              print_property_name(self.key.name, self.quote, output);
          } else {
              output.with_square(function() {
                  self.key.print(output);
              });
          }
          self.value._do_print(output, true);
      });
      DEFPRINT(AST_ObjectSetter, function(self, output) {
          self._print_getter_setter("set", output);
      });
      DEFPRINT(AST_ObjectGetter, function(self, output) {
          self._print_getter_setter("get", output);
      });
      DEFPRINT(AST_ConciseMethod, function(self, output) {
          var type;
          if (self.is_generator && self.async) {
              type = "async*";
          } else if (self.is_generator) {
              type = "*";
          } else if (self.async) {
              type = "async";
          }
          self._print_getter_setter(type, output);
      });
      AST_Symbol.DEFMETHOD("_do_print", function(output) {
          var def = this.definition();
          output.print_name(def ? def.mangled_name || def.name : this.name);
      });
      DEFPRINT(AST_Symbol, function (self, output) {
          self._do_print(output);
      });
      DEFPRINT(AST_Hole, noop);
      DEFPRINT(AST_This, function(self, output) {
          output.print("this");
      });
      DEFPRINT(AST_Super, function(self, output) {
          output.print("super");
      });
      DEFPRINT(AST_Constant, function(self, output) {
          output.print(self.getValue());
      });
      DEFPRINT(AST_String, function(self, output) {
          output.print_string(self.getValue(), self.quote, in_directive);
      });
      DEFPRINT(AST_Number, function(self, output) {
          if (use_asm && self.start && self.start.raw != null) {
              output.print(self.start.raw);
          } else {
              output.print(make_num(self.getValue()));
          }
      });

      DEFPRINT(AST_RegExp, function(self, output) {
          var regexp = self.getValue();
          var str = regexp.toString();
          str = output.to_utf8(str);
          output.print(str);
          var p = output.parent();
          if (p instanceof AST_Binary && /^in/.test(p.operator) && p.left === self)
              output.print(" ");
      });

      function force_statement(stat, output) {
          if (output.option("braces")) {
              make_block(stat, output);
          } else {
              if (!stat || stat instanceof AST_EmptyStatement)
                  output.force_semicolon();
              else
                  stat.print(output);
          }
      }

      // self should be AST_New.  decide if we want to show parens or not.
      function need_constructor_parens(self, output) {
          // Always print parentheses with arguments
          if (self.args.length > 0) return true;

          return output.option("beautify");
      }

      function best_of(a) {
          var best = a[0], len = best.length;
          for (var i = 1; i < a.length; ++i) {
              if (a[i].length < len) {
                  best = a[i];
                  len = best.length;
              }
          }
          return best;
      }

      function make_num(num) {
          var str = num.toString(10), a = [ str.replace(/^0\./, ".").replace("e+", "e") ], m;
          if (Math.floor(num) === num) {
              a.push(
                  (num >= 0 ? "0x" : "-0x") + num.toString(16).toLowerCase() // probably pointless
              );
              if ((m = /^(.*?)(0{3,})$/.exec(num))) {
                  a.push(m[1] + "e" + m[2].length);
              }
          } else if ((m = /^0?\.(0+)(.*)$/.exec(num))) {
              a.push(m[2] + "e-" + (m[1].length + m[2].length));
          }
          return best_of(a);
      }

      function make_block(stmt, output) {
          if (!stmt || stmt instanceof AST_EmptyStatement)
              output.print("{}");
          else if (stmt instanceof AST_BlockStatement)
              stmt.print(output);
          else output.with_block(function() {
              output.indent();
              stmt.print(output);
              output.newline();
          });
      }

      /* -----[ source map generators ]----- */

      function DEFMAP(nodetype, generator) {
          nodetype.forEach(function(nodetype) {
              nodetype.DEFMETHOD("add_source_map", generator);
          });
      }

      DEFMAP([
          // We could easily add info for ALL nodes, but it seems to me that
          // would be quite wasteful, hence this noop in the base class.
          AST_Node,
          // since the label symbol will mark it
          AST_LabeledStatement,
          AST_Toplevel,
      ], noop);

      // XXX: I'm not exactly sure if we need it for all of these nodes,
      // or if we should add even more.
      DEFMAP([
          AST_Array,
          AST_BlockStatement,
          AST_Catch,
          AST_Class,
          AST_Constant,
          AST_Debugger,
          AST_Definitions,
          AST_Directive,
          AST_Finally,
          AST_Jump,
          AST_Lambda,
          AST_New,
          AST_Object,
          AST_StatementWithBody,
          AST_Symbol,
          AST_Switch,
          AST_SwitchBranch,
          AST_Try,
      ], function(output) {
          output.add_mapping(this.start);
      });

      DEFMAP([
          AST_ObjectGetter,
          AST_ObjectSetter,
      ], function(output) {
          output.add_mapping(this.start, this.key.name);
      });

      DEFMAP([ AST_ObjectProperty ], function(output) {
          output.add_mapping(this.start, this.key);
      });
  })();

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  function SymbolDef(scope, orig, init) {
      this.name = orig.name;
      this.orig = [ orig ];
      this.init = init;
      this.eliminated = 0;
      this.scope = scope;
      this.references = [];
      this.replaced = 0;
      this.global = false;
      this.export = false;
      this.mangled_name = null;
      this.undeclared = false;
      this.id = SymbolDef.next_id++;
  }

  SymbolDef.next_id = 1;

  var MASK_EXPORT_DONT_MANGLE = 1 << 0;
  var MASK_EXPORT_WANT_MANGLE = 1 << 1;

  SymbolDef.prototype = {
      unmangleable: function(options) {
          if (!options) options = {};

          return this.global && !options.toplevel
              || (this.export & MASK_EXPORT_DONT_MANGLE)
              || this.undeclared
              || !options.eval && this.scope.pinned()
              || (this.orig[0] instanceof AST_SymbolLambda
                    || this.orig[0] instanceof AST_SymbolDefun) && keep_name(options.keep_fnames, this.orig[0].name)
              || this.orig[0] instanceof AST_SymbolMethod
              || (this.orig[0] instanceof AST_SymbolClass
                    || this.orig[0] instanceof AST_SymbolDefClass) && keep_name(options.keep_classnames, this.orig[0].name);
      },
      mangle: function(options) {
          var cache = options.cache && options.cache.props;
          if (this.global && cache && cache.has(this.name)) {
              this.mangled_name = cache.get(this.name);
          } else if (!this.mangled_name && !this.unmangleable(options)) {
              var s = this.scope;
              var sym = this.orig[0];
              if (options.ie8 && sym instanceof AST_SymbolLambda)
                  s = s.parent_scope;
              var def;
              if (def = this.redefined()) {
                  this.mangled_name = def.mangled_name || def.name;
              } else
                  this.mangled_name = s.next_mangled(options, this);
              if (this.global && cache) {
                  cache.set(this.name, this.mangled_name);
              }
          }
      },
      redefined: function() {
          return this.defun && this.defun.variables.get(this.name);
      }
  };

  AST_Toplevel.DEFMETHOD("figure_out_scope", function(options) {
      options = defaults(options, {
          cache: null,
          ie8: false,
          safari10: false,
      });

      // pass 1: setup scope chaining and handle definitions
      var self = this;
      var scope = self.parent_scope = null;
      var labels = new Map();
      var defun = null;
      var in_destructuring = null;
      var for_scopes = [];
      var tw = new TreeWalker(function(node, descend) {
          if (node.is_block_scope()) {
              var save_scope = scope;
              node.block_scope = scope = new AST_Scope(node);
              scope.init_scope_vars(save_scope);
              if (!(node instanceof AST_Scope)) {
                  scope.uses_with = save_scope.uses_with;
                  scope.uses_eval = save_scope.uses_eval;
                  scope.directives = save_scope.directives;
              }
              if (options.safari10) {
                  if (node instanceof AST_For || node instanceof AST_ForIn) {
                      for_scopes.push(scope);
                  }
              }
              descend();
              scope = save_scope;
              return true;
          }
          if (node instanceof AST_Destructuring) {
              in_destructuring = node;  // These don't nest
              descend();
              in_destructuring = null;
              return true;
          }
          if (node instanceof AST_Scope) {
              node.init_scope_vars(scope);
              var save_scope = scope;
              var save_defun = defun;
              var save_labels = labels;
              defun = scope = node;
              labels = new Map();
              descend();
              scope = save_scope;
              defun = save_defun;
              labels = save_labels;
              return true;        // don't descend again in TreeWalker
          }
          if (node instanceof AST_LabeledStatement) {
              var l = node.label;
              if (labels.has(l.name)) {
                  throw new Error(string_template("Label {name} defined twice", l));
              }
              labels.set(l.name, l);
              descend();
              labels.delete(l.name);
              return true;        // no descend again
          }
          if (node instanceof AST_With) {
              for (var s = scope; s; s = s.parent_scope)
                  s.uses_with = true;
              return;
          }
          if (node instanceof AST_Symbol) {
              node.scope = scope;
          }
          if (node instanceof AST_Label) {
              node.thedef = node;
              node.references = [];
          }
          if (node instanceof AST_SymbolLambda) {
              defun.def_function(node, node.name == "arguments" ? undefined : defun);
          } else if (node instanceof AST_SymbolDefun) {
              // Careful here, the scope where this should be defined is
              // the parent scope.  The reason is that we enter a new
              // scope when we encounter the AST_Defun node (which is
              // instanceof AST_Scope) but we get to the symbol a bit
              // later.
              mark_export((node.scope = defun.parent_scope.get_defun_scope()).def_function(node, defun), 1);
          } else if (node instanceof AST_SymbolClass) {
              mark_export(defun.def_variable(node, defun), 1);
          } else if (node instanceof AST_SymbolImport) {
              scope.def_variable(node);
          } else if (node instanceof AST_SymbolDefClass) {
              // This deals with the name of the class being available
              // inside the class.
              mark_export((node.scope = defun.parent_scope).def_function(node, defun), 1);
          } else if (node instanceof AST_SymbolVar
              || node instanceof AST_SymbolLet
              || node instanceof AST_SymbolConst) {
              var def;
              if (node instanceof AST_SymbolBlockDeclaration) {
                  def = scope.def_variable(node, null);
              } else {
                  def = defun.def_variable(node, node.TYPE == "SymbolVar" ? null : undefined);
              }
              if (!all(def.orig, function(sym) {
                  if (sym === node) return true;
                  if (node instanceof AST_SymbolBlockDeclaration) {
                      return sym instanceof AST_SymbolLambda;
                  }
                  return !(sym instanceof AST_SymbolLet || sym instanceof AST_SymbolConst);
              })) {
                  js_error(
                      node.name + " redeclared",
                      node.start.file,
                      node.start.line,
                      node.start.col,
                      node.start.pos
                  );
              }
              if (!(node instanceof AST_SymbolFunarg)) mark_export(def, 2);
              def.destructuring = in_destructuring;
              if (defun !== scope) {
                  node.mark_enclosed(options);
                  var def = scope.find_variable(node);
                  if (node.thedef !== def) {
                      node.thedef = def;
                      node.reference(options);
                  }
              }
          } else if (node instanceof AST_SymbolCatch) {
              scope.def_variable(node).defun = defun;
          } else if (node instanceof AST_LabelRef) {
              var sym = labels.get(node.name);
              if (!sym) throw new Error(string_template("Undefined label {name} [{line},{col}]", {
                  name: node.name,
                  line: node.start.line,
                  col: node.start.col
              }));
              node.thedef = sym;
          }
          if (!(scope instanceof AST_Toplevel) && (node instanceof AST_Export || node instanceof AST_Import)) {
              js_error(
                  node.TYPE + " statement may only appear at top level",
                  node.start.file,
                  node.start.line,
                  node.start.col,
                  node.start.pos
              );
          }

          function mark_export(def, level) {
              if (in_destructuring) {
                  var i = 0;
                  do {
                      level++;
                  } while (tw.parent(i++) !== in_destructuring);
              }
              var node = tw.parent(level);
              if (def.export = node instanceof AST_Export && MASK_EXPORT_DONT_MANGLE) {
                  var exported = node.exported_definition;
                  if ((exported instanceof AST_Defun || exported instanceof AST_DefClass) && node.is_default) {
                      def.export = MASK_EXPORT_WANT_MANGLE;
                  }
              }
          }
      });
      self.walk(tw);

      // pass 2: find back references and eval
      self.globals = new Map();
      var tw = new TreeWalker(function(node, descend) {
          if (node instanceof AST_LoopControl && node.label) {
              node.label.thedef.references.push(node);
              return true;
          }
          if (node instanceof AST_SymbolRef) {
              var name = node.name;
              if (name == "eval" && tw.parent() instanceof AST_Call) {
                  for (var s = node.scope; s && !s.uses_eval; s = s.parent_scope) {
                      s.uses_eval = true;
                  }
              }
              var sym;
              if (tw.parent() instanceof AST_NameMapping && tw.parent(1).module_name
                  || !(sym = node.scope.find_variable(name))) {
                  sym = self.def_global(node);
                  if (node instanceof AST_SymbolExport) sym.export = MASK_EXPORT_DONT_MANGLE;
              } else if (sym.scope instanceof AST_Lambda && name == "arguments") {
                  sym.scope.uses_arguments = true;
              }
              node.thedef = sym;
              node.reference(options);
              if (node.scope.is_block_scope()
                  && !(sym.orig[0] instanceof AST_SymbolBlockDeclaration)) {
                  node.scope = node.scope.get_defun_scope();
              }
              return true;
          }
          // ensure mangling works if catch reuses a scope variable
          var def;
          if (node instanceof AST_SymbolCatch && (def = node.definition().redefined())) {
              var s = node.scope;
              while (s) {
                  push_uniq(s.enclosed, def);
                  if (s === def.scope) break;
                  s = s.parent_scope;
              }
          }
      });
      self.walk(tw);

      // pass 3: work around IE8 and Safari catch scope bugs
      if (options.ie8 || options.safari10) {
          self.walk(new TreeWalker(function(node, descend) {
              if (node instanceof AST_SymbolCatch) {
                  var name = node.name;
                  var refs = node.thedef.references;
                  var scope = node.thedef.defun;
                  var def = scope.find_variable(name) || self.globals.get(name) || scope.def_variable(node);
                  refs.forEach(function(ref) {
                      ref.thedef = def;
                      ref.reference(options);
                  });
                  node.thedef = def;
                  node.reference(options);
                  return true;
              }
          }));
      }

      // pass 4: add symbol definitions to loop scopes
      // Safari/Webkit bug workaround - loop init let variable shadowing argument.
      // https://github.com/mishoo/UglifyJS2/issues/1753
      // https://bugs.webkit.org/show_bug.cgi?id=171041
      if (options.safari10) {
          for (var i = 0; i < for_scopes.length; i++) {
              var scope = for_scopes[i];
              scope.parent_scope.variables.forEach(function(def) {
                  push_uniq(scope.enclosed, def);
              });
          }
      }
  });

  AST_Toplevel.DEFMETHOD("def_global", function(node) {
      var globals = this.globals, name = node.name;
      if (globals.has(name)) {
          return globals.get(name);
      } else {
          var g = new SymbolDef(this, node);
          g.undeclared = true;
          g.global = true;
          globals.set(name, g);
          return g;
      }
  });

  AST_Scope.DEFMETHOD("init_scope_vars", function(parent_scope) {
      this.variables = new Map();         // map name to AST_SymbolVar (variables defined in this scope; includes functions)
      this.functions = new Map();         // map name to AST_SymbolDefun (functions defined in this scope)
      this.uses_with = false;             // will be set to true if this or some nested scope uses the `with` statement
      this.uses_eval = false;             // will be set to true if this or nested scope uses the global `eval`
      this.parent_scope = parent_scope;   // the parent scope
      this.enclosed = [];                 // a list of variables from this or outer scope(s) that are referenced from this or inner scopes
      this.cname = -1;                    // the current index for mangling functions/variables
  });

  AST_Node.DEFMETHOD("is_block_scope", return_false);
  AST_Class.DEFMETHOD("is_block_scope", return_false);
  AST_Lambda.DEFMETHOD("is_block_scope", return_false);
  AST_Toplevel.DEFMETHOD("is_block_scope", return_false);
  AST_SwitchBranch.DEFMETHOD("is_block_scope", return_false);
  AST_Block.DEFMETHOD("is_block_scope", return_true);
  AST_IterationStatement.DEFMETHOD("is_block_scope", return_true);

  AST_Lambda.DEFMETHOD("init_scope_vars", function() {
      AST_Scope.prototype.init_scope_vars.apply(this, arguments);
      this.uses_arguments = false;
      this.def_variable(new AST_SymbolFunarg({
          name: "arguments",
          start: this.start,
          end: this.end
      }));
  });

  AST_Arrow.DEFMETHOD("init_scope_vars", function() {
      AST_Scope.prototype.init_scope_vars.apply(this, arguments);
      this.uses_arguments = false;
  });

  AST_Symbol.DEFMETHOD("mark_enclosed", function(options) {
      var def = this.definition();
      var s = this.scope;
      while (s) {
          push_uniq(s.enclosed, def);
          if (options.keep_fnames) {
              s.functions.forEach(function(d) {
                  if (keep_name(options.keep_fnames, d.name)) {
                      push_uniq(def.scope.enclosed, d);
                  }
              });
          }
          if (s === def.scope) break;
          s = s.parent_scope;
      }
  });

  AST_Symbol.DEFMETHOD("reference", function(options) {
      this.definition().references.push(this);
      this.mark_enclosed(options);
  });

  AST_Scope.DEFMETHOD("find_variable", function(name) {
      if (name instanceof AST_Symbol) name = name.name;
      return this.variables.get(name)
          || (this.parent_scope && this.parent_scope.find_variable(name));
  });

  AST_Scope.DEFMETHOD("def_function", function(symbol, init) {
      var def = this.def_variable(symbol, init);
      if (!def.init || def.init instanceof AST_Defun) def.init = init;
      this.functions.set(symbol.name, def);
      return def;
  });

  AST_Scope.DEFMETHOD("def_variable", function(symbol, init) {
      var def = this.variables.get(symbol.name);
      if (def) {
          def.orig.push(symbol);
          if (def.init && (def.scope !== symbol.scope || def.init instanceof AST_Function)) {
              def.init = init;
          }
      } else {
          def = new SymbolDef(this, symbol, init);
          this.variables.set(symbol.name, def);
          def.global = !this.parent_scope;
      }
      return symbol.thedef = def;
  });

  function next_mangled(scope, options) {
      var ext = scope.enclosed;
      out: while (true) {
          var m = base54(++scope.cname);
          if (RESERVED_WORDS.has(m)) continue; // skip over "do"

          // https://github.com/mishoo/UglifyJS2/issues/242 -- do not
          // shadow a name reserved from mangling.
          if (member(m, options.reserved)) continue;

          // we must ensure that the mangled name does not shadow a name
          // from some parent scope that is referenced in this or in
          // inner scopes.
          for (var i = ext.length; --i >= 0;) {
              var sym = ext[i];
              var name = sym.mangled_name || (sym.unmangleable(options) && sym.name);
              if (m == name) continue out;
          }
          return m;
      }
  }

  AST_Scope.DEFMETHOD("next_mangled", function(options) {
      return next_mangled(this, options);
  });

  AST_Toplevel.DEFMETHOD("next_mangled", function(options) {
      var name;
      do {
          name = next_mangled(this, options);
      } while (this.mangled_names.has(name));
      return name;
  });

  AST_Function.DEFMETHOD("next_mangled", function(options, def) {
      // #179, #326
      // in Safari strict mode, something like (function x(x){...}) is a syntax error;
      // a function expression's argument cannot shadow the function expression's name

      var tricky_def = def.orig[0] instanceof AST_SymbolFunarg && this.name && this.name.definition();

      // the function's mangled_name is null when keep_fnames is true
      var tricky_name = tricky_def ? tricky_def.mangled_name || tricky_def.name : null;

      while (true) {
          var name = next_mangled(this, options);
          if (!tricky_name || tricky_name != name)
              return name;
      }
  });

  AST_Symbol.DEFMETHOD("unmangleable", function(options) {
      var def = this.definition();
      return !def || def.unmangleable(options);
  });

  // labels are always mangleable
  AST_Label.DEFMETHOD("unmangleable", return_false);

  AST_Symbol.DEFMETHOD("unreferenced", function() {
      return !this.definition().references.length && !this.scope.pinned();
  });

  AST_Symbol.DEFMETHOD("definition", function() {
      return this.thedef;
  });

  AST_Symbol.DEFMETHOD("global", function() {
      return this.definition().global;
  });

  AST_Toplevel.DEFMETHOD("_default_mangler_options", function(options) {
      options = defaults(options, {
          eval        : false,
          ie8         : false,
          keep_classnames: false,
          keep_fnames : false,
          module      : false,
          reserved    : [],
          toplevel    : false,
      });
      if (options["module"]) {
          options.toplevel = true;
      }
      if (!Array.isArray(options.reserved)) options.reserved = [];
      // Never mangle arguments
      push_uniq(options.reserved, "arguments");
      return options;
  });

  AST_Toplevel.DEFMETHOD("mangle_names", function(options) {
      options = this._default_mangler_options(options);

      // We only need to mangle declaration nodes.  Special logic wired
      // into the code generator will display the mangled name if it's
      // present (and for AST_SymbolRef-s it'll use the mangled name of
      // the AST_SymbolDeclaration that it points to).
      var lname = -1;
      var to_mangle = [];

      var mangled_names = this.mangled_names = new Set();
      if (options.cache) {
          this.globals.forEach(collect);
          if (options.cache.props) {
              options.cache.props.forEach(function(mangled_name) {
                  mangled_names.add(mangled_name);
              });
          }
      }

      var tw = new TreeWalker(function(node, descend) {
          if (node instanceof AST_LabeledStatement) {
              // lname is incremented when we get to the AST_Label
              var save_nesting = lname;
              descend();
              lname = save_nesting;
              return true;        // don't descend again in TreeWalker
          }
          if (node instanceof AST_Scope) {
              node.variables.forEach(collect);
              return;
          }
          if (node.is_block_scope()) {
              node.block_scope.variables.forEach(collect);
              return;
          }
          if (node instanceof AST_Label) {
              var name;
              do name = base54(++lname); while (RESERVED_WORDS.has(name));
              node.mangled_name = name;
              return true;
          }
          if (!(options.ie8 || options.safari10) && node instanceof AST_SymbolCatch) {
              to_mangle.push(node.definition());
              return;
          }
      });
      this.walk(tw);
      to_mangle.forEach(function(def) { def.mangle(options); });

      function collect(symbol) {
          if (!member(symbol.name, options.reserved)) {
              if (!(symbol.export & MASK_EXPORT_DONT_MANGLE)) {
                  to_mangle.push(symbol);
              }
          }
      }
  });

  AST_Toplevel.DEFMETHOD("find_colliding_names", function(options) {
      var cache = options.cache && options.cache.props;
      var avoid = new Set();
      options.reserved.forEach(to_avoid);
      this.globals.forEach(add_def);
      this.walk(new TreeWalker(function(node) {
          if (node instanceof AST_Scope) node.variables.forEach(add_def);
          if (node instanceof AST_SymbolCatch) add_def(node.definition());
      }));
      return avoid;

      function to_avoid(name) {
          avoid.add(name);
      }

      function add_def(def) {
          var name = def.name;
          if (def.global && cache && cache.has(name)) name = cache.get(name);
          else if (!def.unmangleable(options)) return;
          to_avoid(name);
      }
  });

  AST_Toplevel.DEFMETHOD("expand_names", function(options) {
      base54.reset();
      base54.sort();
      options = this._default_mangler_options(options);
      var avoid = this.find_colliding_names(options);
      var cname = 0;
      this.globals.forEach(rename);
      this.walk(new TreeWalker(function(node) {
          if (node instanceof AST_Scope) node.variables.forEach(rename);
          if (node instanceof AST_SymbolCatch) rename(node.definition());
      }));

      function next_name() {
          var name;
          do {
              name = base54(cname++);
          } while (avoid.has(name) || RESERVED_WORDS.has(name));
          return name;
      }

      function rename(def) {
          if (def.global && options.cache) return;
          if (def.unmangleable(options)) return;
          if (member(def.name, options.reserved)) return;
          var d = def.redefined();
          def.name = d ? d.name : next_name();
          def.orig.forEach(function(sym) {
              sym.name = def.name;
          });
          def.references.forEach(function(sym) {
              sym.name = def.name;
          });
      }
  });

  AST_Node.DEFMETHOD("tail_node", return_this);
  AST_Sequence.DEFMETHOD("tail_node", function() {
      return this.expressions[this.expressions.length - 1];
  });

  AST_Toplevel.DEFMETHOD("compute_char_frequency", function(options) {
      options = this._default_mangler_options(options);
      try {
          AST_Node.prototype.print = function(stream, force_parens) {
              this._print(stream, force_parens);
              if (this instanceof AST_Symbol && !this.unmangleable(options)) {
                  base54.consider(this.name, -1);
              } else if (options.properties) {
                  if (this instanceof AST_Dot) {
                      base54.consider(this.property, -1);
                  } else if (this instanceof AST_Sub) {
                      skip_string(this.property);
                  }
              }
          };
          base54.consider(this.print_to_string(), 1);
      } finally {
          AST_Node.prototype.print = AST_Node.prototype._print;
      }
      base54.sort();

      function skip_string(node) {
          if (node instanceof AST_String) {
              base54.consider(node.value, -1);
          } else if (node instanceof AST_Conditional) {
              skip_string(node.consequent);
              skip_string(node.alternative);
          } else if (node instanceof AST_Sequence) {
              skip_string(node.tail_node());
          }
      }
  });

  var base54 = (function() {
      var leading = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_".split("");
      var digits = "0123456789".split("");
      var chars, frequency;
      function reset() {
          frequency = new Map();
          leading.forEach(function(ch) {
              frequency.set(ch, 0);
          });
          digits.forEach(function(ch) {
              frequency.set(ch, 0);
          });
      }
      base54.consider = function(str, delta) {
          for (var i = str.length; --i >= 0;) {
              frequency.set(str[i], frequency.get(str[i]) + delta);
          }
      };
      function compare(a, b) {
          return frequency.get(b) - frequency.get(a);
      }
      base54.sort = function() {
          chars = mergeSort(leading, compare).concat(mergeSort(digits, compare));
      };
      base54.reset = reset;
      reset();
      function base54(num) {
          var ret = "", base = 54;
          num++;
          do {
              num--;
              ret += chars[num % base];
              num = Math.floor(num / base);
              base = 64;
          } while (num > 0);
          return ret;
      }
      return base54;
  })();

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  function Compressor(options, false_by_default) {
      if (!(this instanceof Compressor))
          return new Compressor(options, false_by_default);
      TreeTransformer.call(this, this.before, this.after);
      if (options.defaults !== undefined && !options.defaults) false_by_default = true;
      this.options = defaults(options, {
          arguments     : false,
          arrows        : !false_by_default,
          booleans      : !false_by_default,
          booleans_as_integers : false,
          collapse_vars : !false_by_default,
          comparisons   : !false_by_default,
          computed_props: !false_by_default,
          conditionals  : !false_by_default,
          dead_code     : !false_by_default,
          defaults      : true,
          directives    : !false_by_default,
          drop_console  : false,
          drop_debugger : !false_by_default,
          ecma          : 5,
          evaluate      : !false_by_default,
          expression    : false,
          global_defs   : false,
          hoist_funs    : false,
          hoist_props   : !false_by_default,
          hoist_vars    : false,
          ie8           : false,
          if_return     : !false_by_default,
          inline        : !false_by_default,
          join_vars     : !false_by_default,
          keep_classnames: false,
          keep_fargs    : true,
          keep_fnames   : false,
          keep_infinity : false,
          loops         : !false_by_default,
          module        : false,
          negate_iife   : !false_by_default,
          passes        : 1,
          properties    : !false_by_default,
          pure_getters  : !false_by_default && "strict",
          pure_funcs    : null,
          reduce_funcs  : !false_by_default,
          reduce_vars   : !false_by_default,
          sequences     : !false_by_default,
          side_effects  : !false_by_default,
          switches      : !false_by_default,
          top_retain    : null,
          toplevel      : !!(options && options["top_retain"]),
          typeofs       : !false_by_default,
          unsafe        : false,
          unsafe_arrows : false,
          unsafe_comps  : false,
          unsafe_Function: false,
          unsafe_math   : false,
          unsafe_methods: false,
          unsafe_proto  : false,
          unsafe_regexp : false,
          unsafe_undefined: false,
          unused        : !false_by_default,
          warnings      : false,
      }, true);
      var global_defs = this.options["global_defs"];
      if (typeof global_defs == "object") for (var key in global_defs) {
          if (/^@/.test(key) && HOP(global_defs, key)) {
              global_defs[key.slice(1)] = parse(global_defs[key], {
                  expression: true
              });
          }
      }
      if (this.options["inline"] === true) this.options["inline"] = 3;
      var pure_funcs = this.options["pure_funcs"];
      if (typeof pure_funcs == "function") {
          this.pure_funcs = pure_funcs;
      } else {
          this.pure_funcs = pure_funcs ? function(node) {
              return !pure_funcs.includes(node.expression.print_to_string());
          } : return_true;
      }
      var top_retain = this.options["top_retain"];
      if (top_retain instanceof RegExp) {
          this.top_retain = function(def) {
              return top_retain.test(def.name);
          };
      } else if (typeof top_retain == "function") {
          this.top_retain = top_retain;
      } else if (top_retain) {
          if (typeof top_retain == "string") {
              top_retain = top_retain.split(/,/);
          }
          this.top_retain = function(def) {
              return top_retain.includes(def.name);
          };
      }
      if (this.options["module"]) {
          this.directives["use strict"] = true;
          this.options["toplevel"] = true;
      }
      var toplevel = this.options["toplevel"];
      this.toplevel = typeof toplevel == "string" ? {
          funcs: /funcs/.test(toplevel),
          vars: /vars/.test(toplevel)
      } : {
          funcs: toplevel,
          vars: toplevel
      };
      var sequences = this.options["sequences"];
      this.sequences_limit = sequences == 1 ? 800 : sequences | 0;
      this.warnings_produced = {};
  }

  Compressor.prototype = new TreeTransformer;
  merge(Compressor.prototype, {
      option: function(key) { return this.options[key]; },
      exposed: function(def) {
          if (def.export) return true;
          if (def.global) for (var i = 0, len = def.orig.length; i < len; i++)
              if (!this.toplevel[def.orig[i] instanceof AST_SymbolDefun ? "funcs" : "vars"])
                  return true;
          return false;
      },
      in_boolean_context: function() {
          if (!this.option("booleans")) return false;
          var self = this.self();
          for (var i = 0, p; p = this.parent(i); i++) {
              if (p instanceof AST_SimpleStatement
                  || p instanceof AST_Conditional && p.condition === self
                  || p instanceof AST_DWLoop && p.condition === self
                  || p instanceof AST_For && p.condition === self
                  || p instanceof AST_If && p.condition === self
                  || p instanceof AST_UnaryPrefix && p.operator == "!" && p.expression === self) {
                  return true;
              }
              if (p instanceof AST_Binary && (p.operator == "&&" || p.operator == "||")
                  || p instanceof AST_Conditional
                  || p.tail_node() === self) {
                  self = p;
              } else {
                  return false;
              }
          }
      },
      compress: function(node) {
          node = node.resolve_defines(this);
          if (this.option("expression")) {
              node.process_expression(true);
          }
          var passes = +this.options.passes || 1;
          var min_count = 1 / 0;
          var stopping = false;
          var mangle = { ie8: this.option("ie8") };
          for (var pass = 0; pass < passes; pass++) {
              node.figure_out_scope(mangle);
              if (pass === 0 && this.option("drop_console")) {
                  // must be run before reduce_vars and compress pass
                  node = node.drop_console();
              }
              if (pass > 0 || this.option("reduce_vars"))
                  node.reset_opt_flags(this);
              node = node.transform(this);
              if (passes > 1) {
                  var count = 0;
                  node.walk(new TreeWalker(function() {
                      count++;
                  }));
                  this.info("pass " + pass + ": last_count: " + min_count + ", count: " + count);
                  if (count < min_count) {
                      min_count = count;
                      stopping = false;
                  } else if (stopping) {
                      break;
                  } else {
                      stopping = true;
                  }
              }
          }
          if (this.option("expression")) {
              node.process_expression(false);
          }
          return node;
      },
      info: function() {
          if (this.options.warnings == "verbose") {
              AST_Node.warn.apply(AST_Node, arguments);
          }
      },
      warn: function(text, props) {
          if (this.options.warnings) {
              // only emit unique warnings
              var message = string_template(text, props);
              if (!(message in this.warnings_produced)) {
                  this.warnings_produced[message] = true;
                  AST_Node.warn.apply(AST_Node, arguments);
              }
          }
      },
      clear_warnings: function() {
          this.warnings_produced = {};
      },
      before: function(node, descend, in_list) {
          if (node._squeezed) return node;
          var was_scope = false;
          if (node instanceof AST_Scope) {
              node = node.hoist_properties(this);
              node = node.hoist_declarations(this);
              was_scope = true;
          }
          // Before https://github.com/mishoo/UglifyJS2/pull/1602 AST_Node.optimize()
          // would call AST_Node.transform() if a different instance of AST_Node is
          // produced after def_optimize().
          // This corrupts TreeWalker.stack, which cause AST look-ups to malfunction.
          // Migrate and defer all children's AST_Node.transform() to below, which
          // will now happen after this parent AST_Node has been properly substituted
          // thus gives a consistent AST snapshot.
          descend(node, this);
          // Existing code relies on how AST_Node.optimize() worked, and omitting the
          // following replacement call would result in degraded efficiency of both
          // output and performance.
          descend(node, this);
          var opt = node.optimize(this);
          if (was_scope && opt instanceof AST_Scope) {
              opt.drop_unused(this);
              descend(opt, this);
          }
          if (opt === node) opt._squeezed = true;
          return opt;
      }
  });

  (function() {

      function def_optimize(node, optimizer) {
          node.DEFMETHOD("optimize", function(compressor) {
              var self = this;
              if (self._optimized) return self;
              if (compressor.has_directive("use asm")) return self;
              var opt = optimizer(self, compressor);
              opt._optimized = true;
              return opt;
          });
      }

      def_optimize(AST_Node, function(self, compressor) {
          return self;
      });

      AST_Toplevel.DEFMETHOD("drop_console", function() {
          return this.transform(new TreeTransformer(function(self) {
              if (self.TYPE == "Call") {
                  var exp = self.expression;
                  if (exp instanceof AST_PropAccess) {
                      var name = exp.expression;
                      while (name.expression) {
                          name = name.expression;
                      }
                      if (is_undeclared_ref(name) && name.name == "console") {
                          return make_node(AST_Undefined, self);
                      }
                  }
              }
          }));
      });

      AST_Node.DEFMETHOD("equivalent_to", function(node) {
          return this.TYPE == node.TYPE && this.print_to_string() == node.print_to_string();
      });

      AST_Scope.DEFMETHOD("process_expression", function(insert, compressor) {
          var self = this;
          var tt = new TreeTransformer(function(node) {
              if (insert && node instanceof AST_SimpleStatement) {
                  return make_node(AST_Return, node, {
                      value: node.body
                  });
              }
              if (!insert && node instanceof AST_Return) {
                  if (compressor) {
                      var value = node.value && node.value.drop_side_effect_free(compressor, true);
                      return value ? make_node(AST_SimpleStatement, node, {
                          body: value
                      }) : make_node(AST_EmptyStatement, node);
                  }
                  return make_node(AST_SimpleStatement, node, {
                      body: node.value || make_node(AST_UnaryPrefix, node, {
                          operator: "void",
                          expression: make_node(AST_Number, node, {
                              value: 0
                          })
                      })
                  });
              }
              if (node instanceof AST_Class || node instanceof AST_Lambda && node !== self) {
                  return node;
              }
              if (node instanceof AST_Block) {
                  var index = node.body.length - 1;
                  if (index >= 0) {
                      node.body[index] = node.body[index].transform(tt);
                  }
              } else if (node instanceof AST_If) {
                  node.body = node.body.transform(tt);
                  if (node.alternative) {
                      node.alternative = node.alternative.transform(tt);
                  }
              } else if (node instanceof AST_With) {
                  node.body = node.body.transform(tt);
              }
              return node;
          });
          self.transform(tt);
      });

      function read_property(obj, key) {
          key = get_value(key);
          if (key instanceof AST_Node) return;
          var value;
          if (obj instanceof AST_Array) {
              var elements = obj.elements;
              if (key == "length") return make_node_from_constant(elements.length, obj);
              if (typeof key == "number" && key in elements) value = elements[key];
          } else if (obj instanceof AST_Object) {
              key = "" + key;
              var props = obj.properties;
              for (var i = props.length; --i >= 0;) {
                  var prop = props[i];
                  if (!(prop instanceof AST_ObjectKeyVal)) return;
                  if (!value && props[i].key === key) value = props[i].value;
              }
          }
          return value instanceof AST_SymbolRef && value.fixed_value() || value;
      }

      function is_modified(compressor, tw, node, value, level, immutable) {
          var parent = tw.parent(level);
          var lhs = is_lhs(node, parent);
          if (lhs) return lhs;
          if (!immutable
              && parent instanceof AST_Call
              && parent.expression === node
              && !(value instanceof AST_Arrow)
              && !(value instanceof AST_Class)
              && !parent.is_expr_pure(compressor)
              && (!(value instanceof AST_Function)
                  || !(parent instanceof AST_New) && value.contains_this())) {
              return true;
          }
          if (parent instanceof AST_Array) {
              return is_modified(compressor, tw, parent, parent, level + 1);
          }
          if (parent instanceof AST_ObjectKeyVal && node === parent.value) {
              var obj = tw.parent(level + 1);
              return is_modified(compressor, tw, obj, obj, level + 2);
          }
          if (parent instanceof AST_PropAccess && parent.expression === node) {
              var prop = read_property(value, parent.property);
              return !immutable && is_modified(compressor, tw, parent, prop, level + 1);
          }
      }

      (function(def_reduce_vars) {
          def_reduce_vars(AST_Node, noop);

          function reset_def(compressor, def) {
              def.assignments = 0;
              def.chained = false;
              def.direct_access = false;
              def.escaped = false;
              if (def.scope.pinned()) {
                  def.fixed = false;
              } else if (def.orig[0] instanceof AST_SymbolConst || !compressor.exposed(def)) {
                  def.fixed = def.init;
              } else {
                  def.fixed = false;
              }
              def.recursive_refs = 0;
              def.references = [];
              def.should_replace = undefined;
              def.single_use = undefined;
          }

          function reset_variables(tw, compressor, node) {
              node.variables.forEach(function(def) {
                  reset_def(compressor, def);
                  if (def.fixed === null) {
                      def.safe_ids = tw.safe_ids;
                      mark(tw, def, true);
                  } else if (def.fixed) {
                      tw.loop_ids[def.id] = tw.in_loop;
                      mark(tw, def, true);
                  }
              });
          }

          function reset_block_variables(compressor, node) {
              if (node.block_scope) node.block_scope.variables.forEach(function(def) {
                  reset_def(compressor, def);
              });
          }

          function push(tw) {
              tw.safe_ids = Object.create(tw.safe_ids);
          }

          function pop(tw) {
              tw.safe_ids = Object.getPrototypeOf(tw.safe_ids);
          }

          function mark(tw, def, safe) {
              tw.safe_ids[def.id] = safe;
          }

          function safe_to_read(tw, def) {
              if (def.single_use == "m") return false;
              if (tw.safe_ids[def.id]) {
                  if (def.fixed == null) {
                      var orig = def.orig[0];
                      if (orig instanceof AST_SymbolFunarg || orig.name == "arguments") return false;
                      def.fixed = make_node(AST_Undefined, orig);
                  }
                  return true;
              }
              return def.fixed instanceof AST_Defun;
          }

          function safe_to_assign(tw, def, value) {
              if (def.fixed === undefined) return true;
              if (def.fixed === null && def.safe_ids) {
                  def.safe_ids[def.id] = false;
                  delete def.safe_ids;
                  return true;
              }
              if (!HOP(tw.safe_ids, def.id)) return false;
              if (!safe_to_read(tw, def)) return false;
              if (def.fixed === false) return false;
              if (def.fixed != null && (!value || def.references.length > def.assignments)) return false;
              return all(def.orig, function(sym) {
                  return !(sym instanceof AST_SymbolConst
                      || sym instanceof AST_SymbolDefun
                      || sym instanceof AST_SymbolLambda);
              });
          }

          function ref_once(tw, compressor, def) {
              return compressor.option("unused")
                  && !def.scope.pinned()
                  && def.references.length - def.recursive_refs == 1
                  && tw.loop_ids[def.id] === tw.in_loop;
          }

          function is_immutable(value) {
              if (!value) return false;
              return value.is_constant()
                  || value instanceof AST_Lambda
                  || value instanceof AST_This;
          }

          function mark_escaped(tw, d, scope, node, value, level, depth) {
              var parent = tw.parent(level);
              if (value) {
                  if (value.is_constant()) return;
                  if (value instanceof AST_ClassExpression) return;
              }
              if (parent instanceof AST_Assign && parent.operator == "=" && node === parent.right
                  || parent instanceof AST_Call && (node !== parent.expression || parent instanceof AST_New)
                  || parent instanceof AST_Exit && node === parent.value && node.scope !== d.scope
                  || parent instanceof AST_VarDef && node === parent.value
                  || parent instanceof AST_Yield && node === parent.value && node.scope !== d.scope) {
                  if (depth > 1 && !(value && value.is_constant_expression(scope))) depth = 1;
                  if (!d.escaped || d.escaped > depth) d.escaped = depth;
                  return;
              } else if (parent instanceof AST_Array
                  || parent instanceof AST_Await
                  || parent instanceof AST_Binary && lazy_op.has(parent.operator)
                  || parent instanceof AST_Conditional && node !== parent.condition
                  || parent instanceof AST_Expansion
                  || parent instanceof AST_Sequence && node === parent.tail_node()) {
                  mark_escaped(tw, d, scope, parent, parent, level + 1, depth);
              } else if (parent instanceof AST_ObjectKeyVal && node === parent.value) {
                  var obj = tw.parent(level + 1);
                  mark_escaped(tw, d, scope, obj, obj, level + 2, depth);
              } else if (parent instanceof AST_PropAccess && node === parent.expression) {
                  value = read_property(value, parent.property);
                  mark_escaped(tw, d, scope, parent, value, level + 1, depth + 1);
                  if (value) return;
              }
              if (level > 0) return;
              if (parent instanceof AST_Sequence && node !== parent.tail_node()) return;
              if (parent instanceof AST_SimpleStatement) return;
              d.direct_access = true;
          }

          var suppressor = new TreeWalker(function(node) {
              if (!(node instanceof AST_Symbol)) return;
              var d = node.definition();
              if (!d) return;
              if (node instanceof AST_SymbolRef) d.references.push(node);
              d.fixed = false;
          });
          def_reduce_vars(AST_Accessor, function(tw, descend, compressor) {
              push(tw);
              reset_variables(tw, compressor, this);
              descend();
              pop(tw);
              return true;
          });
          def_reduce_vars(AST_Arrow, mark_func_expr);
          def_reduce_vars(AST_Assign, function(tw, descend, compressor) {
              var node = this;
              if (node.left instanceof AST_Destructuring) {
                  node.left.walk(suppressor);
                  return;
              }
              var sym = node.left;
              if (!(sym instanceof AST_SymbolRef)) return;
              var d = sym.definition();
              var safe = safe_to_assign(tw, d, sym.scope, node.right);
              d.assignments++;
              if (!safe) return;
              var fixed = d.fixed;
              if (!fixed && node.operator != "=") return;
              var eq = node.operator == "=";
              var value = eq ? node.right : node;
              if (is_modified(compressor, tw, node, value, 0)) return;
              d.references.push(sym);
              if (!eq) d.chained = true;
              d.fixed = eq ? function() {
                  return node.right;
              } : function() {
                  return make_node(AST_Binary, node, {
                      operator: node.operator.slice(0, -1),
                      left: fixed instanceof AST_Node ? fixed : fixed(),
                      right: node.right
                  });
              };
              mark(tw, d, false);
              node.right.walk(tw);
              mark(tw, d, true);
              mark_escaped(tw, d, sym.scope, node, value, 0, 1);
              return true;
          });
          def_reduce_vars(AST_Binary, function(tw) {
              if (!lazy_op.has(this.operator)) return;
              this.left.walk(tw);
              push(tw);
              this.right.walk(tw);
              pop(tw);
              return true;
          });
          def_reduce_vars(AST_Block, function(tw, descend, compressor) {
              reset_block_variables(compressor, this);
          });
          def_reduce_vars(AST_Case, function(tw) {
              push(tw);
              this.expression.walk(tw);
              pop(tw);
              push(tw);
              walk_body(this, tw);
              pop(tw);
              return true;
          });
          def_reduce_vars(AST_ClassExpression, function(tw, descend) {
              this.inlined = false;
              push(tw);
              descend();
              pop(tw);
              return true;
          });
          def_reduce_vars(AST_Conditional, function(tw) {
              this.condition.walk(tw);
              push(tw);
              this.consequent.walk(tw);
              pop(tw);
              push(tw);
              this.alternative.walk(tw);
              pop(tw);
              return true;
          });
          def_reduce_vars(AST_Default, function(tw, descend) {
              push(tw);
              descend();
              pop(tw);
              return true;
          });

          function mark_def_node(tw, descend, compressor) {
              this.inlined = false;
              var save_ids = tw.safe_ids;
              tw.safe_ids = Object.create(null);
              reset_variables(tw, compressor, this);
              descend();
              tw.safe_ids = save_ids;
              return true;
          }

          def_reduce_vars(AST_DefClass, mark_def_node);
          def_reduce_vars(AST_Defun, mark_def_node);
          def_reduce_vars(AST_Do, function(tw, descend, compressor) {
              reset_block_variables(compressor, this);
              var saved_loop = tw.in_loop;
              tw.in_loop = this;
              push(tw);
              this.body.walk(tw);
              if (has_break_or_continue(this)) {
                  pop(tw);
                  push(tw);
              }
              this.condition.walk(tw);
              pop(tw);
              tw.in_loop = saved_loop;
              return true;
          });
          def_reduce_vars(AST_For, function(tw, descend, compressor) {
              reset_block_variables(compressor, this);
              if (this.init) this.init.walk(tw);
              var saved_loop = tw.in_loop;
              tw.in_loop = this;
              push(tw);
              if (this.condition) this.condition.walk(tw);
              this.body.walk(tw);
              if (this.step) {
                  if (has_break_or_continue(this)) {
                      pop(tw);
                      push(tw);
                  }
                  this.step.walk(tw);
              }
              pop(tw);
              tw.in_loop = saved_loop;
              return true;
          });
          def_reduce_vars(AST_ForIn, function(tw, descend, compressor) {
              reset_block_variables(compressor, this);
              this.init.walk(suppressor);
              this.object.walk(tw);
              var saved_loop = tw.in_loop;
              tw.in_loop = this;
              push(tw);
              this.body.walk(tw);
              pop(tw);
              tw.in_loop = saved_loop;
              return true;
          });

          function mark_func_expr(tw, descend, compressor) {
              var node = this;
              node.inlined = false;
              push(tw);
              reset_variables(tw, compressor, node);
              var iife;
              if (!node.name
                  && (iife = tw.parent()) instanceof AST_Call
                  && iife.expression === node) {
                  // Virtually turn IIFE parameters into variable definitions:
                  //   (function(a,b) {...})(c,d) => (function() {var a=c,b=d; ...})()
                  // So existing transformation rules can work on them.
                  node.argnames.forEach(function(arg, i) {
                      if (!arg.definition) return;
                      var d = arg.definition();
                      if (d.fixed === undefined && (!node.uses_arguments || tw.has_directive("use strict"))) {
                          d.fixed = function() {
                              return iife.args[i] || make_node(AST_Undefined, iife);
                          };
                          tw.loop_ids[d.id] = tw.in_loop;
                          mark(tw, d, true);
                      } else {
                          d.fixed = false;
                      }
                  });
              }
              descend();
              pop(tw);
              return true;
          }

          def_reduce_vars(AST_Function, mark_func_expr);
          def_reduce_vars(AST_If, function(tw) {
              this.condition.walk(tw);
              push(tw);
              this.body.walk(tw);
              pop(tw);
              if (this.alternative) {
                  push(tw);
                  this.alternative.walk(tw);
                  pop(tw);
              }
              return true;
          });
          def_reduce_vars(AST_LabeledStatement, function(tw) {
              push(tw);
              this.body.walk(tw);
              pop(tw);
              return true;
          });
          def_reduce_vars(AST_SymbolCatch, function() {
              this.definition().fixed = false;
          });
          def_reduce_vars(AST_SymbolRef, function(tw, descend, compressor) {
              var d = this.definition();
              d.references.push(this);
              if (d.references.length == 1
                  && !d.fixed
                  && d.orig[0] instanceof AST_SymbolDefun) {
                  tw.loop_ids[d.id] = tw.in_loop;
              }
              var value;
              if (d.fixed === undefined || !safe_to_read(tw, d)) {
                  d.fixed = false;
              } else if (d.fixed) {
                  value = this.fixed_value();
                  if (value instanceof AST_Lambda && recursive_ref(tw, d)) {
                      d.recursive_refs++;
                  } else if (value && !compressor.exposed(d) && ref_once(tw, compressor, d)) {
                      d.single_use = value instanceof AST_Lambda && !value.pinned()
                          || value instanceof AST_Class
                          || d.scope === this.scope && value.is_constant_expression();
                  } else {
                      d.single_use = false;
                  }
                  if (is_modified(compressor, tw, this, value, 0, is_immutable(value))) {
                      if (d.single_use) {
                          d.single_use = "m";
                      } else {
                          d.fixed = false;
                      }
                  }
              }
              mark_escaped(tw, d, this.scope, this, value, 0, 1);
          });
          def_reduce_vars(AST_Toplevel, function(tw, descend, compressor) {
              this.globals.forEach(function(def) {
                  reset_def(compressor, def);
              });
              reset_variables(tw, compressor, this);
          });
          def_reduce_vars(AST_Try, function(tw, descend, compressor) {
              reset_block_variables(compressor, this);
              push(tw);
              walk_body(this, tw);
              pop(tw);
              if (this.bcatch) {
                  push(tw);
                  this.bcatch.walk(tw);
                  pop(tw);
              }
              if (this.bfinally) this.bfinally.walk(tw);
              return true;
          });
          def_reduce_vars(AST_Unary, function(tw, descend) {
              var node = this;
              if (node.operator != "++" && node.operator != "--") return;
              var exp = node.expression;
              if (!(exp instanceof AST_SymbolRef)) return;
              var d = exp.definition();
              var safe = safe_to_assign(tw, d, true);
              d.assignments++;
              if (!safe) return;
              var fixed = d.fixed;
              if (!fixed) return;
              d.references.push(exp);
              d.chained = true;
              d.fixed = function() {
                  return make_node(AST_Binary, node, {
                      operator: node.operator.slice(0, -1),
                      left: make_node(AST_UnaryPrefix, node, {
                          operator: "+",
                          expression: fixed instanceof AST_Node ? fixed : fixed()
                      }),
                      right: make_node(AST_Number, node, {
                          value: 1
                      })
                  });
              };
              mark(tw, d, true);
              return true;
          });
          def_reduce_vars(AST_VarDef, function(tw, descend) {
              var node = this;
              if (node.name instanceof AST_Destructuring) {
                  node.name.walk(suppressor);
                  return;
              }
              var d = node.name.definition();
              if (node.value) {
                  if (safe_to_assign(tw, d, node.value)) {
                      d.fixed = function() {
                          return node.value;
                      };
                      tw.loop_ids[d.id] = tw.in_loop;
                      mark(tw, d, false);
                      descend();
                      mark(tw, d, true);
                      return true;
                  } else {
                      d.fixed = false;
                  }
              }
          });
          def_reduce_vars(AST_While, function(tw, descend, compressor) {
              reset_block_variables(compressor, this);
              var saved_loop = tw.in_loop;
              tw.in_loop = this;
              push(tw);
              descend();
              pop(tw);
              tw.in_loop = saved_loop;
              return true;
          });
      })(function(node, func) {
          node.DEFMETHOD("reduce_vars", func);
      });

      AST_Toplevel.DEFMETHOD("reset_opt_flags", function(compressor) {
          var self = this;
          var reduce_vars = compressor.option("reduce_vars");
          var tw = new TreeWalker(function(node, descend) {
              node._squeezed = false;
              node._optimized = false;
              if (reduce_vars) {
                  if (compressor.top_retain) {
                      if (tw.parent() === self)
                          node._top = true;
                      else
                          delete node._top;
                  }
                  return node.reduce_vars(tw, descend, compressor);
              }
          });
          // Stack of look-up tables to keep track of whether a `SymbolDef` has been
          // properly assigned before use:
          // - `push()` & `pop()` when visiting conditional branches
          // - backup & restore via `save_ids` when visiting out-of-order sections
          tw.safe_ids = Object.create(null);
          tw.in_loop = null;
          tw.loop_ids = Object.create(null);
          self.walk(tw);
      });

      AST_Symbol.DEFMETHOD("fixed_value", function() {
          var fixed = this.definition().fixed;
          if (!fixed || fixed instanceof AST_Node) return fixed;
          return fixed();
      });

      AST_SymbolRef.DEFMETHOD("is_immutable", function() {
          var orig = this.definition().orig;
          return orig.length == 1 && orig[0] instanceof AST_SymbolLambda;
      });

      function is_func_expr(node) {
          return node instanceof AST_Arrow || node instanceof AST_Function;
      }

      function is_lhs_read_only(lhs) {
          if (lhs instanceof AST_This) return true;
          if (lhs instanceof AST_SymbolRef) return lhs.definition().orig[0] instanceof AST_SymbolLambda;
          if (lhs instanceof AST_PropAccess) {
              lhs = lhs.expression;
              if (lhs instanceof AST_SymbolRef) {
                  if (lhs.is_immutable()) return false;
                  lhs = lhs.fixed_value();
              }
              if (!lhs) return true;
              if (lhs instanceof AST_RegExp) return false;
              if (lhs instanceof AST_Constant) return true;
              return is_lhs_read_only(lhs);
          }
          return false;
      }

      function is_ref_of(ref, type) {
          if (!(ref instanceof AST_SymbolRef)) return false;
          var orig = ref.definition().orig;
          for (var i = orig.length; --i >= 0;) {
              if (orig[i] instanceof type) return true;
          }
      }

      function find_variable(compressor, name) {
          var scope, i = 0;
          while (scope = compressor.parent(i++)) {
              if (scope instanceof AST_Scope) break;
              if (scope instanceof AST_Catch && scope.argname) {
                  scope = scope.argname.definition().scope;
                  break;
              }
          }
          return scope.find_variable(name);
      }

      function make_node(ctor, orig, props) {
          if (!props) props = {};
          if (orig) {
              if (!props.start) props.start = orig.start;
              if (!props.end) props.end = orig.end;
          }
          return new ctor(props);
      }

      function make_sequence(orig, expressions) {
          if (expressions.length == 1) return expressions[0];
          return make_node(AST_Sequence, orig, {
              expressions: expressions.reduce(merge_sequence, [])
          });
      }

      function make_node_from_constant(val, orig) {
          switch (typeof val) {
            case "string":
              return make_node(AST_String, orig, {
                  value: val
              });
            case "number":
              if (isNaN(val)) return make_node(AST_NaN, orig);
              if (isFinite(val)) {
                  return 1 / val < 0 ? make_node(AST_UnaryPrefix, orig, {
                      operator: "-",
                      expression: make_node(AST_Number, orig, { value: -val })
                  }) : make_node(AST_Number, orig, { value: val });
              }
              return val < 0 ? make_node(AST_UnaryPrefix, orig, {
                  operator: "-",
                  expression: make_node(AST_Infinity, orig)
              }) : make_node(AST_Infinity, orig);
            case "boolean":
              return make_node(val ? AST_True : AST_False, orig);
            case "undefined":
              return make_node(AST_Undefined, orig);
            default:
              if (val === null) {
                  return make_node(AST_Null, orig, { value: null });
              }
              if (val instanceof RegExp) {
                  return make_node(AST_RegExp, orig, { value: val });
              }
              throw new Error(string_template("Can't handle constant of type: {type}", {
                  type: typeof val
              }));
          }
      }

      // we shouldn't compress (1,func)(something) to
      // func(something) because that changes the meaning of
      // the func (becomes lexical instead of global).
      function maintain_this_binding(parent, orig, val) {
          if (parent instanceof AST_UnaryPrefix && parent.operator == "delete"
              || parent instanceof AST_Call && parent.expression === orig
                  && (val instanceof AST_PropAccess || val instanceof AST_SymbolRef && val.name == "eval")) {
              return make_sequence(orig, [ make_node(AST_Number, orig, { value: 0 }), val ]);
          }
          return val;
      }

      function merge_sequence(array, node) {
          if (node instanceof AST_Sequence) {
              array.push.apply(array, node.expressions);
          } else {
              array.push(node);
          }
          return array;
      }

      function as_statement_array(thing) {
          if (thing === null) return [];
          if (thing instanceof AST_BlockStatement) return thing.body;
          if (thing instanceof AST_EmptyStatement) return [];
          if (thing instanceof AST_Statement) return [ thing ];
          throw new Error("Can't convert thing to statement array");
      }

      function is_empty(thing) {
          if (thing === null) return true;
          if (thing instanceof AST_EmptyStatement) return true;
          if (thing instanceof AST_BlockStatement) return thing.body.length == 0;
          return false;
      }

      function can_be_evicted_from_block(node) {
          return !(
              node instanceof AST_DefClass ||
              node instanceof AST_Defun ||
              node instanceof AST_Let ||
              node instanceof AST_Const ||
              node instanceof AST_Export ||
              node instanceof AST_Import
          );
      }

      function loop_body(x) {
          if (x instanceof AST_IterationStatement) {
              return x.body instanceof AST_BlockStatement ? x.body : x;
          }
          return x;
      }

      function is_iife_call(node) {
          if (node.TYPE != "Call") return false;
          return node.expression instanceof AST_Function || is_iife_call(node.expression);
      }

      function is_undeclared_ref(node) {
          return node instanceof AST_SymbolRef && node.definition().undeclared;
      }

      var global_names = makePredicate("Array Boolean clearInterval clearTimeout console Date decodeURI decodeURIComponent encodeURI encodeURIComponent Error escape eval EvalError Function isFinite isNaN JSON Math Number parseFloat parseInt RangeError ReferenceError RegExp Object setInterval setTimeout String SyntaxError TypeError unescape URIError");
      AST_SymbolRef.DEFMETHOD("is_declared", function(compressor) {
          return !this.definition().undeclared
              || compressor.option("unsafe") && global_names.has(this.name);
      });

      var identifier_atom = makePredicate("Infinity NaN undefined");
      function is_identifier_atom(node) {
          return node instanceof AST_Infinity
              || node instanceof AST_NaN
              || node instanceof AST_Undefined;
      }

      function tighten_body(statements, compressor) {
          var in_loop, in_try;
          var scope = compressor.find_parent(AST_Scope).get_defun_scope();
          find_loop_scope_try();
          var CHANGED, max_iter = 10;
          do {
              CHANGED = false;
              eliminate_spurious_blocks(statements);
              if (compressor.option("dead_code")) {
                  eliminate_dead_code(statements, compressor);
              }
              if (compressor.option("if_return")) {
                  handle_if_return(statements, compressor);
              }
              if (compressor.sequences_limit > 0) {
                  sequencesize(statements, compressor);
                  sequencesize_2(statements, compressor);
              }
              if (compressor.option("join_vars")) {
                  join_consecutive_vars(statements);
              }
              if (compressor.option("collapse_vars")) {
                  collapse(statements, compressor);
              }
          } while (CHANGED && max_iter-- > 0);

          function find_loop_scope_try() {
              var node = compressor.self(), level = 0;
              do {
                  if (node instanceof AST_Catch || node instanceof AST_Finally) {
                      level++;
                  } else if (node instanceof AST_IterationStatement) {
                      in_loop = true;
                  } else if (node instanceof AST_Scope) {
                      scope = node;
                      break;
                  } else if (node instanceof AST_Try) {
                      in_try = true;
                  }
              } while (node = compressor.parent(level++));
          }

          // Search from right to left for assignment-like expressions:
          // - `var a = x;`
          // - `a = x;`
          // - `++a`
          // For each candidate, scan from left to right for first usage, then try
          // to fold assignment into the site for compression.
          // Will not attempt to collapse assignments into or past code blocks
          // which are not sequentially executed, e.g. loops and conditionals.
          function collapse(statements, compressor) {
              if (scope.pinned()) return statements;
              var args;
              var candidates = [];
              var stat_index = statements.length;
              var scanner = new TreeTransformer(function(node, descend) {
                  if (abort) return node;
                  // Skip nodes before `candidate` as quickly as possible
                  if (!hit) {
                      if (node !== hit_stack[hit_index]) return node;
                      hit_index++;
                      if (hit_index < hit_stack.length) return handle_custom_scan_order(node);
                      hit = true;
                      stop_after = find_stop(node, 0);
                      if (stop_after === node) abort = true;
                      return node;
                  }
                  // Stop immediately if these node types are encountered
                  var parent = scanner.parent();
                  if (node instanceof AST_Assign && node.operator != "=" && lhs.equivalent_to(node.left)
                      || node instanceof AST_Await
                      || node instanceof AST_Call && lhs instanceof AST_PropAccess && lhs.equivalent_to(node.expression)
                      || node instanceof AST_Debugger
                      || node instanceof AST_Destructuring
                      || node instanceof AST_Expansion
                         && node.expression instanceof AST_Symbol
                         && node.expression.definition().references.length > 1
                      || node instanceof AST_IterationStatement && !(node instanceof AST_For)
                      || node instanceof AST_LoopControl
                      || node instanceof AST_Try
                      || node instanceof AST_With
                      || node instanceof AST_Yield
                      || parent instanceof AST_For && node !== parent.init
                      || !replace_all
                          && (node instanceof AST_SymbolRef && !node.is_declared(compressor))) {
                      abort = true;
                      return node;
                  }
                  // Stop only if candidate is found within conditional branches
                  if (!stop_if_hit && (!lhs_local || !replace_all)
                      && (parent instanceof AST_Binary && lazy_op.has(parent.operator) && parent.left !== node
                          || parent instanceof AST_Conditional && parent.condition !== node
                          || parent instanceof AST_If && parent.condition !== node)) {
                      stop_if_hit = parent;
                  }
                  // Replace variable with assignment when found
                  if (can_replace
                      && !(node instanceof AST_SymbolDeclaration)
                      && lhs.equivalent_to(node)) {
                      if (stop_if_hit) {
                          abort = true;
                          return node;
                      }
                      if (is_lhs(node, parent)) {
                          if (value_def) replaced++;
                          return node;
                      }
                      CHANGED = abort = true;
                      replaced++;
                      compressor.info("Collapsing {name} [{file}:{line},{col}]", {
                          name: node.print_to_string(),
                          file: node.start.file,
                          line: node.start.line,
                          col: node.start.col
                      });
                      if (candidate instanceof AST_UnaryPostfix) {
                          return make_node(AST_UnaryPrefix, candidate, candidate);
                      }
                      if (candidate instanceof AST_VarDef) {
                          if (value_def) {
                              abort = false;
                              return node;
                          }
                          var def = candidate.name.definition();
                          var value = candidate.value;
                          if (def.references.length - def.replaced == 1 && !compressor.exposed(def)) {
                              def.replaced++;
                              if (funarg && is_identifier_atom(value)) {
                                  return value.transform(compressor);
                              } else {
                                  return maintain_this_binding(parent, node, value);
                              }
                          }
                          return make_node(AST_Assign, candidate, {
                              operator: "=",
                              left: make_node(AST_SymbolRef, candidate.name, candidate.name),
                              right: value
                          });
                      }
                      candidate.write_only = false;
                      return candidate;
                  }
                  // These node types have child nodes that execute sequentially,
                  // but are otherwise not safe to scan into or beyond them.
                  var sym;
                  if (node instanceof AST_Call
                      || node instanceof AST_Exit
                          && (side_effects || lhs instanceof AST_PropAccess || may_modify(lhs))
                      || node instanceof AST_PropAccess
                          && (side_effects || node.expression.may_throw_on_access(compressor))
                      || node instanceof AST_SymbolRef
                          && (lvalues.get(node.name) || side_effects && may_modify(node))
                      || node instanceof AST_VarDef && node.value
                          && (lvalues.has(node.name.name) || side_effects && may_modify(node.name))
                      || (sym = is_lhs(node.left, node))
                          && (sym instanceof AST_PropAccess || lvalues.has(sym.name))
                      || may_throw
                          && (in_try ? node.has_side_effects(compressor) : side_effects_external(node))) {
                      stop_after = node;
                      if (node instanceof AST_Scope) abort = true;
                  }
                  return handle_custom_scan_order(node);
              }, function(node) {
                  if (abort) return;
                  if (stop_after === node) abort = true;
                  if (stop_if_hit === node) stop_if_hit = null;
              });
              var multi_replacer = new TreeTransformer(function(node) {
                  if (abort) return node;
                  // Skip nodes before `candidate` as quickly as possible
                  if (!hit) {
                      if (node !== hit_stack[hit_index]) return node;
                      hit_index++;
                      if (hit_index < hit_stack.length) return;
                      hit = true;
                      return node;
                  }
                  // Replace variable when found
                  if (node instanceof AST_SymbolRef
                      && node.name == def.name) {
                      if (!--replaced) abort = true;
                      if (is_lhs(node, multi_replacer.parent())) return node;
                      def.replaced++;
                      value_def.replaced--;
                      return candidate.value;
                  }
                  // Skip (non-executed) functions and (leading) default case in switch statements
                  if (node instanceof AST_Default || node instanceof AST_Scope) return node;
              });
              while (--stat_index >= 0) {
                  // Treat parameters as collapsible in IIFE, i.e.
                  //   function(a, b){ ... }(x());
                  // would be translated into equivalent assignments:
                  //   var a = x(), b = undefined;
                  if (stat_index == 0 && compressor.option("unused")) extract_args();
                  // Find collapsible assignments
                  var hit_stack = [];
                  extract_candidates(statements[stat_index]);
                  while (candidates.length > 0) {
                      hit_stack = candidates.pop();
                      var hit_index = 0;
                      var candidate = hit_stack[hit_stack.length - 1];
                      var value_def = null;
                      var stop_after = null;
                      var stop_if_hit = null;
                      var lhs = get_lhs(candidate);
                      if (!lhs || is_lhs_read_only(lhs) || lhs.has_side_effects(compressor)) continue;
                      // Locate symbols which may execute code outside of scanning range
                      var lvalues = get_lvalues(candidate);
                      var lhs_local = is_lhs_local(lhs);
                      if (lhs instanceof AST_SymbolRef) lvalues.set(lhs.name, false);
                      var side_effects = value_has_side_effects(candidate);
                      var replace_all = replace_all_symbols();
                      var may_throw = candidate.may_throw(compressor);
                      var funarg = candidate.name instanceof AST_SymbolFunarg;
                      var hit = funarg;
                      var abort = false, replaced = 0, can_replace = !args || !hit;
                      if (!can_replace) {
                          for (var j = compressor.self().argnames.lastIndexOf(candidate.name) + 1; !abort && j < args.length; j++) {
                              args[j].transform(scanner);
                          }
                          can_replace = true;
                      }
                      for (var i = stat_index; !abort && i < statements.length; i++) {
                          statements[i].transform(scanner);
                      }
                      if (value_def) {
                          var def = candidate.name.definition();
                          if (abort && def.references.length - def.replaced > replaced) replaced = false;
                          else {
                              abort = false;
                              hit_index = 0;
                              hit = funarg;
                              for (var i = stat_index; !abort && i < statements.length; i++) {
                                  statements[i].transform(multi_replacer);
                              }
                              value_def.single_use = false;
                          }
                      }
                      if (replaced && !remove_candidate(candidate)) statements.splice(stat_index, 1);
                  }
              }

              function handle_custom_scan_order(node) {
                  // Skip (non-executed) functions
                  if (node instanceof AST_Scope) return node;
                  // Scan case expressions first in a switch statement
                  if (node instanceof AST_Switch) {
                      node.expression = node.expression.transform(scanner);
                      for (var i = 0, len = node.body.length; !abort && i < len; i++) {
                          var branch = node.body[i];
                          if (branch instanceof AST_Case) {
                              if (!hit) {
                                  if (branch !== hit_stack[hit_index]) continue;
                                  hit_index++;
                              }
                              branch.expression = branch.expression.transform(scanner);
                              if (!replace_all) break;
                          }
                      }
                      abort = true;
                      return node;
                  }
              }

              function has_overlapping_symbol(fn, arg, fn_strict) {
                  var found = false, scan_this = !(fn instanceof AST_Arrow);
                  arg.walk(new TreeWalker(function(node, descend) {
                      if (found) return true;
                      if (node instanceof AST_SymbolRef && fn.variables.has(node.name)) {
                          var s = node.definition().scope;
                          if (s !== scope) while (s = s.parent_scope) {
                              if (s === scope) return true;
                          }
                          return found = true;
                      }
                      if ((fn_strict || scan_this) && node instanceof AST_This) {
                          return found = true;
                      }
                      if (node instanceof AST_Scope && !(node instanceof AST_Arrow)) {
                          var prev = scan_this;
                          scan_this = false;
                          descend();
                          scan_this = prev;
                          return true;
                      }
                  }));
                  return found;
              }

              function extract_args() {
                  var iife, fn = compressor.self();
                  if (is_func_expr(fn)
                      && !fn.name
                      && !fn.uses_arguments
                      && !fn.pinned()
                      && (iife = compressor.parent()) instanceof AST_Call
                      && iife.expression === fn
                      && all(iife.args, function(arg) {
                          return !(arg instanceof AST_Expansion);
                      })) {
                      var fn_strict = compressor.has_directive("use strict");
                      if (fn_strict && !member(fn_strict, fn.body)) fn_strict = false;
                      var len = fn.argnames.length;
                      args = iife.args.slice(len);
                      var names = new Set();
                      for (var i = len; --i >= 0;) {
                          var sym = fn.argnames[i];
                          var arg = iife.args[i];
                          args.unshift(make_node(AST_VarDef, sym, {
                              name: sym,
                              value: arg
                          }));
                          if (names.has(sym.name)) continue;
                          names.add(sym.name);
                          if (sym instanceof AST_Expansion) {
                              var elements = iife.args.slice(i);
                              if (all(elements, function(arg) {
                                  return !has_overlapping_symbol(fn, arg, fn_strict);
                              })) {
                                  candidates.unshift([ make_node(AST_VarDef, sym, {
                                      name: sym.expression,
                                      value: make_node(AST_Array, iife, {
                                          elements: elements
                                      })
                                  }) ]);
                              }
                          } else {
                              if (!arg) {
                                  arg = make_node(AST_Undefined, sym).transform(compressor);
                              } else if (arg instanceof AST_Lambda && arg.pinned()
                                  || has_overlapping_symbol(fn, arg, fn_strict)) {
                                  arg = null;
                              }
                              if (arg) candidates.unshift([ make_node(AST_VarDef, sym, {
                                  name: sym,
                                  value: arg
                              }) ]);
                          }
                      }
                  }
              }

              function extract_candidates(expr) {
                  hit_stack.push(expr);
                  if (expr instanceof AST_Assign) {
                      if (!expr.left.has_side_effects(compressor)) {
                          candidates.push(hit_stack.slice());
                      }
                      extract_candidates(expr.right);
                  } else if (expr instanceof AST_Binary) {
                      extract_candidates(expr.left);
                      extract_candidates(expr.right);
                  } else if (expr instanceof AST_Call) {
                      extract_candidates(expr.expression);
                      expr.args.forEach(extract_candidates);
                  } else if (expr instanceof AST_Case) {
                      extract_candidates(expr.expression);
                  } else if (expr instanceof AST_Conditional) {
                      extract_candidates(expr.condition);
                      extract_candidates(expr.consequent);
                      extract_candidates(expr.alternative);
                  } else if (expr instanceof AST_Definitions
                      && (compressor.option("unused") || !(expr instanceof AST_Const))) {
                      var len = expr.definitions.length;
                      // limit number of trailing variable definitions for consideration
                      var i = len - 200;
                      if (i < 0) i = 0;
                      for (; i < len; i++) {
                          extract_candidates(expr.definitions[i]);
                      }
                  } else if (expr instanceof AST_DWLoop) {
                      extract_candidates(expr.condition);
                      if (!(expr.body instanceof AST_Block)) {
                          extract_candidates(expr.body);
                      }
                  } else if (expr instanceof AST_Exit) {
                      if (expr.value) extract_candidates(expr.value);
                  } else if (expr instanceof AST_For) {
                      if (expr.init) extract_candidates(expr.init);
                      if (expr.condition) extract_candidates(expr.condition);
                      if (expr.step) extract_candidates(expr.step);
                      if (!(expr.body instanceof AST_Block)) {
                          extract_candidates(expr.body);
                      }
                  } else if (expr instanceof AST_ForIn) {
                      extract_candidates(expr.object);
                      if (!(expr.body instanceof AST_Block)) {
                          extract_candidates(expr.body);
                      }
                  } else if (expr instanceof AST_If) {
                      extract_candidates(expr.condition);
                      if (!(expr.body instanceof AST_Block)) {
                          extract_candidates(expr.body);
                      }
                      if (expr.alternative && !(expr.alternative instanceof AST_Block)) {
                          extract_candidates(expr.alternative);
                      }
                  } else if (expr instanceof AST_Sequence) {
                      expr.expressions.forEach(extract_candidates);
                  } else if (expr instanceof AST_SimpleStatement) {
                      extract_candidates(expr.body);
                  } else if (expr instanceof AST_Switch) {
                      extract_candidates(expr.expression);
                      expr.body.forEach(extract_candidates);
                  } else if (expr instanceof AST_Unary) {
                      if (expr.operator == "++" || expr.operator == "--") {
                          candidates.push(hit_stack.slice());
                      }
                  } else if (expr instanceof AST_VarDef) {
                      if (expr.value) {
                          candidates.push(hit_stack.slice());
                          extract_candidates(expr.value);
                      }
                  }
                  hit_stack.pop();
              }

              function find_stop(node, level, write_only) {
                  var parent = scanner.parent(level);
                  if (parent instanceof AST_Assign) {
                      if (write_only
                          && !(parent.left instanceof AST_PropAccess
                              || lvalues.has(parent.left.name))) {
                          return find_stop(parent, level + 1, write_only);
                      }
                      return node;
                  }
                  if (parent instanceof AST_Binary) {
                      if (write_only && (!lazy_op.has(parent.operator) || parent.left === node)) {
                          return find_stop(parent, level + 1, write_only);
                      }
                      return node;
                  }
                  if (parent instanceof AST_Call) return node;
                  if (parent instanceof AST_Case) return node;
                  if (parent instanceof AST_Conditional) {
                      if (write_only && parent.condition === node) {
                          return find_stop(parent, level + 1, write_only);
                      }
                      return node;
                  }
                  if (parent instanceof AST_Definitions) {
                      return find_stop(parent, level + 1, true);
                  }
                  if (parent instanceof AST_Exit) {
                      return write_only ? find_stop(parent, level + 1, write_only) : node;
                  }
                  if (parent instanceof AST_If) {
                      if (write_only && parent.condition === node) {
                          return find_stop(parent, level + 1, write_only);
                      }
                      return node;
                  }
                  if (parent instanceof AST_IterationStatement) return node;
                  if (parent instanceof AST_Sequence) {
                      return find_stop(parent, level + 1, parent.tail_node() !== node);
                  }
                  if (parent instanceof AST_SimpleStatement) {
                      return find_stop(parent, level + 1, true);
                  }
                  if (parent instanceof AST_Switch) return node;
                  if (parent instanceof AST_VarDef) return node;
                  return null;
              }

              function mangleable_var(var_def) {
                  var value = var_def.value;
                  if (!(value instanceof AST_SymbolRef)) return;
                  if (value.name == "arguments") return;
                  var def = value.definition();
                  if (def.undeclared) return;
                  return value_def = def;
              }

              function get_lhs(expr) {
                  if (expr instanceof AST_VarDef && expr.name instanceof AST_SymbolDeclaration) {
                      var def = expr.name.definition();
                      if (!member(expr.name, def.orig)) return;
                      var referenced = def.references.length - def.replaced;
                      if (!referenced) return;
                      var declared = def.orig.length - def.eliminated;
                      if (declared > 1 && !(expr.name instanceof AST_SymbolFunarg)
                          || (referenced > 1 ? mangleable_var(expr) : !compressor.exposed(def))) {
                          return make_node(AST_SymbolRef, expr.name, expr.name);
                      }
                  } else {
                      var lhs = expr[expr instanceof AST_Assign ? "left" : "expression"];
                      return !is_ref_of(lhs, AST_SymbolConst) && lhs;
                  }
              }

              function get_rvalue(expr) {
                  return expr[expr instanceof AST_Assign ? "right" : "value"];
              }

              function get_lvalues(expr) {
                  var lvalues = new Map();
                  if (expr instanceof AST_Unary) return lvalues;
                  var tw = new TreeWalker(function(node, descend) {
                      var sym = node;
                      while (sym instanceof AST_PropAccess) sym = sym.expression;
                      if (sym instanceof AST_SymbolRef || sym instanceof AST_This) {
                          lvalues.set(sym.name, lvalues.get(sym.name) || is_modified(compressor, tw, node, node, 0));
                      }
                  });
                  get_rvalue(expr).walk(tw);
                  return lvalues;
              }

              function remove_candidate(expr) {
                  if (expr.name instanceof AST_SymbolFunarg) {
                      var iife = compressor.parent(), argnames = compressor.self().argnames;
                      var index = argnames.indexOf(expr.name);
                      if (index < 0) {
                          iife.args.length = Math.min(iife.args.length, argnames.length - 1);
                      } else {
                          var args = iife.args;
                          if (args[index]) args[index] = make_node(AST_Number, args[index], {
                              value: 0
                          });
                      }
                      return true;
                  }
                  var found = false;
                  return statements[stat_index].transform(new TreeTransformer(function(node, descend, in_list) {
                      if (found) return node;
                      if (node === expr || node.body === expr) {
                          found = true;
                          if (node instanceof AST_VarDef) {
                              node.value = null;
                              return node;
                          }
                          return in_list ? MAP.skip : null;
                      }
                  }, function(node) {
                      if (node instanceof AST_Sequence) switch (node.expressions.length) {
                        case 0: return null;
                        case 1: return node.expressions[0];
                      }
                  }));
              }

              function is_lhs_local(lhs) {
                  while (lhs instanceof AST_PropAccess) lhs = lhs.expression;
                  return lhs instanceof AST_SymbolRef
                      && lhs.definition().scope === scope
                      && !(in_loop
                          && (lvalues.has(lhs.name)
                              || candidate instanceof AST_Unary
                              || candidate instanceof AST_Assign && candidate.operator != "="));
              }

              function value_has_side_effects(expr) {
                  if (expr instanceof AST_Unary) return false;
                  return get_rvalue(expr).has_side_effects(compressor);
              }

              function replace_all_symbols() {
                  if (side_effects) return false;
                  if (value_def) return true;
                  if (lhs instanceof AST_SymbolRef) {
                      var def = lhs.definition();
                      if (def.references.length - def.replaced == (candidate instanceof AST_VarDef ? 1 : 2)) {
                          return true;
                      }
                  }
                  return false;
              }

              function may_modify(sym) {
                  if (!sym.definition) return true; // AST_Destructuring
                  var def = sym.definition();
                  if (def.orig.length == 1 && def.orig[0] instanceof AST_SymbolDefun) return false;
                  if (def.scope.get_defun_scope() !== scope) return true;
                  return !all(def.references, function(ref) {
                      var s = ref.scope.get_defun_scope();
                      // "block" scope within AST_Catch
                      if (s.TYPE == "Scope") s = s.parent_scope;
                      return s === scope;
                  });
              }

              function side_effects_external(node, lhs) {
                  if (node instanceof AST_Assign) return side_effects_external(node.left, true);
                  if (node instanceof AST_Unary) return side_effects_external(node.expression, true);
                  if (node instanceof AST_VarDef) return node.value && side_effects_external(node.value);
                  if (lhs) {
                      if (node instanceof AST_Dot) return side_effects_external(node.expression, true);
                      if (node instanceof AST_Sub) return side_effects_external(node.expression, true);
                      if (node instanceof AST_SymbolRef) return node.definition().scope !== scope;
                  }
                  return false;
              }
          }

          function eliminate_spurious_blocks(statements) {
              var seen_dirs = [];
              for (var i = 0; i < statements.length;) {
                  var stat = statements[i];
                  if (stat instanceof AST_BlockStatement && all(stat.body, can_be_evicted_from_block)) {
                      CHANGED = true;
                      eliminate_spurious_blocks(stat.body);
                      [].splice.apply(statements, [i, 1].concat(stat.body));
                      i += stat.body.length;
                  } else if (stat instanceof AST_EmptyStatement) {
                      CHANGED = true;
                      statements.splice(i, 1);
                  } else if (stat instanceof AST_Directive) {
                      if (seen_dirs.indexOf(stat.value) < 0) {
                          i++;
                          seen_dirs.push(stat.value);
                      } else {
                          CHANGED = true;
                          statements.splice(i, 1);
                      }
                  } else i++;
              }
          }

          function handle_if_return(statements, compressor) {
              var self = compressor.self();
              var multiple_if_returns = has_multiple_if_returns(statements);
              var in_lambda = self instanceof AST_Lambda;
              for (var i = statements.length; --i >= 0;) {
                  var stat = statements[i];
                  var j = next_index(i);
                  var next = statements[j];

                  if (in_lambda && !next && stat instanceof AST_Return) {
                      if (!stat.value) {
                          CHANGED = true;
                          statements.splice(i, 1);
                          continue;
                      }
                      if (stat.value instanceof AST_UnaryPrefix && stat.value.operator == "void") {
                          CHANGED = true;
                          statements[i] = make_node(AST_SimpleStatement, stat, {
                              body: stat.value.expression
                          });
                          continue;
                      }
                  }

                  if (stat instanceof AST_If) {
                      var ab = aborts(stat.body);
                      if (can_merge_flow(ab)) {
                          if (ab.label) {
                              remove(ab.label.thedef.references, ab);
                          }
                          CHANGED = true;
                          stat = stat.clone();
                          stat.condition = stat.condition.negate(compressor);
                          var body = as_statement_array_with_return(stat.body, ab);
                          stat.body = make_node(AST_BlockStatement, stat, {
                              body: as_statement_array(stat.alternative).concat(extract_functions())
                          });
                          stat.alternative = make_node(AST_BlockStatement, stat, {
                              body: body
                          });
                          statements[i] = stat.transform(compressor);
                          continue;
                      }

                      var ab = aborts(stat.alternative);
                      if (can_merge_flow(ab)) {
                          if (ab.label) {
                              remove(ab.label.thedef.references, ab);
                          }
                          CHANGED = true;
                          stat = stat.clone();
                          stat.body = make_node(AST_BlockStatement, stat.body, {
                              body: as_statement_array(stat.body).concat(extract_functions())
                          });
                          var body = as_statement_array_with_return(stat.alternative, ab);
                          stat.alternative = make_node(AST_BlockStatement, stat.alternative, {
                              body: body
                          });
                          statements[i] = stat.transform(compressor);
                          continue;
                      }
                  }

                  if (stat instanceof AST_If && stat.body instanceof AST_Return) {
                      var value = stat.body.value;
                      //---
                      // pretty silly case, but:
                      // if (foo()) return; return; ==> foo(); return;
                      if (!value && !stat.alternative
                          && (in_lambda && !next || next instanceof AST_Return && !next.value)) {
                          CHANGED = true;
                          statements[i] = make_node(AST_SimpleStatement, stat.condition, {
                              body: stat.condition
                          });
                          continue;
                      }
                      //---
                      // if (foo()) return x; return y; ==> return foo() ? x : y;
                      if (value && !stat.alternative && next instanceof AST_Return && next.value) {
                          CHANGED = true;
                          stat = stat.clone();
                          stat.alternative = next;
                          statements.splice(i, 1, stat.transform(compressor));
                          statements.splice(j, 1);
                          continue;
                      }
                      //---
                      // if (foo()) return x; [ return ; ] ==> return foo() ? x : undefined;
                      if (value && !stat.alternative
                          && (!next && in_lambda && multiple_if_returns
                              || next instanceof AST_Return)) {
                          CHANGED = true;
                          stat = stat.clone();
                          stat.alternative = next || make_node(AST_Return, stat, {
                              value: null
                          });
                          statements.splice(i, 1, stat.transform(compressor));
                          if (next) statements.splice(j, 1);
                          continue;
                      }
                      //---
                      // if (a) return b; if (c) return d; e; ==> return a ? b : c ? d : void e;
                      //
                      // if sequences is not enabled, this can lead to an endless loop (issue #866).
                      // however, with sequences on this helps producing slightly better output for
                      // the example code.
                      var prev = statements[prev_index(i)];
                      if (compressor.option("sequences") && in_lambda && !stat.alternative
                          && prev instanceof AST_If && prev.body instanceof AST_Return
                          && next_index(j) == statements.length && next instanceof AST_SimpleStatement) {
                          CHANGED = true;
                          stat = stat.clone();
                          stat.alternative = make_node(AST_BlockStatement, next, {
                              body: [
                                  next,
                                  make_node(AST_Return, next, {
                                      value: null
                                  })
                              ]
                          });
                          statements.splice(i, 1, stat.transform(compressor));
                          statements.splice(j, 1);
                          continue;
                      }
                  }
              }

              function has_multiple_if_returns(statements) {
                  var n = 0;
                  for (var i = statements.length; --i >= 0;) {
                      var stat = statements[i];
                      if (stat instanceof AST_If && stat.body instanceof AST_Return) {
                          if (++n > 1) return true;
                      }
                  }
                  return false;
              }

              function is_return_void(value) {
                  return !value || value instanceof AST_UnaryPrefix && value.operator == "void";
              }

              function can_merge_flow(ab) {
                  if (!ab) return false;
                  for (var j = i + 1, len = statements.length; j < len; j++) {
                      var stat = statements[j];
                      if (stat instanceof AST_Const || stat instanceof AST_Let) return false;
                  }
                  var lct = ab instanceof AST_LoopControl ? compressor.loopcontrol_target(ab) : null;
                  return ab instanceof AST_Return && in_lambda && is_return_void(ab.value)
                      || ab instanceof AST_Continue && self === loop_body(lct)
                      || ab instanceof AST_Break && lct instanceof AST_BlockStatement && self === lct;
              }

              function extract_functions() {
                  var tail = statements.slice(i + 1);
                  statements.length = i + 1;
                  return tail.filter(function(stat) {
                      if (stat instanceof AST_Defun) {
                          statements.push(stat);
                          return false;
                      }
                      return true;
                  });
              }

              function as_statement_array_with_return(node, ab) {
                  var body = as_statement_array(node).slice(0, -1);
                  if (ab.value) {
                      body.push(make_node(AST_SimpleStatement, ab.value, {
                          body: ab.value.expression
                      }));
                  }
                  return body;
              }

              function next_index(i) {
                  for (var j = i + 1, len = statements.length; j < len; j++) {
                      var stat = statements[j];
                      if (!(stat instanceof AST_Var && declarations_only(stat))) {
                          break;
                      }
                  }
                  return j;
              }

              function prev_index(i) {
                  for (var j = i; --j >= 0;) {
                      var stat = statements[j];
                      if (!(stat instanceof AST_Var && declarations_only(stat))) {
                          break;
                      }
                  }
                  return j;
              }
          }

          function eliminate_dead_code(statements, compressor) {
              var has_quit;
              var self = compressor.self();
              for (var i = 0, n = 0, len = statements.length; i < len; i++) {
                  var stat = statements[i];
                  if (stat instanceof AST_LoopControl) {
                      var lct = compressor.loopcontrol_target(stat);
                      if (stat instanceof AST_Break
                              && !(lct instanceof AST_IterationStatement)
                              && loop_body(lct) === self
                          || stat instanceof AST_Continue
                              && loop_body(lct) === self) {
                          if (stat.label) {
                              remove(stat.label.thedef.references, stat);
                          }
                      } else {
                          statements[n++] = stat;
                      }
                  } else {
                      statements[n++] = stat;
                  }
                  if (aborts(stat)) {
                      has_quit = statements.slice(i + 1);
                      break;
                  }
              }
              statements.length = n;
              CHANGED = n != len;
              if (has_quit) has_quit.forEach(function(stat) {
                  extract_declarations_from_unreachable_code(compressor, stat, statements);
              });
          }

          function declarations_only(node) {
              return all(node.definitions, function(var_def) {
                  return !var_def.value;
              });
          }

          function sequencesize(statements, compressor) {
              if (statements.length < 2) return;
              var seq = [], n = 0;
              function push_seq() {
                  if (!seq.length) return;
                  var body = make_sequence(seq[0], seq);
                  statements[n++] = make_node(AST_SimpleStatement, body, { body: body });
                  seq = [];
              }
              for (var i = 0, len = statements.length; i < len; i++) {
                  var stat = statements[i];
                  if (stat instanceof AST_SimpleStatement) {
                      if (seq.length >= compressor.sequences_limit) push_seq();
                      var body = stat.body;
                      if (seq.length > 0) body = body.drop_side_effect_free(compressor);
                      if (body) merge_sequence(seq, body);
                  } else if (stat instanceof AST_Definitions && declarations_only(stat)
                      || stat instanceof AST_Defun) {
                      statements[n++] = stat;
                  } else {
                      push_seq();
                      statements[n++] = stat;
                  }
              }
              push_seq();
              statements.length = n;
              if (n != len) CHANGED = true;
          }

          function to_simple_statement(block, decls) {
              if (!(block instanceof AST_BlockStatement)) return block;
              var stat = null;
              for (var i = 0, len = block.body.length; i < len; i++) {
                  var line = block.body[i];
                  if (line instanceof AST_Var && declarations_only(line)) {
                      decls.push(line);
                  } else if (stat) {
                      return false;
                  } else {
                      stat = line;
                  }
              }
              return stat;
          }

          function sequencesize_2(statements, compressor) {
              function cons_seq(right) {
                  n--;
                  CHANGED = true;
                  var left = prev.body;
                  return make_sequence(left, [ left, right ]).transform(compressor);
              }
              var n = 0, prev;
              for (var i = 0; i < statements.length; i++) {
                  var stat = statements[i];
                  if (prev) {
                      if (stat instanceof AST_Exit) {
                          stat.value = cons_seq(stat.value || make_node(AST_Undefined, stat).transform(compressor));
                      } else if (stat instanceof AST_For) {
                          if (!(stat.init instanceof AST_Definitions)) {
                              var abort = false;
                              prev.body.walk(new TreeWalker(function(node) {
                                  if (abort || node instanceof AST_Scope) return true;
                                  if (node instanceof AST_Binary && node.operator == "in") {
                                      abort = true;
                                      return true;
                                  }
                              }));
                              if (!abort) {
                                  if (stat.init) stat.init = cons_seq(stat.init);
                                  else {
                                      stat.init = prev.body;
                                      n--;
                                      CHANGED = true;
                                  }
                              }
                          }
                      } else if (stat instanceof AST_ForIn) {
                          if (!(stat.init instanceof AST_Const) && !(stat.init instanceof AST_Let)) {
                              stat.object = cons_seq(stat.object);
                          }
                      } else if (stat instanceof AST_If) {
                          stat.condition = cons_seq(stat.condition);
                      } else if (stat instanceof AST_Switch) {
                          stat.expression = cons_seq(stat.expression);
                      } else if (stat instanceof AST_With) {
                          stat.expression = cons_seq(stat.expression);
                      }
                  }
                  if (compressor.option("conditionals") && stat instanceof AST_If) {
                      var decls = [];
                      var body = to_simple_statement(stat.body, decls);
                      var alt = to_simple_statement(stat.alternative, decls);
                      if (body !== false && alt !== false && decls.length > 0) {
                          var len = decls.length;
                          decls.push(make_node(AST_If, stat, {
                              condition: stat.condition,
                              body: body || make_node(AST_EmptyStatement, stat.body),
                              alternative: alt
                          }));
                          decls.unshift(n, 1);
                          [].splice.apply(statements, decls);
                          i += len;
                          n += len + 1;
                          prev = null;
                          CHANGED = true;
                          continue;
                      }
                  }
                  statements[n++] = stat;
                  prev = stat instanceof AST_SimpleStatement ? stat : null;
              }
              statements.length = n;
          }

          function join_object_assignments(defn, body) {
              if (!(defn instanceof AST_Definitions)) return;
              var def = defn.definitions[defn.definitions.length - 1];
              if (!(def.value instanceof AST_Object)) return;
              var exprs;
              if (body instanceof AST_Assign) {
                  exprs = [ body ];
              } else if (body instanceof AST_Sequence) {
                  exprs = body.expressions.slice();
              }
              if (!exprs) return;
              var trimmed = false;
              do {
                  var node = exprs[0];
                  if (!(node instanceof AST_Assign)) break;
                  if (node.operator != "=") break;
                  if (!(node.left instanceof AST_PropAccess)) break;
                  var sym = node.left.expression;
                  if (!(sym instanceof AST_SymbolRef)) break;
                  if (def.name.name != sym.name) break;
                  if (!node.right.is_constant_expression(scope)) break;
                  var prop = node.left.property;
                  if (prop instanceof AST_Node) {
                      prop = prop.evaluate(compressor);
                  }
                  if (prop instanceof AST_Node) break;
                  prop = "" + prop;
                  var diff = compressor.option("ecma") < 6
                      && compressor.has_directive("use strict") ? function(node) {
                      return node.key != prop && (node.key && node.key.name != prop);
                  } : function(node) {
                      return node.key && node.key.name != prop;
                  };
                  if (!all(def.value.properties, diff)) break;
                  var p = def.value.properties.filter(function (p) { return p.key === prop; })[0];
                  if (!p) {
                      def.value.properties.push(make_node(AST_ObjectKeyVal, node, {
                          key: prop,
                          value: node.right
                      }));
                  } else {
                      p.value = new AST_Sequence({
                          start: p.start,
                          expressions: [p.value.clone(), node.right.clone()],
                          end: p.end
                      });
                  }
                  exprs.shift();
                  trimmed = true;
              } while (exprs.length);
              return trimmed && exprs;
          }

          function join_consecutive_vars(statements) {
              var defs;
              for (var i = 0, j = -1, len = statements.length; i < len; i++) {
                  var stat = statements[i];
                  var prev = statements[j];
                  if (stat instanceof AST_Definitions) {
                      if (prev && prev.TYPE == stat.TYPE) {
                          prev.definitions = prev.definitions.concat(stat.definitions);
                          CHANGED = true;
                      } else if (defs && defs.TYPE == stat.TYPE && declarations_only(stat)) {
                          defs.definitions = defs.definitions.concat(stat.definitions);
                          CHANGED = true;
                      } else {
                          statements[++j] = stat;
                          defs = stat;
                      }
                  } else if (stat instanceof AST_Exit) {
                      stat.value = extract_object_assignments(stat.value);
                  } else if (stat instanceof AST_For) {
                      var exprs = join_object_assignments(prev, stat.init);
                      if (exprs) {
                          CHANGED = true;
                          stat.init = exprs.length ? make_sequence(stat.init, exprs) : null;
                          statements[++j] = stat;
                      } else if (prev instanceof AST_Var && (!stat.init || stat.init.TYPE == prev.TYPE)) {
                          if (stat.init) {
                              prev.definitions = prev.definitions.concat(stat.init.definitions);
                          }
                          stat.init = prev;
                          statements[j] = stat;
                          CHANGED = true;
                      } else if (defs && stat.init && defs.TYPE == stat.init.TYPE && declarations_only(stat.init)) {
                          defs.definitions = defs.definitions.concat(stat.init.definitions);
                          stat.init = null;
                          statements[++j] = stat;
                          CHANGED = true;
                      } else {
                          statements[++j] = stat;
                      }
                  } else if (stat instanceof AST_ForIn) {
                      stat.object = extract_object_assignments(stat.object);
                  } else if (stat instanceof AST_If) {
                      stat.condition = extract_object_assignments(stat.condition);
                  } else if (stat instanceof AST_SimpleStatement) {
                      var exprs = join_object_assignments(prev, stat.body);
                      if (exprs) {
                          CHANGED = true;
                          if (!exprs.length) continue;
                          stat.body = make_sequence(stat.body, exprs);
                      }
                      statements[++j] = stat;
                  } else if (stat instanceof AST_Switch) {
                      stat.expression = extract_object_assignments(stat.expression);
                  } else if (stat instanceof AST_With) {
                      stat.expression = extract_object_assignments(stat.expression);
                  } else {
                      statements[++j] = stat;
                  }
              }
              statements.length = j + 1;

              function extract_object_assignments(value) {
                  statements[++j] = stat;
                  var exprs = join_object_assignments(prev, value);
                  if (exprs) {
                      CHANGED = true;
                      if (exprs.length) {
                          return make_sequence(value, exprs);
                      } else if (value instanceof AST_Sequence) {
                          return value.tail_node().left;
                      } else {
                          return value.left;
                      }
                  }
                  return value;
              }
          }
      }

      function extract_declarations_from_unreachable_code(compressor, stat, target) {
          if (!(stat instanceof AST_Defun)) {
              compressor.warn("Dropping unreachable code [{file}:{line},{col}]", stat.start);
          }
          stat.walk(new TreeWalker(function(node) {
              if (node instanceof AST_Var) {
                  compressor.warn("Declarations in unreachable code! [{file}:{line},{col}]", node.start);
                  node.remove_initializers();
                  target.push(node);
                  return true;
              }
              if (node instanceof AST_Defun && (node === stat || !compressor.has_directive("use strict"))) {
                  target.push(node === stat ? node : make_node(AST_Var, node, {
                      definitions: [
                          make_node(AST_VarDef, node, {
                              name: make_node(AST_SymbolVar, node.name, node.name),
                              value: null
                          })
                      ]
                  }));
                  return true;
              }
              if (node instanceof AST_Scope) {
                  return true;
              }
          }));
      }

      function get_value(key) {
          if (key instanceof AST_Constant) {
              return key.getValue();
          }
          if (key instanceof AST_UnaryPrefix
              && key.operator == "void"
              && key.expression instanceof AST_Constant) {
              return;
          }
          return key;
      }

      function is_undefined(node, compressor) {
          return node.is_undefined
              || node instanceof AST_Undefined
              || node instanceof AST_UnaryPrefix
                  && node.operator == "void"
                  && !node.expression.has_side_effects(compressor);
      }

      // may_throw_on_access()
      // returns true if this node may be null, undefined or contain `AST_Accessor`
      (function(def_dot_throw) {
          AST_Node.DEFMETHOD("may_throw_on_access", function(compressor) {
              return !compressor.option("pure_getters")
                  || this._dot_throw(compressor);
          });

          function is_strict(compressor) {
              return /strict/.test(compressor.option("pure_getters"));
          }

          def_dot_throw(AST_Node, is_strict);
          def_dot_throw(AST_Null, return_true);
          def_dot_throw(AST_Undefined, return_true);
          def_dot_throw(AST_Constant, return_false);
          def_dot_throw(AST_Array, return_false);
          def_dot_throw(AST_Object, function(compressor) {
              if (!is_strict(compressor)) return false;
              for (var i = this.properties.length; --i >=0;)
                  if (this.properties[i]._dot_throw(compressor)) return true;
              return false;
          });
          def_dot_throw(AST_ObjectProperty, return_false);
          def_dot_throw(AST_ObjectGetter, return_true);
          def_dot_throw(AST_Expansion, function(compressor) {
              return this.expression._dot_throw(compressor);
          });
          def_dot_throw(AST_Function, return_false);
          def_dot_throw(AST_Arrow, return_false);
          def_dot_throw(AST_UnaryPostfix, return_false);
          def_dot_throw(AST_UnaryPrefix, function() {
              return this.operator == "void";
          });
          def_dot_throw(AST_Binary, function(compressor) {
              return (this.operator == "&&" || this.operator == "||")
                  && (this.left._dot_throw(compressor) || this.right._dot_throw(compressor));
          });
          def_dot_throw(AST_Assign, function(compressor) {
              return this.operator == "="
                  && this.right._dot_throw(compressor);
          });
          def_dot_throw(AST_Conditional, function(compressor) {
              return this.consequent._dot_throw(compressor)
                  || this.alternative._dot_throw(compressor);
          });
          def_dot_throw(AST_Dot, function(compressor) {
              if (!is_strict(compressor)) return false;
              if (this.expression instanceof AST_Function && this.property == "prototype") return false;
              return true;
          });
          def_dot_throw(AST_Sequence, function(compressor) {
              return this.tail_node()._dot_throw(compressor);
          });
          def_dot_throw(AST_SymbolRef, function(compressor) {
              if (this.is_undefined) return true;
              if (!is_strict(compressor)) return false;
              if (is_undeclared_ref(this) && this.is_declared(compressor)) return false;
              if (this.is_immutable()) return false;
              var fixed = this.fixed_value();
              return !fixed || fixed._dot_throw(compressor);
          });
      })(function(node, func) {
          node.DEFMETHOD("_dot_throw", func);
      });

      /* -----[ boolean/negation helpers ]----- */

      // methods to determine whether an expression has a boolean result type
      (function(def_is_boolean) {
          const unary_bool = makePredicate("! delete");
          const binary_bool = makePredicate("in instanceof == != === !== < <= >= >");
          def_is_boolean(AST_Node, return_false);
          def_is_boolean(AST_UnaryPrefix, function() {
              return unary_bool.has(this.operator);
          });
          def_is_boolean(AST_Binary, function() {
              return binary_bool.has(this.operator)
                  || lazy_op.has(this.operator)
                      && this.left.is_boolean()
                      && this.right.is_boolean();
          });
          def_is_boolean(AST_Conditional, function() {
              return this.consequent.is_boolean() && this.alternative.is_boolean();
          });
          def_is_boolean(AST_Assign, function() {
              return this.operator == "=" && this.right.is_boolean();
          });
          def_is_boolean(AST_Sequence, function() {
              return this.tail_node().is_boolean();
          });
          def_is_boolean(AST_True, return_true);
          def_is_boolean(AST_False, return_true);
      })(function(node, func) {
          node.DEFMETHOD("is_boolean", func);
      });

      // methods to determine if an expression has a numeric result type
      (function(def_is_number) {
          def_is_number(AST_Node, return_false);
          def_is_number(AST_Number, return_true);
          var unary = makePredicate("+ - ~ ++ --");
          def_is_number(AST_Unary, function() {
              return unary.has(this.operator);
          });
          var binary = makePredicate("- * / % & | ^ << >> >>>");
          def_is_number(AST_Binary, function(compressor) {
              return binary.has(this.operator) || this.operator == "+"
                  && this.left.is_number(compressor)
                  && this.right.is_number(compressor);
          });
          def_is_number(AST_Assign, function(compressor) {
              return binary.has(this.operator.slice(0, -1))
                  || this.operator == "=" && this.right.is_number(compressor);
          });
          def_is_number(AST_Sequence, function(compressor) {
              return this.tail_node().is_number(compressor);
          });
          def_is_number(AST_Conditional, function(compressor) {
              return this.consequent.is_number(compressor) && this.alternative.is_number(compressor);
          });
      })(function(node, func) {
          node.DEFMETHOD("is_number", func);
      });

      // methods to determine if an expression has a string result type
      (function(def_is_string) {
          def_is_string(AST_Node, return_false);
          def_is_string(AST_String, return_true);
          def_is_string(AST_TemplateString, function() {
              return this.segments.length === 1;
          });
          def_is_string(AST_UnaryPrefix, function() {
              return this.operator == "typeof";
          });
          def_is_string(AST_Binary, function(compressor) {
              return this.operator == "+" &&
                  (this.left.is_string(compressor) || this.right.is_string(compressor));
          });
          def_is_string(AST_Assign, function(compressor) {
              return (this.operator == "=" || this.operator == "+=") && this.right.is_string(compressor);
          });
          def_is_string(AST_Sequence, function(compressor) {
              return this.tail_node().is_string(compressor);
          });
          def_is_string(AST_Conditional, function(compressor) {
              return this.consequent.is_string(compressor) && this.alternative.is_string(compressor);
          });
      })(function(node, func) {
          node.DEFMETHOD("is_string", func);
      });

      var lazy_op = makePredicate("&& ||");
      var unary_side_effects = makePredicate("delete ++ --");

      function is_lhs(node, parent) {
          if (parent instanceof AST_Unary && unary_side_effects.has(parent.operator)) return parent.expression;
          if (parent instanceof AST_Assign && parent.left === node) return node;
      }

      (function(def_find_defs) {
          function to_node(value, orig) {
              if (value instanceof AST_Node) return make_node(value.CTOR, orig, value);
              if (Array.isArray(value)) return make_node(AST_Array, orig, {
                  elements: value.map(function(value) {
                      return to_node(value, orig);
                  })
              });
              if (value && typeof value == "object") {
                  var props = [];
                  for (var key in value) if (HOP(value, key)) {
                      props.push(make_node(AST_ObjectKeyVal, orig, {
                          key: key,
                          value: to_node(value[key], orig)
                      }));
                  }
                  return make_node(AST_Object, orig, {
                      properties: props
                  });
              }
              return make_node_from_constant(value, orig);
          }

          function warn(compressor, node) {
              compressor.warn("global_defs " + node.print_to_string() + " redefined [{file}:{line},{col}]", node.start);
          }

          AST_Toplevel.DEFMETHOD("resolve_defines", function(compressor) {
              if (!compressor.option("global_defs")) return this;
              this.figure_out_scope({ ie8: compressor.option("ie8") });
              return this.transform(new TreeTransformer(function(node) {
                  var def = node._find_defs(compressor, "");
                  if (!def) return;
                  var level = 0, child = node, parent;
                  while (parent = this.parent(level++)) {
                      if (!(parent instanceof AST_PropAccess)) break;
                      if (parent.expression !== child) break;
                      child = parent;
                  }
                  if (is_lhs(child, parent)) {
                      warn(compressor, node);
                      return;
                  }
                  return def;
              }));
          });
          def_find_defs(AST_Node, noop);
          def_find_defs(AST_Dot, function(compressor, suffix) {
              return this.expression._find_defs(compressor, "." + this.property + suffix);
          });
          def_find_defs(AST_SymbolDeclaration, function(compressor) {
              if (!this.global()) return;
              if (HOP(compressor.option("global_defs"), this.name)) warn(compressor, this);
          });
          def_find_defs(AST_SymbolRef, function(compressor, suffix) {
              if (!this.global()) return;
              var defines = compressor.option("global_defs");
              var name = this.name + suffix;
              if (HOP(defines, name)) return to_node(defines[name], this);
          });
      })(function(node, func) {
          node.DEFMETHOD("_find_defs", func);
      });

      function best_of_expression(ast1, ast2) {
          return ast1.print_to_string().length >
              ast2.print_to_string().length
              ? ast2 : ast1;
      }

      function best_of_statement(ast1, ast2) {
          return best_of_expression(make_node(AST_SimpleStatement, ast1, {
              body: ast1
          }), make_node(AST_SimpleStatement, ast2, {
              body: ast2
          })).body;
      }

      function best_of(compressor, ast1, ast2) {
          return (first_in_statement(compressor) ? best_of_statement : best_of_expression)(ast1, ast2);
      }

      function convert_to_predicate(obj) {
          for (var key of Object.keys(obj)) {
              obj[key] = makePredicate(obj[key]);
          }
      }

      var object_fns = [
          "constructor",
          "toString",
          "valueOf",
      ];
      var native_fns = {
          Array: [
              "indexOf",
              "join",
              "lastIndexOf",
              "slice",
          ].concat(object_fns),
          Boolean: object_fns,
          Function: object_fns,
          Number: [
              "toExponential",
              "toFixed",
              "toPrecision",
          ].concat(object_fns),
          Object: object_fns,
          RegExp: [
              "test",
          ].concat(object_fns),
          String: [
              "charAt",
              "charCodeAt",
              "concat",
              "indexOf",
              "italics",
              "lastIndexOf",
              "match",
              "replace",
              "search",
              "slice",
              "split",
              "substr",
              "substring",
              "toLowerCase",
              "toUpperCase",
              "trim",
          ].concat(object_fns),
      };
      convert_to_predicate(native_fns);
      var static_fns = {
          Array: [
              "isArray",
          ],
          Math: [
              "abs",
              "acos",
              "asin",
              "atan",
              "ceil",
              "cos",
              "exp",
              "floor",
              "log",
              "round",
              "sin",
              "sqrt",
              "tan",
              "atan2",
              "pow",
              "max",
              "min",
          ],
          Number: [
              "isFinite",
              "isNaN",
          ],
          Object: [
              "create",
              "getOwnPropertyDescriptor",
              "getOwnPropertyNames",
              "getPrototypeOf",
              "isExtensible",
              "isFrozen",
              "isSealed",
              "keys",
          ],
          String: [
              "fromCharCode",
          ],
      };
      convert_to_predicate(static_fns);

      // methods to evaluate a constant expression
      (function(def_eval) {
          // If the node has been successfully reduced to a constant,
          // then its value is returned; otherwise the element itself
          // is returned.
          // They can be distinguished as constant value is never a
          // descendant of AST_Node.
          AST_Node.DEFMETHOD("evaluate", function(compressor) {
              if (!compressor.option("evaluate")) return this;
              var val = this._eval(compressor, 1);
              if (!val || val instanceof RegExp) return val;
              if (typeof val == "function" || typeof val == "object") return this;
              return val;
          });
          var unaryPrefix = makePredicate("! ~ - + void");
          AST_Node.DEFMETHOD("is_constant", function() {
              // Accomodate when compress option evaluate=false
              // as well as the common constant expressions !0 and -1
              if (this instanceof AST_Constant) {
                  return !(this instanceof AST_RegExp);
              } else {
                  return this instanceof AST_UnaryPrefix
                      && this.expression instanceof AST_Constant
                      && unaryPrefix.has(this.operator);
              }
          });
          def_eval(AST_Statement, function() {
              throw new Error(string_template("Cannot evaluate a statement [{file}:{line},{col}]", this.start));
          });
          def_eval(AST_Lambda, return_this);
          def_eval(AST_Class, return_this);
          def_eval(AST_Node, return_this);
          def_eval(AST_Constant, function() {
              return this.getValue();
          });
          def_eval(AST_TemplateString, function() {
              if (this.segments.length !== 1) return this;
              return this.segments[0].value;
          });
          def_eval(AST_Function, function(compressor) {
              if (compressor.option("unsafe")) {
                  var fn = function() {};
                  fn.node = this;
                  fn.toString = function() {
                      return this.node.print_to_string();
                  };
                  return fn;
              }
              return this;
          });
          def_eval(AST_Array, function(compressor, depth) {
              if (compressor.option("unsafe")) {
                  var elements = [];
                  for (var i = 0, len = this.elements.length; i < len; i++) {
                      var element = this.elements[i];
                      var value = element._eval(compressor, depth);
                      if (element === value) return this;
                      elements.push(value);
                  }
                  return elements;
              }
              return this;
          });
          def_eval(AST_Object, function(compressor, depth) {
              if (compressor.option("unsafe")) {
                  var val = {};
                  for (var i = 0, len = this.properties.length; i < len; i++) {
                      var prop = this.properties[i];
                      if (prop instanceof AST_Expansion) return this;
                      var key = prop.key;
                      if (key instanceof AST_Symbol) {
                          key = key.name;
                      } else if (key instanceof AST_Node) {
                          key = key._eval(compressor, depth);
                          if (key === prop.key) return this;
                      }
                      if (typeof Object.prototype[key] === "function") {
                          return this;
                      }
                      if (prop.value instanceof AST_Function) continue;
                      val[key] = prop.value._eval(compressor, depth);
                      if (val[key] === prop.value) return this;
                  }
                  return val;
              }
              return this;
          });
          var non_converting_unary = makePredicate("! typeof void");
          def_eval(AST_UnaryPrefix, function(compressor, depth) {
              var e = this.expression;
              // Function would be evaluated to an array and so typeof would
              // incorrectly return 'object'. Hence making is a special case.
              if (compressor.option("typeofs")
                  && this.operator == "typeof"
                  && (e instanceof AST_Lambda
                      || e instanceof AST_SymbolRef
                          && e.fixed_value() instanceof AST_Lambda)) {
                  return typeof function() {};
              }
              if (!non_converting_unary.has(this.operator)) depth++;
              e = e._eval(compressor, depth);
              if (e === this.expression) return this;
              switch (this.operator) {
                case "!": return !e;
                case "typeof":
                  // typeof <RegExp> returns "object" or "function" on different platforms
                  // so cannot evaluate reliably
                  if (e instanceof RegExp) return this;
                  return typeof e;
                case "void": return void e;
                case "~": return ~e;
                case "-": return -e;
                case "+": return +e;
              }
              return this;
          });
          var non_converting_binary = makePredicate("&& || === !==");
          def_eval(AST_Binary, function(compressor, depth) {
              if (!non_converting_binary.has(this.operator)) depth++;
              var left = this.left._eval(compressor, depth);
              if (left === this.left) return this;
              var right = this.right._eval(compressor, depth);
              if (right === this.right) return this;
              var result;
              switch (this.operator) {
                case "&&"  : result = left &&  right; break;
                case "||"  : result = left ||  right; break;
                case "|"   : result = left |   right; break;
                case "&"   : result = left &   right; break;
                case "^"   : result = left ^   right; break;
                case "+"   : result = left +   right; break;
                case "*"   : result = left *   right; break;
                case "**"  : result = Math.pow(left, right); break;
                case "/"   : result = left /   right; break;
                case "%"   : result = left %   right; break;
                case "-"   : result = left -   right; break;
                case "<<"  : result = left <<  right; break;
                case ">>"  : result = left >>  right; break;
                case ">>>" : result = left >>> right; break;
                case "=="  : result = left ==  right; break;
                case "===" : result = left === right; break;
                case "!="  : result = left !=  right; break;
                case "!==" : result = left !== right; break;
                case "<"   : result = left <   right; break;
                case "<="  : result = left <=  right; break;
                case ">"   : result = left >   right; break;
                case ">="  : result = left >=  right; break;
                default:
                    return this;
              }
              if (isNaN(result) && compressor.find_parent(AST_With)) {
                  // leave original expression as is
                  return this;
              }
              return result;
          });
          def_eval(AST_Conditional, function(compressor, depth) {
              var condition = this.condition._eval(compressor, depth);
              if (condition === this.condition) return this;
              var node = condition ? this.consequent : this.alternative;
              var value = node._eval(compressor, depth);
              return value === node ? this : value;
          });
          def_eval(AST_SymbolRef, function(compressor, depth) {
              var fixed = this.fixed_value();
              if (!fixed) return this;
              var value;
              if (HOP(fixed, "_eval")) {
                  value = fixed._eval();
              } else {
                  this._eval = return_this;
                  value = fixed._eval(compressor, depth);
                  delete this._eval;
                  if (value === fixed) return this;
                  fixed._eval = function() {
                      return value;
                  };
              }
              if (value && typeof value == "object") {
                  var escaped = this.definition().escaped;
                  if (escaped && depth > escaped) return this;
              }
              return value;
          });
          var global_objs = {
              Array: Array,
              Math: Math,
              Number: Number,
              Object: Object,
              String: String,
          };
          var static_values = {
              Math: [
                  "E",
                  "LN10",
                  "LN2",
                  "LOG2E",
                  "LOG10E",
                  "PI",
                  "SQRT1_2",
                  "SQRT2",
              ],
              Number: [
                  "MAX_VALUE",
                  "MIN_VALUE",
                  "NaN",
                  "NEGATIVE_INFINITY",
                  "POSITIVE_INFINITY",
              ],
          };
          convert_to_predicate(static_values);
          def_eval(AST_PropAccess, function(compressor, depth) {
              if (compressor.option("unsafe")) {
                  var key = this.property;
                  if (key instanceof AST_Node) {
                      key = key._eval(compressor, depth);
                      if (key === this.property) return this;
                  }
                  var exp = this.expression;
                  var val;
                  if (is_undeclared_ref(exp)) {

                      var aa;
                      var first_arg = exp.name === "hasOwnProperty"
                          && key === "call"
                          && (aa = compressor.parent() && compressor.parent().args)
                          && (aa && aa[0]
                          && aa[0].evaluate(compressor));

                      first_arg = first_arg instanceof AST_Dot ? first_arg.expression : first_arg;

                      if (first_arg == null || first_arg.thedef && first_arg.thedef.undeclared) {
                          return this.clone();
                      }
                      var static_value = static_values[exp.name];
                      if (!static_value || !static_value.has(key)) return this;
                      val = global_objs[exp.name];
                  } else {
                      val = exp._eval(compressor, depth + 1);
                      if (!val || val === exp || !HOP(val, key)) return this;
                      if (typeof val == "function") switch (key) {
                        case "name":
                          return val.node.name ? val.node.name.name : "";
                        case "length":
                          return val.node.argnames.length;
                        default:
                          return this;
                      }
                  }
                  return val[key];
              }
              return this;
          });
          def_eval(AST_Call, function(compressor, depth) {
              var exp = this.expression;
              if (compressor.option("unsafe") && exp instanceof AST_PropAccess) {
                  var key = exp.property;
                  if (key instanceof AST_Node) {
                      key = key._eval(compressor, depth);
                      if (key === exp.property) return this;
                  }
                  var val;
                  var e = exp.expression;
                  if (is_undeclared_ref(e)) {
                      var first_arg =
                          e.name === "hasOwnProperty" &&
                          key === "call" &&
                          (this.args[0] && this.args[0].evaluate(compressor));

                      first_arg = first_arg instanceof AST_Dot ? first_arg.expression : first_arg;

                      if ((first_arg == null || first_arg.thedef && first_arg.thedef.undeclared)) {
                          return this.clone();
                      }
                      var static_fn = static_fns[e.name];
                      if (!static_fn || !static_fn.has(key)) return this;
                      val = global_objs[e.name];
                  } else {
                      val = e._eval(compressor, depth + 1);
                      if (val === e || !val) return this;
                      var native_fn = native_fns[val.constructor.name];
                      if (!native_fn || !native_fn.has(key)) return this;
                  }
                  var args = [];
                  for (var i = 0, len = this.args.length; i < len; i++) {
                      var arg = this.args[i];
                      var value = arg._eval(compressor, depth);
                      if (arg === value) return this;
                      args.push(value);
                  }
                  try {
                      return val[key].apply(val, args);
                  } catch (ex) {
                      compressor.warn("Error evaluating {code} [{file}:{line},{col}]", {
                          code: this.print_to_string(),
                          file: this.start.file,
                          line: this.start.line,
                          col: this.start.col
                      });
                  }
              }
              return this;
          });
          def_eval(AST_New, return_this);
      })(function(node, func) {
          node.DEFMETHOD("_eval", func);
      });

      // method to negate an expression
      (function(def_negate) {
          function basic_negation(exp) {
              return make_node(AST_UnaryPrefix, exp, {
                  operator: "!",
                  expression: exp
              });
          }
          function best(orig, alt, first_in_statement$$1) {
              var negated = basic_negation(orig);
              if (first_in_statement$$1) {
                  var stat = make_node(AST_SimpleStatement, alt, {
                      body: alt
                  });
                  return best_of_expression(negated, stat) === stat ? alt : negated;
              }
              return best_of_expression(negated, alt);
          }
          def_negate(AST_Node, function() {
              return basic_negation(this);
          });
          def_negate(AST_Statement, function() {
              throw new Error("Cannot negate a statement");
          });
          def_negate(AST_Function, function() {
              return basic_negation(this);
          });
          def_negate(AST_Arrow, function() {
              return basic_negation(this);
          });
          def_negate(AST_UnaryPrefix, function() {
              if (this.operator == "!")
                  return this.expression;
              return basic_negation(this);
          });
          def_negate(AST_Sequence, function(compressor) {
              var expressions = this.expressions.slice();
              expressions.push(expressions.pop().negate(compressor));
              return make_sequence(this, expressions);
          });
          def_negate(AST_Conditional, function(compressor, first_in_statement$$1) {
              var self = this.clone();
              self.consequent = self.consequent.negate(compressor);
              self.alternative = self.alternative.negate(compressor);
              return best(this, self, first_in_statement$$1);
          });
          def_negate(AST_Binary, function(compressor, first_in_statement$$1) {
              var self = this.clone(), op = this.operator;
              if (compressor.option("unsafe_comps")) {
                  switch (op) {
                    case "<=" : self.operator = ">"  ; return self;
                    case "<"  : self.operator = ">=" ; return self;
                    case ">=" : self.operator = "<"  ; return self;
                    case ">"  : self.operator = "<=" ; return self;
                  }
              }
              switch (op) {
                case "==" : self.operator = "!="; return self;
                case "!=" : self.operator = "=="; return self;
                case "===": self.operator = "!=="; return self;
                case "!==": self.operator = "==="; return self;
                case "&&":
                  self.operator = "||";
                  self.left = self.left.negate(compressor, first_in_statement$$1);
                  self.right = self.right.negate(compressor);
                  return best(this, self, first_in_statement$$1);
                case "||":
                  self.operator = "&&";
                  self.left = self.left.negate(compressor, first_in_statement$$1);
                  self.right = self.right.negate(compressor);
                  return best(this, self, first_in_statement$$1);
              }
              return basic_negation(this);
          });
      })(function(node, func) {
          node.DEFMETHOD("negate", function(compressor, first_in_statement$$1) {
              return func.call(this, compressor, first_in_statement$$1);
          });
      });

      var global_pure_fns = makePredicate("Boolean decodeURI decodeURIComponent Date encodeURI encodeURIComponent Error escape EvalError isFinite isNaN Number Object parseFloat parseInt RangeError ReferenceError String SyntaxError TypeError unescape URIError");
      AST_Call.DEFMETHOD("is_expr_pure", function(compressor) {
          if (compressor.option("unsafe")) {
              var expr = this.expression;
              var first_arg = (this.args && this.args[0] && this.args[0].evaluate(compressor));
              if (
                  expr.expression && expr.expression.name === "hasOwnProperty" &&
                  (first_arg == null || first_arg.thedef && first_arg.thedef.undeclared)
              ) {
                  return false;
              }
              if (is_undeclared_ref(expr) && global_pure_fns.has(expr.name)) return true;
              if (expr instanceof AST_Dot
                  && is_undeclared_ref(expr.expression)
                  && static_fns.hasOwnProperty(expr.expression.name)
                  && static_fns[expr.expression.name].has(expr.property)) {
                  return true;
              }
          }
          return this.pure || !compressor.pure_funcs(this);
      });
      AST_Node.DEFMETHOD("is_call_pure", return_false);
      AST_Dot.DEFMETHOD("is_call_pure", function(compressor) {
          if (!compressor.option("unsafe")) return;
          const expr = this.expression;
          let map;
          if (expr instanceof AST_Array) {
              map = native_fns.Array;
          } else if (expr.is_boolean()) {
              map = native_fns.Boolean;
          } else if (expr.is_number(compressor)) {
              map = native_fns.Number;
          } else if (expr instanceof AST_RegExp) {
              map = native_fns.RegExp;
          } else if (expr.is_string(compressor)) {
              map = native_fns.String;
          } else if (!this.may_throw_on_access(compressor)) {
              map = native_fns.Object;
          }
          return map && map.has(this.property);
      });

      // determine if expression has side effects
      (function(def_has_side_effects) {
          def_has_side_effects(AST_Node, return_true);

          def_has_side_effects(AST_EmptyStatement, return_false);
          def_has_side_effects(AST_Constant, return_false);
          def_has_side_effects(AST_This, return_false);

          function any(list, compressor) {
              for (var i = list.length; --i >= 0;)
                  if (list[i].has_side_effects(compressor))
                      return true;
              return false;
          }

          def_has_side_effects(AST_Block, function(compressor) {
              return any(this.body, compressor);
          });
          def_has_side_effects(AST_Call, function(compressor) {
              if (!this.is_expr_pure(compressor)
                  && (!this.expression.is_call_pure(compressor)
                      || this.expression.has_side_effects(compressor))) {
                  return true;
              }
              return any(this.args, compressor);
          });
          def_has_side_effects(AST_Switch, function(compressor) {
              return this.expression.has_side_effects(compressor)
                  || any(this.body, compressor);
          });
          def_has_side_effects(AST_Case, function(compressor) {
              return this.expression.has_side_effects(compressor)
                  || any(this.body, compressor);
          });
          def_has_side_effects(AST_Try, function(compressor) {
              return any(this.body, compressor)
                  || this.bcatch && this.bcatch.has_side_effects(compressor)
                  || this.bfinally && this.bfinally.has_side_effects(compressor);
          });
          def_has_side_effects(AST_If, function(compressor) {
              return this.condition.has_side_effects(compressor)
                  || this.body && this.body.has_side_effects(compressor)
                  || this.alternative && this.alternative.has_side_effects(compressor);
          });
          def_has_side_effects(AST_LabeledStatement, function(compressor) {
              return this.body.has_side_effects(compressor);
          });
          def_has_side_effects(AST_SimpleStatement, function(compressor) {
              return this.body.has_side_effects(compressor);
          });
          def_has_side_effects(AST_Lambda, return_false);
          def_has_side_effects(AST_Class, return_false);
          def_has_side_effects(AST_DefClass, return_true);
          def_has_side_effects(AST_Binary, function(compressor) {
              return this.left.has_side_effects(compressor)
                  || this.right.has_side_effects(compressor);
          });
          def_has_side_effects(AST_Assign, return_true);
          def_has_side_effects(AST_Conditional, function(compressor) {
              return this.condition.has_side_effects(compressor)
                  || this.consequent.has_side_effects(compressor)
                  || this.alternative.has_side_effects(compressor);
          });
          def_has_side_effects(AST_Unary, function(compressor) {
              return unary_side_effects.has(this.operator)
                  || this.expression.has_side_effects(compressor);
          });
          def_has_side_effects(AST_SymbolRef, function(compressor) {
              return !this.is_declared(compressor);
          });
          def_has_side_effects(AST_SymbolDeclaration, return_false);
          def_has_side_effects(AST_Object, function(compressor) {
              return any(this.properties, compressor);
          });
          def_has_side_effects(AST_ObjectProperty, function(compressor) {
              if (this.key instanceof AST_ObjectKeyVal &&
                      this.key.has_side_effects(compressor))
                  return true;
              return this.value.has_side_effects(compressor);
          });
          def_has_side_effects(AST_Array, function(compressor) {
              return any(this.elements, compressor);
          });
          def_has_side_effects(AST_Dot, function(compressor) {
              return this.expression.may_throw_on_access(compressor)
                  || this.expression.has_side_effects(compressor);
          });
          def_has_side_effects(AST_Sub, function(compressor) {
              return this.expression.may_throw_on_access(compressor)
                  || this.expression.has_side_effects(compressor)
                  || this.property.has_side_effects(compressor);
          });
          def_has_side_effects(AST_Sequence, function(compressor) {
              return any(this.expressions, compressor);
          });
          def_has_side_effects(AST_Definitions, function(compressor) {
              return any(this.definitions, compressor);
          });
          def_has_side_effects(AST_VarDef, function(compressor) {
              return this.value;
          });
          def_has_side_effects(AST_TemplateSegment, return_false);
          def_has_side_effects(AST_TemplateString, function(compressor) {
              return any(this.segments, compressor);
          });
      })(function(node, func) {
          node.DEFMETHOD("has_side_effects", func);
      });

      // determine if expression may throw
      (function(def_may_throw) {
          def_may_throw(AST_Node, return_true);

          def_may_throw(AST_Class, return_false);
          def_may_throw(AST_Constant, return_false);
          def_may_throw(AST_EmptyStatement, return_false);
          def_may_throw(AST_Lambda, return_false);
          def_may_throw(AST_SymbolDeclaration, return_false);
          def_may_throw(AST_This, return_false);

          function any(list, compressor) {
              for (var i = list.length; --i >= 0;)
                  if (list[i].may_throw(compressor))
                      return true;
              return false;
          }

          def_may_throw(AST_Array, function(compressor) {
              return any(this.elements, compressor);
          });
          def_may_throw(AST_Assign, function(compressor) {
              if (this.right.may_throw(compressor)) return true;
              if (!compressor.has_directive("use strict")
                  && this.operator == "="
                  && this.left instanceof AST_SymbolRef) {
                  return false;
              }
              return this.left.may_throw(compressor);
          });
          def_may_throw(AST_Binary, function(compressor) {
              return this.left.may_throw(compressor)
                  || this.right.may_throw(compressor);
          });
          def_may_throw(AST_Block, function(compressor) {
              return any(this.body, compressor);
          });
          def_may_throw(AST_Call, function(compressor) {
              if (any(this.args, compressor)) return true;
              if (this.is_expr_pure(compressor)) return false;
              if (this.expression.may_throw(compressor)) return true;
              return !(this.expression instanceof AST_Lambda)
                  || any(this.expression.body, compressor);
          });
          def_may_throw(AST_Case, function(compressor) {
              return this.expression.may_throw(compressor)
                  || any(this.body, compressor);
          });
          def_may_throw(AST_Conditional, function(compressor) {
              return this.condition.may_throw(compressor)
                  || this.consequent.may_throw(compressor)
                  || this.alternative.may_throw(compressor);
          });
          def_may_throw(AST_Definitions, function(compressor) {
              return any(this.definitions, compressor);
          });
          def_may_throw(AST_Dot, function(compressor) {
              return this.expression.may_throw_on_access(compressor)
                  || this.expression.may_throw(compressor);
          });
          def_may_throw(AST_If, function(compressor) {
              return this.condition.may_throw(compressor)
                  || this.body && this.body.may_throw(compressor)
                  || this.alternative && this.alternative.may_throw(compressor);
          });
          def_may_throw(AST_LabeledStatement, function(compressor) {
              return this.body.may_throw(compressor);
          });
          def_may_throw(AST_Object, function(compressor) {
              return any(this.properties, compressor);
          });
          def_may_throw(AST_ObjectProperty, function(compressor) {
              return this.value.may_throw(compressor);
          });
          def_may_throw(AST_Return, function(compressor) {
              return this.value && this.value.may_throw(compressor);
          });
          def_may_throw(AST_Sequence, function(compressor) {
              return any(this.expressions, compressor);
          });
          def_may_throw(AST_SimpleStatement, function(compressor) {
              return this.body.may_throw(compressor);
          });
          def_may_throw(AST_Sub, function(compressor) {
              return this.expression.may_throw_on_access(compressor)
                  || this.expression.may_throw(compressor)
                  || this.property.may_throw(compressor);
          });
          def_may_throw(AST_Switch, function(compressor) {
              return this.expression.may_throw(compressor)
                  || any(this.body, compressor);
          });
          def_may_throw(AST_SymbolRef, function(compressor) {
              return !this.is_declared(compressor);
          });
          def_may_throw(AST_Try, function(compressor) {
              return this.bcatch ? this.bcatch.may_throw(compressor) : any(this.body, compressor)
                  || this.bfinally && this.bfinally.may_throw(compressor);
          });
          def_may_throw(AST_Unary, function(compressor) {
              if (this.operator == "typeof" && this.expression instanceof AST_SymbolRef)
                  return false;
              return this.expression.may_throw(compressor);
          });
          def_may_throw(AST_VarDef, function(compressor) {
              if (!this.value) return false;
              return this.value.may_throw(compressor);
          });
      })(function(node, func) {
          node.DEFMETHOD("may_throw", func);
      });

      // determine if expression is constant
      (function(def_is_constant_expression) {
          function all$$1(list) {
              for (var i = list.length; --i >= 0;)
                  if (!list[i].is_constant_expression())
                      return false;
              return true;
          }

          function all_refs_local(scope) {
              var self = this;
              var result = true;
              self.walk(new TreeWalker(function(node) {
                  if (!result) return true;
                  if (node instanceof AST_SymbolRef) {
                      if (self.inlined) {
                          result = false;
                          return true;
                      }
                      var def = node.definition();
                      if (member(def, self.enclosed)
                          && !self.variables.has(def.name)) {
                          if (scope) {
                              var scope_def = scope.find_variable(node);
                              if (def.undeclared ? !scope_def : scope_def === def) {
                                  result = "f";
                                  return true;
                              }
                          }
                          result = false;
                      }
                      return true;
                  }
                  if (node instanceof AST_This && self instanceof AST_Arrow) {
                      result = false;
                      return true;
                  }
              }));
              return result;
          }

          def_is_constant_expression(AST_Node, return_false);
          def_is_constant_expression(AST_Constant, return_true);
          def_is_constant_expression(AST_Class, function(scope) {
              var self = this;
              if (self.extends && !self.extends.is_constant_expression(scope)) {
                  return false;
              }
              return all_refs_local.call(self, scope);
          });
          def_is_constant_expression(AST_Lambda, all_refs_local);
          def_is_constant_expression(AST_Unary, function() {
              return this.expression.is_constant_expression();
          });
          def_is_constant_expression(AST_Binary, function() {
              return this.left.is_constant_expression() && this.right.is_constant_expression();
          });
          def_is_constant_expression(AST_Array, function() {
              return all$$1(this.elements);
          });
          def_is_constant_expression(AST_Object, function() {
              return all$$1(this.properties);
          });
          def_is_constant_expression(AST_ObjectProperty, function() {
              return !(this.key instanceof AST_Node) && this.value.is_constant_expression();
          });
      })(function(node, func) {
          node.DEFMETHOD("is_constant_expression", func);
      });

      // tell me if a statement aborts
      function aborts(thing) {
          return thing && thing.aborts();
      }
      (function(def) {
          def(AST_Statement, return_null);
          def(AST_Jump, return_this);
          function block_aborts() {
              for (var i = 0; i < this.body.length; i++) {
                  if (aborts(this.body[i])) {
                      return this.body[i];
                  }
              }
              return null;
          }
          def(AST_Import, function() { return null; });
          def(AST_BlockStatement, block_aborts);
          def(AST_SwitchBranch, block_aborts);
          def(AST_If, function() {
              return this.alternative && aborts(this.body) && aborts(this.alternative) && this;
          });
      })(function(node, func) {
          node.DEFMETHOD("aborts", func);
      });

      /* -----[ optimizers ]----- */

      var directives = ["use asm", "use strict"];
      def_optimize(AST_Directive, function(self, compressor) {
          if (compressor.option("directives")
              && (!member(self.value, directives) || compressor.has_directive(self.value) !== self)) {
              return make_node(AST_EmptyStatement, self);
          }
          return self;
      });

      def_optimize(AST_Debugger, function(self, compressor) {
          if (compressor.option("drop_debugger"))
              return make_node(AST_EmptyStatement, self);
          return self;
      });

      def_optimize(AST_LabeledStatement, function(self, compressor) {
          if (self.body instanceof AST_Break
              && compressor.loopcontrol_target(self.body) === self.body) {
              return make_node(AST_EmptyStatement, self);
          }
          return self.label.references.length == 0 ? self.body : self;
      });

      def_optimize(AST_Block, function(self, compressor) {
          tighten_body(self.body, compressor);
          return self;
      });

      function can_be_extracted_from_if_block(node) {
          return !(
              node instanceof AST_Const ||
              node instanceof AST_Let ||
              node instanceof AST_Class
          );
      }

      def_optimize(AST_BlockStatement, function(self, compressor) {
          tighten_body(self.body, compressor);
          switch (self.body.length) {
            case 1:
              if (!compressor.has_directive("use strict")
                  && compressor.parent() instanceof AST_If
                  && can_be_extracted_from_if_block(self.body[0])
                  || can_be_evicted_from_block(self.body[0])) {
                  return self.body[0];
              }
              break;
            case 0: return make_node(AST_EmptyStatement, self);
          }
          return self;
      });

      function opt_AST_Lambda(self, compressor) {
          tighten_body(self.body, compressor);
          if (compressor.option("side_effects")
              && self.body.length == 1
              && self.body[0] === compressor.has_directive("use strict")) {
              self.body.length = 0;
          }
          return self;
      }
      def_optimize(AST_Lambda, opt_AST_Lambda);

      AST_Scope.DEFMETHOD("drop_unused", function(compressor) {
          if (!compressor.option("unused")) return;
          if (compressor.has_directive("use asm")) return;
          var self = this;
          if (self.pinned()) return;
          var drop_funcs = !(self instanceof AST_Toplevel) || compressor.toplevel.funcs;
          var drop_vars = !(self instanceof AST_Toplevel) || compressor.toplevel.vars;
          var assign_as_unused = /keep_assign/.test(compressor.option("unused")) ? return_false : function(node) {
              if (node instanceof AST_Assign && (node.write_only || node.operator == "=")) {
                  return node.left;
              }
              if (node instanceof AST_Unary && node.write_only) return node.expression;
          };
          var in_use_ids = new Map();
          var fixed_ids = new Map();
          if (self instanceof AST_Toplevel && compressor.top_retain) {
              self.variables.forEach(function(def) {
                  if (compressor.top_retain(def) && !in_use_ids.has(def.id)) {
                      in_use_ids.set(def.id, def);
                  }
              });
          }
          var var_defs_by_id = new Map();
          var initializations = new Map();
          var destructuring_value = null;
          // pass 1: find out which symbols are directly used in
          // this scope (not in nested scopes).
          var scope = this;
          var tw = new TreeWalker(function(node, descend) {
              if (node instanceof AST_Lambda && node.uses_arguments && !tw.has_directive("use strict")) {
                  node.argnames.forEach(function(argname) {
                      if (!(argname instanceof AST_SymbolDeclaration)) return;
                      var def = argname.definition();
                      if (!in_use_ids.has(def.id)) {
                          in_use_ids.set(def.id, def);
                      }
                  });
              }
              if (node === self) return;
              if (node instanceof AST_Defun || node instanceof AST_DefClass) {
                  var node_def = node.name.definition();
                  var in_export = tw.parent() instanceof AST_Export;
                  if (in_export || !drop_funcs && scope === self) {
                      if (node_def.global && !in_use_ids.has(node_def.id)) {
                          in_use_ids.set(node_def.id, node_def);
                      }
                  }
                  map_add(initializations, node_def.id, node);
                  return true; // don't go in nested scopes
              }
              if (node instanceof AST_SymbolFunarg && scope === self) {
                  map_add(var_defs_by_id, node.definition().id, node);
              }
              if (node instanceof AST_Definitions && scope === self) {
                  var in_export = tw.parent() instanceof AST_Export;
                  node.definitions.forEach(function(def) {
                      if (def.name instanceof AST_SymbolVar) {
                          map_add(var_defs_by_id, def.name.definition().id, def);
                      }
                      if (in_export || !drop_vars) {
                          def.name.walk(new TreeWalker(function(node) {
                              if (node instanceof AST_SymbolDeclaration) {
                                  var def = node.definition();
                                  if ((in_export || def.global) && !in_use_ids.has(def.id)) {
                                      in_use_ids.set(def.id, def);
                                  }
                              }
                          }));
                      }
                      if (def.value) {
                          if (def.name instanceof AST_Destructuring) {
                              var destructuring_cache = destructuring_value;
                              destructuring_value = def.value;
                              def.walk(tw);
                              destructuring_value = destructuring_cache;
                          } else {
                              var node_def = def.name.definition();
                              map_add(initializations, node_def.id, def.value);
                              if (!node_def.chained && def.name.fixed_value() === def.value) {
                                  fixed_ids.set(node_def.id, def);
                              }
                          }
                          if (def.value.has_side_effects(compressor)) {
                              def.value.walk(tw);
                          }
                      }
                  });
                  return true;
              }
              if (node.destructuring && destructuring_value) {
                  map_add(initializations, node.name, destructuring_value);
              }
              return scan_ref_scoped(node, descend);
          });
          self.walk(tw);
          // pass 2: for every used symbol we need to walk its
          // initialization code to figure out if it uses other
          // symbols (that may not be in_use).
          tw = new TreeWalker(scan_ref_scoped);
          in_use_ids.forEach(function (def) {
              var init = initializations.get(def.id);
              if (init) init.forEach(function(init) {
                  init.walk(tw);
              });
          });
          // pass 3: we should drop declarations not in_use
          var tt = new TreeTransformer(
              function before(node, descend, in_list) {
                  var parent = tt.parent();
                  if (drop_vars) {
                      var sym = assign_as_unused(node);
                      if (sym instanceof AST_SymbolRef) {
                          var def = sym.definition();
                          var in_use = in_use_ids.has(def.id);
                          if (node instanceof AST_Assign) {
                              if (!in_use || fixed_ids.has(def.id) && fixed_ids.get(def.id) !== node) {
                                  return maintain_this_binding(parent, node, node.right.transform(tt));
                              }
                          } else if (!in_use) return make_node(AST_Number, node, {
                              value: 0
                          });
                      }
                  }
                  if (scope !== self) return;
                  var def;
                  if (node.name
                      && (node instanceof AST_ClassExpression
                          && !keep_name(compressor.option("keep_classnames"), (def = node.name.definition()).name)
                      || node instanceof AST_Function
                          && !keep_name(compressor.option("keep_fnames"), (def = node.name.definition()).name))) {
                      // any declarations with same name will overshadow
                      // name of this anonymous function and can therefore
                      // never be used anywhere
                      if (!in_use_ids.has(def.id) || def.orig.length > 1) node.name = null;
                  }
                  if (node instanceof AST_Lambda && !(node instanceof AST_Accessor)) {
                      var trim = !compressor.option("keep_fargs");
                      for (var a = node.argnames, i = a.length; --i >= 0;) {
                          var sym = a[i];
                          if (sym instanceof AST_Expansion) {
                              sym = sym.expression;
                          }
                          if (sym instanceof AST_DefaultAssign) {
                              sym = sym.left;
                          }
                          // Do not drop destructuring arguments.
                          // They constitute a type assertion, so dropping
                          // them would stop that TypeError which would happen
                          // if someone called it with an incorrectly formatted
                          // parameter.
                          if (!(sym instanceof AST_Destructuring) && !in_use_ids.has(sym.definition().id)) {
                              sym.__unused = true;
                              if (trim) {
                                  a.pop();
                                  compressor[sym.unreferenced() ? "warn" : "info"]("Dropping unused function argument {name} [{file}:{line},{col}]", template(sym));
                              }
                          } else {
                              trim = false;
                          }
                      }
                  }
                  if ((node instanceof AST_Defun || node instanceof AST_DefClass) && node !== self) {
                      var def = node.name.definition();
                      var keep = in_use_ids.has(def.id) || !drop_funcs && def.global;
                      if (!keep) {
                          compressor[node.name.unreferenced() ? "warn" : "info"]("Dropping unused function {name} [{file}:{line},{col}]", template(node.name));
                          def.eliminated++;
                          return make_node(AST_EmptyStatement, node);
                      }
                  }
                  if (node instanceof AST_Definitions && !(parent instanceof AST_ForIn && parent.init === node)) {
                      var drop_block = !(parent instanceof AST_Toplevel) && !(node instanceof AST_Var);
                      // place uninitialized names at the start
                      var body = [], head = [], tail = [];
                      // for unused names whose initialization has
                      // side effects, we can cascade the init. code
                      // into the next one, or next statement.
                      var side_effects = [];
                      node.definitions.forEach(function(def) {
                          if (def.value) def.value = def.value.transform(tt);
                          var is_destructure = def.name instanceof AST_Destructuring;
                          var sym = is_destructure
                              ? new SymbolDef(null, { name: "<destructure>" }) /* fake SymbolDef */
                              : def.name.definition();
                          if (drop_block && sym.global) return tail.push(def);
                          if (!(drop_vars || drop_block)
                              || is_destructure
                                  && (def.name.names.length
                                      || def.name.is_array
                                      || compressor.option("pure_getters") != true)
                              || in_use_ids.has(sym.id)) {
                              if (def.value && fixed_ids.has(sym.id) && fixed_ids.get(sym.id) !== def) {
                                  def.value = def.value.drop_side_effect_free(compressor);
                              }
                              if (def.name instanceof AST_SymbolVar) {
                                  var var_defs = var_defs_by_id.get(sym.id);
                                  if (var_defs.length > 1 && (!def.value || sym.orig.indexOf(def.name) > sym.eliminated)) {
                                      compressor.warn("Dropping duplicated definition of variable {name} [{file}:{line},{col}]", template(def.name));
                                      if (def.value) {
                                          var ref = make_node(AST_SymbolRef, def.name, def.name);
                                          sym.references.push(ref);
                                          var assign = make_node(AST_Assign, def, {
                                              operator: "=",
                                              left: ref,
                                              right: def.value
                                          });
                                          if (fixed_ids.get(sym.id) === def) {
                                              fixed_ids.set(sym.id, assign);
                                          }
                                          side_effects.push(assign.transform(tt));
                                      }
                                      remove(var_defs, def);
                                      sym.eliminated++;
                                      return;
                                  }
                              }
                              if (def.value) {
                                  if (side_effects.length > 0) {
                                      if (tail.length > 0) {
                                          side_effects.push(def.value);
                                          def.value = make_sequence(def.value, side_effects);
                                      } else {
                                          body.push(make_node(AST_SimpleStatement, node, {
                                              body: make_sequence(node, side_effects)
                                          }));
                                      }
                                      side_effects = [];
                                  }
                                  tail.push(def);
                              } else {
                                  head.push(def);
                              }
                          } else if (sym.orig[0] instanceof AST_SymbolCatch) {
                              var value = def.value && def.value.drop_side_effect_free(compressor);
                              if (value) side_effects.push(value);
                              def.value = null;
                              head.push(def);
                          } else {
                              var value = def.value && def.value.drop_side_effect_free(compressor);
                              if (value) {
                                  if (!is_destructure) compressor.warn("Side effects in initialization of unused variable {name} [{file}:{line},{col}]", template(def.name));
                                  side_effects.push(value);
                              } else {
                                  if (!is_destructure) compressor[def.name.unreferenced() ? "warn" : "info"]("Dropping unused variable {name} [{file}:{line},{col}]", template(def.name));
                              }
                              sym.eliminated++;
                          }
                      });
                      if (head.length > 0 || tail.length > 0) {
                          node.definitions = head.concat(tail);
                          body.push(node);
                      }
                      if (side_effects.length > 0) {
                          body.push(make_node(AST_SimpleStatement, node, {
                              body: make_sequence(node, side_effects)
                          }));
                      }
                      switch (body.length) {
                        case 0:
                          return in_list ? MAP.skip : make_node(AST_EmptyStatement, node);
                        case 1:
                          return body[0];
                        default:
                          return in_list ? MAP.splice(body) : make_node(AST_BlockStatement, node, {
                              body: body
                          });
                      }
                  }
                  // certain combination of unused name + side effect leads to:
                  //    https://github.com/mishoo/UglifyJS2/issues/44
                  //    https://github.com/mishoo/UglifyJS2/issues/1830
                  //    https://github.com/mishoo/UglifyJS2/issues/1838
                  // that's an invalid AST.
                  // We fix it at this stage by moving the `var` outside the `for`.
                  if (node instanceof AST_For) {
                      descend(node, this);
                      var block;
                      if (node.init instanceof AST_BlockStatement) {
                          block = node.init;
                          node.init = block.body.pop();
                          block.body.push(node);
                      }
                      if (node.init instanceof AST_SimpleStatement) {
                          node.init = node.init.body;
                      } else if (is_empty(node.init)) {
                          node.init = null;
                      }
                      return !block ? node : in_list ? MAP.splice(block.body) : block;
                  }
                  if (node instanceof AST_LabeledStatement && node.body instanceof AST_For) {
                      descend(node, this);
                      if (node.body instanceof AST_BlockStatement) {
                          var block = node.body;
                          node.body = block.body.pop();
                          block.body.push(node);
                          return in_list ? MAP.splice(block.body) : block;
                      }
                      return node;
                  }
                  if (node instanceof AST_BlockStatement) {
                      descend(node, this);
                      if (in_list && all(node.body, can_be_evicted_from_block)) {
                          return MAP.splice(node.body);
                      }
                      return node;
                  }
                  if (node instanceof AST_Scope) {
                      var save_scope = scope;
                      scope = node;
                      descend(node, this);
                      scope = save_scope;
                      return node;
                  }

                  function template(sym) {
                      return {
                          name : sym.name,
                          file : sym.start.file,
                          line : sym.start.line,
                          col  : sym.start.col
                      };
                  }
              }
          );
          self.transform(tt);

          function scan_ref_scoped(node, descend) {
              var node_def, sym = assign_as_unused(node);
              if (sym instanceof AST_SymbolRef
                  && !is_ref_of(node.left, AST_SymbolBlockDeclaration)
                  && self.variables.get(sym.name) === (node_def = sym.definition())) {
                  if (node instanceof AST_Assign) {
                      node.right.walk(tw);
                      if (!node_def.chained && node.left.fixed_value() === node.right) {
                          fixed_ids.set(node_def.id, node);
                      }
                  }
                  return true;
              }
              if (node instanceof AST_SymbolRef) {
                  node_def = node.definition();
                  if (!in_use_ids.has(node_def.id)) {
                      in_use_ids.set(node_def.id, node_def);
                      if (node_def = node_def.redefined()) {
                          in_use_ids.set(node_def.id, node_def);
                      }
                  }
                  return true;
              }
              if (node instanceof AST_Scope) {
                  var save_scope = scope;
                  scope = node;
                  descend();
                  scope = save_scope;
                  return true;
              }
          }
      });

      AST_Scope.DEFMETHOD("hoist_declarations", function(compressor) {
          var self = this;
          if (compressor.has_directive("use asm")) return self;
          // Hoisting makes no sense in an arrow func
          if (!Array.isArray(self.body)) return self;

          var hoist_funs = compressor.option("hoist_funs");
          var hoist_vars = compressor.option("hoist_vars");

          if (hoist_funs || hoist_vars) {
              var dirs = [];
              var hoisted = [];
              var vars = new Map(), vars_found = 0, var_decl = 0;
              // let's count var_decl first, we seem to waste a lot of
              // space if we hoist `var` when there's only one.
              self.walk(new TreeWalker(function(node) {
                  if (node instanceof AST_Scope && node !== self)
                      return true;
                  if (node instanceof AST_Var) {
                      ++var_decl;
                      return true;
                  }
              }));
              hoist_vars = hoist_vars && var_decl > 1;
              var tt = new TreeTransformer(
                  function before(node) {
                      if (node !== self) {
                          if (node instanceof AST_Directive) {
                              dirs.push(node);
                              return make_node(AST_EmptyStatement, node);
                          }
                          if (hoist_funs && node instanceof AST_Defun
                              && !(tt.parent() instanceof AST_Export)
                              && tt.parent() === self) {
                              hoisted.push(node);
                              return make_node(AST_EmptyStatement, node);
                          }
                          if (hoist_vars && node instanceof AST_Var) {
                              node.definitions.forEach(function(def) {
                                  if (def.name instanceof AST_Destructuring) return;
                                  vars.set(def.name.name, def);
                                  ++vars_found;
                              });
                              var seq = node.to_assignments(compressor);
                              var p = tt.parent();
                              if (p instanceof AST_ForIn && p.init === node) {
                                  if (seq == null) {
                                      var def = node.definitions[0].name;
                                      return make_node(AST_SymbolRef, def, def);
                                  }
                                  return seq;
                              }
                              if (p instanceof AST_For && p.init === node) {
                                  return seq;
                              }
                              if (!seq) return make_node(AST_EmptyStatement, node);
                              return make_node(AST_SimpleStatement, node, {
                                  body: seq
                              });
                          }
                          if (node instanceof AST_Scope)
                              return node; // to avoid descending in nested scopes
                      }
                  }
              );
              self = self.transform(tt);
              if (vars_found > 0) {
                  // collect only vars which don't show up in self's arguments list
                  var defs = [];
                  vars.forEach(function(def, name) {
                      if (self instanceof AST_Lambda
                          && find_if(function(x) { return x.name == def.name.name; },
                                     self.args_as_names())) {
                          vars.delete(name);
                      } else {
                          def = def.clone();
                          def.value = null;
                          defs.push(def);
                          vars.set(name, def);
                      }
                  });
                  if (defs.length > 0) {
                      // try to merge in assignments
                      for (var i = 0; i < self.body.length;) {
                          if (self.body[i] instanceof AST_SimpleStatement) {
                              var expr = self.body[i].body, sym, assign;
                              if (expr instanceof AST_Assign
                                  && expr.operator == "="
                                  && (sym = expr.left) instanceof AST_Symbol
                                  && vars.has(sym.name)
                              ) {
                                  var def = vars.get(sym.name);
                                  if (def.value) break;
                                  def.value = expr.right;
                                  remove(defs, def);
                                  defs.push(def);
                                  self.body.splice(i, 1);
                                  continue;
                              }
                              if (expr instanceof AST_Sequence
                                  && (assign = expr.expressions[0]) instanceof AST_Assign
                                  && assign.operator == "="
                                  && (sym = assign.left) instanceof AST_Symbol
                                  && vars.has(sym.name)
                              ) {
                                  var def = vars.get(sym.name);
                                  if (def.value) break;
                                  def.value = assign.right;
                                  remove(defs, def);
                                  defs.push(def);
                                  self.body[i].body = make_sequence(expr, expr.expressions.slice(1));
                                  continue;
                              }
                          }
                          if (self.body[i] instanceof AST_EmptyStatement) {
                              self.body.splice(i, 1);
                              continue;
                          }
                          if (self.body[i] instanceof AST_BlockStatement) {
                              var tmp = [ i, 1 ].concat(self.body[i].body);
                              self.body.splice.apply(self.body, tmp);
                              continue;
                          }
                          break;
                      }
                      defs = make_node(AST_Var, self, {
                          definitions: defs
                      });
                      hoisted.push(defs);
                  }
              }
              self.body = dirs.concat(hoisted, self.body);
          }
          return self;
      });

      AST_Scope.DEFMETHOD("var_names", function varNames() {
          var var_names = this._var_names;
          if (!var_names) {
              this._var_names = var_names = new Set(this.parent_scope ? varNames.call(this.parent_scope) : null);
              this.enclosed.forEach(function(def) {
                  var_names.add(def.name);
              });
              this.variables.forEach(function(def, name) {
                  var_names.add(name);
              });
          }
          return var_names;
      });

      AST_Scope.DEFMETHOD("make_var_name", function(prefix) {
          var var_names = this.var_names();
          prefix = prefix.replace(/(?:^[^a-z_$]|[^a-z0-9_$])/ig, "_");
          var name = prefix;
          for (var i = 0; var_names.has(name); i++) name = prefix + "$" + i;
          var_names.add(name);
          return name;
      });

      AST_Scope.DEFMETHOD("hoist_properties", function(compressor) {
          var self = this;
          if (!compressor.option("hoist_props") || compressor.has_directive("use asm")) return self;
          var top_retain = self instanceof AST_Toplevel && compressor.top_retain || return_false;
          var defs_by_id = new Map();
          var tt = new TreeTransformer(function(node, descend) {
              if (node instanceof AST_Definitions && tt.parent() instanceof AST_Export) return node;
              if (node instanceof AST_VarDef) {
                  var sym = node.name, def, value;
                  if (sym.scope === self
                      && (def = sym.definition()).escaped != 1
                      && !def.assignments
                      && !def.direct_access
                      && !def.single_use
                      && !compressor.exposed(def)
                      && !top_retain(def)
                      && (value = sym.fixed_value()) === node.value
                      && value instanceof AST_Object) {
                      descend(node, this);
                      var defs = new Map();
                      var assignments = [];
                      value.properties.forEach(function(prop) {
                          assignments.push(make_node(AST_VarDef, node, {
                              name: make_sym(prop.key),
                              value: prop.value
                          }));
                      });
                      defs_by_id.set(def.id, defs);
                      return MAP.splice(assignments);
                  }
              }
              if (node instanceof AST_PropAccess && node.expression instanceof AST_SymbolRef) {
                  var defs = defs_by_id.get(node.expression.definition().id);
                  if (defs) {
                      var def = defs.get(String(get_value(node.property)));
                      var sym = make_node(AST_SymbolRef, node, {
                          name: def.name,
                          scope: node.expression.scope,
                          thedef: def
                      });
                      sym.reference({});
                      return sym;
                  }
              }

              function make_sym(key) {
                  var new_var = make_node(sym.CTOR, sym, {
                      name: self.make_var_name(sym.name + "_" + key),
                      scope: self
                  });
                  var def = self.def_variable(new_var);
                  defs.set(String(key), def);
                  self.enclosed.push(def);
                  return new_var;
              }
          });
          return self.transform(tt);
      });

      // drop_side_effect_free()
      // remove side-effect-free parts which only affects return value
      (function(def_drop_side_effect_free) {
          // Drop side-effect-free elements from an array of expressions.
          // Returns an array of expressions with side-effects or null
          // if all elements were dropped. Note: original array may be
          // returned if nothing changed.
          function trim(nodes, compressor, first_in_statement$$1) {
              var len = nodes.length;
              if (!len) return null;
              var ret = [], changed = false;
              for (var i = 0; i < len; i++) {
                  var node = nodes[i].drop_side_effect_free(compressor, first_in_statement$$1);
                  changed |= node !== nodes[i];
                  if (node) {
                      ret.push(node);
                      first_in_statement$$1 = false;
                  }
              }
              return changed ? ret.length ? ret : null : nodes;
          }

          def_drop_side_effect_free(AST_Node, return_this);
          def_drop_side_effect_free(AST_Constant, return_null);
          def_drop_side_effect_free(AST_This, return_null);
          def_drop_side_effect_free(AST_Call, function(compressor, first_in_statement$$1) {
              if (!this.is_expr_pure(compressor)) {
                  if (this.expression.is_call_pure(compressor)) {
                      var exprs = this.args.slice();
                      exprs.unshift(this.expression.expression);
                      exprs = trim(exprs, compressor, first_in_statement$$1);
                      return exprs && make_sequence(this, exprs);
                  }
                  if (is_func_expr(this.expression)
                      && (!this.expression.name || !this.expression.name.definition().references.length)) {
                      var node = this.clone();
                      node.expression.process_expression(false, compressor);
                      return node;
                  }
                  return this;
              }
              if (this.pure) {
                  compressor.warn("Dropping __PURE__ call [{file}:{line},{col}]", this.start);
              }
              var args = trim(this.args, compressor, first_in_statement$$1);
              return args && make_sequence(this, args);
          });
          def_drop_side_effect_free(AST_Accessor, return_null);
          def_drop_side_effect_free(AST_Function, return_null);
          def_drop_side_effect_free(AST_Arrow, return_null);
          def_drop_side_effect_free(AST_ClassExpression, return_null);
          def_drop_side_effect_free(AST_Binary, function(compressor, first_in_statement$$1) {
              var right = this.right.drop_side_effect_free(compressor);
              if (!right) return this.left.drop_side_effect_free(compressor, first_in_statement$$1);
              if (lazy_op.has(this.operator)) {
                  if (right === this.right) return this;
                  var node = this.clone();
                  node.right = right;
                  return node;
              } else {
                  var left = this.left.drop_side_effect_free(compressor, first_in_statement$$1);
                  if (!left) return this.right.drop_side_effect_free(compressor, first_in_statement$$1);
                  return make_sequence(this, [ left, right ]);
              }
          });
          def_drop_side_effect_free(AST_Assign, function(compressor) {
              var left = this.left;
              if (left.has_side_effects(compressor)
                  || compressor.has_directive("use strict")
                      && left instanceof AST_PropAccess
                      && left.expression.is_constant()) {
                  return this;
              }
              this.write_only = true;
              while (left instanceof AST_PropAccess) {
                  left = left.expression;
              }
              if (left.is_constant_expression(compressor.find_parent(AST_Scope))) {
                  return this.right.drop_side_effect_free(compressor);
              }
              return this;
          });
          def_drop_side_effect_free(AST_Conditional, function(compressor) {
              var consequent = this.consequent.drop_side_effect_free(compressor);
              var alternative = this.alternative.drop_side_effect_free(compressor);
              if (consequent === this.consequent && alternative === this.alternative) return this;
              if (!consequent) return alternative ? make_node(AST_Binary, this, {
                  operator: "||",
                  left: this.condition,
                  right: alternative
              }) : this.condition.drop_side_effect_free(compressor);
              if (!alternative) return make_node(AST_Binary, this, {
                  operator: "&&",
                  left: this.condition,
                  right: consequent
              });
              var node = this.clone();
              node.consequent = consequent;
              node.alternative = alternative;
              return node;
          });
          def_drop_side_effect_free(AST_Unary, function(compressor, first_in_statement$$1) {
              if (unary_side_effects.has(this.operator)) {
                  this.write_only = !this.expression.has_side_effects(compressor);
                  return this;
              }
              if (this.operator == "typeof" && this.expression instanceof AST_SymbolRef) return null;
              var expression = this.expression.drop_side_effect_free(compressor, first_in_statement$$1);
              if (first_in_statement$$1 && expression && is_iife_call(expression)) {
                  if (expression === this.expression && this.operator == "!") return this;
                  return expression.negate(compressor, first_in_statement$$1);
              }
              return expression;
          });
          def_drop_side_effect_free(AST_SymbolRef, function(compressor) {
              return this.is_declared(compressor) ? null : this;
          });
          def_drop_side_effect_free(AST_Object, function(compressor, first_in_statement$$1) {
              var values = trim(this.properties, compressor, first_in_statement$$1);
              return values && make_sequence(this, values);
          });
          def_drop_side_effect_free(AST_ObjectProperty, function(compressor, first_in_statement$$1) {
              return this.value.drop_side_effect_free(compressor, first_in_statement$$1);
          });
          def_drop_side_effect_free(AST_Array, function(compressor, first_in_statement$$1) {
              var values = trim(this.elements, compressor, first_in_statement$$1);
              return values && make_sequence(this, values);
          });
          def_drop_side_effect_free(AST_Dot, function(compressor, first_in_statement$$1) {
              if (this.expression.may_throw_on_access(compressor)) return this;
              return this.expression.drop_side_effect_free(compressor, first_in_statement$$1);
          });
          def_drop_side_effect_free(AST_Sub, function(compressor, first_in_statement$$1) {
              if (this.expression.may_throw_on_access(compressor)) return this;
              var expression = this.expression.drop_side_effect_free(compressor, first_in_statement$$1);
              if (!expression) return this.property.drop_side_effect_free(compressor, first_in_statement$$1);
              var property = this.property.drop_side_effect_free(compressor);
              if (!property) return expression;
              return make_sequence(this, [ expression, property ]);
          });
          def_drop_side_effect_free(AST_Sequence, function(compressor) {
              var last = this.tail_node();
              var expr = last.drop_side_effect_free(compressor);
              if (expr === last) return this;
              var expressions = this.expressions.slice(0, -1);
              if (expr) expressions.push(expr);
              return make_sequence(this, expressions);
          });
          def_drop_side_effect_free(AST_Expansion, function(compressor, first_in_statement$$1) {
              return this.expression.drop_side_effect_free(compressor, first_in_statement$$1);
          });
          def_drop_side_effect_free(AST_TemplateSegment, return_null);
          def_drop_side_effect_free(AST_TemplateString, function(compressor) {
              var values = trim(this.segments, compressor, first_in_statement);
              return values && make_sequence(this, values);
          });
      })(function(node, func) {
          node.DEFMETHOD("drop_side_effect_free", func);
      });

      var pure_prop_access_globals = [
          "Number",
          "String",
          "Array",
          "Object",
          "Function",
          "Promise",
          "global",
          "window",
          "document",
          "location"
      ];
      def_optimize(AST_SimpleStatement, function(self, compressor) {
          if (self.body instanceof AST_SymbolRef && pure_prop_access_globals.indexOf(self.body.name) !== -1) {
              return make_node(AST_EmptyStatement, self);
          }
          if (compressor.option("side_effects")) {
              var body = self.body;
              var node = body.drop_side_effect_free(compressor, true);
              if (!node) {
                  compressor.warn("Dropping side-effect-free statement [{file}:{line},{col}]", self.start);
                  return make_node(AST_EmptyStatement, self);
              }
              if (node !== body) {
                  return make_node(AST_SimpleStatement, self, { body: node });
              }
          }
          return self;
      });

      def_optimize(AST_While, function(self, compressor) {
          return compressor.option("loops") ? make_node(AST_For, self, self).optimize(compressor) : self;
      });

      function has_break_or_continue(loop, parent) {
          var found = false;
          var tw = new TreeWalker(function(node) {
              if (found || node instanceof AST_Scope) return true;
              if (node instanceof AST_LoopControl && tw.loopcontrol_target(node) === loop) {
                  return found = true;
              }
          });
          if (parent instanceof AST_LabeledStatement) tw.push(parent);
          tw.push(loop);
          loop.body.walk(tw);
          return found;
      }

      def_optimize(AST_Do, function(self, compressor) {
          if (!compressor.option("loops")) return self;
          var cond = self.condition.tail_node().evaluate(compressor);
          if (!(cond instanceof AST_Node)) {
              if (cond) return make_node(AST_For, self, {
                  body: make_node(AST_BlockStatement, self.body, {
                      body: [
                          self.body,
                          make_node(AST_SimpleStatement, self.condition, {
                              body: self.condition
                          })
                      ]
                  })
              }).optimize(compressor);
              if (!has_break_or_continue(self, compressor.parent())) {
                  return make_node(AST_BlockStatement, self.body, {
                      body: [
                          self.body,
                          make_node(AST_SimpleStatement, self.condition, {
                              body: self.condition
                          })
                      ]
                  }).optimize(compressor);
              }
          }
          return self;
      });

      function if_break_in_loop(self, compressor) {
          var first = self.body instanceof AST_BlockStatement ? self.body.body[0] : self.body;
          if (compressor.option("dead_code") && is_break(first)) {
              var body = [];
              if (self.init instanceof AST_Statement) {
                  body.push(self.init);
              } else if (self.init) {
                  body.push(make_node(AST_SimpleStatement, self.init, {
                      body: self.init
                  }));
              }
              if (self.condition) {
                  body.push(make_node(AST_SimpleStatement, self.condition, {
                      body: self.condition
                  }));
              }
              extract_declarations_from_unreachable_code(compressor, self.body, body);
              return make_node(AST_BlockStatement, self, {
                  body: body
              });
          }
          if (first instanceof AST_If) {
              if (is_break(first.body)) {
                  if (self.condition) {
                      self.condition = make_node(AST_Binary, self.condition, {
                          left: self.condition,
                          operator: "&&",
                          right: first.condition.negate(compressor),
                      });
                  } else {
                      self.condition = first.condition.negate(compressor);
                  }
                  drop_it(first.alternative);
              } else if (is_break(first.alternative)) {
                  if (self.condition) {
                      self.condition = make_node(AST_Binary, self.condition, {
                          left: self.condition,
                          operator: "&&",
                          right: first.condition,
                      });
                  } else {
                      self.condition = first.condition;
                  }
                  drop_it(first.body);
              }
          }
          return self;

          function is_break(node) {
              return node instanceof AST_Break
                  && compressor.loopcontrol_target(node) === compressor.self();
          }

          function drop_it(rest) {
              rest = as_statement_array(rest);
              if (self.body instanceof AST_BlockStatement) {
                  self.body = self.body.clone();
                  self.body.body = rest.concat(self.body.body.slice(1));
                  self.body = self.body.transform(compressor);
              } else {
                  self.body = make_node(AST_BlockStatement, self.body, {
                      body: rest
                  }).transform(compressor);
              }
              self = if_break_in_loop(self, compressor);
          }
      }

      def_optimize(AST_For, function(self, compressor) {
          if (!compressor.option("loops")) return self;
          if (compressor.option("side_effects") && self.init) {
              self.init = self.init.drop_side_effect_free(compressor);
          }
          if (self.condition) {
              var cond = self.condition.evaluate(compressor);
              if (!(cond instanceof AST_Node)) {
                  if (cond) self.condition = null;
                  else if (!compressor.option("dead_code")) {
                      var orig = self.condition;
                      self.condition = make_node_from_constant(cond, self.condition);
                      self.condition = best_of_expression(self.condition.transform(compressor), orig);
                  }
              }
              if (compressor.option("dead_code")) {
                  if (cond instanceof AST_Node) cond = self.condition.tail_node().evaluate(compressor);
                  if (!cond) {
                      var body = [];
                      extract_declarations_from_unreachable_code(compressor, self.body, body);
                      if (self.init instanceof AST_Statement) {
                          body.push(self.init);
                      } else if (self.init) {
                          body.push(make_node(AST_SimpleStatement, self.init, {
                              body: self.init
                          }));
                      }
                      body.push(make_node(AST_SimpleStatement, self.condition, {
                          body: self.condition
                      }));
                      return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);
                  }
              }
          }
          return if_break_in_loop(self, compressor);
      });

      def_optimize(AST_If, function(self, compressor) {
          if (is_empty(self.alternative)) self.alternative = null;

          if (!compressor.option("conditionals")) return self;
          // if condition can be statically determined, warn and drop
          // one of the blocks.  note, statically determined implies
          // “has no side effects”; also it doesn't work for cases like
          // `x && true`, though it probably should.
          var cond = self.condition.evaluate(compressor);
          if (!compressor.option("dead_code") && !(cond instanceof AST_Node)) {
              var orig = self.condition;
              self.condition = make_node_from_constant(cond, orig);
              self.condition = best_of_expression(self.condition.transform(compressor), orig);
          }
          if (compressor.option("dead_code")) {
              if (cond instanceof AST_Node) cond = self.condition.tail_node().evaluate(compressor);
              if (!cond) {
                  compressor.warn("Condition always false [{file}:{line},{col}]", self.condition.start);
                  var body = [];
                  extract_declarations_from_unreachable_code(compressor, self.body, body);
                  body.push(make_node(AST_SimpleStatement, self.condition, {
                      body: self.condition
                  }));
                  if (self.alternative) body.push(self.alternative);
                  return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);
              } else if (!(cond instanceof AST_Node)) {
                  compressor.warn("Condition always true [{file}:{line},{col}]", self.condition.start);
                  var body = [];
                  if (self.alternative) {
                      extract_declarations_from_unreachable_code(compressor, self.alternative, body);
                  }
                  body.push(make_node(AST_SimpleStatement, self.condition, {
                      body: self.condition
                  }));
                  body.push(self.body);
                  return make_node(AST_BlockStatement, self, { body: body }).optimize(compressor);
              }
          }
          var negated = self.condition.negate(compressor);
          var self_condition_length = self.condition.print_to_string().length;
          var negated_length = negated.print_to_string().length;
          var negated_is_best = negated_length < self_condition_length;
          if (self.alternative && negated_is_best) {
              negated_is_best = false; // because we already do the switch here.
              // no need to swap values of self_condition_length and negated_length
              // here because they are only used in an equality comparison later on.
              self.condition = negated;
              var tmp = self.body;
              self.body = self.alternative || make_node(AST_EmptyStatement, self);
              self.alternative = tmp;
          }
          if (is_empty(self.body) && is_empty(self.alternative)) {
              return make_node(AST_SimpleStatement, self.condition, {
                  body: self.condition.clone()
              }).optimize(compressor);
          }
          if (self.body instanceof AST_SimpleStatement
              && self.alternative instanceof AST_SimpleStatement) {
              return make_node(AST_SimpleStatement, self, {
                  body: make_node(AST_Conditional, self, {
                      condition   : self.condition,
                      consequent  : self.body.body,
                      alternative : self.alternative.body
                  })
              }).optimize(compressor);
          }
          if (is_empty(self.alternative) && self.body instanceof AST_SimpleStatement) {
              if (self_condition_length === negated_length && !negated_is_best
                  && self.condition instanceof AST_Binary && self.condition.operator == "||") {
                  // although the code length of self.condition and negated are the same,
                  // negated does not require additional surrounding parentheses.
                  // see https://github.com/mishoo/UglifyJS2/issues/979
                  negated_is_best = true;
              }
              if (negated_is_best) return make_node(AST_SimpleStatement, self, {
                  body: make_node(AST_Binary, self, {
                      operator : "||",
                      left     : negated,
                      right    : self.body.body
                  })
              }).optimize(compressor);
              return make_node(AST_SimpleStatement, self, {
                  body: make_node(AST_Binary, self, {
                      operator : "&&",
                      left     : self.condition,
                      right    : self.body.body
                  })
              }).optimize(compressor);
          }
          if (self.body instanceof AST_EmptyStatement
              && self.alternative instanceof AST_SimpleStatement) {
              return make_node(AST_SimpleStatement, self, {
                  body: make_node(AST_Binary, self, {
                      operator : "||",
                      left     : self.condition,
                      right    : self.alternative.body
                  })
              }).optimize(compressor);
          }
          if (self.body instanceof AST_Exit
              && self.alternative instanceof AST_Exit
              && self.body.TYPE == self.alternative.TYPE) {
              return make_node(self.body.CTOR, self, {
                  value: make_node(AST_Conditional, self, {
                      condition   : self.condition,
                      consequent  : self.body.value || make_node(AST_Undefined, self.body),
                      alternative : self.alternative.value || make_node(AST_Undefined, self.alternative)
                  }).transform(compressor)
              }).optimize(compressor);
          }
          if (self.body instanceof AST_If
              && !self.body.alternative
              && !self.alternative) {
              self = make_node(AST_If, self, {
                  condition: make_node(AST_Binary, self.condition, {
                      operator: "&&",
                      left: self.condition,
                      right: self.body.condition
                  }),
                  body: self.body.body,
                  alternative: null
              });
          }
          if (aborts(self.body)) {
              if (self.alternative) {
                  var alt = self.alternative;
                  self.alternative = null;
                  return make_node(AST_BlockStatement, self, {
                      body: [ self, alt ]
                  }).optimize(compressor);
              }
          }
          if (aborts(self.alternative)) {
              var body = self.body;
              self.body = self.alternative;
              self.condition = negated_is_best ? negated : self.condition.negate(compressor);
              self.alternative = null;
              return make_node(AST_BlockStatement, self, {
                  body: [ self, body ]
              }).optimize(compressor);
          }
          return self;
      });

      def_optimize(AST_Switch, function(self, compressor) {
          if (!compressor.option("switches")) return self;
          var branch;
          var value = self.expression.evaluate(compressor);
          if (!(value instanceof AST_Node)) {
              var orig = self.expression;
              self.expression = make_node_from_constant(value, orig);
              self.expression = best_of_expression(self.expression.transform(compressor), orig);
          }
          if (!compressor.option("dead_code")) return self;
          if (value instanceof AST_Node) {
              value = self.expression.tail_node().evaluate(compressor);
          }
          var decl = [];
          var body = [];
          var default_branch;
          var exact_match;
          for (var i = 0, len = self.body.length; i < len && !exact_match; i++) {
              branch = self.body[i];
              if (branch instanceof AST_Default) {
                  if (!default_branch) {
                      default_branch = branch;
                  } else {
                      eliminate_branch(branch, body[body.length - 1]);
                  }
              } else if (!(value instanceof AST_Node)) {
                  var exp = branch.expression.evaluate(compressor);
                  if (!(exp instanceof AST_Node) && exp !== value) {
                      eliminate_branch(branch, body[body.length - 1]);
                      continue;
                  }
                  if (exp instanceof AST_Node) exp = branch.expression.tail_node().evaluate(compressor);
                  if (exp === value) {
                      exact_match = branch;
                      if (default_branch) {
                          var default_index = body.indexOf(default_branch);
                          body.splice(default_index, 1);
                          eliminate_branch(default_branch, body[default_index - 1]);
                          default_branch = null;
                      }
                  }
              }
              if (aborts(branch)) {
                  var prev = body[body.length - 1];
                  if (aborts(prev) && prev.body.length == branch.body.length
                      && make_node(AST_BlockStatement, prev, prev).equivalent_to(make_node(AST_BlockStatement, branch, branch))) {
                      prev.body = [];
                  }
              }
              body.push(branch);
          }
          while (i < len) eliminate_branch(self.body[i++], body[body.length - 1]);
          if (body.length > 0) {
              body[0].body = decl.concat(body[0].body);
          }
          self.body = body;
          while (branch = body[body.length - 1]) {
              var stat = branch.body[branch.body.length - 1];
              if (stat instanceof AST_Break && compressor.loopcontrol_target(stat) === self)
                  branch.body.pop();
              if (branch.body.length || branch instanceof AST_Case
                  && (default_branch || branch.expression.has_side_effects(compressor))) break;
              if (body.pop() === default_branch) default_branch = null;
          }
          if (body.length == 0) {
              return make_node(AST_BlockStatement, self, {
                  body: decl.concat(make_node(AST_SimpleStatement, self.expression, {
                      body: self.expression
                  }))
              }).optimize(compressor);
          }
          if (body.length == 1 && (body[0] === exact_match || body[0] === default_branch)) {
              var has_break = false;
              var tw = new TreeWalker(function(node) {
                  if (has_break
                      || node instanceof AST_Lambda
                      || node instanceof AST_SimpleStatement) return true;
                  if (node instanceof AST_Break && tw.loopcontrol_target(node) === self)
                      has_break = true;
              });
              self.walk(tw);
              if (!has_break) {
                  var statements = body[0].body.slice();
                  var exp = body[0].expression;
                  if (exp) statements.unshift(make_node(AST_SimpleStatement, exp, {
                      body: exp
                  }));
                  statements.unshift(make_node(AST_SimpleStatement, self.expression, {
                      body:self.expression
                  }));
                  return make_node(AST_BlockStatement, self, {
                      body: statements
                  }).optimize(compressor);
              }
          }
          return self;

          function eliminate_branch(branch, prev) {
              if (prev && !aborts(prev)) {
                  prev.body = prev.body.concat(branch.body);
              } else {
                  extract_declarations_from_unreachable_code(compressor, branch, decl);
              }
          }
      });

      def_optimize(AST_Try, function(self, compressor) {
          tighten_body(self.body, compressor);
          if (self.bcatch && self.bfinally && all(self.bfinally.body, is_empty)) self.bfinally = null;
          if (compressor.option("dead_code") && all(self.body, is_empty)) {
              var body = [];
              if (self.bcatch) {
                  extract_declarations_from_unreachable_code(compressor, self.bcatch, body);
                  body.forEach(function(stat) {
                      if (!(stat instanceof AST_Definitions)) return;
                      stat.definitions.forEach(function(var_def) {
                          var def = var_def.name.definition().redefined();
                          if (!def) return;
                          var_def.name = var_def.name.clone();
                          var_def.name.thedef = def;
                      });
                  });
              }
              if (self.bfinally) body = body.concat(self.bfinally.body);
              return make_node(AST_BlockStatement, self, {
                  body: body
              }).optimize(compressor);
          }
          return self;
      });

      AST_Definitions.DEFMETHOD("remove_initializers", function() {
          var decls = [];
          this.definitions.forEach(function(def) {
              if (def.name instanceof AST_SymbolDeclaration) {
                  def.value = null;
                  decls.push(def);
              } else def.name.walk(new TreeWalker(function(node) {
                  if (node instanceof AST_SymbolDeclaration) {
                      decls.push(make_node(AST_VarDef, def, {
                          name: node,
                          value: null
                      }));
                  }
              }));
          });
          this.definitions = decls;
      });

      AST_Definitions.DEFMETHOD("to_assignments", function(compressor) {
          var reduce_vars = compressor.option("reduce_vars");
          var assignments = this.definitions.reduce(function(a, def) {
              if (def.value && !(def.name instanceof AST_Destructuring)) {
                  var name = make_node(AST_SymbolRef, def.name, def.name);
                  a.push(make_node(AST_Assign, def, {
                      operator : "=",
                      left     : name,
                      right    : def.value
                  }));
                  if (reduce_vars) name.definition().fixed = false;
              } else if (def.value) {
                  // Because it's a destructuring, do not turn into an assignment.
                  var varDef = make_node(AST_VarDef, def, {
                      name: def.name,
                      value: def.value
                  });
                  var var_ = make_node(AST_Var, def, {
                      definitions: [ varDef ]
                  });
                  a.push(var_);
              }
              def = def.name.definition();
              def.eliminated++;
              def.replaced--;
              return a;
          }, []);
          if (assignments.length == 0) return null;
          return make_sequence(this, assignments);
      });

      def_optimize(AST_Definitions, function(self, compressor) {
          if (self.definitions.length == 0)
              return make_node(AST_EmptyStatement, self);
          return self;
      });

      def_optimize(AST_Import, function(self, compressor) {
          return self;
      });

      function retain_top_func(fn, compressor) {
          return compressor.top_retain
              && fn instanceof AST_Defun
              && fn._top
              && fn.name
              && compressor.top_retain(fn.name);
      }

      def_optimize(AST_Call, function(self, compressor) {
          var exp = self.expression;
          var fn = exp;
          inline_array_like_spread(self, compressor, self.args);
          var simple_args = all(self.args, function(arg) {
              return !(arg instanceof AST_Expansion);
          });
          if (compressor.option("reduce_vars") && fn instanceof AST_SymbolRef) {
              fn = fn.fixed_value();
              if (retain_top_func(fn, compressor)) fn = exp;
          }
          var is_func = fn instanceof AST_Lambda;
          if (compressor.option("unused")
              && simple_args
              && is_func
              && !fn.uses_arguments
              && !fn.pinned()) {
              var pos = 0, last = 0;
              for (var i = 0, len = self.args.length; i < len; i++) {
                  if (fn.argnames[i] instanceof AST_Expansion) {
                      if (fn.argnames[i].expression.__unused) while (i < len) {
                          var node = self.args[i++].drop_side_effect_free(compressor);
                          if (node) {
                              self.args[pos++] = node;
                          }
                      } else while (i < len) {
                          self.args[pos++] = self.args[i++];
                      }
                      last = pos;
                      break;
                  }
                  var trim = i >= fn.argnames.length;
                  if (trim || fn.argnames[i].__unused) {
                      var node = self.args[i].drop_side_effect_free(compressor);
                      if (node) {
                          self.args[pos++] = node;
                      } else if (!trim) {
                          self.args[pos++] = make_node(AST_Number, self.args[i], {
                              value: 0
                          });
                          continue;
                      }
                  } else {
                      self.args[pos++] = self.args[i];
                  }
                  last = pos;
              }
              self.args.length = last;
          }
          if (compressor.option("unsafe")) {
              if (is_undeclared_ref(exp)) switch (exp.name) {
                case "Array":
                  if (self.args.length != 1) {
                      return make_node(AST_Array, self, {
                          elements: self.args
                      }).optimize(compressor);
                  } else if (self.args[0] instanceof AST_Number && self.args[0].value <= 11) {
                      const elements = [];
                      for (let i = 0; i < self.args[0].value; i++) elements.push(new AST_Hole);
                      return new AST_Array({ elements });
                  }
                  break;
                case "Object":
                  if (self.args.length == 0) {
                      return make_node(AST_Object, self, {
                          properties: []
                      });
                  }
                  break;
                case "String":
                  if (self.args.length == 0) return make_node(AST_String, self, {
                      value: ""
                  });
                  if (self.args.length <= 1) return make_node(AST_Binary, self, {
                      left: self.args[0],
                      operator: "+",
                      right: make_node(AST_String, self, { value: "" })
                  }).optimize(compressor);
                  break;
                case "Number":
                  if (self.args.length == 0) return make_node(AST_Number, self, {
                      value: 0
                  });
                  if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {
                      expression: self.args[0],
                      operator: "+"
                  }).optimize(compressor);
                case "Boolean":
                  if (self.args.length == 0) return make_node(AST_False, self);
                  if (self.args.length == 1) return make_node(AST_UnaryPrefix, self, {
                      expression: make_node(AST_UnaryPrefix, self, {
                          expression: self.args[0],
                          operator: "!"
                      }),
                      operator: "!"
                  }).optimize(compressor);
                  break;
                case "RegExp":
                  var params = [];
                  if (all(self.args, function(arg) {
                      var value = arg.evaluate(compressor);
                      params.unshift(value);
                      return arg !== value;
                  })) {
                      try {
                          return best_of(compressor, self, make_node(AST_RegExp, self, {
                              value: RegExp.apply(RegExp, params),
                          }));
                      } catch (ex) {
                          compressor.warn("Error converting {expr} [{file}:{line},{col}]", {
                              expr: self.print_to_string(),
                              file: self.start.file,
                              line: self.start.line,
                              col: self.start.col
                          });
                      }
                  }
                  break;
              } else if (exp instanceof AST_Dot) switch(exp.property) {
                case "toString":
                  if (self.args.length == 0 && !exp.expression.may_throw_on_access(compressor)) {
                      return make_node(AST_Binary, self, {
                          left: make_node(AST_String, self, { value: "" }),
                          operator: "+",
                          right: exp.expression
                      }).optimize(compressor);
                  }
                  break;
                case "join":
                  if (exp.expression instanceof AST_Array) EXIT: {
                      var separator;
                      if (self.args.length > 0) {
                          separator = self.args[0].evaluate(compressor);
                          if (separator === self.args[0]) break EXIT; // not a constant
                      }
                      var elements = [];
                      var consts = [];
                      for (var i = 0, len = exp.expression.elements.length; i < len; i++) {
                          var el = exp.expression.elements[i];
                          if (el instanceof AST_Expansion) break EXIT;
                          var value = el.evaluate(compressor);
                          if (value !== el) {
                              consts.push(value);
                          } else {
                              if (consts.length > 0) {
                                  elements.push(make_node(AST_String, self, {
                                      value: consts.join(separator)
                                  }));
                                  consts.length = 0;
                              }
                              elements.push(el);
                          }
                      }
                      if (consts.length > 0) {
                          elements.push(make_node(AST_String, self, {
                              value: consts.join(separator)
                          }));
                      }
                      if (elements.length == 0) return make_node(AST_String, self, { value: "" });
                      if (elements.length == 1) {
                          if (elements[0].is_string(compressor)) {
                              return elements[0];
                          }
                          return make_node(AST_Binary, elements[0], {
                              operator : "+",
                              left     : make_node(AST_String, self, { value: "" }),
                              right    : elements[0]
                          });
                      }
                      if (separator == "") {
                          var first;
                          if (elements[0].is_string(compressor)
                              || elements[1].is_string(compressor)) {
                              first = elements.shift();
                          } else {
                              first = make_node(AST_String, self, { value: "" });
                          }
                          return elements.reduce(function(prev, el) {
                              return make_node(AST_Binary, el, {
                                  operator : "+",
                                  left     : prev,
                                  right    : el
                              });
                          }, first).optimize(compressor);
                      }
                      // need this awkward cloning to not affect original element
                      // best_of will decide which one to get through.
                      var node = self.clone();
                      node.expression = node.expression.clone();
                      node.expression.expression = node.expression.expression.clone();
                      node.expression.expression.elements = elements;
                      return best_of(compressor, self, node);
                  }
                  break;
                case "charAt":
                  if (exp.expression.is_string(compressor)) {
                      var arg = self.args[0];
                      var index = arg ? arg.evaluate(compressor) : 0;
                      if (index !== arg) {
                          return make_node(AST_Sub, exp, {
                              expression: exp.expression,
                              property: make_node_from_constant(index | 0, arg || exp)
                          }).optimize(compressor);
                      }
                  }
                  break;
                case "apply":
                  if (self.args.length == 2 && self.args[1] instanceof AST_Array) {
                      var args = self.args[1].elements.slice();
                      args.unshift(self.args[0]);
                      return make_node(AST_Call, self, {
                          expression: make_node(AST_Dot, exp, {
                              expression: exp.expression,
                              property: "call"
                          }),
                          args: args
                      }).optimize(compressor);
                  }
                  break;
                case "call":
                  var func = exp.expression;
                  if (func instanceof AST_SymbolRef) {
                      func = func.fixed_value();
                  }
                  if (func instanceof AST_Lambda && !func.contains_this()) {
                      return (self.args.length ? make_sequence(this, [
                          self.args[0],
                          make_node(AST_Call, self, {
                              expression: exp.expression,
                              args: self.args.slice(1)
                          })
                      ]) : make_node(AST_Call, self, {
                          expression: exp.expression,
                          args: []
                      })).optimize(compressor);
                  }
                  break;
              }
          }
          if (compressor.option("unsafe_Function")
              && is_undeclared_ref(exp)
              && exp.name == "Function") {
              // new Function() => function(){}
              if (self.args.length == 0) return make_node(AST_Function, self, {
                  argnames: [],
                  body: []
              }).optimize(compressor);
              if (all(self.args, function(x) {
                  return x instanceof AST_String;
              })) {
                  // quite a corner-case, but we can handle it:
                  //   https://github.com/mishoo/UglifyJS2/issues/203
                  // if the code argument is a constant, then we can minify it.
                  try {
                      var code = "n(function(" + self.args.slice(0, -1).map(function(arg) {
                          return arg.value;
                      }).join(",") + "){" + self.args[self.args.length - 1].value + "})";
                      var ast = parse(code);
                      var mangle = { ie8: compressor.option("ie8") };
                      ast.figure_out_scope(mangle);
                      var comp = new Compressor(compressor.options);
                      ast = ast.transform(comp);
                      ast.figure_out_scope(mangle);
                      base54.reset();
                      ast.compute_char_frequency(mangle);
                      ast.mangle_names(mangle);
                      var fun;
                      ast.walk(new TreeWalker(function(node) {
                          if (fun) return true;
                          if (is_func_expr(node)) {
                              fun = node;
                              return true;
                          }
                      }));
                      if (fun.body instanceof AST_Node) {
                          fun.body = [
                              make_node(AST_Return, fun.body, {
                                  value: fun.body
                              })
                          ];
                      }
                      var code = OutputStream();
                      AST_BlockStatement.prototype._codegen.call(fun, fun, code);
                      self.args = [
                          make_node(AST_String, self, {
                              value: fun.argnames.map(function(arg) {
                                  return arg.print_to_string();
                              }).join(",")
                          }),
                          make_node(AST_String, self.args[self.args.length - 1], {
                              value: code.get().replace(/^{|}$/g, "")
                          })
                      ];
                      return self;
                  } catch (ex) {
                      if (ex instanceof JS_Parse_Error) {
                          compressor.warn("Error parsing code passed to new Function [{file}:{line},{col}]", self.args[self.args.length - 1].start);
                          compressor.warn(ex.toString());
                      } else {
                          throw ex;
                      }
                  }
              }
          }
          var stat = is_func && fn.body;
          if (stat instanceof AST_Node) {
              stat = make_node(AST_Return, stat, {
                  value: stat
              });
          } else if (stat) {
              stat = stat[0];
          }
          var is_regular_func = is_func && !fn.is_generator && !fn.async;
          var can_inline = compressor.option("inline") && !self.is_expr_pure(compressor);
          if (can_inline && stat instanceof AST_Return && is_regular_func) {
              var value = stat.value;
              if (!value || value.is_constant_expression()) {
                  if (value) {
                      value = value.clone(true);
                  } else {
                      value = make_node(AST_Undefined, self);
                  }
                  var args = self.args.concat(value);
                  return make_sequence(self, args).optimize(compressor);
              }
          }
          if (is_regular_func) {
              var def, value, scope, in_loop, level = -1;
              if (can_inline
                  && simple_args
                  && !fn.uses_arguments
                  && !fn.pinned()
                  && !(compressor.parent() instanceof AST_Class)
                  && !(fn.name && fn instanceof AST_Function)
                  && (!(compressor.find_parent(AST_Lambda) instanceof AST_Arrow)
                      || fn.argnames.length == 0
                          && (fn.body instanceof AST_Node || fn.body.length == 1))
                  && (value = can_flatten_body(stat))
                  && (exp === fn
                      || compressor.option("unused")
                          && (def = exp.definition()).references.length == 1
                          && !recursive_ref(compressor, def)
                          && fn.is_constant_expression(exp.scope))
                  && !self.pure
                  && !fn.contains_this()
                  && can_inject_symbols()
                  && !(scope instanceof AST_Class)) {
                  fn._squeezed = true;
                  return make_sequence(self, flatten_fn()).optimize(compressor);
              }
              if (compressor.option("side_effects") && !(fn.body instanceof AST_Node) && all(fn.body, is_empty)) {
                  var args = self.args.concat(make_node(AST_Undefined, self));
                  return make_sequence(self, args).optimize(compressor);
              }
          }
          if (compressor.option("negate_iife")
              && compressor.parent() instanceof AST_SimpleStatement
              && is_iife_call(self)) {
              return self.negate(compressor, true);
          }
          var ev = self.evaluate(compressor);
          if (ev !== self) {
              ev = make_node_from_constant(ev, self).optimize(compressor);
              return best_of(compressor, ev, self);
          }
          return self;

          function return_value(stat) {
              if (!stat) return make_node(AST_Undefined, self);
              if (stat instanceof AST_Return) {
                  if (!stat.value) return make_node(AST_Undefined, self);
                  return stat.value.clone(true);
              }
              if (stat instanceof AST_SimpleStatement) {
                  return make_node(AST_UnaryPrefix, stat, {
                      operator: "void",
                      expression: stat.body.clone(true)
                  });
              }
          }

          function can_flatten_body(stat) {
              var body = fn.body instanceof AST_Node ? [ fn.body ] : fn.body;
              var len = body.length;
              if (compressor.option("inline") < 3) {
                  return len == 1 && return_value(stat);
              }
              stat = null;
              for (var i = 0; i < len; i++) {
                  var line = body[i];
                  if (line instanceof AST_Var) {
                      if (stat && !all(line.definitions, function(var_def) {
                          return !var_def.value;
                      })) {
                          return false;
                      }
                  } else if (stat) {
                      return false;
                  } else {
                      stat = line;
                  }
              }
              return return_value(stat);
          }

          function can_inject_args(block_scoped, safe_to_inject) {
              for (var i = 0, len = fn.argnames.length; i < len; i++) {
                  var arg = fn.argnames[i];
                  if (arg instanceof AST_DefaultAssign) {
                      if (arg.left.__unused) continue;
                      return false;
                  }
                  if (arg instanceof AST_Destructuring) return false;
                  if (arg instanceof AST_Expansion) {
                      if (arg.expression.__unused) continue;
                      return false;
                  }
                  if (arg.__unused) continue;
                  if (!safe_to_inject
                      || block_scoped.has(arg.name)
                      || identifier_atom.has(arg.name)
                      || scope.var_names().has(arg.name)) {
                      return false;
                  }
                  if (in_loop) in_loop.push(arg.definition());
              }
              return true;
          }

          function can_inject_vars(block_scoped, safe_to_inject) {
              var len = fn.body.length;
              for (var i = 0; i < len; i++) {
                  var stat = fn.body[i];
                  if (!(stat instanceof AST_Var)) continue;
                  if (!safe_to_inject) return false;
                  for (var j = stat.definitions.length; --j >= 0;) {
                      var name = stat.definitions[j].name;
                      if (name instanceof AST_Destructuring
                          || block_scoped.has(name.name)
                          || identifier_atom.has(name.name)
                          || scope.var_names().has(name.name)) {
                          return false;
                      }
                      if (in_loop) in_loop.push(name.definition());
                  }
              }
              return true;
          }

          function can_inject_symbols() {
              var block_scoped = new Set();
              do {
                  scope = compressor.parent(++level);
                  if (scope.is_block_scope() && !(compressor.parent(level - 1) instanceof AST_Scope)) {
                      if (scope.block_scope) {
                          // TODO this is sometimes undefined during compression.
                          // But it should always have a value!
                          scope.block_scope.variables.forEach(function (variable) {
                              block_scoped.add(variable.name);
                          });
                      }
                  }
                  if (scope instanceof AST_Catch) {
                      if (scope.argname) {
                          block_scoped.add(scope.argname.name);
                      }
                  } else if (scope instanceof AST_IterationStatement) {
                      in_loop = [];
                  } else if (scope instanceof AST_SymbolRef) {
                      if (scope.fixed_value() instanceof AST_Scope) return false;
                  }
              } while (!(scope instanceof AST_Scope) || scope instanceof AST_Arrow);
              var safe_to_inject = !(scope instanceof AST_Toplevel) || compressor.toplevel.vars;
              var inline = compressor.option("inline");
              if (!can_inject_vars(block_scoped, inline >= 3 && safe_to_inject)) return false;
              if (!can_inject_args(block_scoped, inline >= 2 && safe_to_inject)) return false;
              return !in_loop || in_loop.length == 0 || !is_reachable(fn, in_loop);
          }

          function append_var(decls, expressions, name, value) {
              var def = name.definition();
              scope.variables.set(name.name, def);
              scope.enclosed.push(def);
              if (!scope.var_names().has(name.name)) {
                  scope.var_names().add(name.name);
                  decls.push(make_node(AST_VarDef, name, {
                      name: name,
                      value: null
                  }));
              }
              var sym = make_node(AST_SymbolRef, name, name);
              def.references.push(sym);
              if (value) expressions.push(make_node(AST_Assign, self, {
                  operator: "=",
                  left: sym,
                  right: value.clone()
              }));
          }

          function flatten_args(decls, expressions) {
              var len = fn.argnames.length;
              for (var i = self.args.length; --i >= len;) {
                  expressions.push(self.args[i]);
              }
              for (i = len; --i >= 0;) {
                  var name = fn.argnames[i];
                  var value = self.args[i];
                  if (name.__unused || !name.name || scope.var_names().has(name.name)) {
                      if (value) expressions.push(value);
                  } else {
                      var symbol = make_node(AST_SymbolVar, name, name);
                      name.definition().orig.push(symbol);
                      if (!value && in_loop) value = make_node(AST_Undefined, self);
                      append_var(decls, expressions, symbol, value);
                  }
              }
              decls.reverse();
              expressions.reverse();
          }

          function flatten_vars(decls, expressions) {
              var pos = expressions.length;
              for (var i = 0, lines = fn.body.length; i < lines; i++) {
                  var stat = fn.body[i];
                  if (!(stat instanceof AST_Var)) continue;
                  for (var j = 0, defs = stat.definitions.length; j < defs; j++) {
                      var var_def = stat.definitions[j];
                      var name = var_def.name;
                      append_var(decls, expressions, name, var_def.value);
                      if (in_loop && all(fn.argnames, function(argname) {
                          return argname.name != name.name;
                      })) {
                          var def = fn.variables.get(name.name);
                          var sym = make_node(AST_SymbolRef, name, name);
                          def.references.push(sym);
                          expressions.splice(pos++, 0, make_node(AST_Assign, var_def, {
                              operator: "=",
                              left: sym,
                              right: make_node(AST_Undefined, name)
                          }));
                      }
                  }
              }
          }

          function flatten_fn() {
              var decls = [];
              var expressions = [];
              flatten_args(decls, expressions);
              flatten_vars(decls, expressions);
              expressions.push(value);
              if (decls.length) {
                  i = scope.body.indexOf(compressor.parent(level - 1)) + 1;
                  scope.body.splice(i, 0, make_node(AST_Var, fn, {
                      definitions: decls
                  }));
              }
              return expressions;
          }
      });

      def_optimize(AST_New, function(self, compressor) {
          if (
              compressor.option("unsafe") &&
              is_undeclared_ref(self.expression) &&
              ["Object", "RegExp", "Function", "Error", "Array"].includes(self.expression.name)
          ) return make_node(AST_Call, self, self).transform(compressor);
          return self;
      });

      def_optimize(AST_Sequence, function(self, compressor) {
          if (!compressor.option("side_effects")) return self;
          var expressions = [];
          filter_for_side_effects();
          var end = expressions.length - 1;
          trim_right_for_undefined();
          if (end == 0) {
              self = maintain_this_binding(compressor.parent(), compressor.self(), expressions[0]);
              if (!(self instanceof AST_Sequence)) self = self.optimize(compressor);
              return self;
          }
          self.expressions = expressions;
          return self;

          function filter_for_side_effects() {
              var first = first_in_statement(compressor);
              var last = self.expressions.length - 1;
              self.expressions.forEach(function(expr, index) {
                  if (index < last) expr = expr.drop_side_effect_free(compressor, first);
                  if (expr) {
                      merge_sequence(expressions, expr);
                      first = false;
                  }
              });
          }

          function trim_right_for_undefined() {
              while (end > 0 && is_undefined(expressions[end], compressor)) end--;
              if (end < expressions.length - 1) {
                  expressions[end] = make_node(AST_UnaryPrefix, self, {
                      operator   : "void",
                      expression : expressions[end]
                  });
                  expressions.length = end + 1;
              }
          }
      });

      AST_Unary.DEFMETHOD("lift_sequences", function(compressor) {
          if (compressor.option("sequences")) {
              if (this.expression instanceof AST_Sequence) {
                  var x = this.expression.expressions.slice();
                  var e = this.clone();
                  e.expression = x.pop();
                  x.push(e);
                  return make_sequence(this, x).optimize(compressor);
              }
          }
          return this;
      });

      def_optimize(AST_UnaryPostfix, function(self, compressor) {
          return self.lift_sequences(compressor);
      });

      def_optimize(AST_UnaryPrefix, function(self, compressor) {
          var e = self.expression;
          if (self.operator == "delete"
              && !(e instanceof AST_SymbolRef
                  || e instanceof AST_PropAccess
                  || is_identifier_atom(e))) {
              if (e instanceof AST_Sequence) {
                  e = e.expressions.slice();
                  e.push(make_node(AST_True, self));
                  return make_sequence(self, e).optimize(compressor);
              }
              return make_sequence(self, [ e, make_node(AST_True, self) ]).optimize(compressor);
          }
          var seq = self.lift_sequences(compressor);
          if (seq !== self) {
              return seq;
          }
          if (compressor.option("side_effects") && self.operator == "void") {
              e = e.drop_side_effect_free(compressor);
              if (e) {
                  self.expression = e;
                  return self;
              } else {
                  return make_node(AST_Undefined, self).optimize(compressor);
              }
          }
          if (compressor.in_boolean_context()) {
              switch (self.operator) {
                case "!":
                  if (e instanceof AST_UnaryPrefix && e.operator == "!") {
                      // !!foo ==> foo, if we're in boolean context
                      return e.expression;
                  }
                  if (e instanceof AST_Binary) {
                      self = best_of(compressor, self, e.negate(compressor, first_in_statement(compressor)));
                  }
                  break;
                case "typeof":
                  // typeof always returns a non-empty string, thus it's
                  // always true in booleans
                  compressor.warn("Boolean expression always true [{file}:{line},{col}]", self.start);
                  return (e instanceof AST_SymbolRef ? make_node(AST_True, self) : make_sequence(self, [
                      e,
                      make_node(AST_True, self)
                  ])).optimize(compressor);
              }
          }
          if (self.operator == "-" && e instanceof AST_Infinity) {
              e = e.transform(compressor);
          }
          if (e instanceof AST_Binary
              && (self.operator == "+" || self.operator == "-")
              && (e.operator == "*" || e.operator == "/" || e.operator == "%")) {
              return make_node(AST_Binary, self, {
                  operator: e.operator,
                  left: make_node(AST_UnaryPrefix, e.left, {
                      operator: self.operator,
                      expression: e.left
                  }),
                  right: e.right
              });
          }
          // avoids infinite recursion of numerals
          if (self.operator != "-"
              || !(e instanceof AST_Number || e instanceof AST_Infinity)) {
              var ev = self.evaluate(compressor);
              if (ev !== self) {
                  ev = make_node_from_constant(ev, self).optimize(compressor);
                  return best_of(compressor, ev, self);
              }
          }
          return self;
      });

      AST_Binary.DEFMETHOD("lift_sequences", function(compressor) {
          if (compressor.option("sequences")) {
              if (this.left instanceof AST_Sequence) {
                  var x = this.left.expressions.slice();
                  var e = this.clone();
                  e.left = x.pop();
                  x.push(e);
                  return make_sequence(this, x).optimize(compressor);
              }
              if (this.right instanceof AST_Sequence && !this.left.has_side_effects(compressor)) {
                  var assign = this.operator == "=" && this.left instanceof AST_SymbolRef;
                  var x = this.right.expressions;
                  var last = x.length - 1;
                  for (var i = 0; i < last; i++) {
                      if (!assign && x[i].has_side_effects(compressor)) break;
                  }
                  if (i == last) {
                      x = x.slice();
                      var e = this.clone();
                      e.right = x.pop();
                      x.push(e);
                      return make_sequence(this, x).optimize(compressor);
                  } else if (i > 0) {
                      var e = this.clone();
                      e.right = make_sequence(this.right, x.slice(i));
                      x = x.slice(0, i);
                      x.push(e);
                      return make_sequence(this, x).optimize(compressor);
                  }
              }
          }
          return this;
      });

      var commutativeOperators = makePredicate("== === != !== * & | ^");
      function is_object(node) {
          return node instanceof AST_Array
              || node instanceof AST_Lambda
              || node instanceof AST_Object
              || node instanceof AST_Class;
      }

      def_optimize(AST_Binary, function(self, compressor) {
          function reversible() {
              return self.left.is_constant()
                  || self.right.is_constant()
                  || !self.left.has_side_effects(compressor)
                      && !self.right.has_side_effects(compressor);
          }
          function reverse(op) {
              if (reversible()) {
                  if (op) self.operator = op;
                  var tmp = self.left;
                  self.left = self.right;
                  self.right = tmp;
              }
          }
          if (commutativeOperators.has(self.operator)) {
              if (self.right.is_constant()
                  && !self.left.is_constant()) {
                  // if right is a constant, whatever side effects the
                  // left side might have could not influence the
                  // result.  hence, force switch.

                  if (!(self.left instanceof AST_Binary
                        && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {
                      reverse();
                  }
              }
          }
          self = self.lift_sequences(compressor);
          if (compressor.option("comparisons")) switch (self.operator) {
            case "===":
            case "!==":
              var is_strict_comparison = true;
              if ((self.left.is_string(compressor) && self.right.is_string(compressor)) ||
                  (self.left.is_number(compressor) && self.right.is_number(compressor)) ||
                  (self.left.is_boolean() && self.right.is_boolean()) ||
                  self.left.equivalent_to(self.right)) {
                  self.operator = self.operator.substr(0, 2);
              }
              // XXX: intentionally falling down to the next case
            case "==":
            case "!=":
              // void 0 == x => null == x
              if (!is_strict_comparison && is_undefined(self.left, compressor)) {
                  self.left = make_node(AST_Null, self.left);
              } else if (compressor.option("typeofs")
                  // "undefined" == typeof x => undefined === x
                  && self.left instanceof AST_String
                  && self.left.value == "undefined"
                  && self.right instanceof AST_UnaryPrefix
                  && self.right.operator == "typeof") {
                  var expr = self.right.expression;
                  if (expr instanceof AST_SymbolRef ? expr.is_declared(compressor)
                      : !(expr instanceof AST_PropAccess && compressor.option("ie8"))) {
                      self.right = expr;
                      self.left = make_node(AST_Undefined, self.left).optimize(compressor);
                      if (self.operator.length == 2) self.operator += "=";
                  }
              } else if (self.left instanceof AST_SymbolRef
                  // obj !== obj => false
                  && self.right instanceof AST_SymbolRef
                  && self.left.definition() === self.right.definition()
                  && is_object(self.left.fixed_value())) {
                  return make_node(self.operator[0] == "=" ? AST_True : AST_False, self);
              }
              break;
            case "&&":
            case "||":
              var lhs = self.left;
              if (lhs.operator == self.operator) {
                  lhs = lhs.right;
              }
              if (lhs instanceof AST_Binary
                  && lhs.operator == (self.operator == "&&" ? "!==" : "===")
                  && self.right instanceof AST_Binary
                  && lhs.operator == self.right.operator
                  && (is_undefined(lhs.left, compressor) && self.right.left instanceof AST_Null
                      || lhs.left instanceof AST_Null && is_undefined(self.right.left, compressor))
                  && !lhs.right.has_side_effects(compressor)
                  && lhs.right.equivalent_to(self.right.right)) {
                  var combined = make_node(AST_Binary, self, {
                      operator: lhs.operator.slice(0, -1),
                      left: make_node(AST_Null, self),
                      right: lhs.right
                  });
                  if (lhs !== self.left) {
                      combined = make_node(AST_Binary, self, {
                          operator: self.operator,
                          left: self.left.left,
                          right: combined
                      });
                  }
                  return combined;
              }
              break;
          }
          if (self.operator == "+" && compressor.in_boolean_context()) {
              var ll = self.left.evaluate(compressor);
              var rr = self.right.evaluate(compressor);
              if (ll && typeof ll == "string") {
                  compressor.warn("+ in boolean context always true [{file}:{line},{col}]", self.start);
                  return make_sequence(self, [
                      self.right,
                      make_node(AST_True, self)
                  ]).optimize(compressor);
              }
              if (rr && typeof rr == "string") {
                  compressor.warn("+ in boolean context always true [{file}:{line},{col}]", self.start);
                  return make_sequence(self, [
                      self.left,
                      make_node(AST_True, self)
                  ]).optimize(compressor);
              }
          }
          if (compressor.option("comparisons") && self.is_boolean()) {
              if (!(compressor.parent() instanceof AST_Binary)
                  || compressor.parent() instanceof AST_Assign) {
                  var negated = make_node(AST_UnaryPrefix, self, {
                      operator: "!",
                      expression: self.negate(compressor, first_in_statement(compressor))
                  });
                  self = best_of(compressor, self, negated);
              }
              if (compressor.option("unsafe_comps")) {
                  switch (self.operator) {
                    case "<": reverse(">"); break;
                    case "<=": reverse(">="); break;
                  }
              }
          }
          if (self.operator == "+") {
              if (self.right instanceof AST_String
                  && self.right.getValue() == ""
                  && self.left.is_string(compressor)) {
                  return self.left;
              }
              if (self.left instanceof AST_String
                  && self.left.getValue() == ""
                  && self.right.is_string(compressor)) {
                  return self.right;
              }
              if (self.left instanceof AST_Binary
                  && self.left.operator == "+"
                  && self.left.left instanceof AST_String
                  && self.left.left.getValue() == ""
                  && self.right.is_string(compressor)) {
                  self.left = self.left.right;
                  return self.transform(compressor);
              }
          }
          if (compressor.option("evaluate")) {
              switch (self.operator) {
                case "&&":
                  var ll = self.left.truthy ? true : self.left.falsy ? false : self.left.evaluate(compressor);
                  if (!ll) {
                      compressor.warn("Condition left of && always false [{file}:{line},{col}]", self.start);
                      return maintain_this_binding(compressor.parent(), compressor.self(), self.left).optimize(compressor);
                  } else if (!(ll instanceof AST_Node)) {
                      compressor.warn("Condition left of && always true [{file}:{line},{col}]", self.start);
                      return make_sequence(self, [ self.left, self.right ]).optimize(compressor);
                  }
                  var rr = self.right.evaluate(compressor);
                  if (!rr) {
                      if (compressor.in_boolean_context()) {
                          compressor.warn("Boolean && always false [{file}:{line},{col}]", self.start);
                          return make_sequence(self, [
                              self.left,
                              make_node(AST_False, self)
                          ]).optimize(compressor);
                      } else self.falsy = true;
                  } else if (!(rr instanceof AST_Node)) {
                      var parent = compressor.parent();
                      if (parent.operator == "&&" && parent.left === compressor.self() || compressor.in_boolean_context()) {
                          compressor.warn("Dropping side-effect-free && [{file}:{line},{col}]", self.start);
                          return self.left.optimize(compressor);
                      }
                  }
                  // x || false && y ---> x ? y : false
                  if (self.left.operator == "||") {
                      var lr = self.left.right.evaluate(compressor);
                      if (!lr) return make_node(AST_Conditional, self, {
                          condition: self.left.left,
                          consequent: self.right,
                          alternative: self.left.right
                      }).optimize(compressor);
                  }
                  break;
                case "||":
                  var ll = self.left.truthy ? true : self.left.falsy ? false : self.left.evaluate(compressor);
                  if (!ll) {
                      compressor.warn("Condition left of || always false [{file}:{line},{col}]", self.start);
                      return make_sequence(self, [ self.left, self.right ]).optimize(compressor);
                  } else if (!(ll instanceof AST_Node)) {
                      compressor.warn("Condition left of || always true [{file}:{line},{col}]", self.start);
                      return maintain_this_binding(compressor.parent(), compressor.self(), self.left).optimize(compressor);
                  }
                  var rr = self.right.evaluate(compressor);
                  if (!rr) {
                      var parent = compressor.parent();
                      if (parent.operator == "||" && parent.left === compressor.self() || compressor.in_boolean_context()) {
                          compressor.warn("Dropping side-effect-free || [{file}:{line},{col}]", self.start);
                          return self.left.optimize(compressor);
                      }
                  } else if (!(rr instanceof AST_Node)) {
                      if (compressor.in_boolean_context()) {
                          compressor.warn("Boolean || always true [{file}:{line},{col}]", self.start);
                          return make_sequence(self, [
                              self.left,
                              make_node(AST_True, self)
                          ]).optimize(compressor);
                      } else self.truthy = true;
                  }
                  if (self.left.operator == "&&") {
                      var lr = self.left.right.evaluate(compressor);
                      if (lr && !(lr instanceof AST_Node)) return make_node(AST_Conditional, self, {
                          condition: self.left.left,
                          consequent: self.left.right,
                          alternative: self.right
                      }).optimize(compressor);
                  }
                  break;
              }
              var associative = true;
              switch (self.operator) {
                case "+":
                  // "foo" + ("bar" + x) => "foobar" + x
                  if (self.left instanceof AST_Constant
                      && self.right instanceof AST_Binary
                      && self.right.operator == "+"
                      && self.right.left instanceof AST_Constant
                      && self.right.is_string(compressor)) {
                      self = make_node(AST_Binary, self, {
                          operator: "+",
                          left: make_node(AST_String, self.left, {
                              value: "" + self.left.getValue() + self.right.left.getValue(),
                              start: self.left.start,
                              end: self.right.left.end
                          }),
                          right: self.right.right
                      });
                  }
                  // (x + "foo") + "bar" => x + "foobar"
                  if (self.right instanceof AST_Constant
                      && self.left instanceof AST_Binary
                      && self.left.operator == "+"
                      && self.left.right instanceof AST_Constant
                      && self.left.is_string(compressor)) {
                      self = make_node(AST_Binary, self, {
                          operator: "+",
                          left: self.left.left,
                          right: make_node(AST_String, self.right, {
                              value: "" + self.left.right.getValue() + self.right.getValue(),
                              start: self.left.right.start,
                              end: self.right.end
                          })
                      });
                  }
                  // (x + "foo") + ("bar" + y) => (x + "foobar") + y
                  if (self.left instanceof AST_Binary
                      && self.left.operator == "+"
                      && self.left.is_string(compressor)
                      && self.left.right instanceof AST_Constant
                      && self.right instanceof AST_Binary
                      && self.right.operator == "+"
                      && self.right.left instanceof AST_Constant
                      && self.right.is_string(compressor)) {
                      self = make_node(AST_Binary, self, {
                          operator: "+",
                          left: make_node(AST_Binary, self.left, {
                              operator: "+",
                              left: self.left.left,
                              right: make_node(AST_String, self.left.right, {
                                  value: "" + self.left.right.getValue() + self.right.left.getValue(),
                                  start: self.left.right.start,
                                  end: self.right.left.end
                              })
                          }),
                          right: self.right.right
                      });
                  }
                  // a + -b => a - b
                  if (self.right instanceof AST_UnaryPrefix
                      && self.right.operator == "-"
                      && self.left.is_number(compressor)) {
                      self = make_node(AST_Binary, self, {
                          operator: "-",
                          left: self.left,
                          right: self.right.expression
                      });
                      break;
                  }
                  // -a + b => b - a
                  if (self.left instanceof AST_UnaryPrefix
                      && self.left.operator == "-"
                      && reversible()
                      && self.right.is_number(compressor)) {
                      self = make_node(AST_Binary, self, {
                          operator: "-",
                          left: self.right,
                          right: self.left.expression
                      });
                      break;
                  }
                case "*":
                  associative = compressor.option("unsafe_math");
                case "&":
                case "|":
                case "^":
                  // a + +b => +b + a
                  if (self.left.is_number(compressor)
                      && self.right.is_number(compressor)
                      && reversible()
                      && !(self.left instanceof AST_Binary
                          && self.left.operator != self.operator
                          && PRECEDENCE[self.left.operator] >= PRECEDENCE[self.operator])) {
                      var reversed = make_node(AST_Binary, self, {
                          operator: self.operator,
                          left: self.right,
                          right: self.left
                      });
                      if (self.right instanceof AST_Constant
                          && !(self.left instanceof AST_Constant)) {
                          self = best_of(compressor, reversed, self);
                      } else {
                          self = best_of(compressor, self, reversed);
                      }
                  }
                  if (associative && self.is_number(compressor)) {
                      // a + (b + c) => (a + b) + c
                      if (self.right instanceof AST_Binary
                          && self.right.operator == self.operator) {
                          self = make_node(AST_Binary, self, {
                              operator: self.operator,
                              left: make_node(AST_Binary, self.left, {
                                  operator: self.operator,
                                  left: self.left,
                                  right: self.right.left,
                                  start: self.left.start,
                                  end: self.right.left.end
                              }),
                              right: self.right.right
                          });
                      }
                      // (n + 2) + 3 => 5 + n
                      // (2 * n) * 3 => 6 + n
                      if (self.right instanceof AST_Constant
                          && self.left instanceof AST_Binary
                          && self.left.operator == self.operator) {
                          if (self.left.left instanceof AST_Constant) {
                              self = make_node(AST_Binary, self, {
                                  operator: self.operator,
                                  left: make_node(AST_Binary, self.left, {
                                      operator: self.operator,
                                      left: self.left.left,
                                      right: self.right,
                                      start: self.left.left.start,
                                      end: self.right.end
                                  }),
                                  right: self.left.right
                              });
                          } else if (self.left.right instanceof AST_Constant) {
                              self = make_node(AST_Binary, self, {
                                  operator: self.operator,
                                  left: make_node(AST_Binary, self.left, {
                                      operator: self.operator,
                                      left: self.left.right,
                                      right: self.right,
                                      start: self.left.right.start,
                                      end: self.right.end
                                  }),
                                  right: self.left.left
                              });
                          }
                      }
                      // (a | 1) | (2 | d) => (3 | a) | b
                      if (self.left instanceof AST_Binary
                          && self.left.operator == self.operator
                          && self.left.right instanceof AST_Constant
                          && self.right instanceof AST_Binary
                          && self.right.operator == self.operator
                          && self.right.left instanceof AST_Constant) {
                          self = make_node(AST_Binary, self, {
                              operator: self.operator,
                              left: make_node(AST_Binary, self.left, {
                                  operator: self.operator,
                                  left: make_node(AST_Binary, self.left.left, {
                                      operator: self.operator,
                                      left: self.left.right,
                                      right: self.right.left,
                                      start: self.left.right.start,
                                      end: self.right.left.end
                                  }),
                                  right: self.left.left
                              }),
                              right: self.right.right
                          });
                      }
                  }
              }
          }
          // x && (y && z)  ==>  x && y && z
          // x || (y || z)  ==>  x || y || z
          // x + ("y" + z)  ==>  x + "y" + z
          // "x" + (y + "z")==>  "x" + y + "z"
          if (self.right instanceof AST_Binary
              && self.right.operator == self.operator
              && (lazy_op.has(self.operator)
                  || (self.operator == "+"
                      && (self.right.left.is_string(compressor)
                          || (self.left.is_string(compressor)
                              && self.right.right.is_string(compressor)))))
          ) {
              self.left = make_node(AST_Binary, self.left, {
                  operator : self.operator,
                  left     : self.left,
                  right    : self.right.left
              });
              self.right = self.right.right;
              return self.transform(compressor);
          }
          var ev = self.evaluate(compressor);
          if (ev !== self) {
              ev = make_node_from_constant(ev, self).optimize(compressor);
              return best_of(compressor, ev, self);
          }
          return self;
      });

      def_optimize(AST_SymbolExport, function(self, compressor) {
          return self;
      });

      function recursive_ref(compressor, def) {
          var node;
          for (var i = 0; node = compressor.parent(i); i++) {
              if (node instanceof AST_Lambda) {
                  var name = node.name;
                  if (name && name.definition() === def) break;
              }
          }
          return node;
      }

      function within_array_or_object_literal(compressor) {
          var node, level = 0;
          while (node = compressor.parent(level++)) {
              if (node instanceof AST_Statement) return false;
              if (node instanceof AST_Array
                  || node instanceof AST_ObjectKeyVal
                  || node instanceof AST_Object) {
                  return true;
              }
          }
          return false;
      }

      def_optimize(AST_SymbolRef, function(self, compressor) {
          if (!compressor.option("ie8")
              && is_undeclared_ref(self)
              && (!self.scope.uses_with || !compressor.find_parent(AST_With))) {
              switch (self.name) {
                case "undefined":
                  return make_node(AST_Undefined, self).optimize(compressor);
                case "NaN":
                  return make_node(AST_NaN, self).optimize(compressor);
                case "Infinity":
                  return make_node(AST_Infinity, self).optimize(compressor);
              }
          }
          var parent = compressor.parent();
          if (compressor.option("reduce_vars") && is_lhs(self, parent) !== self) {
              var d = self.definition();
              if (compressor.top_retain && d.global && compressor.top_retain(d)) {
                  d.fixed = false;
                  d.should_replace = false;
                  d.single_use = false;
                  return self;
              }
              var fixed = self.fixed_value();
              var single_use = d.single_use
                  && !(parent instanceof AST_Call && parent.is_expr_pure(compressor));
              if (single_use && (fixed instanceof AST_Lambda || fixed instanceof AST_Class)) {
                  if (retain_top_func(fixed, compressor)) {
                      single_use = false;
                  } else if (d.scope !== self.scope
                      && (!compressor.option("reduce_funcs") && fixed instanceof AST_Lambda
                          || d.escaped == 1
                          || fixed.inlined
                          || within_array_or_object_literal(compressor))) {
                      single_use = false;
                  } else if (recursive_ref(compressor, d)) {
                      single_use = false;
                  } else if (d.scope !== self.scope || d.orig[0] instanceof AST_SymbolFunarg) {
                      single_use = fixed.is_constant_expression(self.scope);
                      if (single_use == "f") {
                          var scope = self.scope;
                          do {
                              if (scope instanceof AST_Defun || is_func_expr(scope)) {
                                  scope.inlined = true;
                              }
                          } while (scope = scope.parent_scope);
                      }
                  }
              }
              if (single_use && fixed) {
                  if (fixed instanceof AST_DefClass) {
                      fixed = make_node(AST_ClassExpression, fixed, fixed);
                  }
                  if (fixed instanceof AST_Defun) {
                      fixed._squeezed = true;
                      fixed = make_node(AST_Function, fixed, fixed);
                  }
                  var value;
                  if (d.recursive_refs > 0 && fixed.name instanceof AST_SymbolDefun) {
                      value = fixed.clone(true);
                      var defun_def = value.name.definition();
                      var lambda_def = value.variables.get(value.name.name);
                      var name = lambda_def && lambda_def.orig[0];
                      if (!(name instanceof AST_SymbolLambda)) {
                          name = make_node(AST_SymbolLambda, value.name, value.name);
                          name.scope = value;
                          value.name = name;
                          lambda_def = value.def_function(name);
                      }
                      value.walk(new TreeWalker(function(node) {
                          if (node instanceof AST_SymbolRef && node.definition() === defun_def) {
                              node.thedef = lambda_def;
                              lambda_def.references.push(node);
                          }
                      }));
                  } else {
                      value = fixed.optimize(compressor);
                      if (value === fixed) value = fixed.clone(true);
                  }
                  return value;
              }
              if (fixed && d.should_replace === undefined) {
                  var init;
                  if (fixed instanceof AST_This) {
                      if (!(d.orig[0] instanceof AST_SymbolFunarg)
                          && all(d.references, function(ref) {
                              return d.scope === ref.scope;
                          })) {
                          init = fixed;
                      }
                  } else {
                      var ev = fixed.evaluate(compressor);
                      if (ev !== fixed && (compressor.option("unsafe_regexp") || !(ev instanceof RegExp))) {
                          init = make_node_from_constant(ev, fixed);
                      }
                  }
                  if (init) {
                      var value_length = init.optimize(compressor).print_to_string().length;
                      var fn;
                      if (has_symbol_ref(fixed)) {
                          fn = function() {
                              var result = init.optimize(compressor);
                              return result === init ? result.clone(true) : result;
                          };
                      } else {
                          value_length = Math.min(value_length, fixed.print_to_string().length);
                          fn = function() {
                              var result = best_of_expression(init.optimize(compressor), fixed);
                              return result === init || result === fixed ? result.clone(true) : result;
                          };
                      }
                      var name_length = d.name.length;
                      var overhead = 0;
                      if (compressor.option("unused") && !compressor.exposed(d)) {
                          overhead = (name_length + 2 + value_length) / (d.references.length - d.assignments);
                      }
                      d.should_replace = value_length <= name_length + overhead ? fn : false;
                  } else {
                      d.should_replace = false;
                  }
              }
              if (d.should_replace) {
                  return d.should_replace();
              }
          }
          return self;

          function has_symbol_ref(value) {
              var found;
              value.walk(new TreeWalker(function(node) {
                  if (node instanceof AST_SymbolRef) found = true;
                  if (found) return true;
              }));
              return found;
          }
      });

      function is_atomic(lhs, self) {
          return lhs instanceof AST_SymbolRef || lhs.TYPE === self.TYPE;
      }

      def_optimize(AST_Undefined, function(self, compressor) {
          if (compressor.option("unsafe_undefined")) {
              var undef = find_variable(compressor, "undefined");
              if (undef) {
                  var ref = make_node(AST_SymbolRef, self, {
                      name   : "undefined",
                      scope  : undef.scope,
                      thedef : undef
                  });
                  ref.is_undefined = true;
                  return ref;
              }
          }
          var lhs = is_lhs(compressor.self(), compressor.parent());
          if (lhs && is_atomic(lhs, self)) return self;
          return make_node(AST_UnaryPrefix, self, {
              operator: "void",
              expression: make_node(AST_Number, self, {
                  value: 0
              })
          });
      });

      def_optimize(AST_Infinity, function(self, compressor) {
          var lhs = is_lhs(compressor.self(), compressor.parent());
          if (lhs && is_atomic(lhs, self)) return self;
          if (compressor.option("keep_infinity")
              && !(lhs && !is_atomic(lhs, self))
              && !find_variable(compressor, "Infinity"))
              return self;
          return make_node(AST_Binary, self, {
              operator: "/",
              left: make_node(AST_Number, self, {
                  value: 1
              }),
              right: make_node(AST_Number, self, {
                  value: 0
              })
          });
      });

      def_optimize(AST_NaN, function(self, compressor) {
          var lhs = is_lhs(compressor.self(), compressor.parent());
          if (lhs && !is_atomic(lhs, self)
              || find_variable(compressor, "NaN")) {
              return make_node(AST_Binary, self, {
                  operator: "/",
                  left: make_node(AST_Number, self, {
                      value: 0
                  }),
                  right: make_node(AST_Number, self, {
                      value: 0
                  })
              });
          }
          return self;
      });

      function is_reachable(self, defs) {
          var reachable = false;
          var find_ref = new TreeWalker(function(node) {
              if (reachable) return true;
              if (node instanceof AST_SymbolRef && member(node.definition(), defs)) {
                  return reachable = true;
              }
          });
          var scan_scope = new TreeWalker(function(node) {
              if (reachable) return true;
              if (node instanceof AST_Scope && node !== self) {
                  var parent = scan_scope.parent();
                  if (parent instanceof AST_Call && parent.expression === node) return;
                  node.walk(find_ref);
                  return true;
              }
          });
          self.walk(scan_scope);
          return reachable;
      }

      const ASSIGN_OPS = makePredicate("+ - / * % >> << >>> | ^ &");
      const ASSIGN_OPS_COMMUTATIVE = makePredicate("* | ^ &");
      def_optimize(AST_Assign, function(self, compressor) {
          var def;
          if (compressor.option("dead_code")
              && self.left instanceof AST_SymbolRef
              && (def = self.left.definition()).scope === compressor.find_parent(AST_Lambda)) {
              var level = 0, node, parent = self;
              do {
                  node = parent;
                  parent = compressor.parent(level++);
                  if (parent instanceof AST_Exit) {
                      if (in_try(level, parent)) break;
                      if (is_reachable(def.scope, [ def ])) break;
                      if (self.operator == "=") return self.right;
                      def.fixed = false;
                      return make_node(AST_Binary, self, {
                          operator: self.operator.slice(0, -1),
                          left: self.left,
                          right: self.right
                      }).optimize(compressor);
                  }
              } while (parent instanceof AST_Binary && parent.right === node
                  || parent instanceof AST_Sequence && parent.tail_node() === node);
          }
          self = self.lift_sequences(compressor);
          if (self.operator == "=" && self.left instanceof AST_SymbolRef && self.right instanceof AST_Binary) {
              // x = expr1 OP expr2
              if (self.right.left instanceof AST_SymbolRef
                  && self.right.left.name == self.left.name
                  && ASSIGN_OPS.has(self.right.operator)) {
                  // x = x - 2  --->  x -= 2
                  self.operator = self.right.operator + "=";
                  self.right = self.right.right;
              } else if (self.right.right instanceof AST_SymbolRef
                  && self.right.right.name == self.left.name
                  && ASSIGN_OPS_COMMUTATIVE.has(self.right.operator)
                  && !self.right.left.has_side_effects(compressor)) {
                  // x = 2 & x  --->  x &= 2
                  self.operator = self.right.operator + "=";
                  self.right = self.right.left;
              }
          }
          return self;

          function in_try(level, node) {
              var right = self.right;
              self.right = make_node(AST_Null, right);
              var may_throw = node.may_throw(compressor);
              self.right = right;
              var scope = self.left.definition().scope;
              var parent;
              while ((parent = compressor.parent(level++)) !== scope) {
                  if (parent instanceof AST_Try) {
                      if (parent.bfinally) return true;
                      if (may_throw && parent.bcatch) return true;
                  }
              }
          }
      });

      def_optimize(AST_DefaultAssign, function(self, compressor) {
          if (!compressor.option("evaluate")) {
              return self;
          }
          var evaluateRight = self.right.evaluate(compressor);

          // `[x = undefined] = foo` ---> `[x] = foo`
          if (evaluateRight === undefined) {
              self = self.left;
          } else if (evaluateRight !== self.right) {
              evaluateRight = make_node_from_constant(evaluateRight, self.right);
              self.right = best_of_expression(evaluateRight, self.right);
          }

          return self;
      });

      def_optimize(AST_Conditional, function(self, compressor) {
          if (!compressor.option("conditionals")) return self;
          // This looks like lift_sequences(), should probably be under "sequences"
          if (self.condition instanceof AST_Sequence) {
              var expressions = self.condition.expressions.slice();
              self.condition = expressions.pop();
              expressions.push(self);
              return make_sequence(self, expressions);
          }
          var cond = self.condition.evaluate(compressor);
          if (cond !== self.condition) {
              if (cond) {
                  compressor.warn("Condition always true [{file}:{line},{col}]", self.start);
                  return maintain_this_binding(compressor.parent(), compressor.self(), self.consequent);
              } else {
                  compressor.warn("Condition always false [{file}:{line},{col}]", self.start);
                  return maintain_this_binding(compressor.parent(), compressor.self(), self.alternative);
              }
          }
          var negated = cond.negate(compressor, first_in_statement(compressor));
          if (best_of(compressor, cond, negated) === negated) {
              self = make_node(AST_Conditional, self, {
                  condition: negated,
                  consequent: self.alternative,
                  alternative: self.consequent
              });
          }
          var condition = self.condition;
          var consequent = self.consequent;
          var alternative = self.alternative;
          // x?x:y --> x||y
          if (condition instanceof AST_SymbolRef
              && consequent instanceof AST_SymbolRef
              && condition.definition() === consequent.definition()) {
              return make_node(AST_Binary, self, {
                  operator: "||",
                  left: condition,
                  right: alternative
              });
          }
          // if (foo) exp = something; else exp = something_else;
          //                   |
          //                   v
          // exp = foo ? something : something_else;
          if (consequent instanceof AST_Assign
              && alternative instanceof AST_Assign
              && consequent.operator == alternative.operator
              && consequent.left.equivalent_to(alternative.left)
              && (!self.condition.has_side_effects(compressor)
                  || consequent.operator == "="
                      && !consequent.left.has_side_effects(compressor))) {
              return make_node(AST_Assign, self, {
                  operator: consequent.operator,
                  left: consequent.left,
                  right: make_node(AST_Conditional, self, {
                      condition: self.condition,
                      consequent: consequent.right,
                      alternative: alternative.right
                  })
              });
          }
          // x ? y(a) : y(b) --> y(x ? a : b)
          var arg_index;
          if (consequent instanceof AST_Call
              && alternative.TYPE === consequent.TYPE
              && consequent.args.length > 0
              && consequent.args.length == alternative.args.length
              && consequent.expression.equivalent_to(alternative.expression)
              && !self.condition.has_side_effects(compressor)
              && !consequent.expression.has_side_effects(compressor)
              && typeof (arg_index = single_arg_diff()) == "number") {
              var node = consequent.clone();
              node.args[arg_index] = make_node(AST_Conditional, self, {
                  condition: self.condition,
                  consequent: consequent.args[arg_index],
                  alternative: alternative.args[arg_index]
              });
              return node;
          }
          // x?y?z:a:a --> x&&y?z:a
          if (consequent instanceof AST_Conditional
              && consequent.alternative.equivalent_to(alternative)) {
              return make_node(AST_Conditional, self, {
                  condition: make_node(AST_Binary, self, {
                      left: self.condition,
                      operator: "&&",
                      right: consequent.condition
                  }),
                  consequent: consequent.consequent,
                  alternative: alternative
              });
          }
          // x ? y : y --> x, y
          if (consequent.equivalent_to(alternative)) {
              return make_sequence(self, [
                  self.condition,
                  consequent
              ]).optimize(compressor);
          }
          // x ? y || z : z --> x && y || z
          if (consequent instanceof AST_Binary
              && consequent.operator == "||"
              && consequent.right.equivalent_to(alternative)) {
              return make_node(AST_Binary, self, {
                  operator: "||",
                  left: make_node(AST_Binary, self, {
                      operator: "&&",
                      left: self.condition,
                      right: consequent.left
                  }),
                  right: alternative
              }).optimize(compressor);
          }
          var in_bool = compressor.in_boolean_context();
          if (is_true(self.consequent)) {
              if (is_false(self.alternative)) {
                  // c ? true : false ---> !!c
                  return booleanize(self.condition);
              }
              // c ? true : x ---> !!c || x
              return make_node(AST_Binary, self, {
                  operator: "||",
                  left: booleanize(self.condition),
                  right: self.alternative
              });
          }
          if (is_false(self.consequent)) {
              if (is_true(self.alternative)) {
                  // c ? false : true ---> !c
                  return booleanize(self.condition.negate(compressor));
              }
              // c ? false : x ---> !c && x
              return make_node(AST_Binary, self, {
                  operator: "&&",
                  left: booleanize(self.condition.negate(compressor)),
                  right: self.alternative
              });
          }
          if (is_true(self.alternative)) {
              // c ? x : true ---> !c || x
              return make_node(AST_Binary, self, {
                  operator: "||",
                  left: booleanize(self.condition.negate(compressor)),
                  right: self.consequent
              });
          }
          if (is_false(self.alternative)) {
              // c ? x : false ---> !!c && x
              return make_node(AST_Binary, self, {
                  operator: "&&",
                  left: booleanize(self.condition),
                  right: self.consequent
              });
          }

          return self;

          function booleanize(node) {
              if (node.is_boolean()) return node;
              // !!expression
              return make_node(AST_UnaryPrefix, node, {
                  operator: "!",
                  expression: node.negate(compressor)
              });
          }

          // AST_True or !0
          function is_true(node) {
              return node instanceof AST_True
                  || in_bool
                      && node instanceof AST_Constant
                      && node.getValue()
                  || (node instanceof AST_UnaryPrefix
                      && node.operator == "!"
                      && node.expression instanceof AST_Constant
                      && !node.expression.getValue());
          }
          // AST_False or !1
          function is_false(node) {
              return node instanceof AST_False
                  || in_bool
                      && node instanceof AST_Constant
                      && !node.getValue()
                  || (node instanceof AST_UnaryPrefix
                      && node.operator == "!"
                      && node.expression instanceof AST_Constant
                      && node.expression.getValue());
          }

          function single_arg_diff() {
              var a = consequent.args;
              var b = alternative.args;
              for (var i = 0, len = a.length; i < len; i++) {
                  if (a[i] instanceof AST_Expansion) return;
                  if (!a[i].equivalent_to(b[i])) {
                      if (b[i] instanceof AST_Expansion) return;
                      for (var j = i + 1; j < len; j++) {
                          if (a[j] instanceof AST_Expansion) return;
                          if (!a[j].equivalent_to(b[j])) return;
                      }
                      return i;
                  }
              }
          }
      });

      def_optimize(AST_Boolean, function(self, compressor) {
          if (compressor.in_boolean_context()) return make_node(AST_Number, self, {
              value: +self.value
          });
          var p = compressor.parent();
          if (compressor.option("booleans_as_integers")) {
              if (p instanceof AST_Binary && (p.operator == "===" || p.operator == "!==")) {
                  p.operator = p.operator.replace(/=$/, "");
              }
              return make_node(AST_Number, self, {
                  value: +self.value
              });
          }
          if (compressor.option("booleans")) {
              if (p instanceof AST_Binary && (p.operator == "=="
                                              || p.operator == "!=")) {
                  compressor.warn("Non-strict equality against boolean: {operator} {value} [{file}:{line},{col}]", {
                      operator : p.operator,
                      value    : self.value,
                      file     : p.start.file,
                      line     : p.start.line,
                      col      : p.start.col,
                  });
                  return make_node(AST_Number, self, {
                      value: +self.value
                  });
              }
              return make_node(AST_UnaryPrefix, self, {
                  operator: "!",
                  expression: make_node(AST_Number, self, {
                      value: 1 - self.value
                  })
              });
          }
          return self;
      });

      function safe_to_flatten(value, compressor) {
          if (value instanceof AST_SymbolRef) {
              value = value.fixed_value();
          }
          if (!value) return false;
          return !(value instanceof AST_Lambda || value instanceof AST_Class)
              || compressor.parent() instanceof AST_New
              || !value.contains_this();
      }

      def_optimize(AST_Sub, function(self, compressor) {
          var expr = self.expression;
          var prop = self.property;
          if (compressor.option("properties")) {
              var key = prop.evaluate(compressor);
              if (key !== prop) {
                  if (typeof key == "string") {
                      if (key == "undefined") {
                          key = undefined;
                      } else {
                          var value = parseFloat(key);
                          if (value.toString() == key) {
                              key = value;
                          }
                      }
                  }
                  prop = self.property = best_of_expression(prop, make_node_from_constant(key, prop).transform(compressor));
                  var property = "" + key;
                  if (is_identifier_string(property)
                      && property.length <= prop.print_to_string().length + 1) {
                      return make_node(AST_Dot, self, {
                          expression: expr,
                          property: property,
                          quote: prop.quote,
                      }).optimize(compressor);
                  }
              }
          }
          var fn;
          OPT_ARGUMENTS: if (compressor.option("arguments")
              && expr instanceof AST_SymbolRef
              && expr.name == "arguments"
              && expr.definition().orig.length == 1
              && (fn = expr.scope) instanceof AST_Lambda
              && fn.uses_arguments
              && !(fn instanceof AST_Arrow)
              && prop instanceof AST_Number) {
              var index = prop.getValue();
              var params = new Set();
              var argnames = fn.argnames;
              for (var n = 0; n < argnames.length; n++) {
                  if (!(argnames[n] instanceof AST_SymbolFunarg)) {
                      break OPT_ARGUMENTS; // destructuring parameter - bail
                  }
                  var param = argnames[n].name;
                  if (params.has(param)) {
                      break OPT_ARGUMENTS; // duplicate parameter - bail
                  }
                  params.add(param);
              }
              var argname = fn.argnames[index];
              if (argname && compressor.has_directive("use strict")) {
                  var def = argname.definition();
                  if (!compressor.option("reduce_vars") || def.assignments || def.orig.length > 1) {
                      argname = null;
                  }
              } else if (!argname && !compressor.option("keep_fargs") && index < fn.argnames.length + 5) {
                  while (index >= fn.argnames.length) {
                      argname = make_node(AST_SymbolFunarg, fn, {
                          name: fn.make_var_name("argument_" + fn.argnames.length),
                          scope: fn
                      });
                      fn.argnames.push(argname);
                      fn.enclosed.push(fn.def_variable(argname));
                  }
              }
              if (argname) {
                  var sym = make_node(AST_SymbolRef, self, argname);
                  sym.reference({});
                  delete argname.__unused;
                  return sym;
              }
          }
          if (is_lhs(self, compressor.parent())) return self;
          if (key !== prop) {
              var sub = self.flatten_object(property, compressor);
              if (sub) {
                  expr = self.expression = sub.expression;
                  prop = self.property = sub.property;
              }
          }
          if (compressor.option("properties") && compressor.option("side_effects")
              && prop instanceof AST_Number && expr instanceof AST_Array) {
              var index = prop.getValue();
              var elements = expr.elements;
              var retValue = elements[index];
              FLATTEN: if (safe_to_flatten(retValue, compressor)) {
                  var flatten = true;
                  var values = [];
                  for (var i = elements.length; --i > index;) {
                      var value = elements[i].drop_side_effect_free(compressor);
                      if (value) {
                          values.unshift(value);
                          if (flatten && value.has_side_effects(compressor)) flatten = false;
                      }
                  }
                  if (retValue instanceof AST_Expansion) break FLATTEN;
                  retValue = retValue instanceof AST_Hole ? make_node(AST_Undefined, retValue) : retValue;
                  if (!flatten) values.unshift(retValue);
                  while (--i >= 0) {
                      var value = elements[i];
                      if (value instanceof AST_Expansion) break FLATTEN;
                      value = value.drop_side_effect_free(compressor);
                      if (value) values.unshift(value);
                      else index--;
                  }
                  if (flatten) {
                      values.push(retValue);
                      return make_sequence(self, values).optimize(compressor);
                  } else return make_node(AST_Sub, self, {
                      expression: make_node(AST_Array, expr, {
                          elements: values
                      }),
                      property: make_node(AST_Number, prop, {
                          value: index
                      })
                  });
              }
          }
          var ev = self.evaluate(compressor);
          if (ev !== self) {
              ev = make_node_from_constant(ev, self).optimize(compressor);
              return best_of(compressor, ev, self);
          }
          return self;
      });

      AST_Lambda.DEFMETHOD("contains_this", function() {
          var result;
          var self = this;
          self.walk(new TreeWalker(function(node) {
              if (result) return true;
              if (node instanceof AST_This) return result = true;
              if (node !== self && node instanceof AST_Scope && !(node instanceof AST_Arrow)) return true;
          }));
          return result;
      });

      AST_PropAccess.DEFMETHOD("flatten_object", function(key, compressor) {
          if (!compressor.option("properties")) return;
          var arrows = compressor.option("unsafe_arrows") && compressor.option("ecma") >= 6;
          var expr = this.expression;
          if (expr instanceof AST_Object) {
              var props = expr.properties;
              for (var i = props.length; --i >= 0;) {
                  var prop = props[i];
                  if ("" + (prop instanceof AST_ConciseMethod ? prop.key.name : prop.key) == key) {
                      if (!all(props, function(prop) {
                          return prop instanceof AST_ObjectKeyVal
                              || arrows && prop instanceof AST_ConciseMethod && !prop.is_generator;
                      })) break;
                      if (!safe_to_flatten(prop.value, compressor)) break;
                      return make_node(AST_Sub, this, {
                          expression: make_node(AST_Array, expr, {
                              elements: props.map(function(prop) {
                                  var v = prop.value;
                                  if (v instanceof AST_Accessor) v = make_node(AST_Function, v, v);
                                  var k = prop.key;
                                  if (k instanceof AST_Node && !(k instanceof AST_SymbolMethod)) {
                                      return make_sequence(prop, [ k, v ]);
                                  }
                                  return v;
                              })
                          }),
                          property: make_node(AST_Number, this, {
                              value: i
                          })
                      });
                  }
              }
          }
      });

      def_optimize(AST_Dot, function(self, compressor) {
          if (self.property == "arguments" || self.property == "caller") {
              compressor.warn("Function.prototype.{prop} not supported [{file}:{line},{col}]", {
                  prop: self.property,
                  file: self.start.file,
                  line: self.start.line,
                  col: self.start.col
              });
          }
          if (is_lhs(self, compressor.parent())) return self;
          if (compressor.option("unsafe_proto")
              && self.expression instanceof AST_Dot
              && self.expression.property == "prototype") {
              var exp = self.expression.expression;
              if (is_undeclared_ref(exp)) switch (exp.name) {
                case "Array":
                  self.expression = make_node(AST_Array, self.expression, {
                      elements: []
                  });
                  break;
                case "Function":
                  self.expression = make_node(AST_Function, self.expression, {
                      argnames: [],
                      body: []
                  });
                  break;
                case "Number":
                  self.expression = make_node(AST_Number, self.expression, {
                      value: 0
                  });
                  break;
                case "Object":
                  self.expression = make_node(AST_Object, self.expression, {
                      properties: []
                  });
                  break;
                case "RegExp":
                  self.expression = make_node(AST_RegExp, self.expression, {
                      value: /t/
                  });
                  break;
                case "String":
                  self.expression = make_node(AST_String, self.expression, {
                      value: ""
                  });
                  break;
              }
          }
          var sub = self.flatten_object(self.property, compressor);
          if (sub) return sub.optimize(compressor);
          var ev = self.evaluate(compressor);
          if (ev !== self) {
              ev = make_node_from_constant(ev, self).optimize(compressor);
              return best_of(compressor, ev, self);
          }
          return self;
      });

      function literals_in_boolean_context(self, compressor) {
          if (compressor.in_boolean_context()) {
              return best_of(compressor, self, make_sequence(self, [
                  self,
                  make_node(AST_True, self)
              ]).optimize(compressor));
          }
          return self;
      }

      function inline_array_like_spread(self, compressor, elements) {
          for (var i = 0; i < elements.length; i++) {
              var el = elements[i];
              if (el instanceof AST_Expansion) {
                  var expr = el.expression;
                  if ( expr instanceof AST_Array) {
                      elements.splice.apply(elements, [i, 1].concat(expr.elements));
                      // Step back one, as the element at i is now new.
                      i--;
                  }
                  // In array-like spread, spreading a non-iterable value is TypeError.
                  // We therefore can’t optimize anything else, unlike with object spread.
              }
          }
          return self;
      }

      def_optimize(AST_Array, function(self, compressor) {
          var optimized = literals_in_boolean_context(self, compressor);
          if (optimized !== self) {
              return optimized;
          }
          return inline_array_like_spread(self, compressor, self.elements);
      });

      def_optimize(AST_Object, function(self, compressor) {
          var optimized = literals_in_boolean_context(self, compressor);
          if (optimized !== self) {
              return optimized;
          }
          var props = self.properties;
          for (var i = 0; i < props.length; i++) {
              var prop = props[i];
              if (prop instanceof AST_Expansion) {
                  var expr = prop.expression;
                  if (expr instanceof AST_Object) {
                      props.splice.apply(props, [i, 1].concat(prop.expression.properties));
                      // Step back one, as the property at i is now new.
                      i--;
                  } else if (expr instanceof AST_Constant
                      && !(expr instanceof AST_String)) {
                      // Unlike array-like spread, in object spread, spreading a
                      // non-iterable value silently does nothing; it is thus safe
                      // to remove. AST_String is the only iterable AST_Constant.
                      props.splice(i, 1);
                  }
              }
          }
          return self;
      });

      def_optimize(AST_RegExp, literals_in_boolean_context);

      def_optimize(AST_Return, function(self, compressor) {
          if (self.value && is_undefined(self.value, compressor)) {
              self.value = null;
          }
          return self;
      });

      def_optimize(AST_Arrow, function(self, compressor) {
          if (!(self.body instanceof AST_Node)) {
              self = opt_AST_Lambda(self, compressor);
          }
          if (compressor.option("arrows")
              && self.body.length == 1
              && self.body[0] instanceof AST_Return) {
              var value = self.body[0].value;
              self.body = value ? value : [];
          }
          return self;
      });

      def_optimize(AST_Function, function(self, compressor) {
          self = opt_AST_Lambda(self, compressor);
          if (compressor.option("unsafe_arrows")
              && compressor.option("ecma") >= 6
              && !self.name
              && !self.is_generator
              && !self.uses_arguments
              && !self.pinned()) {
              var has_special_symbol = false;
              self.walk(new TreeWalker(function(node) {
                  if (has_special_symbol) return true;
                  if (node instanceof AST_This) {
                      has_special_symbol = true;
                      return true;
                  }
              }));
              if (!has_special_symbol) return make_node(AST_Arrow, self, self).optimize(compressor);
          }
          return self;
      });

      def_optimize(AST_Class, function(self, compressor) {
          // HACK to avoid compress failure.
          // AST_Class is not really an AST_Scope/AST_Block as it lacks a body.
          return self;
      });

      def_optimize(AST_Yield, function(self, compressor) {
          if (self.expression && !self.is_star && is_undefined(self.expression, compressor)) {
              self.expression = null;
          }
          return self;
      });

      def_optimize(AST_TemplateString, function(self, compressor) {
          if (!compressor.option("evaluate")
          || compressor.parent() instanceof AST_PrefixedTemplateString)
              return self;

          var segments = [];
          for (var i = 0; i < self.segments.length; i++) {
              var segment = self.segments[i];
              if (segment instanceof AST_Node) {
                  var result = segment.evaluate(compressor);
                  // Evaluate to constant value
                  // Constant value shorter than ${segment}
                  if (result !== segment && (result + "").length <= segment.print_to_string().length + "${}".length) {
                      // There should always be a previous and next segment if segment is a node
                      segments[segments.length - 1].value = segments[segments.length - 1].value + result + self.segments[++i].value;
                      continue;
                  }
              }
              segments.push(segment);
          }
          self.segments = segments;

          return segments.length == 1 ? make_node(AST_String, self, segments[0]) : self;
      });

      def_optimize(AST_PrefixedTemplateString, function(self, compressor) {
          return self;
      });

      // ["p"]:1 ---> p:1
      // [42]:1 ---> 42:1
      function lift_key(self, compressor) {
          if (!compressor.option("computed_props")) return self;
          // save a comparison in the typical case
          if (!(self.key instanceof AST_Constant)) return self;
          // whitelist acceptable props as not all AST_Constants are true constants
          if (self.key instanceof AST_String || self.key instanceof AST_Number) {
              if (self.key.value === "__proto__") return self;
              if (self.key.value == "constructor"
                  && compressor.parent() instanceof AST_Class) return self;
              if (self instanceof AST_ObjectKeyVal) {
                  self.key = self.key.value;
              } else {
                  self.key = make_node(AST_SymbolMethod, self.key, {
                      name: self.key.value
                  });
              }
          }
          return self;
      }

      def_optimize(AST_ObjectProperty, lift_key);

      def_optimize(AST_ConciseMethod, function(self, compressor) {
          lift_key(self, compressor);
          // p(){return x;} ---> p:()=>x
          if (compressor.option("arrows")
              && compressor.parent() instanceof AST_Object
              && !self.is_generator
              && !self.value.uses_arguments
              && !self.value.pinned()
              && self.value.body.length == 1
              && self.value.body[0] instanceof AST_Return
              && self.value.body[0].value
              && !self.value.contains_this()) {
              var arrow = make_node(AST_Arrow, self.value, self.value);
              arrow.async = self.async;
              arrow.is_generator = self.is_generator;
              return make_node(AST_ObjectKeyVal, self, {
                  key: self.key instanceof AST_SymbolMethod ? self.key.name : self.key,
                  value: arrow,
                  quote: self.quote,
              });
          }
          return self;
      });

      def_optimize(AST_ObjectKeyVal, function(self, compressor) {
          lift_key(self, compressor);
          // p:function(){} ---> p(){}
          // p:function*(){} ---> *p(){}
          // p:async function(){} ---> async p(){}
          // p:()=>{} ---> p(){}
          // p:async()=>{} ---> async p(){}
          var unsafe_methods = compressor.option("unsafe_methods");
          if (unsafe_methods
              && compressor.option("ecma") >= 6
              && (!(unsafe_methods instanceof RegExp) || unsafe_methods.test(self.key + ""))) {
              var key = self.key;
              var value = self.value;
              var is_arrow_with_block = value instanceof AST_Arrow
                  && Array.isArray(value.body)
                  && !value.contains_this();
              if ((is_arrow_with_block || value instanceof AST_Function) && !value.name) {
                  return make_node(AST_ConciseMethod, self, {
                      async: value.async,
                      is_generator: value.is_generator,
                      key: key instanceof AST_Node ? key : make_node(AST_SymbolMethod, self, {
                          name: key,
                      }),
                      value: make_node(AST_Accessor, value, value),
                      quote: self.quote,
                  });
              }
          }
          return self;
      });

      def_optimize(AST_Destructuring, function(self, compressor) {
          if (compressor.option("pure_getters") == true
              && compressor.option("unused")
              && !self.is_array
              && Array.isArray(self.names)
              && !is_destructuring_export_decl(compressor)) {
              var keep = [];
              for (var i = 0; i < self.names.length; i++) {
                  var elem = self.names[i];
                  if (!(elem instanceof AST_ObjectKeyVal
                      && typeof elem.key == "string"
                      && elem.value instanceof AST_SymbolDeclaration
                      && !should_retain(compressor, elem.value.definition()))) {
                      keep.push(elem);
                  }
              }
              if (keep.length != self.names.length) {
                  self.names = keep;
              }
          }
          return self;

          function is_destructuring_export_decl(compressor) {
              var ancestors = [/^VarDef$/, /^(Const|Let|Var)$/, /^Export$/];
              for (var a = 0, p = 0, len = ancestors.length; a < len; p++) {
                  var parent = compressor.parent(p);
                  if (!parent) return false;
                  if (a === 0 && parent.TYPE == "Destructuring") continue;
                  if (!ancestors[a].test(parent.TYPE)) {
                      return false;
                  }
                  a++;
              }
              return true;
          }

          function should_retain(compressor, def) {
              if (def.references.length) return true;
              if (!def.global) return false;
              if (compressor.toplevel.vars) {
                   if (compressor.top_retain) {
                       return compressor.top_retain(def);
                   }
                   return false;
              }
              return true;
          }
      });
  })();

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  // a small wrapper around fitzgen's source-map library
  function SourceMap(options) {
      options = defaults(options, {
          file : null,
          root : null,
          orig : null,

          orig_line_diff : 0,
          dest_line_diff : 0,
      });
      var generator = new MOZ_SourceMap.SourceMapGenerator({
          file       : options.file,
          sourceRoot : options.root
      });
      var orig_map = options.orig && new MOZ_SourceMap.SourceMapConsumer(options.orig);

      if (orig_map) {
          orig_map.sources.forEach(function(source) {
              var sourceContent = orig_map.sourceContentFor(source, true);
              if (sourceContent) {
                  generator.setSourceContent(source, sourceContent);
              }
          });
      }

      function add(source, gen_line, gen_col, orig_line, orig_col, name) {
          if (orig_map) {
              var info = orig_map.originalPositionFor({
                  line: orig_line,
                  column: orig_col
              });
              if (info.source === null) {
                  return;
              }
              source = info.source;
              orig_line = info.line;
              orig_col = info.column;
              name = info.name || name;
          }
          generator.addMapping({
              generated : { line: gen_line + options.dest_line_diff, column: gen_col },
              original  : { line: orig_line + options.orig_line_diff, column: orig_col },
              source    : source,
              name      : name
          });
      }
      return {
          add        : add,
          get        : function() { return generator; },
          toString   : function() { return JSON.stringify(generator.toJSON()); }
      };
  }

  var domprops = [
      "$&",
      "$'",
      "$*",
      "$+",
      "$1",
      "$2",
      "$3",
      "$4",
      "$5",
      "$6",
      "$7",
      "$8",
      "$9",
      "$_",
      "$`",
      "$input",
      "@@iterator",
      "ABORT_ERR",
      "ACTIVE",
      "ACTIVE_ATTRIBUTES",
      "ACTIVE_TEXTURE",
      "ACTIVE_UNIFORMS",
      "ADDITION",
      "ALIASED_LINE_WIDTH_RANGE",
      "ALIASED_POINT_SIZE_RANGE",
      "ALLOW_KEYBOARD_INPUT",
      "ALLPASS",
      "ALPHA",
      "ALPHA_BITS",
      "ALT_MASK",
      "ALWAYS",
      "ANY_TYPE",
      "ANY_UNORDERED_NODE_TYPE",
      "ARRAY_BUFFER",
      "ARRAY_BUFFER_BINDING",
      "ATTACHED_SHADERS",
      "ATTRIBUTE_NODE",
      "AT_TARGET",
      "AddSearchProvider",
      "AnalyserNode",
      "AnimationEvent",
      "AnonXMLHttpRequest",
      "ApplicationCache",
      "ApplicationCacheErrorEvent",
      "Array",
      "ArrayBuffer",
      "Attr",
      "Audio",
      "AudioBuffer",
      "AudioBufferSourceNode",
      "AudioContext",
      "AudioDestinationNode",
      "AudioListener",
      "AudioNode",
      "AudioParam",
      "AudioProcessingEvent",
      "AudioStreamTrack",
      "AutocompleteErrorEvent",
      "BACK",
      "BAD_BOUNDARYPOINTS_ERR",
      "BANDPASS",
      "BLEND",
      "BLEND_COLOR",
      "BLEND_DST_ALPHA",
      "BLEND_DST_RGB",
      "BLEND_EQUATION",
      "BLEND_EQUATION_ALPHA",
      "BLEND_EQUATION_RGB",
      "BLEND_SRC_ALPHA",
      "BLEND_SRC_RGB",
      "BLUE_BITS",
      "BLUR",
      "BOOL",
      "BOOLEAN_TYPE",
      "BOOL_VEC2",
      "BOOL_VEC3",
      "BOOL_VEC4",
      "BOTH",
      "BROWSER_DEFAULT_WEBGL",
      "BUBBLING_PHASE",
      "BUFFER_SIZE",
      "BUFFER_USAGE",
      "BYTE",
      "BYTES_PER_ELEMENT",
      "BarProp",
      "BaseHref",
      "BatteryManager",
      "BeforeLoadEvent",
      "BeforeUnloadEvent",
      "BiquadFilterNode",
      "Blob",
      "BlobEvent",
      "Boolean",
      "CAPTURING_PHASE",
      "CCW",
      "CDATASection",
      "CDATA_SECTION_NODE",
      "CHANGE",
      "CHARSET_RULE",
      "CHECKING",
      "CLAMP_TO_EDGE",
      "CLICK",
      "CLOSED",
      "CLOSING",
      "COLOR_ATTACHMENT0",
      "COLOR_BUFFER_BIT",
      "COLOR_CLEAR_VALUE",
      "COLOR_WRITEMASK",
      "COMMENT_NODE",
      "COMPILE_STATUS",
      "COMPRESSED_RGBA_S3TC_DXT1_EXT",
      "COMPRESSED_RGBA_S3TC_DXT3_EXT",
      "COMPRESSED_RGBA_S3TC_DXT5_EXT",
      "COMPRESSED_RGB_S3TC_DXT1_EXT",
      "COMPRESSED_TEXTURE_FORMATS",
      "CONNECTING",
      "CONSTANT_ALPHA",
      "CONSTANT_COLOR",
      "CONSTRAINT_ERR",
      "CONTEXT_LOST_WEBGL",
      "CONTROL_MASK",
      "COUNTER_STYLE_RULE",
      "CSS",
      "CSS2Properties",
      "CSSCharsetRule",
      "CSSConditionRule",
      "CSSCounterStyleRule",
      "CSSFontFaceRule",
      "CSSFontFeatureValuesRule",
      "CSSGroupingRule",
      "CSSImportRule",
      "CSSKeyframeRule",
      "CSSKeyframesRule",
      "CSSMediaRule",
      "CSSMozDocumentRule",
      "CSSNameSpaceRule",
      "CSSPageRule",
      "CSSPrimitiveValue",
      "CSSRule",
      "CSSRuleList",
      "CSSStyleDeclaration",
      "CSSStyleRule",
      "CSSStyleSheet",
      "CSSSupportsRule",
      "CSSUnknownRule",
      "CSSValue",
      "CSSValueList",
      "CSSVariablesDeclaration",
      "CSSVariablesRule",
      "CSSViewportRule",
      "CSS_ATTR",
      "CSS_CM",
      "CSS_COUNTER",
      "CSS_CUSTOM",
      "CSS_DEG",
      "CSS_DIMENSION",
      "CSS_EMS",
      "CSS_EXS",
      "CSS_FILTER_BLUR",
      "CSS_FILTER_BRIGHTNESS",
      "CSS_FILTER_CONTRAST",
      "CSS_FILTER_CUSTOM",
      "CSS_FILTER_DROP_SHADOW",
      "CSS_FILTER_GRAYSCALE",
      "CSS_FILTER_HUE_ROTATE",
      "CSS_FILTER_INVERT",
      "CSS_FILTER_OPACITY",
      "CSS_FILTER_REFERENCE",
      "CSS_FILTER_SATURATE",
      "CSS_FILTER_SEPIA",
      "CSS_GRAD",
      "CSS_HZ",
      "CSS_IDENT",
      "CSS_IN",
      "CSS_INHERIT",
      "CSS_KHZ",
      "CSS_MATRIX",
      "CSS_MATRIX3D",
      "CSS_MM",
      "CSS_MS",
      "CSS_NUMBER",
      "CSS_PC",
      "CSS_PERCENTAGE",
      "CSS_PERSPECTIVE",
      "CSS_PRIMITIVE_VALUE",
      "CSS_PT",
      "CSS_PX",
      "CSS_RAD",
      "CSS_RECT",
      "CSS_RGBCOLOR",
      "CSS_ROTATE",
      "CSS_ROTATE3D",
      "CSS_ROTATEX",
      "CSS_ROTATEY",
      "CSS_ROTATEZ",
      "CSS_S",
      "CSS_SCALE",
      "CSS_SCALE3D",
      "CSS_SCALEX",
      "CSS_SCALEY",
      "CSS_SCALEZ",
      "CSS_SKEW",
      "CSS_SKEWX",
      "CSS_SKEWY",
      "CSS_STRING",
      "CSS_TRANSLATE",
      "CSS_TRANSLATE3D",
      "CSS_TRANSLATEX",
      "CSS_TRANSLATEY",
      "CSS_TRANSLATEZ",
      "CSS_UNKNOWN",
      "CSS_URI",
      "CSS_VALUE_LIST",
      "CSS_VH",
      "CSS_VMAX",
      "CSS_VMIN",
      "CSS_VW",
      "CULL_FACE",
      "CULL_FACE_MODE",
      "CURRENT_PROGRAM",
      "CURRENT_VERTEX_ATTRIB",
      "CUSTOM",
      "CW",
      "CanvasGradient",
      "CanvasPattern",
      "CanvasRenderingContext2D",
      "CaretPosition",
      "ChannelMergerNode",
      "ChannelSplitterNode",
      "CharacterData",
      "ClientRect",
      "ClientRectList",
      "Clipboard",
      "ClipboardEvent",
      "CloseEvent",
      "Collator",
      "CommandEvent",
      "Comment",
      "CompositionEvent",
      "Console",
      "Controllers",
      "ConvolverNode",
      "Counter",
      "Crypto",
      "CryptoKey",
      "CustomEvent",
      "DATABASE_ERR",
      "DATA_CLONE_ERR",
      "DATA_ERR",
      "DBLCLICK",
      "DECR",
      "DECR_WRAP",
      "DELETE_STATUS",
      "DEPTH_ATTACHMENT",
      "DEPTH_BITS",
      "DEPTH_BUFFER_BIT",
      "DEPTH_CLEAR_VALUE",
      "DEPTH_COMPONENT",
      "DEPTH_COMPONENT16",
      "DEPTH_FUNC",
      "DEPTH_RANGE",
      "DEPTH_STENCIL",
      "DEPTH_STENCIL_ATTACHMENT",
      "DEPTH_TEST",
      "DEPTH_WRITEMASK",
      "DIRECTION_DOWN",
      "DIRECTION_LEFT",
      "DIRECTION_RIGHT",
      "DIRECTION_UP",
      "DISABLED",
      "DISPATCH_REQUEST_ERR",
      "DITHER",
      "DOCUMENT_FRAGMENT_NODE",
      "DOCUMENT_NODE",
      "DOCUMENT_POSITION_CONTAINED_BY",
      "DOCUMENT_POSITION_CONTAINS",
      "DOCUMENT_POSITION_DISCONNECTED",
      "DOCUMENT_POSITION_FOLLOWING",
      "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
      "DOCUMENT_POSITION_PRECEDING",
      "DOCUMENT_TYPE_NODE",
      "DOMCursor",
      "DOMError",
      "DOMException",
      "DOMImplementation",
      "DOMImplementationLS",
      "DOMMatrix",
      "DOMMatrixReadOnly",
      "DOMParser",
      "DOMPoint",
      "DOMPointReadOnly",
      "DOMQuad",
      "DOMRect",
      "DOMRectList",
      "DOMRectReadOnly",
      "DOMRequest",
      "DOMSTRING_SIZE_ERR",
      "DOMSettableTokenList",
      "DOMStringList",
      "DOMStringMap",
      "DOMTokenList",
      "DOMTransactionEvent",
      "DOM_DELTA_LINE",
      "DOM_DELTA_PAGE",
      "DOM_DELTA_PIXEL",
      "DOM_INPUT_METHOD_DROP",
      "DOM_INPUT_METHOD_HANDWRITING",
      "DOM_INPUT_METHOD_IME",
      "DOM_INPUT_METHOD_KEYBOARD",
      "DOM_INPUT_METHOD_MULTIMODAL",
      "DOM_INPUT_METHOD_OPTION",
      "DOM_INPUT_METHOD_PASTE",
      "DOM_INPUT_METHOD_SCRIPT",
      "DOM_INPUT_METHOD_UNKNOWN",
      "DOM_INPUT_METHOD_VOICE",
      "DOM_KEY_LOCATION_JOYSTICK",
      "DOM_KEY_LOCATION_LEFT",
      "DOM_KEY_LOCATION_MOBILE",
      "DOM_KEY_LOCATION_NUMPAD",
      "DOM_KEY_LOCATION_RIGHT",
      "DOM_KEY_LOCATION_STANDARD",
      "DOM_VK_0",
      "DOM_VK_1",
      "DOM_VK_2",
      "DOM_VK_3",
      "DOM_VK_4",
      "DOM_VK_5",
      "DOM_VK_6",
      "DOM_VK_7",
      "DOM_VK_8",
      "DOM_VK_9",
      "DOM_VK_A",
      "DOM_VK_ACCEPT",
      "DOM_VK_ADD",
      "DOM_VK_ALT",
      "DOM_VK_ALTGR",
      "DOM_VK_AMPERSAND",
      "DOM_VK_ASTERISK",
      "DOM_VK_AT",
      "DOM_VK_ATTN",
      "DOM_VK_B",
      "DOM_VK_BACKSPACE",
      "DOM_VK_BACK_QUOTE",
      "DOM_VK_BACK_SLASH",
      "DOM_VK_BACK_SPACE",
      "DOM_VK_C",
      "DOM_VK_CANCEL",
      "DOM_VK_CAPS_LOCK",
      "DOM_VK_CIRCUMFLEX",
      "DOM_VK_CLEAR",
      "DOM_VK_CLOSE_BRACKET",
      "DOM_VK_CLOSE_CURLY_BRACKET",
      "DOM_VK_CLOSE_PAREN",
      "DOM_VK_COLON",
      "DOM_VK_COMMA",
      "DOM_VK_CONTEXT_MENU",
      "DOM_VK_CONTROL",
      "DOM_VK_CONVERT",
      "DOM_VK_CRSEL",
      "DOM_VK_CTRL",
      "DOM_VK_D",
      "DOM_VK_DECIMAL",
      "DOM_VK_DELETE",
      "DOM_VK_DIVIDE",
      "DOM_VK_DOLLAR",
      "DOM_VK_DOUBLE_QUOTE",
      "DOM_VK_DOWN",
      "DOM_VK_E",
      "DOM_VK_EISU",
      "DOM_VK_END",
      "DOM_VK_ENTER",
      "DOM_VK_EQUALS",
      "DOM_VK_EREOF",
      "DOM_VK_ESCAPE",
      "DOM_VK_EXCLAMATION",
      "DOM_VK_EXECUTE",
      "DOM_VK_EXSEL",
      "DOM_VK_F",
      "DOM_VK_F1",
      "DOM_VK_F10",
      "DOM_VK_F11",
      "DOM_VK_F12",
      "DOM_VK_F13",
      "DOM_VK_F14",
      "DOM_VK_F15",
      "DOM_VK_F16",
      "DOM_VK_F17",
      "DOM_VK_F18",
      "DOM_VK_F19",
      "DOM_VK_F2",
      "DOM_VK_F20",
      "DOM_VK_F21",
      "DOM_VK_F22",
      "DOM_VK_F23",
      "DOM_VK_F24",
      "DOM_VK_F25",
      "DOM_VK_F26",
      "DOM_VK_F27",
      "DOM_VK_F28",
      "DOM_VK_F29",
      "DOM_VK_F3",
      "DOM_VK_F30",
      "DOM_VK_F31",
      "DOM_VK_F32",
      "DOM_VK_F33",
      "DOM_VK_F34",
      "DOM_VK_F35",
      "DOM_VK_F36",
      "DOM_VK_F4",
      "DOM_VK_F5",
      "DOM_VK_F6",
      "DOM_VK_F7",
      "DOM_VK_F8",
      "DOM_VK_F9",
      "DOM_VK_FINAL",
      "DOM_VK_FRONT",
      "DOM_VK_G",
      "DOM_VK_GREATER_THAN",
      "DOM_VK_H",
      "DOM_VK_HANGUL",
      "DOM_VK_HANJA",
      "DOM_VK_HASH",
      "DOM_VK_HELP",
      "DOM_VK_HK_TOGGLE",
      "DOM_VK_HOME",
      "DOM_VK_HYPHEN_MINUS",
      "DOM_VK_I",
      "DOM_VK_INSERT",
      "DOM_VK_J",
      "DOM_VK_JUNJA",
      "DOM_VK_K",
      "DOM_VK_KANA",
      "DOM_VK_KANJI",
      "DOM_VK_L",
      "DOM_VK_LEFT",
      "DOM_VK_LEFT_TAB",
      "DOM_VK_LESS_THAN",
      "DOM_VK_M",
      "DOM_VK_META",
      "DOM_VK_MODECHANGE",
      "DOM_VK_MULTIPLY",
      "DOM_VK_N",
      "DOM_VK_NONCONVERT",
      "DOM_VK_NUMPAD0",
      "DOM_VK_NUMPAD1",
      "DOM_VK_NUMPAD2",
      "DOM_VK_NUMPAD3",
      "DOM_VK_NUMPAD4",
      "DOM_VK_NUMPAD5",
      "DOM_VK_NUMPAD6",
      "DOM_VK_NUMPAD7",
      "DOM_VK_NUMPAD8",
      "DOM_VK_NUMPAD9",
      "DOM_VK_NUM_LOCK",
      "DOM_VK_O",
      "DOM_VK_OEM_1",
      "DOM_VK_OEM_102",
      "DOM_VK_OEM_2",
      "DOM_VK_OEM_3",
      "DOM_VK_OEM_4",
      "DOM_VK_OEM_5",
      "DOM_VK_OEM_6",
      "DOM_VK_OEM_7",
      "DOM_VK_OEM_8",
      "DOM_VK_OEM_COMMA",
      "DOM_VK_OEM_MINUS",
      "DOM_VK_OEM_PERIOD",
      "DOM_VK_OEM_PLUS",
      "DOM_VK_OPEN_BRACKET",
      "DOM_VK_OPEN_CURLY_BRACKET",
      "DOM_VK_OPEN_PAREN",
      "DOM_VK_P",
      "DOM_VK_PA1",
      "DOM_VK_PAGEDOWN",
      "DOM_VK_PAGEUP",
      "DOM_VK_PAGE_DOWN",
      "DOM_VK_PAGE_UP",
      "DOM_VK_PAUSE",
      "DOM_VK_PERCENT",
      "DOM_VK_PERIOD",
      "DOM_VK_PIPE",
      "DOM_VK_PLAY",
      "DOM_VK_PLUS",
      "DOM_VK_PRINT",
      "DOM_VK_PRINTSCREEN",
      "DOM_VK_PROCESSKEY",
      "DOM_VK_PROPERITES",
      "DOM_VK_Q",
      "DOM_VK_QUESTION_MARK",
      "DOM_VK_QUOTE",
      "DOM_VK_R",
      "DOM_VK_REDO",
      "DOM_VK_RETURN",
      "DOM_VK_RIGHT",
      "DOM_VK_S",
      "DOM_VK_SCROLL_LOCK",
      "DOM_VK_SELECT",
      "DOM_VK_SEMICOLON",
      "DOM_VK_SEPARATOR",
      "DOM_VK_SHIFT",
      "DOM_VK_SLASH",
      "DOM_VK_SLEEP",
      "DOM_VK_SPACE",
      "DOM_VK_SUBTRACT",
      "DOM_VK_T",
      "DOM_VK_TAB",
      "DOM_VK_TILDE",
      "DOM_VK_U",
      "DOM_VK_UNDERSCORE",
      "DOM_VK_UNDO",
      "DOM_VK_UNICODE",
      "DOM_VK_UP",
      "DOM_VK_V",
      "DOM_VK_VOLUME_DOWN",
      "DOM_VK_VOLUME_MUTE",
      "DOM_VK_VOLUME_UP",
      "DOM_VK_W",
      "DOM_VK_WIN",
      "DOM_VK_WINDOW",
      "DOM_VK_WIN_ICO_00",
      "DOM_VK_WIN_ICO_CLEAR",
      "DOM_VK_WIN_ICO_HELP",
      "DOM_VK_WIN_OEM_ATTN",
      "DOM_VK_WIN_OEM_AUTO",
      "DOM_VK_WIN_OEM_BACKTAB",
      "DOM_VK_WIN_OEM_CLEAR",
      "DOM_VK_WIN_OEM_COPY",
      "DOM_VK_WIN_OEM_CUSEL",
      "DOM_VK_WIN_OEM_ENLW",
      "DOM_VK_WIN_OEM_FINISH",
      "DOM_VK_WIN_OEM_FJ_JISHO",
      "DOM_VK_WIN_OEM_FJ_LOYA",
      "DOM_VK_WIN_OEM_FJ_MASSHOU",
      "DOM_VK_WIN_OEM_FJ_ROYA",
      "DOM_VK_WIN_OEM_FJ_TOUROKU",
      "DOM_VK_WIN_OEM_JUMP",
      "DOM_VK_WIN_OEM_PA1",
      "DOM_VK_WIN_OEM_PA2",
      "DOM_VK_WIN_OEM_PA3",
      "DOM_VK_WIN_OEM_RESET",
      "DOM_VK_WIN_OEM_WSCTRL",
      "DOM_VK_X",
      "DOM_VK_XF86XK_ADD_FAVORITE",
      "DOM_VK_XF86XK_APPLICATION_LEFT",
      "DOM_VK_XF86XK_APPLICATION_RIGHT",
      "DOM_VK_XF86XK_AUDIO_CYCLE_TRACK",
      "DOM_VK_XF86XK_AUDIO_FORWARD",
      "DOM_VK_XF86XK_AUDIO_LOWER_VOLUME",
      "DOM_VK_XF86XK_AUDIO_MEDIA",
      "DOM_VK_XF86XK_AUDIO_MUTE",
      "DOM_VK_XF86XK_AUDIO_NEXT",
      "DOM_VK_XF86XK_AUDIO_PAUSE",
      "DOM_VK_XF86XK_AUDIO_PLAY",
      "DOM_VK_XF86XK_AUDIO_PREV",
      "DOM_VK_XF86XK_AUDIO_RAISE_VOLUME",
      "DOM_VK_XF86XK_AUDIO_RANDOM_PLAY",
      "DOM_VK_XF86XK_AUDIO_RECORD",
      "DOM_VK_XF86XK_AUDIO_REPEAT",
      "DOM_VK_XF86XK_AUDIO_REWIND",
      "DOM_VK_XF86XK_AUDIO_STOP",
      "DOM_VK_XF86XK_AWAY",
      "DOM_VK_XF86XK_BACK",
      "DOM_VK_XF86XK_BACK_FORWARD",
      "DOM_VK_XF86XK_BATTERY",
      "DOM_VK_XF86XK_BLUE",
      "DOM_VK_XF86XK_BLUETOOTH",
      "DOM_VK_XF86XK_BOOK",
      "DOM_VK_XF86XK_BRIGHTNESS_ADJUST",
      "DOM_VK_XF86XK_CALCULATOR",
      "DOM_VK_XF86XK_CALENDAR",
      "DOM_VK_XF86XK_CD",
      "DOM_VK_XF86XK_CLOSE",
      "DOM_VK_XF86XK_COMMUNITY",
      "DOM_VK_XF86XK_CONTRAST_ADJUST",
      "DOM_VK_XF86XK_COPY",
      "DOM_VK_XF86XK_CUT",
      "DOM_VK_XF86XK_CYCLE_ANGLE",
      "DOM_VK_XF86XK_DISPLAY",
      "DOM_VK_XF86XK_DOCUMENTS",
      "DOM_VK_XF86XK_DOS",
      "DOM_VK_XF86XK_EJECT",
      "DOM_VK_XF86XK_EXCEL",
      "DOM_VK_XF86XK_EXPLORER",
      "DOM_VK_XF86XK_FAVORITES",
      "DOM_VK_XF86XK_FINANCE",
      "DOM_VK_XF86XK_FORWARD",
      "DOM_VK_XF86XK_FRAME_BACK",
      "DOM_VK_XF86XK_FRAME_FORWARD",
      "DOM_VK_XF86XK_GAME",
      "DOM_VK_XF86XK_GO",
      "DOM_VK_XF86XK_GREEN",
      "DOM_VK_XF86XK_HIBERNATE",
      "DOM_VK_XF86XK_HISTORY",
      "DOM_VK_XF86XK_HOME_PAGE",
      "DOM_VK_XF86XK_HOT_LINKS",
      "DOM_VK_XF86XK_I_TOUCH",
      "DOM_VK_XF86XK_KBD_BRIGHTNESS_DOWN",
      "DOM_VK_XF86XK_KBD_BRIGHTNESS_UP",
      "DOM_VK_XF86XK_KBD_LIGHT_ON_OFF",
      "DOM_VK_XF86XK_LAUNCH0",
      "DOM_VK_XF86XK_LAUNCH1",
      "DOM_VK_XF86XK_LAUNCH2",
      "DOM_VK_XF86XK_LAUNCH3",
      "DOM_VK_XF86XK_LAUNCH4",
      "DOM_VK_XF86XK_LAUNCH5",
      "DOM_VK_XF86XK_LAUNCH6",
      "DOM_VK_XF86XK_LAUNCH7",
      "DOM_VK_XF86XK_LAUNCH8",
      "DOM_VK_XF86XK_LAUNCH9",
      "DOM_VK_XF86XK_LAUNCH_A",
      "DOM_VK_XF86XK_LAUNCH_B",
      "DOM_VK_XF86XK_LAUNCH_C",
      "DOM_VK_XF86XK_LAUNCH_D",
      "DOM_VK_XF86XK_LAUNCH_E",
      "DOM_VK_XF86XK_LAUNCH_F",
      "DOM_VK_XF86XK_LIGHT_BULB",
      "DOM_VK_XF86XK_LOG_OFF",
      "DOM_VK_XF86XK_MAIL",
      "DOM_VK_XF86XK_MAIL_FORWARD",
      "DOM_VK_XF86XK_MARKET",
      "DOM_VK_XF86XK_MEETING",
      "DOM_VK_XF86XK_MEMO",
      "DOM_VK_XF86XK_MENU_KB",
      "DOM_VK_XF86XK_MENU_PB",
      "DOM_VK_XF86XK_MESSENGER",
      "DOM_VK_XF86XK_MON_BRIGHTNESS_DOWN",
      "DOM_VK_XF86XK_MON_BRIGHTNESS_UP",
      "DOM_VK_XF86XK_MUSIC",
      "DOM_VK_XF86XK_MY_COMPUTER",
      "DOM_VK_XF86XK_MY_SITES",
      "DOM_VK_XF86XK_NEW",
      "DOM_VK_XF86XK_NEWS",
      "DOM_VK_XF86XK_OFFICE_HOME",
      "DOM_VK_XF86XK_OPEN",
      "DOM_VK_XF86XK_OPEN_URL",
      "DOM_VK_XF86XK_OPTION",
      "DOM_VK_XF86XK_PASTE",
      "DOM_VK_XF86XK_PHONE",
      "DOM_VK_XF86XK_PICTURES",
      "DOM_VK_XF86XK_POWER_DOWN",
      "DOM_VK_XF86XK_POWER_OFF",
      "DOM_VK_XF86XK_RED",
      "DOM_VK_XF86XK_REFRESH",
      "DOM_VK_XF86XK_RELOAD",
      "DOM_VK_XF86XK_REPLY",
      "DOM_VK_XF86XK_ROCKER_DOWN",
      "DOM_VK_XF86XK_ROCKER_ENTER",
      "DOM_VK_XF86XK_ROCKER_UP",
      "DOM_VK_XF86XK_ROTATE_WINDOWS",
      "DOM_VK_XF86XK_ROTATION_KB",
      "DOM_VK_XF86XK_ROTATION_PB",
      "DOM_VK_XF86XK_SAVE",
      "DOM_VK_XF86XK_SCREEN_SAVER",
      "DOM_VK_XF86XK_SCROLL_CLICK",
      "DOM_VK_XF86XK_SCROLL_DOWN",
      "DOM_VK_XF86XK_SCROLL_UP",
      "DOM_VK_XF86XK_SEARCH",
      "DOM_VK_XF86XK_SEND",
      "DOM_VK_XF86XK_SHOP",
      "DOM_VK_XF86XK_SPELL",
      "DOM_VK_XF86XK_SPLIT_SCREEN",
      "DOM_VK_XF86XK_STANDBY",
      "DOM_VK_XF86XK_START",
      "DOM_VK_XF86XK_STOP",
      "DOM_VK_XF86XK_SUBTITLE",
      "DOM_VK_XF86XK_SUPPORT",
      "DOM_VK_XF86XK_SUSPEND",
      "DOM_VK_XF86XK_TASK_PANE",
      "DOM_VK_XF86XK_TERMINAL",
      "DOM_VK_XF86XK_TIME",
      "DOM_VK_XF86XK_TOOLS",
      "DOM_VK_XF86XK_TOP_MENU",
      "DOM_VK_XF86XK_TO_DO_LIST",
      "DOM_VK_XF86XK_TRAVEL",
      "DOM_VK_XF86XK_USER1KB",
      "DOM_VK_XF86XK_USER2KB",
      "DOM_VK_XF86XK_USER_PB",
      "DOM_VK_XF86XK_UWB",
      "DOM_VK_XF86XK_VENDOR_HOME",
      "DOM_VK_XF86XK_VIDEO",
      "DOM_VK_XF86XK_VIEW",
      "DOM_VK_XF86XK_WAKE_UP",
      "DOM_VK_XF86XK_WEB_CAM",
      "DOM_VK_XF86XK_WHEEL_BUTTON",
      "DOM_VK_XF86XK_WLAN",
      "DOM_VK_XF86XK_WORD",
      "DOM_VK_XF86XK_WWW",
      "DOM_VK_XF86XK_XFER",
      "DOM_VK_XF86XK_YELLOW",
      "DOM_VK_XF86XK_ZOOM_IN",
      "DOM_VK_XF86XK_ZOOM_OUT",
      "DOM_VK_Y",
      "DOM_VK_Z",
      "DOM_VK_ZOOM",
      "DONE",
      "DONT_CARE",
      "DOWNLOADING",
      "DRAGDROP",
      "DST_ALPHA",
      "DST_COLOR",
      "DYNAMIC_DRAW",
      "DataChannel",
      "DataTransfer",
      "DataTransferItem",
      "DataTransferItemList",
      "DataView",
      "Date",
      "DateTimeFormat",
      "DelayNode",
      "DesktopNotification",
      "DesktopNotificationCenter",
      "DeviceLightEvent",
      "DeviceMotionEvent",
      "DeviceOrientationEvent",
      "DeviceProximityEvent",
      "DeviceStorage",
      "DeviceStorageChangeEvent",
      "Document",
      "DocumentFragment",
      "DocumentType",
      "DragEvent",
      "DynamicsCompressorNode",
      "E",
      "ELEMENT_ARRAY_BUFFER",
      "ELEMENT_ARRAY_BUFFER_BINDING",
      "ELEMENT_NODE",
      "EMPTY",
      "ENCODING_ERR",
      "ENDED",
      "END_TO_END",
      "END_TO_START",
      "ENTITY_NODE",
      "ENTITY_REFERENCE_NODE",
      "EPSILON",
      "EQUAL",
      "EQUALPOWER",
      "ERROR",
      "EXPONENTIAL_DISTANCE",
      "Element",
      "ElementQuery",
      "Entity",
      "EntityReference",
      "Error",
      "ErrorEvent",
      "EvalError",
      "Event",
      "EventException",
      "EventSource",
      "EventTarget",
      "External",
      "FASTEST",
      "FIDOSDK",
      "FILTER_ACCEPT",
      "FILTER_INTERRUPT",
      "FILTER_REJECT",
      "FILTER_SKIP",
      "FINISHED_STATE",
      "FIRST_ORDERED_NODE_TYPE",
      "FLOAT",
      "FLOAT_MAT2",
      "FLOAT_MAT3",
      "FLOAT_MAT4",
      "FLOAT_VEC2",
      "FLOAT_VEC3",
      "FLOAT_VEC4",
      "FOCUS",
      "FONT_FACE_RULE",
      "FONT_FEATURE_VALUES_RULE",
      "FRAGMENT_SHADER",
      "FRAGMENT_SHADER_DERIVATIVE_HINT_OES",
      "FRAMEBUFFER",
      "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME",
      "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE",
      "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE",
      "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL",
      "FRAMEBUFFER_BINDING",
      "FRAMEBUFFER_COMPLETE",
      "FRAMEBUFFER_INCOMPLETE_ATTACHMENT",
      "FRAMEBUFFER_INCOMPLETE_DIMENSIONS",
      "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT",
      "FRAMEBUFFER_UNSUPPORTED",
      "FRONT",
      "FRONT_AND_BACK",
      "FRONT_FACE",
      "FUNC_ADD",
      "FUNC_REVERSE_SUBTRACT",
      "FUNC_SUBTRACT",
      "Feed",
      "FeedEntry",
      "File",
      "FileError",
      "FileList",
      "FileReader",
      "FindInPage",
      "Float32Array",
      "Float64Array",
      "FocusEvent",
      "FontFace",
      "FormData",
      "Function",
      "GENERATE_MIPMAP_HINT",
      "GEQUAL",
      "GREATER",
      "GREEN_BITS",
      "GainNode",
      "Gamepad",
      "GamepadButton",
      "GamepadEvent",
      "GestureEvent",
      "HAVE_CURRENT_DATA",
      "HAVE_ENOUGH_DATA",
      "HAVE_FUTURE_DATA",
      "HAVE_METADATA",
      "HAVE_NOTHING",
      "HEADERS_RECEIVED",
      "HIDDEN",
      "HIERARCHY_REQUEST_ERR",
      "HIGHPASS",
      "HIGHSHELF",
      "HIGH_FLOAT",
      "HIGH_INT",
      "HORIZONTAL",
      "HORIZONTAL_AXIS",
      "HRTF",
      "HTMLAllCollection",
      "HTMLAnchorElement",
      "HTMLAppletElement",
      "HTMLAreaElement",
      "HTMLAudioElement",
      "HTMLBRElement",
      "HTMLBaseElement",
      "HTMLBaseFontElement",
      "HTMLBlockquoteElement",
      "HTMLBodyElement",
      "HTMLButtonElement",
      "HTMLCanvasElement",
      "HTMLCollection",
      "HTMLCommandElement",
      "HTMLContentElement",
      "HTMLDListElement",
      "HTMLDataElement",
      "HTMLDataListElement",
      "HTMLDetailsElement",
      "HTMLDialogElement",
      "HTMLDirectoryElement",
      "HTMLDivElement",
      "HTMLDocument",
      "HTMLElement",
      "HTMLEmbedElement",
      "HTMLFieldSetElement",
      "HTMLFontElement",
      "HTMLFormControlsCollection",
      "HTMLFormElement",
      "HTMLFrameElement",
      "HTMLFrameSetElement",
      "HTMLHRElement",
      "HTMLHeadElement",
      "HTMLHeadingElement",
      "HTMLHtmlElement",
      "HTMLIFrameElement",
      "HTMLImageElement",
      "HTMLInputElement",
      "HTMLIsIndexElement",
      "HTMLKeygenElement",
      "HTMLLIElement",
      "HTMLLabelElement",
      "HTMLLegendElement",
      "HTMLLinkElement",
      "HTMLMapElement",
      "HTMLMarqueeElement",
      "HTMLMediaElement",
      "HTMLMenuElement",
      "HTMLMenuItemElement",
      "HTMLMetaElement",
      "HTMLMeterElement",
      "HTMLModElement",
      "HTMLOListElement",
      "HTMLObjectElement",
      "HTMLOptGroupElement",
      "HTMLOptionElement",
      "HTMLOptionsCollection",
      "HTMLOutputElement",
      "HTMLParagraphElement",
      "HTMLParamElement",
      "HTMLPictureElement",
      "HTMLPreElement",
      "HTMLProgressElement",
      "HTMLPropertiesCollection",
      "HTMLQuoteElement",
      "HTMLScriptElement",
      "HTMLSelectElement",
      "HTMLShadowElement",
      "HTMLSourceElement",
      "HTMLSpanElement",
      "HTMLStyleElement",
      "HTMLTableCaptionElement",
      "HTMLTableCellElement",
      "HTMLTableColElement",
      "HTMLTableElement",
      "HTMLTableRowElement",
      "HTMLTableSectionElement",
      "HTMLTemplateElement",
      "HTMLTextAreaElement",
      "HTMLTimeElement",
      "HTMLTitleElement",
      "HTMLTrackElement",
      "HTMLUListElement",
      "HTMLUnknownElement",
      "HTMLVideoElement",
      "HashChangeEvent",
      "Headers",
      "History",
      "ICE_CHECKING",
      "ICE_CLOSED",
      "ICE_COMPLETED",
      "ICE_CONNECTED",
      "ICE_FAILED",
      "ICE_GATHERING",
      "ICE_WAITING",
      "IDBCursor",
      "IDBCursorWithValue",
      "IDBDatabase",
      "IDBDatabaseException",
      "IDBFactory",
      "IDBFileHandle",
      "IDBFileRequest",
      "IDBIndex",
      "IDBKeyRange",
      "IDBMutableFile",
      "IDBObjectStore",
      "IDBOpenDBRequest",
      "IDBRequest",
      "IDBTransaction",
      "IDBVersionChangeEvent",
      "IDLE",
      "IMPLEMENTATION_COLOR_READ_FORMAT",
      "IMPLEMENTATION_COLOR_READ_TYPE",
      "IMPORT_RULE",
      "INCR",
      "INCR_WRAP",
      "INDEX_SIZE_ERR",
      "INT",
      "INT_VEC2",
      "INT_VEC3",
      "INT_VEC4",
      "INUSE_ATTRIBUTE_ERR",
      "INVALID_ACCESS_ERR",
      "INVALID_CHARACTER_ERR",
      "INVALID_ENUM",
      "INVALID_EXPRESSION_ERR",
      "INVALID_FRAMEBUFFER_OPERATION",
      "INVALID_MODIFICATION_ERR",
      "INVALID_NODE_TYPE_ERR",
      "INVALID_OPERATION",
      "INVALID_STATE_ERR",
      "INVALID_VALUE",
      "INVERSE_DISTANCE",
      "INVERT",
      "IceCandidate",
      "Image",
      "ImageBitmap",
      "ImageData",
      "Infinity",
      "InputEvent",
      "InputMethodContext",
      "InstallTrigger",
      "Int16Array",
      "Int32Array",
      "Int8Array",
      "Intent",
      "InternalError",
      "Intl",
      "IsSearchProviderInstalled",
      "Iterator",
      "JSON",
      "KEEP",
      "KEYDOWN",
      "KEYFRAMES_RULE",
      "KEYFRAME_RULE",
      "KEYPRESS",
      "KEYUP",
      "KeyEvent",
      "KeyboardEvent",
      "LENGTHADJUST_SPACING",
      "LENGTHADJUST_SPACINGANDGLYPHS",
      "LENGTHADJUST_UNKNOWN",
      "LEQUAL",
      "LESS",
      "LINEAR",
      "LINEAR_DISTANCE",
      "LINEAR_MIPMAP_LINEAR",
      "LINEAR_MIPMAP_NEAREST",
      "LINES",
      "LINE_LOOP",
      "LINE_STRIP",
      "LINE_WIDTH",
      "LINK_STATUS",
      "LIVE",
      "LN10",
      "LN2",
      "LOADED",
      "LOADING",
      "LOG10E",
      "LOG2E",
      "LOWPASS",
      "LOWSHELF",
      "LOW_FLOAT",
      "LOW_INT",
      "LSException",
      "LSParserFilter",
      "LUMINANCE",
      "LUMINANCE_ALPHA",
      "LocalMediaStream",
      "Location",
      "MAX_COMBINED_TEXTURE_IMAGE_UNITS",
      "MAX_CUBE_MAP_TEXTURE_SIZE",
      "MAX_FRAGMENT_UNIFORM_VECTORS",
      "MAX_RENDERBUFFER_SIZE",
      "MAX_SAFE_INTEGER",
      "MAX_TEXTURE_IMAGE_UNITS",
      "MAX_TEXTURE_MAX_ANISOTROPY_EXT",
      "MAX_TEXTURE_SIZE",
      "MAX_VALUE",
      "MAX_VARYING_VECTORS",
      "MAX_VERTEX_ATTRIBS",
      "MAX_VERTEX_TEXTURE_IMAGE_UNITS",
      "MAX_VERTEX_UNIFORM_VECTORS",
      "MAX_VIEWPORT_DIMS",
      "MEDIA_ERR_ABORTED",
      "MEDIA_ERR_DECODE",
      "MEDIA_ERR_ENCRYPTED",
      "MEDIA_ERR_NETWORK",
      "MEDIA_ERR_SRC_NOT_SUPPORTED",
      "MEDIA_KEYERR_CLIENT",
      "MEDIA_KEYERR_DOMAIN",
      "MEDIA_KEYERR_HARDWARECHANGE",
      "MEDIA_KEYERR_OUTPUT",
      "MEDIA_KEYERR_SERVICE",
      "MEDIA_KEYERR_UNKNOWN",
      "MEDIA_RULE",
      "MEDIUM_FLOAT",
      "MEDIUM_INT",
      "META_MASK",
      "MIN_SAFE_INTEGER",
      "MIN_VALUE",
      "MIRRORED_REPEAT",
      "MODE_ASYNCHRONOUS",
      "MODE_SYNCHRONOUS",
      "MODIFICATION",
      "MOUSEDOWN",
      "MOUSEDRAG",
      "MOUSEMOVE",
      "MOUSEOUT",
      "MOUSEOVER",
      "MOUSEUP",
      "MOZ_KEYFRAMES_RULE",
      "MOZ_KEYFRAME_RULE",
      "MOZ_SOURCE_CURSOR",
      "MOZ_SOURCE_ERASER",
      "MOZ_SOURCE_KEYBOARD",
      "MOZ_SOURCE_MOUSE",
      "MOZ_SOURCE_PEN",
      "MOZ_SOURCE_TOUCH",
      "MOZ_SOURCE_UNKNOWN",
      "MSGESTURE_FLAG_BEGIN",
      "MSGESTURE_FLAG_CANCEL",
      "MSGESTURE_FLAG_END",
      "MSGESTURE_FLAG_INERTIA",
      "MSGESTURE_FLAG_NONE",
      "MSPOINTER_TYPE_MOUSE",
      "MSPOINTER_TYPE_PEN",
      "MSPOINTER_TYPE_TOUCH",
      "MS_ASYNC_CALLBACK_STATUS_ASSIGN_DELEGATE",
      "MS_ASYNC_CALLBACK_STATUS_CANCEL",
      "MS_ASYNC_CALLBACK_STATUS_CHOOSEANY",
      "MS_ASYNC_CALLBACK_STATUS_ERROR",
      "MS_ASYNC_CALLBACK_STATUS_JOIN",
      "MS_ASYNC_OP_STATUS_CANCELED",
      "MS_ASYNC_OP_STATUS_ERROR",
      "MS_ASYNC_OP_STATUS_SUCCESS",
      "MS_MANIPULATION_STATE_ACTIVE",
      "MS_MANIPULATION_STATE_CANCELLED",
      "MS_MANIPULATION_STATE_COMMITTED",
      "MS_MANIPULATION_STATE_DRAGGING",
      "MS_MANIPULATION_STATE_INERTIA",
      "MS_MANIPULATION_STATE_PRESELECT",
      "MS_MANIPULATION_STATE_SELECTING",
      "MS_MANIPULATION_STATE_STOPPED",
      "MS_MEDIA_ERR_ENCRYPTED",
      "MS_MEDIA_KEYERR_CLIENT",
      "MS_MEDIA_KEYERR_DOMAIN",
      "MS_MEDIA_KEYERR_HARDWARECHANGE",
      "MS_MEDIA_KEYERR_OUTPUT",
      "MS_MEDIA_KEYERR_SERVICE",
      "MS_MEDIA_KEYERR_UNKNOWN",
      "Map",
      "Math",
      "MediaController",
      "MediaDevices",
      "MediaElementAudioSourceNode",
      "MediaEncryptedEvent",
      "MediaError",
      "MediaKeyError",
      "MediaKeyEvent",
      "MediaKeyMessageEvent",
      "MediaKeyNeededEvent",
      "MediaKeySession",
      "MediaKeyStatusMap",
      "MediaKeySystemAccess",
      "MediaKeys",
      "MediaList",
      "MediaQueryList",
      "MediaQueryListEvent",
      "MediaRecorder",
      "MediaSource",
      "MediaStream",
      "MediaStreamAudioDestinationNode",
      "MediaStreamAudioSourceNode",
      "MediaStreamEvent",
      "MediaStreamTrack",
      "MediaStreamTrackEvent",
      "MessageChannel",
      "MessageEvent",
      "MessagePort",
      "Methods",
      "MimeType",
      "MimeTypeArray",
      "MouseEvent",
      "MouseScrollEvent",
      "MozAnimation",
      "MozAnimationDelay",
      "MozAnimationDirection",
      "MozAnimationDuration",
      "MozAnimationFillMode",
      "MozAnimationIterationCount",
      "MozAnimationName",
      "MozAnimationPlayState",
      "MozAnimationTimingFunction",
      "MozAppearance",
      "MozBackfaceVisibility",
      "MozBinding",
      "MozBorderBottomColors",
      "MozBorderEnd",
      "MozBorderEndColor",
      "MozBorderEndStyle",
      "MozBorderEndWidth",
      "MozBorderImage",
      "MozBorderLeftColors",
      "MozBorderRightColors",
      "MozBorderStart",
      "MozBorderStartColor",
      "MozBorderStartStyle",
      "MozBorderStartWidth",
      "MozBorderTopColors",
      "MozBoxAlign",
      "MozBoxDirection",
      "MozBoxFlex",
      "MozBoxOrdinalGroup",
      "MozBoxOrient",
      "MozBoxPack",
      "MozBoxSizing",
      "MozCSSKeyframeRule",
      "MozCSSKeyframesRule",
      "MozColumnCount",
      "MozColumnFill",
      "MozColumnGap",
      "MozColumnRule",
      "MozColumnRuleColor",
      "MozColumnRuleStyle",
      "MozColumnRuleWidth",
      "MozColumnWidth",
      "MozColumns",
      "MozContactChangeEvent",
      "MozFloatEdge",
      "MozFontFeatureSettings",
      "MozFontLanguageOverride",
      "MozForceBrokenImageIcon",
      "MozHyphens",
      "MozImageRegion",
      "MozMarginEnd",
      "MozMarginStart",
      "MozMmsEvent",
      "MozMmsMessage",
      "MozMobileMessageThread",
      "MozOSXFontSmoothing",
      "MozOrient",
      "MozOutlineRadius",
      "MozOutlineRadiusBottomleft",
      "MozOutlineRadiusBottomright",
      "MozOutlineRadiusTopleft",
      "MozOutlineRadiusTopright",
      "MozPaddingEnd",
      "MozPaddingStart",
      "MozPerspective",
      "MozPerspectiveOrigin",
      "MozPowerManager",
      "MozSettingsEvent",
      "MozSmsEvent",
      "MozSmsMessage",
      "MozStackSizing",
      "MozTabSize",
      "MozTextAlignLast",
      "MozTextDecorationColor",
      "MozTextDecorationLine",
      "MozTextDecorationStyle",
      "MozTextSizeAdjust",
      "MozTransform",
      "MozTransformOrigin",
      "MozTransformStyle",
      "MozTransition",
      "MozTransitionDelay",
      "MozTransitionDuration",
      "MozTransitionProperty",
      "MozTransitionTimingFunction",
      "MozUserFocus",
      "MozUserInput",
      "MozUserModify",
      "MozUserSelect",
      "MozWindowDragging",
      "MozWindowShadow",
      "MutationEvent",
      "MutationObserver",
      "MutationRecord",
      "NAMESPACE_ERR",
      "NAMESPACE_RULE",
      "NEAREST",
      "NEAREST_MIPMAP_LINEAR",
      "NEAREST_MIPMAP_NEAREST",
      "NEGATIVE_INFINITY",
      "NETWORK_EMPTY",
      "NETWORK_ERR",
      "NETWORK_IDLE",
      "NETWORK_LOADED",
      "NETWORK_LOADING",
      "NETWORK_NO_SOURCE",
      "NEVER",
      "NEW",
      "NEXT",
      "NEXT_NO_DUPLICATE",
      "NICEST",
      "NODE_AFTER",
      "NODE_BEFORE",
      "NODE_BEFORE_AND_AFTER",
      "NODE_INSIDE",
      "NONE",
      "NON_TRANSIENT_ERR",
      "NOTATION_NODE",
      "NOTCH",
      "NOTEQUAL",
      "NOT_ALLOWED_ERR",
      "NOT_FOUND_ERR",
      "NOT_READABLE_ERR",
      "NOT_SUPPORTED_ERR",
      "NO_DATA_ALLOWED_ERR",
      "NO_ERR",
      "NO_ERROR",
      "NO_MODIFICATION_ALLOWED_ERR",
      "NUMBER_TYPE",
      "NUM_COMPRESSED_TEXTURE_FORMATS",
      "NaN",
      "NamedNodeMap",
      "Navigator",
      "NearbyLinks",
      "NetworkInformation",
      "Node",
      "NodeFilter",
      "NodeIterator",
      "NodeList",
      "Notation",
      "Notification",
      "NotifyPaintEvent",
      "Number",
      "NumberFormat",
      "OBSOLETE",
      "ONE",
      "ONE_MINUS_CONSTANT_ALPHA",
      "ONE_MINUS_CONSTANT_COLOR",
      "ONE_MINUS_DST_ALPHA",
      "ONE_MINUS_DST_COLOR",
      "ONE_MINUS_SRC_ALPHA",
      "ONE_MINUS_SRC_COLOR",
      "OPEN",
      "OPENED",
      "OPENING",
      "ORDERED_NODE_ITERATOR_TYPE",
      "ORDERED_NODE_SNAPSHOT_TYPE",
      "OUT_OF_MEMORY",
      "Object",
      "OfflineAudioCompletionEvent",
      "OfflineAudioContext",
      "OfflineResourceList",
      "Option",
      "OscillatorNode",
      "OverflowEvent",
      "PACK_ALIGNMENT",
      "PAGE_RULE",
      "PARSE_ERR",
      "PATHSEG_ARC_ABS",
      "PATHSEG_ARC_REL",
      "PATHSEG_CLOSEPATH",
      "PATHSEG_CURVETO_CUBIC_ABS",
      "PATHSEG_CURVETO_CUBIC_REL",
      "PATHSEG_CURVETO_CUBIC_SMOOTH_ABS",
      "PATHSEG_CURVETO_CUBIC_SMOOTH_REL",
      "PATHSEG_CURVETO_QUADRATIC_ABS",
      "PATHSEG_CURVETO_QUADRATIC_REL",
      "PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS",
      "PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL",
      "PATHSEG_LINETO_ABS",
      "PATHSEG_LINETO_HORIZONTAL_ABS",
      "PATHSEG_LINETO_HORIZONTAL_REL",
      "PATHSEG_LINETO_REL",
      "PATHSEG_LINETO_VERTICAL_ABS",
      "PATHSEG_LINETO_VERTICAL_REL",
      "PATHSEG_MOVETO_ABS",
      "PATHSEG_MOVETO_REL",
      "PATHSEG_UNKNOWN",
      "PATH_EXISTS_ERR",
      "PEAKING",
      "PERMISSION_DENIED",
      "PERSISTENT",
      "PI",
      "PLAYING_STATE",
      "POINTS",
      "POLYGON_OFFSET_FACTOR",
      "POLYGON_OFFSET_FILL",
      "POLYGON_OFFSET_UNITS",
      "POSITION_UNAVAILABLE",
      "POSITIVE_INFINITY",
      "PREV",
      "PREV_NO_DUPLICATE",
      "PROCESSING_INSTRUCTION_NODE",
      "PageChangeEvent",
      "PageTransitionEvent",
      "PaintRequest",
      "PaintRequestList",
      "PannerNode",
      "Path2D",
      "Performance",
      "PerformanceEntry",
      "PerformanceMark",
      "PerformanceMeasure",
      "PerformanceNavigation",
      "PerformanceResourceTiming",
      "PerformanceTiming",
      "PeriodicWave",
      "Plugin",
      "PluginArray",
      "PopStateEvent",
      "PopupBlockedEvent",
      "ProcessingInstruction",
      "ProgressEvent",
      "Promise",
      "PropertyNodeList",
      "Proxy",
      "PushManager",
      "PushSubscription",
      "Q",
      "QUOTA_ERR",
      "QUOTA_EXCEEDED_ERR",
      "QueryInterface",
      "READ_ONLY",
      "READ_ONLY_ERR",
      "READ_WRITE",
      "RED_BITS",
      "REMOVAL",
      "RENDERBUFFER",
      "RENDERBUFFER_ALPHA_SIZE",
      "RENDERBUFFER_BINDING",
      "RENDERBUFFER_BLUE_SIZE",
      "RENDERBUFFER_DEPTH_SIZE",
      "RENDERBUFFER_GREEN_SIZE",
      "RENDERBUFFER_HEIGHT",
      "RENDERBUFFER_INTERNAL_FORMAT",
      "RENDERBUFFER_RED_SIZE",
      "RENDERBUFFER_STENCIL_SIZE",
      "RENDERBUFFER_WIDTH",
      "RENDERER",
      "RENDERING_INTENT_ABSOLUTE_COLORIMETRIC",
      "RENDERING_INTENT_AUTO",
      "RENDERING_INTENT_PERCEPTUAL",
      "RENDERING_INTENT_RELATIVE_COLORIMETRIC",
      "RENDERING_INTENT_SATURATION",
      "RENDERING_INTENT_UNKNOWN",
      "REPEAT",
      "REPLACE",
      "RGB",
      "RGB565",
      "RGB5_A1",
      "RGBA",
      "RGBA4",
      "RGBColor",
      "ROTATION_CLOCKWISE",
      "ROTATION_COUNTERCLOCKWISE",
      "RTCDataChannelEvent",
      "RTCIceCandidate",
      "RTCPeerConnectionIceEvent",
      "RTCRtpReceiver",
      "RTCRtpSender",
      "RTCSessionDescription",
      "RTCStatsReport",
      "RadioNodeList",
      "Range",
      "RangeError",
      "RangeException",
      "RecordErrorEvent",
      "Rect",
      "ReferenceError",
      "RegExp",
      "Request",
      "Response",
      "SAMPLER_2D",
      "SAMPLER_CUBE",
      "SAMPLES",
      "SAMPLE_ALPHA_TO_COVERAGE",
      "SAMPLE_BUFFERS",
      "SAMPLE_COVERAGE",
      "SAMPLE_COVERAGE_INVERT",
      "SAMPLE_COVERAGE_VALUE",
      "SAWTOOTH",
      "SCHEDULED_STATE",
      "SCISSOR_BOX",
      "SCISSOR_TEST",
      "SCROLL_PAGE_DOWN",
      "SCROLL_PAGE_UP",
      "SDP_ANSWER",
      "SDP_OFFER",
      "SDP_PRANSWER",
      "SECURITY_ERR",
      "SELECT",
      "SERIALIZE_ERR",
      "SEVERITY_ERROR",
      "SEVERITY_FATAL_ERROR",
      "SEVERITY_WARNING",
      "SHADER_COMPILER",
      "SHADER_TYPE",
      "SHADING_LANGUAGE_VERSION",
      "SHIFT_MASK",
      "SHORT",
      "SHOWING",
      "SHOW_ALL",
      "SHOW_ATTRIBUTE",
      "SHOW_CDATA_SECTION",
      "SHOW_COMMENT",
      "SHOW_DOCUMENT",
      "SHOW_DOCUMENT_FRAGMENT",
      "SHOW_DOCUMENT_TYPE",
      "SHOW_ELEMENT",
      "SHOW_ENTITY",
      "SHOW_ENTITY_REFERENCE",
      "SHOW_NOTATION",
      "SHOW_PROCESSING_INSTRUCTION",
      "SHOW_TEXT",
      "SINE",
      "SOUNDFIELD",
      "SQLException",
      "SQRT1_2",
      "SQRT2",
      "SQUARE",
      "SRC_ALPHA",
      "SRC_ALPHA_SATURATE",
      "SRC_COLOR",
      "START_TO_END",
      "START_TO_START",
      "STATIC_DRAW",
      "STENCIL_ATTACHMENT",
      "STENCIL_BACK_FAIL",
      "STENCIL_BACK_FUNC",
      "STENCIL_BACK_PASS_DEPTH_FAIL",
      "STENCIL_BACK_PASS_DEPTH_PASS",
      "STENCIL_BACK_REF",
      "STENCIL_BACK_VALUE_MASK",
      "STENCIL_BACK_WRITEMASK",
      "STENCIL_BITS",
      "STENCIL_BUFFER_BIT",
      "STENCIL_CLEAR_VALUE",
      "STENCIL_FAIL",
      "STENCIL_FUNC",
      "STENCIL_INDEX",
      "STENCIL_INDEX8",
      "STENCIL_PASS_DEPTH_FAIL",
      "STENCIL_PASS_DEPTH_PASS",
      "STENCIL_REF",
      "STENCIL_TEST",
      "STENCIL_VALUE_MASK",
      "STENCIL_WRITEMASK",
      "STREAM_DRAW",
      "STRING_TYPE",
      "STYLE_RULE",
      "SUBPIXEL_BITS",
      "SUPPORTS_RULE",
      "SVGAElement",
      "SVGAltGlyphDefElement",
      "SVGAltGlyphElement",
      "SVGAltGlyphItemElement",
      "SVGAngle",
      "SVGAnimateColorElement",
      "SVGAnimateElement",
      "SVGAnimateMotionElement",
      "SVGAnimateTransformElement",
      "SVGAnimatedAngle",
      "SVGAnimatedBoolean",
      "SVGAnimatedEnumeration",
      "SVGAnimatedInteger",
      "SVGAnimatedLength",
      "SVGAnimatedLengthList",
      "SVGAnimatedNumber",
      "SVGAnimatedNumberList",
      "SVGAnimatedPreserveAspectRatio",
      "SVGAnimatedRect",
      "SVGAnimatedString",
      "SVGAnimatedTransformList",
      "SVGAnimationElement",
      "SVGCircleElement",
      "SVGClipPathElement",
      "SVGColor",
      "SVGComponentTransferFunctionElement",
      "SVGCursorElement",
      "SVGDefsElement",
      "SVGDescElement",
      "SVGDiscardElement",
      "SVGDocument",
      "SVGElement",
      "SVGElementInstance",
      "SVGElementInstanceList",
      "SVGEllipseElement",
      "SVGException",
      "SVGFEBlendElement",
      "SVGFEColorMatrixElement",
      "SVGFEComponentTransferElement",
      "SVGFECompositeElement",
      "SVGFEConvolveMatrixElement",
      "SVGFEDiffuseLightingElement",
      "SVGFEDisplacementMapElement",
      "SVGFEDistantLightElement",
      "SVGFEDropShadowElement",
      "SVGFEFloodElement",
      "SVGFEFuncAElement",
      "SVGFEFuncBElement",
      "SVGFEFuncGElement",
      "SVGFEFuncRElement",
      "SVGFEGaussianBlurElement",
      "SVGFEImageElement",
      "SVGFEMergeElement",
      "SVGFEMergeNodeElement",
      "SVGFEMorphologyElement",
      "SVGFEOffsetElement",
      "SVGFEPointLightElement",
      "SVGFESpecularLightingElement",
      "SVGFESpotLightElement",
      "SVGFETileElement",
      "SVGFETurbulenceElement",
      "SVGFilterElement",
      "SVGFontElement",
      "SVGFontFaceElement",
      "SVGFontFaceFormatElement",
      "SVGFontFaceNameElement",
      "SVGFontFaceSrcElement",
      "SVGFontFaceUriElement",
      "SVGForeignObjectElement",
      "SVGGElement",
      "SVGGeometryElement",
      "SVGGlyphElement",
      "SVGGlyphRefElement",
      "SVGGradientElement",
      "SVGGraphicsElement",
      "SVGHKernElement",
      "SVGImageElement",
      "SVGLength",
      "SVGLengthList",
      "SVGLineElement",
      "SVGLinearGradientElement",
      "SVGMPathElement",
      "SVGMarkerElement",
      "SVGMaskElement",
      "SVGMatrix",
      "SVGMetadataElement",
      "SVGMissingGlyphElement",
      "SVGNumber",
      "SVGNumberList",
      "SVGPaint",
      "SVGPathElement",
      "SVGPathSeg",
      "SVGPathSegArcAbs",
      "SVGPathSegArcRel",
      "SVGPathSegClosePath",
      "SVGPathSegCurvetoCubicAbs",
      "SVGPathSegCurvetoCubicRel",
      "SVGPathSegCurvetoCubicSmoothAbs",
      "SVGPathSegCurvetoCubicSmoothRel",
      "SVGPathSegCurvetoQuadraticAbs",
      "SVGPathSegCurvetoQuadraticRel",
      "SVGPathSegCurvetoQuadraticSmoothAbs",
      "SVGPathSegCurvetoQuadraticSmoothRel",
      "SVGPathSegLinetoAbs",
      "SVGPathSegLinetoHorizontalAbs",
      "SVGPathSegLinetoHorizontalRel",
      "SVGPathSegLinetoRel",
      "SVGPathSegLinetoVerticalAbs",
      "SVGPathSegLinetoVerticalRel",
      "SVGPathSegList",
      "SVGPathSegMovetoAbs",
      "SVGPathSegMovetoRel",
      "SVGPatternElement",
      "SVGPoint",
      "SVGPointList",
      "SVGPolygonElement",
      "SVGPolylineElement",
      "SVGPreserveAspectRatio",
      "SVGRadialGradientElement",
      "SVGRect",
      "SVGRectElement",
      "SVGRenderingIntent",
      "SVGSVGElement",
      "SVGScriptElement",
      "SVGSetElement",
      "SVGStopElement",
      "SVGStringList",
      "SVGStyleElement",
      "SVGSwitchElement",
      "SVGSymbolElement",
      "SVGTRefElement",
      "SVGTSpanElement",
      "SVGTextContentElement",
      "SVGTextElement",
      "SVGTextPathElement",
      "SVGTextPositioningElement",
      "SVGTitleElement",
      "SVGTransform",
      "SVGTransformList",
      "SVGUnitTypes",
      "SVGUseElement",
      "SVGVKernElement",
      "SVGViewElement",
      "SVGViewSpec",
      "SVGZoomAndPan",
      "SVGZoomEvent",
      "SVG_ANGLETYPE_DEG",
      "SVG_ANGLETYPE_GRAD",
      "SVG_ANGLETYPE_RAD",
      "SVG_ANGLETYPE_UNKNOWN",
      "SVG_ANGLETYPE_UNSPECIFIED",
      "SVG_CHANNEL_A",
      "SVG_CHANNEL_B",
      "SVG_CHANNEL_G",
      "SVG_CHANNEL_R",
      "SVG_CHANNEL_UNKNOWN",
      "SVG_COLORTYPE_CURRENTCOLOR",
      "SVG_COLORTYPE_RGBCOLOR",
      "SVG_COLORTYPE_RGBCOLOR_ICCCOLOR",
      "SVG_COLORTYPE_UNKNOWN",
      "SVG_EDGEMODE_DUPLICATE",
      "SVG_EDGEMODE_NONE",
      "SVG_EDGEMODE_UNKNOWN",
      "SVG_EDGEMODE_WRAP",
      "SVG_FEBLEND_MODE_COLOR",
      "SVG_FEBLEND_MODE_COLOR_BURN",
      "SVG_FEBLEND_MODE_COLOR_DODGE",
      "SVG_FEBLEND_MODE_DARKEN",
      "SVG_FEBLEND_MODE_DIFFERENCE",
      "SVG_FEBLEND_MODE_EXCLUSION",
      "SVG_FEBLEND_MODE_HARD_LIGHT",
      "SVG_FEBLEND_MODE_HUE",
      "SVG_FEBLEND_MODE_LIGHTEN",
      "SVG_FEBLEND_MODE_LUMINOSITY",
      "SVG_FEBLEND_MODE_MULTIPLY",
      "SVG_FEBLEND_MODE_NORMAL",
      "SVG_FEBLEND_MODE_OVERLAY",
      "SVG_FEBLEND_MODE_SATURATION",
      "SVG_FEBLEND_MODE_SCREEN",
      "SVG_FEBLEND_MODE_SOFT_LIGHT",
      "SVG_FEBLEND_MODE_UNKNOWN",
      "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
      "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
      "SVG_FECOLORMATRIX_TYPE_MATRIX",
      "SVG_FECOLORMATRIX_TYPE_SATURATE",
      "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
      "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
      "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
      "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
      "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
      "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
      "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
      "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
      "SVG_FECOMPOSITE_OPERATOR_ATOP",
      "SVG_FECOMPOSITE_OPERATOR_IN",
      "SVG_FECOMPOSITE_OPERATOR_OUT",
      "SVG_FECOMPOSITE_OPERATOR_OVER",
      "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
      "SVG_FECOMPOSITE_OPERATOR_XOR",
      "SVG_INVALID_VALUE_ERR",
      "SVG_LENGTHTYPE_CM",
      "SVG_LENGTHTYPE_EMS",
      "SVG_LENGTHTYPE_EXS",
      "SVG_LENGTHTYPE_IN",
      "SVG_LENGTHTYPE_MM",
      "SVG_LENGTHTYPE_NUMBER",
      "SVG_LENGTHTYPE_PC",
      "SVG_LENGTHTYPE_PERCENTAGE",
      "SVG_LENGTHTYPE_PT",
      "SVG_LENGTHTYPE_PX",
      "SVG_LENGTHTYPE_UNKNOWN",
      "SVG_MARKERUNITS_STROKEWIDTH",
      "SVG_MARKERUNITS_UNKNOWN",
      "SVG_MARKERUNITS_USERSPACEONUSE",
      "SVG_MARKER_ORIENT_ANGLE",
      "SVG_MARKER_ORIENT_AUTO",
      "SVG_MARKER_ORIENT_UNKNOWN",
      "SVG_MASKTYPE_ALPHA",
      "SVG_MASKTYPE_LUMINANCE",
      "SVG_MATRIX_NOT_INVERTABLE",
      "SVG_MEETORSLICE_MEET",
      "SVG_MEETORSLICE_SLICE",
      "SVG_MEETORSLICE_UNKNOWN",
      "SVG_MORPHOLOGY_OPERATOR_DILATE",
      "SVG_MORPHOLOGY_OPERATOR_ERODE",
      "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
      "SVG_PAINTTYPE_CURRENTCOLOR",
      "SVG_PAINTTYPE_NONE",
      "SVG_PAINTTYPE_RGBCOLOR",
      "SVG_PAINTTYPE_RGBCOLOR_ICCCOLOR",
      "SVG_PAINTTYPE_UNKNOWN",
      "SVG_PAINTTYPE_URI",
      "SVG_PAINTTYPE_URI_CURRENTCOLOR",
      "SVG_PAINTTYPE_URI_NONE",
      "SVG_PAINTTYPE_URI_RGBCOLOR",
      "SVG_PAINTTYPE_URI_RGBCOLOR_ICCCOLOR",
      "SVG_PRESERVEASPECTRATIO_NONE",
      "SVG_PRESERVEASPECTRATIO_UNKNOWN",
      "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
      "SVG_PRESERVEASPECTRATIO_XMAXYMID",
      "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
      "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
      "SVG_PRESERVEASPECTRATIO_XMIDYMID",
      "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
      "SVG_PRESERVEASPECTRATIO_XMINYMAX",
      "SVG_PRESERVEASPECTRATIO_XMINYMID",
      "SVG_PRESERVEASPECTRATIO_XMINYMIN",
      "SVG_SPREADMETHOD_PAD",
      "SVG_SPREADMETHOD_REFLECT",
      "SVG_SPREADMETHOD_REPEAT",
      "SVG_SPREADMETHOD_UNKNOWN",
      "SVG_STITCHTYPE_NOSTITCH",
      "SVG_STITCHTYPE_STITCH",
      "SVG_STITCHTYPE_UNKNOWN",
      "SVG_TRANSFORM_MATRIX",
      "SVG_TRANSFORM_ROTATE",
      "SVG_TRANSFORM_SCALE",
      "SVG_TRANSFORM_SKEWX",
      "SVG_TRANSFORM_SKEWY",
      "SVG_TRANSFORM_TRANSLATE",
      "SVG_TRANSFORM_UNKNOWN",
      "SVG_TURBULENCE_TYPE_FRACTALNOISE",
      "SVG_TURBULENCE_TYPE_TURBULENCE",
      "SVG_TURBULENCE_TYPE_UNKNOWN",
      "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX",
      "SVG_UNIT_TYPE_UNKNOWN",
      "SVG_UNIT_TYPE_USERSPACEONUSE",
      "SVG_WRONG_TYPE_ERR",
      "SVG_ZOOMANDPAN_DISABLE",
      "SVG_ZOOMANDPAN_MAGNIFY",
      "SVG_ZOOMANDPAN_UNKNOWN",
      "SYNTAX_ERR",
      "SavedPages",
      "Screen",
      "ScreenOrientation",
      "Script",
      "ScriptProcessorNode",
      "ScrollAreaEvent",
      "SecurityPolicyViolationEvent",
      "Selection",
      "ServiceWorker",
      "ServiceWorkerContainer",
      "ServiceWorkerRegistration",
      "SessionDescription",
      "Set",
      "ShadowRoot",
      "SharedWorker",
      "SimpleGestureEvent",
      "SpeechSynthesisEvent",
      "SpeechSynthesisUtterance",
      "StopIteration",
      "Storage",
      "StorageEvent",
      "String",
      "StyleSheet",
      "StyleSheetList",
      "SubtleCrypto",
      "Symbol",
      "SyntaxError",
      "TEMPORARY",
      "TEXTPATH_METHODTYPE_ALIGN",
      "TEXTPATH_METHODTYPE_STRETCH",
      "TEXTPATH_METHODTYPE_UNKNOWN",
      "TEXTPATH_SPACINGTYPE_AUTO",
      "TEXTPATH_SPACINGTYPE_EXACT",
      "TEXTPATH_SPACINGTYPE_UNKNOWN",
      "TEXTURE",
      "TEXTURE0",
      "TEXTURE1",
      "TEXTURE10",
      "TEXTURE11",
      "TEXTURE12",
      "TEXTURE13",
      "TEXTURE14",
      "TEXTURE15",
      "TEXTURE16",
      "TEXTURE17",
      "TEXTURE18",
      "TEXTURE19",
      "TEXTURE2",
      "TEXTURE20",
      "TEXTURE21",
      "TEXTURE22",
      "TEXTURE23",
      "TEXTURE24",
      "TEXTURE25",
      "TEXTURE26",
      "TEXTURE27",
      "TEXTURE28",
      "TEXTURE29",
      "TEXTURE3",
      "TEXTURE30",
      "TEXTURE31",
      "TEXTURE4",
      "TEXTURE5",
      "TEXTURE6",
      "TEXTURE7",
      "TEXTURE8",
      "TEXTURE9",
      "TEXTURE_2D",
      "TEXTURE_BINDING_2D",
      "TEXTURE_BINDING_CUBE_MAP",
      "TEXTURE_CUBE_MAP",
      "TEXTURE_CUBE_MAP_NEGATIVE_X",
      "TEXTURE_CUBE_MAP_NEGATIVE_Y",
      "TEXTURE_CUBE_MAP_NEGATIVE_Z",
      "TEXTURE_CUBE_MAP_POSITIVE_X",
      "TEXTURE_CUBE_MAP_POSITIVE_Y",
      "TEXTURE_CUBE_MAP_POSITIVE_Z",
      "TEXTURE_MAG_FILTER",
      "TEXTURE_MAX_ANISOTROPY_EXT",
      "TEXTURE_MIN_FILTER",
      "TEXTURE_WRAP_S",
      "TEXTURE_WRAP_T",
      "TEXT_NODE",
      "TIMEOUT",
      "TIMEOUT_ERR",
      "TOO_LARGE_ERR",
      "TRANSACTION_INACTIVE_ERR",
      "TRIANGLE",
      "TRIANGLES",
      "TRIANGLE_FAN",
      "TRIANGLE_STRIP",
      "TYPE_BACK_FORWARD",
      "TYPE_ERR",
      "TYPE_MISMATCH_ERR",
      "TYPE_NAVIGATE",
      "TYPE_RELOAD",
      "TYPE_RESERVED",
      "Text",
      "TextDecoder",
      "TextEncoder",
      "TextEvent",
      "TextMetrics",
      "TextTrack",
      "TextTrackCue",
      "TextTrackCueList",
      "TextTrackList",
      "TimeEvent",
      "TimeRanges",
      "Touch",
      "TouchEvent",
      "TouchList",
      "TrackEvent",
      "TransitionEvent",
      "TreeWalker",
      "TypeError",
      "UIEvent",
      "UNCACHED",
      "UNKNOWN_ERR",
      "UNKNOWN_RULE",
      "UNMASKED_RENDERER_WEBGL",
      "UNMASKED_VENDOR_WEBGL",
      "UNORDERED_NODE_ITERATOR_TYPE",
      "UNORDERED_NODE_SNAPSHOT_TYPE",
      "UNPACK_ALIGNMENT",
      "UNPACK_COLORSPACE_CONVERSION_WEBGL",
      "UNPACK_FLIP_Y_WEBGL",
      "UNPACK_PREMULTIPLY_ALPHA_WEBGL",
      "UNSCHEDULED_STATE",
      "UNSENT",
      "UNSIGNED_BYTE",
      "UNSIGNED_INT",
      "UNSIGNED_SHORT",
      "UNSIGNED_SHORT_4_4_4_4",
      "UNSIGNED_SHORT_5_5_5_1",
      "UNSIGNED_SHORT_5_6_5",
      "UNSPECIFIED_EVENT_TYPE_ERR",
      "UPDATEREADY",
      "URIError",
      "URL",
      "URLSearchParams",
      "URLUnencoded",
      "URL_MISMATCH_ERR",
      "UTC",
      "Uint16Array",
      "Uint32Array",
      "Uint8Array",
      "Uint8ClampedArray",
      "UserMessageHandler",
      "UserMessageHandlersNamespace",
      "UserProximityEvent",
      "VALIDATE_STATUS",
      "VALIDATION_ERR",
      "VARIABLES_RULE",
      "VENDOR",
      "VERSION",
      "VERSION_CHANGE",
      "VERSION_ERR",
      "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING",
      "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE",
      "VERTEX_ATTRIB_ARRAY_ENABLED",
      "VERTEX_ATTRIB_ARRAY_NORMALIZED",
      "VERTEX_ATTRIB_ARRAY_POINTER",
      "VERTEX_ATTRIB_ARRAY_SIZE",
      "VERTEX_ATTRIB_ARRAY_STRIDE",
      "VERTEX_ATTRIB_ARRAY_TYPE",
      "VERTEX_SHADER",
      "VERTICAL",
      "VERTICAL_AXIS",
      "VER_ERR",
      "VIEWPORT",
      "VIEWPORT_RULE",
      "VTTCue",
      "VTTRegion",
      "ValidityState",
      "VideoStreamTrack",
      "WEBKIT_FILTER_RULE",
      "WEBKIT_KEYFRAMES_RULE",
      "WEBKIT_KEYFRAME_RULE",
      "WEBKIT_REGION_RULE",
      "WRONG_DOCUMENT_ERR",
      "WaveShaperNode",
      "WeakMap",
      "WeakSet",
      "WebGLActiveInfo",
      "WebGLBuffer",
      "WebGLContextEvent",
      "WebGLFramebuffer",
      "WebGLProgram",
      "WebGLRenderbuffer",
      "WebGLRenderingContext",
      "WebGLShader",
      "WebGLShaderPrecisionFormat",
      "WebGLTexture",
      "WebGLUniformLocation",
      "WebGLVertexArray",
      "WebKitAnimationEvent",
      "WebKitBlobBuilder",
      "WebKitCSSFilterRule",
      "WebKitCSSFilterValue",
      "WebKitCSSKeyframeRule",
      "WebKitCSSKeyframesRule",
      "WebKitCSSMatrix",
      "WebKitCSSRegionRule",
      "WebKitCSSTransformValue",
      "WebKitDataCue",
      "WebKitGamepad",
      "WebKitMediaKeyError",
      "WebKitMediaKeyMessageEvent",
      "WebKitMediaKeySession",
      "WebKitMediaKeys",
      "WebKitMediaSource",
      "WebKitMutationObserver",
      "WebKitNamespace",
      "WebKitPlaybackTargetAvailabilityEvent",
      "WebKitPoint",
      "WebKitShadowRoot",
      "WebKitSourceBuffer",
      "WebKitSourceBufferList",
      "WebKitTransitionEvent",
      "WebSocket",
      "WheelEvent",
      "Window",
      "Worker",
      "XMLDocument",
      "XMLHttpRequest",
      "XMLHttpRequestEventTarget",
      "XMLHttpRequestException",
      "XMLHttpRequestProgressEvent",
      "XMLHttpRequestUpload",
      "XMLSerializer",
      "XMLStylesheetProcessingInstruction",
      "XPathEvaluator",
      "XPathException",
      "XPathExpression",
      "XPathNSResolver",
      "XPathResult",
      "XSLTProcessor",
      "ZERO",
      "_XD0M_",
      "_YD0M_",
      "__defineGetter__",
      "__defineSetter__",
      "__lookupGetter__",
      "__lookupSetter__",
      "__opera",
      "__proto__",
      "_browserjsran",
      "a",
      "aLink",
      "abbr",
      "abort",
      "abs",
      "absolute",
      "acceleration",
      "accelerationIncludingGravity",
      "accelerator",
      "accept",
      "acceptCharset",
      "acceptNode",
      "accessKey",
      "accessKeyLabel",
      "accuracy",
      "acos",
      "acosh",
      "action",
      "actionURL",
      "active",
      "activeCues",
      "activeElement",
      "activeSourceBuffers",
      "activeSourceCount",
      "activeTexture",
      "add",
      "addBehavior",
      "addCandidate",
      "addColorStop",
      "addCue",
      "addElement",
      "addEventListener",
      "addFilter",
      "addFromString",
      "addFromUri",
      "addIceCandidate",
      "addImport",
      "addListener",
      "addNamed",
      "addPageRule",
      "addPath",
      "addPointer",
      "addRange",
      "addRegion",
      "addRule",
      "addSearchEngine",
      "addSourceBuffer",
      "addStream",
      "addTextTrack",
      "addTrack",
      "addWakeLockListener",
      "addedNodes",
      "additionalName",
      "additiveSymbols",
      "addons",
      "adoptNode",
      "adr",
      "advance",
      "alert",
      "algorithm",
      "align",
      "align-content",
      "align-items",
      "align-self",
      "alignContent",
      "alignItems",
      "alignSelf",
      "alignmentBaseline",
      "alinkColor",
      "all",
      "allowFullscreen",
      "allowedDirections",
      "alpha",
      "alt",
      "altGraphKey",
      "altHtml",
      "altKey",
      "altLeft",
      "altitude",
      "altitudeAccuracy",
      "amplitude",
      "ancestorOrigins",
      "anchor",
      "anchorNode",
      "anchorOffset",
      "anchors",
      "angle",
      "animVal",
      "animate",
      "animatedInstanceRoot",
      "animatedNormalizedPathSegList",
      "animatedPathSegList",
      "animatedPoints",
      "animation",
      "animation-delay",
      "animation-direction",
      "animation-duration",
      "animation-fill-mode",
      "animation-iteration-count",
      "animation-name",
      "animation-play-state",
      "animation-timing-function",
      "animationDelay",
      "animationDirection",
      "animationDuration",
      "animationFillMode",
      "animationIterationCount",
      "animationName",
      "animationPlayState",
      "animationStartTime",
      "animationTimingFunction",
      "animationsPaused",
      "anniversary",
      "app",
      "appCodeName",
      "appMinorVersion",
      "appName",
      "appNotifications",
      "appVersion",
      "append",
      "appendBuffer",
      "appendChild",
      "appendData",
      "appendItem",
      "appendMedium",
      "appendNamed",
      "appendRule",
      "appendStream",
      "appendWindowEnd",
      "appendWindowStart",
      "applets",
      "applicationCache",
      "apply",
      "applyElement",
      "arc",
      "arcTo",
      "archive",
      "areas",
      "arguments",
      "arrayBuffer",
      "asin",
      "asinh",
      "assert",
      "assign",
      "async",
      "atEnd",
      "atan",
      "atan2",
      "atanh",
      "atob",
      "attachEvent",
      "attachShader",
      "attachments",
      "attack",
      "attrChange",
      "attrName",
      "attributeName",
      "attributeNamespace",
      "attributes",
      "audioTracks",
      "autoIncrement",
      "autobuffer",
      "autocapitalize",
      "autocomplete",
      "autocorrect",
      "autofocus",
      "autoplay",
      "availHeight",
      "availLeft",
      "availTop",
      "availWidth",
      "availability",
      "available",
      "aversion",
      "axes",
      "axis",
      "azimuth",
      "b",
      "back",
      "backface-visibility",
      "backfaceVisibility",
      "background",
      "background-attachment",
      "background-blend-mode",
      "background-clip",
      "background-color",
      "background-image",
      "background-origin",
      "background-position",
      "background-repeat",
      "background-size",
      "backgroundAttachment",
      "backgroundBlendMode",
      "backgroundClip",
      "backgroundColor",
      "backgroundImage",
      "backgroundOrigin",
      "backgroundPosition",
      "backgroundPositionX",
      "backgroundPositionY",
      "backgroundRepeat",
      "backgroundSize",
      "badInput",
      "balance",
      "baseFrequencyX",
      "baseFrequencyY",
      "baseNode",
      "baseOffset",
      "baseURI",
      "baseVal",
      "baselineShift",
      "battery",
      "bday",
      "beginElement",
      "beginElementAt",
      "beginPath",
      "behavior",
      "behaviorCookie",
      "behaviorPart",
      "behaviorUrns",
      "beta",
      "bezierCurveTo",
      "bgColor",
      "bgProperties",
      "bias",
      "big",
      "binaryType",
      "bind",
      "bindAttribLocation",
      "bindBuffer",
      "bindFramebuffer",
      "bindRenderbuffer",
      "bindTexture",
      "blendColor",
      "blendEquation",
      "blendEquationSeparate",
      "blendFunc",
      "blendFuncSeparate",
      "blink",
      "blob",
      "blockDirection",
      "blue",
      "blur",
      "body",
      "bodyUsed",
      "bold",
      "bookmarks",
      "booleanValue",
      "border",
      "border-bottom",
      "border-bottom-color",
      "border-bottom-left-radius",
      "border-bottom-right-radius",
      "border-bottom-style",
      "border-bottom-width",
      "border-collapse",
      "border-color",
      "border-image",
      "border-image-outset",
      "border-image-repeat",
      "border-image-slice",
      "border-image-source",
      "border-image-width",
      "border-left",
      "border-left-color",
      "border-left-style",
      "border-left-width",
      "border-radius",
      "border-right",
      "border-right-color",
      "border-right-style",
      "border-right-width",
      "border-spacing",
      "border-style",
      "border-top",
      "border-top-color",
      "border-top-left-radius",
      "border-top-right-radius",
      "border-top-style",
      "border-top-width",
      "border-width",
      "borderBottom",
      "borderBottomColor",
      "borderBottomLeftRadius",
      "borderBottomRightRadius",
      "borderBottomStyle",
      "borderBottomWidth",
      "borderCollapse",
      "borderColor",
      "borderColorDark",
      "borderColorLight",
      "borderImage",
      "borderImageOutset",
      "borderImageRepeat",
      "borderImageSlice",
      "borderImageSource",
      "borderImageWidth",
      "borderLeft",
      "borderLeftColor",
      "borderLeftStyle",
      "borderLeftWidth",
      "borderRadius",
      "borderRight",
      "borderRightColor",
      "borderRightStyle",
      "borderRightWidth",
      "borderSpacing",
      "borderStyle",
      "borderTop",
      "borderTopColor",
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderTopStyle",
      "borderTopWidth",
      "borderWidth",
      "bottom",
      "bottomMargin",
      "bound",
      "boundElements",
      "boundingClientRect",
      "boundingHeight",
      "boundingLeft",
      "boundingTop",
      "boundingWidth",
      "bounds",
      "box-decoration-break",
      "box-shadow",
      "box-sizing",
      "boxDecorationBreak",
      "boxShadow",
      "boxSizing",
      "breakAfter",
      "breakBefore",
      "breakInside",
      "browserLanguage",
      "btoa",
      "bubbles",
      "buffer",
      "bufferData",
      "bufferDepth",
      "bufferSize",
      "bufferSubData",
      "buffered",
      "bufferedAmount",
      "buildID",
      "buildNumber",
      "button",
      "buttonID",
      "buttons",
      "byteLength",
      "byteOffset",
      "c",
      "call",
      "caller",
      "canBeFormatted",
      "canBeMounted",
      "canBeShared",
      "canHaveChildren",
      "canHaveHTML",
      "canPlayType",
      "cancel",
      "cancelAnimationFrame",
      "cancelBubble",
      "cancelScheduledValues",
      "cancelable",
      "candidate",
      "canvas",
      "caption",
      "caption-side",
      "captionSide",
      "captureEvents",
      "captureStackTrace",
      "caretPositionFromPoint",
      "caretRangeFromPoint",
      "cast",
      "catch",
      "category",
      "cbrt",
      "cd",
      "ceil",
      "cellIndex",
      "cellPadding",
      "cellSpacing",
      "cells",
      "ch",
      "chOff",
      "chain",
      "challenge",
      "changedTouches",
      "channel",
      "channelCount",
      "channelCountMode",
      "channelInterpretation",
      "char",
      "charAt",
      "charCode",
      "charCodeAt",
      "charIndex",
      "characterSet",
      "charging",
      "chargingTime",
      "charset",
      "checkEnclosure",
      "checkFramebufferStatus",
      "checkIntersection",
      "checkValidity",
      "checked",
      "childElementCount",
      "childNodes",
      "children",
      "chrome",
      "ciphertext",
      "cite",
      "classList",
      "className",
      "classid",
      "clear",
      "clearAttributes",
      "clearColor",
      "clearData",
      "clearDepth",
      "clearImmediate",
      "clearInterval",
      "clearMarks",
      "clearMeasures",
      "clearParameters",
      "clearRect",
      "clearResourceTimings",
      "clearShadow",
      "clearStencil",
      "clearTimeout",
      "clearWatch",
      "click",
      "clickCount",
      "clientHeight",
      "clientInformation",
      "clientLeft",
      "clientRect",
      "clientRects",
      "clientTop",
      "clientWidth",
      "clientX",
      "clientY",
      "clip",
      "clip-path",
      "clip-rule",
      "clipBottom",
      "clipLeft",
      "clipPath",
      "clipPathUnits",
      "clipRight",
      "clipRule",
      "clipTop",
      "clipboardData",
      "clone",
      "cloneContents",
      "cloneNode",
      "cloneRange",
      "close",
      "closePath",
      "closed",
      "closest",
      "clz",
      "clz32",
      "cmp",
      "code",
      "codeBase",
      "codePointAt",
      "codeType",
      "colSpan",
      "collapse",
      "collapseToEnd",
      "collapseToStart",
      "collapsed",
      "collect",
      "colno",
      "color",
      "color-interpolation",
      "color-interpolation-filters",
      "colorDepth",
      "colorInterpolation",
      "colorInterpolationFilters",
      "colorMask",
      "colorType",
      "cols",
      "columnCount",
      "columnFill",
      "columnGap",
      "columnNumber",
      "columnRule",
      "columnRuleColor",
      "columnRuleStyle",
      "columnRuleWidth",
      "columnSpan",
      "columnWidth",
      "columns",
      "command",
      "commitPreferences",
      "commonAncestorContainer",
      "compact",
      "compareBoundaryPoints",
      "compareDocumentPosition",
      "compareEndPoints",
      "compareNode",
      "comparePoint",
      "compatMode",
      "compatible",
      "compile",
      "compileShader",
      "complete",
      "componentFromPoint",
      "compositionEndOffset",
      "compositionStartOffset",
      "compressedTexImage2D",
      "compressedTexSubImage2D",
      "concat",
      "conditionText",
      "coneInnerAngle",
      "coneOuterAngle",
      "coneOuterGain",
      "confirm",
      "confirmComposition",
      "confirmSiteSpecificTrackingException",
      "confirmWebWideTrackingException",
      "connect",
      "connectEnd",
      "connectStart",
      "connected",
      "connection",
      "connectionSpeed",
      "console",
      "consolidate",
      "constrictionActive",
      "constructor",
      "contactID",
      "contains",
      "containsNode",
      "content",
      "contentDocument",
      "contentEditable",
      "contentOverflow",
      "contentScriptType",
      "contentStyleType",
      "contentType",
      "contentWindow",
      "context",
      "contextMenu",
      "contextmenu",
      "continue",
      "continuous",
      "control",
      "controller",
      "controls",
      "convertToSpecifiedUnits",
      "cookie",
      "cookieEnabled",
      "coords",
      "copyFromChannel",
      "copyTexImage2D",
      "copyTexSubImage2D",
      "copyToChannel",
      "copyWithin",
      "correspondingElement",
      "correspondingUseElement",
      "cos",
      "cosh",
      "count",
      "counter-increment",
      "counter-reset",
      "counterIncrement",
      "counterReset",
      "cpuClass",
      "cpuSleepAllowed",
      "create",
      "createAnalyser",
      "createAnswer",
      "createAttribute",
      "createAttributeNS",
      "createBiquadFilter",
      "createBuffer",
      "createBufferSource",
      "createCDATASection",
      "createCSSStyleSheet",
      "createCaption",
      "createChannelMerger",
      "createChannelSplitter",
      "createComment",
      "createContextualFragment",
      "createControlRange",
      "createConvolver",
      "createDTMFSender",
      "createDataChannel",
      "createDelay",
      "createDelayNode",
      "createDocument",
      "createDocumentFragment",
      "createDocumentType",
      "createDynamicsCompressor",
      "createElement",
      "createElementNS",
      "createEntityReference",
      "createEvent",
      "createEventObject",
      "createExpression",
      "createFramebuffer",
      "createFunction",
      "createGain",
      "createGainNode",
      "createHTMLDocument",
      "createImageBitmap",
      "createImageData",
      "createIndex",
      "createJavaScriptNode",
      "createLinearGradient",
      "createMediaElementSource",
      "createMediaKeys",
      "createMediaStreamDestination",
      "createMediaStreamSource",
      "createMutableFile",
      "createNSResolver",
      "createNodeIterator",
      "createNotification",
      "createObjectStore",
      "createObjectURL",
      "createOffer",
      "createOscillator",
      "createPanner",
      "createPattern",
      "createPeriodicWave",
      "createPopup",
      "createProcessingInstruction",
      "createProgram",
      "createRadialGradient",
      "createRange",
      "createRangeCollection",
      "createRenderbuffer",
      "createSVGAngle",
      "createSVGLength",
      "createSVGMatrix",
      "createSVGNumber",
      "createSVGPathSegArcAbs",
      "createSVGPathSegArcRel",
      "createSVGPathSegClosePath",
      "createSVGPathSegCurvetoCubicAbs",
      "createSVGPathSegCurvetoCubicRel",
      "createSVGPathSegCurvetoCubicSmoothAbs",
      "createSVGPathSegCurvetoCubicSmoothRel",
      "createSVGPathSegCurvetoQuadraticAbs",
      "createSVGPathSegCurvetoQuadraticRel",
      "createSVGPathSegCurvetoQuadraticSmoothAbs",
      "createSVGPathSegCurvetoQuadraticSmoothRel",
      "createSVGPathSegLinetoAbs",
      "createSVGPathSegLinetoHorizontalAbs",
      "createSVGPathSegLinetoHorizontalRel",
      "createSVGPathSegLinetoRel",
      "createSVGPathSegLinetoVerticalAbs",
      "createSVGPathSegLinetoVerticalRel",
      "createSVGPathSegMovetoAbs",
      "createSVGPathSegMovetoRel",
      "createSVGPoint",
      "createSVGRect",
      "createSVGTransform",
      "createSVGTransformFromMatrix",
      "createScriptProcessor",
      "createSession",
      "createShader",
      "createShadowRoot",
      "createStereoPanner",
      "createStyleSheet",
      "createTBody",
      "createTFoot",
      "createTHead",
      "createTextNode",
      "createTextRange",
      "createTexture",
      "createTouch",
      "createTouchList",
      "createTreeWalker",
      "createWaveShaper",
      "creationTime",
      "crossOrigin",
      "crypto",
      "csi",
      "cssFloat",
      "cssRules",
      "cssText",
      "cssValueType",
      "ctrlKey",
      "ctrlLeft",
      "cues",
      "cullFace",
      "currentNode",
      "currentPage",
      "currentScale",
      "currentScript",
      "currentSrc",
      "currentState",
      "currentStyle",
      "currentTarget",
      "currentTime",
      "currentTranslate",
      "currentView",
      "cursor",
      "curve",
      "customError",
      "cx",
      "cy",
      "d",
      "data",
      "dataFld",
      "dataFormatAs",
      "dataPageSize",
      "dataSrc",
      "dataTransfer",
      "database",
      "dataset",
      "dateTime",
      "db",
      "debug",
      "debuggerEnabled",
      "declare",
      "decode",
      "decodeAudioData",
      "decodingInfo",
      "decodeURI",
      "decodeURIComponent",
      "decrypt",
      "default",
      "defaultCharset",
      "defaultChecked",
      "defaultMuted",
      "defaultPlaybackRate",
      "defaultPrevented",
      "defaultSelected",
      "defaultStatus",
      "defaultURL",
      "defaultValue",
      "defaultView",
      "defaultstatus",
      "defer",
      "defineMagicFunction",
      "defineMagicVariable",
      "defineProperties",
      "defineProperty",
      "delayTime",
      "delete",
      "deleteBuffer",
      "deleteCaption",
      "deleteCell",
      "deleteContents",
      "deleteData",
      "deleteDatabase",
      "deleteFramebuffer",
      "deleteFromDocument",
      "deleteIndex",
      "deleteMedium",
      "deleteObjectStore",
      "deleteProgram",
      "deleteRenderbuffer",
      "deleteRow",
      "deleteRule",
      "deleteShader",
      "deleteTFoot",
      "deleteTHead",
      "deleteTexture",
      "deliverChangeRecords",
      "delivery",
      "deliveryInfo",
      "deliveryStatus",
      "deliveryTimestamp",
      "delta",
      "deltaMode",
      "deltaX",
      "deltaY",
      "deltaZ",
      "depthFunc",
      "depthMask",
      "depthRange",
      "deriveBits",
      "deriveKey",
      "description",
      "deselectAll",
      "designMode",
      "destination",
      "destinationURL",
      "detach",
      "detachEvent",
      "detachShader",
      "detail",
      "detune",
      "devicePixelRatio",
      "deviceXDPI",
      "deviceYDPI",
      "diffuseConstant",
      "digest",
      "dimensions",
      "dir",
      "dirName",
      "direction",
      "dirxml",
      "disable",
      "disableVertexAttribArray",
      "disabled",
      "dischargingTime",
      "disconnect",
      "dispatchEvent",
      "display",
      "distanceModel",
      "divisor",
      "djsapi",
      "djsproxy",
      "doImport",
      "doNotTrack",
      "doScroll",
      "doctype",
      "document",
      "documentElement",
      "documentMode",
      "documentURI",
      "dolphin",
      "dolphinGameCenter",
      "dolphininfo",
      "dolphinmeta",
      "domComplete",
      "domContentLoadedEventEnd",
      "domContentLoadedEventStart",
      "domInteractive",
      "domLoading",
      "domain",
      "domainLookupEnd",
      "domainLookupStart",
      "dominant-baseline",
      "dominantBaseline",
      "done",
      "dopplerFactor",
      "download",
      "dragDrop",
      "draggable",
      "drawArrays",
      "drawArraysInstancedANGLE",
      "drawCustomFocusRing",
      "drawElements",
      "drawElementsInstancedANGLE",
      "drawFocusIfNeeded",
      "drawImage",
      "drawImageFromRect",
      "drawSystemFocusRing",
      "drawingBufferHeight",
      "drawingBufferWidth",
      "dropEffect",
      "droppedVideoFrames",
      "dropzone",
      "dump",
      "duplicate",
      "duration",
      "dvname",
      "dvnum",
      "dx",
      "dy",
      "dynsrc",
      "e",
      "edgeMode",
      "effectAllowed",
      "elapsedTime",
      "elementFromPoint",
      "elements",
      "elevation",
      "ellipse",
      "email",
      "embeds",
      "empty",
      "empty-cells",
      "emptyCells",
      "enable",
      "enableBackground",
      "enableStyleSheetsForSet",
      "enableVertexAttribArray",
      "enabled",
      "enabledPlugin",
      "encode",
      "encodeURI",
      "encodeURIComponent",
      "encoding",
      "encrypt",
      "enctype",
      "end",
      "endContainer",
      "endElement",
      "endElementAt",
      "endOfStream",
      "endOffset",
      "endTime",
      "ended",
      "endsWith",
      "entities",
      "entries",
      "entryType",
      "enumerate",
      "enumerateEditable",
      "error",
      "errorCode",
      "escape",
      "eval",
      "evaluate",
      "event",
      "eventPhase",
      "every",
      "exception",
      "exec",
      "execCommand",
      "execCommandShowHelp",
      "execScript",
      "exitFullscreen",
      "exitPointerLock",
      "exp",
      "expand",
      "expandEntityReferences",
      "expando",
      "expansion",
      "expiryDate",
      "explicitOriginalTarget",
      "expm1",
      "exponent",
      "exponentialRampToValueAtTime",
      "exportKey",
      "extend",
      "extensions",
      "extentNode",
      "extentOffset",
      "external",
      "externalResourcesRequired",
      "extractContents",
      "extractable",
      "f",
      "face",
      "factoryReset",
      "fallback",
      "familyName",
      "farthestViewportElement",
      "fastSeek",
      "fatal",
      "fetch",
      "fetchStart",
      "fftSize",
      "fgColor",
      "fileCreatedDate",
      "fileHandle",
      "fileModifiedDate",
      "fileName",
      "fileSize",
      "fileUpdatedDate",
      "filename",
      "files",
      "fill",
      "fill-opacity",
      "fill-rule",
      "fillOpacity",
      "fillRect",
      "fillRule",
      "fillStyle",
      "fillText",
      "filter",
      "filterResX",
      "filterResY",
      "filterUnits",
      "filters",
      "finally",
      "find",
      "findIndex",
      "findRule",
      "findText",
      "finish",
      "fireEvent",
      "firstChild",
      "firstElementChild",
      "firstPage",
      "fixed",
      "flex",
      "flex-basis",
      "flex-direction",
      "flex-flow",
      "flex-grow",
      "flex-shrink",
      "flex-wrap",
      "flexBasis",
      "flexDirection",
      "flexFlow",
      "flexGrow",
      "flexShrink",
      "flexWrap",
      "flipX",
      "flipY",
      "float",
      "flood-color",
      "flood-opacity",
      "floodColor",
      "floodOpacity",
      "floor",
      "flush",
      "focus",
      "focusNode",
      "focusOffset",
      "font",
      "font-family",
      "font-feature-settings",
      "font-kerning",
      "font-language-override",
      "font-size",
      "font-size-adjust",
      "font-stretch",
      "font-style",
      "font-synthesis",
      "font-variant",
      "font-variant-alternates",
      "font-variant-caps",
      "font-variant-east-asian",
      "font-variant-ligatures",
      "font-variant-numeric",
      "font-variant-position",
      "font-weight",
      "fontFamily",
      "fontFeatureSettings",
      "fontKerning",
      "fontLanguageOverride",
      "fontSize",
      "fontSizeAdjust",
      "fontSmoothingEnabled",
      "fontStretch",
      "fontStyle",
      "fontSynthesis",
      "fontVariant",
      "fontVariantAlternates",
      "fontVariantCaps",
      "fontVariantEastAsian",
      "fontVariantLigatures",
      "fontVariantNumeric",
      "fontVariantPosition",
      "fontWeight",
      "fontcolor",
      "fonts",
      "fontsize",
      "for",
      "forEach",
      "forceRedraw",
      "form",
      "formAction",
      "formEnctype",
      "formMethod",
      "formNoValidate",
      "formTarget",
      "format",
      "forms",
      "forward",
      "fr",
      "frame",
      "frameBorder",
      "frameElement",
      "frameSpacing",
      "framebufferRenderbuffer",
      "framebufferTexture2D",
      "frames",
      "freeSpace",
      "freeze",
      "frequency",
      "frequencyBinCount",
      "from",
      "fromCharCode",
      "fromCodePoint",
      "fromElement",
      "frontFace",
      "fround",
      "fullScreen",
      "fullscreenElement",
      "fullscreenEnabled",
      "fx",
      "fy",
      "gain",
      "gamepad",
      "gamma",
      "genderIdentity",
      "generateKey",
      "generateMipmap",
      "generateRequest",
      "geolocation",
      "gestureObject",
      "get",
      "getActiveAttrib",
      "getActiveUniform",
      "getAdjacentText",
      "getAll",
      "getAllResponseHeaders",
      "getAsFile",
      "getAsString",
      "getAttachedShaders",
      "getAttribLocation",
      "getAttribute",
      "getAttributeNS",
      "getAttributeNode",
      "getAttributeNodeNS",
      "getAudioTracks",
      "getBBox",
      "getBattery",
      "getBlob",
      "getBookmark",
      "getBoundingClientRect",
      "getBufferParameter",
      "getByteFrequencyData",
      "getByteTimeDomainData",
      "getCSSCanvasContext",
      "getCTM",
      "getCandidateWindowClientRect",
      "getChannelData",
      "getCharNumAtPosition",
      "getClientRect",
      "getClientRects",
      "getCompositionAlternatives",
      "getComputedStyle",
      "getComputedTextLength",
      "getConfiguration",
      "getContext",
      "getContextAttributes",
      "getCounterValue",
      "getCueAsHTML",
      "getCueById",
      "getCurrentPosition",
      "getCurrentTime",
      "getData",
      "getDatabaseNames",
      "getDate",
      "getDay",
      "getDefaultComputedStyle",
      "getDestinationInsertionPoints",
      "getDistributedNodes",
      "getEditable",
      "getElementById",
      "getElementsByClassName",
      "getElementsByName",
      "getElementsByTagName",
      "getElementsByTagNameNS",
      "getEnclosureList",
      "getEndPositionOfChar",
      "getEntries",
      "getEntriesByName",
      "getEntriesByType",
      "getError",
      "getExtension",
      "getExtentOfChar",
      "getFeature",
      "getFile",
      "getFloat32",
      "getFloat64",
      "getFloatFrequencyData",
      "getFloatTimeDomainData",
      "getFloatValue",
      "getFramebufferAttachmentParameter",
      "getFrequencyResponse",
      "getFullYear",
      "getGamepads",
      "getHours",
      "getImageData",
      "getInt16",
      "getInt32",
      "getInt8",
      "getIntersectionList",
      "getItem",
      "getItems",
      "getKey",
      "getLineDash",
      "getLocalStreams",
      "getMarks",
      "getMatchedCSSRules",
      "getMeasures",
      "getMetadata",
      "getMilliseconds",
      "getMinutes",
      "getModifierState",
      "getMonth",
      "getNamedItem",
      "getNamedItemNS",
      "getNotifier",
      "getNumberOfChars",
      "getOverrideHistoryNavigationMode",
      "getOverrideStyle",
      "getOwnPropertyDescriptor",
      "getOwnPropertyNames",
      "getOwnPropertySymbols",
      "getParameter",
      "getPathSegAtLength",
      "getPointAtLength",
      "getPreference",
      "getPreferenceDefault",
      "getPresentationAttribute",
      "getPreventDefault",
      "getProgramInfoLog",
      "getProgramParameter",
      "getPropertyCSSValue",
      "getPropertyPriority",
      "getPropertyShorthand",
      "getPropertyValue",
      "getPrototypeOf",
      "getRGBColorValue",
      "getRandomValues",
      "getRangeAt",
      "getReceivers",
      "getRectValue",
      "getRegistration",
      "getRemoteStreams",
      "getRenderbufferParameter",
      "getResponseHeader",
      "getRoot",
      "getRotationOfChar",
      "getSVGDocument",
      "getScreenCTM",
      "getSeconds",
      "getSelection",
      "getSenders",
      "getShaderInfoLog",
      "getShaderParameter",
      "getShaderPrecisionFormat",
      "getShaderSource",
      "getSimpleDuration",
      "getSiteIcons",
      "getSources",
      "getSpeculativeParserUrls",
      "getStartPositionOfChar",
      "getStartTime",
      "getStats",
      "getStorageUpdates",
      "getStreamById",
      "getStringValue",
      "getSubStringLength",
      "getSubscription",
      "getSupportedExtensions",
      "getTexParameter",
      "getTime",
      "getTimezoneOffset",
      "getTotalLength",
      "getTrackById",
      "getTracks",
      "getTransformToElement",
      "getUTCDate",
      "getUTCDay",
      "getUTCFullYear",
      "getUTCHours",
      "getUTCMilliseconds",
      "getUTCMinutes",
      "getUTCMonth",
      "getUTCSeconds",
      "getUint16",
      "getUint32",
      "getUint8",
      "getUniform",
      "getUniformLocation",
      "getUserMedia",
      "getValues",
      "getVarDate",
      "getVariableValue",
      "getVertexAttrib",
      "getVertexAttribOffset",
      "getVideoPlaybackQuality",
      "getVideoTracks",
      "getWakeLockState",
      "getYear",
      "givenName",
      "global",
      "globalAlpha",
      "globalCompositeOperation",
      "glyphOrientationHorizontal",
      "glyphOrientationVertical",
      "glyphRef",
      "go",
      "gradientTransform",
      "gradientUnits",
      "grammars",
      "green",
      "group",
      "groupCollapsed",
      "groupEnd",
      "hardwareConcurrency",
      "has",
      "hasAttribute",
      "hasAttributeNS",
      "hasAttributes",
      "hasChildNodes",
      "hasComposition",
      "hasExtension",
      "hasFeature",
      "hasFocus",
      "hasLayout",
      "hasOwnProperty",
      "hash",
      "head",
      "headers",
      "heading",
      "height",
      "hidden",
      "hide",
      "hideFocus",
      "high",
      "hint",
      "history",
      "honorificPrefix",
      "honorificSuffix",
      "horizontalOverflow",
      "host",
      "hostname",
      "href",
      "hreflang",
      "hspace",
      "html5TagCheckInerface",
      "htmlFor",
      "htmlText",
      "httpEquiv",
      "hwTimestamp",
      "hypot",
      "iccId",
      "iceConnectionState",
      "iceGatheringState",
      "icon",
      "id",
      "identifier",
      "identity",
      "ignoreBOM",
      "ignoreCase",
      "image-orientation",
      "image-rendering",
      "imageOrientation",
      "imageRendering",
      "images",
      "ime-mode",
      "imeMode",
      "implementation",
      "importKey",
      "importNode",
      "importStylesheet",
      "imports",
      "impp",
      "imul",
      "in1",
      "in2",
      "inBandMetadataTrackDispatchType",
      "inRange",
      "includes",
      "incremental",
      "indeterminate",
      "index",
      "indexNames",
      "indexOf",
      "indexedDB",
      "inertiaDestinationX",
      "inertiaDestinationY",
      "info",
      "init",
      "initAnimationEvent",
      "initBeforeLoadEvent",
      "initClipboardEvent",
      "initCloseEvent",
      "initCommandEvent",
      "initCompositionEvent",
      "initCustomEvent",
      "initData",
      "initDeviceMotionEvent",
      "initDeviceOrientationEvent",
      "initDragEvent",
      "initErrorEvent",
      "initEvent",
      "initFocusEvent",
      "initGestureEvent",
      "initHashChangeEvent",
      "initKeyEvent",
      "initKeyboardEvent",
      "initMSManipulationEvent",
      "initMessageEvent",
      "initMouseEvent",
      "initMouseScrollEvent",
      "initMouseWheelEvent",
      "initMutationEvent",
      "initNSMouseEvent",
      "initOverflowEvent",
      "initPageEvent",
      "initPageTransitionEvent",
      "initPointerEvent",
      "initPopStateEvent",
      "initProgressEvent",
      "initScrollAreaEvent",
      "initSimpleGestureEvent",
      "initStorageEvent",
      "initTextEvent",
      "initTimeEvent",
      "initTouchEvent",
      "initTransitionEvent",
      "initUIEvent",
      "initWebKitAnimationEvent",
      "initWebKitTransitionEvent",
      "initWebKitWheelEvent",
      "initWheelEvent",
      "initialTime",
      "initialize",
      "initiatorType",
      "inner",
      "innerHTML",
      "innerHeight",
      "innerText",
      "innerWidth",
      "input",
      "inputBuffer",
      "inputEncoding",
      "inputMethod",
      "insertAdjacentElement",
      "insertAdjacentHTML",
      "insertAdjacentText",
      "insertBefore",
      "insertCell",
      "insertData",
      "insertItemBefore",
      "insertNode",
      "insertRow",
      "insertRule",
      "instanceRoot",
      "intercept",
      "interimResults",
      "internalSubset",
      "intersectsNode",
      "interval",
      "invalidIteratorState",
      "inverse",
      "invertSelf",
      "is",
      "is2D",
      "isAlternate",
      "isArray",
      "isBingCurrentSearchDefault",
      "isBuffer",
      "isCandidateWindowVisible",
      "isChar",
      "isCollapsed",
      "isComposing",
      "isContentEditable",
      "isContentHandlerRegistered",
      "isContextLost",
      "isDefaultNamespace",
      "isDisabled",
      "isEnabled",
      "isEqual",
      "isEqualNode",
      "isExtensible",
      "isFinite",
      "isFramebuffer",
      "isFrozen",
      "isGenerator",
      "isId",
      "isInjected",
      "isInteger",
      "isMap",
      "isMultiLine",
      "isNaN",
      "isOpen",
      "isPointInFill",
      "isPointInPath",
      "isPointInRange",
      "isPointInStroke",
      "isPrefAlternate",
      "isPrimary",
      "isProgram",
      "isPropertyImplicit",
      "isProtocolHandlerRegistered",
      "isPrototypeOf",
      "isRenderbuffer",
      "isSafeInteger",
      "isSameNode",
      "isSealed",
      "isShader",
      "isSupported",
      "isTextEdit",
      "isTexture",
      "isTrusted",
      "isTypeSupported",
      "isView",
      "isolation",
      "italics",
      "item",
      "itemId",
      "itemProp",
      "itemRef",
      "itemScope",
      "itemType",
      "itemValue",
      "iterateNext",
      "iterator",
      "javaEnabled",
      "jobTitle",
      "join",
      "json",
      "justify-content",
      "justifyContent",
      "k1",
      "k2",
      "k3",
      "k4",
      "kernelMatrix",
      "kernelUnitLengthX",
      "kernelUnitLengthY",
      "kerning",
      "key",
      "keyCode",
      "keyFor",
      "keyIdentifier",
      "keyLightEnabled",
      "keyLocation",
      "keyPath",
      "keySystem",
      "keyText",
      "keyUsage",
      "keys",
      "keytype",
      "kind",
      "knee",
      "label",
      "labels",
      "lang",
      "language",
      "languages",
      "largeArcFlag",
      "lastChild",
      "lastElementChild",
      "lastEventId",
      "lastIndex",
      "lastIndexOf",
      "lastMatch",
      "lastMessageSubject",
      "lastMessageType",
      "lastModified",
      "lastModifiedDate",
      "lastPage",
      "lastParen",
      "lastState",
      "lastStyleSheetSet",
      "latitude",
      "layerX",
      "layerY",
      "layoutFlow",
      "layoutGrid",
      "layoutGridChar",
      "layoutGridLine",
      "layoutGridMode",
      "layoutGridType",
      "lbound",
      "left",
      "leftContext",
      "leftMargin",
      "length",
      "lengthAdjust",
      "lengthComputable",
      "letter-spacing",
      "letterSpacing",
      "level",
      "lighting-color",
      "lightingColor",
      "limitingConeAngle",
      "line",
      "line-height",
      "lineAlign",
      "lineBreak",
      "lineCap",
      "lineDashOffset",
      "lineHeight",
      "lineJoin",
      "lineNumber",
      "lineTo",
      "lineWidth",
      "linearRampToValueAtTime",
      "lineno",
      "link",
      "linkColor",
      "linkProgram",
      "links",
      "list",
      "list-style",
      "list-style-image",
      "list-style-position",
      "list-style-type",
      "listStyle",
      "listStyleImage",
      "listStylePosition",
      "listStyleType",
      "listener",
      "load",
      "loadEventEnd",
      "loadEventStart",
      "loadTimes",
      "loaded",
      "localDescription",
      "localName",
      "localStorage",
      "locale",
      "localeCompare",
      "location",
      "locationbar",
      "lock",
      "lockedFile",
      "log",
      "log10",
      "log1p",
      "log2",
      "logicalXDPI",
      "logicalYDPI",
      "longDesc",
      "longitude",
      "lookupNamespaceURI",
      "lookupPrefix",
      "loop",
      "loopEnd",
      "loopStart",
      "looping",
      "low",
      "lower",
      "lowerBound",
      "lowerOpen",
      "lowsrc",
      "m11",
      "m12",
      "m13",
      "m14",
      "m21",
      "m22",
      "m23",
      "m24",
      "m31",
      "m32",
      "m33",
      "m34",
      "m41",
      "m42",
      "m43",
      "m44",
      "manifest",
      "map",
      "mapping",
      "margin",
      "margin-bottom",
      "margin-left",
      "margin-right",
      "margin-top",
      "marginBottom",
      "marginHeight",
      "marginLeft",
      "marginRight",
      "marginTop",
      "marginWidth",
      "mark",
      "marker",
      "marker-end",
      "marker-mid",
      "marker-offset",
      "marker-start",
      "markerEnd",
      "markerHeight",
      "markerMid",
      "markerOffset",
      "markerStart",
      "markerUnits",
      "markerWidth",
      "marks",
      "mask",
      "mask-type",
      "maskContentUnits",
      "maskType",
      "maskUnits",
      "match",
      "matchMedia",
      "matchMedium",
      "matches",
      "matrix",
      "matrixTransform",
      "max",
      "max-height",
      "max-width",
      "maxAlternatives",
      "maxChannelCount",
      "maxConnectionsPerServer",
      "maxDecibels",
      "maxDistance",
      "maxHeight",
      "maxLength",
      "maxTouchPoints",
      "maxValue",
      "maxWidth",
      "measure",
      "measureText",
      "media",
      "mediaCapabilities",
      "mediaDevices",
      "mediaElement",
      "mediaGroup",
      "mediaKeys",
      "mediaText",
      "meetOrSlice",
      "memory",
      "menubar",
      "mergeAttributes",
      "message",
      "messageClass",
      "messageHandlers",
      "metaKey",
      "method",
      "mimeType",
      "mimeTypes",
      "min",
      "min-height",
      "min-width",
      "minDecibels",
      "minHeight",
      "minValue",
      "minWidth",
      "miterLimit",
      "mix-blend-mode",
      "mixBlendMode",
      "mode",
      "modify",
      "mount",
      "move",
      "moveBy",
      "moveEnd",
      "moveFirst",
      "moveFocusDown",
      "moveFocusLeft",
      "moveFocusRight",
      "moveFocusUp",
      "moveNext",
      "moveRow",
      "moveStart",
      "moveTo",
      "moveToBookmark",
      "moveToElementText",
      "moveToPoint",
      "mozAdd",
      "mozAnimationStartTime",
      "mozAnon",
      "mozApps",
      "mozAudioCaptured",
      "mozAudioChannelType",
      "mozAutoplayEnabled",
      "mozCancelAnimationFrame",
      "mozCancelFullScreen",
      "mozCancelRequestAnimationFrame",
      "mozCaptureStream",
      "mozCaptureStreamUntilEnded",
      "mozClearDataAt",
      "mozContact",
      "mozContacts",
      "mozCreateFileHandle",
      "mozCurrentTransform",
      "mozCurrentTransformInverse",
      "mozCursor",
      "mozDash",
      "mozDashOffset",
      "mozDecodedFrames",
      "mozExitPointerLock",
      "mozFillRule",
      "mozFragmentEnd",
      "mozFrameDelay",
      "mozFullScreen",
      "mozFullScreenElement",
      "mozFullScreenEnabled",
      "mozGetAll",
      "mozGetAllKeys",
      "mozGetAsFile",
      "mozGetDataAt",
      "mozGetMetadata",
      "mozGetUserMedia",
      "mozHasAudio",
      "mozHasItem",
      "mozHidden",
      "mozImageSmoothingEnabled",
      "mozIndexedDB",
      "mozInnerScreenX",
      "mozInnerScreenY",
      "mozInputSource",
      "mozIsTextField",
      "mozItem",
      "mozItemCount",
      "mozItems",
      "mozLength",
      "mozLockOrientation",
      "mozMatchesSelector",
      "mozMovementX",
      "mozMovementY",
      "mozOpaque",
      "mozOrientation",
      "mozPaintCount",
      "mozPaintedFrames",
      "mozParsedFrames",
      "mozPay",
      "mozPointerLockElement",
      "mozPresentedFrames",
      "mozPreservesPitch",
      "mozPressure",
      "mozPrintCallback",
      "mozRTCIceCandidate",
      "mozRTCPeerConnection",
      "mozRTCSessionDescription",
      "mozRemove",
      "mozRequestAnimationFrame",
      "mozRequestFullScreen",
      "mozRequestPointerLock",
      "mozSetDataAt",
      "mozSetImageElement",
      "mozSourceNode",
      "mozSrcObject",
      "mozSystem",
      "mozTCPSocket",
      "mozTextStyle",
      "mozTypesAt",
      "mozUnlockOrientation",
      "mozUserCancelled",
      "mozVisibilityState",
      "msAnimation",
      "msAnimationDelay",
      "msAnimationDirection",
      "msAnimationDuration",
      "msAnimationFillMode",
      "msAnimationIterationCount",
      "msAnimationName",
      "msAnimationPlayState",
      "msAnimationStartTime",
      "msAnimationTimingFunction",
      "msBackfaceVisibility",
      "msBlockProgression",
      "msCSSOMElementFloatMetrics",
      "msCaching",
      "msCachingEnabled",
      "msCancelRequestAnimationFrame",
      "msCapsLockWarningOff",
      "msClearImmediate",
      "msClose",
      "msContentZoomChaining",
      "msContentZoomFactor",
      "msContentZoomLimit",
      "msContentZoomLimitMax",
      "msContentZoomLimitMin",
      "msContentZoomSnap",
      "msContentZoomSnapPoints",
      "msContentZoomSnapType",
      "msContentZooming",
      "msConvertURL",
      "msCrypto",
      "msDoNotTrack",
      "msElementsFromPoint",
      "msElementsFromRect",
      "msExitFullscreen",
      "msExtendedCode",
      "msFillRule",
      "msFirstPaint",
      "msFlex",
      "msFlexAlign",
      "msFlexDirection",
      "msFlexFlow",
      "msFlexItemAlign",
      "msFlexLinePack",
      "msFlexNegative",
      "msFlexOrder",
      "msFlexPack",
      "msFlexPositive",
      "msFlexPreferredSize",
      "msFlexWrap",
      "msFlowFrom",
      "msFlowInto",
      "msFontFeatureSettings",
      "msFullscreenElement",
      "msFullscreenEnabled",
      "msGetInputContext",
      "msGetRegionContent",
      "msGetUntransformedBounds",
      "msGraphicsTrustStatus",
      "msGridColumn",
      "msGridColumnAlign",
      "msGridColumnSpan",
      "msGridColumns",
      "msGridRow",
      "msGridRowAlign",
      "msGridRowSpan",
      "msGridRows",
      "msHidden",
      "msHighContrastAdjust",
      "msHyphenateLimitChars",
      "msHyphenateLimitLines",
      "msHyphenateLimitZone",
      "msHyphens",
      "msImageSmoothingEnabled",
      "msImeAlign",
      "msIndexedDB",
      "msInterpolationMode",
      "msIsStaticHTML",
      "msKeySystem",
      "msKeys",
      "msLaunchUri",
      "msLockOrientation",
      "msManipulationViewsEnabled",
      "msMatchMedia",
      "msMatchesSelector",
      "msMaxTouchPoints",
      "msOrientation",
      "msOverflowStyle",
      "msPerspective",
      "msPerspectiveOrigin",
      "msPlayToDisabled",
      "msPlayToPreferredSourceUri",
      "msPlayToPrimary",
      "msPointerEnabled",
      "msRegionOverflow",
      "msReleasePointerCapture",
      "msRequestAnimationFrame",
      "msRequestFullscreen",
      "msSaveBlob",
      "msSaveOrOpenBlob",
      "msScrollChaining",
      "msScrollLimit",
      "msScrollLimitXMax",
      "msScrollLimitXMin",
      "msScrollLimitYMax",
      "msScrollLimitYMin",
      "msScrollRails",
      "msScrollSnapPointsX",
      "msScrollSnapPointsY",
      "msScrollSnapType",
      "msScrollSnapX",
      "msScrollSnapY",
      "msScrollTranslation",
      "msSetImmediate",
      "msSetMediaKeys",
      "msSetPointerCapture",
      "msTextCombineHorizontal",
      "msTextSizeAdjust",
      "msToBlob",
      "msTouchAction",
      "msTouchSelect",
      "msTraceAsyncCallbackCompleted",
      "msTraceAsyncCallbackStarting",
      "msTraceAsyncOperationCompleted",
      "msTraceAsyncOperationStarting",
      "msTransform",
      "msTransformOrigin",
      "msTransformStyle",
      "msTransition",
      "msTransitionDelay",
      "msTransitionDuration",
      "msTransitionProperty",
      "msTransitionTimingFunction",
      "msUnlockOrientation",
      "msUpdateAsyncCallbackRelation",
      "msUserSelect",
      "msVisibilityState",
      "msWrapFlow",
      "msWrapMargin",
      "msWrapThrough",
      "msWriteProfilerMark",
      "msZoom",
      "msZoomTo",
      "mt",
      "multiEntry",
      "multiSelectionObj",
      "multiline",
      "multiple",
      "multiply",
      "multiplySelf",
      "mutableFile",
      "muted",
      "n",
      "name",
      "nameProp",
      "namedItem",
      "namedRecordset",
      "names",
      "namespaceURI",
      "namespaces",
      "naturalHeight",
      "naturalWidth",
      "navigate",
      "navigation",
      "navigationMode",
      "navigationStart",
      "navigator",
      "near",
      "nearestViewportElement",
      "negative",
      "netscape",
      "networkState",
      "newScale",
      "newTranslate",
      "newURL",
      "newValue",
      "newValueSpecifiedUnits",
      "newVersion",
      "newhome",
      "next",
      "nextElementSibling",
      "nextNode",
      "nextPage",
      "nextSibling",
      "nickname",
      "noHref",
      "noResize",
      "noShade",
      "noValidate",
      "noWrap",
      "nodeName",
      "nodeType",
      "nodeValue",
      "normalize",
      "normalizedPathSegList",
      "notationName",
      "notations",
      "note",
      "noteGrainOn",
      "noteOff",
      "noteOn",
      "now",
      "numOctaves",
      "number",
      "numberOfChannels",
      "numberOfInputs",
      "numberOfItems",
      "numberOfOutputs",
      "numberValue",
      "oMatchesSelector",
      "object",
      "object-fit",
      "object-position",
      "objectFit",
      "objectPosition",
      "objectStore",
      "objectStoreNames",
      "observe",
      "of",
      "offscreenBuffering",
      "offset",
      "offsetHeight",
      "offsetLeft",
      "offsetNode",
      "offsetParent",
      "offsetTop",
      "offsetWidth",
      "offsetX",
      "offsetY",
      "ok",
      "oldURL",
      "oldValue",
      "oldVersion",
      "olderShadowRoot",
      "onLine",
      "onabort",
      "onactivate",
      "onactive",
      "onaddstream",
      "onaddtrack",
      "onafterprint",
      "onafterscriptexecute",
      "onafterupdate",
      "onaudioend",
      "onaudioprocess",
      "onaudiostart",
      "onautocomplete",
      "onautocompleteerror",
      "onbeforeactivate",
      "onbeforecopy",
      "onbeforecut",
      "onbeforedeactivate",
      "onbeforeeditfocus",
      "onbeforepaste",
      "onbeforeprint",
      "onbeforescriptexecute",
      "onbeforeunload",
      "onbeforeupdate",
      "onblocked",
      "onblur",
      "onbounce",
      "onboundary",
      "oncached",
      "oncancel",
      "oncandidatewindowhide",
      "oncandidatewindowshow",
      "oncandidatewindowupdate",
      "oncanplay",
      "oncanplaythrough",
      "oncellchange",
      "onchange",
      "onchargingchange",
      "onchargingtimechange",
      "onchecking",
      "onclick",
      "onclose",
      "oncompassneedscalibration",
      "oncomplete",
      "oncontextmenu",
      "oncontrolselect",
      "oncopy",
      "oncuechange",
      "oncut",
      "ondataavailable",
      "ondatachannel",
      "ondatasetchanged",
      "ondatasetcomplete",
      "ondblclick",
      "ondeactivate",
      "ondevicelight",
      "ondevicemotion",
      "ondeviceorientation",
      "ondeviceproximity",
      "ondischargingtimechange",
      "ondisplay",
      "ondownloading",
      "ondrag",
      "ondragend",
      "ondragenter",
      "ondragleave",
      "ondragover",
      "ondragstart",
      "ondrop",
      "ondurationchange",
      "onemptied",
      "onencrypted",
      "onend",
      "onended",
      "onenter",
      "onerror",
      "onerrorupdate",
      "onexit",
      "onfilterchange",
      "onfinish",
      "onfocus",
      "onfocusin",
      "onfocusout",
      "onfullscreenchange",
      "onfullscreenerror",
      "ongesturechange",
      "ongestureend",
      "ongesturestart",
      "ongotpointercapture",
      "onhashchange",
      "onhelp",
      "onicecandidate",
      "oniceconnectionstatechange",
      "oninactive",
      "oninput",
      "oninvalid",
      "onkeydown",
      "onkeypress",
      "onkeyup",
      "onlanguagechange",
      "onlayoutcomplete",
      "onlevelchange",
      "onload",
      "onloadeddata",
      "onloadedmetadata",
      "onloadend",
      "onloadstart",
      "onlosecapture",
      "onlostpointercapture",
      "only",
      "onmark",
      "onmessage",
      "onmousedown",
      "onmouseenter",
      "onmouseleave",
      "onmousemove",
      "onmouseout",
      "onmouseover",
      "onmouseup",
      "onmousewheel",
      "onmove",
      "onmoveend",
      "onmovestart",
      "onmozfullscreenchange",
      "onmozfullscreenerror",
      "onmozorientationchange",
      "onmozpointerlockchange",
      "onmozpointerlockerror",
      "onmscontentzoom",
      "onmsfullscreenchange",
      "onmsfullscreenerror",
      "onmsgesturechange",
      "onmsgesturedoubletap",
      "onmsgestureend",
      "onmsgesturehold",
      "onmsgesturestart",
      "onmsgesturetap",
      "onmsgotpointercapture",
      "onmsinertiastart",
      "onmslostpointercapture",
      "onmsmanipulationstatechanged",
      "onmsneedkey",
      "onmsorientationchange",
      "onmspointercancel",
      "onmspointerdown",
      "onmspointerenter",
      "onmspointerhover",
      "onmspointerleave",
      "onmspointermove",
      "onmspointerout",
      "onmspointerover",
      "onmspointerup",
      "onmssitemodejumplistitemremoved",
      "onmsthumbnailclick",
      "onnegotiationneeded",
      "onnomatch",
      "onnoupdate",
      "onobsolete",
      "onoffline",
      "ononline",
      "onopen",
      "onorientationchange",
      "onpagechange",
      "onpagehide",
      "onpageshow",
      "onpaste",
      "onpause",
      "onplay",
      "onplaying",
      "onpluginstreamstart",
      "onpointercancel",
      "onpointerdown",
      "onpointerenter",
      "onpointerleave",
      "onpointerlockchange",
      "onpointerlockerror",
      "onpointermove",
      "onpointerout",
      "onpointerover",
      "onpointerup",
      "onpopstate",
      "onprogress",
      "onpropertychange",
      "onratechange",
      "onreadystatechange",
      "onremovestream",
      "onremovetrack",
      "onreset",
      "onresize",
      "onresizeend",
      "onresizestart",
      "onresourcetimingbufferfull",
      "onresult",
      "onresume",
      "onrowenter",
      "onrowexit",
      "onrowsdelete",
      "onrowsinserted",
      "onscroll",
      "onsearch",
      "onseeked",
      "onseeking",
      "onselect",
      "onselectionchange",
      "onselectstart",
      "onshow",
      "onsignalingstatechange",
      "onsoundend",
      "onsoundstart",
      "onspeechend",
      "onspeechstart",
      "onstalled",
      "onstart",
      "onstatechange",
      "onstop",
      "onstorage",
      "onstoragecommit",
      "onsubmit",
      "onsuccess",
      "onsuspend",
      "ontextinput",
      "ontimeout",
      "ontimeupdate",
      "ontoggle",
      "ontouchcancel",
      "ontouchend",
      "ontouchmove",
      "ontouchstart",
      "ontransitionend",
      "onunload",
      "onupdateready",
      "onupgradeneeded",
      "onuserproximity",
      "onversionchange",
      "onvoiceschanged",
      "onvolumechange",
      "onwaiting",
      "onwarning",
      "onwebkitanimationend",
      "onwebkitanimationiteration",
      "onwebkitanimationstart",
      "onwebkitcurrentplaybacktargetiswirelesschanged",
      "onwebkitfullscreenchange",
      "onwebkitfullscreenerror",
      "onwebkitkeyadded",
      "onwebkitkeyerror",
      "onwebkitkeymessage",
      "onwebkitneedkey",
      "onwebkitorientationchange",
      "onwebkitplaybacktargetavailabilitychanged",
      "onwebkitpointerlockchange",
      "onwebkitpointerlockerror",
      "onwebkitresourcetimingbufferfull",
      "onwebkittransitionend",
      "onwheel",
      "onzoom",
      "opacity",
      "open",
      "openCursor",
      "openDatabase",
      "openKeyCursor",
      "opener",
      "opera",
      "operationType",
      "operator",
      "opr",
      "optimum",
      "options",
      "order",
      "orderX",
      "orderY",
      "ordered",
      "org",
      "orient",
      "orientAngle",
      "orientType",
      "orientation",
      "origin",
      "originalTarget",
      "orphans",
      "oscpu",
      "outerHTML",
      "outerHeight",
      "outerText",
      "outerWidth",
      "outline",
      "outline-color",
      "outline-offset",
      "outline-style",
      "outline-width",
      "outlineColor",
      "outlineOffset",
      "outlineStyle",
      "outlineWidth",
      "outputBuffer",
      "overflow",
      "overflow-x",
      "overflow-y",
      "overflowX",
      "overflowY",
      "overrideMimeType",
      "oversample",
      "ownerDocument",
      "ownerElement",
      "ownerNode",
      "ownerRule",
      "ownerSVGElement",
      "owningElement",
      "p1",
      "p2",
      "p3",
      "p4",
      "pad",
      "padding",
      "padding-bottom",
      "padding-left",
      "padding-right",
      "padding-top",
      "paddingBottom",
      "paddingLeft",
      "paddingRight",
      "paddingTop",
      "page",
      "page-break-after",
      "page-break-before",
      "page-break-inside",
      "pageBreakAfter",
      "pageBreakBefore",
      "pageBreakInside",
      "pageCount",
      "pageX",
      "pageXOffset",
      "pageY",
      "pageYOffset",
      "pages",
      "paint-order",
      "paintOrder",
      "paintRequests",
      "paintType",
      "palette",
      "panningModel",
      "parent",
      "parentElement",
      "parentNode",
      "parentRule",
      "parentStyleSheet",
      "parentTextEdit",
      "parentWindow",
      "parse",
      "parseFloat",
      "parseFromString",
      "parseInt",
      "participants",
      "password",
      "pasteHTML",
      "path",
      "pathLength",
      "pathSegList",
      "pathSegType",
      "pathSegTypeAsLetter",
      "pathname",
      "pattern",
      "patternContentUnits",
      "patternMismatch",
      "patternTransform",
      "patternUnits",
      "pause",
      "pauseAnimations",
      "pauseOnExit",
      "paused",
      "pending",
      "performance",
      "permission",
      "persisted",
      "personalbar",
      "perspective",
      "perspective-origin",
      "perspectiveOrigin",
      "phoneticFamilyName",
      "phoneticGivenName",
      "photo",
      "ping",
      "pitch",
      "pixelBottom",
      "pixelDepth",
      "pixelHeight",
      "pixelLeft",
      "pixelRight",
      "pixelStorei",
      "pixelTop",
      "pixelUnitToMillimeterX",
      "pixelUnitToMillimeterY",
      "pixelWidth",
      "placeholder",
      "platform",
      "play",
      "playbackRate",
      "playbackState",
      "playbackTime",
      "played",
      "plugins",
      "pluginspage",
      "pname",
      "pointer-events",
      "pointerBeforeReferenceNode",
      "pointerEnabled",
      "pointerEvents",
      "pointerId",
      "pointerLockElement",
      "pointerType",
      "points",
      "pointsAtX",
      "pointsAtY",
      "pointsAtZ",
      "polygonOffset",
      "pop",
      "popupWindowFeatures",
      "popupWindowName",
      "popupWindowURI",
      "port",
      "port1",
      "port2",
      "ports",
      "posBottom",
      "posHeight",
      "posLeft",
      "posRight",
      "posTop",
      "posWidth",
      "position",
      "positionAlign",
      "postError",
      "postMessage",
      "poster",
      "pow",
      "powerOff",
      "preMultiplySelf",
      "precision",
      "preferredStyleSheetSet",
      "preferredStylesheetSet",
      "prefix",
      "preload",
      "preserveAlpha",
      "preserveAspectRatio",
      "preserveAspectRatioString",
      "pressed",
      "pressure",
      "prevValue",
      "preventDefault",
      "preventExtensions",
      "previousElementSibling",
      "previousNode",
      "previousPage",
      "previousScale",
      "previousSibling",
      "previousTranslate",
      "primaryKey",
      "primitiveType",
      "primitiveUnits",
      "principals",
      "print",
      "privateKey",
      "probablySupportsContext",
      "process",
      "processIceMessage",
      "product",
      "productSub",
      "profile",
      "profileEnd",
      "profiles",
      "prompt",
      "properties",
      "propertyIsEnumerable",
      "propertyName",
      "protocol",
      "protocolLong",
      "prototype",
      "pseudoClass",
      "pseudoElement",
      "publicId",
      "publicKey",
      "published",
      "push",
      "pushNotification",
      "pushState",
      "put",
      "putImageData",
      "quadraticCurveTo",
      "qualifier",
      "queryCommandEnabled",
      "queryCommandIndeterm",
      "queryCommandState",
      "queryCommandSupported",
      "queryCommandText",
      "queryCommandValue",
      "querySelector",
      "querySelectorAll",
      "quote",
      "quotes",
      "r",
      "r1",
      "r2",
      "race",
      "radiogroup",
      "radiusX",
      "radiusY",
      "random",
      "range",
      "rangeCount",
      "rangeMax",
      "rangeMin",
      "rangeOffset",
      "rangeOverflow",
      "rangeParent",
      "rangeUnderflow",
      "rate",
      "ratio",
      "raw",
      "read",
      "readAsArrayBuffer",
      "readAsBinaryString",
      "readAsBlob",
      "readAsDataURL",
      "readAsText",
      "readOnly",
      "readPixels",
      "readReportRequested",
      "readyState",
      "reason",
      "reboot",
      "receiver",
      "receivers",
      "recordNumber",
      "recordset",
      "rect",
      "red",
      "redirectCount",
      "redirectEnd",
      "redirectStart",
      "reduce",
      "reduceRight",
      "reduction",
      "refDistance",
      "refX",
      "refY",
      "referenceNode",
      "referrer",
      "refresh",
      "region",
      "regionAnchorX",
      "regionAnchorY",
      "regionId",
      "regions",
      "register",
      "registerContentHandler",
      "registerElement",
      "registerProtocolHandler",
      "reject",
      "rel",
      "relList",
      "relatedNode",
      "relatedTarget",
      "release",
      "releaseCapture",
      "releaseEvents",
      "releasePointerCapture",
      "releaseShaderCompiler",
      "reliable",
      "reload",
      "remainingSpace",
      "remoteDescription",
      "remove",
      "removeAllRanges",
      "removeAttribute",
      "removeAttributeNS",
      "removeAttributeNode",
      "removeBehavior",
      "removeChild",
      "removeCue",
      "removeEventListener",
      "removeFilter",
      "removeImport",
      "removeItem",
      "removeListener",
      "removeNamedItem",
      "removeNamedItemNS",
      "removeNode",
      "removeParameter",
      "removeProperty",
      "removeRange",
      "removeRegion",
      "removeRule",
      "removeSiteSpecificTrackingException",
      "removeSourceBuffer",
      "removeStream",
      "removeTrack",
      "removeVariable",
      "removeWakeLockListener",
      "removeWebWideTrackingException",
      "removedNodes",
      "renderbufferStorage",
      "renderedBuffer",
      "renderingMode",
      "repeat",
      "replace",
      "replaceAdjacentText",
      "replaceChild",
      "replaceData",
      "replaceId",
      "replaceItem",
      "replaceNode",
      "replaceState",
      "replaceTrack",
      "replaceWholeText",
      "reportValidity",
      "requestAnimationFrame",
      "requestAutocomplete",
      "requestData",
      "requestFullscreen",
      "requestMediaKeySystemAccess",
      "requestPermission",
      "requestPointerLock",
      "requestStart",
      "requestingWindow",
      "required",
      "requiredExtensions",
      "requiredFeatures",
      "reset",
      "resetTransform",
      "resize",
      "resizeBy",
      "resizeTo",
      "resolve",
      "response",
      "responseBody",
      "responseEnd",
      "responseStart",
      "responseText",
      "responseType",
      "responseURL",
      "responseXML",
      "restore",
      "result",
      "resultType",
      "resume",
      "returnValue",
      "rev",
      "reverse",
      "reversed",
      "revocable",
      "revokeObjectURL",
      "rgbColor",
      "right",
      "rightContext",
      "rightMargin",
      "rolloffFactor",
      "root",
      "rootElement",
      "rotate",
      "rotateAxisAngle",
      "rotateAxisAngleSelf",
      "rotateFromVector",
      "rotateFromVectorSelf",
      "rotateSelf",
      "rotation",
      "rotationRate",
      "round",
      "rowIndex",
      "rowSpan",
      "rows",
      "rubyAlign",
      "rubyOverhang",
      "rubyPosition",
      "rules",
      "runtime",
      "runtimeStyle",
      "rx",
      "ry",
      "safari",
      "sampleCoverage",
      "sampleRate",
      "sandbox",
      "save",
      "scale",
      "scale3d",
      "scale3dSelf",
      "scaleNonUniform",
      "scaleNonUniformSelf",
      "scaleSelf",
      "scheme",
      "scissor",
      "scope",
      "scopeName",
      "scoped",
      "screen",
      "screenBrightness",
      "screenEnabled",
      "screenLeft",
      "screenPixelToMillimeterX",
      "screenPixelToMillimeterY",
      "screenTop",
      "screenX",
      "screenY",
      "scripts",
      "scroll",
      "scroll-behavior",
      "scrollAmount",
      "scrollBehavior",
      "scrollBy",
      "scrollByLines",
      "scrollByPages",
      "scrollDelay",
      "scrollHeight",
      "scrollIntoView",
      "scrollIntoViewIfNeeded",
      "scrollLeft",
      "scrollLeftMax",
      "scrollMaxX",
      "scrollMaxY",
      "scrollTo",
      "scrollTop",
      "scrollTopMax",
      "scrollWidth",
      "scrollX",
      "scrollY",
      "scrollbar3dLightColor",
      "scrollbarArrowColor",
      "scrollbarBaseColor",
      "scrollbarDarkShadowColor",
      "scrollbarFaceColor",
      "scrollbarHighlightColor",
      "scrollbarShadowColor",
      "scrollbarTrackColor",
      "scrollbars",
      "scrolling",
      "sdp",
      "sdpMLineIndex",
      "sdpMid",
      "seal",
      "search",
      "searchBox",
      "searchBoxJavaBridge_",
      "searchParams",
      "sectionRowIndex",
      "secureConnectionStart",
      "security",
      "seed",
      "seekable",
      "seeking",
      "select",
      "selectAllChildren",
      "selectNode",
      "selectNodeContents",
      "selectNodes",
      "selectSingleNode",
      "selectSubString",
      "selected",
      "selectedIndex",
      "selectedOptions",
      "selectedStyleSheetSet",
      "selectedStylesheetSet",
      "selection",
      "selectionDirection",
      "selectionEnd",
      "selectionStart",
      "selector",
      "selectorText",
      "self",
      "send",
      "sendAsBinary",
      "sendBeacon",
      "sender",
      "sentTimestamp",
      "separator",
      "serializeToString",
      "serviceWorker",
      "sessionId",
      "sessionStorage",
      "set",
      "setActive",
      "setAlpha",
      "setAttribute",
      "setAttributeNS",
      "setAttributeNode",
      "setAttributeNodeNS",
      "setBaseAndExtent",
      "setBingCurrentSearchDefault",
      "setCapture",
      "setColor",
      "setCompositeOperation",
      "setCurrentTime",
      "setCustomValidity",
      "setData",
      "setDate",
      "setDragImage",
      "setEnd",
      "setEndAfter",
      "setEndBefore",
      "setEndPoint",
      "setFillColor",
      "setFilterRes",
      "setFloat32",
      "setFloat64",
      "setFloatValue",
      "setFullYear",
      "setHours",
      "setImmediate",
      "setInt16",
      "setInt32",
      "setInt8",
      "setInterval",
      "setItem",
      "setLineCap",
      "setLineDash",
      "setLineJoin",
      "setLineWidth",
      "setLocalDescription",
      "setMatrix",
      "setMatrixValue",
      "setMediaKeys",
      "setMilliseconds",
      "setMinutes",
      "setMiterLimit",
      "setMonth",
      "setNamedItem",
      "setNamedItemNS",
      "setNonUserCodeExceptions",
      "setOrientToAngle",
      "setOrientToAuto",
      "setOrientation",
      "setOverrideHistoryNavigationMode",
      "setPaint",
      "setParameter",
      "setPeriodicWave",
      "setPointerCapture",
      "setPosition",
      "setPreference",
      "setProperty",
      "setPrototypeOf",
      "setRGBColor",
      "setRGBColorICCColor",
      "setRadius",
      "setRangeText",
      "setRemoteDescription",
      "setRequestHeader",
      "setResizable",
      "setResourceTimingBufferSize",
      "setRotate",
      "setScale",
      "setSeconds",
      "setSelectionRange",
      "setServerCertificate",
      "setShadow",
      "setSkewX",
      "setSkewY",
      "setStart",
      "setStartAfter",
      "setStartBefore",
      "setStdDeviation",
      "setStringValue",
      "setStrokeColor",
      "setSuggestResult",
      "setTargetAtTime",
      "setTargetValueAtTime",
      "setTime",
      "setTimeout",
      "setTransform",
      "setTranslate",
      "setUTCDate",
      "setUTCFullYear",
      "setUTCHours",
      "setUTCMilliseconds",
      "setUTCMinutes",
      "setUTCMonth",
      "setUTCSeconds",
      "setUint16",
      "setUint32",
      "setUint8",
      "setUri",
      "setValueAtTime",
      "setValueCurveAtTime",
      "setVariable",
      "setVelocity",
      "setVersion",
      "setYear",
      "settingName",
      "settingValue",
      "sex",
      "shaderSource",
      "shadowBlur",
      "shadowColor",
      "shadowOffsetX",
      "shadowOffsetY",
      "shadowRoot",
      "shape",
      "shape-rendering",
      "shapeRendering",
      "sheet",
      "shift",
      "shiftKey",
      "shiftLeft",
      "show",
      "showHelp",
      "showModal",
      "showModalDialog",
      "showModelessDialog",
      "showNotification",
      "sidebar",
      "sign",
      "signalingState",
      "sin",
      "singleNodeValue",
      "sinh",
      "size",
      "sizeToContent",
      "sizes",
      "skewX",
      "skewXSelf",
      "skewY",
      "skewYSelf",
      "slice",
      "slope",
      "small",
      "smooth",
      "smil",
      "smoothingTimeConstant",
      "snapToLines",
      "snapshotItem",
      "snapshotLength",
      "some",
      "sort",
      "source",
      "sourceBuffer",
      "sourceBuffers",
      "sourceIndex",
      "spacing",
      "span",
      "speakAs",
      "speaking",
      "specified",
      "specularConstant",
      "specularExponent",
      "speechSynthesis",
      "speed",
      "speedOfSound",
      "spellcheck",
      "splice",
      "split",
      "splitText",
      "spreadMethod",
      "sqrt",
      "src",
      "srcElement",
      "srcFilter",
      "srcUrn",
      "srcdoc",
      "srclang",
      "srcset",
      "stack",
      "stackTraceLimit",
      "stacktrace",
      "standalone",
      "standby",
      "start",
      "startContainer",
      "startIce",
      "startOffset",
      "startRendering",
      "startTime",
      "startsWith",
      "state",
      "status",
      "statusMessage",
      "statusText",
      "statusbar",
      "stdDeviationX",
      "stdDeviationY",
      "stencilFunc",
      "stencilFuncSeparate",
      "stencilMask",
      "stencilMaskSeparate",
      "stencilOp",
      "stencilOpSeparate",
      "step",
      "stepDown",
      "stepMismatch",
      "stepUp",
      "sticky",
      "stitchTiles",
      "stop",
      "stop-color",
      "stop-opacity",
      "stopColor",
      "stopImmediatePropagation",
      "stopOpacity",
      "stopPropagation",
      "storageArea",
      "storageName",
      "storageStatus",
      "storeSiteSpecificTrackingException",
      "storeWebWideTrackingException",
      "stpVersion",
      "stream",
      "strike",
      "stringValue",
      "stringify",
      "stroke",
      "stroke-dasharray",
      "stroke-dashoffset",
      "stroke-linecap",
      "stroke-linejoin",
      "stroke-miterlimit",
      "stroke-opacity",
      "stroke-width",
      "strokeDasharray",
      "strokeDashoffset",
      "strokeLinecap",
      "strokeLinejoin",
      "strokeMiterlimit",
      "strokeOpacity",
      "strokeRect",
      "strokeStyle",
      "strokeText",
      "strokeWidth",
      "style",
      "styleFloat",
      "styleMedia",
      "styleSheet",
      "styleSheetSets",
      "styleSheets",
      "sub",
      "subarray",
      "subject",
      "submit",
      "subscribe",
      "substr",
      "substring",
      "substringData",
      "subtle",
      "suffix",
      "suffixes",
      "summary",
      "sup",
      "supports",
      "surfaceScale",
      "surroundContents",
      "suspend",
      "suspendRedraw",
      "swapCache",
      "swapNode",
      "sweepFlag",
      "symbols",
      "system",
      "systemCode",
      "systemId",
      "systemLanguage",
      "systemXDPI",
      "systemYDPI",
      "tBodies",
      "tFoot",
      "tHead",
      "tabIndex",
      "table",
      "table-layout",
      "tableLayout",
      "tableValues",
      "tag",
      "tagName",
      "tagUrn",
      "tags",
      "taintEnabled",
      "takeRecords",
      "tan",
      "tanh",
      "target",
      "targetElement",
      "targetTouches",
      "targetX",
      "targetY",
      "tel",
      "terminate",
      "test",
      "texImage2D",
      "texParameterf",
      "texParameteri",
      "texSubImage2D",
      "text",
      "text-align",
      "text-anchor",
      "text-decoration",
      "text-decoration-color",
      "text-decoration-line",
      "text-decoration-style",
      "text-indent",
      "text-overflow",
      "text-rendering",
      "text-shadow",
      "text-transform",
      "textAlign",
      "textAlignLast",
      "textAnchor",
      "textAutospace",
      "textBaseline",
      "textContent",
      "textDecoration",
      "textDecorationBlink",
      "textDecorationColor",
      "textDecorationLine",
      "textDecorationLineThrough",
      "textDecorationNone",
      "textDecorationOverline",
      "textDecorationStyle",
      "textDecorationUnderline",
      "textIndent",
      "textJustify",
      "textJustifyTrim",
      "textKashida",
      "textKashidaSpace",
      "textLength",
      "textOverflow",
      "textRendering",
      "textShadow",
      "textTracks",
      "textTransform",
      "textUnderlinePosition",
      "then",
      "threadId",
      "threshold",
      "tiltX",
      "tiltY",
      "time",
      "timeEnd",
      "timeStamp",
      "timeout",
      "timestamp",
      "timestampOffset",
      "timing",
      "title",
      "toArray",
      "toBlob",
      "toDataURL",
      "toDateString",
      "toElement",
      "toExponential",
      "toFixed",
      "toFloat32Array",
      "toFloat64Array",
      "toGMTString",
      "toISOString",
      "toJSON",
      "toLocaleDateString",
      "toLocaleFormat",
      "toLocaleLowerCase",
      "toLocaleString",
      "toLocaleTimeString",
      "toLocaleUpperCase",
      "toLowerCase",
      "toMethod",
      "toPrecision",
      "toSdp",
      "toSource",
      "toStaticHTML",
      "toString",
      "toStringTag",
      "toTimeString",
      "toUTCString",
      "toUpperCase",
      "toggle",
      "toggleLongPressEnabled",
      "tooLong",
      "toolbar",
      "top",
      "topMargin",
      "total",
      "totalFrameDelay",
      "totalVideoFrames",
      "touchAction",
      "touches",
      "trace",
      "track",
      "transaction",
      "transactions",
      "transform",
      "transform-origin",
      "transform-style",
      "transformOrigin",
      "transformPoint",
      "transformString",
      "transformStyle",
      "transformToDocument",
      "transformToFragment",
      "transition",
      "transition-delay",
      "transition-duration",
      "transition-property",
      "transition-timing-function",
      "transitionDelay",
      "transitionDuration",
      "transitionProperty",
      "transitionTimingFunction",
      "translate",
      "translateSelf",
      "translationX",
      "translationY",
      "trim",
      "trimLeft",
      "trimRight",
      "trueSpeed",
      "trunc",
      "truncate",
      "type",
      "typeDetail",
      "typeMismatch",
      "typeMustMatch",
      "types",
      "ubound",
      "undefined",
      "unescape",
      "uneval",
      "unicode-bidi",
      "unicodeBidi",
      "uniform1f",
      "uniform1fv",
      "uniform1i",
      "uniform1iv",
      "uniform2f",
      "uniform2fv",
      "uniform2i",
      "uniform2iv",
      "uniform3f",
      "uniform3fv",
      "uniform3i",
      "uniform3iv",
      "uniform4f",
      "uniform4fv",
      "uniform4i",
      "uniform4iv",
      "uniformMatrix2fv",
      "uniformMatrix3fv",
      "uniformMatrix4fv",
      "unique",
      "uniqueID",
      "uniqueNumber",
      "unitType",
      "units",
      "unloadEventEnd",
      "unloadEventStart",
      "unlock",
      "unmount",
      "unobserve",
      "unpause",
      "unpauseAnimations",
      "unreadCount",
      "unregister",
      "unregisterContentHandler",
      "unregisterProtocolHandler",
      "unscopables",
      "unselectable",
      "unshift",
      "unsubscribe",
      "unsuspendRedraw",
      "unsuspendRedrawAll",
      "unwatch",
      "unwrapKey",
      "update",
      "updateCommands",
      "updateIce",
      "updateInterval",
      "updateSettings",
      "updated",
      "updating",
      "upload",
      "upper",
      "upperBound",
      "upperOpen",
      "uri",
      "url",
      "urn",
      "urns",
      "usages",
      "useCurrentView",
      "useMap",
      "useProgram",
      "usedSpace",
      "userAgent",
      "userLanguage",
      "username",
      "v8BreakIterator",
      "vAlign",
      "vLink",
      "valid",
      "validateProgram",
      "validationMessage",
      "validity",
      "value",
      "valueAsDate",
      "valueAsNumber",
      "valueAsString",
      "valueInSpecifiedUnits",
      "valueMissing",
      "valueOf",
      "valueText",
      "valueType",
      "values",
      "vector-effect",
      "vectorEffect",
      "velocityAngular",
      "velocityExpansion",
      "velocityX",
      "velocityY",
      "vendor",
      "vendorSub",
      "verify",
      "version",
      "vertexAttrib1f",
      "vertexAttrib1fv",
      "vertexAttrib2f",
      "vertexAttrib2fv",
      "vertexAttrib3f",
      "vertexAttrib3fv",
      "vertexAttrib4f",
      "vertexAttrib4fv",
      "vertexAttribDivisorANGLE",
      "vertexAttribPointer",
      "vertical",
      "vertical-align",
      "verticalAlign",
      "verticalOverflow",
      "vibrate",
      "videoHeight",
      "videoTracks",
      "videoWidth",
      "view",
      "viewBox",
      "viewBoxString",
      "viewTarget",
      "viewTargetString",
      "viewport",
      "viewportAnchorX",
      "viewportAnchorY",
      "viewportElement",
      "visibility",
      "visibilityState",
      "visible",
      "vlinkColor",
      "voice",
      "volume",
      "vrml",
      "vspace",
      "w",
      "wand",
      "warn",
      "wasClean",
      "watch",
      "watchPosition",
      "webdriver",
      "webkitAddKey",
      "webkitAnimation",
      "webkitAnimationDelay",
      "webkitAnimationDirection",
      "webkitAnimationDuration",
      "webkitAnimationFillMode",
      "webkitAnimationIterationCount",
      "webkitAnimationName",
      "webkitAnimationPlayState",
      "webkitAnimationTimingFunction",
      "webkitAppearance",
      "webkitAudioContext",
      "webkitAudioDecodedByteCount",
      "webkitAudioPannerNode",
      "webkitBackfaceVisibility",
      "webkitBackground",
      "webkitBackgroundAttachment",
      "webkitBackgroundClip",
      "webkitBackgroundColor",
      "webkitBackgroundImage",
      "webkitBackgroundOrigin",
      "webkitBackgroundPosition",
      "webkitBackgroundPositionX",
      "webkitBackgroundPositionY",
      "webkitBackgroundRepeat",
      "webkitBackgroundSize",
      "webkitBackingStorePixelRatio",
      "webkitBorderImage",
      "webkitBorderImageOutset",
      "webkitBorderImageRepeat",
      "webkitBorderImageSlice",
      "webkitBorderImageSource",
      "webkitBorderImageWidth",
      "webkitBoxAlign",
      "webkitBoxDirection",
      "webkitBoxFlex",
      "webkitBoxOrdinalGroup",
      "webkitBoxOrient",
      "webkitBoxPack",
      "webkitBoxSizing",
      "webkitCancelAnimationFrame",
      "webkitCancelFullScreen",
      "webkitCancelKeyRequest",
      "webkitCancelRequestAnimationFrame",
      "webkitClearResourceTimings",
      "webkitClosedCaptionsVisible",
      "webkitConvertPointFromNodeToPage",
      "webkitConvertPointFromPageToNode",
      "webkitCreateShadowRoot",
      "webkitCurrentFullScreenElement",
      "webkitCurrentPlaybackTargetIsWireless",
      "webkitDirectionInvertedFromDevice",
      "webkitDisplayingFullscreen",
      "webkitEnterFullScreen",
      "webkitEnterFullscreen",
      "webkitExitFullScreen",
      "webkitExitFullscreen",
      "webkitExitPointerLock",
      "webkitFullScreenKeyboardInputAllowed",
      "webkitFullscreenElement",
      "webkitFullscreenEnabled",
      "webkitGenerateKeyRequest",
      "webkitGetAsEntry",
      "webkitGetDatabaseNames",
      "webkitGetEntries",
      "webkitGetEntriesByName",
      "webkitGetEntriesByType",
      "webkitGetFlowByName",
      "webkitGetGamepads",
      "webkitGetImageDataHD",
      "webkitGetNamedFlows",
      "webkitGetRegionFlowRanges",
      "webkitGetUserMedia",
      "webkitHasClosedCaptions",
      "webkitHidden",
      "webkitIDBCursor",
      "webkitIDBDatabase",
      "webkitIDBDatabaseError",
      "webkitIDBDatabaseException",
      "webkitIDBFactory",
      "webkitIDBIndex",
      "webkitIDBKeyRange",
      "webkitIDBObjectStore",
      "webkitIDBRequest",
      "webkitIDBTransaction",
      "webkitImageSmoothingEnabled",
      "webkitIndexedDB",
      "webkitInitMessageEvent",
      "webkitIsFullScreen",
      "webkitKeys",
      "webkitLineDashOffset",
      "webkitLockOrientation",
      "webkitMatchesSelector",
      "webkitMediaStream",
      "webkitNotifications",
      "webkitOfflineAudioContext",
      "webkitOrientation",
      "webkitPeerConnection00",
      "webkitPersistentStorage",
      "webkitPointerLockElement",
      "webkitPostMessage",
      "webkitPreservesPitch",
      "webkitPutImageDataHD",
      "webkitRTCPeerConnection",
      "webkitRegionOverset",
      "webkitRequestAnimationFrame",
      "webkitRequestFileSystem",
      "webkitRequestFullScreen",
      "webkitRequestFullscreen",
      "webkitRequestPointerLock",
      "webkitResolveLocalFileSystemURL",
      "webkitSetMediaKeys",
      "webkitSetResourceTimingBufferSize",
      "webkitShadowRoot",
      "webkitShowPlaybackTargetPicker",
      "webkitSlice",
      "webkitSpeechGrammar",
      "webkitSpeechGrammarList",
      "webkitSpeechRecognition",
      "webkitSpeechRecognitionError",
      "webkitSpeechRecognitionEvent",
      "webkitStorageInfo",
      "webkitSupportsFullscreen",
      "webkitTemporaryStorage",
      "webkitTextSizeAdjust",
      "webkitTransform",
      "webkitTransformOrigin",
      "webkitTransition",
      "webkitTransitionDelay",
      "webkitTransitionDuration",
      "webkitTransitionProperty",
      "webkitTransitionTimingFunction",
      "webkitURL",
      "webkitUnlockOrientation",
      "webkitUserSelect",
      "webkitVideoDecodedByteCount",
      "webkitVisibilityState",
      "webkitWirelessVideoPlaybackDisabled",
      "webkitdropzone",
      "webstore",
      "weight",
      "whatToShow",
      "wheelDelta",
      "wheelDeltaX",
      "wheelDeltaY",
      "which",
      "white-space",
      "whiteSpace",
      "wholeText",
      "widows",
      "width",
      "will-change",
      "willChange",
      "willValidate",
      "window",
      "withCredentials",
      "word-break",
      "word-spacing",
      "word-wrap",
      "wordBreak",
      "wordSpacing",
      "wordWrap",
      "wrap",
      "wrapKey",
      "write",
      "writeln",
      "writingMode",
      "x",
      "x1",
      "x2",
      "xChannelSelector",
      "xmlEncoding",
      "xmlStandalone",
      "xmlVersion",
      "xmlbase",
      "xmllang",
      "xmlspace",
      "y",
      "y1",
      "y2",
      "yChannelSelector",
      "yandex",
      "z",
      "z-index",
      "zIndex",
      "zoom",
      "zoomAndPan",
      "zoomRectScreen"
  ];

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  function find_builtins(reserved) {
      domprops.forEach(add);

      // Compatibility fix for some standard defined globals not defined on every js environment
      var new_globals = ["Symbol", "Map", "Promise", "Proxy", "Reflect", "Set", "WeakMap", "WeakSet"];
      var objects = {};
      var global_ref = typeof global === "object" ? global : self;

      new_globals.forEach(function (new_global) {
          objects[new_global] = global_ref[new_global] || new Function();
      });

      // NaN will be included due to Number.NaN
      [
          "null",
          "true",
          "false",
          "Infinity",
          "-Infinity",
          "undefined",
      ].forEach(add);
      [ Object, Array, Function, Number,
        String, Boolean, Error, Math,
        Date, RegExp, objects.Symbol, ArrayBuffer,
        DataView, decodeURI, decodeURIComponent,
        encodeURI, encodeURIComponent, eval, EvalError,
        Float32Array, Float64Array, Int8Array, Int16Array,
        Int32Array, isFinite, isNaN, JSON, objects.Map, parseFloat,
        parseInt, objects.Promise, objects.Proxy, RangeError, ReferenceError,
        objects.Reflect, objects.Set, SyntaxError, TypeError, Uint8Array,
        Uint8ClampedArray, Uint16Array, Uint32Array, URIError,
        objects.WeakMap, objects.WeakSet
      ].forEach(function(ctor) {
          Object.getOwnPropertyNames(ctor).map(add);
          if (ctor.prototype) {
              Object.getOwnPropertyNames(ctor.prototype).map(add);
          }
      });
      function add(name) {
          reserved.add(name);
      }
  }

  function reserve_quoted_keys(ast, reserved) {
      function add(name) {
          push_uniq(reserved, name);
      }

      ast.walk(new TreeWalker(function(node) {
          if (node instanceof AST_ObjectKeyVal && node.quote) {
              add(node.key);
          } else if (node instanceof AST_ObjectProperty && node.quote) {
              add(node.key.name);
          } else if (node instanceof AST_Sub) {
              addStrings(node.property, add);
          }
      }));
  }

  function addStrings(node, add) {
      node.walk(new TreeWalker(function(node) {
          if (node instanceof AST_Sequence) {
              addStrings(node.tail_node(), add);
          } else if (node instanceof AST_String) {
              add(node.value);
          } else if (node instanceof AST_Conditional) {
              addStrings(node.consequent, add);
              addStrings(node.alternative, add);
          }
          return true;
      }));
  }

  function mangle_properties(ast, options) {
      options = defaults(options, {
          builtins: false,
          cache: null,
          debug: false,
          keep_quoted: false,
          only_cache: false,
          regex: null,
          reserved: null,
      }, true);

      var reserved_option = options.reserved;
      if (!Array.isArray(reserved_option)) reserved_option = [reserved_option];
      var reserved = new Set(reserved_option);
      if (!options.builtins) find_builtins(reserved);

      var cname = -1;
      var cache;
      if (options.cache) {
          cache = options.cache.props;
          cache.forEach(function(mangled_name) {
              reserved.add(mangled_name);
          });
      } else {
          cache = new Map();
      }

      var regex = options.regex && new RegExp(options.regex);

      // note debug is either false (disabled), or a string of the debug suffix to use (enabled).
      // note debug may be enabled as an empty string, which is falsey. Also treat passing 'true'
      // the same as passing an empty string.
      var debug = options.debug !== false;
      var debug_name_suffix;
      if (debug) {
          debug_name_suffix = (options.debug === true ? "" : options.debug);
      }

      var names_to_mangle = new Set();
      var unmangleable = new Set();

      var keep_quoted_strict = options.keep_quoted === "strict";

      // step 1: find candidates to mangle
      ast.walk(new TreeWalker(function(node) {
          if (node instanceof AST_ObjectKeyVal) {
              if (typeof node.key == "string" &&
                  (!keep_quoted_strict || !node.quote)) {
                  add(node.key);
              }
          } else if (node instanceof AST_ObjectProperty) {
              // setter or getter, since KeyVal is handled above
              if (!keep_quoted_strict || !node.key.end.quote) {
                  add(node.key.name);
              }
          } else if (node instanceof AST_Dot) {
              var root = node;
              while (root.expression) {
                  root = root.expression;
              }
              if (!(root.thedef && root.thedef.undeclared) &&
                  (!keep_quoted_strict || !node.quote)) {
                  add(node.property);
              }
          } else if (node instanceof AST_Sub) {
              if (!keep_quoted_strict) {
                  addStrings(node.property, add);
              }
          } else if (node instanceof AST_Call
              && node.expression.print_to_string() == "Object.defineProperty") {
              addStrings(node.args[1], add);
          }
      }));

      // step 2: transform the tree, renaming properties
      return ast.transform(new TreeTransformer(function(node) {
          if (node instanceof AST_ObjectKeyVal) {
              if (typeof node.key == "string" &&
                  (!keep_quoted_strict || !node.quote)) {
                  node.key = mangle(node.key);
              }
          } else if (node instanceof AST_ObjectProperty) {
              // setter or getter
              if (!keep_quoted_strict || !node.key.end.quote) {
                  node.key.name = mangle(node.key.name);
              }
          } else if (node instanceof AST_Dot) {
              if (!keep_quoted_strict || !node.quote) {
                  node.property = mangle(node.property);
              }
          } else if (!options.keep_quoted && node instanceof AST_Sub) {
              node.property = mangleStrings(node.property);
          } else if (node instanceof AST_Call
              && node.expression.print_to_string() == "Object.defineProperty") {
              node.args[1] = mangleStrings(node.args[1]);
          }
      }));

      // only function declarations after this line

      function can_mangle(name) {
          if (unmangleable.has(name)) return false;
          if (reserved.has(name)) return false;
          if (options.only_cache) {
              return cache.has(name);
          }
          if (/^-?[0-9]+(\.[0-9]+)?(e[+-][0-9]+)?$/.test(name)) return false;
          return true;
      }

      function should_mangle(name) {
          if (regex && !regex.test(name)) return false;
          if (reserved.has(name)) return false;
          return cache.has(name)
              || names_to_mangle.has(name);
      }

      function add(name) {
          if (can_mangle(name))
              names_to_mangle.add(name);

          if (!should_mangle(name)) {
              unmangleable.add(name);
          }
      }

      function mangle(name) {
          if (!should_mangle(name)) {
              return name;
          }

          var mangled = cache.get(name);
          if (!mangled) {
              if (debug) {
                  // debug mode: use a prefix and suffix to preserve readability, e.g. o.foo -> o._$foo$NNN_.
                  var debug_mangled = "_$" + name + "$" + debug_name_suffix + "_";

                  if (can_mangle(debug_mangled)) {
                      mangled = debug_mangled;
                  }
              }

              // either debug mode is off, or it is on and we could not use the mangled name
              if (!mangled) {
                  do {
                      mangled = base54(++cname);
                  } while (!can_mangle(mangled));
              }

              cache.set(name, mangled);
          }
          return mangled;
      }

      function mangleStrings(node) {
          return node.transform(new TreeTransformer(function(node) {
              if (node instanceof AST_Sequence) {
                  var last = node.expressions.length - 1;
                  node.expressions[last] = mangleStrings(node.expressions[last]);
              } else if (node instanceof AST_String) {
                  node.value = mangle(node.value);
              } else if (node instanceof AST_Conditional) {
                  node.consequent = mangleStrings(node.consequent);
                  node.alternative = mangleStrings(node.alternative);
              }
              return node;
          }));
      }
  }

  var to_ascii = typeof atob == "undefined" ? function(b64) {
      return Buffer.from(b64, "base64").toString();
  } : atob;
  var to_base64 = typeof btoa == "undefined" ? function(str) {
      return Buffer.from(str).toString("base64");
  } : btoa;

  function read_source_map(code) {
      var match = /(?:^|[^.])\/\/# sourceMappingURL=data:application\/json(;[\w=-]*)?;base64,([+/0-9A-Za-z]*=*)\s*$/.exec(code);
      if (!match) {
          AST_Node.warn("inline source map not found");
          return null;
      }
      return to_ascii(match[2]);
  }

  function set_shorthand(name, options, keys) {
      if (options[name]) {
          keys.forEach(function(key) {
              if (options[key]) {
                  if (typeof options[key] != "object") options[key] = {};
                  if (!(name in options[key])) options[key][name] = options[name];
              }
          });
      }
  }

  function init_cache(cache) {
      if (!cache) return;
      if (!("props" in cache)) {
          cache.props = new Map();
      } else if (!(cache.props instanceof Map)) {
          cache.props = map_from_object(cache.props);
      }
  }

  function to_json(cache) {
      return {
          props: map_to_object(cache.props)
      };
  }

  function minify(files, options) {
      var warn_function = AST_Node.warn_function;
      try {
          options = defaults(options, {
              compress: {},
              ecma: undefined,
              enclose: false,
              ie8: false,
              keep_classnames: undefined,
              keep_fnames: false,
              mangle: {},
              module: false,
              nameCache: null,
              output: {},
              parse: {},
              rename: undefined,
              safari10: false,
              sourceMap: false,
              timings: false,
              toplevel: false,
              warnings: false,
              wrap: false,
          }, true);
          var timings = options.timings && {
              start: Date.now()
          };
          if (options.keep_classnames === undefined) {
              options.keep_classnames = options.keep_fnames;
          }
          if (options.rename === undefined) {
              options.rename = options.compress && options.mangle;
          }
          set_shorthand("ecma", options, [ "parse", "compress", "output" ]);
          set_shorthand("ie8", options, [ "compress", "mangle", "output" ]);
          set_shorthand("keep_classnames", options, [ "compress", "mangle" ]);
          set_shorthand("keep_fnames", options, [ "compress", "mangle" ]);
          set_shorthand("module", options, [ "parse", "compress", "mangle" ]);
          set_shorthand("safari10", options, [ "mangle", "output" ]);
          set_shorthand("toplevel", options, [ "compress", "mangle" ]);
          set_shorthand("warnings", options, [ "compress" ]);
          var quoted_props;
          if (options.mangle) {
              options.mangle = defaults(options.mangle, {
                  cache: options.nameCache && (options.nameCache.vars || {}),
                  eval: false,
                  ie8: false,
                  keep_classnames: false,
                  keep_fnames: false,
                  module: false,
                  properties: false,
                  reserved: [],
                  safari10: false,
                  toplevel: false,
              }, true);
              if (options.mangle.properties) {
                  if (typeof options.mangle.properties != "object") {
                      options.mangle.properties = {};
                  }
                  if (options.mangle.properties.keep_quoted) {
                      quoted_props = options.mangle.properties.reserved;
                      if (!Array.isArray(quoted_props)) quoted_props = [];
                      options.mangle.properties.reserved = quoted_props;
                  }
                  if (options.nameCache && !("cache" in options.mangle.properties)) {
                      options.mangle.properties.cache = options.nameCache.props || {};
                  }
              }
              init_cache(options.mangle.cache);
              init_cache(options.mangle.properties.cache);
          }
          if (options.sourceMap) {
              options.sourceMap = defaults(options.sourceMap, {
                  content: null,
                  filename: null,
                  includeSources: false,
                  root: null,
                  url: null,
              }, true);
          }
          var warnings = [];
          if (options.warnings && !AST_Node.warn_function) {
              AST_Node.warn_function = function(warning) {
                  warnings.push(warning);
              };
          }
          if (timings) timings.parse = Date.now();
          var toplevel;
          if (files instanceof AST_Toplevel) {
              toplevel = files;
          } else {
              if (typeof files == "string") {
                  files = [ files ];
              }
              options.parse = options.parse || {};
              options.parse.toplevel = null;
              for (var name in files) if (HOP(files, name)) {
                  options.parse.filename = name;
                  options.parse.toplevel = parse(files[name], options.parse);
                  if (options.sourceMap && options.sourceMap.content == "inline") {
                      if (Object.keys(files).length > 1)
                          throw new Error("inline source map only works with singular input");
                      options.sourceMap.content = read_source_map(files[name]);
                  }
              }
              toplevel = options.parse.toplevel;
          }
          if (quoted_props && options.mangle.properties.keep_quoted !== "strict") {
              reserve_quoted_keys(toplevel, quoted_props);
          }
          if (options.wrap) {
              toplevel = toplevel.wrap_commonjs(options.wrap);
          }
          if (options.enclose) {
              toplevel = toplevel.wrap_enclose(options.enclose);
          }
          if (timings) timings.rename = Date.now();
          if (timings) timings.compress = Date.now();
          if (options.compress) toplevel = new Compressor(options.compress).compress(toplevel);
          if (timings) timings.scope = Date.now();
          if (options.mangle) toplevel.figure_out_scope(options.mangle);
          if (timings) timings.mangle = Date.now();
          if (options.mangle) {
              base54.reset();
              toplevel.compute_char_frequency(options.mangle);
              toplevel.mangle_names(options.mangle);
          }
          if (timings) timings.properties = Date.now();
          if (options.mangle && options.mangle.properties) {
              toplevel = mangle_properties(toplevel, options.mangle.properties);
          }
          if (timings) timings.output = Date.now();
          var result = {};
          if (options.output.ast) {
              result.ast = toplevel;
          }
          if (!HOP(options.output, "code") || options.output.code) {
              if (options.sourceMap) {
                  if (typeof options.sourceMap.content == "string") {
                      options.sourceMap.content = JSON.parse(options.sourceMap.content);
                  }
                  options.output.source_map = SourceMap({
                      file: options.sourceMap.filename,
                      orig: options.sourceMap.content,
                      root: options.sourceMap.root
                  });
                  if (options.sourceMap.includeSources) {
                      if (files instanceof AST_Toplevel) {
                          throw new Error("original source content unavailable");
                      } else for (var name in files) if (HOP(files, name)) {
                          options.output.source_map.get().setSourceContent(name, files[name]);
                      }
                  }
              }
              delete options.output.ast;
              delete options.output.code;
              var stream = OutputStream(options.output);
              toplevel.print(stream);
              result.code = stream.get();
              if (options.sourceMap) {
                  result.map = options.output.source_map.toString();
                  if (options.sourceMap.url == "inline") {
                      result.code += "\n//# sourceMappingURL=data:application/json;charset=utf-8;base64," + to_base64(result.map);
                  } else if (options.sourceMap.url) {
                      result.code += "\n//# sourceMappingURL=" + options.sourceMap.url;
                  }
              }
          }
          if (options.nameCache && options.mangle) {
              if (options.mangle.cache) options.nameCache.vars = to_json(options.mangle.cache);
              if (options.mangle.properties && options.mangle.properties.cache) {
                  options.nameCache.props = to_json(options.mangle.properties.cache);
              }
          }
          if (timings) {
              timings.end = Date.now();
              result.timings = {
                  parse: 1e-3 * (timings.rename - timings.parse),
                  rename: 1e-3 * (timings.compress - timings.rename),
                  compress: 1e-3 * (timings.scope - timings.compress),
                  scope: 1e-3 * (timings.mangle - timings.scope),
                  mangle: 1e-3 * (timings.properties - timings.mangle),
                  properties: 1e-3 * (timings.output - timings.properties),
                  output: 1e-3 * (timings.end - timings.output),
                  total: 1e-3 * (timings.end - timings.start)
              };
          }
          if (warnings.length) {
              result.warnings = warnings;
          }
          return result;
      } catch (ex) {
          return { error: ex };
      } finally {
          AST_Node.warn_function = warn_function;
      }
  }

  function default_options() {
      const defs = {};

      Object.keys(infer_options({ 0: 0 })).forEach((component) => {
          const options = infer_options({
              [component]: {0: 0}
          });

          if (options) defs[component] = options;
      });
      return defs;
  }

  function infer_options(options) {
      var result = minify("", options);
      return result.error && result.error.defs;
  }

  /***********************************************************************

    A JavaScript tokenizer / parser / beautifier / compressor.
    https://github.com/mishoo/UglifyJS2

    -------------------------------- (C) ---------------------------------

                             Author: Mihai Bazon
                           <mihai.bazon@gmail.com>
                         http://mihai.bazon.net/blog

    Distributed under the BSD license:

      Copyright 2012 (c) Mihai Bazon <mihai.bazon@gmail.com>

      Redistribution and use in source and binary forms, with or without
      modification, are permitted provided that the following conditions
      are met:

          * Redistributions of source code must retain the above
            copyright notice, this list of conditions and the following
            disclaimer.

          * Redistributions in binary form must reproduce the above
            copyright notice, this list of conditions and the following
            disclaimer in the documentation and/or other materials
            provided with the distribution.

      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER “AS IS” AND ANY
      EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
      PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE
      LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
      OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
      PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
      PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
      THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
      TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF
      THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
      SUCH DAMAGE.

   ***********************************************************************/

  (function() {

      var normalize_directives = function(body) {
          var in_directive = true;

          for (var i = 0; i < body.length; i++) {
              if (in_directive && body[i] instanceof AST_Statement && body[i].body instanceof AST_String) {
                  body[i] = new AST_Directive({
                      start: body[i].start,
                      end: body[i].end,
                      value: body[i].body.value
                  });
              } else if (in_directive && !(body[i] instanceof AST_Statement && body[i].body instanceof AST_String)) {
                  in_directive = false;
              }
          }

          return body;
      };

      var MOZ_TO_ME = {
          Program: function(M) {
              return new AST_Toplevel({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  body: normalize_directives(M.body.map(from_moz))
              });
          },
          ArrayPattern: function(M) {
              return new AST_Destructuring({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  names: M.elements.map(function(elm) {
                      if (elm === null) {
                          return new AST_Hole();
                      }
                      return from_moz(elm);
                  }),
                  is_array: true
              });
          },
          ObjectPattern: function(M) {
              return new AST_Destructuring({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  names: M.properties.map(from_moz),
                  is_array: false
              });
          },
          AssignmentPattern: function(M) {
              return new AST_Binary({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  left: from_moz(M.left),
                  operator: "=",
                  right: from_moz(M.right)
              });
          },
          SpreadElement: function(M) {
              return new AST_Expansion({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  expression: from_moz(M.argument)
              });
          },
          RestElement: function(M) {
              return new AST_Expansion({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  expression: from_moz(M.argument)
              });
          },
          TemplateElement: function(M) {
              return new AST_TemplateSegment({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  value: M.value.cooked,
                  raw: M.value.raw
              });
          },
          TemplateLiteral: function(M) {
              var segments = [];
              for (var i = 0; i < M.quasis.length; i++) {
                  segments.push(from_moz(M.quasis[i]));
                  if (M.expressions[i]) {
                      segments.push(from_moz(M.expressions[i]));
                  }
              }
              return new AST_TemplateString({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  segments: segments
              });
          },
          TaggedTemplateExpression: function(M) {
              return new AST_PrefixedTemplateString({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  template_string: from_moz(M.quasi),
                  prefix: from_moz(M.tag)
              });
          },
          FunctionDeclaration: function(M) {
              return new AST_Defun({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  name: from_moz(M.id),
                  argnames: M.params.map(from_moz),
                  is_generator: M.generator,
                  async: M.async,
                  body: normalize_directives(from_moz(M.body).body)
              });
          },
          FunctionExpression: function(M) {
              return new AST_Function({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  name: from_moz(M.id),
                  argnames: M.params.map(from_moz),
                  is_generator: M.generator,
                  async: M.async,
                  body: normalize_directives(from_moz(M.body).body)
              });
          },
          ArrowFunctionExpression: function(M) {
              return new AST_Arrow({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  argnames: M.params.map(from_moz),
                  body: from_moz(M.body),
                  async: M.async,
              });
          },
          ExpressionStatement: function(M) {
              return new AST_SimpleStatement({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  body: from_moz(M.expression)
              });
          },
          TryStatement: function(M) {
              var handlers = M.handlers || [M.handler];
              if (handlers.length > 1 || M.guardedHandlers && M.guardedHandlers.length) {
                  throw new Error("Multiple catch clauses are not supported.");
              }
              return new AST_Try({
                  start    : my_start_token(M),
                  end      : my_end_token(M),
                  body     : from_moz(M.block).body,
                  bcatch   : from_moz(handlers[0]),
                  bfinally : M.finalizer ? new AST_Finally(from_moz(M.finalizer)) : null
              });
          },
          Property: function(M) {
              var key = M.key;
              var args = {
                  start    : my_start_token(key || M.value),
                  end      : my_end_token(M.value),
                  key      : key.type == "Identifier" ? key.name : key.value,
                  value    : from_moz(M.value)
              };
              if (M.computed) {
                  args.key = from_moz(M.key);
              }
              if (M.method) {
                  args.is_generator = M.value.generator;
                  args.async = M.value.async;
                  if (!M.computed) {
                      args.key = new AST_SymbolMethod({ name: args.key });
                  } else {
                      args.key = from_moz(M.key);
                  }
                  return new AST_ConciseMethod(args);
              }
              if (M.kind == "init") {
                  if (key.type != "Identifier" && key.type != "Literal") {
                      args.key = from_moz(key);
                  }
                  return new AST_ObjectKeyVal(args);
              }
              if (typeof args.key === "string" || typeof args.key === "number") {
                  args.key = new AST_SymbolMethod({
                      name: args.key
                  });
              }
              args.value = new AST_Accessor(args.value);
              if (M.kind == "get") return new AST_ObjectGetter(args);
              if (M.kind == "set") return new AST_ObjectSetter(args);
              if (M.kind == "method") {
                  args.async = M.value.async;
                  args.is_generator = M.value.generator;
                  args.quote = M.computed ? "\"" : null;
                  return new AST_ConciseMethod(args);
              }
          },
          MethodDefinition: function(M) {
              var args = {
                  start    : my_start_token(M),
                  end      : my_end_token(M),
                  key      : M.computed ? from_moz(M.key) : new AST_SymbolMethod({ name: M.key.name || M.key.value }),
                  value    : from_moz(M.value),
                  static   : M.static,
              };
              if (M.kind == "get") {
                  return new AST_ObjectGetter(args);
              }
              if (M.kind == "set") {
                  return new AST_ObjectSetter(args);
              }
              args.is_generator = M.value.generator;
              args.async = M.value.async;
              return new AST_ConciseMethod(args);
          },
          ArrayExpression: function(M) {
              return new AST_Array({
                  start    : my_start_token(M),
                  end      : my_end_token(M),
                  elements : M.elements.map(function(elem) {
                      return elem === null ? new AST_Hole() : from_moz(elem);
                  })
              });
          },
          ObjectExpression: function(M) {
              return new AST_Object({
                  start      : my_start_token(M),
                  end        : my_end_token(M),
                  properties : M.properties.map(function(prop) {
                      if (prop.type === "SpreadElement") {
                          return from_moz(prop);
                      }
                      prop.type = "Property";
                      return from_moz(prop);
                  })
              });
          },
          SequenceExpression: function(M) {
              return new AST_Sequence({
                  start      : my_start_token(M),
                  end        : my_end_token(M),
                  expressions: M.expressions.map(from_moz)
              });
          },
          MemberExpression: function(M) {
              return new (M.computed ? AST_Sub : AST_Dot)({
                  start      : my_start_token(M),
                  end        : my_end_token(M),
                  property   : M.computed ? from_moz(M.property) : M.property.name,
                  expression : from_moz(M.object)
              });
          },
          SwitchCase: function(M) {
              return new (M.test ? AST_Case : AST_Default)({
                  start      : my_start_token(M),
                  end        : my_end_token(M),
                  expression : from_moz(M.test),
                  body       : M.consequent.map(from_moz)
              });
          },
          VariableDeclaration: function(M) {
              return new (M.kind === "const" ? AST_Const :
                          M.kind === "let" ? AST_Let : AST_Var)({
                  start       : my_start_token(M),
                  end         : my_end_token(M),
                  definitions : M.declarations.map(from_moz)
              });
          },

          ImportDeclaration: function(M) {
              var imported_name = null;
              var imported_names = null;
              M.specifiers.forEach(function (specifier) {
                  if (specifier.type === "ImportSpecifier") {
                      if (!imported_names) { imported_names = []; }
                      imported_names.push(new AST_NameMapping({
                          start: my_start_token(specifier),
                          end: my_end_token(specifier),
                          foreign_name: from_moz(specifier.imported),
                          name: from_moz(specifier.local)
                      }));
                  } else if (specifier.type === "ImportDefaultSpecifier") {
                      imported_name = from_moz(specifier.local);
                  } else if (specifier.type === "ImportNamespaceSpecifier") {
                      if (!imported_names) { imported_names = []; }
                      imported_names.push(new AST_NameMapping({
                          start: my_start_token(specifier),
                          end: my_end_token(specifier),
                          foreign_name: new AST_SymbolImportForeign({ name: "*" }),
                          name: from_moz(specifier.local)
                      }));
                  }
              });
              return new AST_Import({
                  start       : my_start_token(M),
                  end         : my_end_token(M),
                  imported_name: imported_name,
                  imported_names : imported_names,
                  module_name : from_moz(M.source)
              });
          },
          ExportAllDeclaration: function(M) {
              return new AST_Export({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  exported_names: [
                      new AST_NameMapping({
                          name: new AST_SymbolExportForeign({ name: "*" }),
                          foreign_name: new AST_SymbolExportForeign({ name: "*" })
                      })
                  ],
                  module_name: from_moz(M.source)
              });
          },
          ExportNamedDeclaration: function(M) {
              return new AST_Export({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  exported_definition: from_moz(M.declaration),
                  exported_names: M.specifiers && M.specifiers.length ? M.specifiers.map(function (specifier) {
                      return new AST_NameMapping({
                          foreign_name: from_moz(specifier.exported),
                          name: from_moz(specifier.local)
                      });
                  }) : null,
                  module_name: from_moz(M.source)
              });
          },
          ExportDefaultDeclaration: function(M) {
              return new AST_Export({
                  start: my_start_token(M),
                  end: my_end_token(M),
                  exported_value: from_moz(M.declaration),
                  is_default: true
              });
          },
          Literal: function(M) {
              var val = M.value, args = {
                  start  : my_start_token(M),
                  end    : my_end_token(M)
              };
              if (val === null) return new AST_Null(args);
              var rx = M.regex;
              if (rx && rx.pattern) {
                  // RegExpLiteral as per ESTree AST spec
                  args.value = new RegExp(rx.pattern, rx.flags);
                  var raw = args.value.toString();
                  args.value.raw_source = rx.flags
                      ? raw.substring(0, raw.length - rx.flags.length) + rx.flags
                      : raw;
                  return new AST_RegExp(args);
              } else if (rx) {
                  // support legacy RegExp
                  args.value = M.regex && M.raw ? M.raw : val;
                  return new AST_RegExp(args);
              }
              switch (typeof val) {
                case "string":
                  args.value = val;
                  return new AST_String(args);
                case "number":
                  args.value = val;
                  return new AST_Number(args);
                case "boolean":
                  return new (val ? AST_True : AST_False)(args);
              }
          },
          MetaProperty: function(M) {
              if (M.meta.name === "new" && M.property.name === "target") {
                  return new AST_NewTarget({
                      start: my_start_token(M),
                      end: my_end_token(M)
                  });
              }
          },
          Identifier: function(M) {
              var p = FROM_MOZ_STACK[FROM_MOZ_STACK.length - 2];
              return new (  p.type == "LabeledStatement" ? AST_Label
                          : p.type == "VariableDeclarator" && p.id === M ? (p.kind == "const" ? AST_SymbolConst : p.kind == "let" ? AST_SymbolLet : AST_SymbolVar)
                          : /Import.*Specifier/.test(p.type) ? (p.local === M ? AST_SymbolImport : AST_SymbolImportForeign)
                          : p.type == "ExportSpecifier" ? (p.local === M ? AST_SymbolExport : AST_SymbolExportForeign)
                          : p.type == "FunctionExpression" ? (p.id === M ? AST_SymbolLambda : AST_SymbolFunarg)
                          : p.type == "FunctionDeclaration" ? (p.id === M ? AST_SymbolDefun : AST_SymbolFunarg)
                          : p.type == "ArrowFunctionExpression" ? (p.params.includes(M)) ? AST_SymbolFunarg : AST_SymbolRef
                          : p.type == "ClassExpression" ? (p.id === M ? AST_SymbolClass : AST_SymbolRef)
                          : p.type == "Property" ? (p.key === M && p.computed || p.value === M ? AST_SymbolRef : AST_SymbolMethod)
                          : p.type == "ClassDeclaration" ? (p.id === M ? AST_SymbolDefClass : AST_SymbolRef)
                          : p.type == "MethodDefinition" ? (p.computed ? AST_SymbolRef : AST_SymbolMethod)
                          : p.type == "CatchClause" ? AST_SymbolCatch
                          : p.type == "BreakStatement" || p.type == "ContinueStatement" ? AST_LabelRef
                          : AST_SymbolRef)({
                              start : my_start_token(M),
                              end   : my_end_token(M),
                              name  : M.name
                          });
          }
      };

      MOZ_TO_ME.UpdateExpression =
      MOZ_TO_ME.UnaryExpression = function To_Moz_Unary(M) {
          var prefix = "prefix" in M ? M.prefix
              : M.type == "UnaryExpression" ? true : false;
          return new (prefix ? AST_UnaryPrefix : AST_UnaryPostfix)({
              start      : my_start_token(M),
              end        : my_end_token(M),
              operator   : M.operator,
              expression : from_moz(M.argument)
          });
      };

      MOZ_TO_ME.ClassDeclaration =
      MOZ_TO_ME.ClassExpression = function From_Moz_Class(M) {
          return new (M.type === "ClassDeclaration" ? AST_DefClass : AST_ClassExpression)({
              start    : my_start_token(M),
              end      : my_end_token(M),
              name     : from_moz(M.id),
              extends  : from_moz(M.superClass),
              properties: M.body.body.map(from_moz)
          });
      };

      map("EmptyStatement", AST_EmptyStatement);
      map("BlockStatement", AST_BlockStatement, "body@body");
      map("IfStatement", AST_If, "test>condition, consequent>body, alternate>alternative");
      map("LabeledStatement", AST_LabeledStatement, "label>label, body>body");
      map("BreakStatement", AST_Break, "label>label");
      map("ContinueStatement", AST_Continue, "label>label");
      map("WithStatement", AST_With, "object>expression, body>body");
      map("SwitchStatement", AST_Switch, "discriminant>expression, cases@body");
      map("ReturnStatement", AST_Return, "argument>value");
      map("ThrowStatement", AST_Throw, "argument>value");
      map("WhileStatement", AST_While, "test>condition, body>body");
      map("DoWhileStatement", AST_Do, "test>condition, body>body");
      map("ForStatement", AST_For, "init>init, test>condition, update>step, body>body");
      map("ForInStatement", AST_ForIn, "left>init, right>object, body>body");
      map("ForOfStatement", AST_ForOf, "left>init, right>object, body>body, await=await");
      map("AwaitExpression", AST_Await, "argument>expression");
      map("YieldExpression", AST_Yield, "argument>expression, delegate=is_star");
      map("DebuggerStatement", AST_Debugger);
      map("VariableDeclarator", AST_VarDef, "id>name, init>value");
      map("CatchClause", AST_Catch, "param>argname, body%body");

      map("ThisExpression", AST_This);
      map("Super", AST_Super);
      map("BinaryExpression", AST_Binary, "operator=operator, left>left, right>right");
      map("LogicalExpression", AST_Binary, "operator=operator, left>left, right>right");
      map("AssignmentExpression", AST_Assign, "operator=operator, left>left, right>right");
      map("ConditionalExpression", AST_Conditional, "test>condition, consequent>consequent, alternate>alternative");
      map("NewExpression", AST_New, "callee>expression, arguments@args");
      map("CallExpression", AST_Call, "callee>expression, arguments@args");

      def_to_moz(AST_Toplevel, function To_Moz_Program(M) {
          return to_moz_scope("Program", M);
      });

      def_to_moz(AST_Expansion, function To_Moz_Spread(M, parent) {
          return {
              type: to_moz_in_destructuring() ? "RestElement" : "SpreadElement",
              argument: to_moz(M.expression)
          };
      });

      def_to_moz(AST_PrefixedTemplateString, function To_Moz_TaggedTemplateExpression(M) {
          return {
              type: "TaggedTemplateExpression",
              tag: to_moz(M.prefix),
              quasi: to_moz(M.template_string)
          };
      });

      def_to_moz(AST_TemplateString, function To_Moz_TemplateLiteral(M) {
          var quasis = [];
          var expressions = [];
          for (var i = 0; i < M.segments.length; i++) {
              if (i % 2 !== 0) {
                  expressions.push(to_moz(M.segments[i]));
              } else {
                  quasis.push({
                      type: "TemplateElement",
                      value: {
                          raw: M.segments[i].raw,
                          cooked: M.segments[i].value
                      },
                      tail: i === M.segments.length - 1
                  });
              }
          }
          return {
              type: "TemplateLiteral",
              quasis: quasis,
              expressions: expressions
          };
      });

      def_to_moz(AST_Defun, function To_Moz_FunctionDeclaration(M) {
          return {
              type: "FunctionDeclaration",
              id: to_moz(M.name),
              params: M.argnames.map(to_moz),
              generator: M.is_generator,
              async: M.async,
              body: to_moz_scope("BlockStatement", M)
          };
      });

      def_to_moz(AST_Function, function To_Moz_FunctionExpression(M, parent) {
          var is_generator = parent.is_generator !== undefined ?
              parent.is_generator : M.is_generator;
          return {
              type: "FunctionExpression",
              id: to_moz(M.name),
              params: M.argnames.map(to_moz),
              generator: is_generator,
              async: M.async,
              body: to_moz_scope("BlockStatement", M)
          };
      });

      def_to_moz(AST_Arrow, function To_Moz_ArrowFunctionExpression(M) {
          var body = M.body instanceof Array ? {
              type: "BlockStatement",
              body: M.body.map(to_moz)
          } : to_moz(M.body);
          return {
              type: "ArrowFunctionExpression",
              params: M.argnames.map(to_moz),
              async: M.async,
              body: body
          };
      });

      def_to_moz(AST_Destructuring, function To_Moz_ObjectPattern(M) {
          if (M.is_array) {
              return {
                  type: "ArrayPattern",
                  elements: M.names.map(to_moz)
              };
          }
          return {
              type: "ObjectPattern",
              properties: M.names.map(to_moz)
          };
      });

      def_to_moz(AST_Directive, function To_Moz_Directive(M) {
          return {
              type: "ExpressionStatement",
              expression: {
                  type: "Literal",
                  value: M.value
              }
          };
      });

      def_to_moz(AST_SimpleStatement, function To_Moz_ExpressionStatement(M) {
          return {
              type: "ExpressionStatement",
              expression: to_moz(M.body)
          };
      });

      def_to_moz(AST_SwitchBranch, function To_Moz_SwitchCase(M) {
          return {
              type: "SwitchCase",
              test: to_moz(M.expression),
              consequent: M.body.map(to_moz)
          };
      });

      def_to_moz(AST_Try, function To_Moz_TryStatement(M) {
          return {
              type: "TryStatement",
              block: to_moz_block(M),
              handler: to_moz(M.bcatch),
              guardedHandlers: [],
              finalizer: to_moz(M.bfinally)
          };
      });

      def_to_moz(AST_Catch, function To_Moz_CatchClause(M) {
          return {
              type: "CatchClause",
              param: to_moz(M.argname),
              guard: null,
              body: to_moz_block(M)
          };
      });

      def_to_moz(AST_Definitions, function To_Moz_VariableDeclaration(M) {
          return {
              type: "VariableDeclaration",
              kind:
                  M instanceof AST_Const ? "const" :
                  M instanceof AST_Let ? "let" : "var",
              declarations: M.definitions.map(to_moz)
          };
      });

      def_to_moz(AST_Export, function To_Moz_ExportDeclaration(M) {
          if (M.exported_names) {
              if (M.exported_names[0].name.name === "*") {
                  return {
                      type: "ExportAllDeclaration",
                      source: to_moz(M.module_name)
                  };
              }
              return {
                  type: "ExportNamedDeclaration",
                  specifiers: M.exported_names.map(function (name_mapping) {
                      return {
                          type: "ExportSpecifier",
                          exported: to_moz(name_mapping.foreign_name),
                          local: to_moz(name_mapping.name)
                      };
                  }),
                  declaration: to_moz(M.exported_definition),
                  source: to_moz(M.module_name)
              };
          }
          return {
              type: M.is_default ? "ExportDefaultDeclaration" : "ExportNamedDeclaration",
              declaration: to_moz(M.exported_value || M.exported_definition)
          };
      });

      def_to_moz(AST_Import, function To_Moz_ImportDeclaration(M) {
          var specifiers = [];
          if (M.imported_name) {
              specifiers.push({
                  type: "ImportDefaultSpecifier",
                  local: to_moz(M.imported_name)
              });
          }
          if (M.imported_names && M.imported_names[0].foreign_name.name === "*") {
              specifiers.push({
                  type: "ImportNamespaceSpecifier",
                  local: to_moz(M.imported_names[0].name)
              });
          } else if (M.imported_names) {
              M.imported_names.forEach(function(name_mapping) {
                  specifiers.push({
                      type: "ImportSpecifier",
                      local: to_moz(name_mapping.name),
                      imported: to_moz(name_mapping.foreign_name)
                  });
              });
          }
          return {
              type: "ImportDeclaration",
              specifiers: specifiers,
              source: to_moz(M.module_name)
          };
      });

      def_to_moz(AST_Sequence, function To_Moz_SequenceExpression(M) {
          return {
              type: "SequenceExpression",
              expressions: M.expressions.map(to_moz)
          };
      });

      def_to_moz(AST_PropAccess, function To_Moz_MemberExpression(M) {
          var isComputed = M instanceof AST_Sub;
          return {
              type: "MemberExpression",
              object: to_moz(M.expression),
              computed: isComputed,
              property: isComputed ? to_moz(M.property) : {type: "Identifier", name: M.property}
          };
      });

      def_to_moz(AST_Unary, function To_Moz_Unary(M) {
          return {
              type: M.operator == "++" || M.operator == "--" ? "UpdateExpression" : "UnaryExpression",
              operator: M.operator,
              prefix: M instanceof AST_UnaryPrefix,
              argument: to_moz(M.expression)
          };
      });

      def_to_moz(AST_Binary, function To_Moz_BinaryExpression(M) {
          if (M.operator == "=" && to_moz_in_destructuring()) {
              return {
                  type: "AssignmentPattern",
                  left: to_moz(M.left),
                  right: to_moz(M.right)
              };
          }
          return {
              type: M.operator == "&&" || M.operator == "||" ? "LogicalExpression" : "BinaryExpression",
              left: to_moz(M.left),
              operator: M.operator,
              right: to_moz(M.right)
          };
      });

      def_to_moz(AST_Array, function To_Moz_ArrayExpression(M) {
          return {
              type: "ArrayExpression",
              elements: M.elements.map(to_moz)
          };
      });

      def_to_moz(AST_Object, function To_Moz_ObjectExpression(M) {
          return {
              type: "ObjectExpression",
              properties: M.properties.map(to_moz)
          };
      });

      def_to_moz(AST_ObjectProperty, function To_Moz_Property(M, parent) {
          var key = M.key instanceof AST_Node ? to_moz(M.key) : {
              type: "Identifier",
              value: M.key
          };
          if (typeof M.key === "number") {
              key = {
                  type: "Literal",
                  value: Number(M.key)
              };
          }
          if (typeof M.key === "string") {
              key = {
                  type: "Identifier",
                  name: M.key
              };
          }
          var kind;
          var string_or_num = typeof M.key === "string" || typeof M.key === "number";
          var computed = string_or_num ? false : !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef;
          if (M instanceof AST_ObjectKeyVal) {
              kind = "init";
              computed = !string_or_num;
          } else
          if (M instanceof AST_ObjectGetter) {
              kind = "get";
          } else
          if (M instanceof AST_ObjectSetter) {
              kind = "set";
          }
          if (parent instanceof AST_Class) {
              return {
                  type: "MethodDefinition",
                  computed: computed,
                  kind: kind,
                  static: M.static,
                  key: to_moz(M.key),
                  value: to_moz(M.value)
              };
          }
          return {
              type: "Property",
              computed: computed,
              kind: kind,
              key: key,
              value: to_moz(M.value)
          };
      });

      def_to_moz(AST_ConciseMethod, function To_Moz_MethodDefinition(M, parent) {
          if (parent instanceof AST_Object) {
              return {
                  type: "Property",
                  computed: !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef,
                  kind: "init",
                  method: true,
                  shorthand: false,
                  key: to_moz(M.key),
                  value: to_moz(M.value)
              };
          }
          return {
              type: "MethodDefinition",
              computed: !(M.key instanceof AST_Symbol) || M.key instanceof AST_SymbolRef,
              kind: M.key === "constructor" ? "constructor" : "method",
              static: M.static,
              key: to_moz(M.key),
              value: to_moz(M.value)
          };
      });

      def_to_moz(AST_Class, function To_Moz_Class(M) {
          var type = M instanceof AST_ClassExpression ? "ClassExpression" : "ClassDeclaration";
          return {
              type: type,
              superClass: to_moz(M.extends),
              id: M.name ? to_moz(M.name) : null,
              body: {
                  type: "ClassBody",
                  body: M.properties.map(to_moz)
              }
          };
      });

      def_to_moz(AST_NewTarget, function To_Moz_MetaProperty(M) {
          return {
              type: "MetaProperty",
              meta: {
                  type: "Identifier",
                  name: "new"
              },
              property: {
                  type: "Identifier",
                  name: "target"
              }
          };
      });

      def_to_moz(AST_Symbol, function To_Moz_Identifier(M, parent) {
          if (M instanceof AST_SymbolMethod && parent.quote) {
              return {
                  type: "Literal",
                  value: M.name
              };
          }
          var def = M.definition();
          return {
              type: "Identifier",
              name: def ? def.mangled_name || def.name : M.name
          };
      });

      def_to_moz(AST_RegExp, function To_Moz_RegExpLiteral(M) {
          var pattern = M.value.source;
          var flags = M.value.toString().match(/[gimuys]*$/)[0];
          return {
              type: "Literal",
              value: new RegExp(pattern, flags),
              raw: M.value.raw_source,
              regex: {
                  pattern: pattern,
                  flags: flags,
              }
          };
      });

      def_to_moz(AST_Constant, function To_Moz_Literal(M) {
          var value = M.value;
          if (typeof value === "number" && (value < 0 || (value === 0 && 1 / value < 0))) {
              return {
                  type: "UnaryExpression",
                  operator: "-",
                  prefix: true,
                  argument: {
                      type: "Literal",
                      value: -value,
                      raw: M.start.raw
                  }
              };
          }
          return {
              type: "Literal",
              value: value,
              raw: M.start.raw
          };
      });

      def_to_moz(AST_Atom, function To_Moz_Atom(M) {
          return {
              type: "Identifier",
              name: String(M.value)
          };
      });

      AST_Boolean.DEFMETHOD("to_mozilla_ast", AST_Constant.prototype.to_mozilla_ast);
      AST_Null.DEFMETHOD("to_mozilla_ast", AST_Constant.prototype.to_mozilla_ast);
      AST_Hole.DEFMETHOD("to_mozilla_ast", function To_Moz_ArrayHole() { return null; });

      AST_Block.DEFMETHOD("to_mozilla_ast", AST_BlockStatement.prototype.to_mozilla_ast);
      AST_Lambda.DEFMETHOD("to_mozilla_ast", AST_Function.prototype.to_mozilla_ast);

      /* -----[ tools ]----- */

      function raw_token(moznode) {
          if (moznode.type == "Literal") {
              return moznode.raw != null ? moznode.raw : moznode.value + "";
          }
      }

      function my_start_token(moznode) {
          var loc = moznode.loc, start = loc && loc.start;
          var range = moznode.range;
          return new AST_Token({
              file    : loc && loc.source,
              line    : start && start.line,
              col     : start && start.column,
              pos     : range ? range[0] : moznode.start,
              endline : start && start.line,
              endcol  : start && start.column,
              endpos  : range ? range[0] : moznode.start,
              raw     : raw_token(moznode),
          });
      }

      function my_end_token(moznode) {
          var loc = moznode.loc, end = loc && loc.end;
          var range = moznode.range;
          return new AST_Token({
              file    : loc && loc.source,
              line    : end && end.line,
              col     : end && end.column,
              pos     : range ? range[1] : moznode.end,
              endline : end && end.line,
              endcol  : end && end.column,
              endpos  : range ? range[1] : moznode.end,
              raw     : raw_token(moznode),
          });
      }

      function map(moztype, mytype, propmap) {
          var moz_to_me = "function From_Moz_" + moztype + "(M){\n";
          moz_to_me += "return new U2." + mytype.name + "({\n" +
              "start: my_start_token(M),\n" +
              "end: my_end_token(M)";

          var me_to_moz = "function To_Moz_" + moztype + "(M){\n";
          me_to_moz += "return {\n" +
              "type: " + JSON.stringify(moztype);

          if (propmap) propmap.split(/\s*,\s*/).forEach(function(prop) {
              var m = /([a-z0-9$_]+)([=@>%])([a-z0-9$_]+)/i.exec(prop);
              if (!m) throw new Error("Can't understand property map: " + prop);
              var moz = m[1], how = m[2], my = m[3];
              moz_to_me += ",\n" + my + ": ";
              me_to_moz += ",\n" + moz + ": ";
              switch (how) {
                  case "@":
                      moz_to_me += "M." + moz + ".map(from_moz)";
                      me_to_moz += "M." +  my + ".map(to_moz)";
                      break;
                  case ">":
                      moz_to_me += "from_moz(M." + moz + ")";
                      me_to_moz += "to_moz(M." + my + ")";
                      break;
                  case "=":
                      moz_to_me += "M." + moz;
                      me_to_moz += "M." + my;
                      break;
                  case "%":
                      moz_to_me += "from_moz(M." + moz + ").body";
                      me_to_moz += "to_moz_block(M)";
                      break;
                  default:
                      throw new Error("Can't understand operator in propmap: " + prop);
              }
          });

          moz_to_me += "\n})\n}";
          me_to_moz += "\n}\n}";

          //moz_to_me = parse(moz_to_me).print_to_string({ beautify: true });
          //me_to_moz = parse(me_to_moz).print_to_string({ beautify: true });
          //console.log(moz_to_me);

          moz_to_me = new Function("U2", "my_start_token", "my_end_token", "from_moz", "return(" + moz_to_me + ")")(
              ast, my_start_token, my_end_token, from_moz
          );
          me_to_moz = new Function("to_moz", "to_moz_block", "to_moz_scope", "return(" + me_to_moz + ")")(
              to_moz, to_moz_block, to_moz_scope
          );
          MOZ_TO_ME[moztype] = moz_to_me;
          def_to_moz(mytype, me_to_moz);
      }

      var FROM_MOZ_STACK = null;

      function from_moz(node) {
          FROM_MOZ_STACK.push(node);
          var ret = node != null ? MOZ_TO_ME[node.type](node) : null;
          FROM_MOZ_STACK.pop();
          return ret;
      }

      AST_Node.from_mozilla_ast = function(node) {
          var save_stack = FROM_MOZ_STACK;
          FROM_MOZ_STACK = [];
          var ast = from_moz(node);
          FROM_MOZ_STACK = save_stack;
          return ast;
      };

      function set_moz_loc(mynode, moznode, myparent) {
          var start = mynode.start;
          var end = mynode.end;
          if (start.pos != null && end.endpos != null) {
              moznode.range = [start.pos, end.endpos];
          }
          if (start.line) {
              moznode.loc = {
                  start: {line: start.line, column: start.col},
                  end: end.endline ? {line: end.endline, column: end.endcol} : null
              };
              if (start.file) {
                  moznode.loc.source = start.file;
              }
          }
          return moznode;
      }

      function def_to_moz(mytype, handler) {
          mytype.DEFMETHOD("to_mozilla_ast", function(parent) {
              return set_moz_loc(this, handler(this, parent));
          });
      }

      var TO_MOZ_STACK = null;

      function to_moz(node) {
          if (TO_MOZ_STACK === null) { TO_MOZ_STACK = []; }
          TO_MOZ_STACK.push(node);
          var ast = node != null ? node.to_mozilla_ast(TO_MOZ_STACK[TO_MOZ_STACK.length - 2]) : null;
          TO_MOZ_STACK.pop();
          if (TO_MOZ_STACK.length === 0) { TO_MOZ_STACK = null; }
          return ast;
      }

      function to_moz_in_destructuring() {
          var i = TO_MOZ_STACK.length;
          while (i--) {
              if (TO_MOZ_STACK[i] instanceof AST_Destructuring) {
                  return true;
              }
          }
          return false;
      }

      function to_moz_block(node) {
          return {
              type: "BlockStatement",
              body: node.body.map(to_moz)
          };
      }

      function to_moz_scope(type, node) {
          var body = node.body.map(to_moz);
          if (node.body[0] instanceof AST_SimpleStatement && node.body[0].body instanceof AST_String) {
              body.unshift(to_moz(new AST_EmptyStatement(node.body[0])));
          }
          return {
              type: type,
              body: body
          };
      }
  })();

  // API

  exports.minify = minify;
  exports.AST_Array = AST_Array;
  exports.AST_Assign = AST_Assign;
  exports.AST_Constant = AST_Constant;
  exports.AST_Node = AST_Node;
  exports.AST_PropAccess = AST_PropAccess;
  exports.AST_Sequence = AST_Sequence;
  exports.AST_Symbol = AST_Symbol;
  exports.AST_Token = AST_Token;
  exports.TreeTransformer = TreeTransformer;
  exports.TreeWalker = TreeWalker;
  exports.defaults = defaults;
  exports.push_uniq = push_uniq;
  exports.string_template = string_template;
  exports.base54 = base54;
  exports.Compressor = Compressor;
  exports.to_ascii = to_ascii;
  exports.OutputStream = OutputStream;
  exports.parse = parse;
  exports.mangle_properties = mangle_properties;
  exports.reserve_quoted_keys = reserve_quoted_keys;
  exports.default_options = default_options;

}));
//# sourceMappingURL=bundle.js.map


/***/ }),
/* 1111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/exit/lib/exit.js
var exit = __webpack_require__(54);
var exit_default = /*#__PURE__*/__webpack_require__.n(exit);

// CONCATENATED MODULE: ./dist/transpiled-sys-node/sys/node/worker/worker-child.js

class worker_child_WorkerChild {
    constructor(process, runner) {
        this.process = process;
        this.runner = runner;
    }
    async receiveMessageFromMain(msgFromMain) {
        if (msgFromMain.exit) {
            exit_default()(0);
        }
        const msgToMain = {
            taskId: msgFromMain.taskId
        };
        try {
            msgToMain.value = await this.runner(msgFromMain.method, msgFromMain.args);
        }
        catch (e) {
            if (typeof e === 'string') {
                msgToMain.error = e;
            }
            else if (e && e.message) {
                msgToMain.error = e.message + '';
            }
            else {
                msgToMain.error = 'worker error';
            }
        }
        this.sendMessageToMain(msgToMain);
    }
    sendMessageToMain(msg) {
        this.process.send(msg, (err) => {
            if (err && err.code === 'ERR_IPC_CHANNEL_CLOSED') {
                exit_default()(0);
            }
        });
    }
}
function attachMessageHandler(process, runner) {
    const w = new worker_child_WorkerChild(process, runner);
    process.on('message', w.receiveMessageFromMain.bind(w));
}
if (process.send) {
    process.on(`unhandledRejection`, (e) => {
        const msgToMain = {
            error: 'worker unhandledRejection'
        };
        if (typeof e === 'string') {
            msgToMain.error = e;
        }
        else if (e != null) {
            if (e.stack) {
                msgToMain.error += ': ' + e.stack;
            }
            else if (e.message) {
                msgToMain.error += ': ' + e.message;
            }
        }
        process.send(msgToMain);
    });
}

// EXTERNAL MODULE: external "../../utils"
var external_utils_ = __webpack_require__(1);

// EXTERNAL MODULE: ./node_modules/graceful-fs/graceful-fs.js
var graceful_fs = __webpack_require__(6);
var graceful_fs_default = /*#__PURE__*/__webpack_require__.n(graceful_fs);

// EXTERNAL MODULE: ./node_modules/mkdirp/index.js
var mkdirp = __webpack_require__(55);
var mkdirp_default = /*#__PURE__*/__webpack_require__.n(mkdirp);

// CONCATENATED MODULE: ./dist/transpiled-sys-node/sys/node/node-fs.js


class node_fs_NodeFs {
    constructor(process) {
        this.supportsMkdirRecursive = false;
        try {
            const segments = process.version.split('.').map(v => parseInt(v, 10));
            const major = segments[0];
            const minor = segments[1];
            // mkdir recursive support started in v10.12.0
            this.supportsMkdirRecursive = (major >= 11 || (major === 10 && minor >= 12));
        }
        catch (e) { }
    }
    access(path) {
        return new Promise((resolve, reject) => {
            graceful_fs_default.a.access(path, err => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    copyFile(src, dest) {
        return new Promise((resolve, reject) => {
            return graceful_fs_default.a.copyFile(src, dest, 0, (err) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    createReadStream(filePath) {
        return graceful_fs_default.a.createReadStream(filePath);
    }
    mkdir(dirPath, opts = {}) {
        if (opts.recursive) {
            if (this.supportsMkdirRecursive) {
                // supports mkdir recursive
                return new Promise((resolve, reject) => {
                    graceful_fs_default.a.mkdir(dirPath, opts, err => {
                        if (err) {
                            reject(err);
                        }
                        else {
                            resolve();
                        }
                    });
                });
            }
            else {
                // does NOT support mkdir recursive
                // use good ol' mkdirp
                return new Promise((resolve, reject) => {
                    mkdirp_default()(dirPath, err => {
                        if (err) {
                            reject(err);
                        }
                        else {
                            resolve();
                        }
                    });
                });
            }
        }
        // not doing recursive
        return new Promise((resolve, reject) => {
            graceful_fs_default.a.mkdir(dirPath, opts, err => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    mkdirSync(dirPath, opts = {}) {
        if (opts.recursive) {
            if (this.supportsMkdirRecursive) {
                // supports mkdir recursive
                graceful_fs_default.a.mkdirSync(dirPath, opts);
            }
            else {
                // does NOT support mkdir recursive
                // use good ol' mkdirp
                mkdirp_default.a.sync(dirPath, opts);
            }
        }
        else {
            // not doing recursive
            graceful_fs_default.a.mkdirSync(dirPath, opts);
        }
    }
    readdir(dirPath) {
        return new Promise((resolve, reject) => {
            graceful_fs_default.a.readdir(dirPath, (err, files) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(files);
                }
            });
        });
    }
    readdirSync(dirPath) {
        return graceful_fs_default.a.readdirSync(dirPath);
    }
    readFile(filePath, format = 'utf8') {
        return new Promise((resolve, reject) => {
            graceful_fs_default.a.readFile(filePath, format, (err, content) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(content);
                }
            });
        });
    }
    exists(filePath) {
        return new Promise(resolve => {
            graceful_fs_default.a.exists(filePath, resolve);
        });
    }
    existsSync(filePath) {
        return graceful_fs_default.a.existsSync(filePath);
    }
    readFileSync(filePath, format = 'utf8') {
        return graceful_fs_default.a.readFileSync(filePath, format);
    }
    rmdir(dirPath) {
        return new Promise((resolve, reject) => {
            graceful_fs_default.a.rmdir(dirPath, (err) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    stat(itemPath) {
        return new Promise((resolve, reject) => {
            graceful_fs_default.a.stat(itemPath, (err, stats) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(stats);
                }
            });
        });
    }
    statSync(itemPath) {
        return graceful_fs_default.a.statSync(itemPath);
    }
    unlink(filePath) {
        return new Promise((resolve, reject) => {
            graceful_fs_default.a.unlink(filePath, (err) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    writeFile(filePath, content) {
        return new Promise((resolve, reject) => {
            graceful_fs_default.a.writeFile(filePath, content, { encoding: 'utf8' }, (err) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    writeFileSync(filePath, content) {
        return graceful_fs_default.a.writeFileSync(filePath, content, { encoding: 'utf8' });
    }
}

// EXTERNAL MODULE: external "path"
var external_path_ = __webpack_require__(5);
var external_path_default = /*#__PURE__*/__webpack_require__.n(external_path_);

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/copy/copy-tasks-worker.js



async function copyTasksWorker(copyTasks) {
    const results = {
        diagnostics: [],
        dirPaths: [],
        filePaths: []
    };
    try {
        const fs = new node_fs_NodeFs(process);
        const allCopyTasks = [];
        // figure out all the file copy tasks we'll have
        // by digging down through any directory copy tasks
        while (copyTasks.length > 0) {
            const tasks = copyTasks.splice(0, 100);
            await Promise.all(tasks.map(async (copyTask) => {
                await processCopyTask(fs, results, allCopyTasks, copyTask);
            }));
        }
        // figure out which directories we'll need to make first
        const mkDirs = ensureDirs(allCopyTasks);
        for (const mkDir of mkDirs) {
            try {
                await fs.mkdir(mkDir);
            }
            catch (mkDirErr) { }
        }
        while (allCopyTasks.length > 0) {
            const tasks = allCopyTasks.splice(0, 100);
            await Promise.all(tasks.map(async (copyTask) => {
                await fs.copyFile(copyTask.src, copyTask.dest);
            }));
        }
    }
    catch (e) {
        Object(external_utils_["catchError"])(results.diagnostics, e);
    }
    return results;
}
async function processCopyTask(fs, results, allCopyTasks, copyTask) {
    try {
        copyTask.src = Object(external_utils_["normalizePath"])(copyTask.src);
        copyTask.dest = Object(external_utils_["normalizePath"])(copyTask.dest);
        // get the stats for this src to see if it's a directory or not
        const stats = await fs.stat(copyTask.src);
        if (stats.isDirectory()) {
            // still a directory, keep diggin down
            if (!results.dirPaths.includes(copyTask.dest)) {
                results.dirPaths.push(copyTask.dest);
            }
            await processCopyTaskDirectory(fs, results, allCopyTasks, copyTask);
        }
        else if (!shouldIgnore(copyTask.src)) {
            // this is a file we should copy
            if (!results.filePaths.includes(copyTask.dest)) {
                results.filePaths.push(copyTask.dest);
            }
            allCopyTasks.push(copyTask);
        }
    }
    catch (e) {
        if (copyTask.warn !== false) {
            const err = Object(external_utils_["buildError"])(results.diagnostics);
            err.messageText = e.message;
        }
    }
}
async function processCopyTaskDirectory(fs, results, allCopyTasks, copyTask) {
    try {
        const dirItems = await fs.readdir(copyTask.src);
        await Promise.all(dirItems.map(async (dirItem) => {
            const subCopyTask = {
                src: external_path_default.a.join(copyTask.src, dirItem),
                dest: external_path_default.a.join(copyTask.dest, dirItem),
                warn: copyTask.warn
            };
            await processCopyTask(fs, results, allCopyTasks, subCopyTask);
        }));
    }
    catch (e) {
        Object(external_utils_["catchError"])(results.diagnostics, e);
    }
}
function ensureDirs(copyTasks) {
    const mkDirs = [];
    copyTasks.forEach(copyTask => {
        addMkDir(mkDirs, external_path_default.a.dirname(copyTask.dest));
    });
    mkDirs.sort((a, b) => {
        const partsA = a.split('/').length;
        const partsB = b.split('/').length;
        if (partsA < partsB)
            return -1;
        if (partsA > partsB)
            return 1;
        if (a < b)
            return -1;
        if (a > b)
            return 1;
        return 0;
    });
    return mkDirs;
}
function addMkDir(mkDirs, destDir) {
    destDir = Object(external_utils_["normalizePath"])(destDir);
    if (destDir === ROOT_DIR || (destDir + '/') === ROOT_DIR || destDir === '') {
        return;
    }
    if (!mkDirs.includes(destDir)) {
        mkDirs.push(destDir);
    }
    const parts = destDir.split('/');
    if (parts.length === 1) {
        return;
    }
    parts.pop();
    const subDestDir = parts.join('/');
    addMkDir(mkDirs, subDestDir);
}
const ROOT_DIR = Object(external_utils_["normalizePath"])(external_path_default.a.resolve('/'));
function shouldIgnore(filePath) {
    filePath = filePath.trim().toLowerCase();
    return IGNORE.some(ignoreFile => filePath.endsWith(ignoreFile));
}
const IGNORE = [
    '.ds_store',
    '.gitignore',
    'desktop.ini',
    'thumbs.db'
];

// CONCATENATED MODULE: ./dist/transpiled-sys-node/utils/shadow-css.js
/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 *
 * This file is a port of shadowCSS from webcomponents.js to TypeScript.
 * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js
 * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts
 */
function scopeCss(cssText, scopeId, commentOriginalSelector) {
    const sc = new ShadowCss();
    return sc.shimCssText(cssText, scopeId, scopeId + '-h', scopeId + '-s', commentOriginalSelector);
}
class ShadowCss {
    constructor() {
        this.strictStyling = true;
    }
    shimCssText(cssText, scopeId, hostScopeId = '', slotScopeId = '', commentOriginalSelector = false) {
        const commentsWithHash = extractCommentsWithHash(cssText);
        cssText = stripComments(cssText);
        const orgSelectors = [];
        if (commentOriginalSelector) {
            const processCommentedSelector = (rule) => {
                const placeholder = `/*!@___${orgSelectors.length}___*/`;
                const comment = `/*!@${rule.selector}*/`;
                orgSelectors.push({ placeholder, comment });
                rule.selector = placeholder + rule.selector;
                return rule;
            };
            cssText = processRules(cssText, rule => {
                if (rule.selector[0] !== '@') {
                    return processCommentedSelector(rule);
                }
                else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||
                    rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {
                    rule.content = processRules(rule.content, processCommentedSelector);
                    return rule;
                }
                return rule;
            });
        }
        const scopedCssText = this._scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);
        cssText = [scopedCssText, ...commentsWithHash].join('\n');
        if (commentOriginalSelector) {
            orgSelectors.forEach(({ placeholder, comment }) => {
                cssText = cssText.replace(placeholder, comment);
            });
        }
        return cssText;
    }
    _scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {
        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively
        cssText = this._insertPolyfillHostInCssText(cssText);
        cssText = this._convertColonHost(cssText);
        cssText = this._convertColonHostContext(cssText);
        cssText = this._convertColonSlotted(cssText, slotScopeId);
        cssText = this._convertShadowDOMSelectors(cssText);
        if (scopeId) {
            cssText = this._scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);
        }
        cssText = cssText.replace(/-shadowcsshost-no-combinator/g, `.${hostScopeId}`);
        cssText = cssText.replace(/>\s*\*\s+([^{, ]+)/gm, ' $1 ');
        return cssText.trim();
    }
    /*
     * convert a rule like :host(.foo) > .bar { }
     *
     * to
     *
     * .foo<scopeName> > .bar
    */
    _convertColonHost(cssText) {
        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);
    }
    /*
   * convert a rule like ::slotted(.foo) { }
  */
    _convertColonSlotted(cssText, slotAttr) {
        const regExp = _cssColonSlottedRe;
        return cssText.replace(regExp, function (...m) {
            if (m[2]) {
                const compound = m[2].trim();
                const suffix = m[3];
                const sel = '.' + slotAttr + ' > ' + compound + suffix;
                return sel;
            }
            else {
                return _polyfillHostNoCombinator + m[3];
            }
        });
    }
    /*
     * convert a rule like :host-context(.foo) > .bar { }
     *
     * to
     *
     * .foo<scopeName> > .bar, .foo scopeName > .bar { }
     *
     * and
     *
     * :host-context(.foo:host) .bar { ... }
     *
     * to
     *
     * .foo<scopeName> .bar { ... }
    */
    _convertColonHostContext(cssText) {
        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);
    }
    _convertColonRule(cssText, regExp, partReplacer) {
        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule
        return cssText.replace(regExp, function (...m) {
            if (m[2]) {
                const parts = m[2].split(',');
                const r = [];
                for (let i = 0; i < parts.length; i++) {
                    const p = parts[i].trim();
                    if (!p)
                        break;
                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));
                }
                return r.join(',');
            }
            else {
                return _polyfillHostNoCombinator + m[3];
            }
        });
    }
    _colonHostContextPartReplacer(host, part, suffix) {
        if (part.indexOf(_polyfillHost) > -1) {
            return this._colonHostPartReplacer(host, part, suffix);
        }
        else {
            return host + part + suffix + ', ' + part + ' ' + host + suffix;
        }
    }
    _colonHostPartReplacer(host, part, suffix) {
        return host + part.replace(_polyfillHost, '') + suffix;
    }
    /*
     * Convert combinators like ::shadow and pseudo-elements like ::content
     * by replacing with space.
    */
    _convertShadowDOMSelectors(cssText) {
        return _shadowDOMSelectorsRe.reduce((result, pattern) => result.replace(pattern, ' '), cssText);
    }
    // change a selector like 'div' to 'name div'
    _scopeSelectors(cssText, scopeSelector, hostSelector, slotSelector, commentOriginalSelector) {
        return processRules(cssText, (rule) => {
            let selector = rule.selector;
            let content = rule.content;
            if (rule.selector[0] !== '@') {
                selector =
                    this._scopeSelector(rule.selector, scopeSelector, hostSelector, slotSelector, this.strictStyling);
            }
            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||
                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {
                content = this._scopeSelectors(rule.content, scopeSelector, hostSelector, slotSelector, commentOriginalSelector);
            }
            selector = selector.replace(/\s{2,}/g, ' ').trim();
            return new CssRule(selector, content);
        });
    }
    _scopeSelector(selector, scopeSelector, hostSelector, slotSelector, strict) {
        return selector.split(',')
            .map(shallowPart => {
            if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {
                return shallowPart.trim();
            }
            if (this._selectorNeedsScoping(shallowPart, scopeSelector)) {
                return strict ?
                    this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector).trim() :
                    this._applySelectorScope(shallowPart, scopeSelector, hostSelector).trim();
            }
            else {
                return shallowPart.trim();
            }
        })
            .join(', ');
    }
    _selectorNeedsScoping(selector, scopeSelector) {
        const re = this._makeScopeMatcher(scopeSelector);
        return !re.test(selector);
    }
    _makeScopeMatcher(scopeSelector) {
        const lre = /\[/g;
        const rre = /\]/g;
        scopeSelector = scopeSelector.replace(lre, '\\[').replace(rre, '\\]');
        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');
    }
    _applySelectorScope(selector, scopeSelector, hostSelector) {
        // Difference from webcomponents.js: scopeSelector could not be an array
        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);
    }
    // scope via name and [is=name]
    _applySimpleSelectorScope(selector, scopeSelector, hostSelector) {
        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()
        _polyfillHostRe.lastIndex = 0;
        if (_polyfillHostRe.test(selector)) {
            const replaceBy = this.strictStyling ? `.${hostSelector}` : scopeSelector;
            return selector
                .replace(_polyfillHostNoCombinatorRe, (_, selector) => {
                return selector.replace(/([^:]*)(:*)(.*)/, (_, before, colon, after) => {
                    return before + replaceBy + colon + after;
                });
            })
                .replace(_polyfillHostRe, replaceBy + ' ');
        }
        return scopeSelector + ' ' + selector;
    }
    _applyStrictSelectorScope(selector, scopeSelector, hostSelector) {
        const isRe = /\[is=([^\]]*)\]/g;
        scopeSelector = scopeSelector.replace(isRe, (_, ...parts) => parts[0]);
        const className = '.' + scopeSelector;
        const _scopeSelectorPart = (p) => {
            let scopedP = p.trim();
            if (!scopedP) {
                return '';
            }
            if (p.indexOf(_polyfillHostNoCombinator) > -1) {
                scopedP = this._applySimpleSelectorScope(p, scopeSelector, hostSelector);
            }
            else {
                // remove :host since it should be unnecessary
                const t = p.replace(_polyfillHostRe, '');
                if (t.length > 0) {
                    const matches = t.match(/([^:]*)(:*)(.*)/);
                    if (matches) {
                        scopedP = matches[1] + className + matches[2] + matches[3];
                    }
                }
            }
            return scopedP;
        };
        const safeContent = new SafeSelector(selector);
        selector = safeContent.content();
        let scopedSelector = '';
        let startIndex = 0;
        let res;
        const sep = /( |>|\+|~(?!=))\s*/g;
        // If a selector appears before :host it should not be shimmed as it
        // matches on ancestor elements and not on elements in the host's shadow
        // `:host-context(div)` is transformed to
        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`
        // the `div` is not part of the component in the 2nd selectors and should not be scoped.
        // Historically `component-tag:host` was matching the component so we also want to preserve
        // this behavior to avoid breaking legacy apps (it should not match).
        // The behavior should be:
        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)
        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a
        //   `:host-context(tag)`)
        const hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;
        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present
        let shouldScope = !hasHost;
        while ((res = sep.exec(selector)) !== null) {
            const separator = res[1];
            const part = selector.slice(startIndex, res.index).trim();
            shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;
            const scopedPart = shouldScope ? _scopeSelectorPart(part) : part;
            scopedSelector += `${scopedPart} ${separator} `;
            startIndex = sep.lastIndex;
        }
        const part = selector.substring(startIndex);
        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;
        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;
        // replace the placeholders with their original values
        return safeContent.restore(scopedSelector);
    }
    _insertPolyfillHostInCssText(selector) {
        selector = selector
            .replace(_colonHostContextRe, _polyfillHostContext)
            .replace(_colonHostRe, _polyfillHost)
            .replace(_colonSlottedRe, _polyfillSlotted);
        return selector;
    }
}
class SafeSelector {
    constructor(selector) {
        this.placeholders = [];
        this.index = 0;
        // Replaces attribute selectors with placeholders.
        // The WS in [attr="va lue"] would otherwise be interpreted as a selector separator.
        selector = selector.replace(/(\[[^\]]*\])/g, (_, keep) => {
            const replaceBy = `__ph-${this.index}__`;
            this.placeholders.push(keep);
            this.index++;
            return replaceBy;
        });
        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.
        // WS and "+" would otherwise be interpreted as selector separators.
        this._content = selector.replace(/(:nth-[-\w]+)(\([^)]+\))/g, (_, pseudo, exp) => {
            const replaceBy = `__ph-${this.index}__`;
            this.placeholders.push(exp);
            this.index++;
            return pseudo + replaceBy;
        });
    }
    restore(content) {
        return content.replace(/__ph-(\d+)__/g, (_, index) => this.placeholders[+index]);
    }
    content() { return this._content; }
}
const _polyfillHost = '-shadowcsshost';
const _polyfillSlotted = '-shadowcssslotted';
// note: :host-context pre-processed to -shadowcsshostcontext.
const _polyfillHostContext = '-shadowcsscontext';
const _parenSuffix = ')(?:\\((' +
    '(?:\\([^)(]*\\)|[^)(]*)+?' +
    ')\\))?([^,{]*)';
const _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');
const _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');
const _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');
const _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';
const _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\s]*)/;
const _shadowDOMSelectorsRe = [
    /::shadow/g,
    /::content/g
];
const _selectorReSuffix = '([>\\s~+\[.,{:][\\s\\S]*)?$';
const _polyfillHostRe = /-shadowcsshost/gim;
const _colonHostRe = /:host/gim;
const _colonSlottedRe = /::slotted/gim;
const _colonHostContextRe = /:host-context/gim;
const _commentRe = /\/\*\s*[\s\S]*?\*\//g;
function stripComments(input) {
    return input.replace(_commentRe, '');
}
const _commentWithHashRe = /\/\*\s*#\s*source(Mapping)?URL=[\s\S]+?\*\//g;
function extractCommentsWithHash(input) {
    return input.match(_commentWithHashRe) || [];
}
const _ruleRe = /(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g;
const _curlyRe = /([{}])/g;
const OPEN_CURLY = '{';
const CLOSE_CURLY = '}';
const BLOCK_PLACEHOLDER = '%BLOCK%';
class CssRule {
    constructor(selector, content) {
        this.selector = selector;
        this.content = content;
    }
}
function processRules(input, ruleCallback) {
    const inputWithEscapedBlocks = escapeBlocks(input);
    let nextBlockIndex = 0;
    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function (...m) {
        const selector = m[2];
        let content = '';
        let suffix = m[4];
        let contentPrefix = '';
        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {
            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];
            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);
            contentPrefix = '{';
        }
        const rule = ruleCallback(new CssRule(selector, content));
        return `${m[1]}${rule.selector}${m[3]}${contentPrefix}${rule.content}${suffix}`;
    });
}
class StringWithEscapedBlocks {
    constructor(escapedString, blocks) {
        this.escapedString = escapedString;
        this.blocks = blocks;
    }
}
function escapeBlocks(input) {
    const inputParts = input.split(_curlyRe);
    const resultParts = [];
    const escapedBlocks = [];
    let bracketCount = 0;
    let currentBlockParts = [];
    for (let partIndex = 0; partIndex < inputParts.length; partIndex++) {
        const part = inputParts[partIndex];
        if (part === CLOSE_CURLY) {
            bracketCount--;
        }
        if (bracketCount > 0) {
            currentBlockParts.push(part);
        }
        else {
            if (currentBlockParts.length > 0) {
                escapedBlocks.push(currentBlockParts.join(''));
                resultParts.push(BLOCK_PLACEHOLDER);
                currentBlockParts = [];
            }
            resultParts.push(part);
        }
        if (part === OPEN_CURLY) {
            bracketCount++;
        }
    }
    if (currentBlockParts.length > 0) {
        escapedBlocks.push(currentBlockParts.join(''));
        resultParts.push(BLOCK_PLACEHOLDER);
    }
    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);
}

// EXTERNAL MODULE: ./node_modules/cssnano/dist/index.js
var dist = __webpack_require__(175);
var dist_default = /*#__PURE__*/__webpack_require__.n(dist);

// EXTERNAL MODULE: ./node_modules/autoprefixer/lib/autoprefixer.js
var autoprefixer = __webpack_require__(176);
var autoprefixer_default = /*#__PURE__*/__webpack_require__.n(autoprefixer);

// EXTERNAL MODULE: ./node_modules/postcss/lib/postcss.js
var postcss = __webpack_require__(3);
var postcss_default = /*#__PURE__*/__webpack_require__.n(postcss);

// CONCATENATED MODULE: ./dist/transpiled-sys-node/sys/node/optimize-css-worker.js




async function optimizeCssWorker(inputOpts) {
    const output = {
        css: null,
        diagnostics: []
    };
    try {
        const plugins = [];
        if (inputOpts.autoprefixer !== false && inputOpts.autoprefixer !== null) {
            plugins.push(addAutoprefixer(inputOpts));
        }
        if (inputOpts.minify) {
            plugins.push(addMinify());
        }
        const processor = postcss_default()(plugins);
        try {
            const result = await processor.process(inputOpts.css, {
                map: null,
                from: inputOpts.filePath
            });
            result.warnings().forEach(warning => {
                output.diagnostics.push({
                    header: `Optimize CSS: ${warning.plugin}`,
                    messageText: warning.text,
                    level: 'warn',
                    type: 'css',
                    absFilePath: inputOpts.filePath
                });
            });
            output.css = result.css;
        }
        catch (e) {
            const diagnostic = {
                header: `Optimize CSS`,
                messageText: `CSS Error` + e,
                level: `error`,
                type: `css`,
                absFilePath: inputOpts.filePath
            };
            if (typeof e.name === 'string') {
                diagnostic.header = e.name;
            }
            if (typeof e.reason === 'string') {
                diagnostic.messageText = e.reason;
            }
            if (typeof e.source === 'string' && typeof e.line === 'number') {
                const lines = e.source.replace(/\r/g, '\n').split('\n');
                if (lines.length > 0) {
                    const addLine = (lineNumber) => {
                        const line = lines[lineNumber];
                        if (typeof line === 'string') {
                            const printLine = {
                                lineIndex: -1,
                                lineNumber: -1,
                                text: line,
                                errorCharStart: -1,
                                errorLength: -1
                            };
                            diagnostic.lines = diagnostic.lines || [];
                            diagnostic.lines.push(printLine);
                        }
                    };
                    addLine(e.line - 3);
                    addLine(e.line - 2);
                    addLine(e.line - 1);
                    addLine(e.line);
                    addLine(e.line + 1);
                    addLine(e.line + 2);
                    addLine(e.line + 3);
                }
            }
            output.diagnostics.push(diagnostic);
        }
    }
    catch (e) {
        Object(external_utils_["catchError"])(output.diagnostics, e);
    }
    return output;
}
function addAutoprefixer(inputOpts) {
    const autoprefixerOpts = (inputOpts.autoprefixer != null && typeof inputOpts.autoprefixer === 'object') ? inputOpts.autoprefixer : DEFAULT_AUTOPREFIX_LEGACY;
    return autoprefixer_default()(autoprefixerOpts);
}
const DEFAULT_AUTOPREFIX_LEGACY = {
    overrideBrowserslist: [
        'last 2 versions',
        'iOS >= 9',
        'Android >= 4.4',
        'Explorer >= 11',
        'ExplorerMobile >= 11'
    ],
    cascade: false,
    remove: false,
    flexbox: 'no-2009'
};
function addMinify() {
    const cssnanoOpts = {
        preset: 'default'
    };
    return dist_default()(cssnanoOpts);
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/prerender/crawl-urls.js

function crawlAnchorsForNextUrls(prerenderConfig, diagnostics, baseUrl, currentUrl, parsedAnchors) {
    if (!Array.isArray(parsedAnchors) || parsedAnchors.length === 0) {
        return [];
    }
    const basePathParts = baseUrl.pathname.split('/');
    // filterAnchor(): filter which anchors to actually crawl
    // normalizeUrl(): normalize href strings into URL objects
    // filterUrl(): filter which urls to actually crawl
    // normalizeHref(): normalize URL objects into href strings
    return parsedAnchors
        .filter(anchor => {
        // filter which anchors to actually crawl
        if (typeof prerenderConfig.filterAnchor === 'function') {
            // user filterAnchor()
            try {
                const userFilterAnchor = prerenderConfig.filterAnchor(anchor, currentUrl);
                if (userFilterAnchor === false) {
                    return false;
                }
            }
            catch (e) {
                // user filterAnchor() error
                Object(external_utils_["catchError"])(diagnostics, e);
                return false;
            }
        }
        // standard filterAnchor()
        return standardFilterAnchor(diagnostics, anchor, currentUrl);
    })
        .map(anchor => {
        // normalize href strings into URL objects
        if (typeof prerenderConfig.normalizeUrl === 'function') {
            try {
                // user normalizeUrl()
                const userNormalizedUrl = prerenderConfig.normalizeUrl(anchor.href, currentUrl);
                // standard normalizeUrl(), after user normalized
                return standardNormalizeUrl(diagnostics, userNormalizedUrl.href, currentUrl);
            }
            catch (e) {
                // user normalizeUrl() error
                Object(external_utils_["catchError"])(diagnostics, e);
            }
        }
        // standard normalizeUrl(), no user normalized
        return standardNormalizeUrl(diagnostics, anchor.href, currentUrl);
    })
        .filter(url => {
        // filter which urls to actually crawl
        if (typeof prerenderConfig.filterUrl === 'function') {
            // user filterUrl()
            try {
                const userFilterUrl = prerenderConfig.filterUrl(url, currentUrl);
                if (userFilterUrl === false) {
                    return false;
                }
            }
            catch (e) {
                // user filterUrl() error
                Object(external_utils_["catchError"])(diagnostics, e);
                return false;
            }
        }
        // standard filterUrl()
        return standardFilterUrl(diagnostics, url, currentUrl, basePathParts);
    })
        .map(url => {
        // standard normalize href
        // normalize URL objects into href strings
        return standardNormalizeHref(prerenderConfig, diagnostics, url);
    })
        .reduce((hrefs, href) => {
        // remove any duplicate hrefs from the array
        if (!hrefs.includes(href)) {
            hrefs.push(href);
        }
        return hrefs;
    }, [])
        .sort((a, b) => {
        // sort the hrefs so the urls with the least amount
        // of directories are first, then by alphabetical
        const partsA = a.split('/').length;
        const partsB = b.split('/').length;
        if (partsA < partsB)
            return -1;
        if (partsA > partsB)
            return 1;
        if (a < b)
            return -1;
        if (a > b)
            return 1;
        return 0;
    });
}
function standardFilterAnchor(diagnostics, attrs, _base) {
    try {
        let href = attrs.href;
        if (typeof href === 'string') {
            href = href.trim();
            if (href !== '' && !href.startsWith('#') && !href.startsWith('?')) {
                const target = attrs.target;
                if (typeof target === 'string' && attrs.target.trim().toLowerCase() !== '_self') {
                    return false;
                }
                return true;
            }
        }
    }
    catch (e) {
        Object(external_utils_["catchError"])(diagnostics, e);
    }
    return false;
}
function standardNormalizeUrl(diagnostics, href, currentUrl) {
    if (typeof href === 'string') {
        try {
            const outputUrl = new URL(href, currentUrl.href);
            outputUrl.protocol = currentUrl.href;
            outputUrl.hash = '';
            outputUrl.search = '';
            const parts = outputUrl.pathname.split('/');
            const lastPart = parts[parts.length - 1];
            if (lastPart === 'index.html' || lastPart === 'index.htm') {
                parts.pop();
                outputUrl.pathname = parts.join('/');
            }
            return outputUrl;
        }
        catch (e) {
            Object(external_utils_["catchError"])(diagnostics, e);
        }
    }
    return null;
}
function standardFilterUrl(diagnostics, url, currentUrl, basePathParts) {
    try {
        if (url.hostname != null && currentUrl.hostname != null && url.hostname !== currentUrl.hostname) {
            return false;
        }
        const inputPathParts = url.pathname.split('/');
        if (inputPathParts.length < basePathParts.length) {
            return false;
        }
        for (let i = 0; i < basePathParts.length; i++) {
            const basePathPart = basePathParts[i];
            const inputPathPart = inputPathParts[i];
            if (basePathParts.length - 1 === i && basePathPart === '') {
                break;
            }
            if (basePathPart !== inputPathPart) {
                return false;
            }
        }
        return true;
    }
    catch (e) {
        Object(external_utils_["catchError"])(diagnostics, e);
    }
    return false;
}
function standardNormalizeHref(prerenderConfig, diagnostics, url) {
    try {
        if (url != null && typeof url.href === 'string') {
            let href = url.href.trim();
            if (prerenderConfig.trailingSlash) {
                // url should have a trailing slash
                if (!href.endsWith('/')) {
                    const parts = url.pathname.split('/');
                    const lastPart = parts[parts.length - 1];
                    if (!lastPart.includes('.')) {
                        // does not end with a slash and last part does not have a dot
                        href += '/';
                    }
                }
            }
            else {
                // url should NOT have a trailing slash
                if (href.endsWith('/') && url.pathname !== '/') {
                    // this has a trailing slash and it's not the root path
                    href = href.substr(0, href.length - 1);
                }
            }
            return href;
        }
    }
    catch (e) {
        Object(external_utils_["catchError"])(diagnostics, e);
    }
    return null;
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/prerender/prerender-config.js

function getPrerenderConfig(diagnostics, prerenderConfigPath) {
    const prerenderConfig = {};
    if (typeof prerenderConfigPath === 'string') {
        try {
            // webpack work-around/hack
            const requireFunc =  true ? require : undefined;
            const userConfig = requireFunc(prerenderConfigPath);
            if (userConfig != null) {
                Object.assign(prerenderConfig, userConfig);
            }
        }
        catch (e) {
            Object(external_utils_["catchError"])(diagnostics, e);
        }
    }
    if (typeof prerenderConfig.trailingSlash !== 'boolean') {
        prerenderConfig.trailingSlash = false;
    }
    return prerenderConfig;
}

// EXTERNAL MODULE: external "../../mock-doc"
var external_mock_doc_ = __webpack_require__(33);

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/prerender/prerender-global-patch.js
function patchNodeGlobal(nodeGlobal, devServerHostUrl) {
    if (typeof nodeGlobal.fetch !== 'function') {
        const path = __webpack_require__(5);
        // webpack work-around/hack
        const requireFunc =  true ? require : undefined;
        const nodeFetch = requireFunc(path.join(__dirname, 'node-fetch.js'));
        nodeGlobal.fetch = (input, init) => {
            if (typeof input === 'string') {
                // fetch(url) w/ url string
                const urlStr = normalizeUrl(input, devServerHostUrl);
                return nodeFetch.fetch(urlStr, init);
            }
            else {
                // fetch(Request) w/ request object
                input.url = normalizeUrl(input.url, devServerHostUrl);
                return nodeFetch.fetch(input, init);
            }
        };
        nodeGlobal.Headers = nodeFetch.Headers;
        nodeGlobal.Request = nodeFetch.Request;
        nodeGlobal.Response = nodeFetch.Response;
        nodeGlobal.FetchError = nodeFetch.FetchError;
    }
}
function normalizeUrl(inputUrl, devServerHostUrl) {
    const requestUrl = new URL(inputUrl, devServerHostUrl);
    return requestUrl.href;
}
function patchWindowGlobal(nodeGlobal, win) {
    win.fetch = nodeGlobal.fetch;
    win.Headers = nodeGlobal.Headers;
    win.Request = nodeGlobal.Request;
    win.Response = nodeGlobal.Response;
    win.FetchError = nodeGlobal.FetchError;
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/style/scope-css.js

async function scopeComponentCss(config, buildCtx, cmp, mode, cssText, commentOriginalSelector) {
    try {
        const scopeId = getScopeId(cmp.tagName, mode);
        cssText = await config.sys.scopeCss(cssText, scopeId, commentOriginalSelector);
    }
    catch (e) {
        Object(external_utils_["catchError"])(buildCtx.diagnostics, e);
    }
    return cssText;
}
const getScopeId = (tagName, mode) => {
    return ('sc-' + tagName) + ((mode && mode !== external_utils_["DEFAULT_STYLE_MODE"]) ? '-' + mode : '');
};

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/html/utils.js
function getAbsoluteBuildDir(config, outputTarget) {
    const relativeBuildDir = config.sys.path.relative(outputTarget.dir, outputTarget.buildDir);
    return config.sys.path.join('/', relativeBuildDir) + '/';
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/html/inject-module-preloads.js

function optimizeCriticalPath(config, doc, criticalBundlers, outputTarget) {
    const buildDir = getAbsoluteBuildDir(config, outputTarget);
    const paths = criticalBundlers.map(path => config.sys.path.join(buildDir, path));
    injectModulePreloads(doc, paths);
}
function injectModulePreloads(doc, paths) {
    const existingLinks = Array.from(doc.querySelectorAll('link[rel=modulepreload]'))
        .map(link => link.getAttribute('href'));
    const addLinks = paths
        .filter(path => !existingLinks.includes(path))
        .map(path => createModulePreload(doc, path));
    const firstScript = doc.head.querySelector('script');
    if (firstScript) {
        addLinks.forEach(link => {
            doc.head.insertBefore(link, firstScript);
        });
    }
    else {
        addLinks.forEach(link => {
            doc.head.appendChild(link);
        });
    }
}
function createModulePreload(doc, href) {
    const link = doc.createElement('link');
    link.setAttribute('rel', 'modulepreload');
    link.setAttribute('href', href);
    return link;
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/prerender/prerender-modulepreload.js



function generateModulePreloads(doc, hydrateResults, componnentGraph) {
    if (!componnentGraph) {
        return false;
    }
    const hasImportScript = !!doc.querySelector('script[type=module][data-resources-url]');
    if (!hasImportScript) {
        return false;
    }
    const modulePreloads = Object(external_utils_["unique"])(Object(external_utils_["flatOne"])(hydrateResults.components
        .map(cmp => getScopeId(cmp.tag))
        .map(scopeId => componnentGraph.get(scopeId) || [])));
    injectModulePreloads(doc, modulePreloads);
    return true;
}

// EXTERNAL MODULE: external "fs"
var external_fs_ = __webpack_require__(13);
var external_fs_default = /*#__PURE__*/__webpack_require__.n(external_fs_);

// EXTERNAL MODULE: external "url"
var external_url_ = __webpack_require__(32);

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/prerender/prerender-worker/prerender-worker.js









async function prerenderWorker(prerenderRequest) {
    // worker thread!
    const results = {
        diagnostics: [],
        anchorUrls: [],
        filePath: prerenderRequest.writeToFilePath
    };
    try {
        const url = new external_url_["URL"](prerenderRequest.url, prerenderRequest.devServerHostUrl);
        const componentGraph = getComponentGraph(prerenderRequest.componentGraphPath);
        const win = getWindow(prerenderRequest);
        const doc = win.document;
        // webpack work-around/hack
        const requireFunc =  true ? require : undefined;
        const hydrateApp = requireFunc(prerenderRequest.hydrateAppFilePath);
        const prerenderConfig = getPrerenderConfig(results.diagnostics, prerenderRequest.prerenderConfigPath);
        const opts = getRenderToStringOptions(prerenderConfig, url, results);
        if (typeof prerenderConfig.beforeHydrate === 'function') {
            try {
                const rtn = prerenderConfig.beforeHydrate(doc, url);
                if (rtn != null && typeof rtn.then === 'function') {
                    await rtn;
                }
            }
            catch (e) {
                Object(external_utils_["catchError"])(results.diagnostics, e);
            }
        }
        // parse the html to dom nodes, hydrate the components, then
        // serialize the hydrated dom nodes back to into html
        const hydrateResults = await hydrateApp.hydrateDocument(doc, opts);
        results.diagnostics.push(...hydrateResults.diagnostics);
        generateModulePreloads(doc, hydrateResults, componentGraph);
        if (typeof prerenderConfig.afterHydrate === 'function') {
            try {
                const rtn = prerenderConfig.afterHydrate(doc, url);
                if (rtn != null && typeof rtn.then === 'function') {
                    await rtn;
                }
            }
            catch (e) {
                Object(external_utils_["catchError"])(results.diagnostics, e);
            }
        }
        if (typeof hydrateResults.httpStatus === 'number' && hydrateResults.httpStatus >= 400) {
            return results;
        }
        const html = Object(external_mock_doc_["serializeNodeToHtml"])(doc, {
            approximateLineWidth: opts.approximateLineWidth,
            outerHtml: false,
            prettyHtml: opts.prettyHtml,
            removeAttributeQuotes: opts.removeAttributeQuotes,
            removeBooleanAttributeQuotes: opts.removeBooleanAttributeQuotes,
            removeEmptyAttributes: opts.removeEmptyAttributes,
            removeHtmlComments: opts.removeHtmlComments,
            serializeShadowRoot: false
        });
        const baseUrl = new external_url_["URL"](prerenderRequest.baseUrl);
        results.anchorUrls = crawlAnchorsForNextUrls(prerenderConfig, results.diagnostics, baseUrl, url, hydrateResults.anchors);
        if (typeof prerenderConfig.filePath === 'function') {
            try {
                const userWriteToFilePath = prerenderConfig.filePath(url, results.filePath);
                if (typeof userWriteToFilePath === 'string') {
                    results.filePath = userWriteToFilePath;
                }
            }
            catch (e) {
                Object(external_utils_["catchError"])(results.diagnostics, e);
            }
        }
        await writePrerenderedHtml(results, html);
    }
    catch (e) {
        // ahh man! what happened!
        Object(external_utils_["catchError"])(results.diagnostics, e);
    }
    return results;
}
function getRenderToStringOptions(prerenderConfig, url, results) {
    const prerenderUrl = url.href;
    const opts = {
        url: prerenderUrl,
        approximateLineWidth: 100,
        removeAttributeQuotes: true,
        removeBooleanAttributeQuotes: true,
        removeEmptyAttributes: true,
        removeHtmlComments: true,
    };
    if (typeof prerenderConfig.canonicalUrl === 'function') {
        try {
            opts.canonicalUrl = prerenderConfig.canonicalUrl(url);
        }
        catch (e) {
            Object(external_utils_["catchError"])(results.diagnostics, e);
        }
    }
    else {
        opts.canonicalUrl = prerenderUrl;
    }
    if (typeof prerenderConfig.hydrateOptions === 'function') {
        try {
            const userOpts = prerenderConfig.hydrateOptions(url);
            if (userOpts != null) {
                if (userOpts.prettyHtml && typeof userOpts.removeAttributeQuotes !== 'boolean') {
                    opts.removeAttributeQuotes = false;
                }
                Object.assign(opts, userOpts);
            }
        }
        catch (e) {
            Object(external_utils_["catchError"])(results.diagnostics, e);
        }
    }
    return opts;
}
function writePrerenderedHtml(results, html) {
    ensureDir(results.filePath);
    return new Promise(resolve => {
        external_fs_default.a.writeFile(results.filePath, html, err => {
            if (err != null) {
                results.filePath = null;
                Object(external_utils_["catchError"])(results.diagnostics, err);
            }
            resolve();
        });
    });
}
const ensuredDirs = new Set();
function ensureDir(p) {
    const allDirs = [];
    while (true) {
        p = Object(external_utils_["normalizePath"])(external_path_default.a.dirname(p));
        if (typeof p === 'string' && p.length > 0 && p !== '/' && !p.endsWith(':/')) {
            allDirs.push(p);
        }
        else {
            break;
        }
    }
    allDirs.reverse();
    for (let i = 0; i < allDirs.length; i++) {
        const dir = allDirs[i];
        if (!ensuredDirs.has(dir)) {
            ensuredDirs.add(dir);
            try {
                external_fs_default.a.mkdirSync(dir);
            }
            catch (e) { }
        }
    }
}
const templateWindows = new Map();
function getWindow(prerenderRequest) {
    let templateWindow = templateWindows.get(prerenderRequest.templateId);
    if (templateWindow == null) {
        const templateHtml = external_fs_default.a.readFileSync(prerenderRequest.templateId, 'utf8');
        templateWindow = new external_mock_doc_["MockWindow"](templateHtml);
        templateWindows.set(prerenderRequest.templateId, templateWindow);
    }
    const win = Object(external_mock_doc_["cloneWindow"])(templateWindow);
    patchNodeGlobal(global, prerenderRequest.devServerHostUrl);
    patchWindowGlobal(global, win);
    return win;
}
let prerender_worker_componentGraph;
function getComponentGraph(componentGraphPath) {
    if (componentGraphPath == null) {
        return undefined;
    }
    if (prerender_worker_componentGraph == null) {
        const componentGraphJson = JSON.parse(external_fs_default.a.readFileSync(componentGraphPath, 'utf8'));
        prerender_worker_componentGraph = new Map(Object.entries(componentGraphJson));
    }
    return prerender_worker_componentGraph;
}

// EXTERNAL MODULE: external "typescript"
var external_typescript_ = __webpack_require__(0);
var external_typescript_default = /*#__PURE__*/__webpack_require__.n(external_typescript_);

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/transpile/transpile-to-es5-worker.js


async function transpileToEs5Worker(_cwd, input, inlineHelpers) {
    const results = {
        sourceFilePath: null,
        code: input,
        map: null,
        diagnostics: [],
        moduleFile: null,
        build: {}
    };
    const transpileOpts = {
        compilerOptions: {
            sourceMap: false,
            allowJs: true,
            declaration: false,
            target: external_typescript_default.a.ScriptTarget.ES5,
            module: external_typescript_default.a.ModuleKind.ESNext,
            removeComments: false,
            isolatedModules: true,
            skipLibCheck: true,
            noEmitHelpers: !inlineHelpers,
            importHelpers: !inlineHelpers
        }
    };
    const tsResults = external_typescript_default.a.transpileModule(input, transpileOpts);
    Object(external_utils_["loadTypeScriptDiagnostics"])(results.diagnostics, tsResults.diagnostics);
    if (results.diagnostics.length === 0) {
        results.code = tsResults.outputText;
    }
    return results;
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/transformers/remove-collection-imports.js

function removeCollectionImports(compilerCtx) {
    /*
  
      // remove side effect collection imports like:
      import 'ionicons';
  
      // do not remove collection imports with importClauses:
      import * as asdf 'ionicons';
      import { asdf } '@ionic/core';
  
    */
    return transformCtx => {
        function visitImport(importNode) {
            if (!importNode.importClause && importNode.moduleSpecifier && external_typescript_default.a.isStringLiteral(importNode.moduleSpecifier)) {
                // must not have an import clause
                // must have a module specifier and
                // the module specifier must be a string literal
                const moduleImport = importNode.moduleSpecifier.text;
                // test if this side effect import is a collection
                const isCollectionImport = compilerCtx.collections.some(c => {
                    return c.collectionName === moduleImport;
                });
                if (isCollectionImport) {
                    // turns out this is a side effect import is a collection,
                    // we actually don't want to include this in the JS output
                    // we've already gather the types we needed, kthxbai
                    return null;
                }
            }
            return importNode;
        }
        function visit(node) {
            switch (node.kind) {
                case external_typescript_default.a.SyntaxKind.ImportDeclaration:
                    return visitImport(node);
                default:
                    return external_typescript_default.a.visitEachChild(node, visit, transformCtx);
            }
        }
        return (tsSourceFile) => {
            return visit(tsSourceFile);
        };
    };
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/transformers/remove-stencil-import.js

function removeStencilImport(importNode) {
    if (importNode.moduleSpecifier != null && external_typescript_default.a.isStringLiteral(importNode.moduleSpecifier)) {
        if (importNode.moduleSpecifier.text === '@stencil/core') {
            if (importNode.importClause && importNode.importClause.namedBindings && importNode.importClause.namedBindings.kind === external_typescript_default.a.SyntaxKind.NamedImports) {
                const origImports = importNode.importClause.namedBindings.elements;
                const keepImports = origImports
                    .map(e => e.getText())
                    .filter(name => KEEP_IMPORTS.has(name));
                if (keepImports.length > 0) {
                    return external_typescript_default.a.updateImportDeclaration(importNode, undefined, undefined, external_typescript_default.a.createImportClause(undefined, external_typescript_default.a.createNamedImports(keepImports.map(name => external_typescript_default.a.createImportSpecifier(undefined, external_typescript_default.a.createIdentifier(name))))), importNode.moduleSpecifier);
                }
            }
            return null;
        }
    }
    return importNode;
}
const KEEP_IMPORTS = new Set([
    'h',
    'setMode',
    'getMode',
    'Build',
    'Host',
    'getAssetPath',
    'writeTask',
    'readTask',
    'getElement'
]);
const CLASS_DECORATORS_TO_REMOVE = new Set(['Component']);
const MEMBER_DECORATORS_TO_REMOVE = new Set([
    'Element',
    'Event',
    'Listen',
    'Method',
    'Prop',
    'PropDidChange',
    'PropWillChange',
    'State',
    'Watch'
]);

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/transformers/transform-utils.js



const LegacyScriptTarget = external_typescript_default.a.ScriptTarget.ES5;
const ScriptTarget = external_typescript_default.a.ScriptTarget.ES2017;
const ModuleKind = external_typescript_default.a.ModuleKind.ESNext;
function isMemberPrivate(member) {
    if (member.modifiers && member.modifiers.some(m => m.kind === external_typescript_default.a.SyntaxKind.PrivateKeyword || m.kind === external_typescript_default.a.SyntaxKind.ProtectedKeyword)) {
        return true;
    }
    return false;
}
function convertValueToLiteral(val, refs = null) {
    if (refs == null) {
        refs = new WeakSet();
    }
    if (val === String) {
        return external_typescript_default.a.createIdentifier('String');
    }
    if (val === Number) {
        return external_typescript_default.a.createIdentifier('Number');
    }
    if (val === Boolean) {
        return external_typescript_default.a.createIdentifier('Boolean');
    }
    if (val === undefined) {
        return external_typescript_default.a.createIdentifier('undefined');
    }
    if (val === null) {
        return external_typescript_default.a.createIdentifier('null');
    }
    if (Array.isArray(val)) {
        return arrayToArrayLiteral(val, refs);
    }
    if (typeof val === 'object') {
        return objectToObjectLiteral(val, refs);
    }
    return external_typescript_default.a.createLiteral(val);
}
function arrayToArrayLiteral(list, refs) {
    const newList = list.map(l => {
        return convertValueToLiteral(l, refs);
    });
    return external_typescript_default.a.createArrayLiteral(newList);
}
function objectToObjectLiteral(obj, refs) {
    if (refs.has(obj)) {
        return external_typescript_default.a.createIdentifier('undefined');
    }
    refs.add(obj);
    const newProperties = Object.keys(obj).map(key => {
        const prop = external_typescript_default.a.createPropertyAssignment(external_typescript_default.a.createLiteral(key), convertValueToLiteral(obj[key], refs));
        return prop;
    });
    return external_typescript_default.a.createObjectLiteral(newProperties, true);
}
function isDecoratorNamed(propName) {
    return (dec) => {
        return (external_typescript_default.a.isCallExpression(dec.expression) && dec.expression.expression.getText() === propName);
    };
}
function createStaticGetter(propName, returnExpression) {
    return external_typescript_default.a.createGetAccessor(undefined, [external_typescript_default.a.createToken(external_typescript_default.a.SyntaxKind.StaticKeyword)], propName, undefined, undefined, external_typescript_default.a.createBlock([
        external_typescript_default.a.createReturn(returnExpression)
    ]));
}
const getDeclarationParameters = (decorator) => {
    if (!external_typescript_default.a.isCallExpression(decorator.expression)) {
        return [];
    }
    return decorator.expression.arguments.map((arg) => {
        return evalText(arg.getText().trim());
    });
};
function evalText(text) {
    const fnStr = `return ${text};`;
    return new Function(fnStr)();
}
function removeDecorators(node, decoratorNames) {
    if (node.decorators) {
        const updatedDecoratorList = node.decorators.filter(dec => {
            const name = (external_typescript_default.a.isCallExpression(dec.expression) &&
                external_typescript_default.a.isIdentifier(dec.expression.expression) &&
                dec.expression.expression.text);
            return !decoratorNames.has(name);
        });
        if (updatedDecoratorList.length === 0) {
            node.decorators = undefined;
        }
        else if (updatedDecoratorList.length !== node.decorators.length) {
            node.decorators = external_typescript_default.a.createNodeArray(updatedDecoratorList);
        }
    }
}
function getStaticValue(staticMembers, staticName) {
    const staticMember = staticMembers.find(member => member.name.escapedText === staticName);
    if (!staticMember || !staticMember.body || !staticMember.body.statements) {
        return null;
    }
    const rtnStatement = staticMember.body.statements.find(s => s.kind === external_typescript_default.a.SyntaxKind.ReturnStatement);
    if (!rtnStatement || !rtnStatement.expression) {
        return null;
    }
    if (rtnStatement.expression.kind === external_typescript_default.a.SyntaxKind.StringLiteral) {
        return rtnStatement.expression.text;
    }
    if (rtnStatement.expression.kind === external_typescript_default.a.SyntaxKind.TrueKeyword) {
        return true;
    }
    if (rtnStatement.expression.kind === external_typescript_default.a.SyntaxKind.FalseKeyword) {
        return false;
    }
    if (rtnStatement.expression.kind === external_typescript_default.a.SyntaxKind.ObjectLiteralExpression) {
        return objectLiteralToObjectMap(rtnStatement.expression);
    }
    if (rtnStatement.expression.kind === external_typescript_default.a.SyntaxKind.ArrayLiteralExpression && rtnStatement.expression.elements) {
        return arrayLiteralToArray(rtnStatement.expression);
    }
    return null;
}
function arrayLiteralToArray(arr) {
    return arr.elements.map(element => {
        let val;
        switch (element.kind) {
            case external_typescript_default.a.SyntaxKind.ObjectLiteralExpression:
                val = objectLiteralToObjectMap(element);
                break;
            case external_typescript_default.a.SyntaxKind.StringLiteral:
                val = element.text;
                break;
            case external_typescript_default.a.SyntaxKind.TrueKeyword:
                val = true;
                break;
            case external_typescript_default.a.SyntaxKind.FalseKeyword:
                val = false;
                break;
            case external_typescript_default.a.SyntaxKind.Identifier:
                const escapedText = element.escapedText;
                if (escapedText === 'String') {
                    val = String;
                }
                else if (escapedText === 'Number') {
                    val = Number;
                }
                else if (escapedText === 'Boolean') {
                    val = Boolean;
                }
                break;
            case external_typescript_default.a.SyntaxKind.PropertyAccessExpression:
            default:
                val = element;
        }
        return val;
    });
}
function objectLiteralToObjectMap(objectLiteral) {
    const attrs = objectLiteral.properties;
    return attrs.reduce((final, attr) => {
        const attrName = getTextOfPropertyName(attr.name);
        let val;
        switch (attr.initializer.kind) {
            case external_typescript_default.a.SyntaxKind.ArrayLiteralExpression:
                val = arrayLiteralToArray(attr.initializer);
                break;
            case external_typescript_default.a.SyntaxKind.ObjectLiteralExpression:
                val = objectLiteralToObjectMap(attr.initializer);
                break;
            case external_typescript_default.a.SyntaxKind.StringLiteral:
                val = attr.initializer.text;
                break;
            case external_typescript_default.a.SyntaxKind.TrueKeyword:
                val = true;
                break;
            case external_typescript_default.a.SyntaxKind.FalseKeyword:
                val = false;
                break;
            case external_typescript_default.a.SyntaxKind.Identifier:
                const escapedText = attr.initializer.escapedText;
                if (escapedText === 'String') {
                    val = String;
                }
                else if (escapedText === 'Number') {
                    val = Number;
                }
                else if (escapedText === 'Boolean') {
                    val = Boolean;
                }
                break;
            case external_typescript_default.a.SyntaxKind.PropertyAccessExpression:
            default:
                val = attr.initializer;
        }
        final[attrName] = val;
        return final;
    }, {});
}
function getTextOfPropertyName(propName) {
    switch (propName.kind) {
        case external_typescript_default.a.SyntaxKind.Identifier:
            return propName.text;
        case external_typescript_default.a.SyntaxKind.StringLiteral:
        case external_typescript_default.a.SyntaxKind.NumericLiteral:
            return propName.text;
        case external_typescript_default.a.SyntaxKind.ComputedPropertyName:
            const expression = propName.expression;
            if (external_typescript_default.a.isStringLiteral(expression) || external_typescript_default.a.isNumericLiteral(expression)) {
                return propName.expression.text;
            }
    }
    return undefined;
}
class ObjectMap {
}
function getAttributeTypeInfo(baseNode, sourceFile) {
    const allReferences = {};
    getAllTypeReferences(baseNode).forEach(rt => {
        allReferences[rt] = getTypeReferenceLocation(rt, sourceFile);
    });
    return allReferences;
}
function getEntityName(entity) {
    if (external_typescript_default.a.isIdentifier(entity)) {
        return entity.escapedText.toString();
    }
    else {
        return getEntityName(entity.left);
    }
}
function getAllTypeReferences(node) {
    const referencedTypes = [];
    function visit(node) {
        if (external_typescript_default.a.isTypeReferenceNode(node)) {
            referencedTypes.push(getEntityName(node.typeName));
            if (node.typeArguments) {
                node.typeArguments
                    .filter(ta => external_typescript_default.a.isTypeReferenceNode(ta))
                    .forEach((tr) => {
                    const typeName = tr.typeName;
                    referencedTypes.push(typeName.escapedText.toString());
                });
            }
        }
        return external_typescript_default.a.forEachChild(node, visit);
    }
    visit(node);
    return referencedTypes;
}
function validateReferences(config, diagnostics, references, node) {
    Object.keys(references).forEach(refName => {
        const ref = references[refName];
        if (ref.path === '@stencil/core' && MEMBER_DECORATORS_TO_REMOVE.has(refName)) {
            const err = Object(external_utils_["buildError"])(diagnostics);
            Object(external_utils_["augmentDiagnosticWithNode"])(config, err, node);
        }
    });
}
function getTypeReferenceLocation(typeName, sourceFile) {
    const sourceFileObj = sourceFile.getSourceFile();
    // Loop through all top level imports to find any reference to the type for 'import' reference location
    const importTypeDeclaration = sourceFileObj.statements.find(st => {
        const statement = external_typescript_default.a.isImportDeclaration(st) &&
            st.importClause &&
            external_typescript_default.a.isImportClause(st.importClause) &&
            st.importClause.namedBindings &&
            external_typescript_default.a.isNamedImports(st.importClause.namedBindings) &&
            Array.isArray(st.importClause.namedBindings.elements) &&
            st.importClause.namedBindings.elements.find(nbe => nbe.name.getText() === typeName);
        if (!statement) {
            return false;
        }
        return true;
    });
    if (importTypeDeclaration) {
        const localImportPath = importTypeDeclaration.moduleSpecifier.text;
        return {
            location: 'import',
            path: localImportPath
        };
    }
    // Loop through all top level exports to find if any reference to the type for 'local' reference location
    const isExported = sourceFileObj.statements.some(st => {
        // Is the interface defined in the file and exported
        const isInterfaceDeclarationExported = ((external_typescript_default.a.isInterfaceDeclaration(st) &&
            st.name.getText() === typeName) &&
            Array.isArray(st.modifiers) &&
            st.modifiers.some(mod => mod.kind === external_typescript_default.a.SyntaxKind.ExportKeyword));
        const isTypeAliasDeclarationExported = ((external_typescript_default.a.isTypeAliasDeclaration(st) &&
            st.name.getText() === typeName) &&
            Array.isArray(st.modifiers) &&
            st.modifiers.some(mod => mod.kind === external_typescript_default.a.SyntaxKind.ExportKeyword));
        // Is the interface exported through a named export
        const isTypeInExportDeclaration = external_typescript_default.a.isExportDeclaration(st) &&
            external_typescript_default.a.isNamedExports(st.exportClause) &&
            st.exportClause.elements.some(nee => nee.name.getText() === typeName);
        return isInterfaceDeclarationExported || isTypeAliasDeclarationExported || isTypeInExportDeclaration;
    });
    if (isExported) {
        return {
            location: 'local'
        };
    }
    // This is most likely a global type, if it is a local that is not exported then typescript will inform the dev
    return {
        location: 'global',
    };
}
function resolveType(checker, type) {
    const set = new Set();
    parseDocsType(checker, type, set);
    // normalize booleans
    const hasTrue = set.delete('true');
    const hasFalse = set.delete('false');
    if (hasTrue || hasFalse) {
        set.add('boolean');
    }
    let parts = Array.from(set.keys()).sort();
    if (parts.length > 1) {
        parts = parts.map(p => (p.indexOf('=>') >= 0) ? `(${p})` : p);
    }
    if (parts.length > 20) {
        return typeToString(checker, type);
    }
    else {
        return parts.join(' | ');
    }
}
const TYPE_FORMAT_FLAGS = external_typescript_default.a.TypeFormatFlags.NoTruncation |
    external_typescript_default.a.TypeFormatFlags.InTypeAlias |
    external_typescript_default.a.TypeFormatFlags.InElementType;
function typeToString(checker, type) {
    return checker.typeToString(type, undefined, TYPE_FORMAT_FLAGS);
}
function parseDocsType(checker, type, parts) {
    if (type.isUnion()) {
        type.types.forEach(t => {
            parseDocsType(checker, t, parts);
        });
    }
    else {
        const text = typeToString(checker, type);
        parts.add(text);
    }
}
function getModuleFromSourceFile(compilerCtx, tsSourceFile) {
    const sourceFilePath = Object(external_utils_["normalizePath"])(tsSourceFile.fileName);
    const moduleFile = compilerCtx.moduleMap.get(sourceFilePath);
    if (moduleFile != null) {
        return moduleFile;
    }
    const moduleFiles = Array.from(compilerCtx.moduleMap.values());
    return moduleFiles.find(m => m.jsFilePath === sourceFilePath);
}
function getComponentMeta(compilerCtx, tsSourceFile, node) {
    const meta = compilerCtx.nodeMap.get(node);
    if (meta) {
        return meta;
    }
    const moduleFile = getModuleFromSourceFile(compilerCtx, tsSourceFile);
    if (moduleFile != null && node.members != null) {
        const staticMembers = node.members.filter(isStaticGetter);
        const tagName = getComponentTagName(staticMembers);
        if (typeof tagName === 'string') {
            return moduleFile.cmps.find(cmp => cmp.tagName === tagName);
        }
    }
    return undefined;
}
function getComponentTagName(staticMembers) {
    if (staticMembers.length > 0) {
        const tagName = getStaticValue(staticMembers, 'is');
        if (typeof tagName === 'string' && tagName.includes('-')) {
            return tagName;
        }
    }
    return null;
}
function isStaticGetter(member) {
    return (member.kind === external_typescript_default.a.SyntaxKind.GetAccessor &&
        member.modifiers && member.modifiers.some(({ kind }) => kind === external_typescript_default.a.SyntaxKind.StaticKeyword));
}
function createImportDeclaration(importPath, importFnName, importAs = null) {
    return external_typescript_default.a.createImportDeclaration(undefined, undefined, external_typescript_default.a.createImportClause(undefined, external_typescript_default.a.createNamedImports([
        external_typescript_default.a.createImportSpecifier(typeof importFnName === 'string' && importFnName !== importAs ? external_typescript_default.a.createIdentifier(importFnName) : undefined, external_typescript_default.a.createIdentifier(importAs))
    ])), external_typescript_default.a.createLiteral(importPath));
}
function addImports(transformCtx, tsSourceFile, importFnNames, importPath) {
    const { module } = transformCtx.getCompilerOptions();
    if (module === external_typescript_default.a.ModuleKind.CommonJS) {
        // CommonJS
        // const varName = require(importPath).importName;
        const requires = importFnNames.map(importKey => {
            const splt = importKey.split(' as ');
            let varName = importKey;
            let importName = importKey;
            if (splt.length > 1) {
                varName = splt[1];
                importName = splt[0];
            }
            return external_typescript_default.a.createVariableStatement(undefined, external_typescript_default.a.createVariableDeclarationList([
                external_typescript_default.a.createVariableDeclaration(varName, undefined, external_typescript_default.a.createPropertyAccess(external_typescript_default.a.createCall(external_typescript_default.a.createIdentifier('require'), [], [external_typescript_default.a.createLiteral(importPath)]), external_typescript_default.a.createIdentifier(importName)))
            ]));
        });
        return external_typescript_default.a.updateSourceFileNode(tsSourceFile, [
            ...requires,
            ...tsSourceFile.statements
        ]);
    }
    // ESM
    // import { importNames } from 'importPath';
    return external_typescript_default.a.updateSourceFileNode(tsSourceFile, [
        ...importFnNames.map(importKey => {
            const splt = importKey.split(' as ');
            let varName = importKey;
            let importName = importKey;
            if (splt.length > 1) {
                varName = splt[1];
                importName = splt[0];
            }
            return createImportDeclaration(importPath, importName, varName);
        }),
        ...tsSourceFile.statements
    ]);
}
function serializeSymbol(checker, symbol) {
    return {
        tags: symbol.getJsDocTags().map(tag => ({ text: tag.text, name: tag.name })),
        text: external_typescript_default.a.displayPartsToString(symbol.getDocumentationComment(checker)),
    };
}
function serializeDocsSymbol(checker, symbol) {
    const type = checker.getTypeOfSymbolAtLocation(symbol, symbol.valueDeclaration);
    const set = new Set();
    parseDocsType(checker, type, set);
    // normalize booleans
    const hasTrue = set.delete('true');
    const hasFalse = set.delete('false');
    if (hasTrue || hasFalse) {
        set.add('boolean');
    }
    let parts = Array.from(set.keys()).sort();
    if (parts.length > 1) {
        parts = parts.map(p => (p.indexOf('=>') >= 0) ? `(${p})` : p);
    }
    if (parts.length > 20) {
        return typeToString(checker, type);
    }
    else {
        return parts.join(' | ');
    }
}
function isInternal(jsDocs) {
    return jsDocs && jsDocs.tags.some((s) => s.name === 'internal');
}
function isMethod(member, methodName) {
    return external_typescript_default.a.isMethodDeclaration(member) && member.name && member.name.escapedText === methodName;
}
function isAsyncFn(typeChecker, methodDeclaration) {
    if (methodDeclaration.modifiers) {
        if (methodDeclaration.modifiers.some(m => m.kind === external_typescript_default.a.SyntaxKind.AsyncKeyword)) {
            return true;
        }
    }
    const methodSignature = typeChecker.getSignatureFromDeclaration(methodDeclaration);
    const returnType = methodSignature.getReturnType();
    const typeStr = typeChecker.typeToString(returnType, undefined, external_typescript_default.a.TypeFormatFlags.NoTruncation | external_typescript_default.a.TypeFormatFlags.InTypeAlias | external_typescript_default.a.TypeFormatFlags.InElementType);
    return typeStr.includes('Promise<');
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/transformers/validate-types-transform.js



function removeStencilDecorators() {
    return transformCtx => {
        function visit(node) {
            if (external_typescript_default.a.isClassDeclaration(node)) {
                return visitComponentClass(node);
            }
            return external_typescript_default.a.visitEachChild(node, visit, transformCtx);
        }
        return (tsSourceFile) => visit(tsSourceFile);
    };
}
function visitComponentClass(classNode) {
    removeDecorators(classNode, CLASS_DECORATORS_TO_REMOVE);
    classNode.members.forEach((member) => {
        if (Array.isArray(member.decorators)) {
            removeDecorators(member, MEMBER_DECORATORS_TO_REMOVE);
        }
    });
    return classNode;
}
function removeStencilImports() {
    return transformCtx => {
        return tsSourceFile => {
            function visitNode(node) {
                if (node.kind === external_typescript_default.a.SyntaxKind.ImportDeclaration) {
                    return removeStencilImport(node);
                }
                return external_typescript_default.a.visitEachChild(node, visitNode, transformCtx);
            }
            return external_typescript_default.a.visitEachChild(tsSourceFile, visitNode, transformCtx);
        };
    };
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/output-targets/output-utils.js

function getDistEsmDir(config, outputTarget, sourceTarget) {
    return config.sys.path.join(outputTarget.buildDir, 'esm', sourceTarget || '');
}
function getDistEsmComponentsDir(config, outputTarget, sourceTarget) {
    return config.sys.path.join(getDistEsmDir(config, outputTarget, sourceTarget), 'build');
}
function getDistEsmIndexPath(config, outputTarget, sourceTarget) {
    return config.sys.path.join(getDistEsmDir(config, outputTarget, sourceTarget), 'index.js');
}
function getDefineCustomElementsPath(config, outputTarget, sourceTarget) {
    return config.sys.path.join(getDistEsmDir(config, outputTarget, sourceTarget), getDefineEsmFilename(config));
}
function getComponentsEsmBuildPath(config, outputTarget, sourceTarget) {
    return config.sys.path.join(getDistEsmDir(config, outputTarget, sourceTarget), getComponentsEsmFileName(config));
}
function getCoreEsmFileName(config) {
    return `${config.fsNamespace}.core.js`;
}
function getDefineEsmFilename(config) {
    return `${config.fsNamespace}.define.js`;
}
function getComponentsEsmFileName(config) {
    return `${config.fsNamespace}.components.js`;
}
function getLoaderEsmPath(config, outputTarget) {
    return config.sys.path.join(outputTarget.buildDir, outputTarget.esmLoaderPath);
}
function getComponentsDtsSrcFilePath(config) {
    return config.sys.path.join(config.srcDir, GENERATED_DTS);
}
function getComponentsDtsTypesFilePath(config, outputTarget) {
    return config.sys.path.join(outputTarget.typesDir, GENERATED_DTS);
}
function isOutputTargetDist(o) {
    return o.type === DIST;
}
function isOutputTargetDistCollection(o) {
    return o.type === DIST_COLLECTION;
}
function isOutputTargetDistLazy(o) {
    return o.type === DIST_LAZY;
}
function isOutputTargetAngular(o) {
    return o.type === ANGULAR;
}
function isOutputTargetDistLazyLoader(o) {
    return o.type === DIST_LAZY_LOADER;
}
function isOutputTargetDistGlobalStyles(o) {
    return o.type === DIST_GLOBAL_STYLES;
}
function isOutputTargetDistModule(o) {
    return o.type === DIST_MODULE;
}
function isOutputTargetDistSelfContained(o) {
    return o.type === DIST_SELF_CONTAINED;
}
function isOutputTargetHydrate(o) {
    return o.type === DIST_HYDRATE_SCRIPT;
}
function isOutputTargetCustom(o) {
    return o.type === CUSTOM;
}
function isOutputTargetDocs(o) {
    return o.type === DOCS || o.type === DOCS_README || o.type === DOCS_JSON || o.type === DOCS_CUSTOM || o.type === DOCS_VSCODE;
}
function isOutputTargetDocsReadme(o) {
    return o.type === DOCS_README || o.type === DOCS;
}
function isOutputTargetDocsJson(o) {
    return o.type === DOCS_JSON;
}
function isOutputTargetDocsCustom(o) {
    return o.type === DOCS_CUSTOM;
}
function isOutputTargetDocsVscode(o) {
    return o.type === DOCS_VSCODE;
}
function isOutputTargetWww(o) {
    return o.type === WWW;
}
function isOutputTargetStats(o) {
    return o.type === STATS;
}
function isOutputTargetDistTypes(o) {
    return o.type === DIST_TYPES;
}
function getComponentsFromModules(moduleFiles) {
    return Object(external_utils_["sortBy"])(Object(external_utils_["flatOne"])(moduleFiles.map(m => m.cmps)), (c) => c.tagName);
}
function canSkipAppCoreBuild(buildCtx) {
    if (buildCtx.requiresFullBuild) {
        return false;
    }
    if (buildCtx.isRebuild && (buildCtx.hasScriptChanges || buildCtx.hasStyleChanges || buildCtx.hasHtmlChanges)) {
        return false;
    }
    return true;
}
const ANGULAR = `angular`;
const CUSTOM = `custom`;
const DIST = `dist`;
const DIST_COLLECTION = `dist-collection`;
const DIST_TYPES = `dist-types`;
const DIST_HYDRATE_SCRIPT = `dist-hydrate-script`;
const DIST_LAZY = `dist-lazy`;
const DIST_LAZY_LOADER = `dist-lazy-loader`;
const DIST_MODULE = `experimental-dist-module`;
const DIST_SELF_CONTAINED = `dist-self-contained`;
const DIST_GLOBAL_STYLES = 'dist-global-styles';
const DOCS = `docs`;
const DOCS_CUSTOM = 'docs-custom';
const DOCS_JSON = `docs-json`;
const DOCS_README = `docs-readme`;
const DOCS_VSCODE = `docs-vscode`;
const STATS = `stats`;
const WWW = `www`;
const VALID_TYPES = [
    ANGULAR,
    CUSTOM,
    DIST,
    DIST_COLLECTION,
    DIST_GLOBAL_STYLES,
    DIST_HYDRATE_SCRIPT,
    DIST_LAZY,
    DIST_MODULE,
    DIST_SELF_CONTAINED,
    DOCS,
    DOCS_JSON,
    DOCS_README,
    DOCS_VSCODE,
    DOCS_CUSTOM,
    STATS,
    WWW,
];
const GENERATED_DTS = 'components.d.ts';

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/types/stencil-types.js


function updateStencilTypesImports(path, typesDir, dtsFilePath, dtsContent) {
    const dir = path.dirname(dtsFilePath);
    const relPath = path.relative(dir, typesDir);
    let coreDtsPath = path.join(relPath, CORE_FILENAME);
    if (!coreDtsPath.startsWith('.')) {
        coreDtsPath = `./${coreDtsPath}`;
    }
    coreDtsPath = Object(external_utils_["normalizePath"])(coreDtsPath);
    if (dtsContent.includes('@stencil/core')) {
        dtsContent = dtsContent.replace(/(from\s*(:?'|"))@stencil\/core\/internal('|")/g, `$1${coreDtsPath}$2`);
        dtsContent = dtsContent.replace(/(from\s*(:?'|"))@stencil\/core('|")/g, `$1${coreDtsPath}$2`);
    }
    return dtsContent;
}
async function copyStencilCoreDts(config, compilerCtx) {
    const typesOutputTargets = config.outputTargets
        .filter(isOutputTargetDist)
        .filter(o => o.typesDir);
    const srcStencilCoreDts = await config.sys.getClientCoreFile({
        staticName: 'declarations/stencil.core.d.ts'
    });
    return Promise.all(typesOutputTargets.map(outputTarget => {
        const coreDtsFilePath = config.sys.path.join(outputTarget.typesDir, CORE_DTS);
        return compilerCtx.fs.writeFile(coreDtsFilePath, srcStencilCoreDts);
    }));
}
const CORE_FILENAME = `stencil.core`;
const CORE_DTS = `${CORE_FILENAME}.d.ts`;

// CONCATENATED MODULE: ./dist/transpiled-sys-node/compiler/transpile/validate-types-worker.js






function validateTypesWorker(workerCtx, emitDtsFiles, compilerOptions, _currentWorkingDir, collectionNames, rootTsFiles) {
    const results = {
        diagnostics: [],
        dirPaths: [],
        filePaths: []
    };
    if (!workerCtx.tsHost) {
        compilerOptions.outDir = undefined;
        const tsHost = external_typescript_default.a.createCompilerHost(compilerOptions);
        const originalReadFile = tsHost.readFile;
        tsHost.readFile = (filename) => {
            const content = originalReadFile(filename);
            if (filename.endsWith('components.d.ts')) {
                return content.replace('interface ElementTagNameMap ', 'interface _LegacyElementTagNameMap ');
            }
            return content;
        };
        tsHost.writeFile = (outputFileName, data, writeByteOrderMark) => {
            if (!emitDtsFiles) {
                return;
            }
            const filePath = Object(external_utils_["normalizePath"])(outputFileName);
            if (!filePath.endsWith('.d.ts')) {
                return;
            }
            if (!results.filePaths.includes(filePath)) {
                results.filePaths.push(filePath);
            }
            const dir = Object(external_utils_["normalizePath"])(external_path_default.a.dirname(filePath));
            if (!results.dirPaths.includes(dir)) {
                results.dirPaths.push(dir);
            }
            if (typeof compilerOptions.declarationDir === 'string') {
                data = updateStencilTypesImports(external_path_default.a, compilerOptions.declarationDir, outputFileName, data);
            }
            external_typescript_default.a.sys.writeFile(outputFileName, data, writeByteOrderMark);
        };
        workerCtx.tsHost = tsHost;
    }
    const program = external_typescript_default.a.createProgram(rootTsFiles, compilerOptions, workerCtx.tsHost, workerCtx.tsProgram);
    workerCtx.tsProgram = program;
    const compilerCtx = {
        collections: collectionNames.map(n => {
            return { collectionName: n };
        })
    };
    program.emit(undefined, undefined, undefined, true, {
        before: [
            removeStencilDecorators()
        ],
        after: [
            removeStencilImports(),
            removeCollectionImports(compilerCtx)
        ]
    });
    const tsDiagnostics = [];
    program.getSyntacticDiagnostics().forEach(d => tsDiagnostics.push(d));
    program.getSemanticDiagnostics().forEach(d => tsDiagnostics.push(d));
    program.getOptionsDiagnostics().forEach(d => tsDiagnostics.push(d));
    Object(external_utils_["loadTypeScriptDiagnostics"])(results.diagnostics, tsDiagnostics);
    return results;
}

// CONCATENATED MODULE: ./dist/transpiled-sys-node/sys/node/node-sys-worker.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NodeSystemWorker", function() { return node_sys_worker_NodeSystemWorker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createRunner", function() { return createRunner; });
/* concated harmony reexport attachMessageHandler */__webpack_require__.d(__webpack_exports__, "attachMessageHandler", function() { return attachMessageHandler; });








const Terser = __webpack_require__(1110);
class node_sys_worker_NodeSystemWorker {
    constructor() {
        this.workerContext = {};
    }
    copy(copyTasks) {
        return copyTasksWorker(copyTasks);
    }
    optimizeCss(inputOpts) {
        return optimizeCssWorker(inputOpts);
    }
    minifyJs(input, opts) {
        if (opts && opts.mangle && opts.mangle.properties && opts.mangle.properties.regex) {
            opts.mangle.properties.regex = new RegExp(opts.mangle.properties.regex);
        }
        const result = Terser.minify(input, opts);
        const diagnostics = [];
        Object(external_utils_["loadMinifyJsDiagnostics"])(input, result, diagnostics);
        return {
            output: result.code,
            sourceMap: result.sourceMap,
            diagnostics: diagnostics
        };
    }
    prerenderUrl(prerenderRequest) {
        return prerenderWorker(prerenderRequest);
    }
    scopeCss(cssText, scopeId, commentOriginalSelector) {
        return scopeCss(cssText, scopeId, commentOriginalSelector);
    }
    transpileToEs5(cwd, input, inlineHelpers) {
        return transpileToEs5Worker(cwd, input, inlineHelpers);
    }
    validateTypes(compilerOptions, emitDtsFiles, currentWorkingDir, collectionNames, rootTsFiles) {
        return validateTypesWorker(this.workerContext, emitDtsFiles, compilerOptions, currentWorkingDir, collectionNames, rootTsFiles);
    }
}
function createRunner() {
    const instance = new node_sys_worker_NodeSystemWorker();
    return (methodName, args) => {
        // get the method on the loaded module
        const workerFn = instance[methodName];
        if (typeof workerFn !== 'function') {
            throw new Error(`invalid method: ${methodName}`);
        }
        // call the method on the loaded module
        const rtn = workerFn.apply(instance, args);
        if (rtn == null || typeof rtn.then !== 'function') {
            // sync function returned void or a value that's not a promise
            return Promise.resolve(rtn);
        }
        return rtn;
    };
}



/***/ })
/******/ ])));